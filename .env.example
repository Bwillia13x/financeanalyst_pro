# FinanceAnalyst Pro - Frontend Environment Configuration
# Copy this file to .env for local development

# =============================================================================
# SECURITY NOTICE: NO API KEYS IN FRONTEND
# =============================================================================
# 
# This application uses a SECURE BACKEND PROXY architecture.
# ALL financial data API calls are routed through the backend to protect API keys.
# NO sensitive API keys are exposed in the frontend code or environment variables.
#
# API keys are configured ONLY in the backend environment variables.
# See backend/.env.example for API key configuration.
#
# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================

# Backend API Configuration
# URL of the backend API (secure proxy for all financial data)
VITE_API_BASE_URL=http://localhost:3001/api

# Environment mode (development, production, test)
VITE_APP_ENV=development

# Enable debug logging
VITE_DEBUG=true

# Enable frontend data caching
VITE_CACHE_ENABLED=true

# Default company for demo purposes
VITE_DEFAULT_TICKER=AAPL

# =============================================================================
# MONITORING AND ANALYTICS
# =============================================================================

# Google Analytics (optional)
# VITE_GA_TRACKING_ID=your_ga_tracking_id

# Hotjar Analytics (optional)
# VITE_HOTJAR_ID=your_hotjar_id

# Sentry Error and Performance Monitoring (optional)
# VITE_SENTRY_DSN=your_sentry_dsn_here

# Custom monitoring endpoint (optional)
VITE_MONITORING_ENDPOINT=

# Support contact for error UI (optional)
VITE_SUPPORT_EMAIL=

# Enable/disable analytics and error reporting (true/false)
# These flags control initialization in src/utils/monitoring.js
VITE_ENABLE_ANALYTICS=false
VITE_ENABLE_ERROR_REPORTING=false

# Performance Monitoring
VITE_PERFORMANCE_MONITORING=true

# Debug tools
# When true, exposes the /monitoring-debug route even in production
VITE_ENABLE_DEBUG_MODE=false

# Site base URL for SEO (used in meta tags)
VITE_SITE_URL=

# Feature flags
VITE_ENABLE_COLLABORATION=false
VITE_ENABLE_EXPORT=true
VITE_ENABLE_TEMPLATES=true

# Valor-IVX feature flags
# Hide demo/showcase routes by default in production
VITE_ENABLE_DEMOS=false
# Collapse secondary nav into a single drawer on mobile
VITE_MOBILE_SECONDARY_NAV_DRAWER=false
# Extra verbose logging in development only
VITE_VERBOSE_LOGGING=true

# Collaboration WebSocket configuration
# If you have a real collaboration WS server, set its URL here (wss recommended in prod)
# Example: wss://your-domain.com/collaboration
VITE_COLLAB_WS_URL=

# Set to 'true' to run collaboration in MOCK mode (no network)
VITE_COLLAB_WS_MOCK=true

# Direct external fetches from frontend (not recommended); default disabled
VITE_ALLOW_DIRECT_FETCH=false

# =============================================================================
# DEMO MODE CONFIGURATION
# =============================================================================

# The application will work in demo mode if no API keys are provided
# Demo mode uses mock data for all financial calculations and analysis
# Set to 'true' to force demo mode even with valid API keys
VITE_FORCE_DEMO_MODE=false

# =============================================================================
# SECURITY ARCHITECTURE
# =============================================================================

# ✅ SECURE: All financial data API keys are stored in backend environment only
# ✅ SECURE: Frontend makes requests only to backend proxy endpoints
# ✅ SECURE: No sensitive credentials exposed in frontend bundle
# ✅ SECURE: CSP headers prevent unauthorized external requests
# ✅ SECURE: Rate limiting applied at backend level
#
# IMPORTANT:
# - Never add API keys to frontend environment variables
# - All VITE_ variables are PUBLIC and included in the frontend bundle
# - Never commit your actual .env file to version control
# - Backend handles all external API authentication securely

# =============================================================================
# GETTING STARTED
# =============================================================================

# 1. Copy this file: cp .env.example .env
# 2. Configure backend API keys in backend/.env (see backend/.env.example)
# 3. Start the backend server: cd backend && npm start
# 4. Start the frontend server: npm start
# 5. The app will work in demo mode if backend API keys are not configured
#
# The frontend automatically connects to the secure backend proxy.
# No API key configuration needed in frontend environment.
