{"version":3,"file":"AIInsights-Ctd-e3EW.js","sources":["../../src/components/AI/AIInsightsPanel.jsx","../../src/pages/AIInsights.jsx"],"sourcesContent":["import { motion, AnimatePresence } from 'framer-motion';\nimport { Activity, AlertTriangle, BarChart3, Brain, ChevronDown, ChevronRight, Lightbulb, PieChart, RefreshCw, Shield, Sparkles, Target, TrendingUp, Zap } from 'lucide-react';\nimport React, { useEffect, useState } from 'react';\n\nimport aiInsightsService from '../../services/aiInsightsService';\nimport Button from '../ui/Button';\n\n/**\n * AI-powered insights panel providing intelligent financial analysis\n */\n\nconst AIInsightsPanel = ({\n  financialData,\n  industry = 'technology',\n  onInsightClick,\n  className = ''\n}) => {\n  const [insights, setInsights] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [expandedSections, setExpandedSections] = useState(new Set(['summary']));\n\n  useEffect(() => {\n    if (financialData) {\n      generateInsights();\n    }\n  }, [financialData, industry]);\n\n  const generateInsights = async() => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const options = {\n        industry,\n        analysisTypes: ['revenue', 'profitability', 'valuation', 'risk', 'growth', 'efficiency'],\n        includeRecommendations: true,\n        confidenceThreshold: 0.7\n      };\n\n      const generatedInsights = await aiInsightsService.generateInsights(financialData, options);\n      setInsights(generatedInsights);\n    } catch (err) {\n      setError(err.message);\n      console.error('Failed to generate insights:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const toggleSection = (sectionId) => {\n    const newExpanded = new Set(expandedSections);\n    if (newExpanded.has(sectionId)) {\n      newExpanded.delete(sectionId);\n    } else {\n      newExpanded.add(sectionId);\n    }\n    setExpandedSections(newExpanded);\n  };\n\n  const getConfidenceColor = (confidence) => {\n    if (confidence > 0.8) return 'text-green-600 dark:text-green-400';\n    if (confidence > 0.6) return 'text-yellow-600 dark:text-yellow-400';\n    return 'text-red-600 dark:text-red-400';\n  };\n\n  const getHealthColor = (health) => {\n    switch (health) {\n      case 'excellent': return 'text-green-600 dark:text-green-400';\n      case 'good': return 'text-blue-600 dark:text-blue-400';\n      case 'fair': return 'text-yellow-600 dark:text-yellow-400';\n      case 'poor': return 'text-red-600 dark:text-red-400';\n      default: return 'text-slate-600 dark:text-slate-400';\n    }\n  };\n\n  const getImpactIcon = (impact) => {\n    switch (impact) {\n      case 'high': return <TrendingUp className=\"w-4 h-4 text-green-600\" />;\n      case 'medium': return <BarChart3 className=\"w-4 h-4 text-yellow-600\" />;\n      case 'low': return <Activity className=\"w-4 h-4 text-blue-600\" />;\n      default: return <PieChart className=\"w-4 h-4 text-slate-600\" />;\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className={`bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6 ${className}`}>\n        <div className=\"flex items-center space-x-3 mb-4\">\n          <RefreshCw className=\"w-5 h-5 text-blue-600 animate-spin\" />\n          <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white\">\n            Generating AI Insights...\n          </h3>\n        </div>\n        <div className=\"space-y-3\">\n          <div className=\"h-4 bg-slate-200 dark:bg-slate-700 rounded animate-pulse\" />\n          <div className=\"h-4 bg-slate-200 dark:bg-slate-700 rounded animate-pulse w-3/4\" />\n          <div className=\"h-4 bg-slate-200 dark:bg-slate-700 rounded animate-pulse w-1/2\" />\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={`bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6 ${className}`}>\n        <div className=\"flex items-center space-x-3 mb-4\">\n          <AlertTriangle className=\"w-5 h-5 text-red-600\" />\n          <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white\">\n            AI Insights Error\n          </h3>\n        </div>\n        <p className=\"text-red-600 dark:text-red-400 mb-4\">{error}</p>\n        <Button variant=\"outline\" onClick={generateInsights}>\n          Retry Analysis\n        </Button>\n      </div>\n    );\n  }\n\n  if (!insights) {\n    return (\n      <div className={`bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6 ${className}`}>\n        <div className=\"text-center py-8\">\n          <Brain className=\"w-12 h-12 text-slate-300 dark:text-slate-600 mx-auto mb-3\" />\n          <p className=\"text-slate-500 dark:text-slate-400\">\n            Add financial data to generate AI insights\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`bg-white dark:bg-slate-800 rounded-lg shadow-lg ${className}`}>\n      {/* Header */}\n      <div className=\"p-6 border-b border-slate-200 dark:border-slate-700\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\">\n              <Brain className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" />\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white\">\n                AI Financial Insights\n              </h3>\n              <p className=\"text-sm text-slate-500 dark:text-slate-400\">\n                Generated {new Date(insights.generatedAt).toLocaleTimeString()}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <div className={`flex items-center space-x-1 ${getConfidenceColor(insights.confidence)}`}>\n              <Sparkles className=\"w-4 h-4\" />\n              <span className=\"text-sm font-medium\">\n                {Math.round(insights.confidence * 100)}% confidence\n              </span>\n            </div>\n            <Button variant=\"outline\" size=\"sm\" onClick={generateInsights}>\n              <RefreshCw className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Summary Section */}\n      <div className=\"p-6\">\n        <button\n          onClick={() => toggleSection('summary')}\n          className=\"flex items-center justify-between w-full text-left mb-4\"\n        >\n          <h4 className=\"text-lg font-semibold text-slate-900 dark:text-white\">\n            Executive Summary\n          </h4>\n          {expandedSections.has('summary') ? (\n            <ChevronDown className=\"w-5 h-5 text-slate-400\" />\n          ) : (\n            <ChevronRight className=\"w-5 h-5 text-slate-400\" />\n          )}\n        </button>\n\n        <AnimatePresence>\n          {expandedSections.has('summary') && (\n            <motion.div\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: 'auto' }}\n              exit={{ opacity: 0, height: 0 }}\n              className=\"space-y-4\"\n            >\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"bg-slate-50 dark:bg-slate-700 rounded-lg p-4\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <Shield className=\"w-4 h-4 text-blue-600\" />\n                    <span className=\"font-medium text-slate-900 dark:text-white\">\n                      Financial Health\n                    </span>\n                  </div>\n                  <span className={`text-lg font-bold capitalize ${getHealthColor(insights.summary.overallHealth)}`}>\n                    {insights.summary.overallHealth}\n                  </span>\n                </div>\n\n                <div className=\"bg-slate-50 dark:bg-slate-700 rounded-lg p-4\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <Target className=\"w-4 h-4 text-green-600\" />\n                    <span className=\"font-medium text-slate-900 dark:text-white\">\n                      Key Opportunities\n                    </span>\n                  </div>\n                  <span className=\"text-lg font-bold text-slate-900 dark:text-white\">\n                    {insights.opportunities.length}\n                  </span>\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n\n      {/* Insights by Category */}\n      <div className=\"border-t border-slate-200 dark:border-slate-700\">\n        {Object.entries(insights.analyses).map(([category, analysis]) => (\n          <div key={category} className=\"border-b border-slate-200 dark:border-slate-700 last:border-b-0\">\n            <button\n              onClick={() => toggleSection(category)}\n              className=\"flex items-center justify-between w-full p-4 text-left hover:bg-slate-50 dark:hover:bg-slate-700 transition-colors\"\n            >\n              <div className=\"flex items-center space-x-3\">\n                <div className={`p-1 rounded ${analysis.priority === 'high' ? 'bg-red-100 dark:bg-red-900' : 'bg-yellow-100 dark:bg-yellow-900'}`}>\n                  {category === 'revenue' && <TrendingUp className=\"w-4 h-4\" />}\n                  {category === 'profitability' && <BarChart3 className=\"w-4 h-4\" />}\n                  {category === 'valuation' && <PieChart className=\"w-4 h-4\" />}\n                  {category === 'risk' && <Shield className=\"w-4 h-4\" />}\n                  {category === 'growth' && <Zap className=\"w-4 h-4\" />}\n                  {category === 'efficiency' && <Activity className=\"w-4 h-4\" />}\n                </div>\n                <div>\n                  <h5 className=\"font-medium text-slate-900 dark:text-white capitalize\">\n                    {category} Analysis\n                  </h5>\n                  <p className=\"text-sm text-slate-500 dark:text-slate-400\">\n                    {analysis.analysis.insights?.length || 0} insights\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                <span className={`text-xs px-2 py-1 rounded-full ${analysis.priority === 'high' ? 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200' : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'}`}>\n                  {analysis.priority}\n                </span>\n                {expandedSections.has(category) ? (\n                  <ChevronDown className=\"w-4 h-4 text-slate-400\" />\n                ) : (\n                  <ChevronRight className=\"w-4 h-4 text-slate-400\" />\n                )}\n              </div>\n            </button>\n\n            <AnimatePresence>\n              {expandedSections.has(category) && (\n                <motion.div\n                  initial={{ opacity: 0, height: 0 }}\n                  animate={{ opacity: 1, height: 'auto' }}\n                  exit={{ opacity: 0, height: 0 }}\n                  className=\"px-4 pb-4\"\n                >\n                  {/* Analysis Insights */}\n                  {analysis.analysis.insights && (\n                    <div className=\"space-y-2 mb-4\">\n                      {analysis.analysis.insights.map((insight, index) => (\n                        <div key={index} className=\"flex items-start space-x-2\">\n                          <Lightbulb className=\"w-4 h-4 text-yellow-500 mt-0.5 flex-shrink-0\" />\n                          <p className=\"text-sm text-slate-700 dark:text-slate-300\">\n                            {insight}\n                          </p>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n\n                  {/* Suggestions */}\n                  {analysis.suggestions && analysis.suggestions.length > 0 && (\n                    <div className=\"space-y-2\">\n                      <h6 className=\"font-medium text-slate-900 dark:text-white text-sm\">\n                        Recommendations\n                      </h6>\n                      {analysis.suggestions.map((suggestion, index) => (\n                        <button\n                          type=\"button\"\n                          key={index}\n                          className=\"flex items-start space-x-3 w-full text-left p-3 bg-slate-50 dark:bg-slate-700 rounded-lg cursor-pointer hover:bg-slate-100 dark:hover:bg-slate-600 transition-colors\"\n                          onClick={() => onInsightClick?.(suggestion)}\n                        >\n                          {getImpactIcon(suggestion.impact)}\n                          <div className=\"flex-1\">\n                            <h6 className=\"font-medium text-slate-900 dark:text-white text-sm\">\n                              {suggestion.title}\n                            </h6>\n                            <p className=\"text-xs text-slate-600 dark:text-slate-400 mt-1\">\n                              {suggestion.description}\n                            </p>\n                            <div className=\"flex items-center space-x-3 mt-2 text-xs\">\n                              <span className=\"text-slate-500 dark:text-slate-400\">\n                                Impact: <span className=\"font-medium\">{suggestion.impact}</span>\n                              </span>\n                              <span className=\"text-slate-500 dark:text-slate-400\">\n                                Effort: <span className=\"font-medium\">{suggestion.effort}</span>\n                              </span>\n                              <span className=\"text-slate-500 dark:text-slate-400\">\n                                Timeline: <span className=\"font-medium\">{suggestion.timeframe}</span>\n                              </span>\n                            </div>\n                          </div>\n                        </button>\n                      ))}\n                    </div>\n                  )}\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n        ))}\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"p-4 border-t border-slate-200 dark:border-slate-700\">\n        <div className=\"flex space-x-2\">\n          <Button\n            variant=\"primary\"\n            size=\"sm\"\n            onClick={() => onInsightClick?.('generate_report')}\n            className=\"flex items-center space-x-2\"\n          >\n            <Brain className=\"w-4 h-4\" />\n            <span>Generate Report</span>\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={generateInsights}\n            className=\"flex items-center space-x-2\"\n          >\n            <RefreshCw className=\"w-4 h-4\" />\n            <span>Refresh</span>\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AIInsightsPanel;\n","import { Brain, Sparkles, TrendingUp, Target } from 'lucide-react';\nimport React, { useState, useEffect } from 'react';\n\nimport AIInsightsPanel from '../components/AI/AIInsightsPanel';\nimport AIFinancialAssistant from '../components/AIAssistant/AIFinancialAssistant';\nimport SEOHead from '../components/SEO/SEOHead';\nimport { Card } from '../components/ui/Card';\nimport Header from '../components/ui/Header';\nimport { useKeyboardShortcutsContext } from '../components/ui/KeyboardShortcutsProvider';\n\nconst AIInsights = () => {\n  const [selectedAsset, _setSelectedAsset] = useState(null);\n  const [financialData, _setFinancialData] = useState({\n    revenue: 1250000000,\n    netIncome: 187500000,\n    totalAssets: 2100000000,\n    totalDebt: 450000000,\n    marketCap: 3200000000,\n    sector: 'Technology',\n    industry: 'Software'\n  });\n  const { updateCommandContext } = useKeyboardShortcutsContext();\n\n  // Publish contextual command data for AI Insights\n  useEffect(() => {\n    updateCommandContext({\n      page: 'ai-insights',\n      selectedAsset,\n      sector: financialData.sector,\n      industry: financialData.industry\n    });\n  }, [updateCommandContext, selectedAsset, financialData.sector, financialData.industry]);\n\n  const handleInsightClick = (insight) => {\n    console.log('Insight clicked:', insight);\n    // Handle insight interaction\n  };\n\n  return (\n    <div className=\"min-h-screen bg-slate-50 dark:bg-slate-900\">\n      <SEOHead\n        title=\"AI Insights & Analysis | FinanceAnalyst Pro\"\n        description=\"Leverage AI-powered financial analysis, automated insights, and intelligent recommendations for enhanced investment decision-making.\"\n        canonical=\"/ai-insights\"\n        keywords=\"AI financial analysis, automated insights, machine learning finance, intelligent recommendations, AI-powered valuation\"\n      />\n\n      <Header />\n\n      <main className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        {/* Page Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center mb-4\">\n            <Brain className=\"w-8 h-8 text-indigo-600 mr-3\" />\n            <h1 className=\"text-3xl font-bold text-slate-900 dark:text-white\">\n              AI Insights & Analysis\n            </h1>\n          </div>\n          <p className=\"text-slate-600 dark:text-slate-400 max-w-3xl\">\n            Harness the power of artificial intelligence for advanced financial analysis,\n            automated pattern recognition, and intelligent investment recommendations.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-6\">\n          {/* Main AI Insights Panel */}\n          <div className=\"xl:col-span-2\">\n            <Card className=\"p-6\">\n              <div className=\"flex items-center mb-6\">\n                <Sparkles className=\"w-6 h-6 text-indigo-600 mr-2\" />\n                <h2 className=\"text-xl font-semibold text-slate-900 dark:text-white\">\n                  Intelligent Financial Analysis\n                </h2>\n              </div>\n              <AIInsightsPanel\n                financialData={financialData}\n                industry={financialData.industry.toLowerCase()}\n                onInsightClick={handleInsightClick}\n                className=\"border-none shadow-none p-0\"\n              />\n            </Card>\n          </div>\n\n          {/* AI Assistant Sidebar */}\n          <div className=\"xl:col-span-1 space-y-6\">\n            {/* AI Financial Assistant */}\n            <Card className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <Target className=\"w-6 h-6 text-green-600 mr-2\" />\n                <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white\">\n                  AI Assistant\n                </h3>\n              </div>\n              <AIFinancialAssistant />\n            </Card>\n\n            {/* Quick Metrics */}\n            <Card className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <TrendingUp className=\"w-6 h-6 text-blue-600 mr-2\" />\n                <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white\">\n                  Key Metrics\n                </h3>\n              </div>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-slate-600 dark:text-slate-400\">Revenue</span>\n                  <span className=\"font-semibold text-slate-900 dark:text-white\">\n                    ${(financialData.revenue / 1000000).toFixed(0)}M\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-slate-600 dark:text-slate-400\">Net Income</span>\n                  <span className=\"font-semibold text-slate-900 dark:text-white\">\n                    ${(financialData.netIncome / 1000000).toFixed(0)}M\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-slate-600 dark:text-slate-400\">Market Cap</span>\n                  <span className=\"font-semibold text-slate-900 dark:text-white\">\n                    ${(financialData.marketCap / 1000000).toFixed(0)}M\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-slate-600 dark:text-slate-400\">ROE</span>\n                  <span className=\"font-semibold text-green-600\">\n                    {((financialData.netIncome / (financialData.totalAssets - financialData.totalDebt)) * 100).toFixed(1)}%\n                  </span>\n                </div>\n              </div>\n            </Card>\n\n            {/* AI Recommendations */}\n            <Card className=\"p-6\">\n              <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-4\">\n                AI Recommendations\n              </h3>\n              <div className=\"space-y-3\">\n                <div className=\"bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-3\">\n                  <div className=\"text-sm font-medium text-green-800 dark:text-green-200\">\n                    Strong Buy Signal\n                  </div>\n                  <div className=\"text-xs text-green-600 dark:text-green-400 mt-1\">\n                    Revenue growth trajectory indicates continued expansion\n                  </div>\n                </div>\n                <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-3\">\n                  <div className=\"text-sm font-medium text-yellow-800 dark:text-yellow-200\">\n                    Monitor Debt Levels\n                  </div>\n                  <div className=\"text-xs text-yellow-600 dark:text-yellow-400 mt-1\">\n                    Debt-to-equity ratio warrants attention\n                  </div>\n                </div>\n              </div>\n            </Card>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default AIInsights;\n"],"names":["AIInsightsPanel","financialData","industry","onInsightClick","className","insights","setInsights","useState","isLoading","setIsLoading","error","setError","expandedSections","setExpandedSections","Set","useEffect","generateInsights","async","options","analysisTypes","includeRecommendations","confidenceThreshold","generatedInsights","aiInsightsService","err","message","toggleSection","sectionId","newExpanded","has","delete","add","getImpactIcon","impact","jsx","TrendingUp","BarChart3","Activity","PieChart","jsxs","children","RefreshCw","AlertTriangle","Button","variant","onClick","Brain","Date","generatedAt","toLocaleTimeString","confidence","Sparkles","Math","round","size","ChevronDown","ChevronRight","AnimatePresence","motion","div","initial","opacity","height","animate","exit","Shield","health","getHealthColor","summary","overallHealth","Target","opportunities","length","Object","entries","analyses","map","category","analysis","priority","Zap","insight","index","Lightbulb","suggestions","suggestion","type","title","description","effort","timeframe","AIInsights","selectedAsset","_setSelectedAsset","_setFinancialData","revenue","netIncome","totalAssets","totalDebt","marketCap","sector","updateCommandContext","useKeyboardShortcutsContext","page","SEOHead","canonical","keywords","Header","Card","toLowerCase","AIFinancialAssistant","toFixed"],"mappings":"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"}