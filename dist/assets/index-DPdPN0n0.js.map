{"version":3,"mappings":";kfAIA,SAASA,GAAKC,KACZA,EAAAC,KACAA,EAAO,GAAAC,MACPA,EAAQ,eAAAC,UACRA,EAAY,GAAAC,YACZA,EAAc,KACXC,IAEH,MAAMC,EAAgBC,EAAYP,GAElC,OAAKM,EAaHE,MAACF,EAAA,CACCL,OACAC,QACAE,cACAD,eACIE,IAhBJG,MAACC,EAAA,CACCR,OACAC,MAAM,OACNE,cACAD,eACIE,GAcZ,gsBAEAN,EAAKW,UAAY,CACfV,KAAMW,EAAUC,OAAOC,WACvBZ,KAAMU,EAAUG,OAChBZ,MAAOS,EAAUC,OACjBT,UAAWQ,EAAUC,OACrBR,YAAaO,EAAUG,QCtCzB,MAAMC,UAAsBC,EAAMC,UAChC,WAAAC,CAAYb,GACVc,MAAMd,GACNe,KAAKC,MAAQ,CAAEC,UAAU,EAC3B,CAEA,+BAAOC,CAAyBC,GAC9B,MAAO,CAAEF,UAAU,EACrB,CAEA,iBAAAG,CAAkBC,EAAOC,GACvBD,EAAME,iBAAkB,EACxBC,OAAOC,sBAAsBJ,EAAOC,EAEtC,CAEA,MAAAI,GACE,OAAIX,KAAKC,MAAMC,eAEV,OAAInB,UAAU,8DACb6B,SAAAC,OAAC,OAAI9B,UAAU,2BACb6B,SAAA,CAAAxB,MAAC,OAAIL,UAAU,wCACb6B,SAAAC,OAAC,OACCC,MAAM,6BACNC,MAAM,OACNC,OAAO,OACPC,QAAQ,YACRC,KAAK,OAELN,SAAA,CAAAxB,MAAC,QACC+B,EAAE,sIACFC,OAAO,UACPpC,YAAY,IACZqC,iBAAiB,OAEnBjC,MAAC,QACC+B,EAAE,8IACFD,KAAK,YAEP9B,MAAC,QACC+B,EAAE,8IACFD,KAAK,YAEP9B,MAAC,QACC+B,EAAE,qFACFC,OAAO,UACPpC,YAAY,IACZsC,cAAc,QACdC,eAAe,eAIrBV,OAAC,OAAI9B,UAAU,kCACb6B,SAAA,CAAAxB,MAAC,MAAGL,UAAU,wCAAwC6B,SAAA,yBACtDxB,MAAC,KAAEL,UAAU,8CAA8C6B,SAAA,yEAI7DxB,MAAC,OAAIL,UAAU,wCACb6B,SAAAC,OAAC,UACCW,QAAS,KACPf,OAAOgB,SAASC,KAAO,KAEzB3C,UAAU,0IAEV6B,SAAA,CAAAxB,MAACT,GAAKC,KAAK,YAAYC,KAAM,GAAIC,MAAM,SAAS,iBASrDkB,KAAKf,MAAM2B,QACpB,ECieK,MAAMe,EAAsB,IA7iBnC,MACE,WAAA7B,CAAY8B,EAAU,IACpB5B,KAAK4B,QAAU,CAEbC,MAAO,CAEL,iBAAkB,CAAEC,SAAS,GAC7B,sBAAuB,CAAEA,SAAS,GAClC,mBAAoB,CAAEA,SAAS,GAC/B,cAAe,CAAEA,SAAS,GAC1B,gBAAiB,CAAEA,SAAS,GAC5B,oBAAqB,CAAEA,SAAS,GAChC,YAAa,CAAEA,SAAS,GAGxB,qBAAsB,CAAEA,SAAS,MAE9BF,EAAQC,OAEbE,KAAM,CAAC,SAAU,UAAW,WAAY,iBACxCC,QAASJ,EAAQI,SAAW,KAC5BC,SAAUL,EAAQK,UAAY,QAC3BL,GAGL5B,KAAKkC,WAAa,GAClBlC,KAAKmC,gBAAkB,IACzB,CAGA,cAAMC,CAASC,EAAUC,SAAUV,EAAU,IAC3C,MAAMW,EAAc,IACfvC,KAAK4B,WACLA,GAGL,IAEE,MAAMY,QAAgBC,EAAQC,IAAIL,EAASE,GAgB3C,OAdAvC,KAAKmC,gBAAkBK,EACvBxC,KAAKkC,WAAaM,EAAQN,WAG1BlC,KAAK2C,WAAWH,GAQhBxC,KAAK4C,aAAaJ,GAEXA,CACT,OAASlC,GAEP,MAAMA,CACR,CACF,CAGA,4BAAMuC,CAAuBC,EAAUC,EAAgB,WACrD,MAAMV,EAAUC,SAASU,cAAcF,GACvC,IAAKT,EACH,MAAM,IAAIY,MAAM,sBAAsBH,KAIxC,MAuCMI,EAvCmB,CACvBC,YAAe,CACbtB,MAAO,CACL,eAAgB,CAAEC,SAAS,GAC3B,oBAAqB,CAAEA,SAAS,GAChC,uBAAwB,CAAEA,SAAS,GACnC,mBAAoB,CAAEA,SAAS,IAEjCC,KAAM,CAAC,UAAW,eAGpBqB,MAAS,CACPvB,MAAO,CACL,YAAa,CAAEC,SAAS,GACxB,cAAe,CAAEA,SAAS,GAC1B,oBAAqB,CAAEA,SAAS,IAElCC,KAAM,CAAC,YAGTsB,WAAc,CACZxB,MAAO,CACLyB,MAAS,CAAExB,SAAS,GACpB,6BAA8B,CAAEA,SAAS,GACzC,eAAgB,CAAEA,SAAS,IAE7BC,KAAM,CAAC,UAAW,eAGpBwB,MAAS,CACP1B,MAAO,CACL,aAAc,CAAEC,SAAS,GACzB,mBAAoB,CAAEA,SAAS,GAC/B,sBAAuB,CAAEA,SAAS,IAEpCC,KAAM,CAAC,UAAW,mBAIUgB,IAAkB,GAClD,aAAa/C,KAAKoC,SAASC,EAASa,EACtC,CAGA,4BAAMM,GAGJ,MAAMC,EAAoBzD,KAAK0D,uBACzBC,EAAiB,GAGvB,IAAIC,GAAmB,EACvBH,EAAkBI,QAAQ,CAACxB,EAASyB,KAClC,MAAMC,EAAW1B,EAAQ0B,UAAY,EAEjCA,EAAW,GAAKA,GAAYH,GAC9BD,EAAeK,KAAK,CAClB3B,QAASA,EAAQ4B,QACjBC,GAAI7B,EAAQ6B,GACZH,WACAI,SAAUL,EACVM,MAAO,6BAIXR,EAAmBG,IAIrB,MAAMM,EAAwB,GAiB9B,OAhBAZ,EAAkBI,QAAQxB,IACxB,MAAMiC,EAAS7D,OAAO8D,iBAAiBlC,EAAS,UAC1CmC,EAAgC,SAAnBF,EAAOG,SAAyC,QAAnBH,EAAOG,QACjDC,EAAoC,SAArBJ,EAAOK,UACtBC,EAA2C,gBAA3BN,EAAOO,gBAExBL,GAAeE,GAAiBE,GACnCP,EAAsBL,KAAK,CACzB3B,QAASA,EAAQ4B,QACjBC,GAAI7B,EAAQ6B,GACZnF,UAAWsD,EAAQtD,UACnBqF,MAAO,iCAKN,CACLU,uBAAwBrB,EAAkBsB,OAC1CpB,iBACAU,wBACAW,OAAkC,IAA1BrB,EAAeoB,QAAiD,IAAjCV,EAAsBU,OAEjE,CAGA,uBAAME,GAGJ,MAAMC,EAAe5C,SAAS6C,iBAAiB,kEACzCC,EAAiB,GAoCvB,OAlCAF,EAAarB,QAAQxB,IACnB,MAAMiC,EAAS7D,OAAO8D,iBAAiBlC,GACjCgD,EAAYf,EAAOxF,MACnB+F,EAAkBP,EAAOO,gBAG/B,GAAwB,gBAApBA,GAAyD,qBAApBA,EACvC,OAGF,MAAMS,EAAWtF,KAAKuF,uBAAuBF,EAAWR,GAClDW,EAAWC,SAASnB,EAAOkB,UAC3BE,EAAapB,EAAOoB,WAIpBC,EADcH,GAAY,IAAOA,GAAY,KAAsB,SAAfE,GAAyBA,GAAc,KAC7D,EAAM,IAEtCJ,EAAWK,GACbP,EAAepB,KAAK,CAClB3B,QAASA,EAAQ4B,QACjBC,GAAI7B,EAAQ6B,GACZnF,UAAWsD,EAAQtD,UACnBsG,YACAR,kBACAS,SAAUA,EAASM,QAAQ,GAC3BC,SAAUF,EACVH,WACAE,aACAI,KAAMzD,EAAQ0D,aAAaC,UAAU,EAAG,IAAM,UAK7C,CACLC,cAAef,EAAaH,OAC5BK,iBACAJ,OAAkC,IAA1BI,EAAeL,OAE3B,CAGA,2BAAMmB,GAGJ,MAAMC,EAAQ7D,SAAS6C,iBAAiB,QAClCiB,EAAa,GAyCnB,OAvCAD,EAAMtC,QAAQ,CAACwC,EAAMC,KACJD,EAAKlB,iBAAiB,2BAE9BtB,QAAQ0C,IACb,MAAMC,EAAS,GAGExG,KAAKyG,mBAAmBF,IAEvCC,EAAOxC,KAAK,iBAIVuC,EAAMV,WAAa7F,KAAK0G,sBAAsBH,IAChDC,EAAOxC,KAAK,wCAI6B,SAAvCuC,EAAMI,aAAa,iBAA+B3G,KAAK4G,gBAAgBL,IACzEC,EAAOxC,KAAK,qCAIVhE,KAAK6G,iBAAiBN,KAAWA,EAAMO,cACzCN,EAAOxC,KAAK,kDAGVwC,EAAOzB,OAAS,GAClBqB,EAAWpC,KAAK,CACdsC,YACAS,UAAWR,EAAMS,KACjBC,QAASV,EAAMrC,GACfgD,UAAWX,EAAM3H,KACjB4H,eAMD,CACLW,WAAYhB,EAAMpB,OAClBqB,aACApB,OAA8B,IAAtBoB,EAAWrB,OAEvB,CAGA,cAAAqC,GACE,IAAKpH,KAAKmC,gBACR,MAAM,IAAIc,MAAM,+CAGlB,MAAMf,WAAEA,EAAAmF,OAAYA,EAAAC,WAAQA,EAAAC,aAAYA,GAAiBvH,KAAKmC,gBAE9D,MAAO,CACLqF,QAAS,CACPC,WAAA,IAAeC,MAAOC,cACtBC,YAAa1F,EAAW6C,OAASsC,EAAOtC,OAASuC,EAAWvC,OAASwC,EAAaxC,OAClF7C,WAAYA,EAAW6C,OACvBsC,OAAQA,EAAOtC,OACfuC,WAAYA,EAAWvC,OACvBwC,aAAcA,EAAaxC,OAC3B8C,MAAO7H,KAAK8H,+BAEd5F,WAAYA,EAAW6F,IAAIC,IAAA,CACzB9D,GAAI8D,EAAU9D,GACd+D,OAAQD,EAAUC,OAClBC,YAAaF,EAAUE,YACvBC,KAAMH,EAAUG,KAChBC,QAASJ,EAAUI,QACnBC,MAAOL,EAAUK,MAAMtD,OACvBhD,KAAMiG,EAAUjG,QAElBuG,gBAAiBtI,KAAKuI,wBAAwBrG,GAC9CsG,kBAAmBxI,KAAKyI,oCAE5B,CAGA,2BAAAX,GACE,IAAK9H,KAAKmC,gBAAiB,OAAO,EAElC,MAAMD,WAAEA,EAAAmF,OAAYA,GAAWrH,KAAKmC,gBAC9BuG,EAAaxG,EAAW6C,OAASsC,EAAOtC,OAE9C,GAAmB,IAAf2D,EAAkB,OAAO,IAG7B,MAAMC,EAAgB,CAAEC,SAAU,EAAGC,QAAS,EAAGC,SAAU,EAAGC,MAAO,GAC/DC,EAAiB9G,EAAW+G,OAAO,CAACpB,EAAOG,IACxCH,GAASc,EAAcX,EAAUC,SAAW,GAClD,GAEGiB,EAAgC,EAAbR,EACzB,OAAOS,KAAKC,IAAI,EAAG,IAAOJ,EAAiBE,EAAoB,IACjE,CAGA,uBAAAX,CAAwBrG,GACtB,MAAMoG,EAAkB,GA8CxB,OA5CApG,EAAW2B,QAAQmE,IACjB,OAAQA,EAAU9D,IAChB,IAAK,iBACHoE,EAAgBtE,KAAK,CACnBqF,SAAU,gBACVC,SAAU,OACVlF,MAAO,8BACPmF,SAAU,wFACVC,iBAAkB,kFAEpB,MAEF,IAAK,sBACHlB,EAAgBtE,KAAK,CACnBqF,SAAU,kBACVC,SAAU,OACVlF,MAAO,6BACPmF,SAAU,wFACVC,iBAAkB,kFAEpB,MAEF,IAAK,QACHlB,EAAgBtE,KAAK,CACnBqF,SAAU,gBACVC,SAAU,OACVlF,MAAO,sBACPmF,SAAU,4EACVC,iBAAkB,2EAEpB,MAEF,IAAK,oBACHlB,EAAgBtE,KAAK,CACnBqF,SAAU,aACVC,SAAU,SACVlF,MAAO,gDACPmF,SAAU,mDACVC,iBAAkB,6EAMnBlB,CACT,CAGA,iCAAAG,GACE,MAAMgB,EAAW,GAGFnH,SAAS6C,iBAAiB,SAC9BJ,OAAS,GAClB0E,EAASzF,KAAK,CACZ0F,UAAW,cACXC,eAAgB,uGAKLrH,SAAS6C,iBAAiB,2CAC9BJ,OAAS,GAClB0E,EAASzF,KAAK,CACZ0F,UAAW,oBACXC,eAAgB,+EAapB,OARoBrH,SAAS6C,iBAAiB,kCAC9BJ,OAAS,GACvB0E,EAASzF,KAAK,CACZ0F,UAAW,wBACXC,eAAgB,2FAIbF,CACT,CAGA,oBAAA/F,GAUE,OAAOkG,MAAMC,KAAKvH,SAAS6C,iBATA,CACzB,UACA,yBACA,wBACA,yBACA,2BACA,mCAG6D2E,KAAK,MACtE,CAEA,kBAAArD,CAAmBF,GACjB,MAAMrC,EAAKqC,EAAMrC,GACX6F,EAAYxD,EAAMI,aAAa,cAC/BqD,EAAiBzD,EAAMI,aAAa,mBAE1C,GAAIoD,GAAaC,EAAgB,OAAO,EACxC,GAAI9F,GAAM5B,SAASU,cAAc,cAAckB,OAAS,OAAO,EAI/D,QADoBqC,EAAM0D,QAAQ,QAEpC,CAEA,qBAAAvD,CAAsBH,GACpB,MAAM2D,EAAe3D,EAAMI,aAAa,iBAClCwD,EAAe5D,EAAM6D,aAAa,YAClCC,EAAkBrK,KAAKsK,yBAAyB/D,GAEtD,MAAwB,SAAjB2D,GAA2BC,GAAgBE,CACpD,CAEA,wBAAAC,CAAyB/D,GACvB,MAAMjD,EAAQtD,KAAKuK,mBAAmBhE,GACtC,IAAKjD,EAAO,OAAO,EAEnB,MAAMwC,EAAOxC,EAAMyC,aAAe,GAClC,OAAOD,EAAK0E,SAAS,MAAQ1E,EAAK2E,cAAcD,SAAS,WAC3D,CAEA,eAAA5D,CAAgBL,GACd,MAAMmE,EAAkBnE,EAAMI,aAAa,oBAC3C,GAAI+D,EAAiB,CACnB,MAAMC,EAAerI,SAASsI,eAAeF,GAC7C,OAAOC,GAAgBA,EAAa5E,WACtC,CACA,OAAO,CACT,CAEA,gBAAAc,CAAiBN,GAIf,MAHuB,CAAC,SAAU,QAAS,OAGrBiE,SAASjE,EAAMS,OAFd,CAAC,SAAU,QAAS,OAAQ,UAAW,WAAY,SAGpD6D,KAAKjM,GAAQ2H,EAAM3H,MAAM6L,cAAcD,SAAS5L,GACxE,CAEA,kBAAA2L,CAAmBhE,GACjB,MAAMrC,EAAKqC,EAAMrC,GACjB,GAAIA,EAAI,CACN,MAAMZ,EAAQhB,SAASU,cAAc,cAAckB,OACnD,GAAIZ,EAAO,OAAOA,CACpB,CAEA,OAAOiD,EAAM0D,QAAQ,QACvB,CAGA,sBAAA1E,CAAuBuF,EAAQC,GAE7B,MAAMC,EAAOhL,KAAKiL,WAAWH,GACvBI,EAAOlL,KAAKiL,WAAWF,GAEvBI,EAAKnL,KAAKoL,aAAaJ,GACvBK,EAAKrL,KAAKoL,aAAaF,GAK7B,OAHgB/B,KAAKC,IAAI+B,EAAIE,GAGX,MAFHlC,KAAKmC,IAAIH,EAAIE,GAEQ,IACtC,CAEA,UAAAJ,CAAWnM,GAET,MAAMyM,EAAQzM,EAAMyM,MAAM,kCAC1B,OAAIA,EACK,CAAC9F,SAAS8F,EAAM,IAAK9F,SAAS8F,EAAM,IAAK9F,SAAS8F,EAAM,KAE1D,CAAC,EAAG,EAAG,EAChB,CAEA,YAAAH,EAAcI,EAAGC,EAAGC,IAClB,MAAOC,EAAIC,EAAIC,GAAM,CAACL,EAAGC,EAAGC,GAAG3D,IAAI+D,IACjCA,GAAQ,MACI,OAAUA,EAAI,MAAQ3C,KAAK4C,KAAKD,EAAI,MAAS,MAAO,MAElE,MAAO,MAASH,EAAK,MAASC,EAAK,MAASC,CAC9C,CAEA,UAAAlJ,CAAWH,GAOLA,EAAQN,WAAW6C,OAAS,GAE9BvC,EAAQN,WAAW2B,QAAQmE,MAK/B,CAEA,gBAAAgE,CAAiB9J,GACfA,EAAW2B,QAAQmE,IACjBA,EAAUK,MAAMxE,QAAQoI,QAS5B,CAEA,YAAArJ,CAAaJ,GACX,IACE,MAAM0J,EAAa,CACjBzE,UAAWC,KAAKyE,MAChBC,IAAK3L,OAAOgB,SAASC,KACrBQ,WAAYM,EAAQN,WAAW6C,OAC/BsC,OAAQ7E,EAAQ6E,OAAOtC,OACvB8C,MAAO7H,KAAK8H,+BAGRuE,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQ,0BAA4B,MACpFJ,EAAgBrI,KAAKkI,GAGjBG,EAAgBtH,OAAS,IAC3BsH,EAAgBK,OAAO,EAAGL,EAAgBtH,OAAS,IAGrDyH,aAAaG,QAAQ,wBAAyBL,KAAKM,UAAUP,GAC/D,OAAS/L,GAET,CACF,GCziBIuM,EAAgB,CACpBC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,KAAM,KACNC,IAAK,MAQA,SAASC,KAoBhB,WAEE,IAAIC,EAAW,EACf,MAAMC,EAAa,GAEnB,IAAIC,oBAAqBC,IACvB,IAAK,MAAMC,KAASD,EAAUE,aACvBD,EAAME,iBACTN,GAAYI,EAAMG,MAClBN,EAAWtJ,KAAKyJ,IAGpBZ,EAAcC,IAAMO,EACpBQ,EAAe,MAAOR,EAAUC,KAC/BQ,QAAQ,CAAE9G,KAAM,eAAgB+G,UAAU,IAG7C,IAAIR,oBAAqBC,IACvB,IAAK,MAAMC,KAASD,EAAUE,aAO5B,GANmB,sBAAfD,EAAM7O,OACRiO,EAAcE,IAAMU,EAAMO,gBAAkBP,EAAMQ,UAClDJ,EAAe,MAAOhB,EAAcE,IAAK,CAACU,KAIxCA,EAAMS,cAAe,CACvB,MAAMC,EAAWV,EAAMW,cAAgBX,EAAMQ,YACxCpB,EAAcM,KAAOgB,EAAWtB,EAAcM,OACjDN,EAAcM,IAAMgB,EACpBN,EAAe,MAAOM,EAAU,CAACV,IAErC,IAEDK,QAAQ,CAAE9G,KAAM,QAAS+G,UAAU,IAGtC,IAAIR,oBAAqBC,IACvB,IAAK,MAAMC,KAASD,EAAUE,aACT,2BAAfD,EAAM7O,OACRiO,EAAcG,IAAMS,EAAMQ,UAC1BJ,EAAe,MAAOJ,EAAMQ,UAAW,CAACR,OAG3CK,QAAQ,CAAE9G,KAAM,QAAS+G,UAAU,IAGtC,IAAIR,oBAAqBC,IACvB,MAAMa,EAAUb,EAAUE,aACpBY,EAAYD,EAAQA,EAAQtJ,OAAS,GAC3C8H,EAAcI,IAAMqB,EAAUL,UAC9BJ,EAAe,MAAOS,EAAUL,UAAW,CAACK,MAC3CR,QAAQ,CAAE9G,KAAM,2BAA4B+G,UAAU,IAGzD,MAAMQ,EAAkBC,YAAYC,iBAAiB,cAAc,GAC/DF,IACF1B,EAAcK,KAAOqB,EAAgBG,cAAgBH,EAAgBI,aACrEd,EAAe,OAAQhB,EAAcK,KAAM,CAACqB,IAEhD,CA7EEK,GAkF2B,CACzB,wBACA,iBACA,kBACA,qBAGiB/K,QAAQ6F,IACzB8E,YAAYK,KAAK,GAAGnF,aAItBjJ,OAAOqO,qBAAuB,CAACC,EAAeC,KAC5CR,YAAYK,KAAK,GAAGE,SACpBP,YAAYS,QACV,GAAGF,WACH,GAAGA,UACH,GAAGA,SAGLG,EAAmB,mBAAoB,CACrCxF,UAAWqF,EACXC,aACAvH,UAAWC,KAAKyE,SAKpB1L,OAAO0O,4BAA8B,CAACC,EAAiBjB,EAAUkB,KAC/DH,EAAmB,wBAAyB,CAC1ClI,KAAMoI,EACNjB,WACAkB,aACA5H,UAAWC,KAAKyE,SAOpB1L,OAAO6O,iBAAiB,OAAQ,KAC9BC,WAAW,KACT,MAAMC,EAAahB,YAAYC,iBAAiB,cAAc,GAC1De,GA4HV,SAAgCC,GAC9B,MAAMC,EAAO,IACRD,EACHrD,IAAK3L,OAAOgB,SAASC,KACrB+F,UAAWC,KAAKyE,MAChBwD,UAAWC,UAAUD,UACrBE,WAAYC,KAIdC,EAAgB,oBAAqBL,EACvC,CA5HQM,CAVgB,CACdC,IAAKT,EAAWU,gBAAkBV,EAAWW,kBAC7CC,IAAKZ,EAAWa,WAAab,EAAWc,aACxCC,IAAKf,EAAWgB,sBAAwB,EAAIhB,EAAWa,WAAab,EAAWgB,sBAAwB,EACvGC,KAAMjB,EAAWd,cAAgBc,EAAWb,aAC5C+B,SAAUlB,EAAWmB,YAAcnB,EAAWd,cAC9CkC,cAAepB,EAAWqB,YAAcrB,EAAWsB,WACnDC,cAAevB,EAAWwB,aAAexB,EAAWyB,cAKvD,KAML,IAAI1D,oBAAqB2D,IACvB,IAAK,MAAMzD,KAASyD,EAAKxD,aAEvB,GAA4B,WAAxBD,EAAM0D,eACkB,QAAxB1D,EAAM0D,eACkB,QAAxB1D,EAAM0D,eACkB,UAAxB1D,EAAM0D,cAA2B,CAEnC,MAAMC,EAAe,CACnBxS,KAAM6O,EAAM7O,KACZoI,KAAMyG,EAAM0D,cACZtS,KAAM4O,EAAM4D,cAAgB5D,EAAM6D,gBAClCnD,SAAUV,EAAMU,SAChBoD,OAA+B,IAAvB9D,EAAM4D,cAAsB5D,EAAM6D,gBAAkB,EAC5D7J,UAAWC,KAAKyE,QAIdiF,EAAavS,KAAO,KAASuS,EAAajD,SAAW,MACvDqD,EAAqBJ,EAEzB,IAEDtD,QAAQ,CAAE2D,WAAY,CAAC,cAI5B,WACE,IAAIC,EAAmB,EACnBC,EAAuB,EAED,CAAC,QAAS,UAAW,cAE7B9N,QAAQ+N,IACxBtP,SAASgN,iBAAiBsC,EAAYC,IACpC,MAAM5D,EAAYO,YAAYrC,MAG9B2F,sBAAsB,KACpB,MACMC,EADUvD,YAAYrC,MACM8B,EAElCyD,IACAC,GAAwBI,EAGpBA,EAAkB,KA+E5BhC,EAAgB,mBA9Ec,CACpB/I,KAAM4K,EACNI,OAAQH,EAAMG,OAAO/N,QACrBkK,SAAU4D,EACVtK,UAAWC,KAAKyE,WAIrB,CAAE8F,SAAS,MAIhBC,YAAY,KACNR,EAAmB,IAsEzB3B,EAAgB,sBArEa,CACvBoC,MAAOT,EACPU,YAAaT,EAAuBD,EACpCjK,UAAWC,KAAKyE,QAIlBuF,EAAmB,EACnBC,EAAuB,IAExB,IACL,CA5MEU,EAGF,CA4MA,SAASxE,EAAejP,EAAMgP,EAAOS,GAenC0B,EAAgB,YAdH,CACXuC,OAAQ1T,EACRgP,MAAOzE,KAAKoJ,MAAM3E,GAClBS,QAASA,EAAQtG,IAAI0F,IAAK,CACxBQ,UAAWR,EAAMQ,UACjBE,SAAUV,EAAMU,UAAY,KAE9B/B,IAAK3L,OAAOgB,SAASC,KACrB+F,UAAWC,KAAKyE,MAChBwD,UAAWC,UAAUD,UACrBE,WAAYC,KAKhB,CAEA,SAASZ,EAAmBlI,EAAM0I,GAShCK,EAAgB,gBARG,CACjB/I,UACG0I,EACHtD,IAAK3L,OAAOgB,SAASC,KACrBiO,UAAWC,UAAUD,WAKzB,CAeA,SAAS6B,EAAqBJ,GAE5BrB,EAAgB,kBAAmBqB,EACrC,CA6BO,SAASoB,IACd,MAQMtQ,EAAa,GAuBnB,OArBAuQ,OAAOpE,QAVS,CACdpB,IAAK,KACLF,IAAK,IACLD,IAAK,GACLE,IAAK,KACLE,KAAM,MAKgBrJ,QAAQ,EAAEyO,EAAQI,MACxC,MAAM9E,EAAQf,EAAcyF,GACd,OAAV1E,GAAkBA,EAAQ8E,GAC5BxQ,EAAW8B,KAAK,CACdsO,SACA1E,QACA8E,SACAC,OAAQ/E,EAAQ8E,MAKlBxQ,EAAW6C,OAAS,GAEtBgL,EAAgB,oBAAqB,CACnC7N,aACAuF,UAAWC,KAAKyE,MAChBC,IAAK3L,OAAOgB,SAASC,OAIlBQ,CACT,CAGA,SAAS4N,IACP,MAAI,eAAgBF,UACX,CACLgD,cAAehD,UAAUC,WAAW+C,cACpCC,SAAUjD,UAAUC,WAAWgD,SAC/BC,IAAKlD,UAAUC,WAAWiD,KAGvB,IACT,CAEA,SAAS/C,EAAgB/I,EAAM0I,GAI7B,IACE,MAAMqD,EAAgB,CACpB/L,OACA0I,OACAsD,UAAWC,IACXC,OAAQC,KAIJC,EAAe9G,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,MAC3E2G,EAAapP,KAAK+O,GAGdK,EAAarO,OAAS,KACxBqO,EAAa1G,OAAO,EAAG0G,EAAarO,OAAS,KAG/CyH,aAAaG,QAAQ,kBAAmBL,KAAKM,UAAUwG,IAGnDA,EAAarO,QAAU,IACzBsO,GAGJ,CAAE,MAAO/S,GAET,CACF,CAEA,SAAS+S,IACP,IACE,MAAMC,EAAahH,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,MACzE,GAA0B,IAAtB6G,EAAWvO,OAAc,OAMzBtE,OAAO8S,MACTD,EAAWzP,QAAQ2P,IACjB/S,OAAO8S,KAAK,QAASC,EAAKxM,KAAM,CAC9ByM,iBAAkBnH,KAAKM,UAAU4G,EAAK9D,UAM5ClD,aAAakH,WAAW,kBAE1B,CAAE,MAAOpT,GAET,CACF,CAGA,SAAS2S,IACP,IAAID,EAAYW,eAAelH,QAAQ,cAKvC,OAJKuG,IACHA,EAAYtL,KAAKyE,MAAQ,IAAMhD,KAAKyK,SAASC,SAAS,IAAIC,OAAO,EAAG,GACpEH,eAAehH,QAAQ,aAAcqG,IAEhCA,CACT,CAEA,SAASG,IACP,IAAID,EAAS1G,aAAaC,QAAQ,WAKlC,OAJKyG,IACHA,EAAS,aAAexL,KAAKyE,MAAQ,IAAMhD,KAAKyK,SAASC,SAAS,IAAIC,OAAO,EAAG,GAChFtH,aAAaG,QAAQ,UAAWuG,IAE3BA,CACT,CAWO,SAASa,EAAwB/M,EAAM0I,GAU5CK,EAAgB,qBATG,CACjB/I,UACG0I,EACHtD,IAAK3L,OAAOgB,SAASC,KACrBiO,UAAWC,UAAUD,UACrBlI,UAAWC,KAAKyE,OAKpB,CAkCO,SAAS6H,GAAmCjF,EAAekF,GAUhElE,EAAgB,kCATQ,CACtBrG,UAAWqF,KACRkF,EACH7H,IAAK3L,OAAOgB,SAASC,KACrB+F,UAAWC,KAAKyE,MAChBwD,UAAWC,UAAUD,WAKzB,CCzMO,SAASuE,GAA0BnR,GACxC,MAAMoR,EAxSD,SAA0BvS,EAAU,IACzC,MAAME,QACJA,GAAU,EAAAsS,SACVA,GAAW,EAAAC,aACXA,EAAe,KAAAtR,cACfA,EAAgB,UAAAuR,aAChBA,EAAe,KAAAC,UACfA,EAAY,MACV3S,GAEGY,EAASgS,GAAcC,WAAS,OAChCC,EAAWC,GAAgBF,YAAS,IACpCvS,EAAY0S,GAAiBH,WAAS,KACtC5M,EAAOgN,GAAYJ,WAAS,OAC5BK,EAAcC,GAAmBN,WAAS,MAE3CO,EAAaC,SAAO,MACpBC,EAAcD,SAAO,MAGrB7S,EAAW+S,cAAYC,MAAM/S,EAAU,KAAME,EAAc,MAC/D,IAAKT,EAAS,OAAO,KAErB,MAAMuT,EAAgBhT,GAAW2S,EAAWM,SAAWhT,SACvDqS,GAAa,GAEb,IACE,MAAMY,QAAoB5T,EAAoBS,SAASiT,EAAe9S,GAsBtE,OApBAiS,EAAWe,GACXX,EAAcW,EAAYrT,YAAc,IACxC2S,EAASlT,EAAoBmG,+BAC7BiN,EAAgBrN,KAAKyE,OAGrB4H,EAAwB,qBAAsB,CAC5C7R,WAAYqT,EAAYrT,YAAY6C,QAAU,EAC9C8C,MAAOlG,EAAoBmG,8BAC3B/E,gBACA0E,UAAWC,KAAKyE,QAIdoJ,EAAYrT,YAAY6C,OAAS,EACnCuP,IAAeiB,EAAYrT,YAE3BqS,IAAYgB,GAGPA,CACT,OAASjV,GAEP,OAAO,IACT,SACEqU,GAAa,EACf,GACC,CAAC7S,EAASiB,EAAeuR,EAAcC,IAGpC1R,EAAyBsS,cAAYC,MAAMtS,EAAUkE,EAAOjE,KAChE,IAAKjB,EAAS,OAAO,KAErB6S,GAAa,GACb,IACE,MAAMY,QAAoB5T,EAAoBkB,uBAAuBC,EAAUkE,GAe/E,OAbAwN,EAAWe,GACXX,EAAcW,EAAYrT,YAAc,IACxC2S,EAASlT,EAAoBmG,+BAC7BiN,EAAgBrN,KAAKyE,OAGrB4H,EAAwB,oCAAqC,CAC3DhR,cAAeiE,EACf9E,WAAYqT,EAAYrT,YAAY6C,QAAU,EAC9C8C,MAAOlG,EAAoBmG,8BAC3BL,UAAWC,KAAKyE,QAGXoJ,CACT,OAASjV,GAEP,OAAO,IACT,SACEqU,GAAa,EACf,GACC,CAAC7S,EAASiB,IAGPS,EAAyB2R,cAAYC,UACzC,IAAKtT,EAAS,OAAO,KAErB,IACE,MAAM0T,QAAmB7T,EAAoB6B,yBAU7C,OARAuQ,EAAwB,2BAA4B,CAClDtQ,kBAAmB+R,EAAW1Q,uBAC9BnB,eAAgB6R,EAAW7R,gBAAgBoB,QAAU,EACrDV,sBAAuBmR,EAAWnR,uBAAuBU,QAAU,EACnEC,OAAQwQ,EAAWxQ,OACnByC,UAAWC,KAAKyE,QAGXqJ,CACT,OAASlV,GAEP,OAAO,IACT,GACC,CAACwB,IAGEmD,EAAoBkQ,cAAYC,UACpC,IAAKtT,EAAS,OAAO,KAErB,IACE,MAAM2T,QAAwB9T,EAAoBsD,oBASlD,OAPA8O,EAAwB,sBAAuB,CAC7C9N,cAAewP,EAAgBxP,cAC/Bb,eAAgBqQ,EAAgBrQ,gBAAgBL,QAAU,EAC1DC,OAAQyQ,EAAgBzQ,OACxByC,UAAWC,KAAKyE,QAGXsJ,CACT,OAASnV,GAEP,OAAO,IACT,GACC,CAACwB,IAGEoE,EAAwBiP,cAAYC,UACxC,IAAKtT,EAAS,OAAO,KAErB,IACE,MAAM4T,QAAoB/T,EAAoBuE,wBAS9C,OAPA6N,EAAwB,0BAA2B,CACjD5M,WAAYuO,EAAYvO,WACxBf,WAAYsP,EAAYtP,YAAYrB,QAAU,EAC9CC,OAAQ0Q,EAAY1Q,OACpByC,UAAWC,KAAKyE,QAGXuJ,CACT,OAASpV,GAEP,OAAO,IACT,GACC,CAACwB,IAGEsF,EAAiB+N,cAAY,KACjC,IAAK3S,EAAS,OAAO,KAErB,IACE,MAAMmT,EAAShU,EAAoByF,iBAUnC,OAPA2M,EAAwB,iCAAkC,CACxDlM,MAAO8N,EAAOnO,QAAQK,MACtB3F,WAAYyT,EAAOnO,QAAQtF,WAC3B0F,YAAa+N,EAAOnO,QAAQI,YAC5BH,UAAWC,KAAKyE,QAGXwJ,CACT,OAASrV,GAEP,OAAO,IACT,GACC,CAACkC,IAkCJ,OA/BAoT,YAAU,KACR,IAAK9T,IAAYsS,EAAU,OAE3B,MAAMyB,EAAc,KAClBzT,KAWF,OAPAyT,IAGIxB,IACFa,EAAYI,QAAUpD,YAAY2D,EAAaxB,IAG1C,KACDa,EAAYI,SACdQ,cAAcZ,EAAYI,WAG7B,CAACxT,EAASsS,EAAUC,EAAcjS,IAGrCwT,YAAU,IACD,KACDV,EAAYI,SACdQ,cAAcZ,EAAYI,UAG7B,IAEI,CAEL9S,UACAN,aACA2F,QACA6M,YACAI,eAGA1S,WACAS,yBACAW,yBACAyB,oBACAiB,wBACAkB,iBAGA4N,aAEJ,CAuEwBe,CAAiB,CACrChT,gBACAqR,UAAU,EACVC,aAAc,IACdC,aAAepS,QAOX8T,EAAwBb,cAAYC,UACxC,MAAM5S,EAAU,GAEhB,IAaE,OAXAA,EAAQyT,kBAAoB9B,EAAc3Q,yBAG1ChB,EAAQ0T,oBAAsB/B,EAAclP,oBAG5CzC,EAAQ2T,wBAA0BhC,EAAcjO,wBAGhD1D,EAAQmT,OAASxB,EAAc/M,iBAExB5E,CACT,OAASlC,GAEP,OAAO,IACT,GACC,CAAC6T,EAAepR,IAEnB,MAAO,IACFoR,EACH6B,wBAEJ,CDkGA9D,YAAYmB,EAAoB,KAGhC5S,OAAO6O,iBAAiB,eAAgB,KACtC+D,MErbF,MAAM+C,GAAuB,EAAGC,aAAY,EAAOC,cACjD,MAAOC,EAAeC,GAAoB/B,WAAS,OAC5CgC,EAAiBC,GAAsBjC,WAAS,MAChDkC,EAAcC,GAAmBnC,YAAS,IAC1CoC,EAAgBC,GAAqBrC,WAAS,KAE/CsC,OACJA,EACAC,gBAAiBC,EACjBC,eAAgBC,EAAAC,YAChBA,GDwUG,SAAiCxV,EAAU,IAChD,MAAMyV,UACJA,EAAY,GAAAC,kBACZA,GAAoB,EAAAC,gBACpBA,EAAkB,KAChB3V,GAEG+U,EAAcC,GAAmBnC,YAAS,IAC1CsC,EAAQS,GAAa/C,WAAS,IAC/BS,EAAcD,SAAO,MAErB+B,EAAkB7B,cAAY,KAClC,GAAIwB,EAAc,OAElBC,GAAgB,GAEhB,MAAMa,EAAUrC,UACd,IACE,MAAM5S,QAAgBb,EAAoBS,SAASE,UAC7CuF,EAAQlG,EAAoBmG,8BAGlC,GAAID,EAAQwP,EAAW,CACrB,MAAMK,EAAQ,CACZxT,GAAIwD,KAAKyE,MACTnF,KAAM,YACN2Q,QAAS,wBAAwB9P,0BAA8BwP,KAC/DxP,QACA3F,WAAYM,EAAQN,YAAY6C,QAAU,EAC1C0C,UAAWC,KAAKyE,OAGlBqL,EAAUI,GAAQ,IAAIA,EAAMF,GAK9B,CAGA,MAAMG,EAAqBrV,EAAQN,YAAY4V,UAAyB,aAAbC,EAAE9P,SAA0B,GACvF,GAAI4P,EAAmB9S,OAAS,GAAKuS,EAAmB,CACtD,MAAMI,EAAQ,CACZxT,GAAIwD,KAAKyE,MACTnF,KAAM,sBACN2Q,QAAS,GAAGE,EAAmB9S,iDAC/B7C,WAAY2V,EACZpQ,UAAWC,KAAKyE,OAGlBqL,EAAUI,GAAQ,IAAIA,EAAMF,GAE9B,CAGA3D,EAAwB,2BAA4B,CAClDlM,QACA3F,WAAYM,EAAQN,YAAY6C,QAAU,EAC1C8S,mBAAoBA,EAAmB9S,OACvC0C,UAAWC,KAAKyE,OAGpB,OAAS7L,GAET,GAIFmX,IAGAvC,EAAYI,QAAUpD,YAAYuF,EAASF,IAC1C,CAACZ,EAAcU,EAAWC,EAAmBC,IAE1CL,EAAiB/B,cAAY,KACjCyB,GAAgB,GACZ1B,EAAYI,UACdQ,cAAcZ,EAAYI,SAC1BJ,EAAYI,QAAU,OAEvB,IAEG8B,EAAcjC,cAAY,KAC9BqC,EAAU,KACT,IAWH,OARA5B,YAAU,IACD,KACDV,EAAYI,SACdQ,cAAcZ,EAAYI,UAG7B,IAEI,CACLqB,eACAI,SACAC,kBACAE,iBACAE,cAEJ,CC7aMY,CAAwB,CAC1BX,UAAWR,EACXU,gBAAiBd,IAIbwB,EAAc9C,cAAY,KAC9B,IACE,MAAMzF,EFieL,WACL,MAAMwI,EAAuB5L,KAAKC,MAAMC,aAAaC,QAAQ,0BAA4B,MACnF0L,EAAiB7L,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,MAGvE2L,EAAsBF,EAAqBG,WAC3CC,EAAWF,EAAoBnP,OAAO,CAACsP,EAAK9K,IAAU8K,EAAM9K,EAAM5F,MAAO,GAAKuQ,EAAoBrT,QAAU,EAC5GyT,EAAgBJ,EAAoBnP,OAAO,CAACsP,EAAK9K,IAAU8K,EAAM9K,EAAMvL,WAAY,GAAKkW,EAAoBrT,QAAU,EAGtH0T,EAAqBN,EACxBL,OAAOtE,GAAsB,uBAAdA,EAAKxM,MACpBqR,OAAM,IACNtQ,IAAIyL,GAAQA,EAAK9D,MAEdgJ,EAAkBP,EACrBL,OAAOtE,GAAsB,cAAdA,EAAKxM,MACpBqR,OAAM,IACNtQ,IAAIyL,GAAQA,EAAK9D,MAEpB,MAAO,CACLiJ,UAAW9L,EACX+L,iBAAkBpG,IAClB2B,cAAe,CACb0E,aAAcT,EAAoBA,EAAoBrT,OAAS,IAAI8C,OAAS,EAC5EiR,aAAc3P,KAAKoJ,MAAM+F,GACzBS,kBAAmB5P,KAAKoJ,MAAMiG,GAC9BQ,QAASZ,EACTa,OAAQ,CACNC,eAAgBd,EAAoBrT,QAAU,GAC5CqT,EAAoBA,EAAoBrT,OAAS,GAAG8C,MACpDuQ,EAAoBA,EAAoBrT,OAAS,GAAG8C,QAG1D2G,YAAa,CACX2K,cAAeV,EACfW,gBAAiBV,GAEnBjR,UAAWC,KAAKyE,MAEpB,CEzgBmBkN,GACb7C,EAAiB9G,EACnB,OAASpP,GAET,GACC,IAGGgZ,EAAmBnE,cAAY,KAC/BwB,GACFQ,IACAP,GAAgB,KAEhBK,IACAL,GAAgB,KAEjB,CAACD,EAAcM,EAA8BE,IAGhDvB,YAAU,KACR,IAAKS,EAAW,OAGhBjJ,IAGA6K,IAGA,MAAMsB,EAAWrH,YAAY+F,EAAaxB,GAE1C,MAAO,KACLX,cAAcyD,KAEf,CAAClD,EAAW4B,EAAaxB,IAG5B,MAAM+C,EAAe,CAAC5L,EAAO6L,EAAO,OAC9B7L,QAA8C,MAC7B,iBAAVA,EACF,GAAGzE,KAAKoJ,MAAM3E,KAAS6L,IAEzB7L,EA+BT,IAAKyI,IAAcE,EACjB,OAAO,KAGT,MAAMoC,UAAEA,EAAAC,iBAAWA,EAAAzE,cAAkBA,EAAA3F,YAAeA,GAAgB+H,EAEpE,aACG,OAAIxX,UAAU,iFACb6B,SAAAC,OAAC,OAAI9B,UAAU,8EAEb6B,SAAA,CAAAC,OAAC,OAAI9B,UAAU,iEACb6B,SAAA,CAAAC,OAAC,OACCD,SAAA,CAAAxB,MAAC,MAAGL,UAAU,mCAAmC6B,SAAA,0BACjDxB,MAAC,KAAEL,UAAU,6BAA6B6B,SAAA,mDAI5CC,OAAC,OAAI9B,UAAU,8BACb6B,SAAA,CAAAxB,MAAC,UACCoC,QAAS8X,EACTva,UAAW,6CACT4X,EACI,2CACA,kDAGL/V,WAAe,kBAAoB,qBAEtCxB,MAAC,UACCoC,QAASyW,EACTlZ,UAAU,uFACX6B,SAAA,YAGDC,OAAC,UACCW,QAAS8U,EACTvX,UAAU,oCAEV6B,SAAA,CAAAxB,MAAC,QAAKL,UAAU,UAAU6B,SAAA,UAC1BxB,MAAC,OACCL,UAAU,UAAUmC,KAAK,OAAOD,QAAQ,YACxCG,OAAO,eAEPR,SAAAxB,MAAC,QACCkC,cAAc,QAAQC,eAAe,QAAQvC,YAAa,EAC1DmC,EAAE,oCAOZN,OAAC,OAAI9B,UAAU,gBAEb6B,SAAA,CAAAC,OAAC,WACCD,SAAA,CAAAxB,MAAC,MAAGL,UAAU,2CAA2C6B,SAAA,oBACzDxB,MAAC,OAAIL,UAAU,uDACZ6B,SAAA6R,OAAOpE,QAAQsK,GAAW5Q,IAAI,EAAEuK,EAAQ1E,MACvC,MAAM8L,EArFI,EAACpH,EAAQ1E,KAC/B,MAQMyJ,EARa,CACjBpK,IAAK,CAAE0M,KAAM,KAAMC,KAAM,KACzB7M,IAAK,CAAE4M,KAAM,IAAKC,KAAM,KACxB9M,IAAK,CAAE6M,KAAM,GAAKC,KAAM,KACxB5M,IAAK,CAAE2M,KAAM,KAAMC,KAAM,KACzB1M,KAAM,CAAEyM,KAAM,IAAKC,KAAM,OAGEtH,GAC7B,OAAK+E,GAAuB,OAAVzJ,EAEdA,GAASyJ,EAAUsC,KAAa,OAChC/L,GAASyJ,EAAUuC,KAAa,oBAC7B,OAJkC,WA2EdC,CAAgBvH,EAAQ1E,GACjCkM,EApEG,CAACJ,IACtB,OAAQA,GACN,IAAK,OAAQ,MAAO,8BACpB,IAAK,oBAAqB,MAAO,gCACjC,IAAK,OAAQ,MAAO,0BACpB,QAAS,MAAO,8BA+DcK,CAAeL,GAEnC,OACE7Y,OAAC,OAAiB9B,UAAU,iDAC1B6B,SAAA,CAAAC,OAAC,OAAI9B,UAAU,oCACb6B,SAAA,CAAAxB,MAAC,QAAKL,UAAU,oCAAqC6B,SAAA0R,UACpD,QAAKvT,UAAW,8CAA8C+a,IAC5DlZ,SAAA8Y,OAGLta,MAAC,OAAIL,UAAU,OACb6B,eAAC,QAAK7B,UAAU,mCACb6B,SAAA4Y,EAAa5L,EAAkB,QAAX0E,EAAmB,GAAK,YATzCA,UAmBjBsG,EAAiB7T,OAAS,GACzBlE,OAAC,WACCD,SAAA,CAAAxB,MAAC,MAAGL,UAAU,2CAA2C6B,SAAA,wCACxD,OAAI7B,UAAU,iDACb6B,SAAAxB,MAAC,OAAIL,UAAU,YACZ6B,SAAAgY,EAAiB7Q,IAAI,CAACC,EAAWlE,IAChCjD,OAAC,OAAgB9B,UAAU,oCACzB6B,SAAA,CAAAC,OAAC,QAAK9B,UAAU,mCACb6B,SAAA,CAAAoH,EAAUsK,OAAO,KAAGkH,EAAaxR,EAAU4F,UAE9C/M,OAAC,QAAK9B,UAAU,uBAAuB6B,SAAA,mBACrB4Y,EAAaxR,EAAU2K,aALjC7O,kBAenB,WACClD,SAAA,CAAAxB,MAAC,MAAGL,UAAU,2CAA2C6B,SAAA,kBACzDC,OAAC,OAAI9B,UAAU,wCACb6B,SAAA,CAAAC,OAAC,OAAI9B,UAAU,iDACb6B,SAAA,CAAAxB,MAAC,MAAGL,UAAU,yCAAyC6B,SAAA,kBACvDC,OAAC,OAAI9B,UAAU,oBACb6B,SAAA,CAAAxB,MAAC,QAAKL,UAAU,mCACb6B,SAAAuT,EAAc0E,eAEjBzZ,MAAC,QAAKL,UAAU,6BAA6B6B,SAAA,SAC5CuT,EAAc8E,OAAOC,gBACpB9Z,MAAC,QAAKL,UAAU,sBACd6B,SAAAxB,MAAC,OAAIL,UAAU,UAAUmC,KAAK,eAAeD,QAAQ,YACnDL,SAAAxB,MAAC,QAAK4a,SAAS,UAAU7Y,EAAE,yIAAyI8Y,SAAS,sBAOvLpZ,OAAC,OAAI9B,UAAU,iDACb6B,SAAA,CAAAxB,MAAC,MAAGL,UAAU,yCAAyC6B,SAAA,uBACvDxB,MAAC,QAAKL,UAAU,mCACb6B,WAAcmY,uBAInBlY,OAAC,OAAI9B,UAAU,iDACb6B,SAAA,CAAAxB,MAAC,MAAGL,UAAU,yCAAyC6B,SAAA,kBACvDxB,MAAC,QAAKL,UAAU,mCACb6B,WAAckY,qBAMpB/B,EAAOhS,OAAS,GACflE,OAAC,OAAI9B,UAAU,4DACb6B,SAAA,CAAAC,OAAC,OAAI9B,UAAU,yCACb6B,SAAA,CAAAxB,MAAC,MAAGL,UAAU,sCAAsC6B,SAAA,kBACpDxB,MAAC,UACCoC,QAAS4V,EACTrY,UAAU,gDACX6B,SAAA,iBAIHC,OAAC,OAAI9B,UAAU,YACZ6B,SAAA,CAAAmW,EAAOsB,MAAM,EAAG,GAAGtQ,IAAK2P,GACvB7W,OAAC,OAAmB9B,UAAU,0BAC5B6B,SAAA,CAAAC,OAAC,QAAK9B,UAAU,cAAe6B,SAAA,CAAA8W,EAAM1Q,KAAK,OAAQ,IAAE0Q,EAAMC,UADlDD,EAAMxT,KAIjB6S,EAAOhS,OAAS,GACflE,OAAC,OAAI9B,UAAU,0BAA0B6B,SAAA,QAClCmW,EAAOhS,OAAS,EAAE,8BASlCyJ,EAAY2K,cAAcpU,OAAS,UACjC,WACCnE,SAAA,CAAAxB,MAAC,MAAGL,UAAU,2CAA2C6B,SAAA,8BACzDxB,MAAC,OAAIL,UAAU,6DACb6B,SAAAxB,MAAC,OAAIL,UAAU,2BACb6B,SAAAC,OAAC,SAAM9B,UAAU,sCACf6B,SAAA,CAAAxB,MAAC,SAAML,UAAU,aACf6B,SAAAC,OAAC,MACCD,SAAA,CAAAxB,MAAC,MAAGL,UAAU,iFAAiF6B,SAAA,SAG/FxB,MAAC,MAAGL,UAAU,iFAAiF6B,SAAA,cAG/FxB,MAAC,MAAGL,UAAU,iFAAiF6B,SAAA,UAG/FxB,MAAC,MAAGL,UAAU,iFAAiF6B,SAAA,cAKnGxB,MAAC,SAAML,UAAU,oCACd6B,WAAYuY,cAAcd,MAAM,EAAG,IAAItQ,IAAI,CAACuK,EAAQxO,WAClD,MACClD,SAAA,CAAAxB,MAAC,MAAGL,UAAU,gEACX6B,SAAA0R,EAAOtL,OAEV5H,MAAC,MAAGL,UAAU,oDACX6B,WAAO8I,WAAa4I,EAAOvP,eAAiB,QAE/C3D,MAAC,MAAGL,UAAU,oDACX6B,cAAsB,IAAtB0R,EAAOpQ,WAA2B,GAAGoQ,EAAOpQ,6BAC1B,IAAjBoQ,EAAOzK,MAAsB,UAAUyK,EAAOzK,aACxB,IAApByK,EAAOnE,SAAyB,GAAGhF,KAAKoJ,MAAMD,EAAOnE,cAAgB,QAE3E/O,MAAC,MAAGL,UAAU,oDACX6B,SAAA,IAAI8G,KAAK4K,EAAO7K,WAAWyS,yBAbvBpW,uBAyBtB,WACClD,SAAA,CAAAxB,MAAC,MAAGL,UAAU,2CAA2C6B,SAAA,wBACzDC,OAAC,OAAI9B,UAAU,wCACb6B,SAAA,CAAAC,OAAC,OAAI9B,UAAU,iDACb6B,SAAA,CAAAxB,MAAC,SAAML,UAAU,+CAA+C6B,SAAA,+BAGhEC,OAAC,UACC+M,MAAO6I,EAAkB,IACzB0D,SAAWC,GAAM1D,EAA8C,IAA3BjR,SAAS2U,EAAEpI,OAAOpE,QACtD7O,UAAU,6DAEV6B,SAAA,CAAAxB,MAAC,UAAOwO,MAAO,GAAIhN,SAAA,eACnBxB,MAAC,UAAOwO,MAAO,GAAIhN,SAAA,eACnBxB,MAAC,UAAOwO,MAAO,GAAIhN,SAAA,aACnBxB,MAAC,UAAOwO,MAAO,IAAKhN,SAAA,oBAIxBC,OAAC,OAAI9B,UAAU,iDACb6B,SAAA,CAAAxB,MAAC,SAAML,UAAU,+CAA+C6B,SAAA,kCAGhEC,OAAC,UACC+M,MAAOiJ,EACPsD,SAAWC,GAAMtD,EAAkBrR,SAAS2U,EAAEpI,OAAOpE,QACrD7O,UAAU,6DAEV6B,SAAA,CAAAxB,MAAC,UAAOwO,MAAO,GAAIhN,SAAA,gBACnBxB,MAAC,UAAOwO,MAAO,GAAIhN,SAAA,kBACnBxB,MAAC,UAAOwO,MAAO,GAAIhN,SAAA,iBACnBxB,MAAC,UAAOwO,MAAO,GAAIhN,SAAA,2CCrV/ByZ,GAAc,EAAGzZ,cACdxB,MAACkb,GAAgB1Z,aC0V1B,MAAA2Z,GAAe,IAtVf,MACE,WAAAza,GACEE,KAAKwa,QAAU,iCACfxa,KAAKya,OAASC,EAAMC,OAAO,CACzBH,QAASxa,KAAKwa,QACdI,QAAS,KACTC,QAAS,CACP,eAAgB,sBAKpB7a,KAAKya,OAAOK,aAAaC,SAASC,IAC/BD,GAAaA,EACbza,GAEQ2a,QAAQC,OAAO5a,GAG5B,CAWA,cAAM6a,CAASC,GAEb,aADuBpb,KAAKya,OAAOY,IAAI,sBAAsBD,EAAOE,kBACpD5L,IAClB,CASA,uBAAM6L,CAAkBH,EAAQI,EAAQ,MAAOjC,EAAW,MAIxD,aAHuBvZ,KAAKya,OAAOY,IAAI,2BAA2BD,EAAOE,gBAAiB,CACxFG,OAAQ,CAAED,QAAOjC,eAEH7J,IAClB,CAQA,qBAAMgM,CAAgBN,EAAQ7B,EAAW,QAIvC,aAHuBvZ,KAAKya,OAAOY,IAAI,yBAAyBD,EAAOE,gBAAiB,CACtFG,OAAQ,CAAElC,eAEI7J,IAClB,CAOA,oBAAMiM,CAAeC,GAInB,aAHuB5b,KAAKya,OAAOoB,KAAK,qBAAsB,CAC5DD,QAASA,EAAQ7T,IAAI+T,GAAKA,EAAER,kBAEd5L,IAClB,CAaA,wBAAMqM,CAAmBX,EAAQY,EAAS,SAAUC,EAAQ,GAI1D,aAHuBjc,KAAKya,OAAOY,IAAI,gCAAgCD,EAAOE,gBAAiB,CAC7FG,OAAQ,CAAEO,SAAQC,YAEJvM,IAClB,CASA,qBAAMwM,CAAgBd,EAAQY,EAAS,SAAUC,EAAQ,GAIvD,aAHuBjc,KAAKya,OAAOY,IAAI,iCAAiCD,EAAOE,gBAAiB,CAC9FG,OAAQ,CAAEO,SAAQC,YAEJvM,IAClB,CASA,0BAAMyM,CAAqBf,EAAQY,EAAS,SAAUC,EAAQ,GAI5D,aAHuBjc,KAAKya,OAAOY,IAAI,mCAAmCD,EAAOE,gBAAiB,CAChGG,OAAQ,CAAEO,SAAQC,YAEJvM,IAClB,CASA,wBAAM0M,CAAmBhB,EAAQY,EAAS,SAAUC,EAAQ,GAI1D,aAHuBjc,KAAKya,OAAOY,IAAI,gCAAgCD,EAAOE,gBAAiB,CAC7FG,OAAQ,CAAEO,SAAQC,YAEJvM,IAClB,CAWA,uBAAM2M,CAAkBjB,GAEtB,aADuBpb,KAAKya,OAAOY,IAAI,yBAAyBD,EAAOE,kBACvD5L,IAClB,CAQA,sBAAM4M,CAAiBlB,EAAQa,EAAQ,IAIrC,aAHuBjc,KAAKya,OAAOY,IAAI,uBAAuBD,EAAOE,gBAAiB,CACpFG,OAAQ,CAAEQ,YAEIvM,IAClB,CAOA,qBAAM6M,CAAgBnB,GAEpB,aADuBpb,KAAKya,OAAOY,IAAI,qBAAqBD,EAAOE,kBACnD5L,IAClB,CAQA,iBAAM8M,CAAYpB,EAAQa,EAAQ,GAIhC,aAHuBjc,KAAKya,OAAOY,IAAI,0BAA0BD,EAAOE,gBAAiB,CACvFG,OAAQ,CAAEQ,YAEIvM,IAClB,CAcA,iBAAM+M,CAAYC,EAAUT,EAAQ,IAAKU,EAAY,KAAMC,EAAU,MACnE,MAAMnB,EAAS,CAAEQ,SACbU,MAAkBE,WAAaF,GAC/BC,MAAgBE,SAAWF,GAK/B,aAHuB5c,KAAKya,OAAOY,IAAI,uBAAuBqB,EAASpB,gBAAiB,CACtFG,YAEc/L,IAClB,CAMA,2BAAMqN,GAEJ,aADuB/c,KAAKya,OAAOY,IAAI,8BACvB3L,IAClB,CAMA,sBAAMsN,GAEJ,aADuBhd,KAAKya,OAAOY,IAAI,kCACvB3L,IAClB,CAUA,qBAAMuN,GAEJ,aADuBjd,KAAKya,OAAOY,IAAI,YACvB3L,IAClB,CAMA,sBAAMwN,GAEJ,aADuBld,KAAKya,OAAOY,IAAI,qBACvB3L,IAClB,CAMA,mBAAMyN,GAEJ,aADuBnd,KAAKya,OAAOY,IAAI,kBACvB3L,IAClB,CAYA,qBAAM0N,CAAgBC,EAAQ7B,EAAQ,MACpC,IACE,MAAM9L,QAAa1P,KAAKub,kBAAkB8B,EAAQ7B,GAGlD,MAAO,CACLJ,OAAQ1L,EAAK0L,OACbI,MAAO9L,EAAK8L,MACZ9L,KAAMA,EAAKA,KACX4N,KAAM5N,EAAK4N,KACXC,WAAY7N,EAAKA,KAAK3H,IAAI5G,GAAKA,EAAEsG,WACjC+V,OAAQ,CACNC,MAAO/N,EAAKA,KAAK3H,IAAI5G,GAAKA,EAAEsc,OAC5BC,KAAMhO,EAAKA,KAAK3H,IAAI5G,GAAKA,EAAEuc,MAC3BC,IAAKjO,EAAKA,KAAK3H,IAAI5G,GAAKA,EAAEwc,KAC1BC,KAAMlO,EAAKA,KAAK3H,IAAI5G,GAAKA,EAAEyc,OAE7BC,OAAQnO,EAAKA,KAAK3H,IAAI5G,GAAKA,EAAE0c,QAC7BC,OAAQpO,EAAKoO,OAEjB,OAASxd,GAEP,MAAMA,CACR,CACF,CAUA,8BAAMyd,CAAyBV,EAAQW,EAAY,mBAAoBhC,EAAS,SAAUC,EAAQ,GAChG,IACE,IAAIvM,EAEJ,OAAQsO,GACN,IAAK,mBACHtO,QAAa1P,KAAK+b,mBAAmBsB,EAAQrB,EAAQC,GACrD,MACF,IAAK,0BACHvM,QAAa1P,KAAKkc,gBAAgBmB,EAAQrB,EAAQC,GAClD,MACF,IAAK,sBACHvM,QAAa1P,KAAKmc,qBAAqBkB,EAAQrB,EAAQC,GACvD,MACF,QACE,MAAM,IAAIhZ,MAAM,+BAA+B+a,KAGnD,OAAOtO,EAAKA,IACd,OAASpP,GAEP,MAAMA,CACR,CACF,CAOA,0BAAM2d,CAAqBZ,GACzB,IAEE,aADmBrd,KAAKsc,iBAAiBe,IAC7Ba,KACd,OAAS5d,GAEP,MAAMA,CACR,CACF,GC1TI6d,GAAuB,EAC3BC,UAAS,EACTC,WACAC,iBAAiB,GACjBC,gBAAgB,KAChBC,aAAa,SAEb,MAAOC,EAAUC,GAAejK,WAAS,CACvC,CACEvQ,GAAI,IACJ8C,KAAM,YACN2X,QAAS,+KACTlX,cAAeC,KACfkX,YAAa,CACX,mCACA,sCACA,mCACA,qCAICC,EAAYC,GAAiBrK,WAAS,KACtCC,EAAWC,GAAgBF,YAAS,IACpCsK,EAAaC,GAAkBvK,YAAS,GACzCwK,EAAiBhK,SAAO,MACxBiK,EAAWjK,SAAO,MAMxBW,YAAU,KAHRqJ,EAAe3J,SAAS6J,eAAe,CAAEC,SAAU,YAKlD,CAACX,IAEJ,MAAMY,EAAoBjK,MAAOuC,EAAUkH,KACzC,IAAKlH,EAAQ2H,OAAQ,OAErB,MAAMC,EAAc,CAClBrb,GAAIwD,KAAKyE,MAAM0H,WACf7M,KAAM,OACN2X,QAAShH,EACTlQ,cAAeC,MAGjBgX,EAAY9G,GAAQ,IAAIA,EAAM2H,IAC9BT,EAAc,IACdnK,GAAa,GAEb,IAEE,MAAMoG,QAAiBR,GAAgBsB,KAAK,qBAAsB,CAChElE,UACA6H,QAAS,IACJlB,EACHC,gBACAC,aACAiB,iBAAkBhB,EAASpG,OAAM,MAI/BqH,EAAmB,CACvBxb,IAAKwD,KAAKyE,MAAQ,GAAG0H,WACrB7M,KAAM,YACN2X,QAAS5D,EAASrL,KAAKqL,SACvBtT,cAAeC,KACfkX,YAAa7D,EAASrL,KAAKkP,aAAe,GAC1Ce,OAAQ5E,EAASrL,KAAKiQ,QAAU,GAChCC,QAAS7E,EAASrL,KAAKkQ,SAAW,IAGpClB,EAAY9G,GAAQ,IAAIA,EAAM8H,GAChC,OAASpf,GAIP,MAAMuf,EAAkB,CACtB3b,IAAKwD,KAAKyE,MAAQ,GAAG0H,WACrB7M,KAAM,YACN2X,QAAS,gOACTlX,cAAeC,KACfkX,YAAa,CACX,0BACA,0BACA,mBACA,uBAIJF,EAAY9G,GAAQ,IAAIA,EAAMiI,GAChC,SACElL,GAAa,EACf,GAcImL,EAAe,CACnB,CAAEC,KAAMC,EAAU1c,MAAO,qBAAsB2c,OAAQ,2DACvD,CAAEF,KAAMG,EAAY5c,MAAO,kBAAmB2c,OAAQ,yDACtD,CAAEF,KAAMI,EAAe7c,MAAO,kBAAmB2c,OAAQ,2CACzD,CAAEF,KAAMK,EAAY9c,MAAO,qBAAsB2c,OAAQ,mDACzD,CAAEF,KAAMM,EAAQ/c,MAAO,gBAAiB2c,OAAQ,yCAChD,CAAEF,KAAMO,EAAWhd,MAAO,qBAAsB2c,OAAQ,8CAG1D,OAAK7B,EAGHhf,MAAC,OAAIL,UAAU,iFACb6B,SAAAC,OAAC0f,EAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAGC,MAAO,GAAKC,EAAG,IACtCC,QAAS,CACPH,QAAS,EACTC,MAAO,EACPC,EAAG,EACH5f,OAAQ+d,EAAc,OAAS,QAEjC+B,KAAM,CAAEJ,QAAS,EAAGC,MAAO,GAAKC,EAAG,IACnC7hB,UAAU,iEAGV6B,SAAA,CAAAC,OAAC,OAAI9B,UAAU,8GACb6B,SAAA,CAAAC,OAAC,OAAI9B,UAAU,8BACb6B,SAAA,CAAAxB,MAAC,OAAIL,UAAU,wCACb6B,eAACmgB,EAAA,CAAMhiB,UAAU,qBAElB,OACC6B,SAAA,CAAAxB,MAAC,MAAGL,UAAU,oBAAoB6B,SAAA,2BAClCxB,MAAC,KAAEL,UAAU,wBAAwB6B,SAAA,2CAGzCC,OAAC,OAAI9B,UAAU,8BACb6B,SAAA,CAAAxB,MAAC,UACCoC,QAAS,IAAMwd,GAAgBD,GAC/BhgB,UAAU,sEAET6B,SAAAme,QAAeiC,EAAA,CAAUjiB,UAAU,YAAeK,MAAC6hB,EAAA,CAAUliB,UAAU,cAE1EK,MAAC,UACCoC,QAAS6c,EACTtf,UAAU,sEAEV6B,SAAAxB,MAAC8hB,EAAA,CAAEniB,UAAU,qBAKjBggB,GACAle,OAAAsgB,WAAA,CAEEvgB,SAAA,CAAAC,OAAC,OAAI9B,UAAU,uCACb6B,SAAA,CAAAxB,MAACgiB,EAAA,CACExgB,SAAA6d,EAAS1W,IAAK4P,GACbvY,MAACmhB,EAAOC,IAAP,CAECC,QAAS,CAAEC,QAAS,EAAGE,EAAG,IAC1BC,QAAS,CAAEH,QAAS,EAAGE,EAAG,GAC1BE,KAAM,CAAEJ,QAAS,EAAGE,GAAG,IACvB7hB,UAAW,SAAyB,SAAjB4Y,EAAQ3Q,KAAkB,cAAgB,iBAE7DpG,SAAAC,OAAC,OAAI9B,UAAW,kBAAmC,SAAjB4Y,EAAQ3Q,KAAkB,mBAAqB,mCAC/EpG,SAAA,CAAAxB,MAAC,OAAIL,UAAW,mBACG,SAAjB4Y,EAAQ3Q,KACJ,4BACA,iCAEHpG,SAAiB,SAAjB+W,EAAQ3Q,KAAkB5H,MAACiiB,GAAKtiB,UAAU,YAAeK,MAACkiB,EAAA,CAAIviB,UAAU,cAE3E8B,OAAC,OAAI9B,UAAW,0BACG,SAAjB4Y,EAAQ3Q,KACJ,8BACA,kCAEJpG,SAAA,CAAAxB,MAAC,KAAEL,UAAU,sBAAuB6B,SAAA+W,EAAQgH,UAG3ChH,EAAQiH,aAAejH,EAAQiH,YAAY7Z,OAAS,GACnDlE,OAAC,OAAI9B,UAAU,iBACb6B,SAAA,CAAAxB,MAAC,KAAEL,UAAU,iCAAiC6B,SAAA,iBAC9CxB,MAAC,OAAIL,UAAU,uBACZ6B,WAAQge,YAAY7W,IAAI,CAACwZ,EAAYzd,IACpC1E,MAAC,UAECoC,QAAS,IAlGX,CAAC+f,IAC7BlC,EAAkBkC,IAiG2BC,CAAsBD,GACrCxiB,UAAU,2FAET6B,SAAA2gB,GAJIzd,SAYd6T,EAAQgI,QAAUhI,EAAQgI,OAAO5a,OAAS,GACzClE,OAAC,OAAI9B,UAAU,6CACb6B,SAAA,CAAAxB,MAAC,KAAEL,UAAU,2BAA2B6B,SAAA,yBACxCxB,MAAC,OAAIL,UAAU,qBAAqB6B,SAAA,6EAMvC,OAAI7B,UAAU,0BACZ6B,SAAA+W,EAAQlQ,UAAUyS,8BAlDpBvC,EAAQzT,OA0DlBwQ,GACCtV,MAACmhB,EAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,GACpBG,QAAS,CAAEH,QAAS,GACpB3hB,UAAU,qBAEV6B,SAAAC,OAAC,OAAI9B,UAAU,6BACb6B,SAAA,CAAAxB,MAAC,OAAIL,UAAU,+CACb6B,eAAC0gB,EAAA,CAAIviB,UAAU,oBAEhB,OAAIA,UAAU,oCACb6B,SAAAC,OAAC,OAAI9B,UAAU,iBACb6B,SAAA,CAAAxB,MAAC,OAAIL,UAAU,oDACfK,MAAC,OAAIL,UAAU,kDAAkD0iB,MAAO,CAAEC,eAAgB,UAC1FtiB,MAAC,OAAIL,UAAU,kDAAkD0iB,MAAO,CAAEC,eAAgB,oBAMpGtiB,MAAC,OAAIuiB,IAAK1C,OAIS,IAApBR,EAAS1Z,QACRlE,OAAC,OAAI9B,UAAU,qCACb6B,SAAA,CAAAxB,MAAC,KAAEL,UAAU,yCAAyC6B,SAAA,mBACtDxB,MAAC,OAAIL,UAAU,wCACZ6B,WAAamH,IAAI,CAACkY,EAAQnc,IACzBjD,OAAC,UAECW,QAAS,IAAM6d,EAAkBY,EAAOA,QACxClhB,UAAU,iHAEV6B,SAAA,CAAAxB,MAAC6gB,EAAOF,KAAP,CAAYhhB,UAAU,0BACvBK,MAAC,QAAKL,UAAU,oCAAqC6B,WAAO0C,UALvDQ,eAad,OAAI/E,UAAU,+BACb6B,SAAAC,OAAC,OAAI9B,UAAU,iBACb6B,SAAA,CAAAxB,MAAC,OAAIL,UAAU,kBACb6B,SAAAxB,MAAC,YACCuiB,IAAKzC,EACLtR,MAAOiR,EACP1E,SAAWC,GAAM0E,EAAc1E,EAAEpI,OAAOpE,OACxCgU,WA7KMxH,IACR,UAAVA,EAAEyH,KAAoBzH,EAAE0H,WAC1B1H,EAAE2H,iBACF1C,MA2Kc2C,YAAY,kFACZjjB,UAAU,2HACVkjB,KAAM,EACNR,MAAO,CAAES,UAAW,OAAQC,UAAW,aAG3CthB,OAAC,UACCW,QAAS,IAAM6d,IACf+C,UAAWvD,EAAWS,QAAU5K,EAChC3V,UAAU,8JAEV6B,SAAA,CAAAxB,MAACijB,EAAA,CAAKtjB,UAAU,YAChBK,MAAC,QAAKwB,SAAA,oBAOfme,SACE,OAAIhgB,UAAU,+BACb6B,SAAAC,OAAC,OAAI9B,UAAU,oCACb6B,SAAA,CAAAxB,MAAC,KAAEL,UAAU,wBAAwB6B,SAAA,8BACrCC,OAAC,OAAI9B,UAAU,iBACb6B,SAAA,CAAAxB,MAAC,OAAIL,UAAU,oDACfK,MAAC,QAAKL,UAAU,wBAAwB6B,SAAA,wBAvLlC,MC3If,MAAM0hB,GACX,WAAAxiB,GACEE,KAAKwf,QAAU,GACfxf,KAAKuiB,eAAiB,GACtBviB,KAAKwiB,QAAU,CACbC,EAAK,YACLC,GAAM,cACNC,KAAQ,YACRC,IAAO,WACPza,KAAQ,OACR0a,MAAS,QACTC,GAAM,OACNC,GAAM,kBACNC,GAAM,YAGRhjB,KAAKijB,SAAWjjB,KAAKkjB,oBACvB,CAEA,aAAAC,CAAcC,GACZpjB,KAAKwf,QAAU,IAAKxf,KAAKwf,WAAY4D,EACvC,CAEA,kBAAAF,GACE,MAAO,CAEL/a,KAAM,CACJD,YAAa,oCACbmb,MAAO,iBACPha,SAAU,SACVia,QAAStjB,KAAKujB,WAAWC,KAAKxjB,OAIhCyjB,UAAW,CACTvb,YAAa,kCACbmb,MAAO,mDACPha,SAAU,YACVia,QAAStjB,KAAK0jB,gBAAgBF,KAAKxjB,OAIrC,cAAe,CACbkI,YAAa,+BACbmb,MAAO,iDACPha,SAAU,SACVia,QAAStjB,KAAK2jB,iBAAiBH,KAAKxjB,OAGtC4jB,MAAO,CACL1b,YAAa,kBACbmb,MAAO,iBACPha,SAAU,SACVia,QAAStjB,KAAK6jB,YAAYL,KAAKxjB,OAIjC8jB,UAAW,CACT5b,YAAa,yBACbmb,MAAO,gDACPha,SAAU,eACVia,QAAStjB,KAAK+jB,gBAAgBP,KAAKxjB,OAGrCgkB,IAAK,CACH9b,YAAa,4BACbmb,MAAO,2DACPha,SAAU,eACVia,QAAStjB,KAAKikB,UAAUT,KAAKxjB,OAI/BkkB,SAAU,CACRhc,YAAa,uCACbmb,MAAO,8EACPha,SAAU,aACVia,QAAStjB,KAAKmkB,eAAeX,KAAKxjB,OAIpCkR,KAAM,CACJhJ,YAAa,oDACbmb,MAAO,oDACPha,SAAU,OACVia,QAAStjB,KAAKokB,WAAWZ,KAAKxjB,OAGhCqkB,OAAQ,CACNnc,YAAa,iDACbmb,MAAO,kDACPha,SAAU,OACVia,QAAStjB,KAAKskB,aAAad,KAAKxjB,OAIlCukB,QAAS,CACPrc,YAAa,6BACbmb,MAAO,iEACPha,SAAU,WACVia,QAAStjB,KAAKwkB,cAAchB,KAAKxjB,OAGnCykB,KAAM,CACJvc,YAAa,4BACbmb,MAAO,iEACPha,SAAU,WACVia,QAAStjB,KAAK0kB,WAAWlB,KAAKxjB,OAIhC2kB,OAAQ,CACNzc,YAAa,iCACbmb,MAAO,kEACPha,SAAU,UACVia,QAAStjB,KAAK4kB,aAAapB,KAAKxjB,OAGlC6kB,OAAQ,CACN3c,YAAa,uCACbmb,MAAO,qDACPha,SAAU,UACVia,QAAStjB,KAAK8kB,aAAatB,KAAKxjB,OAIlC0Z,OAAQ,CACNxR,YAAa,yCACbmb,MAAO,sBACPha,SAAU,SACVia,QAAStjB,KAAK+kB,aAAavB,KAAKxjB,OAGlC6iB,MAAO,CACL3a,YAAa,4BACbmb,MAAO,QACPha,SAAU,SACVia,QAAStjB,KAAKglB,YAAYxB,KAAKxjB,OAGjCilB,QAAS,CACP/c,YAAa,0CACbmb,MAAO,UACPha,SAAU,SACVia,QAAStjB,KAAKklB,cAAc1B,KAAKxjB,OAGvC,CAEA,oBAAMmlB,CAAe5e,GACnB,MAAM6e,EAAQplB,KAAKqlB,aAAa9e,GAC1B+e,EAActlB,KAAKulB,aAAaH,EAAMI,SACtCA,EAAUxlB,KAAKijB,SAASqC,GAE9B,IAAKE,EACH,MAAO,CACLC,SAAS,EACTnlB,MAAO,YAAYglB,qDAIvB,IACE,MAAMI,QAAeF,EAAQlC,QAAQ8B,EAAMO,KAAMP,EAAMQ,OAEvD,OADA5lB,KAAKuiB,eAAeve,KAAK,CAAEwhB,QAASjf,EAAOkB,UAAW,IAAIC,KAAQge,WAC3DA,CACT,CAAE,MAAOplB,GACP,MAAO,CACLmlB,SAAS,EACTnlB,MAAO,oBAAoBglB,OAAiBhlB,EAAMqX,UAEtD,CACF,CAEA,YAAA0N,CAAa9e,GACX,MAAM6e,EAAQ7e,EAAM+Y,OAAOuG,MAAM,OAC3BL,EAAUJ,EAAM,GAChBU,EAAYV,EAAM/M,MAAM,GAExBsN,EAAO,GACPC,EAAQ,GAEd,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAU/gB,OAAQghB,IAAK,CACzC,MAAMC,EAAOF,EAAUC,GACvB,GAAIC,EAAKC,WAAW,MAAO,CACzB,MAAOpE,EAAKjU,GAASoY,EAAKhgB,UAAU,GAAG6f,MAAM,KAC7CD,EAAM/D,GAAOjU,IAAS,CACxB,MAAWoY,EAAKC,WAAW,KACzBL,EAAMI,EAAKhgB,UAAU,KAAM,EAE3B2f,EAAK3hB,KAAKgiB,EAEd,CAEA,MAAO,CAAER,UAASG,OAAMC,QAC1B,CAEA,YAAAL,CAAaC,GACX,OAAOxlB,KAAKwiB,QAAQgD,IAAYA,CAClC,CAEA,cAAAU,CAAe3f,GACb,MAAM6e,EAAQ7e,EAAM+Y,OAAOuG,MAAM,OAC3BM,EAAUf,EAAM,GAAG3a,cAEzB,GAAqB,IAAjB2a,EAAMrgB,OAER,OAAO0N,OAAO2T,KAAKpmB,KAAKijB,UACrBnL,OAAOuO,GAAOA,EAAIJ,WAAWE,IAC7BG,OAAO7T,OAAO2T,KAAKpmB,KAAKwiB,SAAS1K,OAAOyO,GAASA,EAAMN,WAAWE,KAClEK,OAIL,MAAMhB,EAAUxlB,KAAKulB,aAAaH,EAAM,IACxC,OAAOplB,KAAKymB,8BAA8BjB,EAASJ,EAAM/M,MAAM,GACjE,CAEA,6BAAAoO,CAA8BjB,EAASG,GACrC,MAAM/G,EAAc,GAEpB,OAAQ4G,GACN,IAAK,WACH5G,EAAY5a,KAAK,YAAa,cAAe,YAAa,WAAY,mBAAoB,sBAAuB,aACjH,MACF,IAAK,YACH4a,EAAY5a,KAAK,OAAQ,UAAW,YAAa,OAAQ,WAAY,eACrE,MACF,IAAK,YACH4a,EAAY5a,KAAK,MAAO,OAAQ,OAAQ,SAAU,UAAW,OAC7D,MACF,IAAK,OACH4a,EAAY5a,KAAK,WAAY,YAAa,aAAc,gBACxD,MACF,IAAK,UACH4a,EAAY5a,KAAK,qBAAsB,mBAAoB,eAC3D,MACF,IAAK,SACH4a,EAAY5a,KAAK,eAAgB,gBAAiB,iBAItD,OAAO4a,CACT,CAGA,gBAAM2E,CAAWoC,EAAMC,GACrB,GAAID,EAAK5gB,OAAS,EAAG,CACnB,MAAMugB,EAActlB,KAAKulB,aAAaI,EAAK,IACrCH,EAAUxlB,KAAKijB,SAASqC,GAE9B,OAAIE,EACK,CACLC,SAAS,EACTiB,OAAQ,GAAGpB,MAAgBE,EAAQtd,uBAAuBsd,EAAQnC,QAClErc,KAAM,QAGD,CACLye,SAAS,EACTnlB,MAAO,YAAYglB,gBAGzB,CAEA,MAAMqB,EAAa,GACnBlU,OAAOpE,QAAQrO,KAAKijB,UAAUpf,QAAQ,EAAEjF,EAAMynB,MACvCM,EAAWN,EAAIhd,YAAWsd,EAAWN,EAAIhd,UAAY,IAC1Dsd,EAAWN,EAAIhd,UAAUrF,KAAK,GAAGpF,EAAKgoB,OAAO,OAAOP,EAAIne,iBAG1D,IAAIwe,EAAS,oCAWb,OAVAA,GAAU,sEAEVjU,OAAOpE,QAAQsY,GAAY9iB,QAAQ,EAAEwF,EAAU4Z,MAC7CyD,GAAU,GAAGrd,EAASiS,mBACtBoL,GAAUzD,EAASnZ,KAAK,MAAQ,SAGlC4c,GAAU,yDACVA,GAAU,yDAEH,CAAEjB,SAAS,EAAMiB,SAAQ1f,KAAM,OACxC,CAEA,qBAAM0c,CAAgBiC,EAAMC,GAC1B,MAAM3F,EAAS0F,EAAK,IAAM,OAE1B,OAAQ1F,GACN,IAAK,OACH,OAAIjgB,KAAKwf,QAAQjB,cACR,CACLkH,SAAS,EACT/V,KAAM1P,KAAKwf,QAAQjB,cACnBsI,OAAQ,aAGH,CACLpB,SAAS,EACTnlB,MAAO,oFAIb,IAAK,UACH,UACyBia,GAAgBsB,KAAK,qBAAsB,CAChE4H,UAAWzjB,KAAKwf,QAAQjB,gBAE1B,MAAO,CACLkH,SAAS,EACTiB,OAAQ,0FACR1f,KAAM,UAEV,CAAE,MAAO1G,GACP,MAAO,CACLmlB,SAAS,EACTnlB,MAAO,iDAEX,CAEF,IAAK,OACH,MAAO,CACLmlB,SAAS,EACTiB,OAAQ,oGACR1f,KAAM,QAGV,QACE,MAAO,CACLye,SAAS,EACTnlB,MAAO,6BAA6B2f,0DAG5C,CAEA,sBAAM0D,CAAiBgC,EAAMC,GAC3B,MAAMxK,EAASuK,EAAK,GAGpB,GAFaC,EAAM5e,MAEdoU,EACH,MAAO,CACLqK,SAAS,EACTnlB,MAAO,0EAIX,IAEE,MAAO,CACLmlB,SAAS,EACT/V,YAHqB6K,GAAgBc,IAAI,sBAAsBD,EAAOE,kBAGvD5L,KACfmX,OAAQ,SAEZ,CAAE,MAAOvmB,GACP,MAAO,CACLmlB,SAAS,EACTnlB,MAAO,mCAAmC8a,EAAOE,kBAAkBhb,EAAMqX,UAE7E,CACF,CAEA,iBAAMkM,CAAY8B,EAAMC,GACtB,OAAO5lB,KAAK2jB,iBAAiBgC,EAAM,CAAE3e,KAAM,SAC7C,CAEA,qBAAM+c,CAAgB4B,EAAMC,GAC1B,MAAMkB,EAAWnB,EAAK,GAEtB,OAAKmB,EAOE,CACLrB,SAAS,EACTiB,OAAQ,GAAGI,EAASxL,0FACpBtU,KAAM,QATC,CACLye,SAAS,EACTnlB,MAAO,8EASb,CAEA,eAAM2jB,CAAU0B,EAAMC,GACpB,MAAMxK,EAASuK,EAAK,GACdoB,EAASnB,EAAMmB,QAAU,EACzBC,EAAWpB,EAAMoB,UAAY,GAC7BC,EAAWrB,EAAMqB,UAAY,EAEnC,OAAK7L,EAOE,CACLqK,SAAS,EACTiB,OAAQ,uBAAuBtL,EAAOE,uCAAuCyL,gBAAqBC,gBAAuBC,KACzHzX,WAAY,uBACZxI,KAAM,WAVC,CACLye,SAAS,EACTnlB,MAAO,uGAUb,CAEA,oBAAM6jB,CAAewB,EAAMC,GACzB,MAAMsB,EAAOvB,EAAK,GAEZwB,EAAS,CACbC,UAAa,6BACb,cAAe,gCACf3D,UAAa,wBACb4D,SAAY,uCACZ,mBAAoB,oBACpB,sBAAuB,uBACvB,YAAa,cAGf,OAAKH,GAASC,EAAOD,GAOd,CACLzB,SAAS,EACTiB,OAAQ,iBAAiBQ,OACzB1X,WAAY2X,EAAOD,GACnBlgB,KAAM,WAVC,CACLye,SAAS,EACTnlB,MAAO,8BAA8BmS,OAAO2T,KAAKe,GAAQrd,KAAK,QAUpE,CAEA,gBAAMsa,CAAWuB,EAAMC,GACrB,MAAM5e,EAAO2e,EAAK,IAAM,WAGxB,OAFiBC,EAAM0B,UAAY1B,EAAMzkB,EAEjC6F,GACN,IAAK,WACH,GAAIhH,KAAKwf,QAAQjB,eAAegJ,SAAU,CAOxC,MAAO,CACL9B,SAAS,EACT/V,KARe1P,KAAKwf,QAAQjB,cAAcgJ,SAASxf,IAAIyf,IAAC,CACxDC,OAAQD,EAAEpM,OACVsM,OAAQF,EAAEG,OACVC,MAAOJ,EAAE5Z,MACTia,OAAQ,IAAe,IAAXL,EAAEM,QAAcliB,QAAQ,SAKpCihB,OAAQ,QAEZ,CACE,MAAO,CACLpB,SAAS,EACTnlB,MAAO,mCAIb,IAAK,aACH,MAAO,CACLmlB,SAAS,EACTiB,OAAQ,+FACR1f,KAAM,QAGV,QACE,MAAO,CACLye,SAAS,EACTnlB,MAAO,sBAAsB0G,iDAGrC,CAEA,kBAAMsd,CAAaqB,EAAMC,GACvB,MAAMmC,EAAQpC,EAAK7b,KAAK,KAExB,IAAKie,EACH,MAAO,CACLtC,SAAS,EACTnlB,MAAO,iFAIX,IAEE,MAAO,CACLmlB,SAAS,EACT/V,YAHqB6K,GAAgBc,IAAI,uBAAuB2M,mBAAmBD,OAGpErY,KACfmX,OAAQ,QAEZ,CAAE,MAAOvmB,GACP,MAAO,CACLmlB,SAAS,EACTnlB,MAAO,kBAAkBA,EAAMqX,UAEnC,CACF,CAEA,mBAAM6M,CAAcmB,EAAMC,GACxB,MAAM5T,EAAS2T,EAAK,GACd3e,EAAO4e,EAAM5e,MAAQ,cAE3B,OAAKgL,EAOE,CACLyT,SAAS,EACTiB,OAAQ,GAAG1f,EAAKihB,OAAO,GAAG3M,cAAgBtU,EAAKqR,MAAM,mBAAmBrG,EAAOsJ,2BAC/E9L,WAAY,uCACZxI,KAAM,WAVC,CACLye,SAAS,EACTnlB,MAAO,kGAUb,CAEA,gBAAMokB,CAAWiB,EAAMC,GACrB,MAAM5T,EAAS2T,EAAK,IAAM,YAG1B,MAAO,CACLF,SAAS,EACTiB,OAAQ,mBAJKd,EAAMtT,QAAU,OAIIgJ,sBAAsBtJ,iEACvDhL,KAAM,OAEV,CAEA,kBAAM4d,CAAae,EAAMC,GACvB,MAAMsC,EAAWvC,EAAK,GAChBkB,EAASjB,EAAMiB,QAAU,MAG/B,MAAO,CACLpB,SAAS,EACTiB,OAAQ,qBAAqBwB,OAJhBtC,EAAMc,QAAU,WAAU,IAAIhf,MAAOC,cAAcke,MAAM,KAAK,QAItBgB,IACrD7f,KAAM,UAEV,CAEA,kBAAM8d,CAAaa,EAAMC,GACvB,MAAMuC,EAAWxC,EAAK,GAChB3e,EAAO4e,EAAM5e,MAAQ,YAE3B,OAAKmhB,EAOE,CACL1C,SAAS,EACTiB,OAAQ,qBAAqByB,MAAanhB,KAC1CA,KAAM,WATC,CACLye,SAAS,EACTnlB,MAAO,gFASb,CAEA,kBAAMykB,CAAaY,EAAMC,GACvB,MAAM0B,EAAW1B,EAAM0B,SAEvB,IAAIZ,EAAS,qBAcb,OAbAA,GAAU,4CACVA,GAAU,oCACVA,GAAU,+BACVA,GAAU,uBAAyB1mB,KAAKwf,QAAQjB,cAAgB,YAAc,iBAAmB,KACjGmI,GAAU,iCAENY,IACFZ,GAAU,uBACVA,GAAU,wBAAwB1mB,KAAKuiB,eAAexd,WACtD2hB,GAAU,iBAAiB1mB,KAAKwf,QAAQlB,gBAAgB8J,MAAQ,cAChE1B,GAAU,mBAAkB,IAAIhf,MAAO2gB,sBAGlC,CACL5C,SAAS,EACTiB,SACA1f,KAAM,OAEV,CAEA,iBAAMge,CAAYW,EAAMC,GACtB,MAAO,CACLH,SAAS,EACTiB,OAAQ,GACR1f,KAAM,QAEV,CAEA,mBAAMke,CAAcS,EAAMC,GACxB,MAAO,CACLH,SAAS,EACTiB,OAAQ,sGACR1f,KAAM,OAEV,ECrlBU,MAACshB,GAAiB,CAAC1a,EAAO2a,EAAW,MAAOC,GAAU,KAChE,GAAI5a,SAAyC6a,MAAM7a,GAAQ,MAAO,MAUlE,OARkB,IAAI8a,KAAKC,aAAa,QAAS,CAC/ClH,MAAO,WACP8G,WACAK,SAAUJ,EAAU,UAAY,WAChCK,sBAAuB,EACvBC,sBAAuB,IAGRjC,OAAOjZ,IAGbmb,GAAmB,CAACnb,EAAOob,EAAW,IAC7Cpb,SAAyC6a,MAAM7a,GAAe,MAC3D,IAAY,IAARA,GAAahI,QAAQojB,MAGrBC,GAAe,CAACrb,EAAOob,EAAW,EAAGR,GAAU,KAC1D,GAAI5a,SAAyC6a,MAAM7a,GAAQ,MAAO,MAQlE,OANkB,IAAI8a,KAAKC,aAAa,QAAS,CAC/CC,SAAUJ,EAAU,UAAY,WAChCK,sBAAuB,EACvBC,sBAAuBE,IAGRnC,OAAOjZ,IAyEbsb,GAAwBC,IACnC,MAAMC,eACJA,EAAcC,kBACdA,EAAiBC,UACjBA,EAASC,KACTA,EAAIC,mBACJA,EAAkBC,kBAClBA,EAAiBC,UACjBA,EAASC,KACTA,EAAIC,gBACJA,EAAkB,GAChBT,EAGEU,EA7BwB,EAACC,EAAcC,EAAaC,EAAQ,KAClE,MAAMC,EAAY,GAClB,IAAIC,EAAkBJ,EAEtB,IAAK,IAAI/D,EAAI,EAAGA,EAAIiE,EAAOjE,IAIzBmE,GAAmB,GAHAtgB,MAAMugB,QAAQJ,GAC7BA,EAAYhE,IAAMgE,EAAYA,EAAYhlB,OAAS,GACnDglB,GAEJE,EAAUjmB,KAAKkmB,GAGjB,OAAOD,GAiBmBG,CAAiBhB,EAAgBC,EAAmBO,GAGxES,EAAgBR,EAAkB9hB,IAAIuiB,GAAWA,EAAUhB,GAG3DiB,EAvC8B,EAACC,EAAehB,EAAoBiB,IAChED,GAAiB,EAAIhB,IAAwBiB,EAAejB,GAsC9CkB,CACpBL,EAAcA,EAActlB,OAAS,GACrCykB,EACAD,GAIIoB,GA5FgCF,EA4FYlB,EAAfc,EA3FlBphB,OAAO,CAAC2hB,EAAKC,EAAU/mB,IAC/B8mB,EAAMC,EAAW1hB,KAAK4C,IAAI,EAAI0e,EAAc3mB,EAAQ,GAC1D,IAHuB,IAAY2mB,EA6FtC,MAAMK,EAAoBP,EAAgBphB,KAAK4C,IAAI,EAAIwd,EAAMK,GAGvDmB,EAAkBJ,EAAgBG,EAClCE,EAAcD,EAAkBrB,EAAYC,EAGlD,MAAO,CACLoB,kBACAC,cACAC,cALoBD,EAAcvB,EAMlCkB,gBACAG,oBACAP,gBACAV,oBACAQ,gBACAd,OACAC,uBAIS0B,GAAsB/B,IACjC,MAAMgC,cACJA,EAAaC,OACbA,EAAMC,aACNA,EAAe,EAACC,aAChBA,EAAYC,SACZA,EAAW,EAACC,kBACZA,EAAoB,IAAIC,oBACxBA,EAAsB,IACpBtC,EAGEO,EAAY0B,EAASC,EACrBK,EAAmBP,EAAgBzB,EAInCiC,EAAaP,EAASjiB,KAAK4C,IAAI,KAAsBwf,GAGrDK,EAAsBD,EAAaL,EAEnCO,EAAkBD,EADU,GAAZlC,EAIhBoC,EAAcD,EAAkBH,EAChCK,EAAM5iB,KAAK4C,IAAI+f,EAAa,EAAIP,GAAY,EAC5CS,EAAOF,EAGPG,EAAsBP,EAAmBF,EAAoBD,EAC7DW,EAAkB/iB,KAAKC,IAAI,GAAIyiB,EAAkBH,GAAoBD,GAE3E,MAAO,CACLC,mBACAhC,YACAmC,kBACAC,cACAC,MACAC,OACAL,aACAC,sBACAO,eAAgBF,EAChBC,kBACAE,UAAWP,EAAkBI,EAAsBC,IAI1CG,GAA6B,CAACC,EAAaC,KACtD,MAsBMC,EAAY,GAOlB,MARgB,CAAC,YAAa,UAAW,aAAc,cAAe,gBAG9D3oB,QAAQyO,IACd,MAAMma,EAAaF,EAASxkB,IAAI2kB,GAAQA,EAAKpa,IAC7Cka,EAAUla,GA1BgBqa,KAC1B,MAAMC,EAAcD,EAAO7U,OAAOC,GAAKA,UAAkC0Q,MAAM1Q,IAC/E,OAA2B,IAAvB6U,EAAY7nB,OAAqB,CAAE8nB,OAAQ,KAAMC,KAAM,KAAMxhB,IAAK,KAAMlC,IAAK,OAEjFwjB,EAAYpG,KAAK,CAACuG,EAAGrhB,IAAMqhB,EAAIrhB,GAQxB,CACLmhB,OAPAD,EAAY7nB,OAAS,GAAM,GACtB6nB,EAAYA,EAAY7nB,OAAS,EAAI,GAAK6nB,EAAYA,EAAY7nB,OAAS,IAAM,EAClF6nB,EAAYzjB,KAAK6jB,MAAMJ,EAAY7nB,OAAS,IAMhD+nB,KAJWF,EAAY3jB,OAAO,CAACsP,EAAKR,IAAMQ,EAAMR,EAAG,GAAK6U,EAAY7nB,OAKpEuG,IAAKnC,KAAKmC,OAAOshB,GACjBxjB,IAAKD,KAAKC,OAAOwjB,GACjBza,MAAOya,EAAY7nB,UASDkoB,CAAoBR,KAGnC,CACLS,QAASZ,EACTa,eAAgBX,EAChBY,kBAAmB,CACjBC,oBAAqBC,GACnBhB,EAAYiB,UACZhB,EAASxkB,IAAI0a,GAAKA,EAAE8K,YAEtBC,gBAAiBlB,EAAYmB,QAAUjB,EAAUiB,QAAQZ,OACzDa,iBAAkBpB,EAAYqB,WAAanB,EAAUmB,WAAWd,OAChEe,oBAAqBtB,EAAYuB,YAAcrB,EAAUqB,YAAYhB,UAK9DS,GAAsB,CAAC1f,EAAOkgB,KACzC,MAAMC,EAAeD,EAAQhW,OAAOC,GAAKA,UAAkC0Q,MAAM1Q,IACjF,GAA4B,IAAxBgW,EAAahpB,QAAbgpB,MAA6BngB,GAAyC6a,MAAM7a,GAC9E,OAAO,KAETmgB,EAAavH,KAAK,CAACuG,EAAGrhB,IAAMqhB,EAAIrhB,GAEhC,OADmBqiB,EAAajW,OAAOC,GAAKA,EAAInK,GAAO7I,OACnCgpB,EAAahpB,QCjO7BipB,GAAgB,EACpB1P,iBAAiB,GACjBC,gBAAgB,KAChBC,aAAa,KACbyP,iBAEA,MAAOC,EAAYC,GAAiB1Z,YAAS,IACtCsK,EAAaC,GAAkBvK,YAAS,IACxClO,EAAO6nB,GAAY3Z,WAAS,KAC5BiS,EAAQ2H,GAAa5Z,WAAS,CACnC,CACEvQ,GAAI,EACJ8C,KAAM,SACN2X,QAAS,0EACTlX,cAAeC,MAEjB,CACExD,GAAI,EACJ8C,KAAM,OACN2X,QAAS,0EACTlX,cAAeC,SAGZ6a,EAAgB+L,GAAqB7Z,WAAS,KAC9C8Z,EAAcC,GAAmB/Z,YAAS,IAC1CmK,EAAa6P,GAAkBha,WAAS,KACxCia,EAAiBC,GAAsBla,YAAS,IAChDma,EAAcC,GAAmBpa,YAAS,GAE3CyK,EAAWjK,SAAO,MAClB6Z,EAAY7Z,SAAO,MACnB8Z,EAAe9Z,SAAO,IAAIqN,IAGhC1M,YAAU,KACJkZ,EAAUxZ,UACZwZ,EAAUxZ,QAAQ0Z,UAAYF,EAAUxZ,QAAQ2Z,eAEjD,CAACvI,IAGJ9Q,YAAU,KACJsY,IAAenP,GAAeG,EAAS5J,SACzC4J,EAAS5J,QAAQ4Z,SAElB,CAAChB,EAAYnP,IAGhBnJ,YAAU,KACRmZ,EAAazZ,QAAQ6N,cAAc,CACjC7E,iBACAC,gBACAC,aACAyP,gBAED,CAAC3P,EAAgBC,EAAeC,EAAYyP,IAE/C,MAAMkB,EAAYha,cAAY,CAACwJ,EAAS3X,EAAO,YAC7C,MAAMooB,EAAY,CAChBlrB,GAAIwD,KAAKyE,MACTnF,OACA2X,UACAlX,cAAeC,MAEjB2mB,EAAUzW,GAAQ,IAAIA,EAAMwX,KAC3B,IAqCGC,EAAsB,CAAC3f,EAAMmX,KACjC,OAAQA,GACN,IAAK,QACH,OAAOyI,EAAY5f,GACrB,IAAK,OACH,OAAOpD,KAAKM,UAAU8C,EAAM,KAAM,GACpC,IAAK,YACH,OAAO6f,EAAoB7f,GAC7B,IAAK,SACH,OAAO8f,EAAiB9f,GAC1B,QACE,OAAOA,IAIP4f,EAAe5f,IACnB,IAAK9F,MAAMugB,QAAQza,IAAyB,IAAhBA,EAAK3K,OAAc,MAAO,UAEtD,MAAM8V,EAAUpI,OAAO2T,KAAK1W,EAAK,IAC3B+f,EAAY5U,EAAQ9S,OACxBoB,KAAKC,IAAIsmB,EAAO3qB,UAAW2K,EAAK3H,IAAI4nB,GAAOC,OAAOD,EAAID,IAAW,IAAI3qB,UASvE,MAAO,CANW8V,EAAQ9S,IAAI,CAAC2nB,EAAQ3J,IAAM2J,EAAO9I,OAAO6I,EAAU1J,KAAKjc,KAAK,OAC7D2lB,EAAU1nB,IAAIhH,GAAS,IAAI8uB,OAAO9uB,IAAQ+I,KAAK,UAChD4F,EAAK3H,OACpB8S,EAAQ9S,IAAI,CAAC2nB,EAAQ3J,IAAM6J,OAAOD,EAAID,IAAW,IAAI9I,OAAO6I,EAAU1J,KAAKjc,KAAK,SAGvCA,KAAK,OAG5CylB,EAAuB7f,IAC3B,IAAKA,EAAM,MAAO,8BAElB,IAAIgX,EAAS,0BAab,OAZAA,GAAU,4CACVA,GAAU,gBAAgB4B,GAAe5Y,EAAKogB,YAAc,OAC5DpJ,GAAU,iBAAiBqC,GAAiBrZ,EAAKoc,aAAe,OAChEpF,GAAU,aAAahX,EAAK6X,UAAUxiB,QAAU,QAE5C2K,EAAK6X,UAAY7X,EAAK6X,SAASxiB,OAAS,IAC1C2hB,GAAU,cACVhX,EAAK6X,SAAS1jB,QAAQksB,IACpBrJ,GAAU,GAAGqJ,EAAQ3U,OAAOwL,OAAO,MAAM0B,GAAeyH,EAAQniB,OAAS,GAAGoiB,SAAS,OAAOjH,GAAiBgH,EAAQjI,QAAU,GAAGkI,SAAS,UAIxItJ,GAGH8I,EAAoB9f,IACxB,IAAKA,EAAM,MAAO,2BAElB,IAAIgX,EAAS,mBAOb,OANAA,GAAU,4CAEVjU,OAAOpE,QAAQqB,GAAM7L,QAAQ,EAAEge,EAAKjU,MAClC8Y,GAAU,GAAG7E,EAAIvG,cAAcsL,OAAO,OAAOgJ,OAAOhiB,GAAOoiB,SAAS,UAG/DtJ,GAuEHuJ,EAAsBjpB,IAC1B,OAAQA,GACN,IAAK,UAAW,MAAO,gBACvB,IAAK,QAAS,MAAO,eACrB,IAAK,UAAW,MAAO,iBACvB,IAAK,UAAW,MAAO,kBACvB,IAAK,OAAQ,MAAO,gBACpB,IAAK,SAAU,MAAO,gBACtB,IAAK,YAAa,MAAO,kBACzB,QAAS,MAAO,kBAIpB,OACEnG,OAAC,OAAI9B,UAAU,qCAEb6B,SAAA,CAAAC,OAAC,OACC9B,UAAU,8GACVyC,QAAS,IAAM2sB,GAAeD,GAE9BttB,SAAA,CAAAC,OAAC,OAAI9B,UAAU,8BACb6B,SAAA,CAAAxB,MAAC8wB,EAAA,CAASnxB,UAAU,2BACpBK,MAAC,QAAKL,UAAU,kCAAkC6B,SAAA,gCAGlDC,OAAC,OAAI9B,UAAU,8BACb6B,SAAA,CAAAxB,MAAC,OAAIL,UAAU,oDACfK,MAAC,QAAKL,UAAU,wBAAwB6B,SAAA,eAI5CC,OAAC,OAAI9B,UAAU,8BACZ6B,SAAA,EAACme,GACAle,OAAAsgB,WAAA,CACEvgB,SAAA,CAAAxB,MAAC,UACCoC,QAAU4Y,IACRA,EAAE+V,kBAvDhB9B,EAAU,KA0DEtvB,UAAU,kEACVqxB,MAAM,eAENxvB,SAAAxB,MAAC8hB,EAAA,CAAEniB,UAAU,cAEfK,MAAC,UACCoC,QAAU4Y,IACRA,EAAE+V,kBA9DG,MACnB,MAAME,EAAa3J,EAAO3e,IAAIyL,GAC5B,IAAIA,EAAK/L,UAAUyS,yBAAyB1G,EAAKmL,WACjD7U,KAAK,MAEDwmB,EAAO,IAAIC,KAAK,CAACF,GAAa,CAAErpB,KAAM,eACtCoF,EAAMokB,IAAIC,gBAAgBH,GAC1BvD,EAAIzqB,SAASouB,cAAc,KACjC3D,EAAErrB,KAAO0K,EACT2gB,EAAErc,SAAW,2BAA0BhJ,MAAOC,cAAcke,MAAM,KAAK,SACvEvjB,SAASquB,KAAKC,YAAY7D,GAC1BA,EAAE8D,QACFvuB,SAASquB,KAAKG,YAAY/D,GAC1ByD,IAAIO,gBAAgB3kB,IAkDN4kB,IAEFjyB,UAAU,kEACVqxB,MAAM,gBAENxvB,SAAAxB,MAAC6xB,EAAA,CAASlyB,UAAU,iBAI1BK,MAAC,UACCoC,QAAU4Y,IACRA,EAAE+V,kBACFnR,GAAgBD,IAElBhgB,UAAU,kEAET6B,SAAAme,QAAeiC,EAAA,CAAUjiB,UAAU,YAAeK,MAAC6hB,EAAA,CAAUliB,UAAU,cAE1EK,MAAC,UACCL,UAAU,kEACVqxB,MAAOlC,EAAa,WAAa,SAEhCttB,SAAAstB,QAAcgD,EAAA,CAAYnyB,UAAU,YAAeK,MAAC+xB,EAAA,CAAUpyB,UAAU,oBAM/EK,MAACgiB,EAAA,CACExgB,SAAAstB,IAAenP,GACd3f,MAACmhB,EAAOC,IAAP,CACCC,QAAS,CAAEzf,OAAQ,EAAG0f,QAAS,GAC/BG,QAAS,CAAE7f,OAAQ,IAAK0f,QAAS,GACjCI,KAAM,CAAE9f,OAAQ,EAAG0f,QAAS,GAC5B0Q,WAAY,CAAEjjB,SAAU,GAAKkjB,KAAM,aACnCtyB,UAAU,uDAEV6B,SAAAC,OAAC,OAAI9B,UAAU,uBAEb6B,SAAA,CAAAC,OAAC,OACC8gB,IAAKmN,EACL/vB,UAAU,yDACV0iB,MAAO,CAAEU,UAAW,SAEnBvhB,SAAA,CAAA8lB,EAAO3e,IAAKyL,GACXpU,MAAC,OAAkBL,UAAW,GAAGkxB,EAAmBzc,EAAKxM,4BACtDpG,SAAc,gBAAToG,KACJ5H,MAAC,OAAIL,UAAU,iEACb6B,SAAAxB,MAAC,OAAIL,UAAU,wBAAyB6B,SAAA4S,EAAKmL,YAG/CnL,EAAKmL,SANCnL,EAAKtP,KAWhB0qB,GACC/tB,OAAC,OAAI9B,UAAU,8CACb6B,SAAA,CAAAxB,MAAC,OAAIL,UAAU,oFACfK,MAAC,QAAKwB,SAAA,wBAMX8tB,GAAmB9P,EAAY7Z,OAAS,GACvClE,OAAC,OAAI9B,UAAU,2CACb6B,SAAA,CAAAxB,MAAC,OAAIL,UAAU,6BAA6B6B,SAAA,mCAC5CxB,MAAC,OAAIL,UAAU,uBACZ6B,SAAAge,EAAYvG,MAAM,EAAG,GAAGtQ,IAAI,CAACwZ,EAAYzd,IACxC1E,MAAC,UAECoC,QAAS,KACP4sB,EAAS7M,GACToN,GAAmB,GACnBzP,EAAS5J,SAAS4Z,SAEpBnwB,UAAU,0FAET6B,SAAA2gB,GARIzd,SAgBfjD,OAAC,OAAI9B,UAAU,+BACb6B,SAAA,CAAAC,OAAC,OAAI9B,UAAU,8BACb6B,SAAA,CAAAxB,MAAC,QAAKL,UAAU,2BAA2B6B,SAAA,MAC3CxB,MAAC,SACCuiB,IAAKzC,EACLlY,KAAK,OACL4G,MAAOrH,EACP4T,SA/KSC,IACzB,MAAMxM,EAAQwM,EAAEpI,OAAOpE,MAIvB,GAHAwgB,EAASxgB,GAGLA,EAAM0R,OAAQ,CAChB,MAAMgS,EAAiBvC,EAAazZ,QAAQ4Q,eAAetY,GAC3D6gB,EAAe6C,GACf3C,EAAmB2C,EAAevsB,OAAS,EAC7C,MACE4pB,GAAmB,IAsKL4C,UAlNKnX,IACrB,GAAc,UAAVA,EAAEyH,IACJzH,EAAE2H,iBArGgB3M,OAAOoQ,IAC3B,GAAKA,EAAQlG,OAAb,CAGAgP,EAAkB1W,GAAQ,IAAIA,EAAM4N,IACpCgJ,GAAgB,GAGhBW,EAAU,KAAK3J,IAAW,WAC1BqJ,GAAgB,GAEhB,IACE,MAAMnJ,QAAeqJ,EAAazZ,QAAQ6P,eAAeK,GAErDE,EAAOD,SACLC,EAAOgB,QACTyI,EAAUzJ,EAAOgB,OAAQhB,EAAO1e,MAAQ,UAEtC0e,EAAOhW,MAAQgW,EAAOmB,QAExBsI,EAAUE,EAAoB3J,EAAOhW,KAAMgW,EAAOmB,QAAS,aAEzDnB,EAAOlW,YACTye,IAAavI,EAAOlW,aAGtB2f,EAAUzJ,EAAOplB,OAAS,iBAAkB,QAEhD,OAASA,GACP6uB,EAAU,UAAU7uB,EAAMqX,UAAW,QACvC,SACEkX,GAAgB,EAClB,CA/BqB,GAqGnB2C,CAAcjrB,GACd6nB,EAAS,IACTO,GAAmB,QACrB,GAAqB,YAAVvU,EAAEyH,KAEX,GADAzH,EAAE2H,iBACEwM,EAAehM,EAAexd,OAAS,EAAG,CAC5C,MAAM0sB,EAAWlD,EAAe,EAChCC,EAAgBiD,GAChBrD,EAAS7L,EAAeA,EAAexd,OAAS,EAAI0sB,GACtD,OACF,GAAqB,cAAVrX,EAAEyH,IAEX,GADAzH,EAAE2H,iBACEwM,EAAe,EAAG,CACpB,MAAMkD,EAAWlD,EAAe,EAChCC,EAAgBiD,GAChBrD,EAAS7L,EAAeA,EAAexd,OAAS,EAAI0sB,GACtD,MAA4B,IAAjBlD,IACTC,GAAgB,GAChBJ,EAAS,SAEQ,QAAVhU,EAAEyH,KACXzH,EAAE2H,iBACEnD,EAAY7Z,OAAS,IACvBqpB,EAASxP,EAAY,IACrB+P,GAAmB,KAEF,WAAVvU,EAAEyH,KACX8M,GAAmB,IAqLL3M,YAAY,wDACZjjB,UAAU,kFACVqjB,SAAUwM,IAEXA,SACE,OAAI7vB,UAAU,kBACb6B,SAAAxB,MAACsyB,EAAA,CAAI3yB,UAAU,+BAKrB8B,OAAC,OAAI9B,UAAU,+DACb6B,SAAA,CAAAxB,MAAC,QAAKwB,SAAA,gFAGL,QACEA,SAAA,CAAA2hB,EAAexd,OAAO,gnCCjarC4sB,GAAc,KAClB,MAAMC,SAAEA,GAAaC,IAMrB,OAJAjc,YAAU,KACRnV,OAAOqxB,SAAS,EAAG,IAClB,CAACF,IAEG,MCPF,SAASG,MAAM5I,GACpB,OAAO6I,EAAQC,EAAK9I,GACtB,CCHA,MAAM+I,GAAiB,EACrBrzB,OAAO,UACPE,YAAY,GACZ+G,OAAO,aACPqsB,YAAW,EACXC,UAAU,cAEV,MAOMC,EAAiB,CACrBC,QAAS,eACTC,UAAW,iBACXC,MAAO,wBACPC,MAAO,cAUT,cACG,OAAI1zB,UAAWgzB,GAAG,sDAAuDhzB,GACxE6B,SAAA,CAAAxB,MAAC,OACCL,UAAWgzB,GACT,yEAzBY,CAClBW,GAAI,UACJC,QAAS,UACTC,GAAI,YACJC,GAAI,aAsBch0B,GACZwzB,EAAeD,MAGlBD,GACC/yB,MAAC,KAAEL,UAAWgzB,GAAG,cAjBC,CACtBW,GAAI,UACJC,QAAS,UACTC,GAAI,YACJC,GAAI,WAagDh0B,GAAOwzB,EAAeD,IAAYxxB,SAAAkF,QChCpFgtB,GAA0BC,OAAK,IAAAC,GAAA,IAAMnO,OAAO,uBAAmCoO,qDAC/EC,GAA2BH,OAAK,WAAMlO,OAAO,6EAC7CsO,GAAmCJ,OACvC,IAAAC,GAAA,IAAMnO,OAAO,uBAA6CoO,oDAEtDG,GAAgBL,OAAK,WAAMlO,OAAO,+BAA0CoO,uDAC5EI,GAAoBN,OAAK,WAAMlO,OAAO,mCAA8CoO,+BACpFK,GAAoBP,OAAK,IAAAC,GAAA,IAAMnO,OAAO,qCAA6BoO,+BACnEM,GAAkBR,OAAK,IAAAC,GAAA,IAAMnO,OAAO,iCAAyBoO,uDAC7DO,GAAqBT,OAAK,IAAAC,GAAA,IAAMnO,OAAO,oCAA4BoO,8CACnEQ,GAAWV,OAAK,IAAAC,GAAA,IAAMnO,OAAO,0BAAkBoO,8CAC/CS,GAAsBX,OAAK,IAAAC,GAAA,IAAMnO,OAAO,qCAA6BoO,kDACrEU,GAAsBZ,OAAK,IAAAC,GAAA,IAAMnO,OAAO,qCAAkCoO,wDAC1EW,GAAWb,OAAK,IAAAC,GAAA,IAAMnO,OAAO,0BAAkBoO,yCAE/CY,GAAS,IAEXz0B,MAAC00B,EAAA,CACClzB,SAAAC,OAAClB,EAAA,CACCiB,SAAA,CAAAxB,MAACuyB,GAAA,UACAoC,WAAA,CAASC,eAAW9B,GAAA,IACnBtxB,gBAACqzB,EAAA,CAECrzB,SAAA,CAAAxB,MAAC80B,GAAM9L,KAAK,IAAI/lB,QAASjD,MAAC0zB,eACzBoB,EAAA,CAAM9L,KAAK,6BAA6B/lB,QAASjD,MAAC0zB,eAClDoB,EAAA,CAAM9L,KAAK,gCAAgC/lB,QAASjD,MAAC8zB,SACtD9zB,MAAC80B,EAAA,CACC9L,KAAK,uCACL/lB,cAAU8wB,GAAA,YAEXe,EAAA,CAAM9L,KAAK,kBAAkB/lB,QAASjD,MAACg0B,eACvCc,EAAA,CAAM9L,KAAK,uBAAuB/lB,QAASjD,MAACi0B,eAC5Ca,EAAA,CAAM9L,KAAK,uBAAuB/lB,QAASjD,MAACk0B,eAC5CY,EAAA,CAAM9L,KAAK,uBAAuB/lB,QAASjD,MAACo0B,eAC5CU,EAAA,CAAM9L,KAAK,aAAa/lB,QAASjD,MAACq0B,eAClCS,EAAA,CAAM9L,KAAK,wBAAwB/lB,QAASjD,MAACs0B,eAC7CQ,EAAA,CAAM9L,KAAK,oBAAoB/lB,QAASjD,MAACm0B,eACzCW,EAAA,CAAM9L,KAAK,yBAAyB/lB,QAASjD,MAACu0B,eAC9CO,EAAA,CAAM9L,KAAK,IAAI/lB,QAASjD,MAACw0B,mBCnCtC,SAASO,KACP,MAAM9d,UAAEA,EAAA+d,cAAWA,GCTd,WACL,MAAO/d,EAAWge,GAAgB5f,YAAS,GAErC6f,EAAkBnf,cAAY,KAClCkf,EAAazc,IAASA,IACrB,IAEG2c,EAAgBpf,cAAY,KAChCkf,GAAa,IACZ,IAEGD,EAAgBjf,cAAY,KAChCkf,GAAa,IACZ,IA0CH,OAvCAze,YAAU,KACR,MAAM4e,EAAiB3iB,KAChBA,EAAM4iB,SAAW5iB,EAAM6iB,UAAY7iB,EAAMiQ,UAA0B,MAAdjQ,EAAMgQ,MAC9DhQ,EAAMkQ,iBACNuS,MAMJ,OAFAhyB,SAASgN,iBAAiB,UAAWklB,GAE9B,KACLlyB,SAASqyB,oBAAoB,UAAWH,KAEzC,CAACF,IAGJ1e,YAAU,OAqBP,IAEI,CACLS,YACAie,kBACAC,gBACAH,gBAEJ,CDpDuCQ,IAC9BC,EAAmBC,GAAwBrgB,YAAS,IACpD6J,EAAgByW,GAAqBtgB,WAAS,CACnD2T,KAAM3nB,OAAOgB,SAASmwB,SACtBnqB,WAAA,IAAeC,MAAOC,iBAEjB4W,EAAeyW,GAAoBvgB,WAAS,OAC5C+J,EAAYyW,GAAiBxgB,WAAS,MAG7CmB,YAAU,KACRxI,KACC,IAGHwI,YAAU,KACRmf,EAAkB,CAChB3M,KAAM3nB,OAAOgB,SAASmwB,SACtBnqB,WAAA,IAAeC,MAAOC,iBAEvB,CAAClH,OAAOgB,SAASmwB,WAGpBhc,YAAU,KACR,MAAMsf,EAAkB9a,KACjBA,EAAEsa,SAAWta,EAAEqa,UAAsB,MAAVra,EAAEyH,MAChCzH,EAAE2H,iBACF+S,EAAqBld,IAASA,KAKlC,OADAtV,SAASgN,iBAAiB,UAAW4lB,GAC9B,IAAM5yB,SAASqyB,oBAAoB,UAAWO,IACpD,IAMH,OACE91B,MAACO,EAAA,CACCiB,SAAAC,OAACwZ,GAAA,CACCzZ,SAAA,CAAAxB,MAACy0B,GAAA,IACDz0B,MAACgX,GAAA,CACCC,YACAC,QAAS8d,IAEXh1B,MAAC+e,GAAA,CACCC,OAAQyW,EACRxW,SAAU,IAAMyW,EAAqBld,IAASA,GAC9C0G,iBACAC,gBACAC,eAIFpf,MAAC4uB,GAAA,CACC1P,iBACAC,gBACAC,aACAyP,WAzBkBkH,IACxB10B,OAAOgB,SAASC,KAAOyzB,MA4BjBN,GACAz1B,MAAC,UACCoC,QAAS,IAAMszB,GAAqB,GACpC/1B,UAAU,0LACVqxB,MAAM,sCAENxvB,SAAAxB,MAAC,OAAIL,UAAU,UAAUmC,KAAK,OAAOE,OAAO,eAAeH,QAAQ,YACjEL,eAAC,QAAKU,cAAc,QAAQC,eAAe,QAAQvC,YAAa,EAAGmC,EAAE,6NAOnF,CExFA,MAKai0B,GAAYC,EAAY,CACnCz2B,KAAM,OACN02B,aAPmB,CACnB12B,KAAM,QACN22B,iBAAiB,GAMjBC,SAAU,CACRC,MAAO,CAACx1B,EAAOggB,KACbhgB,EAAMrB,KAAOqhB,EAAOyV,QAAQ92B,KAC5BqB,EAAMs1B,iBAAkB,GAE1BI,OAAS11B,IACPA,EAAMrB,KAAO,QACbqB,EAAMs1B,iBAAkB,OAKjBE,MAAEA,GAAKE,OAAEA,IAAWP,GAAUxV,QClB9BgW,GAAQC,EAAe,CAClCC,QAAS,CACPC,KDkBWX,GAAUU,WERzB,IAAIE,GAAe,KAEZ,SAASC,KAId,OAHKD,KACHA,GAjBG,WACL,GAAsB,oBAAXv1B,QAA0BA,OAAOy1B,OAAQ,CAClD,MAAMC,EAAQ,IAAIC,WAAW,IAE7B,OADA31B,OAAOy1B,OAAOG,gBAAgBF,GACvBG,KAAK1G,OAAO2G,aAAaC,MAAM,KAAML,GAC9C,CAGA,OAAOhtB,KAAKyK,SAASC,SAAS,IAAI7N,UAAU,EAAG,IACxCmD,KAAKyK,SAASC,SAAS,IAAI7N,UAAU,EAAG,GACjD,CAOmBywB,IAEVT,EACT,CA2NO,SAASU,KACd,MAAMx0B,EAAa,GAEnB,GAAwB,oBAAbI,SAA0B,OAAOJ,EAG5C,MAAMy0B,EAAgBr0B,SAAS6C,iBAAiB,kCAC5CwxB,EAAc5xB,OAAS,GACzB7C,EAAW8B,KAAK,CACdgD,KAAM,8BACNmL,MAAOwkB,EAAc5xB,OACrB6xB,SAAUhtB,MAAMC,KAAK8sB,GAAete,MAAM,EAAG,KAKjD,MAAMwe,EAAev0B,SAAS6C,iBAAiB,sBAC3C0xB,EAAa9xB,OAAS,GACxB7C,EAAW8B,KAAK,CACdgD,KAAM,0BACNmL,MAAO0kB,EAAa9xB,OACpB4E,eAAgB,4CAiBpB,OAZwBrH,SAAS6C,iBAAiB,eAClCtB,QAAQizB,IACtB,MAAMC,EAAMD,EAAOnwB,aAAa,QAC5BowB,GAAQA,EAAI9Q,WAAW,aAAgB8Q,EAAI9Q,WAAW,MACxD/jB,EAAW8B,KAAK,CACdgD,KAAM,2BACN+vB,MACA10B,QAASy0B,MAKR50B,CACT,CAGO,SAAS80B,KACU,oBAAb10B,UAEXA,SAASgN,iBAAiB,0BAA4BuC,KAoBxD,SAA0B7J,GAExBivB,MAAM,sBAAuB,CAC3BC,OAAQ,OACRrc,QAAS,CACP,eAAgB,oBAElB8V,KAAMrkB,KAAKM,UAAU5E,KACpBmvB,MAAM72B,MAGX,CAhBM82B,CAdgB,CAChBC,WAAYxlB,EAAMwlB,WAClBC,kBAAmBzlB,EAAMylB,kBACzBC,eAAgB1lB,EAAM0lB,eACtBC,YAAa3lB,EAAM2lB,YACnB/vB,UAAWC,KAAKyE,MAChBwD,UAAWC,UAAUD,UACrBvD,IAAK3L,OAAOgB,SAASC,QAU3B,CC/SA,MAAM+1B,GAAcC,QACW,cAA7Bj3B,OAAOgB,SAASk2B,UACa,UAA7Bl3B,OAAOgB,SAASk2B,UAChBl3B,OAAOgB,SAASk2B,SAASpsB,MACvB,2DAIG,SAASqsB,KACd,GAAI,kBAAmBhoB,UAAW,CAEhC,GADkB,IAAI4gB,IAAI,IAA0B/vB,OAAOgB,SAASC,MACtDm2B,SAAWp3B,OAAOgB,SAASo2B,OACvC,OAGFp3B,OAAO6O,iBAAiB,OAAQ,KAC9B,MAAMwoB,EAAQ,SAEVL,KA2CV,SAAiCK,GAC/Bb,MAAMa,EAAO,CACXjd,QAAS,CAAE,iBAAkB,YAE5Bkd,KAAMhd,IACL,MAAMid,EAAcjd,EAASF,QAAQQ,IAAI,gBAEnB,MAApBN,EAASrB,QACO,MAAfse,QAAuBA,EAAYC,QAAQ,cAE5CroB,UAAUsoB,cAAcC,MAAMJ,KAAMK,IAClCA,EAAaC,aAAaN,KAAK,KAC7Bt3B,OAAOgB,SAAS62B,aAIpBC,GAAgBT,KAGnBX,MAAM,KA8CTqB,GACE,eACA,0DACA,YA7CJ,CAjEQC,CAAwBX,GACxBloB,UAAUsoB,cAAcC,MAAMJ,KAAK,SAInCQ,GAAgBT,IAGtB,CACF,CAEA,SAASS,GAAgBT,GACvBloB,UAAUsoB,cACPQ,SAASZ,GACTC,KAAMK,IAILA,EAAa9oB,iBAAiB,cAAe,KAC3C,MAAMqpB,EAAmBP,EAAaQ,WACd,MAApBD,GAIJA,EAAiBrpB,iBAAiB,cAAe,KAChB,cAA3BqpB,EAAiB14B,QACf2P,UAAUsoB,cAAcW,WAsDxC,WACM,iBAAkBp4B,QAAsC,YAA5Bq4B,aAAaC,YAC3C,IAAID,aAAa,sCAAuC,CACtDnI,KAAM,iDACN5Q,KAAM,6BACNiZ,MAAO,6BACPC,IAAK,eAKTT,GACE,mBACA,mEACA,OAEJ,CApEcU,GAuEZV,GACE,wBACA,iEACA,kBAjECrB,MAAO72B,MAGZ,CA0EA,SAASk4B,GAAsBpI,EAAOzY,EAAS3Q,EAAO,QAEpD,MAAMmyB,EAAe72B,SAASouB,cAAc,OAC5CyI,EAAap6B,UAAY,yEAEZ,YAATiI,EAAqB,qDAAuD,WACnE,YAATA,EAAqB,wDAA0D,WACtE,SAATA,EAAkB,kDAAoD,qEAI1EmyB,EAAaC,UAAY,6GAGehJ,sDACGzY,wLAQ3CrV,SAASquB,KAAKC,YAAYuI,GAG1BrnB,sBAAsB,KACpBqnB,EAAa1X,MAAM4X,UAAY,kBAIjC9pB,WAAW,KACL4pB,EAAaG,gBACfH,EAAa1X,MAAM4X,UAAY,mBAC/B9pB,WAAW,IAAM4pB,EAAaI,SAAU,OAEzC,IACL,CAYA,IAAIC,GAEJ/4B,OAAO6O,iBAAiB,sBAAwB8K,IAC9CA,EAAE2H,iBACFyX,GAAiBpf,EAInB,WAEE,MAAMqf,EAAgBn3B,SAASouB,cAAc,OAC7C+I,EAAc16B,UAAY,uJAK1B06B,EAAcL,UAAY,uhBAe1B92B,SAASquB,KAAKC,YAAY6I,GAG1BA,EAAcz2B,cAAc,gBAAgBsM,iBAAiB,QAAS8F,UACpE,GAAIokB,GAAgB,CAClBA,GAAeE,SACf,MAAMC,QAAEA,SAAkBH,GAAeI,WAEzCJ,GAAiB,IACnB,CACAC,EAAcF,WAIhBE,EAAcz2B,cAAc,gBAAgBsM,iBAAiB,QAAS,KACpEmqB,EAAcF,SACdC,GAAiB,MAErB,CA5CEK,KA+CFp5B,OAAO6O,iBAAiB,eAAgB,KAEtCkpB,GACE,gBACA,sDACA,WAEFgB,GAAiB,OCxOnB,MAAMM,GAAYx3B,SAASsI,eAAe,QAC7BmvB,aAAWD,IAEnBn5B,OACHvB,MAAC46B,EAAA,CAASpE,SACRh1B,SAAAxB,MAAC+0B,WFiTE,WACL,MAAM8F,EAAQhE,MAzHT,SAAuBgE,GAC5B,GAAwB,oBAAb33B,SAA0B,OAGfA,SAAS6C,iBAAiB,qBAClCtB,QAAQizB,IACpBA,EAAOoD,aAAa,QAASD,KAIV33B,SAAS6C,iBAAiB,SAClCtB,QAAQ4d,IACnBA,EAAMyY,aAAa,QAASD,IAEhC,CA8GEE,CAAcF,GAGdjD,KAGA,MAAM90B,EAAaw0B,KACfx0B,EAAW6C,OAKfmN,YAAY,KACgBwkB,KACJ3xB,OAAS7C,EAAW6C,QAIzC,IAIL,CEtUsBq1B,IDiQtB,WACE,IACE,MAAM3e,EAAS,IAAI4e,gBAAgB55B,OAAOgB,SAAS4iB,QACnD,OAC0B,IAAxBzU,UAAU0qB,WACV7e,EAAO8e,IAAI,SACX9e,EAAO8e,IAAI,OACX9e,EAAO8e,IAAI,UACW,MAAtB9e,EAAOJ,IAAI,MAEf,OAASjB,GACP,OAA+B,IAAxBxK,UAAU0qB,SACnB,CACF,EAKME,KAKJ5C,KAtDK,WACL,SAAS6C,IACP,MAAMC,EAAW9qB,UAAU+qB,OAGtBD,EAOHlC,GACE,sBACA,6CACA,WATFA,GACE,kBACA,mDACA,WAWJl2B,SAASquB,KAAKuJ,aAAa,sBAAuBQ,EAAW,SAAW,UAC1E,CAEAj6B,OAAO6O,iBAAiB,SAAUmrB,GAClCh6B,OAAO6O,iBAAiB,UAAWmrB,GAGnCA,GACF,CA2BEG,ICnRFxtB","names":["Icon","name","size","color","className","strokeWidth","props","IconComponent","LucideIcons","jsx","HelpCircle","propTypes","PropTypes","string","isRequired","number","ErrorBoundary","React","Component","constructor","super","this","state","hasError","getDerivedStateFromError","_error","componentDidCatch","error","errorInfo","__ErrorBoundary","window","__COMPONENT_ERROR__","render","children","jsxs","xmlns","width","height","viewBox","fill","d","stroke","strokeMiterlimit","strokeLinecap","strokeLinejoin","onClick","location","href","accessibilityTester","options","rules","enabled","tags","runOnly","reporter","violations","lastTestResults","runTests","element","document","testOptions","results","axeCore","run","logResults","storeResults","testFinancialComponent","selector","componentType","querySelector","Error","config","spreadsheet","chart","calculator","label","modal","testKeyboardNavigation","focusableElements","getFocusableElements","tabOrderIssues","previousTabIndex","forEach","index","tabIndex","push","tagName","id","position","issue","focusVisibilityIssues","styles","getComputedStyle","hasOutline","outline","hasBoxShadow","boxShadow","hasBackground","backgroundColor","focusableElementsCount","length","passed","testColorContrast","textElements","querySelectorAll","contrastIssues","textColor","contrast","calculateContrastRatio","fontSize","parseInt","fontWeight","requiredRatio","toFixed","required","text","textContent","substring","totalElements","testFormAccessibility","forms","formIssues","form","formIndex","input","issues","hasAssociatedLabel","hasRequiredIndication","getAttribute","hasErrorMessage","isFinancialInput","autocomplete","inputType","type","inputId","inputName","totalForms","generateReport","passes","incomplete","inapplicable","summary","timestamp","Date","toISOString","totalChecks","score","calculateAccessibilityScore","map","violation","impact","description","help","helpUrl","nodes","recommendations","generateRecommendations","financialSpecific","getFinancialAccessibilityInsights","totalTests","impactWeights","critical","serious","moderate","minor","violationScore","reduce","maxPossibleScore","Math","max","category","priority","solution","financialContext","insights","component","recommendation","Array","from","join","ariaLabel","ariaLabelledby","closest","ariaRequired","requiredAttr","hasAttribute","hasRequiredText","hasRequiredTextIndicator","getAssociatedLabel","includes","toLowerCase","ariaDescribedby","errorElement","getElementById","some","color1","color2","rgb1","parseColor","rgb2","l1","getLuminance","l2","min","match","r","g","b","rs","gs","bs","c","pow","reportViolations","node","reportData","now","url","existingReports","JSON","parse","localStorage","getItem","splice","setItem","stringify","webVitalsData","CLS","FID","FCP","LCP","TTFB","INP","initializePerformanceMonitoring","clsValue","clsEntries","PerformanceObserver","entryList","entry","getEntries","hadRecentInput","value","reportWebVital","observe","buffered","processingStart","startTime","interactionId","duration","processingEnd","entries","lastEntry","navigationEntry","performance","getEntriesByType","responseStart","requestStart","initializeWebVitals","mark","trackComponentRender","componentName","renderTime","measure","reportCustomMetric","trackCalculationPerformance","calculationType","complexity","addEventListener","setTimeout","navigation","timings","data","userAgent","navigator","connection","getConnectionInfo","sendToAnalytics","reportNavigationTiming","dns","domainLookupEnd","domainLookupStart","tcp","connectEnd","connectStart","ssl","secureConnectionStart","ttfb","download","responseEnd","domProcessing","domComplete","domLoading","totalLoadTime","loadEventEnd","fetchStart","list","initiatorType","resourceData","transferSize","encodedBodySize","cached","reportResourceTiming","entryTypes","interactionCount","totalInteractionTime","eventType","event","requestAnimationFrame","interactionTime","target","passive","setInterval","count","averageTime","trackUserInteractions","metric","round","checkPerformanceBudgets","Object","budget","overBy","effectiveType","downlink","rtt","analyticsData","sessionId","getSessionId","userId","getUserId","existingData","sendAnalyticsBatch","queuedData","gtag","item","custom_parameter","removeItem","sessionStorage","random","toString","substr","reportPerformanceMetric","trackFinancialComponentPerformance","metrics","useFinancialAccessibility","accessibility","autoTest","testInterval","onViolations","onSuccess","setResults","useState","isLoading","setIsLoading","setViolations","setScore","lastTestTime","setLastTestTime","elementRef","useRef","intervalRef","useCallback","async","targetElement","current","testResults","navResults","contrastResults","formResults","report","useEffect","runAutoTest","clearInterval","useAccessibility","testFinancialFeatures","keyboardNav","colorContrast","formAccessibility","PerformanceDashboard","isVisible","onClose","dashboardData","setDashboardData","refreshInterval","setRefreshInterval","isMonitoring","setIsMonitoring","alertThreshold","setAlertThreshold","alerts","startMonitoring","startAccessibilityMonitoring","stopMonitoring","stopAccessibilityMonitoring","clearAlerts","threshold","alertOnViolations","monitorInterval","setAlerts","monitor","alert","message","prev","criticalViolations","filter","v","useAccessibilityMonitor","refreshData","accessibilityHistory","analyticsQueue","recentAccessibility","slice","avgScore","sum","avgViolations","performanceMetrics","webVitalMetrics","webVitals","budgetViolations","currentScore","averageScore","averageViolations","history","trends","scoreImproving","recentMetrics","webVitalHistory","getPerformanceDashboardData","toggleMonitoring","interval","formatMetric","unit","status","good","poor","getMetricStatus","statusColor","getStatusColor","fillRule","clipRule","toLocaleTimeString","onChange","e","SEOProvider","HelmetProvider","secureApiClient","baseURL","client","axios","create","timeout","headers","interceptors","response","use","Promise","reject","getQuote","symbol","get","toUpperCase","getHistoricalData","range","params","getIntradayData","getBatchQuotes","symbols","post","s","getIncomeStatement","period","limit","getBalanceSheet","getCashFlowStatement","getFinancialRatios","getCompanyProfile","getPeerCompanies","getDCFValuation","getEarnings","getFREDData","seriesId","startDate","endDate","start_date","end_date","getEconomicIndicators","getTreasuryRates","getHealthStatus","getServiceHealth","getCacheStats","fetchMarketData","ticker","meta","timestamps","prices","close","high","low","open","volume","source","fetchFinancialStatements","statement","fetchPeerComparables","peers","AIFinancialAssistant","isOpen","onToggle","currentContext","portfolioData","marketData","messages","setMessages","content","suggestions","inputValue","setInputValue","isMinimized","setIsMinimized","messagesEndRef","inputRef","scrollIntoView","behavior","handleSendMessage","trim","userMessage","context","previousMessages","assistantMessage","charts","actions","fallbackMessage","quickActions","icon","PieChart","action","TrendingUp","AlertTriangle","Calculator","Target","BarChart3","motion","div","initial","opacity","scale","y","animate","exit","Brain","Maximize2","Minimize2","X","Fragment","AnimatePresence","User","Bot","suggestion","handleSuggestionClick","style","animationDelay","ref","onKeyPress","key","shiftKey","preventDefault","placeholder","rows","minHeight","maxHeight","disabled","Send","CLICommandProcessor","commandHistory","aliases","p","md","calc","nav","clear","ls","ll","cd","commands","initializeCommands","updateContext","newContext","usage","handler","handleHelp","bind","portfolio","handlePortfolio","handleMarketData","quote","handleQuote","calculate","handleCalculate","dcf","handleDCF","navigate","handleNavigate","handleList","search","handleSearch","analyze","handleAnalyze","risk","handleRisk","export","handleExport","import","handleImport","handleStatus","handleClear","version","handleVersion","processCommand","parts","parseCommand","commandName","resolveAlias","command","success","result","args","flags","split","remaining","i","part","startsWith","getSuggestions","partial","keys","cmd","concat","alias","sort","getCommandArgumentSuggestions","output","categories","padEnd","format","calcType","growth","discount","terminal","page","routes","workspace","analysis","detailed","holdings","h","Symbol","Shares","shares","Value","Weight","weight","query","encodeURIComponent","charAt","dataType","filePath","path","toLocaleString","formatCurrency","currency","compact","isNaN","Intl","NumberFormat","notation","minimumFractionDigits","maximumFractionDigits","formatPercentage","decimals","formatNumber","calculateDCFValuation","inputs","currentRevenue","revenueGrowthRate","fcfMargin","wacc","terminalGrowthRate","sharesOutstanding","totalDebt","cash","projectionYears","projectedRevenues","baseCashFlow","growthRates","years","cashFlows","currentCashFlow","isArray","projectCashFlows","projectedFCFs","revenue","terminalValue","finalCashFlow","discountRate","calculateTerminalValue","pvOfCashFlows","npv","cashFlow","pvOfTerminalValue","enterpriseValue","equityValue","pricePerShare","calculateLBOReturns","purchasePrice","ebitda","debtMultiple","exitMultiple","exitYear","managementFeeRate","carriedInterestRate","equityInvestment","exitEbitda","exitEnterpriseValue","exitEquityValue","totalReturn","irr","moic","totalManagementFees","carriedInterest","managementFees","netReturn","calculateComparableMetrics","companyData","peerData","peerStats","peerValues","peer","values","validValues","median","mean","a","floor","calculateStatistics","company","peerStatistics","relativeValuation","marketCapPercentile","calculatePercentile","marketCap","peRatioRelative","peRatio","evEbitdaRelative","evToEbitda","priceToBookRelative","priceToBook","dataset","validDataset","PersistentCLI","onNavigate","isExpanded","setIsExpanded","setInput","setOutput","setCommandHistory","historyIndex","setHistoryIndex","setSuggestions","showSuggestions","setShowSuggestions","isProcessing","setIsProcessing","outputRef","cliProcessor","scrollTop","scrollHeight","focus","addOutput","newOutput","formatCommandOutput","formatTable","formatPortfolioData","formatMarketData","maxWidths","header","row","String","repeat","totalValue","holding","padStart","getOutputTypeColor","Terminal","stopPropagation","title","exportText","blob","Blob","URL","createObjectURL","createElement","body","appendChild","click","removeChild","revokeObjectURL","exportOutput","Download","ChevronDown","ChevronUp","transition","ease","newSuggestions","onKeyDown","handleCommand","newIndex","Zap","ScrollToTop","pathname","useLocation","scrollTo","cn","twMerge","clsx","LoadingSpinner","showText","variant","variantClasses","primary","secondary","muted","white","sm","default","lg","xl","FinancialModelWorkspace","lazy","__vitePreload","__VITE_PRELOAD__","RealTimeMarketDataCenter","ScenarioAnalysisSensitivityTools","ValuationTool","ValuationToolDocs","ValuationToolDemo","PrivateAnalysis","ValuationWorkbench","ModelLab","PortfolioManagement","FinancialInputsDemo","NotFound","Routes","BrowserRouter","Suspense","fallback","RouterRoutes","Route","App","hideDashboard","setIsVisible","toggleDashboard","showDashboard","handleKeyDown","ctrlKey","metaKey","removeEventListener","usePerformanceDashboard","isAIAssistantOpen","setIsAIAssistantOpen","setCurrentContext","setPortfolioData","setMarketData","handleKeyPress","route","userSlice","createSlice","initialState","isAuthenticated","reducers","login","payload","logout","store","configureStore","reducer","user","currentNonce","getCurrentNonce","crypto","array","Uint8Array","getRandomValues","btoa","fromCharCode","apply","generateNonce","validateCSPCompliance","inlineScripts","elements","inlineStyles","script","src","setupCSPReporting","fetch","method","catch","sendCSPViolation","blockedURI","violatedDirective","originalPolicy","disposition","isLocalhost","Boolean","hostname","registerSW","origin","swUrl","then","contentType","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","showInAppNotification","checkValidServiceWorker","register","installingWorker","installing","controller","Notification","permission","badge","tag","showUpdateAvailableNotification","notification","innerHTML","transform","parentElement","remove","deferredPrompt","installBanner","prompt","outcome","userChoice","showInstallPrompt","container","createRoot","Provider","nonce","setAttribute","applyCspNonce","initializeSecurity","URLSearchParams","webdriver","has","isAutomatedEnvironment","updateOnlineStatus","isOnline","onLine","setupNetworkHandling"],"ignoreList":[],"sources":["../../src/components/AppIcon.jsx","../../src/components/ErrorBoundary.jsx","../../src/utils/accessibilityTesting.js","../../src/utils/performanceMonitoring.js","../../src/hooks/useAccessibility.js","../../src/components/PerformanceDashboard/PerformanceDashboard.jsx","../../src/components/SEO/SEOProvider.jsx","../../src/services/secureApiClient.js","../../src/components/AIAssistant/AIFinancialAssistant.jsx","../../src/services/cliCommandProcessor.js","../../src/utils/dataTransformation.js","../../src/components/CLI/PersistentCLI.jsx","../../src/components/ScrollToTop.jsx","../../src/utils/cn.js","../../src/components/ui/LoadingSpinner.jsx","../../src/Routes.jsx","../../src/App.jsx","../../src/hooks/usePerformanceDashboard.js","../../src/store/slices/userSlice.js","../../src/store/store.js","../../src/utils/securityHeaders.js","../../src/utils/serviceWorker.js","../../src/index.jsx"],"sourcesContent":["import * as LucideIcons from 'lucide-react';\nimport { HelpCircle } from 'lucide-react';\nimport PropTypes from 'prop-types';\n\nfunction Icon({\n  name,\n  size = 24,\n  color = 'currentColor',\n  className = '',\n  strokeWidth = 2,\n  ...props\n}) {\n  const IconComponent = LucideIcons[name];\n\n  if (!IconComponent) {\n    return (\n      <HelpCircle\n        size={size}\n        color=\"gray\"\n        strokeWidth={strokeWidth}\n        className={className}\n        {...props}\n      />\n    );\n  }\n\n  return (\n    <IconComponent\n      size={size}\n      color={color}\n      strokeWidth={strokeWidth}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  strokeWidth: PropTypes.number\n};\n\nexport default Icon;\n","import React from 'react';\n\nimport Icon from './AppIcon';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(_error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    error.__ErrorBoundary = true;\n    window.__COMPONENT_ERROR__?.(error, errorInfo);\n    // console.log(\"Error caught by ErrorBoundary:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"min-h-screen flex items-center justify-center bg-neutral-50\">\n          <div className=\"text-center p-8 max-w-md\">\n            <div className=\"flex justify-center items-center mb-2\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"42px\"\n                height=\"42px\"\n                viewBox=\"0 0 32 33\"\n                fill=\"none\"\n              >\n                <path\n                  d=\"M16 28.5C22.6274 28.5 28 23.1274 28 16.5C28 9.87258 22.6274 4.5 16 4.5C9.37258 4.5 4 9.87258 4 16.5C4 23.1274 9.37258 28.5 16 28.5Z\"\n                  stroke=\"#343330\"\n                  strokeWidth=\"2\"\n                  strokeMiterlimit=\"10\"\n                />\n                <path\n                  d=\"M11.5 15.5C12.3284 15.5 13 14.8284 13 14C13 13.1716 12.3284 12.5 11.5 12.5C10.6716 12.5 10 13.1716 10 14C10 14.8284 10.6716 15.5 11.5 15.5Z\"\n                  fill=\"#343330\"\n                />\n                <path\n                  d=\"M20.5 15.5C21.3284 15.5 22 14.8284 22 14C22 13.1716 21.3284 12.5 20.5 12.5C19.6716 12.5 19 13.1716 19 14C19 14.8284 19.6716 15.5 20.5 15.5Z\"\n                  fill=\"#343330\"\n                />\n                <path\n                  d=\"M21 22.5C19.9625 20.7062 18.2213 19.5 16 19.5C13.7787 19.5 12.0375 20.7062 11 22.5\"\n                  stroke=\"#343330\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </div>\n            <div className=\"flex flex-col gap-1 text-center\">\n              <h1 className=\"text-2xl font-medium text-neutral-800\">Something went wrong</h1>\n              <p className=\"text-neutral-600 text-base w w-8/12 mx-auto\">\n                We encountered an unexpected error while processing your request.\n              </p>\n            </div>\n            <div className=\"flex justify-center items-center mt-6\">\n              <button\n                onClick={() => {\n                  window.location.href = '/';\n                }}\n                className=\"bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded flex items-center gap-2 transition-colors duration-200 shadow-sm\"\n              >\n                <Icon name=\"ArrowLeft\" size={18} color=\"#fff\" />\n                Back\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","// Accessibility Testing Framework with axe-core\nimport axeCore from 'axe-core';\n\nclass AccessibilityTester {\n  constructor(options = {}) {\n    this.options = {\n      // Default axe configuration\n      rules: {\n        // Financial application specific rules\n        'color-contrast': { enabled: true },\n        'keyboard-navigation': { enabled: true },\n        'focus-management': { enabled: true },\n        'aria-labels': { enabled: true },\n        'heading-order': { enabled: true },\n        'landmark-one-main': { enabled: true },\n        'skip-link': { enabled: true },\n\n        // Disable rules that might conflict with financial widgets\n        'nested-interactive': { enabled: false }, // Some financial tables need nested controls\n\n        ...options.rules\n      },\n      tags: ['wcag2a', 'wcag2aa', 'wcag21aa', 'best-practice'],\n      runOnly: options.runOnly || null,\n      reporter: options.reporter || 'v2',\n      ...options\n    };\n\n    this.violations = [];\n    this.lastTestResults = null;\n  }\n\n  // Run accessibility tests on current page or specific element\n  async runTests(element = document, options = {}) {\n    const testOptions = {\n      ...this.options,\n      ...options\n    };\n\n    try {\n      console.log('🔍 Running accessibility tests...');\n      const results = await axeCore.run(element, testOptions);\n\n      this.lastTestResults = results;\n      this.violations = results.violations;\n\n      // Log results\n      this.logResults(results);\n\n      // Report violations in development\n      if (process.env.NODE_ENV === 'development') {\n        this.reportViolations(results.violations);\n      }\n\n      // Store results for analytics\n      this.storeResults(results);\n\n      return results;\n    } catch (error) {\n      console.error('Accessibility testing failed:', error);\n      throw error;\n    }\n  }\n\n  // Test specific financial components\n  async testFinancialComponent(selector, componentType = 'generic') {\n    const element = document.querySelector(selector);\n    if (!element) {\n      throw new Error(`Element not found: ${selector}`);\n    }\n\n    // Component-specific test configurations\n    const componentConfigs = {\n      'spreadsheet': {\n        rules: {\n          'table-header': { enabled: true },\n          'th-has-data-cells': { enabled: true },\n          'table-duplicate-name': { enabled: true },\n          'scope-attr-valid': { enabled: true }\n        },\n        tags: ['wcag2aa', 'section508']\n      },\n\n      'chart': {\n        rules: {\n          'image-alt': { enabled: true },\n          'svg-img-alt': { enabled: true },\n          'aria-hidden-focus': { enabled: true }\n        },\n        tags: ['wcag2aa']\n      },\n\n      'calculator': {\n        rules: {\n          'label': { enabled: true },\n          'form-field-multiple-labels': { enabled: true },\n          'duplicate-id': { enabled: true }\n        },\n        tags: ['wcag2aa', 'section508']\n      },\n\n      'modal': {\n        rules: {\n          'focus-trap': { enabled: true },\n          'aria-dialog-name': { enabled: true },\n          'keyboard-navigation': { enabled: true }\n        },\n        tags: ['wcag2aa', 'best-practice']\n      }\n    };\n\n    const config = componentConfigs[componentType] || {};\n    return await this.runTests(element, config);\n  }\n\n  // Test keyboard navigation\n  async testKeyboardNavigation() {\n    console.log('🎹 Testing keyboard navigation...');\n\n    const focusableElements = this.getFocusableElements();\n    const tabOrderIssues = [];\n\n    // Test tab order\n    let previousTabIndex = -1;\n    focusableElements.forEach((element, index) => {\n      const tabIndex = element.tabIndex || 0;\n\n      if (tabIndex > 0 && tabIndex <= previousTabIndex) {\n        tabOrderIssues.push({\n          element: element.tagName,\n          id: element.id,\n          tabIndex,\n          position: index,\n          issue: 'Tab order not sequential'\n        });\n      }\n\n      previousTabIndex = tabIndex;\n    });\n\n    // Test focus visibility\n    const focusVisibilityIssues = [];\n    focusableElements.forEach(element => {\n      const styles = window.getComputedStyle(element, ':focus');\n      const hasOutline = styles.outline !== 'none' && styles.outline !== '0px';\n      const hasBoxShadow = styles.boxShadow !== 'none';\n      const hasBackground = styles.backgroundColor !== 'transparent';\n\n      if (!hasOutline && !hasBoxShadow && !hasBackground) {\n        focusVisibilityIssues.push({\n          element: element.tagName,\n          id: element.id,\n          className: element.className,\n          issue: 'No visible focus indicator'\n        });\n      }\n    });\n\n    return {\n      focusableElementsCount: focusableElements.length,\n      tabOrderIssues,\n      focusVisibilityIssues,\n      passed: tabOrderIssues.length === 0 && focusVisibilityIssues.length === 0\n    };\n  }\n\n  // Test color contrast for financial data\n  async testColorContrast() {\n    console.log('🎨 Testing color contrast...');\n\n    const textElements = document.querySelectorAll('p, span, div, td, th, label, button, a, h1, h2, h3, h4, h5, h6');\n    const contrastIssues = [];\n\n    textElements.forEach(element => {\n      const styles = window.getComputedStyle(element);\n      const textColor = styles.color;\n      const backgroundColor = styles.backgroundColor;\n\n      // Skip if background is transparent\n      if (backgroundColor === 'transparent' || backgroundColor === 'rgba(0, 0, 0, 0)') {\n        return;\n      }\n\n      const contrast = this.calculateContrastRatio(textColor, backgroundColor);\n      const fontSize = parseInt(styles.fontSize);\n      const fontWeight = styles.fontWeight;\n\n      // WCAG AA requirements\n      const isLargeText = fontSize >= 18 || (fontSize >= 14 && (fontWeight === 'bold' || fontWeight >= 700));\n      const requiredRatio = isLargeText ? 3.0 : 4.5;\n\n      if (contrast < requiredRatio) {\n        contrastIssues.push({\n          element: element.tagName,\n          id: element.id,\n          className: element.className,\n          textColor,\n          backgroundColor,\n          contrast: contrast.toFixed(2),\n          required: requiredRatio,\n          fontSize,\n          fontWeight,\n          text: element.textContent?.substring(0, 50) + '...'\n        });\n      }\n    });\n\n    return {\n      totalElements: textElements.length,\n      contrastIssues,\n      passed: contrastIssues.length === 0\n    };\n  }\n\n  // Test financial forms accessibility\n  async testFormAccessibility() {\n    console.log('📝 Testing form accessibility...');\n\n    const forms = document.querySelectorAll('form');\n    const formIssues = [];\n\n    forms.forEach((form, formIndex) => {\n      const inputs = form.querySelectorAll('input, select, textarea');\n\n      inputs.forEach(input => {\n        const issues = [];\n\n        // Check for labels\n        const hasLabel = this.hasAssociatedLabel(input);\n        if (!hasLabel) {\n          issues.push('Missing label');\n        }\n\n        // Check for required field indication\n        if (input.required && !this.hasRequiredIndication(input)) {\n          issues.push('Required field not clearly indicated');\n        }\n\n        // Check for error states\n        if (input.getAttribute('aria-invalid') === 'true' && !this.hasErrorMessage(input)) {\n          issues.push('Error state without error message');\n        }\n\n        // Check for autocomplete on financial inputs\n        if (this.isFinancialInput(input) && !input.autocomplete) {\n          issues.push('Financial input missing autocomplete attribute');\n        }\n\n        if (issues.length > 0) {\n          formIssues.push({\n            formIndex,\n            inputType: input.type,\n            inputId: input.id,\n            inputName: input.name,\n            issues\n          });\n        }\n      });\n    });\n\n    return {\n      totalForms: forms.length,\n      formIssues,\n      passed: formIssues.length === 0\n    };\n  }\n\n  // Generate comprehensive accessibility report\n  generateReport() {\n    if (!this.lastTestResults) {\n      throw new Error('No test results available. Run tests first.');\n    }\n\n    const { violations, passes, incomplete, inapplicable } = this.lastTestResults;\n\n    return {\n      summary: {\n        timestamp: new Date().toISOString(),\n        totalChecks: violations.length + passes.length + incomplete.length + inapplicable.length,\n        violations: violations.length,\n        passes: passes.length,\n        incomplete: incomplete.length,\n        inapplicable: inapplicable.length,\n        score: this.calculateAccessibilityScore()\n      },\n      violations: violations.map(violation => ({\n        id: violation.id,\n        impact: violation.impact,\n        description: violation.description,\n        help: violation.help,\n        helpUrl: violation.helpUrl,\n        nodes: violation.nodes.length,\n        tags: violation.tags\n      })),\n      recommendations: this.generateRecommendations(violations),\n      financialSpecific: this.getFinancialAccessibilityInsights()\n    };\n  }\n\n  // Calculate accessibility score (0-100)\n  calculateAccessibilityScore() {\n    if (!this.lastTestResults) return 0;\n\n    const { violations, passes } = this.lastTestResults;\n    const totalTests = violations.length + passes.length;\n\n    if (totalTests === 0) return 100;\n\n    // Weight violations by impact\n    const impactWeights = { critical: 4, serious: 3, moderate: 2, minor: 1 };\n    const violationScore = violations.reduce((score, violation) => {\n      return score + (impactWeights[violation.impact] || 1);\n    }, 0);\n\n    const maxPossibleScore = totalTests * 4; // Assuming all could be critical\n    return Math.max(0, 100 - (violationScore / maxPossibleScore) * 100);\n  }\n\n  // Generate specific recommendations for financial applications\n  generateRecommendations(violations) {\n    const recommendations = [];\n\n    violations.forEach(violation => {\n      switch (violation.id) {\n        case 'color-contrast':\n          recommendations.push({\n            category: 'Visual Design',\n            priority: 'High',\n            issue: 'Insufficient color contrast',\n            solution: 'Ensure text colors meet WCAG AA standards (4.5:1 for normal text, 3:1 for large text)',\n            financialContext: 'Critical for reading financial data and avoiding misinterpretation of numbers'\n          });\n          break;\n\n        case 'keyboard-navigation':\n          recommendations.push({\n            category: 'Keyboard Access',\n            priority: 'High',\n            issue: 'Keyboard navigation issues',\n            solution: 'Ensure all interactive elements are keyboard accessible with visible focus indicators',\n            financialContext: 'Essential for users who rely on keyboard navigation to access financial tools'\n          });\n          break;\n\n        case 'label':\n          recommendations.push({\n            category: 'Form Controls',\n            priority: 'High',\n            issue: 'Missing form labels',\n            solution: 'Add proper labels to all form controls, especially financial input fields',\n            financialContext: 'Critical for screen readers to understand financial input requirements'\n          });\n          break;\n\n        case 'aria-hidden-focus':\n          recommendations.push({\n            category: 'ARIA Usage',\n            priority: 'Medium',\n            issue: 'Focusable elements hidden from screen readers',\n            solution: 'Review aria-hidden usage on interactive elements',\n            financialContext: 'May hide important financial controls from assistive technology users'\n          });\n          break;\n      }\n    });\n\n    return recommendations;\n  }\n\n  // Get financial application specific accessibility insights\n  getFinancialAccessibilityInsights() {\n    const insights = [];\n\n    // Check for financial data tables\n    const tables = document.querySelectorAll('table');\n    if (tables.length > 0) {\n      insights.push({\n        component: 'Data Tables',\n        recommendation: 'Ensure financial data tables have proper headers and scope attributes for screen reader navigation'\n      });\n    }\n\n    // Check for charts\n    const charts = document.querySelectorAll('[data-chart], .recharts-wrapper, canvas');\n    if (charts.length > 0) {\n      insights.push({\n        component: 'Charts and Graphs',\n        recommendation: 'Provide alternative text descriptions and data tables for financial charts'\n      });\n    }\n\n    // Check for calculators\n    const calculators = document.querySelectorAll('[data-calculator], .calculator');\n    if (calculators.length > 0) {\n      insights.push({\n        component: 'Financial Calculators',\n        recommendation: 'Ensure calculator inputs have clear labels and results are announced to screen readers'\n      });\n    }\n\n    return insights;\n  }\n\n  // Utility methods\n  getFocusableElements() {\n    const focusableSelectors = [\n      'a[href]',\n      'button:not([disabled])',\n      'input:not([disabled])',\n      'select:not([disabled])',\n      'textarea:not([disabled])',\n      '[tabindex]:not([tabindex=\"-1\"])'\n    ];\n\n    return Array.from(document.querySelectorAll(focusableSelectors.join(',')));\n  }\n\n  hasAssociatedLabel(input) {\n    const id = input.id;\n    const ariaLabel = input.getAttribute('aria-label');\n    const ariaLabelledby = input.getAttribute('aria-labelledby');\n\n    if (ariaLabel || ariaLabelledby) return true;\n    if (id && document.querySelector(`label[for=\"${id}\"]`)) return true;\n\n    // Check for wrapping label\n    const parentLabel = input.closest('label');\n    return !!parentLabel;\n  }\n\n  hasRequiredIndication(input) {\n    const ariaRequired = input.getAttribute('aria-required');\n    const requiredAttr = input.hasAttribute('required');\n    const hasRequiredText = this.hasRequiredTextIndicator(input);\n\n    return ariaRequired === 'true' || requiredAttr || hasRequiredText;\n  }\n\n  hasRequiredTextIndicator(input) {\n    const label = this.getAssociatedLabel(input);\n    if (!label) return false;\n\n    const text = label.textContent || '';\n    return text.includes('*') || text.toLowerCase().includes('required');\n  }\n\n  hasErrorMessage(input) {\n    const ariaDescribedby = input.getAttribute('aria-describedby');\n    if (ariaDescribedby) {\n      const errorElement = document.getElementById(ariaDescribedby);\n      return errorElement && errorElement.textContent;\n    }\n    return false;\n  }\n\n  isFinancialInput(input) {\n    const financialTypes = ['number', 'email', 'tel'];\n    const financialNames = ['amount', 'price', 'rate', 'percent', 'currency', 'value'];\n\n    return financialTypes.includes(input.type) ||\n           financialNames.some(name => input.name?.toLowerCase().includes(name));\n  }\n\n  getAssociatedLabel(input) {\n    const id = input.id;\n    if (id) {\n      const label = document.querySelector(`label[for=\"${id}\"]`);\n      if (label) return label;\n    }\n\n    return input.closest('label');\n  }\n\n  // Simplified contrast ratio calculation\n  calculateContrastRatio(color1, color2) {\n    // This is a simplified version - in production use a proper color contrast library\n    const rgb1 = this.parseColor(color1);\n    const rgb2 = this.parseColor(color2);\n\n    const l1 = this.getLuminance(rgb1);\n    const l2 = this.getLuminance(rgb2);\n\n    const lighter = Math.max(l1, l2);\n    const darker = Math.min(l1, l2);\n\n    return (lighter + 0.05) / (darker + 0.05);\n  }\n\n  parseColor(color) {\n    // Simple RGB parsing - expand for production use\n    const match = color.match(/rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\n    if (match) {\n      return [parseInt(match[1]), parseInt(match[2]), parseInt(match[3])];\n    }\n    return [0, 0, 0]; // Default to black\n  }\n\n  getLuminance([r, g, b]) {\n    const [rs, gs, bs] = [r, g, b].map(c => {\n      c = c / 255;\n      return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n    });\n    return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n  }\n\n  logResults(results) {\n    console.group('♿ Accessibility Test Results');\n    console.log(`✅ Passed: ${results.passes.length}`);\n    console.log(`❌ Violations: ${results.violations.length}`);\n    console.log(`⚠️  Incomplete: ${results.incomplete.length}`);\n    console.log(`➖ Not applicable: ${results.inapplicable.length}`);\n\n    if (results.violations.length > 0) {\n      console.warn('Violations found:');\n      results.violations.forEach(violation => {\n        console.warn(`- ${violation.id}: ${violation.description}`);\n      });\n    }\n    console.groupEnd();\n  }\n\n  reportViolations(violations) {\n    violations.forEach(violation => {\n      violation.nodes.forEach(node => {\n        console.error('Accessibility violation:', {\n          rule: violation.id,\n          impact: violation.impact,\n          element: node.target,\n          message: node.failureSummary\n        });\n      });\n    });\n  }\n\n  storeResults(results) {\n    try {\n      const reportData = {\n        timestamp: Date.now(),\n        url: window.location.href,\n        violations: results.violations.length,\n        passes: results.passes.length,\n        score: this.calculateAccessibilityScore()\n      };\n\n      const existingReports = JSON.parse(localStorage.getItem('accessibility-reports') || '[]');\n      existingReports.push(reportData);\n\n      // Keep only last 10 reports\n      if (existingReports.length > 10) {\n        existingReports.splice(0, existingReports.length - 10);\n      }\n\n      localStorage.setItem('accessibility-reports', JSON.stringify(existingReports));\n    } catch (error) {\n      console.error('Failed to store accessibility results:', error);\n    }\n  }\n}\n\n// Create singleton instance\nexport const accessibilityTester = new AccessibilityTester();\n\n// React hook for accessibility testing\nexport function useAccessibilityTester() {\n  return {\n    runTests: (element, options) => accessibilityTester.runTests(element, options),\n    testFinancialComponent: (selector, type) => accessibilityTester.testFinancialComponent(selector, type),\n    testKeyboardNavigation: () => accessibilityTester.testKeyboardNavigation(),\n    testColorContrast: () => accessibilityTester.testColorContrast(),\n    testFormAccessibility: () => accessibilityTester.testFormAccessibility(),\n    generateReport: () => accessibilityTester.generateReport(),\n    getScore: () => accessibilityTester.calculateAccessibilityScore()\n  };\n}\n\nexport default AccessibilityTester;\n","// Real User Monitoring and Web Vitals Tracking\n\n// Web Vitals metrics tracking\nconst webVitalsData = {\n  CLS: null,\n  FID: null,\n  FCP: null,\n  LCP: null,\n  TTFB: null,\n  INP: null\n};\n\n// Performance observer for tracking metrics\nconst performanceEntries = [];\nlet performanceObserver;\n\n// Initialize performance monitoring\nexport function initializePerformanceMonitoring() {\n  // Initialize Web Vitals tracking\n  initializeWebVitals();\n\n  // Initialize custom performance tracking\n  initializeCustomMetrics();\n\n  // Initialize navigation timing\n  trackNavigationTiming();\n\n  // Initialize resource timing\n  trackResourceTiming();\n\n  // Initialize user interactions\n  trackUserInteractions();\n\n  console.log('Performance monitoring initialized');\n}\n\n// Web Vitals implementation\nfunction initializeWebVitals() {\n  // Cumulative Layout Shift (CLS)\n  let clsValue = 0;\n  const clsEntries = [];\n\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (!entry.hadRecentInput) {\n        clsValue += entry.value;\n        clsEntries.push(entry);\n      }\n    }\n    webVitalsData.CLS = clsValue;\n    reportWebVital('CLS', clsValue, clsEntries);\n  }).observe({ type: 'layout-shift', buffered: true });\n\n  // First Input Delay (FID) / Interaction to Next Paint (INP)\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (entry.name === 'first-input-delay') {\n        webVitalsData.FID = entry.processingStart - entry.startTime;\n        reportWebVital('FID', webVitalsData.FID, [entry]);\n      }\n\n      // Track INP for better user interaction measurement\n      if (entry.interactionId) {\n        const duration = entry.processingEnd - entry.startTime;\n        if (!webVitalsData.INP || duration > webVitalsData.INP) {\n          webVitalsData.INP = duration;\n          reportWebVital('INP', duration, [entry]);\n        }\n      }\n    }\n  }).observe({ type: 'event', buffered: true });\n\n  // First Contentful Paint (FCP)\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (entry.name === 'first-contentful-paint') {\n        webVitalsData.FCP = entry.startTime;\n        reportWebVital('FCP', entry.startTime, [entry]);\n      }\n    }\n  }).observe({ type: 'paint', buffered: true });\n\n  // Largest Contentful Paint (LCP)\n  new PerformanceObserver((entryList) => {\n    const entries = entryList.getEntries();\n    const lastEntry = entries[entries.length - 1];\n    webVitalsData.LCP = lastEntry.startTime;\n    reportWebVital('LCP', lastEntry.startTime, [lastEntry]);\n  }).observe({ type: 'largest-contentful-paint', buffered: true });\n\n  // Time to First Byte (TTFB)\n  const navigationEntry = performance.getEntriesByType('navigation')[0];\n  if (navigationEntry) {\n    webVitalsData.TTFB = navigationEntry.responseStart - navigationEntry.requestStart;\n    reportWebVital('TTFB', webVitalsData.TTFB, [navigationEntry]);\n  }\n}\n\n// Custom metrics for financial application\nfunction initializeCustomMetrics() {\n  // Track when critical financial components load\n  const criticalComponents = [\n    'financial-spreadsheet',\n    'dcf-calculator',\n    'chart-rendering',\n    'market-data-fetch'\n  ];\n\n  criticalComponents.forEach(component => {\n    performance.mark(`${component}-start`);\n  });\n\n  // Track component rendering times\n  window.trackComponentRender = (componentName, renderTime) => {\n    performance.mark(`${componentName}-end`);\n    performance.measure(\n      `${componentName}-render`,\n      `${componentName}-start`,\n      `${componentName}-end`\n    );\n\n    reportCustomMetric('component-render', {\n      component: componentName,\n      renderTime,\n      timestamp: Date.now()\n    });\n  };\n\n  // Track financial calculation performance\n  window.trackCalculationPerformance = (calculationType, duration, complexity) => {\n    reportCustomMetric('financial-calculation', {\n      type: calculationType,\n      duration,\n      complexity,\n      timestamp: Date.now()\n    });\n  };\n}\n\n// Navigation timing tracking\nfunction trackNavigationTiming() {\n  window.addEventListener('load', () => {\n    setTimeout(() => {\n      const navigation = performance.getEntriesByType('navigation')[0];\n      if (navigation) {\n        const timings = {\n          dns: navigation.domainLookupEnd - navigation.domainLookupStart,\n          tcp: navigation.connectEnd - navigation.connectStart,\n          ssl: navigation.secureConnectionStart > 0 ? navigation.connectEnd - navigation.secureConnectionStart : 0,\n          ttfb: navigation.responseStart - navigation.requestStart,\n          download: navigation.responseEnd - navigation.responseStart,\n          domProcessing: navigation.domComplete - navigation.domLoading,\n          totalLoadTime: navigation.loadEventEnd - navigation.fetchStart\n        };\n\n        reportNavigationTiming(timings);\n      }\n    }, 0);\n  });\n}\n\n// Resource timing tracking\nfunction trackResourceTiming() {\n  new PerformanceObserver((list) => {\n    for (const entry of list.getEntries()) {\n      // Track important resource types\n      if (entry.initiatorType === 'script' ||\n          entry.initiatorType === 'css' ||\n          entry.initiatorType === 'img' ||\n          entry.initiatorType === 'fetch') {\n\n        const resourceData = {\n          name: entry.name,\n          type: entry.initiatorType,\n          size: entry.transferSize || entry.encodedBodySize,\n          duration: entry.duration,\n          cached: entry.transferSize === 0 && entry.encodedBodySize > 0,\n          timestamp: Date.now()\n        };\n\n        // Only report large resources or slow loads\n        if (resourceData.size > 50000 || resourceData.duration > 1000) {\n          reportResourceTiming(resourceData);\n        }\n      }\n    }\n  }).observe({ entryTypes: ['resource'] });\n}\n\n// User interaction tracking\nfunction trackUserInteractions() {\n  let interactionCount = 0;\n  let totalInteractionTime = 0;\n\n  const interactionEvents = ['click', 'keydown', 'touchstart'];\n\n  interactionEvents.forEach(eventType => {\n    document.addEventListener(eventType, (event) => {\n      const startTime = performance.now();\n\n      // Track interaction delay\n      requestAnimationFrame(() => {\n        const endTime = performance.now();\n        const interactionTime = endTime - startTime;\n\n        interactionCount++;\n        totalInteractionTime += interactionTime;\n\n        // Report slow interactions\n        if (interactionTime > 100) {\n          reportSlowInteraction({\n            type: eventType,\n            target: event.target.tagName,\n            duration: interactionTime,\n            timestamp: Date.now()\n          });\n        }\n      });\n    }, { passive: true });\n  });\n\n  // Report interaction summary periodically\n  setInterval(() => {\n    if (interactionCount > 0) {\n      reportInteractionSummary({\n        count: interactionCount,\n        averageTime: totalInteractionTime / interactionCount,\n        timestamp: Date.now()\n      });\n\n      // Reset counters\n      interactionCount = 0;\n      totalInteractionTime = 0;\n    }\n  }, 30000); // Every 30 seconds\n}\n\n// Reporting functions\nfunction reportWebVital(name, value, entries) {\n  const data = {\n    metric: name,\n    value: Math.round(value),\n    entries: entries.map(entry => ({\n      startTime: entry.startTime,\n      duration: entry.duration || 0\n    })),\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    connection: getConnectionInfo()\n  };\n\n  console.log(`Web Vital - ${name}:`, value);\n  sendToAnalytics('web-vital', data);\n}\n\nfunction reportCustomMetric(type, data) {\n  const metricData = {\n    type,\n    ...data,\n    url: window.location.href,\n    userAgent: navigator.userAgent\n  };\n\n  console.log(`Custom Metric - ${type}:`, data);\n  sendToAnalytics('custom-metric', metricData);\n}\n\nfunction reportNavigationTiming(timings) {\n  const data = {\n    ...timings,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    connection: getConnectionInfo()\n  };\n\n  console.log('Navigation Timing:', timings);\n  sendToAnalytics('navigation-timing', data);\n}\n\nfunction reportResourceTiming(resourceData) {\n  console.log('Resource Timing:', resourceData);\n  sendToAnalytics('resource-timing', resourceData);\n}\n\nfunction reportSlowInteraction(interactionData) {\n  console.log('Slow Interaction:', interactionData);\n  sendToAnalytics('slow-interaction', interactionData);\n}\n\nfunction reportInteractionSummary(summaryData) {\n  console.log('Interaction Summary:', summaryData);\n  sendToAnalytics('interaction-summary', summaryData);\n}\n\n// Error tracking\nexport function trackError(error, errorInfo) {\n  const errorData = {\n    message: error.message,\n    stack: error.stack,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    componentStack: errorInfo?.componentStack,\n    errorBoundary: errorInfo?.errorBoundary\n  };\n\n  console.error('Application Error:', errorData);\n  sendToAnalytics('error', errorData);\n}\n\n// Performance budget monitoring\nexport function checkPerformanceBudgets() {\n  const budgets = {\n    LCP: 2500,  // 2.5s\n    FID: 100,   // 100ms\n    CLS: 0.1,   // 0.1\n    FCP: 1800,  // 1.8s\n    TTFB: 800   // 800ms\n  };\n\n  const violations = [];\n\n  Object.entries(budgets).forEach(([metric, budget]) => {\n    const value = webVitalsData[metric];\n    if (value !== null && value > budget) {\n      violations.push({\n        metric,\n        value,\n        budget,\n        overBy: value - budget\n      });\n    }\n  });\n\n  if (violations.length > 0) {\n    console.warn('Performance Budget Violations:', violations);\n    sendToAnalytics('budget-violations', {\n      violations,\n      timestamp: Date.now(),\n      url: window.location.href\n    });\n  }\n\n  return violations;\n}\n\n// Utility functions\nfunction getConnectionInfo() {\n  if ('connection' in navigator) {\n    return {\n      effectiveType: navigator.connection.effectiveType,\n      downlink: navigator.connection.downlink,\n      rtt: navigator.connection.rtt\n    };\n  }\n  return null;\n}\n\nfunction sendToAnalytics(type, data) {\n  // In production, send to your analytics service\n  // For now, we'll store locally and batch send\n\n  try {\n    const analyticsData = {\n      type,\n      data,\n      sessionId: getSessionId(),\n      userId: getUserId()\n    };\n\n    // Store in localStorage for batching\n    const existingData = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n    existingData.push(analyticsData);\n\n    // Keep only last 100 entries to prevent storage overflow\n    if (existingData.length > 100) {\n      existingData.splice(0, existingData.length - 100);\n    }\n\n    localStorage.setItem('analytics-queue', JSON.stringify(existingData));\n\n    // Send batch if queue is full or on interval\n    if (existingData.length >= 10) {\n      sendAnalyticsBatch();\n    }\n\n  } catch (error) {\n    console.error('Failed to queue analytics data:', error);\n  }\n}\n\nfunction sendAnalyticsBatch() {\n  try {\n    const queuedData = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n    if (queuedData.length === 0) return;\n\n    // In production, replace with your analytics endpoint\n    console.log('Sending analytics batch:', queuedData.length, 'items');\n\n    // Simulate sending to analytics service\n    if (window.gtag) {\n      queuedData.forEach(item => {\n        window.gtag('event', item.type, {\n          custom_parameter: JSON.stringify(item.data)\n        });\n      });\n    }\n\n    // Clear queue after successful send\n    localStorage.removeItem('analytics-queue');\n\n  } catch (error) {\n    console.error('Failed to send analytics batch:', error);\n  }\n}\n\n// Session and user management\nfunction getSessionId() {\n  let sessionId = sessionStorage.getItem('session-id');\n  if (!sessionId) {\n    sessionId = Date.now() + '-' + Math.random().toString(36).substr(2, 9);\n    sessionStorage.setItem('session-id', sessionId);\n  }\n  return sessionId;\n}\n\nfunction getUserId() {\n  let userId = localStorage.getItem('user-id');\n  if (!userId) {\n    userId = 'anonymous-' + Date.now() + '-' + Math.random().toString(36).substr(2, 9);\n    localStorage.setItem('user-id', userId);\n  }\n  return userId;\n}\n\n// Initialize batch sending on interval\nsetInterval(sendAnalyticsBatch, 60000); // Every minute\n\n// Send batch before page unload\nwindow.addEventListener('beforeunload', () => {\n  sendAnalyticsBatch();\n});\n\n// Accessibility metrics reporting\nexport function reportPerformanceMetric(type, data) {\n  const metricData = {\n    type,\n    ...data,\n    url: window.location.href,\n    userAgent: navigator.userAgent,\n    timestamp: Date.now()\n  };\n\n  console.log(`Performance Metric - ${type}:`, data);\n  sendToAnalytics('performance-metric', metricData);\n}\n\n// Track accessibility test results\nexport function trackAccessibilityResults(results) {\n  const accessibilityData = {\n    violations: results.violations?.length || 0,\n    passes: results.passes?.length || 0,\n    incomplete: results.incomplete?.length || 0,\n    score: results.score || 0,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent\n  };\n\n  console.log('Accessibility Results:', accessibilityData);\n  sendToAnalytics('accessibility-results', accessibilityData);\n\n  // Store accessibility history\n  try {\n    const history = JSON.parse(localStorage.getItem('accessibility-history') || '[]');\n    history.push(accessibilityData);\n\n    // Keep only last 50 entries\n    if (history.length > 50) {\n      history.splice(0, history.length - 50);\n    }\n\n    localStorage.setItem('accessibility-history', JSON.stringify(history));\n  } catch (error) {\n    console.error('Failed to store accessibility history:', error);\n  }\n}\n\n// Track financial component performance\nexport function trackFinancialComponentPerformance(componentName, metrics) {\n  const performanceData = {\n    component: componentName,\n    ...metrics,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent\n  };\n\n  console.log(`Financial Component Performance - ${componentName}:`, metrics);\n  sendToAnalytics('financial-component-performance', performanceData);\n}\n\n// Get comprehensive performance dashboard data\nexport function getPerformanceDashboardData() {\n  const accessibilityHistory = JSON.parse(localStorage.getItem('accessibility-history') || '[]');\n  const analyticsQueue = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n\n  // Calculate trends\n  const recentAccessibility = accessibilityHistory.slice(-10);\n  const avgScore = recentAccessibility.reduce((sum, entry) => sum + entry.score, 0) / recentAccessibility.length || 0;\n  const avgViolations = recentAccessibility.reduce((sum, entry) => sum + entry.violations, 0) / recentAccessibility.length || 0;\n\n  // Get performance metrics from queue\n  const performanceMetrics = analyticsQueue\n    .filter(item => item.type === 'performance-metric')\n    .slice(-20)\n    .map(item => item.data);\n\n  const webVitalMetrics = analyticsQueue\n    .filter(item => item.type === 'web-vital')\n    .slice(-10)\n    .map(item => item.data);\n\n  return {\n    webVitals: webVitalsData,\n    budgetViolations: checkPerformanceBudgets(),\n    accessibility: {\n      currentScore: recentAccessibility[recentAccessibility.length - 1]?.score || 0,\n      averageScore: Math.round(avgScore),\n      averageViolations: Math.round(avgViolations),\n      history: recentAccessibility,\n      trends: {\n        scoreImproving: recentAccessibility.length >= 2 &&\n          recentAccessibility[recentAccessibility.length - 1].score >\n          recentAccessibility[recentAccessibility.length - 2].score\n      }\n    },\n    performance: {\n      recentMetrics: performanceMetrics,\n      webVitalHistory: webVitalMetrics\n    },\n    timestamp: Date.now()\n  };\n}\n\n// Export current performance data\nexport function getPerformanceData() {\n  return {\n    webVitals: webVitalsData,\n    budgetViolations: checkPerformanceBudgets(),\n    timestamp: Date.now()\n  };\n}\n","import { useState, useEffect, useCallback, useRef } from 'react';\n\nimport { accessibilityTester } from '../utils/accessibilityTesting';\nimport { reportPerformanceMetric } from '../utils/performanceMonitoring';\n\n// React hook for accessibility testing\nexport function useAccessibility(options = {}) {\n  const {\n    enabled = process.env.NODE_ENV === 'development',\n    autoTest = false,\n    testInterval = null,\n    componentType = 'generic',\n    onViolations = null,\n    onSuccess = null\n  } = options;\n\n  const [results, setResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [violations, setViolations] = useState([]);\n  const [score, setScore] = useState(null);\n  const [lastTestTime, setLastTestTime] = useState(null);\n\n  const elementRef = useRef(null);\n  const intervalRef = useRef(null);\n\n  // Run accessibility tests\n  const runTests = useCallback(async(element = null, testOptions = {}) => {\n    if (!enabled) return null;\n\n    const targetElement = element || elementRef.current || document;\n    setIsLoading(true);\n\n    try {\n      const testResults = await accessibilityTester.runTests(targetElement, testOptions);\n\n      setResults(testResults);\n      setViolations(testResults.violations || []);\n      setScore(accessibilityTester.calculateAccessibilityScore());\n      setLastTestTime(Date.now());\n\n      // Report to performance monitoring\n      reportPerformanceMetric('accessibility_test', {\n        violations: testResults.violations?.length || 0,\n        score: accessibilityTester.calculateAccessibilityScore(),\n        componentType,\n        timestamp: Date.now()\n      });\n\n      // Call callbacks\n      if (testResults.violations?.length > 0) {\n        onViolations?.(testResults.violations);\n      } else {\n        onSuccess?.(testResults);\n      }\n\n      return testResults;\n    } catch (error) {\n      console.error('Accessibility test failed:', error);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [enabled, componentType, onViolations, onSuccess]);\n\n  // Test specific financial component\n  const testFinancialComponent = useCallback(async(selector, type = componentType) => {\n    if (!enabled) return null;\n\n    setIsLoading(true);\n    try {\n      const testResults = await accessibilityTester.testFinancialComponent(selector, type);\n\n      setResults(testResults);\n      setViolations(testResults.violations || []);\n      setScore(accessibilityTester.calculateAccessibilityScore());\n      setLastTestTime(Date.now());\n\n      // Report specific component test\n      reportPerformanceMetric('financial_component_accessibility', {\n        componentType: type,\n        violations: testResults.violations?.length || 0,\n        score: accessibilityTester.calculateAccessibilityScore(),\n        timestamp: Date.now()\n      });\n\n      return testResults;\n    } catch (error) {\n      console.error('Financial component accessibility test failed:', error);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [enabled, componentType]);\n\n  // Test keyboard navigation\n  const testKeyboardNavigation = useCallback(async() => {\n    if (!enabled) return null;\n\n    try {\n      const navResults = await accessibilityTester.testKeyboardNavigation();\n\n      reportPerformanceMetric('keyboard_navigation_test', {\n        focusableElements: navResults.focusableElementsCount,\n        tabOrderIssues: navResults.tabOrderIssues?.length || 0,\n        focusVisibilityIssues: navResults.focusVisibilityIssues?.length || 0,\n        passed: navResults.passed,\n        timestamp: Date.now()\n      });\n\n      return navResults;\n    } catch (error) {\n      console.error('Keyboard navigation test failed:', error);\n      return null;\n    }\n  }, [enabled]);\n\n  // Test color contrast\n  const testColorContrast = useCallback(async() => {\n    if (!enabled) return null;\n\n    try {\n      const contrastResults = await accessibilityTester.testColorContrast();\n\n      reportPerformanceMetric('color_contrast_test', {\n        totalElements: contrastResults.totalElements,\n        contrastIssues: contrastResults.contrastIssues?.length || 0,\n        passed: contrastResults.passed,\n        timestamp: Date.now()\n      });\n\n      return contrastResults;\n    } catch (error) {\n      console.error('Color contrast test failed:', error);\n      return null;\n    }\n  }, [enabled]);\n\n  // Test form accessibility\n  const testFormAccessibility = useCallback(async() => {\n    if (!enabled) return null;\n\n    try {\n      const formResults = await accessibilityTester.testFormAccessibility();\n\n      reportPerformanceMetric('form_accessibility_test', {\n        totalForms: formResults.totalForms,\n        formIssues: formResults.formIssues?.length || 0,\n        passed: formResults.passed,\n        timestamp: Date.now()\n      });\n\n      return formResults;\n    } catch (error) {\n      console.error('Form accessibility test failed:', error);\n      return null;\n    }\n  }, [enabled]);\n\n  // Generate comprehensive report\n  const generateReport = useCallback(() => {\n    if (!results) return null;\n\n    try {\n      const report = accessibilityTester.generateReport();\n\n      // Store report data for performance monitoring\n      reportPerformanceMetric('accessibility_report_generated', {\n        score: report.summary.score,\n        violations: report.summary.violations,\n        totalChecks: report.summary.totalChecks,\n        timestamp: Date.now()\n      });\n\n      return report;\n    } catch (error) {\n      console.error('Failed to generate accessibility report:', error);\n      return null;\n    }\n  }, [results]);\n\n  // Set up automatic testing\n  useEffect(() => {\n    if (!enabled || !autoTest) return;\n\n    const runAutoTest = () => {\n      runTests();\n    };\n\n    // Run initial test\n    runAutoTest();\n\n    // Set up interval if specified\n    if (testInterval) {\n      intervalRef.current = setInterval(runAutoTest, testInterval);\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [enabled, autoTest, testInterval, runTests]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    // State\n    results,\n    violations,\n    score,\n    isLoading,\n    lastTestTime,\n\n    // Test functions\n    runTests,\n    testFinancialComponent,\n    testKeyboardNavigation,\n    testColorContrast,\n    testFormAccessibility,\n    generateReport,\n\n    // Element ref for targeting tests\n    elementRef\n  };\n}\n\n// Hook for monitoring accessibility across the entire app\nexport function useAppAccessibility() {\n  const [globalScore, setGlobalScore] = useState(null);\n  const [recentViolations, setRecentViolations] = useState([]);\n  const [testHistory, setTestHistory] = useState([]);\n\n  const runGlobalAccessibilityCheck = useCallback(async() => {\n    try {\n      // Run comprehensive tests on the entire document\n      const results = await accessibilityTester.runTests(document);\n      const score = accessibilityTester.calculateAccessibilityScore();\n\n      setGlobalScore(score);\n      setRecentViolations(results.violations || []);\n\n      // Update test history\n      const historyEntry = {\n        timestamp: Date.now(),\n        score,\n        violations: results.violations?.length || 0,\n        url: window.location.pathname\n      };\n\n      setTestHistory(prev => [...prev.slice(-9), historyEntry]); // Keep last 10 entries\n\n      // Report global metrics\n      reportPerformanceMetric('global_accessibility_check', {\n        score,\n        violations: results.violations?.length || 0,\n        url: window.location.pathname,\n        timestamp: Date.now()\n      });\n\n      return results;\n    } catch (error) {\n      console.error('Global accessibility check failed:', error);\n      return null;\n    }\n  }, []);\n\n  // Check accessibility when route changes\n  useEffect(() => {\n    const checkOnRouteChange = () => {\n      setTimeout(() => {\n        runGlobalAccessibilityCheck();\n      }, 1000); // Allow time for route to fully load\n    };\n\n    // Listen for navigation changes\n    window.addEventListener('popstate', checkOnRouteChange);\n\n    // Run initial check\n    checkOnRouteChange();\n\n    return () => {\n      window.removeEventListener('popstate', checkOnRouteChange);\n    };\n  }, [runGlobalAccessibilityCheck]);\n\n  return {\n    globalScore,\n    recentViolations,\n    testHistory,\n    runGlobalAccessibilityCheck\n  };\n}\n\n// Hook for accessibility testing in financial components\nexport function useFinancialAccessibility(componentType) {\n  const accessibility = useAccessibility({\n    componentType,\n    autoTest: true,\n    testInterval: 30000, // Test every 30 seconds in development\n    onViolations: (violations) => {\n      // Log financial component specific violations\n      console.warn(`Financial component (${componentType}) accessibility violations:`, violations);\n    }\n  });\n\n  // Enhanced testing for financial components\n  const testFinancialFeatures = useCallback(async() => {\n    const results = {};\n\n    try {\n      // Test keyboard navigation (critical for financial apps)\n      results.keyboardNav = await accessibility.testKeyboardNavigation();\n\n      // Test color contrast (important for reading financial data)\n      results.colorContrast = await accessibility.testColorContrast();\n\n      // Test forms if component contains them\n      results.formAccessibility = await accessibility.testFormAccessibility();\n\n      // Generate comprehensive report\n      results.report = accessibility.generateReport();\n\n      return results;\n    } catch (error) {\n      console.error('Financial accessibility testing failed:', error);\n      return null;\n    }\n  }, [accessibility, componentType]);\n\n  return {\n    ...accessibility,\n    testFinancialFeatures\n  };\n}\n\n// Hook for real-time accessibility monitoring\nexport function useAccessibilityMonitor(options = {}) {\n  const {\n    threshold = 80, // Minimum acceptable score\n    alertOnViolations = true,\n    monitorInterval = 60000 // Check every minute\n  } = options;\n\n  const [isMonitoring, setIsMonitoring] = useState(false);\n  const [alerts, setAlerts] = useState([]);\n  const intervalRef = useRef(null);\n\n  const startMonitoring = useCallback(() => {\n    if (isMonitoring) return;\n\n    setIsMonitoring(true);\n\n    const monitor = async() => {\n      try {\n        const results = await accessibilityTester.runTests(document);\n        const score = accessibilityTester.calculateAccessibilityScore();\n\n        // Check if score is below threshold\n        if (score < threshold) {\n          const alert = {\n            id: Date.now(),\n            type: 'low_score',\n            message: `Accessibility score (${score}) is below threshold (${threshold})`,\n            score,\n            violations: results.violations?.length || 0,\n            timestamp: Date.now()\n          };\n\n          setAlerts(prev => [...prev, alert]);\n\n          if (alertOnViolations) {\n            console.warn('Accessibility Alert:', alert.message);\n          }\n        }\n\n        // Check for critical violations\n        const criticalViolations = results.violations?.filter(v => v.impact === 'critical') || [];\n        if (criticalViolations.length > 0 && alertOnViolations) {\n          const alert = {\n            id: Date.now(),\n            type: 'critical_violations',\n            message: `${criticalViolations.length} critical accessibility violations found`,\n            violations: criticalViolations,\n            timestamp: Date.now()\n          };\n\n          setAlerts(prev => [...prev, alert]);\n          console.error('Critical Accessibility Violations:', criticalViolations);\n        }\n\n        // Report monitoring metrics\n        reportPerformanceMetric('accessibility_monitoring', {\n          score,\n          violations: results.violations?.length || 0,\n          criticalViolations: criticalViolations.length,\n          timestamp: Date.now()\n        });\n\n      } catch (error) {\n        console.error('Accessibility monitoring failed:', error);\n      }\n    };\n\n    // Run initial check\n    monitor();\n\n    // Set up interval\n    intervalRef.current = setInterval(monitor, monitorInterval);\n  }, [isMonitoring, threshold, alertOnViolations, monitorInterval]);\n\n  const stopMonitoring = useCallback(() => {\n    setIsMonitoring(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n\n  const clearAlerts = useCallback(() => {\n    setAlerts([]);\n  }, []);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    isMonitoring,\n    alerts,\n    startMonitoring,\n    stopMonitoring,\n    clearAlerts\n  };\n}\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport { useAccessibilityMonitor } from '../../hooks/useAccessibility';\nimport { getPerformanceDashboardData, initializePerformanceMonitoring } from '../../utils/performanceMonitoring';\n\nconst PerformanceDashboard = ({ isVisible = false, onClose }) => {\n  const [dashboardData, setDashboardData] = useState(null);\n  const [refreshInterval, setRefreshInterval] = useState(30000); // 30 seconds\n  const [isMonitoring, setIsMonitoring] = useState(false);\n  const [alertThreshold, setAlertThreshold] = useState(75);\n\n  const {\n    alerts,\n    startMonitoring: startAccessibilityMonitoring,\n    stopMonitoring: stopAccessibilityMonitoring,\n    clearAlerts\n  } = useAccessibilityMonitor({\n    threshold: alertThreshold,\n    monitorInterval: refreshInterval\n  });\n\n  // Refresh dashboard data\n  const refreshData = useCallback(() => {\n    try {\n      const data = getPerformanceDashboardData();\n      setDashboardData(data);\n    } catch (error) {\n      console.error('Failed to refresh performance dashboard:', error);\n    }\n  }, []);\n\n  // Toggle monitoring\n  const toggleMonitoring = useCallback(() => {\n    if (isMonitoring) {\n      stopAccessibilityMonitoring();\n      setIsMonitoring(false);\n    } else {\n      startAccessibilityMonitoring();\n      setIsMonitoring(true);\n    }\n  }, [isMonitoring, startAccessibilityMonitoring, stopAccessibilityMonitoring]);\n\n  // Initialize and set up refresh interval\n  useEffect(() => {\n    if (!isVisible) return;\n\n    // Initialize performance monitoring if not already done\n    initializePerformanceMonitoring();\n\n    // Initial data fetch\n    refreshData();\n\n    // Set up refresh interval\n    const interval = setInterval(refreshData, refreshInterval);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isVisible, refreshData, refreshInterval]);\n\n  // Format metric values for display\n  const formatMetric = (value, unit = 'ms') => {\n    if (value === null || value === undefined) return 'N/A';\n    if (typeof value === 'number') {\n      return `${Math.round(value)}${unit}`;\n    }\n    return value;\n  };\n\n  // Get metric status (good, needs improvement, poor)\n  const getMetricStatus = (metric, value) => {\n    const thresholds = {\n      LCP: { good: 2500, poor: 4000 },\n      FID: { good: 100, poor: 300 },\n      CLS: { good: 0.1, poor: 0.25 },\n      FCP: { good: 1800, poor: 3000 },\n      TTFB: { good: 800, poor: 1800 }\n    };\n\n    const threshold = thresholds[metric];\n    if (!threshold || value === null) return 'unknown';\n\n    if (value <= threshold.good) return 'good';\n    if (value <= threshold.poor) return 'needs-improvement';\n    return 'poor';\n  };\n\n  // Get status color\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'good': return 'text-green-600 bg-green-100';\n      case 'needs-improvement': return 'text-yellow-600 bg-yellow-100';\n      case 'poor': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  if (!isVisible || !dashboardData) {\n    return null;\n  }\n\n  const { webVitals, budgetViolations, accessibility, performance } = dashboardData;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">Performance Dashboard</h2>\n            <p className=\"text-sm text-gray-600 mt-1\">\n              Real-time monitoring for FinanceAnalyst Pro\n            </p>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={toggleMonitoring}\n              className={`px-4 py-2 rounded-md text-sm font-medium ${\n                isMonitoring\n                  ? 'bg-red-100 text-red-700 hover:bg-red-200'\n                  : 'bg-green-100 text-green-700 hover:bg-green-200'\n              }`}\n            >\n              {isMonitoring ? 'Stop Monitoring' : 'Start Monitoring'}\n            </button>\n            <button\n              onClick={refreshData}\n              className=\"px-4 py-2 bg-blue-100 text-blue-700 rounded-md text-sm font-medium hover:bg-blue-200\"\n            >\n              Refresh\n            </button>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-600\"\n            >\n              <span className=\"sr-only\">Close</span>\n              <svg\n                className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"p-6 space-y-8\">\n          {/* Web Vitals */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Core Web Vitals</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4\">\n              {Object.entries(webVitals).map(([metric, value]) => {\n                const status = getMetricStatus(metric, value);\n                const statusColor = getStatusColor(status);\n\n                return (\n                  <div key={metric} className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-600\">{metric}</span>\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${statusColor}`}>\n                        {status}\n                      </span>\n                    </div>\n                    <div className=\"mt-2\">\n                      <span className=\"text-2xl font-bold text-gray-900\">\n                        {formatMetric(value, metric === 'CLS' ? '' : 'ms')}\n                      </span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </section>\n\n          {/* Budget Violations */}\n          {budgetViolations.length > 0 && (\n            <section>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Performance Budget Violations</h3>\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                <div className=\"space-y-2\">\n                  {budgetViolations.map((violation, index) => (\n                    <div key={index} className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-red-800\">\n                        {violation.metric}: {formatMetric(violation.value)}\n                      </span>\n                      <span className=\"text-sm text-red-600\">\n                        Over budget by {formatMetric(violation.overBy)}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </section>\n          )}\n\n          {/* Accessibility */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Accessibility</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                <h4 className=\"text-sm font-medium text-gray-600 mb-2\">Current Score</h4>\n                <div className=\"flex items-center\">\n                  <span className=\"text-3xl font-bold text-gray-900\">\n                    {accessibility.currentScore}\n                  </span>\n                  <span className=\"text-sm text-gray-500 ml-1\">/100</span>\n                  {accessibility.trends.scoreImproving && (\n                    <span className=\"ml-2 text-green-600\">\n                      <svg className=\"h-4 w-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M3.293 9.707a1 1 0 010-1.414l6-6a1 1 0 011.414 0l6 6a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L4.707 9.707a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                <h4 className=\"text-sm font-medium text-gray-600 mb-2\">Average Violations</h4>\n                <span className=\"text-3xl font-bold text-gray-900\">\n                  {accessibility.averageViolations}\n                </span>\n              </div>\n\n              <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                <h4 className=\"text-sm font-medium text-gray-600 mb-2\">Average Score</h4>\n                <span className=\"text-3xl font-bold text-gray-900\">\n                  {accessibility.averageScore}\n                </span>\n              </div>\n            </div>\n\n            {/* Accessibility Alerts */}\n            {alerts.length > 0 && (\n              <div className=\"mt-4 bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h4 className=\"text-sm font-medium text-yellow-800\">Active Alerts</h4>\n                  <button\n                    onClick={clearAlerts}\n                    className=\"text-xs text-yellow-600 hover:text-yellow-800\"\n                  >\n                    Clear All\n                  </button>\n                </div>\n                <div className=\"space-y-2\">\n                  {alerts.slice(0, 5).map((alert) => (\n                    <div key={alert.id} className=\"text-sm text-yellow-700\">\n                      <span className=\"font-medium\">{alert.type}:</span> {alert.message}\n                    </div>\n                  ))}\n                  {alerts.length > 5 && (\n                    <div className=\"text-xs text-yellow-600\">\n                      And {alerts.length - 5} more alerts...\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </section>\n\n          {/* Recent Performance Metrics */}\n          {performance.recentMetrics.length > 0 && (\n            <section>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Recent Performance Events</h3>\n              <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n                <div className=\"max-h-64 overflow-y-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Type\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Component\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Value\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Time\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {performance.recentMetrics.slice(0, 10).map((metric, index) => (\n                        <tr key={index}>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                            {metric.type}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {metric.component || metric.componentType || 'N/A'}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {metric.violations !== undefined ? `${metric.violations} violations` :\n                              metric.score !== undefined ? `Score: ${metric.score}` :\n                                metric.duration !== undefined ? `${Math.round(metric.duration)}ms` : 'N/A'}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {new Date(metric.timestamp).toLocaleTimeString()}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </section>\n          )}\n\n          {/* Settings */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Monitoring Settings</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Refresh Interval (seconds)\n                </label>\n                <select\n                  value={refreshInterval / 1000}\n                  onChange={(e) => setRefreshInterval(parseInt(e.target.value) * 1000)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm\"\n                >\n                  <option value={10}>10 seconds</option>\n                  <option value={30}>30 seconds</option>\n                  <option value={60}>1 minute</option>\n                  <option value={300}>5 minutes</option>\n                </select>\n              </div>\n\n              <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Accessibility Alert Threshold\n                </label>\n                <select\n                  value={alertThreshold}\n                  onChange={(e) => setAlertThreshold(parseInt(e.target.value))}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm\"\n                >\n                  <option value={60}>60 (Strict)</option>\n                  <option value={75}>75 (Moderate)</option>\n                  <option value={85}>85 (Lenient)</option>\n                  <option value={95}>95 (Very Lenient)</option>\n                </select>\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PerformanceDashboard;\n","import { HelmetProvider } from 'react-helmet-async';\n\nconst SEOProvider = ({ children }) => {\n  return <HelmetProvider>{children}</HelmetProvider>;\n};\n\nexport default SEOProvider;\n","import axios from 'axios';\n\n/**\n * Secure API Client for FinanceAnalyst Pro\n * This client communicates with our secure backend instead of making direct API calls\n * All API keys are now handled securely on the server side\n */\nclass SecureApiClient {\n  constructor() {\n    this.baseURL = import.meta.env.VITE_API_BASE_URL || 'http://localhost:3001/api';\n    this.client = axios.create({\n      baseURL: this.baseURL,\n      timeout: 15000,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Response interceptor for error handling\n    this.client.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        console.error('API Error:', error.response?.data || error.message);\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  // =============================================================================\n  // MARKET DATA METHODS\n  // =============================================================================\n\n  /**\n   * Get real-time quote for a symbol\n   * @param {string} symbol - Stock symbol\n   * @returns {Promise<Object>} Quote data\n   */\n  async getQuote(symbol) {\n    const response = await this.client.get(`/market-data/quote/${symbol.toUpperCase()}`);\n    return response.data;\n  }\n\n  /**\n   * Get historical price data\n   * @param {string} symbol - Stock symbol\n   * @param {string} range - Time range (1d, 5d, 1mo, 3mo, 6mo, 1y, 2y, 5y)\n   * @param {string} interval - Data interval (1m, 5m, 15m, 30m, 60m, 1d, etc.)\n   * @returns {Promise<Object>} Historical data\n   */\n  async getHistoricalData(symbol, range = '1mo', interval = '1d') {\n    const response = await this.client.get(`/market-data/historical/${symbol.toUpperCase()}`, {\n      params: { range, interval }\n    });\n    return response.data;\n  }\n\n  /**\n   * Get intraday price data\n   * @param {string} symbol - Stock symbol\n   * @param {string} interval - Intraday interval (1min, 5min, 15min, 30min, 60min)\n   * @returns {Promise<Object>} Intraday data\n   */\n  async getIntradayData(symbol, interval = '5min') {\n    const response = await this.client.get(`/market-data/intraday/${symbol.toUpperCase()}`, {\n      params: { interval }\n    });\n    return response.data;\n  }\n\n  /**\n   * Get quotes for multiple symbols\n   * @param {string[]} symbols - Array of stock symbols\n   * @returns {Promise<Object>} Batch quote data\n   */\n  async getBatchQuotes(symbols) {\n    const response = await this.client.post('/market-data/batch', {\n      symbols: symbols.map(s => s.toUpperCase())\n    });\n    return response.data;\n  }\n\n  // =============================================================================\n  // FINANCIAL STATEMENTS METHODS\n  // =============================================================================\n\n  /**\n   * Get income statement\n   * @param {string} symbol - Stock symbol\n   * @param {string} period - 'annual' or 'quarter'\n   * @param {number} limit - Number of periods to retrieve\n   * @returns {Promise<Object>} Income statement data\n   */\n  async getIncomeStatement(symbol, period = 'annual', limit = 5) {\n    const response = await this.client.get(`/financial-statements/income/${symbol.toUpperCase()}`, {\n      params: { period, limit }\n    });\n    return response.data;\n  }\n\n  /**\n   * Get balance sheet\n   * @param {string} symbol - Stock symbol\n   * @param {string} period - 'annual' or 'quarter'\n   * @param {number} limit - Number of periods to retrieve\n   * @returns {Promise<Object>} Balance sheet data\n   */\n  async getBalanceSheet(symbol, period = 'annual', limit = 5) {\n    const response = await this.client.get(`/financial-statements/balance/${symbol.toUpperCase()}`, {\n      params: { period, limit }\n    });\n    return response.data;\n  }\n\n  /**\n   * Get cash flow statement\n   * @param {string} symbol - Stock symbol\n   * @param {string} period - 'annual' or 'quarter'\n   * @param {number} limit - Number of periods to retrieve\n   * @returns {Promise<Object>} Cash flow data\n   */\n  async getCashFlowStatement(symbol, period = 'annual', limit = 5) {\n    const response = await this.client.get(`/financial-statements/cash-flow/${symbol.toUpperCase()}`, {\n      params: { period, limit }\n    });\n    return response.data;\n  }\n\n  /**\n   * Get financial ratios\n   * @param {string} symbol - Stock symbol\n   * @param {string} period - 'annual' or 'quarter'\n   * @param {number} limit - Number of periods to retrieve\n   * @returns {Promise<Object>} Financial ratios data\n   */\n  async getFinancialRatios(symbol, period = 'annual', limit = 5) {\n    const response = await this.client.get(`/financial-statements/ratios/${symbol.toUpperCase()}`, {\n      params: { period, limit }\n    });\n    return response.data;\n  }\n\n  // =============================================================================\n  // COMPANY DATA METHODS\n  // =============================================================================\n\n  /**\n   * Get company profile and overview\n   * @param {string} symbol - Stock symbol\n   * @returns {Promise<Object>} Company profile data\n   */\n  async getCompanyProfile(symbol) {\n    const response = await this.client.get(`/company-data/profile/${symbol.toUpperCase()}`);\n    return response.data;\n  }\n\n  /**\n   * Get peer companies\n   * @param {string} symbol - Stock symbol\n   * @param {number} limit - Number of peers to retrieve\n   * @returns {Promise<Object>} Peer companies data\n   */\n  async getPeerCompanies(symbol, limit = 10) {\n    const response = await this.client.get(`/company-data/peers/${symbol.toUpperCase()}`, {\n      params: { limit }\n    });\n    return response.data;\n  }\n\n  /**\n   * Get DCF valuation\n   * @param {string} symbol - Stock symbol\n   * @returns {Promise<Object>} DCF valuation data\n   */\n  async getDCFValuation(symbol) {\n    const response = await this.client.get(`/company-data/dcf/${symbol.toUpperCase()}`);\n    return response.data;\n  }\n\n  /**\n   * Get earnings data\n   * @param {string} symbol - Stock symbol\n   * @param {number} limit - Number of earnings periods to retrieve\n   * @returns {Promise<Object>} Earnings data\n   */\n  async getEarnings(symbol, limit = 8) {\n    const response = await this.client.get(`/company-data/earnings/${symbol.toUpperCase()}`, {\n      params: { limit }\n    });\n    return response.data;\n  }\n\n  // =============================================================================\n  // ECONOMIC DATA METHODS\n  // =============================================================================\n\n  /**\n   * Get FRED economic data\n   * @param {string} seriesId - FRED series ID\n   * @param {number} limit - Number of observations to retrieve\n   * @param {string} startDate - Start date (ISO format)\n   * @param {string} endDate - End date (ISO format)\n   * @returns {Promise<Object>} Economic data\n   */\n  async getFREDData(seriesId, limit = 100, startDate = null, endDate = null) {\n    const params = { limit };\n    if (startDate) params.start_date = startDate;\n    if (endDate) params.end_date = endDate;\n\n    const response = await this.client.get(`/economic-data/fred/${seriesId.toUpperCase()}`, {\n      params\n    });\n    return response.data;\n  }\n\n  /**\n   * Get popular economic indicators\n   * @returns {Promise<Object>} Economic indicators data\n   */\n  async getEconomicIndicators() {\n    const response = await this.client.get('/economic-data/indicators');\n    return response.data;\n  }\n\n  /**\n   * Get treasury yield curve data\n   * @returns {Promise<Object>} Treasury rates data\n   */\n  async getTreasuryRates() {\n    const response = await this.client.get('/economic-data/treasury-rates');\n    return response.data;\n  }\n\n  // =============================================================================\n  // HEALTH AND STATUS METHODS\n  // =============================================================================\n\n  /**\n   * Check backend health\n   * @returns {Promise<Object>} Health status\n   */\n  async getHealthStatus() {\n    const response = await this.client.get('/health');\n    return response.data;\n  }\n\n  /**\n   * Check service health (API providers)\n   * @returns {Promise<Object>} Service health status\n   */\n  async getServiceHealth() {\n    const response = await this.client.get('/health/services');\n    return response.data;\n  }\n\n  /**\n   * Get cache statistics\n   * @returns {Promise<Object>} Cache statistics\n   */\n  async getCacheStats() {\n    const response = await this.client.get('/health/cache');\n    return response.data;\n  }\n\n  // =============================================================================\n  // COMPATIBILITY METHODS (for existing frontend code)\n  // =============================================================================\n\n  /**\n   * Fetch market data (compatibility method)\n   * @param {string} ticker - Stock symbol\n   * @param {string} range - Time range\n   * @returns {Promise<Object>} Market data in expected format\n   */\n  async fetchMarketData(ticker, range = '1y') {\n    try {\n      const data = await this.getHistoricalData(ticker, range);\n\n      // Transform to match expected format from old API service\n      return {\n        symbol: data.symbol,\n        range: data.range,\n        data: data.data,\n        meta: data.meta,\n        timestamps: data.data.map(d => d.timestamp),\n        prices: {\n          close: data.data.map(d => d.close),\n          high: data.data.map(d => d.high),\n          low: data.data.map(d => d.low),\n          open: data.data.map(d => d.open)\n        },\n        volume: data.data.map(d => d.volume),\n        source: data.source\n      };\n    } catch (error) {\n      console.error('Failed to fetch market data:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetch financial statements (compatibility method)\n   * @param {string} ticker - Stock symbol\n   * @param {string} statement - Statement type\n   * @param {string} period - 'annual' or 'quarter'\n   * @param {number} limit - Number of periods\n   * @returns {Promise<Object>} Financial statement data\n   */\n  async fetchFinancialStatements(ticker, statement = 'income-statement', period = 'annual', limit = 5) {\n    try {\n      let data;\n\n      switch (statement) {\n        case 'income-statement':\n          data = await this.getIncomeStatement(ticker, period, limit);\n          break;\n        case 'balance-sheet-statement':\n          data = await this.getBalanceSheet(ticker, period, limit);\n          break;\n        case 'cash-flow-statement':\n          data = await this.getCashFlowStatement(ticker, period, limit);\n          break;\n        default:\n          throw new Error(`Unsupported statement type: ${statement}`);\n      }\n\n      return data.data; // Return just the data array for compatibility\n    } catch (error) {\n      console.error('Failed to fetch financial statements:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetch peer comparables (compatibility method)\n   * @param {string} ticker - Stock symbol\n   * @returns {Promise<Array>} Peer companies array\n   */\n  async fetchPeerComparables(ticker) {\n    try {\n      const data = await this.getPeerCompanies(ticker);\n      return data.peers;\n    } catch (error) {\n      console.error('Failed to fetch peer comparables:', error);\n      throw error;\n    }\n  }\n}\n\n// Export singleton instance\nexport default new SecureApiClient();\n","/**\n * AI Financial Assistant Component\n * Conversational AI assistant for financial analysis and portfolio management\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  MessageCircle,\n  Send,\n  Bot,\n  User,\n  TrendingUp,\n  AlertTriangle,\n  Lightbulb,\n  PieChart,\n  BarChart3,\n  Calculator,\n  Search,\n  BookOpen,\n  Zap,\n  Brain,\n  Target,\n  Settings,\n  Minimize2,\n  Maximize2,\n  X\n} from 'lucide-react';\n\nimport secureApiClient from '../../services/secureApiClient';\n\nconst AIFinancialAssistant = ({ \n  isOpen = false, \n  onToggle,\n  currentContext = {},\n  portfolioData = null,\n  marketData = null\n}) => {\n  const [messages, setMessages] = useState([\n    {\n      id: '1',\n      type: 'assistant',\n      content: \"Hi! I'm your AI Financial Assistant. I can help you with portfolio analysis, market insights, risk assessment, and financial planning. What would you like to explore today?\",\n      timestamp: new Date(),\n      suggestions: [\n        'Analyze my portfolio performance',\n        'What are the current market trends?',\n        'Calculate portfolio risk metrics',\n        'Suggest portfolio rebalancing'\n      ]\n    }\n  ]);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSendMessage = async (message = inputValue) => {\n    if (!message.trim()) return;\n\n    const userMessage = {\n      id: Date.now().toString(),\n      type: 'user',\n      content: message,\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsLoading(true);\n\n    try {\n      // Send message to AI assistant backend\n      const response = await secureApiClient.post('/ai-assistant/chat', {\n        message,\n        context: {\n          ...currentContext,\n          portfolioData,\n          marketData,\n          previousMessages: messages.slice(-5) // Send last 5 messages for context\n        }\n      });\n\n      const assistantMessage = {\n        id: (Date.now() + 1).toString(),\n        type: 'assistant',\n        content: response.data.response,\n        timestamp: new Date(),\n        suggestions: response.data.suggestions || [],\n        charts: response.data.charts || [],\n        actions: response.data.actions || []\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n    } catch (error) {\n      console.error('AI Assistant error:', error);\n      \n      // Fallback response\n      const fallbackMessage = {\n        id: (Date.now() + 1).toString(),\n        type: 'assistant',\n        content: \"I'm having trouble processing your request right now. This could be due to high demand or a temporary service issue. Please try again in a moment, or let me help you with basic portfolio analysis using the available data.\",\n        timestamp: new Date(),\n        suggestions: [\n          'Show portfolio overview',\n          'Calculate basic metrics',\n          'View market data',\n          'Help with analysis'\n        ]\n      };\n\n      setMessages(prev => [...prev, fallbackMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    handleSendMessage(suggestion);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const quickActions = [\n    { icon: PieChart, label: 'Portfolio Analysis', action: 'Analyze my current portfolio allocation and performance' },\n    { icon: TrendingUp, label: 'Market Insights', action: 'What are the current market trends and opportunities?' },\n    { icon: AlertTriangle, label: 'Risk Assessment', action: 'Assess the risk profile of my portfolio' },\n    { icon: Calculator, label: 'Financial Planning', action: 'Help me with financial planning and projections' },\n    { icon: Target, label: 'Goal Planning', action: 'Help me set and track financial goals' },\n    { icon: BarChart3, label: 'Performance Review', action: 'Review my portfolio performance over time' }\n  ];\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <motion.div\n        initial={{ opacity: 0, scale: 0.9, y: 20 }}\n        animate={{ \n          opacity: 1, \n          scale: 1, \n          y: 0,\n          height: isMinimized ? 'auto' : '80vh'\n        }}\n        exit={{ opacity: 0, scale: 0.9, y: 20 }}\n        className=\"bg-white rounded-2xl shadow-2xl w-full max-w-4xl flex flex-col\"\n      >\n        {/* Header */}\n        <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white p-4 rounded-t-2xl flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"bg-white bg-opacity-20 p-2 rounded-lg\">\n              <Brain className=\"w-6 h-6\" />\n            </div>\n            <div>\n              <h2 className=\"text-xl font-bold\">AI Financial Assistant</h2>\n              <p className=\"text-blue-100 text-sm\">Powered by advanced financial AI</p>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setIsMinimized(!isMinimized)}\n              className=\"p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors\"\n            >\n              {isMinimized ? <Maximize2 className=\"w-5 h-5\" /> : <Minimize2 className=\"w-5 h-5\" />}\n            </button>\n            <button\n              onClick={onToggle}\n              className=\"p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors\"\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n\n        {!isMinimized && (\n          <>\n            {/* Messages Area */}\n            <div className=\"flex-1 overflow-y-auto p-6 space-y-4\">\n              <AnimatePresence>\n                {messages.map((message) => (\n                  <motion.div\n                    key={message.id}\n                    initial={{ opacity: 0, y: 10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -10 }}\n                    className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n                  >\n                    <div className={`max-w-3xl flex ${message.type === 'user' ? 'flex-row-reverse' : 'flex-row'} items-start space-x-3`}>\n                      <div className={`p-2 rounded-lg ${\n                        message.type === 'user' \n                          ? 'bg-blue-100 text-blue-600' \n                          : 'bg-purple-100 text-purple-600'\n                      }`}>\n                        {message.type === 'user' ? <User className=\"w-5 h-5\" /> : <Bot className=\"w-5 h-5\" />}\n                      </div>\n                      <div className={`px-4 py-3 rounded-2xl ${\n                        message.type === 'user'\n                          ? 'bg-blue-600 text-white ml-3'\n                          : 'bg-gray-100 text-gray-800 mr-3'\n                      }`}>\n                        <p className=\"whitespace-pre-wrap\">{message.content}</p>\n                        \n                        {/* Suggestions */}\n                        {message.suggestions && message.suggestions.length > 0 && (\n                          <div className=\"mt-3 space-y-2\">\n                            <p className=\"text-sm font-medium opacity-75\">Suggestions:</p>\n                            <div className=\"flex flex-wrap gap-2\">\n                              {message.suggestions.map((suggestion, index) => (\n                                <button\n                                  key={index}\n                                  onClick={() => handleSuggestionClick(suggestion)}\n                                  className=\"text-xs px-3 py-1 bg-white bg-opacity-20 rounded-full hover:bg-opacity-30 transition-all\"\n                                >\n                                  {suggestion}\n                                </button>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n\n                        {/* Charts placeholder */}\n                        {message.charts && message.charts.length > 0 && (\n                          <div className=\"mt-3 p-3 bg-white bg-opacity-10 rounded-lg\">\n                            <p className=\"text-sm font-medium mb-2\">📊 Charts & Analysis</p>\n                            <div className=\"text-sm opacity-75\">\n                              Interactive charts would be rendered here based on the analysis\n                            </div>\n                          </div>\n                        )}\n\n                        <div className=\"text-xs opacity-50 mt-2\">\n                          {message.timestamp.toLocaleTimeString()}\n                        </div>\n                      </div>\n                    </div>\n                  </motion.div>\n                ))}\n              </AnimatePresence>\n              \n              {isLoading && (\n                <motion.div\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  className=\"flex justify-start\"\n                >\n                  <div className=\"flex items-start space-x-3\">\n                    <div className=\"p-2 rounded-lg bg-purple-100 text-purple-600\">\n                      <Bot className=\"w-5 h-5\" />\n                    </div>\n                    <div className=\"px-4 py-3 rounded-2xl bg-gray-100\">\n                      <div className=\"flex space-x-1\">\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                      </div>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n              <div ref={messagesEndRef} />\n            </div>\n\n            {/* Quick Actions */}\n            {messages.length === 1 && (\n              <div className=\"px-6 py-4 border-t border-gray-200\">\n                <p className=\"text-sm font-medium text-gray-700 mb-3\">Quick Actions:</p>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\n                  {quickActions.map((action, index) => (\n                    <button\n                      key={index}\n                      onClick={() => handleSendMessage(action.action)}\n                      className=\"p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors flex items-center space-x-2 text-left\"\n                    >\n                      <action.icon className=\"w-5 h-5 text-gray-600\" />\n                      <span className=\"text-sm font-medium text-gray-700\">{action.label}</span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Input Area */}\n            <div className=\"p-6 border-t border-gray-200\">\n              <div className=\"flex space-x-3\">\n                <div className=\"flex-1 relative\">\n                  <textarea\n                    ref={inputRef}\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    onKeyPress={handleKeyPress}\n                    placeholder=\"Ask me anything about your portfolio, market analysis, or financial planning...\"\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n                    rows={1}\n                    style={{ minHeight: '48px', maxHeight: '120px' }}\n                  />\n                </div>\n                <button\n                  onClick={() => handleSendMessage()}\n                  disabled={!inputValue.trim() || isLoading}\n                  className=\"px-6 py-3 bg-blue-600 text-white rounded-xl hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center space-x-2\"\n                >\n                  <Send className=\"w-5 h-5\" />\n                  <span>Send</span>\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n\n        {isMinimized && (\n          <div className=\"p-4 border-t border-gray-200\">\n            <div className=\"flex items-center justify-between\">\n              <p className=\"text-sm text-gray-600\">AI Assistant is minimized</p>\n              <div className=\"flex space-x-2\">\n                <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n                <span className=\"text-xs text-gray-500\">Online</span>\n              </div>\n            </div>\n          </div>\n        )}\n      </motion.div>\n    </div>\n  );\n};\n\nexport default AIFinancialAssistant;\n","/**\n * CLI Command Processor\n * Core service for processing financial commands in the persistent CLI\n */\n\nimport secureApiClient from './secureApiClient';\n\nexport class CLICommandProcessor {\n  constructor() {\n    this.context = {};\n    this.commandHistory = [];\n    this.aliases = {\n      'p': 'portfolio',\n      'md': 'market-data',\n      'calc': 'calculate',\n      'nav': 'navigate',\n      'help': 'help',\n      'clear': 'clear',\n      'ls': 'list',\n      'll': 'list --detailed',\n      'cd': 'navigate'\n    };\n    \n    this.commands = this.initializeCommands();\n  }\n\n  updateContext(newContext) {\n    this.context = { ...this.context, ...newContext };\n  }\n\n  initializeCommands() {\n    return {\n      // Help and Information\n      help: {\n        description: 'Show available commands and usage',\n        usage: 'help [command]',\n        category: 'system',\n        handler: this.handleHelp.bind(this)\n      },\n      \n      // Portfolio Management\n      portfolio: {\n        description: 'Portfolio management operations',\n        usage: 'portfolio [show|analyze|rebalance|risk|holdings]',\n        category: 'portfolio',\n        handler: this.handlePortfolio.bind(this)\n      },\n      \n      // Market Data\n      'market-data': {\n        description: 'Fetch market data and quotes',\n        usage: 'market-data [symbol] [--type=quote|chart|news]',\n        category: 'market',\n        handler: this.handleMarketData.bind(this)\n      },\n      \n      quote: {\n        description: 'Get stock quote',\n        usage: 'quote <symbol>',\n        category: 'market',\n        handler: this.handleQuote.bind(this)\n      },\n      \n      // Financial Calculations\n      calculate: {\n        description: 'Financial calculations',\n        usage: 'calculate [dcf|wacc|beta|sharpe] [parameters]',\n        category: 'calculations',\n        handler: this.handleCalculate.bind(this)\n      },\n      \n      dcf: {\n        description: 'DCF valuation calculation',\n        usage: 'dcf <symbol> [--growth=5] [--discount=10] [--terminal=2]',\n        category: 'calculations',\n        handler: this.handleDCF.bind(this)\n      },\n      \n      // Navigation\n      navigate: {\n        description: 'Navigate to different pages/sections',\n        usage: 'navigate <page> [workspace|market-data|portfolio|analysis|private-analysis]',\n        category: 'navigation',\n        handler: this.handleNavigate.bind(this)\n      },\n      \n      // Data Management\n      list: {\n        description: 'List portfolio holdings, watchlist, or other data',\n        usage: 'list [holdings|watchlist|portfolios] [--detailed]',\n        category: 'data',\n        handler: this.handleList.bind(this)\n      },\n      \n      search: {\n        description: 'Search stocks, funds, or financial instruments',\n        usage: 'search <query> [--type=stocks|etf|mutual-funds]',\n        category: 'data',\n        handler: this.handleSearch.bind(this)\n      },\n      \n      // Analysis Tools\n      analyze: {\n        description: 'Perform financial analysis',\n        usage: 'analyze <symbol|portfolio> [--type=fundamental|technical|risk]',\n        category: 'analysis',\n        handler: this.handleAnalyze.bind(this)\n      },\n      \n      risk: {\n        description: 'Risk analysis and metrics',\n        usage: 'risk [portfolio|symbol] [--metric=var|sharpe|beta|correlation]',\n        category: 'analysis',\n        handler: this.handleRisk.bind(this)\n      },\n      \n      // Utility Commands\n      export: {\n        description: 'Export data to various formats',\n        usage: 'export <data-type> [--format=csv|json|xlsx] [--output=filename]',\n        category: 'utility',\n        handler: this.handleExport.bind(this)\n      },\n      \n      import: {\n        description: 'Import portfolio or transaction data',\n        usage: 'import <file-path> [--type=portfolio|transactions]',\n        category: 'utility',\n        handler: this.handleImport.bind(this)\n      },\n      \n      // System Commands\n      status: {\n        description: 'Show system and data connection status',\n        usage: 'status [--detailed]',\n        category: 'system',\n        handler: this.handleStatus.bind(this)\n      },\n      \n      clear: {\n        description: 'Clear the terminal output',\n        usage: 'clear',\n        category: 'system',\n        handler: this.handleClear.bind(this)\n      },\n      \n      version: {\n        description: 'Show application version and build info',\n        usage: 'version',\n        category: 'system',\n        handler: this.handleVersion.bind(this)\n      }\n    };\n  }\n\n  async processCommand(input) {\n    const parts = this.parseCommand(input);\n    const commandName = this.resolveAlias(parts.command);\n    const command = this.commands[commandName];\n\n    if (!command) {\n      return {\n        success: false,\n        error: `Command '${commandName}' not found. Type 'help' for available commands.`\n      };\n    }\n\n    try {\n      const result = await command.handler(parts.args, parts.flags);\n      this.commandHistory.push({ command: input, timestamp: new Date(), result });\n      return result;\n    } catch (error) {\n      return {\n        success: false,\n        error: `Error executing '${commandName}': ${error.message}`\n      };\n    }\n  }\n\n  parseCommand(input) {\n    const parts = input.trim().split(/\\s+/);\n    const command = parts[0];\n    const remaining = parts.slice(1);\n    \n    const args = [];\n    const flags = {};\n    \n    for (let i = 0; i < remaining.length; i++) {\n      const part = remaining[i];\n      if (part.startsWith('--')) {\n        const [key, value] = part.substring(2).split('=');\n        flags[key] = value || true;\n      } else if (part.startsWith('-')) {\n        flags[part.substring(1)] = true;\n      } else {\n        args.push(part);\n      }\n    }\n    \n    return { command, args, flags };\n  }\n\n  resolveAlias(command) {\n    return this.aliases[command] || command;\n  }\n\n  getSuggestions(input) {\n    const parts = input.trim().split(/\\s+/);\n    const partial = parts[0].toLowerCase();\n    \n    if (parts.length === 1) {\n      // Command suggestions\n      return Object.keys(this.commands)\n        .filter(cmd => cmd.startsWith(partial))\n        .concat(Object.keys(this.aliases).filter(alias => alias.startsWith(partial)))\n        .sort();\n    }\n    \n    // Argument suggestions based on command\n    const command = this.resolveAlias(parts[0]);\n    return this.getCommandArgumentSuggestions(command, parts.slice(1));\n  }\n\n  getCommandArgumentSuggestions(command, args) {\n    const suggestions = [];\n    \n    switch (command) {\n      case 'navigate':\n        suggestions.push('workspace', 'market-data', 'portfolio', 'analysis', 'private-analysis', 'valuation-workbench', 'model-lab');\n        break;\n      case 'portfolio':\n        suggestions.push('show', 'analyze', 'rebalance', 'risk', 'holdings', 'performance');\n        break;\n      case 'calculate':\n        suggestions.push('dcf', 'wacc', 'beta', 'sharpe', 'sortino', 'var');\n        break;\n      case 'list':\n        suggestions.push('holdings', 'watchlist', 'portfolios', 'transactions');\n        break;\n      case 'analyze':\n        suggestions.push('--type=fundamental', '--type=technical', '--type=risk');\n        break;\n      case 'export':\n        suggestions.push('--format=csv', '--format=json', '--format=xlsx');\n        break;\n    }\n    \n    return suggestions;\n  }\n\n  // Command Handlers\n  async handleHelp(args, flags) {\n    if (args.length > 0) {\n      const commandName = this.resolveAlias(args[0]);\n      const command = this.commands[commandName];\n      \n      if (command) {\n        return {\n          success: true,\n          output: `${commandName}: ${command.description}\\nUsage: ${command.usage}`,\n          type: 'info'\n        };\n      } else {\n        return {\n          success: false,\n          error: `Command '${commandName}' not found.`\n        };\n      }\n    }\n    \n    const categories = {};\n    Object.entries(this.commands).forEach(([name, cmd]) => {\n      if (!categories[cmd.category]) categories[cmd.category] = [];\n      categories[cmd.category].push(`${name.padEnd(15)} ${cmd.description}`);\n    });\n    \n    let output = 'FINANCEANALYST PRO CLI COMMANDS\\n';\n    output += '═══════════════════════════════════════════════════════════════\\n\\n';\n    \n    Object.entries(categories).forEach(([category, commands]) => {\n      output += `${category.toUpperCase()}:\\n`;\n      output += commands.join('\\n') + '\\n\\n';\n    });\n    \n    output += 'Use \"help <command>\" for detailed usage information.\\n';\n    output += 'Use Tab for autocompletion and ↑↓ for command history.';\n    \n    return { success: true, output, type: 'info' };\n  }\n\n  async handlePortfolio(args, flags) {\n    const action = args[0] || 'show';\n    \n    switch (action) {\n      case 'show':\n        if (this.context.portfolioData) {\n          return {\n            success: true,\n            data: this.context.portfolioData,\n            format: 'portfolio'\n          };\n        } else {\n          return {\n            success: false,\n            error: 'No portfolio data available. Please navigate to Portfolio Management page first.'\n          };\n        }\n        \n      case 'analyze':\n        try {\n          const analysis = await secureApiClient.post('/portfolio/analyze', {\n            portfolio: this.context.portfolioData\n          });\n          return {\n            success: true,\n            output: 'Portfolio analysis completed. Check the Portfolio Management page for detailed results.',\n            type: 'success'\n          };\n        } catch (error) {\n          return {\n            success: false,\n            error: 'Failed to analyze portfolio. Please try again.'\n          };\n        }\n        \n      case 'risk':\n        return {\n          success: true,\n          output: 'Risk metrics calculation initiated. Results will be displayed in the Portfolio Analytics section.',\n          type: 'info'\n        };\n        \n      default:\n        return {\n          success: false,\n          error: `Unknown portfolio action: ${action}. Available: show, analyze, rebalance, risk, holdings`\n        };\n    }\n  }\n\n  async handleMarketData(args, flags) {\n    const symbol = args[0];\n    const type = flags.type || 'quote';\n    \n    if (!symbol) {\n      return {\n        success: false,\n        error: 'Symbol required. Usage: market-data <symbol> [--type=quote|chart|news]'\n      };\n    }\n    \n    try {\n      const response = await secureApiClient.get(`/market-data/quote/${symbol.toUpperCase()}`);\n      return {\n        success: true,\n        data: response.data,\n        format: 'market'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Failed to fetch market data for ${symbol.toUpperCase()}: ${error.message}`\n      };\n    }\n  }\n\n  async handleQuote(args, flags) {\n    return this.handleMarketData(args, { type: 'quote' });\n  }\n\n  async handleCalculate(args, flags) {\n    const calcType = args[0];\n    \n    if (!calcType) {\n      return {\n        success: false,\n        error: 'Calculation type required. Available: dcf, wacc, beta, sharpe, sortino, var'\n      };\n    }\n    \n    return {\n      success: true,\n      output: `${calcType.toUpperCase()} calculation initiated. Results will be displayed in the Analysis section.`,\n      type: 'info'\n    };\n  }\n\n  async handleDCF(args, flags) {\n    const symbol = args[0];\n    const growth = flags.growth || 5;\n    const discount = flags.discount || 10;\n    const terminal = flags.terminal || 2;\n    \n    if (!symbol) {\n      return {\n        success: false,\n        error: 'Symbol required for DCF calculation. Usage: dcf <symbol> [--growth=5] [--discount=10] [--terminal=2]'\n      };\n    }\n    \n    return {\n      success: true,\n      output: `DCF calculation for ${symbol.toUpperCase()} initiated with growth=${growth}%, discount=${discount}%, terminal=${terminal}%`,\n      navigation: '/valuation-workbench',\n      type: 'success'\n    };\n  }\n\n  async handleNavigate(args, flags) {\n    const page = args[0];\n    \n    const routes = {\n      'workspace': '/financial-model-workspace',\n      'market-data': '/real-time-market-data-center',\n      'portfolio': '/portfolio-management',\n      'analysis': '/scenario-analysis-sensitivity-tools',\n      'private-analysis': '/private-analysis',\n      'valuation-workbench': '/valuation-workbench',\n      'model-lab': '/model-lab'\n    };\n    \n    if (!page || !routes[page]) {\n      return {\n        success: false,\n        error: `Page not found. Available: ${Object.keys(routes).join(', ')}`\n      };\n    }\n    \n    return {\n      success: true,\n      output: `Navigating to ${page}...`,\n      navigation: routes[page],\n      type: 'success'\n    };\n  }\n\n  async handleList(args, flags) {\n    const type = args[0] || 'holdings';\n    const detailed = flags.detailed || flags.d;\n    \n    switch (type) {\n      case 'holdings':\n        if (this.context.portfolioData?.holdings) {\n          const holdings = this.context.portfolioData.holdings.map(h => ({\n            Symbol: h.symbol,\n            Shares: h.shares,\n            Value: h.value,\n            Weight: `${(h.weight * 100).toFixed(1)}%`\n          }));\n          return {\n            success: true,\n            data: holdings,\n            format: 'table'\n          };\n        } else {\n          return {\n            success: false,\n            error: 'No portfolio holdings available'\n          };\n        }\n        \n      case 'portfolios':\n        return {\n          success: true,\n          output: 'Available portfolios:\\n• Main Portfolio (Active)\\n• Demo Portfolio\\n• Conservative Portfolio',\n          type: 'info'\n        };\n        \n      default:\n        return {\n          success: false,\n          error: `Unknown list type: ${type}. Available: holdings, watchlist, portfolios`\n        };\n    }\n  }\n\n  async handleSearch(args, flags) {\n    const query = args.join(' ');\n    \n    if (!query) {\n      return {\n        success: false,\n        error: 'Search query required. Usage: search <query> [--type=stocks|etf|mutual-funds]'\n      };\n    }\n    \n    try {\n      const response = await secureApiClient.get(`/market-data/search/${encodeURIComponent(query)}`);\n      return {\n        success: true,\n        data: response.data,\n        format: 'table'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Search failed: ${error.message}`\n      };\n    }\n  }\n\n  async handleAnalyze(args, flags) {\n    const target = args[0];\n    const type = flags.type || 'fundamental';\n    \n    if (!target) {\n      return {\n        success: false,\n        error: 'Analysis target required. Usage: analyze <symbol|portfolio> [--type=fundamental|technical|risk]'\n      };\n    }\n    \n    return {\n      success: true,\n      output: `${type.charAt(0).toUpperCase() + type.slice(1)} analysis for ${target.toUpperCase()} initiated.`,\n      navigation: '/scenario-analysis-sensitivity-tools',\n      type: 'success'\n    };\n  }\n\n  async handleRisk(args, flags) {\n    const target = args[0] || 'portfolio';\n    const metric = flags.metric || 'var';\n    \n    return {\n      success: true,\n      output: `Risk analysis (${metric.toUpperCase()}) for ${target} initiated. Results will be displayed in Portfolio Analytics.`,\n      type: 'info'\n    };\n  }\n\n  async handleExport(args, flags) {\n    const dataType = args[0];\n    const format = flags.format || 'csv';\n    const output = flags.output || `export_${new Date().toISOString().split('T')[0]}`;\n    \n    return {\n      success: true,\n      output: `Export initiated: ${dataType} → ${output}.${format}`,\n      type: 'success'\n    };\n  }\n\n  async handleImport(args, flags) {\n    const filePath = args[0];\n    const type = flags.type || 'portfolio';\n    \n    if (!filePath) {\n      return {\n        success: false,\n        error: 'File path required. Usage: import <file-path> [--type=portfolio|transactions]'\n      };\n    }\n    \n    return {\n      success: true,\n      output: `Import initiated: ${filePath} (${type})`,\n      type: 'success'\n    };\n  }\n\n  async handleStatus(args, flags) {\n    const detailed = flags.detailed;\n    \n    let output = '🟢 SYSTEM STATUS\\n';\n    output += '═══════════════════════════════════════\\n';\n    output += 'Backend API:       🟢 Connected\\n';\n    output += 'Market Data:       🟢 Live\\n';\n    output += 'Portfolio Data:    ' + (this.context.portfolioData ? '🟢 Loaded' : '🟡 Not loaded') + '\\n';\n    output += 'AI Assistant:      🟢 Online\\n';\n    \n    if (detailed) {\n      output += '\\nDETAILED STATUS:\\n';\n      output += `Commands in history: ${this.commandHistory.length}\\n`;\n      output += `Current page: ${this.context.currentContext?.path || 'Unknown'}\\n`;\n      output += `Session start: ${new Date().toLocaleString()}\\n`;\n    }\n    \n    return {\n      success: true,\n      output,\n      type: 'info'\n    };\n  }\n\n  async handleClear(args, flags) {\n    return {\n      success: true,\n      output: '',\n      type: 'clear'\n    };\n  }\n\n  async handleVersion(args, flags) {\n    return {\n      success: true,\n      output: 'FinanceAnalyst Pro v1.0.0\\nBuild: 2025.08.18\\nNode.js CLI Interface\\nSecure Backend API Integration',\n      type: 'info'\n    };\n  }\n}\n\nexport default CLICommandProcessor;\n","// Data transformation utilities for financial calculations\n\nexport const formatCurrency = (value, currency = 'USD', compact = false) => {\n  if (value === null || value === undefined || isNaN(value)) return 'N/A';\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n    notation: compact ? 'compact' : 'standard',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2\n  });\n\n  return formatter.format(value);\n};\n\nexport const formatPercentage = (value, decimals = 1) => {\n  if (value === null || value === undefined || isNaN(value)) return 'N/A';\n  return `${(value * 100).toFixed(decimals)}%`;\n};\n\nexport const formatNumber = (value, decimals = 2, compact = false) => {\n  if (value === null || value === undefined || isNaN(value)) return 'N/A';\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    notation: compact ? 'compact' : 'standard',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: decimals\n  });\n\n  return formatter.format(value);\n};\n\nexport const calculateCAGR = (beginningValue, endingValue, years) => {\n  if (beginningValue <= 0 || endingValue <= 0 || years <= 0) return 0;\n  return Math.pow(endingValue / beginningValue, 1 / years) - 1;\n};\n\nexport const calculateNPV = (cashFlows, discountRate) => {\n  return cashFlows.reduce((npv, cashFlow, index) => {\n    return npv + cashFlow / Math.pow(1 + discountRate, index + 1);\n  }, 0);\n};\n\nexport const calculateIRR = (cashFlows, guess = 0.1) => {\n  // Handle edge cases\n  if (!cashFlows || cashFlows.length === 0 || cashFlows.length === 1) {\n    return 0;\n  }\n\n  const maxIterations = 100;\n  const tolerance = 1e-6;\n\n  let rate = guess;\n\n  for (let i = 0; i < maxIterations; i++) {\n    let npv = cashFlows[0]; // Initial investment (negative)\n    let derivative = 0;\n\n    for (let j = 1; j < cashFlows.length; j++) {\n      const factor = Math.pow(1 + rate, j);\n      npv += cashFlows[j] / factor;\n      derivative -= (j * cashFlows[j]) / (factor * (1 + rate));\n    }\n\n    if (Math.abs(npv) < tolerance) {\n      return rate;\n    }\n\n    if (Math.abs(derivative) < tolerance) {\n      break; // Avoid division by zero\n    }\n\n    rate = rate - npv / derivative;\n  }\n\n  return rate;\n};\n\nexport const calculateWACC = (costOfEquity, costOfDebt, taxRate, debtRatio) => {\n  const equityWeight = 1 - debtRatio;\n  return costOfEquity * equityWeight + costOfDebt * debtRatio * (1 - taxRate);\n};\n\nexport const calculateTerminalValue = (finalCashFlow, terminalGrowthRate, discountRate) => {\n  return (finalCashFlow * (1 + terminalGrowthRate)) / (discountRate - terminalGrowthRate);\n};\n\nexport const projectCashFlows = (baseCashFlow, growthRates, years = 5) => {\n  const cashFlows = [];\n  let currentCashFlow = baseCashFlow;\n\n  for (let i = 0; i < years; i++) {\n    const growthRate = Array.isArray(growthRates)\n      ? growthRates[i] || growthRates[growthRates.length - 1]\n      : growthRates;\n    currentCashFlow *= 1 + growthRate;\n    cashFlows.push(currentCashFlow);\n  }\n\n  return cashFlows;\n};\n\nexport const calculateDCFValuation = inputs => {\n  const {\n    currentRevenue,\n    revenueGrowthRate,\n    fcfMargin,\n    wacc,\n    terminalGrowthRate,\n    sharesOutstanding,\n    totalDebt,\n    cash,\n    projectionYears = 5\n  } = inputs;\n\n  // Project revenues\n  const projectedRevenues = projectCashFlows(currentRevenue, revenueGrowthRate, projectionYears);\n\n  // Calculate free cash flows\n  const projectedFCFs = projectedRevenues.map(revenue => revenue * fcfMargin);\n\n  // Calculate terminal value\n  const terminalValue = calculateTerminalValue(\n    projectedFCFs[projectedFCFs.length - 1],\n    terminalGrowthRate,\n    wacc\n  );\n\n  // Calculate present values\n  const pvOfCashFlows = calculateNPV(projectedFCFs, wacc);\n  const pvOfTerminalValue = terminalValue / Math.pow(1 + wacc, projectionYears);\n\n  // Calculate enterprise and equity value\n  const enterpriseValue = pvOfCashFlows + pvOfTerminalValue;\n  const equityValue = enterpriseValue - totalDebt + cash;\n  const pricePerShare = equityValue / sharesOutstanding;\n\n  return {\n    enterpriseValue,\n    equityValue,\n    pricePerShare,\n    pvOfCashFlows,\n    pvOfTerminalValue,\n    terminalValue,\n    projectedRevenues,\n    projectedFCFs,\n    wacc,\n    terminalGrowthRate\n  };\n};\n\nexport const calculateLBOReturns = inputs => {\n  const {\n    purchasePrice,\n    ebitda,\n    debtMultiple = 5,\n    exitMultiple,\n    exitYear = 5,\n    managementFeeRate = 0.02,\n    carriedInterestRate = 0.2\n  } = inputs;\n\n  // Calculate purchase structure\n  const totalDebt = ebitda * debtMultiple;\n  const equityInvestment = purchasePrice - totalDebt;\n\n  // Project EBITDA growth (simplified)\n  const ebitdaGrowthRate = 0.05; // 5% annual growth assumption\n  const exitEbitda = ebitda * Math.pow(1 + ebitdaGrowthRate, exitYear);\n\n  // Calculate exit value\n  const exitEnterpriseValue = exitEbitda * exitMultiple;\n  const remainingDebt = totalDebt * 0.5; // Assume 50% debt paydown\n  const exitEquityValue = exitEnterpriseValue - remainingDebt;\n\n  // Calculate returns\n  const totalReturn = exitEquityValue / equityInvestment;\n  const irr = Math.pow(totalReturn, 1 / exitYear) - 1;\n  const moic = totalReturn; // Multiple of Invested Capital\n\n  // Calculate fees (simplified)\n  const totalManagementFees = equityInvestment * managementFeeRate * exitYear;\n  const carriedInterest = Math.max(0, (exitEquityValue - equityInvestment) * carriedInterestRate);\n\n  return {\n    equityInvestment,\n    totalDebt,\n    exitEquityValue,\n    totalReturn,\n    irr,\n    moic,\n    exitEbitda,\n    exitEnterpriseValue,\n    managementFees: totalManagementFees,\n    carriedInterest,\n    netReturn: exitEquityValue - totalManagementFees - carriedInterest\n  };\n};\n\nexport const calculateComparableMetrics = (companyData, peerData) => {\n  const calculateStatistics = values => {\n    const validValues = values.filter(v => v !== null && v !== undefined && !isNaN(v));\n    if (validValues.length === 0) return { median: null, mean: null, min: null, max: null };\n\n    validValues.sort((a, b) => a - b);\n    const median =\n      validValues.length % 2 === 0\n        ? (validValues[validValues.length / 2 - 1] + validValues[validValues.length / 2]) / 2\n        : validValues[Math.floor(validValues.length / 2)];\n\n    const mean = validValues.reduce((sum, v) => sum + v, 0) / validValues.length;\n\n    return {\n      median,\n      mean,\n      min: Math.min(...validValues),\n      max: Math.max(...validValues),\n      count: validValues.length\n    };\n  };\n\n  const metrics = ['marketCap', 'peRatio', 'evToEbitda', 'priceToBook', 'debtToEquity'];\n  const peerStats = {};\n\n  metrics.forEach(metric => {\n    const peerValues = peerData.map(peer => peer[metric]);\n    peerStats[metric] = calculateStatistics(peerValues);\n  });\n\n  return {\n    company: companyData,\n    peerStatistics: peerStats,\n    relativeValuation: {\n      marketCapPercentile: calculatePercentile(\n        companyData.marketCap,\n        peerData.map(p => p.marketCap)\n      ),\n      peRatioRelative: companyData.peRatio / peerStats.peRatio.median,\n      evEbitdaRelative: companyData.evToEbitda / peerStats.evToEbitda.median,\n      priceToBookRelative: companyData.priceToBook / peerStats.priceToBook.median\n    }\n  };\n};\n\nexport const calculatePercentile = (value, dataset) => {\n  const validDataset = dataset.filter(v => v !== null && v !== undefined && !isNaN(v));\n  if (validDataset.length === 0 || value === null || value === undefined || isNaN(value))\n    return null;\n\n  validDataset.sort((a, b) => a - b);\n  const belowCount = validDataset.filter(v => v < value).length;\n  return belowCount / validDataset.length;\n};\n\nexport const generateMonteCarloScenarios = (baseInputs, variableRanges, iterations = 1000) => {\n  const scenarios = [];\n\n  for (let i = 0; i < iterations; i++) {\n    const scenario = { ...baseInputs };\n\n    Object.keys(variableRanges).forEach(variable => {\n      const range = variableRanges[variable];\n      const randomValue = range.min + Math.random() * (range.max - range.min);\n      scenario[variable] = randomValue;\n    });\n\n    scenarios.push(scenario);\n  }\n\n  return scenarios;\n};\n\nexport const calculateSensitivityAnalysis = (\n  baseInputs,\n  sensitivityVariable,\n  range,\n  steps = 10\n) => {\n  const results = [];\n  const stepSize = (range.max - range.min) / (steps - 1);\n\n  for (let i = 0; i < steps; i++) {\n    const variableValue = range.min + stepSize * i;\n    const inputs = { ...baseInputs, [sensitivityVariable]: variableValue };\n\n    results.push({\n      [sensitivityVariable]: variableValue,\n      inputs\n    });\n  }\n\n  return results;\n};\n","/**\n * Persistent CLI Component\n * Professional financial terminal interface that stays visible across all pages\n */\n\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  Terminal,\n  ChevronUp,\n  ChevronDown,\n  Minimize2,\n  Maximize2,\n  X,\n  Copy,\n  Download,\n  History,\n  Settings,\n  Zap,\n  Search,\n  ArrowUp,\n  ArrowDown\n} from 'lucide-react';\n\nimport { CLICommandProcessor } from '../../services/cliCommandProcessor';\nimport { formatCurrency, formatPercentage, formatNumber } from '../../utils/formatters';\n\nconst PersistentCLI = ({ \n  currentContext = {},\n  portfolioData = null,\n  marketData = null,\n  onNavigate\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState([\n    {\n      id: 1,\n      type: 'system',\n      content: 'FinanceAnalyst Pro Terminal v1.0.0 - Type \"help\" for available commands',\n      timestamp: new Date()\n    },\n    {\n      id: 2,\n      type: 'info', \n      content: 'Connected to secure backend API • Market data live • Ready for commands',\n      timestamp: new Date()\n    }\n  ]);\n  const [commandHistory, setCommandHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const inputRef = useRef(null);\n  const outputRef = useRef(null);\n  const cliProcessor = useRef(new CLICommandProcessor());\n\n  // Auto-scroll to bottom when output changes\n  useEffect(() => {\n    if (outputRef.current) {\n      outputRef.current.scrollTop = outputRef.current.scrollHeight;\n    }\n  }, [output]);\n\n  // Focus input when CLI is expanded\n  useEffect(() => {\n    if (isExpanded && !isMinimized && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isExpanded, isMinimized]);\n\n  // Initialize CLI processor with context\n  useEffect(() => {\n    cliProcessor.current.updateContext({\n      currentContext,\n      portfolioData,\n      marketData,\n      onNavigate\n    });\n  }, [currentContext, portfolioData, marketData, onNavigate]);\n\n  const addOutput = useCallback((content, type = 'output') => {\n    const newOutput = {\n      id: Date.now(),\n      type,\n      content,\n      timestamp: new Date()\n    };\n    setOutput(prev => [...prev, newOutput]);\n  }, []);\n\n  const handleCommand = async (command) => {\n    if (!command.trim()) return;\n\n    // Add command to history\n    setCommandHistory(prev => [...prev, command]);\n    setHistoryIndex(-1);\n\n    // Add command to output\n    addOutput(`$ ${command}`, 'command');\n    setIsProcessing(true);\n\n    try {\n      const result = await cliProcessor.current.processCommand(command);\n      \n      if (result.success) {\n        if (result.output) {\n          addOutput(result.output, result.type || 'output');\n        }\n        if (result.data && result.format) {\n          // Handle formatted data output (tables, charts, etc.)\n          addOutput(formatCommandOutput(result.data, result.format), 'formatted');\n        }\n        if (result.navigation) {\n          onNavigate?.(result.navigation);\n        }\n      } else {\n        addOutput(result.error || 'Command failed', 'error');\n      }\n    } catch (error) {\n      addOutput(`Error: ${error.message}`, 'error');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const formatCommandOutput = (data, format) => {\n    switch (format) {\n      case 'table':\n        return formatTable(data);\n      case 'json':\n        return JSON.stringify(data, null, 2);\n      case 'portfolio':\n        return formatPortfolioData(data);\n      case 'market':\n        return formatMarketData(data);\n      default:\n        return data;\n    }\n  };\n\n  const formatTable = (data) => {\n    if (!Array.isArray(data) || data.length === 0) return 'No data';\n    \n    const headers = Object.keys(data[0]);\n    const maxWidths = headers.map(header => \n      Math.max(header.length, ...data.map(row => String(row[header] || '').length))\n    );\n    \n    const headerRow = headers.map((header, i) => header.padEnd(maxWidths[i])).join(' | ');\n    const separator = maxWidths.map(width => '-'.repeat(width)).join('-|-');\n    const dataRows = data.map(row => \n      headers.map((header, i) => String(row[header] || '').padEnd(maxWidths[i])).join(' | ')\n    );\n    \n    return [headerRow, separator, ...dataRows].join('\\n');\n  };\n\n  const formatPortfolioData = (data) => {\n    if (!data) return 'No portfolio data available';\n    \n    let output = '📊 PORTFOLIO OVERVIEW\\n';\n    output += `═══════════════════════════════════════\\n`;\n    output += `Total Value: ${formatCurrency(data.totalValue || 0)}\\n`;\n    output += `Total Return: ${formatPercentage(data.totalReturn || 0)}\\n`;\n    output += `Holdings: ${data.holdings?.length || 0}\\n\\n`;\n    \n    if (data.holdings && data.holdings.length > 0) {\n      output += 'HOLDINGS:\\n';\n      data.holdings.forEach(holding => {\n        output += `${holding.symbol.padEnd(6)} ${formatCurrency(holding.value || 0).padStart(12)} ${formatPercentage(holding.weight || 0).padStart(8)}\\n`;\n      });\n    }\n    \n    return output;\n  };\n\n  const formatMarketData = (data) => {\n    if (!data) return 'No market data available';\n    \n    let output = '📈 MARKET DATA\\n';\n    output += `═══════════════════════════════════════\\n`;\n    \n    Object.entries(data).forEach(([key, value]) => {\n      output += `${key.toUpperCase().padEnd(15)} ${String(value).padStart(12)}\\n`;\n    });\n    \n    return output;\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleCommand(input);\n      setInput('');\n      setShowSuggestions(false);\n    } else if (e.key === 'ArrowUp') {\n      e.preventDefault();\n      if (historyIndex < commandHistory.length - 1) {\n        const newIndex = historyIndex + 1;\n        setHistoryIndex(newIndex);\n        setInput(commandHistory[commandHistory.length - 1 - newIndex]);\n      }\n    } else if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      if (historyIndex > 0) {\n        const newIndex = historyIndex - 1;\n        setHistoryIndex(newIndex);\n        setInput(commandHistory[commandHistory.length - 1 - newIndex]);\n      } else if (historyIndex === 0) {\n        setHistoryIndex(-1);\n        setInput('');\n      }\n    } else if (e.key === 'Tab') {\n      e.preventDefault();\n      if (suggestions.length > 0) {\n        setInput(suggestions[0]);\n        setShowSuggestions(false);\n      }\n    } else if (e.key === 'Escape') {\n      setShowSuggestions(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setInput(value);\n    \n    // Generate suggestions\n    if (value.trim()) {\n      const newSuggestions = cliProcessor.current.getSuggestions(value);\n      setSuggestions(newSuggestions);\n      setShowSuggestions(newSuggestions.length > 0);\n    } else {\n      setShowSuggestions(false);\n    }\n  };\n\n  const clearOutput = () => {\n    setOutput([]);\n  };\n\n  const exportOutput = () => {\n    const exportText = output.map(item => \n      `[${item.timestamp.toLocaleTimeString()}] ${item.content}`\n    ).join('\\n');\n    \n    const blob = new Blob([exportText], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `financeanalyst-cli-${new Date().toISOString().split('T')[0]}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const getOutputTypeColor = (type) => {\n    switch (type) {\n      case 'command': return 'text-blue-400';\n      case 'error': return 'text-red-400';\n      case 'success': return 'text-green-400';\n      case 'warning': return 'text-yellow-400';\n      case 'info': return 'text-cyan-400';\n      case 'system': return 'text-gray-400';\n      case 'formatted': return 'text-purple-400';\n      default: return 'text-gray-300';\n    }\n  };\n\n  return (\n    <div className=\"fixed bottom-0 left-0 right-0 z-30\">\n      {/* CLI Header Bar */}\n      <div \n        className=\"bg-gray-900 border-t border-gray-700 px-4 py-2 flex items-center justify-between cursor-pointer select-none\"\n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        <div className=\"flex items-center space-x-3\">\n          <Terminal className=\"w-5 h-5 text-green-400\" />\n          <span className=\"text-sm font-mono text-gray-300\">\n            FinanceAnalyst Pro Terminal\n          </span>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\n            <span className=\"text-xs text-gray-500\">Live</span>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {!isMinimized && (\n            <>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  clearOutput();\n                }}\n                className=\"p-1 hover:bg-gray-800 rounded text-gray-400 hover:text-gray-300\"\n                title=\"Clear output\"\n              >\n                <X className=\"w-4 h-4\" />\n              </button>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  exportOutput();\n                }}\n                className=\"p-1 hover:bg-gray-800 rounded text-gray-400 hover:text-gray-300\"\n                title=\"Export output\"\n              >\n                <Download className=\"w-4 h-4\" />\n              </button>\n            </>\n          )}\n          <button\n            onClick={(e) => {\n              e.stopPropagation();\n              setIsMinimized(!isMinimized);\n            }}\n            className=\"p-1 hover:bg-gray-800 rounded text-gray-400 hover:text-gray-300\"\n          >\n            {isMinimized ? <Maximize2 className=\"w-4 h-4\" /> : <Minimize2 className=\"w-4 h-4\" />}\n          </button>\n          <button\n            className=\"p-1 hover:bg-gray-800 rounded text-gray-400 hover:text-gray-300\"\n            title={isExpanded ? \"Collapse\" : \"Expand\"}\n          >\n            {isExpanded ? <ChevronDown className=\"w-4 h-4\" /> : <ChevronUp className=\"w-4 h-4\" />}\n          </button>\n        </div>\n      </div>\n\n      {/* CLI Interface */}\n      <AnimatePresence>\n        {isExpanded && !isMinimized && (\n          <motion.div\n            initial={{ height: 0, opacity: 0 }}\n            animate={{ height: 400, opacity: 1 }}\n            exit={{ height: 0, opacity: 0 }}\n            transition={{ duration: 0.3, ease: \"easeInOut\" }}\n            className=\"bg-gray-900 border-t border-gray-700 overflow-hidden\"\n          >\n            <div className=\"h-full flex flex-col\">\n              {/* Output Area */}\n              <div \n                ref={outputRef}\n                className=\"flex-1 overflow-y-auto p-4 font-mono text-sm space-y-1\"\n                style={{ maxHeight: '320px' }}\n              >\n                {output.map((item) => (\n                  <div key={item.id} className={`${getOutputTypeColor(item.type)} whitespace-pre-wrap`}>\n                    {item.type === 'formatted' ? (\n                      <div className=\"bg-gray-800 p-3 rounded border border-gray-700 overflow-x-auto\">\n                        <pre className=\"text-xs text-gray-300\">{item.content}</pre>\n                      </div>\n                    ) : (\n                      item.content\n                    )}\n                  </div>\n                ))}\n                \n                {isProcessing && (\n                  <div className=\"text-yellow-400 flex items-center space-x-2\">\n                    <div className=\"animate-spin w-3 h-3 border border-yellow-400 border-t-transparent rounded-full\"></div>\n                    <span>Processing...</span>\n                  </div>\n                )}\n              </div>\n\n              {/* Suggestions */}\n              {showSuggestions && suggestions.length > 0 && (\n                <div className=\"border-t border-gray-700 bg-gray-800 p-2\">\n                  <div className=\"text-xs text-gray-400 mb-1\">Suggestions (Tab to complete):</div>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {suggestions.slice(0, 6).map((suggestion, index) => (\n                      <button\n                        key={index}\n                        onClick={() => {\n                          setInput(suggestion);\n                          setShowSuggestions(false);\n                          inputRef.current?.focus();\n                        }}\n                        className=\"px-2 py-1 bg-gray-700 text-gray-300 rounded text-xs hover:bg-gray-600 transition-colors\"\n                      >\n                        {suggestion}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Input Area */}\n              <div className=\"border-t border-gray-700 p-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-green-400 font-mono\">$</span>\n                  <input\n                    ref={inputRef}\n                    type=\"text\"\n                    value={input}\n                    onChange={handleInputChange}\n                    onKeyDown={handleKeyDown}\n                    placeholder=\"Enter financial command... (type 'help' for commands)\"\n                    className=\"flex-1 bg-transparent text-gray-300 font-mono outline-none placeholder-gray-500\"\n                    disabled={isProcessing}\n                  />\n                  {isProcessing && (\n                    <div className=\"text-yellow-400\">\n                      <Zap className=\"w-4 h-4 animate-pulse\" />\n                    </div>\n                  )}\n                </div>\n                \n                <div className=\"mt-2 text-xs text-gray-500 flex items-center justify-between\">\n                  <span>\n                    Use ↑↓ for history • Tab for autocomplete • Type \"help\" for commands\n                  </span>\n                  <span>\n                    {commandHistory.length} commands in history\n                  </span>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default PersistentCLI;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\nexport default ScrollToTop;\n","import { clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n","import { cn } from '../../utils/cn';\n\nconst LoadingSpinner = ({\n  size = 'default',\n  className = '',\n  text = 'Loading...',\n  showText = true,\n  variant = 'primary'\n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    default: 'w-8 h-8',\n    lg: 'w-12 h-12',\n    xl: 'w-16 h-16'\n  };\n\n  const variantClasses = {\n    primary: 'text-primary',\n    secondary: 'text-secondary',\n    muted: 'text-muted-foreground',\n    white: 'text-white'\n  };\n\n  const textSizeClasses = {\n    sm: 'text-xs',\n    default: 'text-sm',\n    lg: 'text-base',\n    xl: 'text-lg'\n  };\n\n  return (\n    <div className={cn('flex flex-col items-center justify-center space-y-2', className)}>\n      <div\n        className={cn(\n          'animate-spin rounded-full border-2 border-current border-t-transparent',\n          sizeClasses[size],\n          variantClasses[variant]\n        )}\n      />\n      {showText && (\n        <p className={cn('font-medium', textSizeClasses[size], variantClasses[variant])}>{text}</p>\n      )}\n    </div>\n  );\n};\n\n// Full page loading spinner\nexport const FullPageLoader = ({ text = 'Loading FinanceAnalyst Pro...' }) => {\n  return (\n    <div className=\"fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center\">\n      <div className=\"bg-card border border-border rounded-lg p-8 shadow-elevation-2\">\n        <LoadingSpinner size=\"lg\" text={text} variant=\"primary\" />\n      </div>\n    </div>\n  );\n};\n\n// Inline loading spinner for buttons\nexport const ButtonSpinner = ({ className = '' }) => {\n  return (\n    <div\n      className={cn(\n        'animate-spin rounded-full border-2 border-current border-t-transparent w-4 h-4',\n        className\n      )}\n    />\n  );\n};\n\n// Skeleton loader for content\nexport const SkeletonLoader = ({ lines = 3, className = '', animated = true }) => {\n  return (\n    <div className={cn('space-y-2', className)}>\n      {Array.from({ length: lines }).map((_, index) => (\n        <div\n          key={index}\n          className={cn(\n            'h-4 bg-muted rounded',\n            animated && 'animate-pulse',\n            index === lines - 1 && 'w-3/4' // Last line shorter\n          )}\n        />\n      ))}\n    </div>\n  );\n};\n\n// Chart loading placeholder\nexport const ChartLoader = ({ className = '' }) => {\n  return (\n    <div\n      className={cn(\n        'flex items-center justify-center h-64 bg-muted/20 rounded-lg border-2 border-dashed border-muted',\n        className\n      )}\n    >\n      <div className=\"text-center space-y-2\">\n        <LoadingSpinner size=\"lg\" variant=\"muted\" showText={false} />\n        <p className=\"text-sm text-muted-foreground\">Loading chart data...</p>\n      </div>\n    </div>\n  );\n};\n\n// Table loading placeholder\nexport const TableLoader = ({ rows = 5, columns = 4, className = '' }) => {\n  return (\n    <div className={cn('space-y-2', className)}>\n      {/* Header */}\n      <div className=\"grid gap-4\" style={{ gridTemplateColumns: `repeat(${columns}, 1fr)` }}>\n        {Array.from({ length: columns }).map((_, index) => (\n          <div key={`header-${index}`} className=\"h-6 bg-muted rounded animate-pulse\" />\n        ))}\n      </div>\n\n      {/* Rows */}\n      {Array.from({ length: rows }).map((_, rowIndex) => (\n        <div\n          key={`row-${rowIndex}`}\n          className=\"grid gap-4\"\n          style={{ gridTemplateColumns: `repeat(${columns}, 1fr)` }}\n        >\n          {Array.from({ length: columns }).map((_, colIndex) => (\n            <div\n              key={`cell-${rowIndex}-${colIndex}`}\n              className=\"h-4 bg-muted/60 rounded animate-pulse\"\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { Suspense, lazy } from 'react';\nimport { BrowserRouter, Routes as RouterRoutes, Route } from 'react-router-dom';\n\nimport ErrorBoundary from './components/ErrorBoundary';\nimport ScrollToTop from './components/ScrollToTop';\nimport LoadingSpinner from './components/ui/LoadingSpinner';\n\n// Lazy load pages for code splitting and better performance\nconst FinancialModelWorkspace = lazy(() => import('./pages/financial-model-workspace'));\nconst RealTimeMarketDataCenter = lazy(() => import('./pages/real-time-market-data-center'));\nconst ScenarioAnalysisSensitivityTools = lazy(\n  () => import('./pages/scenario-analysis-sensitivity-tools')\n);\nconst ValuationTool = lazy(() => import('./components/ValuationTool/ValuationTool'));\nconst ValuationToolDocs = lazy(() => import('./components/ValuationTool/ValuationToolDocs'));\nconst ValuationToolDemo = lazy(() => import('./pages/valuation-tool-demo'));\nconst PrivateAnalysis = lazy(() => import('./pages/PrivateAnalysis'));\nconst ValuationWorkbench = lazy(() => import('./pages/ValuationWorkbench'));\nconst ModelLab = lazy(() => import('./pages/ModelLab'));\nconst PortfolioManagement = lazy(() => import('./pages/PortfolioManagement'));\nconst FinancialInputsDemo = lazy(() => import('./components/FinancialInputsDemo'));\nconst NotFound = lazy(() => import('./pages/NotFound'));\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <ErrorBoundary>\n        <ScrollToTop />\n        <Suspense fallback={<LoadingSpinner />}>\n          <RouterRoutes>\n            {/* Define your routes here */}\n            <Route path=\"/\" element={<FinancialModelWorkspace />} />\n            <Route path=\"/financial-model-workspace\" element={<FinancialModelWorkspace />} />\n            <Route path=\"/real-time-market-data-center\" element={<RealTimeMarketDataCenter />} />\n            <Route\n              path=\"/scenario-analysis-sensitivity-tools\"\n              element={<ScenarioAnalysisSensitivityTools />}\n            />\n            <Route path=\"/valuation-tool\" element={<ValuationTool />} />\n            <Route path=\"/valuation-tool/docs\" element={<ValuationToolDocs />} />\n            <Route path=\"/valuation-tool/demo\" element={<ValuationToolDemo />} />\n            <Route path=\"/valuation-workbench\" element={<ValuationWorkbench />} />\n            <Route path=\"/model-lab\" element={<ModelLab />} />\n            <Route path=\"/portfolio-management\" element={<PortfolioManagement />} />\n            <Route path=\"/private-analysis\" element={<PrivateAnalysis />} />\n            <Route path=\"/financial-inputs-demo\" element={<FinancialInputsDemo />} />\n            <Route path=\"*\" element={<NotFound />} />\n          </RouterRoutes>\n        </Suspense>\n      </ErrorBoundary>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import { useEffect, useState } from 'react';\n\nimport ErrorBoundary from './components/ErrorBoundary';\nimport PerformanceDashboard from './components/PerformanceDashboard';\nimport SEOProvider from './components/SEO/SEOProvider';\nimport AIFinancialAssistant from './components/AIAssistant/AIFinancialAssistant';\nimport PersistentCLI from './components/CLI/PersistentCLI';\nimport { usePerformanceDashboard } from './hooks/usePerformanceDashboard';\nimport Routes from './Routes';\nimport { initializePerformanceMonitoring } from './utils/performanceMonitoring';\n\nfunction App() {\n  const { isVisible, hideDashboard } = usePerformanceDashboard();\n  const [isAIAssistantOpen, setIsAIAssistantOpen] = useState(false);\n  const [currentContext, setCurrentContext] = useState({\n    path: window.location.pathname,\n    timestamp: new Date().toISOString()\n  });\n  const [portfolioData, setPortfolioData] = useState(null);\n  const [marketData, setMarketData] = useState(null);\n\n  // Initialize performance monitoring on app start\n  useEffect(() => {\n    initializePerformanceMonitoring();\n  }, []);\n\n  // Update context when route changes\n  useEffect(() => {\n    setCurrentContext({\n      path: window.location.pathname,\n      timestamp: new Date().toISOString()\n    });\n  }, [window.location.pathname]);\n\n  // Global keyboard shortcut for AI Assistant (Cmd/Ctrl + K)\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if ((e.metaKey || e.ctrlKey) && e.key === 'k') {\n        e.preventDefault();\n        setIsAIAssistantOpen(prev => !prev);\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    return () => document.removeEventListener('keydown', handleKeyPress);\n  }, []);\n\n  const handleNavigation = (route) => {\n    window.location.href = route;\n  };\n\n  return (\n    <ErrorBoundary>\n      <SEOProvider>\n        <Routes />\n        <PerformanceDashboard\n          isVisible={isVisible}\n          onClose={hideDashboard}\n        />\n        <AIFinancialAssistant\n          isOpen={isAIAssistantOpen}\n          onToggle={() => setIsAIAssistantOpen(prev => !prev)}\n          currentContext={currentContext}\n          portfolioData={portfolioData}\n          marketData={marketData}\n        />\n        \n        {/* Persistent CLI - Always visible at bottom */}\n        <PersistentCLI\n          currentContext={currentContext}\n          portfolioData={portfolioData}\n          marketData={marketData}\n          onNavigate={handleNavigation}\n        />\n        \n        {/* Floating AI Assistant Button */}\n        {!isAIAssistantOpen && (\n          <button\n            onClick={() => setIsAIAssistantOpen(true)}\n            className=\"fixed bottom-20 right-6 bg-gradient-to-r from-blue-600 to-purple-600 text-white p-4 rounded-full shadow-2xl hover:shadow-3xl transform hover:scale-105 transition-all duration-200 z-40\"\n            title=\"Open AI Financial Assistant (Cmd+K)\"\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n            </svg>\n          </button>\n        )}\n      </SEOProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import { useState, useCallback, useEffect } from 'react';\n\n// Hook for managing performance dashboard visibility and hotkey\nexport function usePerformanceDashboard() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggleDashboard = useCallback(() => {\n    setIsVisible(prev => !prev);\n  }, []);\n\n  const showDashboard = useCallback(() => {\n    setIsVisible(true);\n  }, []);\n\n  const hideDashboard = useCallback(() => {\n    setIsVisible(false);\n  }, []);\n\n  // Keyboard shortcut for dashboard (Ctrl/Cmd + Shift + P)\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if ((event.ctrlKey || event.metaKey) && event.shiftKey && event.key === 'P') {\n        event.preventDefault();\n        toggleDashboard();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [toggleDashboard]);\n\n  // Show dashboard automatically in development if there are performance issues\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development') {\n      // Check for performance budget violations after page load\n      const checkPerformanceIssues = () => {\n        // This would integrate with your performance monitoring\n        const webVitals = window.webVitalsData;\n        if (webVitals) {\n          const hasIssues =\n            (webVitals.LCP && webVitals.LCP > 2500) ||\n            (webVitals.FID && webVitals.FID > 100) ||\n            (webVitals.CLS && webVitals.CLS > 0.1);\n\n          if (hasIssues) {\n            console.warn('Performance issues detected. Press Ctrl/Cmd + Shift + P to open dashboard.');\n          }\n        }\n      };\n\n      // Check after initial page load\n      setTimeout(checkPerformanceIssues, 3000);\n    }\n  }, []);\n\n  return {\n    isVisible,\n    toggleDashboard,\n    showDashboard,\n    hideDashboard\n  };\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  name: 'Guest',\n  isAuthenticated: false\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      state.name = action.payload.name;\n      state.isAuthenticated = true;\n    },\n    logout: (state) => {\n      state.name = 'Guest';\n      state.isAuthenticated = false;\n    }\n  }\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport userReducer from './slices/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer\n  }\n});\n","// Security Headers Management and CSP Nonce Generation\n\n// Generate secure nonce for CSP\nexport function generateNonce() {\n  if (typeof window !== 'undefined' && window.crypto) {\n    const array = new Uint8Array(16);\n    window.crypto.getRandomValues(array);\n    return btoa(String.fromCharCode.apply(null, array));\n  }\n\n  // Fallback for server-side or older browsers\n  return Math.random().toString(36).substring(2, 15) +\n         Math.random().toString(36).substring(2, 15);\n}\n\n// Store current nonce for the session\nlet currentNonce = null;\n\nexport function getCurrentNonce() {\n  if (!currentNonce) {\n    currentNonce = generateNonce();\n  }\n  return currentNonce;\n}\n\n// Refresh nonce (call on navigation or sensitive operations)\nexport function refreshNonce() {\n  currentNonce = generateNonce();\n  return currentNonce;\n}\n\n// CSP Policy Builder\nexport class CSPPolicyBuilder {\n  constructor() {\n    this.policies = {};\n  }\n\n  // Set default secure policies\n  setDefaults() {\n    this.policies = {\n      'default-src': [\"'self'\"],\n      'script-src': [\n        \"'self'\",\n        \"'unsafe-inline'\", // Will be replaced with nonces in production\n        \"'unsafe-eval'\", // Required for some financial calculations\n        'https://static.rocket.new' // Third-party service\n      ],\n      'style-src': [\n        \"'self'\",\n        \"'unsafe-inline'\", // Required for CSS-in-JS\n        'https://fonts.googleapis.com'\n      ],\n      'font-src': [\n        \"'self'\",\n        'https://fonts.gstatic.com'\n      ],\n      'img-src': [\n        \"'self'\",\n        'data:',\n        'blob:',\n        'https:'\n      ],\n      'connect-src': [\n        \"'self'\",\n        'https://www.alphavantage.co',\n        'https://financialmodelingprep.com',\n        'https://data.sec.gov',\n        'https://query1.finance.yahoo.com',\n        'https://query2.finance.yahoo.com',\n        'https://data.nasdaq.com',\n        'https://fred.stlouisfed.org'\n      ],\n      'frame-ancestors': [\"'none'\"],\n      'base-uri': [\"'self'\"],\n      'form-action': [\"'self'\"],\n      'upgrade-insecure-requests': [],\n      'block-all-mixed-content': []\n    };\n    return this;\n  }\n\n  // Add nonce to script-src and style-src\n  addNonce(nonce) {\n    if (this.policies['script-src']) {\n      // Remove unsafe-inline when nonce is present\n      this.policies['script-src'] = this.policies['script-src']\n        .filter(src => src !== \"'unsafe-inline'\")\n        .concat([`'nonce-${nonce}'`]);\n    }\n\n    if (this.policies['style-src']) {\n      // Keep unsafe-inline for CSS-in-JS compatibility\n      this.policies['style-src'] = this.policies['style-src']\n        .concat([`'nonce-${nonce}'`]);\n    }\n\n    return this;\n  }\n\n  // Add specific domain to directive\n  addSource(directive, source) {\n    if (!this.policies[directive]) {\n      this.policies[directive] = [];\n    }\n    if (!this.policies[directive].includes(source)) {\n      this.policies[directive].push(source);\n    }\n    return this;\n  }\n\n  // Remove source from directive\n  removeSource(directive, source) {\n    if (this.policies[directive]) {\n      this.policies[directive] = this.policies[directive]\n        .filter(src => src !== source);\n    }\n    return this;\n  }\n\n  // Build final CSP string\n  build() {\n    return Object.entries(this.policies)\n      .map(([directive, sources]) => {\n        if (sources.length === 0) {\n          return directive;\n        }\n        return `${directive} ${sources.join(' ')}`;\n      })\n      .join('; ');\n  }\n}\n\n// Security Headers Configuration\nexport const securityHeaders = {\n  // Content Security Policy\n  getCSP: (nonce = null) => {\n    const builder = new CSPPolicyBuilder().setDefaults();\n\n    if (nonce) {\n      builder.addNonce(nonce);\n    }\n\n    // Add development-specific policies\n    if (process.env.NODE_ENV === 'development') {\n      builder\n        .addSource('script-src', 'http://localhost:*')\n        .addSource('connect-src', 'ws://localhost:*')\n        .addSource('connect-src', 'http://localhost:*');\n    }\n\n    return builder.build();\n  },\n\n  // HTTP Strict Transport Security\n  getHSTS: () => {\n    return 'max-age=31536000; includeSubDomains; preload';\n  },\n\n  // X-Frame-Options\n  getFrameOptions: () => {\n    return 'DENY';\n  },\n\n  // X-Content-Type-Options\n  getContentTypeOptions: () => {\n    return 'nosniff';\n  },\n\n  // Referrer-Policy\n  getReferrerPolicy: () => {\n    return 'strict-origin-when-cross-origin';\n  },\n\n  // Permissions-Policy\n  getPermissionsPolicy: () => {\n    return [\n      'camera=()',\n      'microphone=()',\n      'geolocation=()',\n      'payment=()',\n      'autoplay=()',\n      'fullscreen=*',\n      'picture-in-picture=*'\n    ].join(', ');\n  },\n\n  // Cross-Origin policies\n  getCrossOriginEmbedderPolicy: () => {\n    return 'require-corp';\n  },\n\n  getCrossOriginOpenerPolicy: () => {\n    return 'same-origin';\n  },\n\n  getCrossOriginResourcePolicy: () => {\n    return 'same-origin';\n  }\n};\n\n// Apply CSP nonce to script and style elements\nexport function applyCspNonce(nonce) {\n  if (typeof document === 'undefined') return;\n\n  // Add nonce to inline scripts\n  const inlineScripts = document.querySelectorAll('script:not([src])');\n  inlineScripts.forEach(script => {\n    script.setAttribute('nonce', nonce);\n  });\n\n  // Add nonce to inline styles\n  const inlineStyles = document.querySelectorAll('style');\n  inlineStyles.forEach(style => {\n    style.setAttribute('nonce', nonce);\n  });\n}\n\n// Create secure headers for server responses\nexport function createSecureHeaders(nonce = null) {\n  const headers = {};\n\n  // CSP with nonce\n  headers['Content-Security-Policy'] = securityHeaders.getCSP(nonce);\n\n  // Security headers\n  headers['Strict-Transport-Security'] = securityHeaders.getHSTS();\n  headers['X-Frame-Options'] = securityHeaders.getFrameOptions();\n  headers['X-Content-Type-Options'] = securityHeaders.getContentTypeOptions();\n  headers['Referrer-Policy'] = securityHeaders.getReferrerPolicy();\n  headers['Permissions-Policy'] = securityHeaders.getPermissionsPolicy();\n\n  // Cross-Origin policies\n  if (process.env.NODE_ENV === 'production') {\n    headers['Cross-Origin-Embedder-Policy'] = securityHeaders.getCrossOriginEmbedderPolicy();\n    headers['Cross-Origin-Opener-Policy'] = securityHeaders.getCrossOriginOpenerPolicy();\n    headers['Cross-Origin-Resource-Policy'] = securityHeaders.getCrossOriginResourcePolicy();\n  }\n\n  return headers;\n}\n\n// Validate CSP compliance\nexport function validateCSPCompliance() {\n  const violations = [];\n\n  if (typeof document === 'undefined') return violations;\n\n  // Check for inline scripts without nonces\n  const inlineScripts = document.querySelectorAll('script:not([src]):not([nonce])');\n  if (inlineScripts.length > 0) {\n    violations.push({\n      type: 'inline-script-without-nonce',\n      count: inlineScripts.length,\n      elements: Array.from(inlineScripts).slice(0, 3) // First 3 for debugging\n    });\n  }\n\n  // Check for inline styles without nonces (less critical due to CSS-in-JS)\n  const inlineStyles = document.querySelectorAll('style:not([nonce])');\n  if (inlineStyles.length > 5) { // Allow some CSS-in-JS styles\n    violations.push({\n      type: 'excessive-inline-styles',\n      count: inlineStyles.length,\n      recommendation: 'Consider consolidating CSS-in-JS styles'\n    });\n  }\n\n  // Check for unsafe external resources\n  const externalScripts = document.querySelectorAll('script[src]');\n  externalScripts.forEach(script => {\n    const src = script.getAttribute('src');\n    if (src && !src.startsWith('https://') && !src.startsWith('/')) {\n      violations.push({\n        type: 'insecure-external-script',\n        src,\n        element: script\n      });\n    }\n  });\n\n  return violations;\n}\n\n// CSP violation reporter\nexport function setupCSPReporting() {\n  if (typeof document === 'undefined') return;\n\n  document.addEventListener('securitypolicyviolation', (event) => {\n    const violation = {\n      blockedURI: event.blockedURI,\n      violatedDirective: event.violatedDirective,\n      originalPolicy: event.originalPolicy,\n      disposition: event.disposition,\n      timestamp: Date.now(),\n      userAgent: navigator.userAgent,\n      url: window.location.href\n    };\n\n    console.warn('CSP Violation:', violation);\n\n    // In production, send to monitoring service\n    if (process.env.NODE_ENV === 'production') {\n      sendCSPViolation(violation);\n    }\n  });\n}\n\nfunction sendCSPViolation(violation) {\n  // Send to your monitoring service\n  fetch('/api/csp-violations', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(violation)\n  }).catch(error => {\n    console.error('Failed to report CSP violation:', error);\n  });\n}\n\n// Initialize security measures\nexport function initializeSecurity() {\n  const nonce = getCurrentNonce();\n\n  // Apply nonce to existing elements\n  applyCspNonce(nonce);\n\n  // Setup CSP violation reporting\n  setupCSPReporting();\n\n  // Validate compliance\n  const violations = validateCSPCompliance();\n  if (violations.length > 0) {\n    console.warn('CSP compliance issues found:', violations);\n  }\n\n  // Setup periodic compliance checks\n  setInterval(() => {\n    const currentViolations = validateCSPCompliance();\n    if (currentViolations.length > violations.length) {\n      console.warn('New CSP compliance issues detected:',\n        currentViolations.slice(violations.length));\n    }\n  }, 30000); // Check every 30 seconds\n\n  console.log('Security measures initialized with nonce:', nonce);\n  return nonce;\n}\n\n// Hook for React components to get current nonce\nexport function useSecurityNonce() {\n  return getCurrentNonce();\n}\n","// Service Worker Registration and Management\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  window.location.hostname === '[::1]' ||\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function registerSW() {\n  if ('serviceWorker' in navigator) {\n    const publicUrl = new URL(import.meta.env.BASE_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${import.meta.env.BASE_URL}sw.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl);\n        navigator.serviceWorker.ready.then(() => {\n          console.warn('PWA: Service Worker ready in development mode');\n        });\n      } else {\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      console.warn('PWA: Service Worker registered successfully:', registration);\n\n      // Check for updates\n      registration.addEventListener('updatefound', () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n\n        installingWorker.addEventListener('statechange', () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log('PWA: New content available, will update on next visit');\n              showUpdateAvailableNotification();\n            } else {\n              console.log('PWA: Content cached for offline use');\n              showCachedNotification();\n            }\n          }\n        });\n      });\n    })\n    .catch((error) => {\n      console.error('PWA: Service Worker registration failed:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('PWA: No internet connection found. App is running in offline mode.');\n      showOfflineNotification();\n    });\n}\n\nexport function unregisterSW() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error('PWA: Service Worker unregistration failed:', error);\n      });\n  }\n}\n\n// Notification functions for better UX\nfunction showUpdateAvailableNotification() {\n  if ('Notification' in window && Notification.permission === 'granted') {\n    new Notification('FinanceAnalyst Pro Update Available', {\n      body: 'A new version is available. Refresh to update.',\n      icon: '/assets/images/favicon.svg',\n      badge: '/assets/images/favicon.svg',\n      tag: 'app-update'\n    });\n  }\n\n  // Also show in-app notification\n  showInAppNotification(\n    'Update Available',\n    'A new version of FinanceAnalyst Pro is ready. Refresh to update.',\n    'info'\n  );\n}\n\nfunction showCachedNotification() {\n  showInAppNotification(\n    'App Ready for Offline',\n    'FinanceAnalyst Pro is now available offline for core features.',\n    'success'\n  );\n}\n\nfunction showOfflineNotification() {\n  showInAppNotification(\n    'Offline Mode',\n    'You\\'re currently offline. Some features may be limited.',\n    'warning'\n  );\n}\n\nfunction showInAppNotification(title, message, type = 'info') {\n  // Create a simple notification system\n  const notification = document.createElement('div');\n  notification.className = `\n    fixed top-4 right-4 z-50 max-w-sm p-4 rounded-lg shadow-lg\n    ${type === 'success' ? 'bg-green-50 text-green-800 border border-green-200' : ''}\n    ${type === 'warning' ? 'bg-yellow-50 text-yellow-800 border border-yellow-200' : ''}\n    ${type === 'info' ? 'bg-blue-50 text-blue-800 border border-blue-200' : ''}\n    transition-all duration-300 transform translate-x-full\n  `;\n\n  notification.innerHTML = `\n    <div class=\"flex items-start\">\n      <div class=\"flex-1\">\n        <h4 class=\"font-medium text-sm\">${title}</h4>\n        <p class=\"text-sm mt-1 opacity-90\">${message}</p>\n      </div>\n      <button class=\"ml-3 text-sm opacity-60 hover:opacity-100\" onclick=\"this.parentElement.parentElement.remove()\">\n        ✕\n      </button>\n    </div>\n  `;\n\n  document.body.appendChild(notification);\n\n  // Animate in\n  requestAnimationFrame(() => {\n    notification.style.transform = 'translateX(0)';\n  });\n\n  // Auto remove after 5 seconds\n  setTimeout(() => {\n    if (notification.parentElement) {\n      notification.style.transform = 'translateX(100%)';\n      setTimeout(() => notification.remove(), 300);\n    }\n  }, 5000);\n}\n\n// Request notification permission\nexport function requestNotificationPermission() {\n  if ('Notification' in window && Notification.permission === 'default') {\n    Notification.requestPermission().then((permission) => {\n      console.log('PWA: Notification permission:', permission);\n    });\n  }\n}\n\n// Install prompt handling\nlet deferredPrompt;\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  e.preventDefault();\n  deferredPrompt = e;\n  showInstallPrompt();\n});\n\nfunction showInstallPrompt() {\n  // Show custom install button/banner\n  const installBanner = document.createElement('div');\n  installBanner.className = `\n    fixed bottom-4 left-4 right-4 p-4 bg-blue-600 text-white rounded-lg shadow-lg\n    flex items-center justify-between z-50 max-w-md mx-auto\n  `;\n\n  installBanner.innerHTML = `\n    <div class=\"flex-1\">\n      <h4 class=\"font-medium text-sm\">Install FinanceAnalyst Pro</h4>\n      <p class=\"text-sm opacity-90 mt-1\">Get faster access and offline features</p>\n    </div>\n    <div class=\"flex items-center space-x-2 ml-3\">\n      <button id=\"install-btn\" class=\"bg-white text-blue-600 px-3 py-1 rounded text-sm font-medium hover:bg-blue-50\">\n        Install\n      </button>\n      <button id=\"dismiss-btn\" class=\"text-white opacity-60 hover:opacity-100 text-sm\">\n        ✕\n      </button>\n    </div>\n  `;\n\n  document.body.appendChild(installBanner);\n\n  // Handle install button click\n  installBanner.querySelector('#install-btn').addEventListener('click', async() => {\n    if (deferredPrompt) {\n      deferredPrompt.prompt();\n      const { outcome } = await deferredPrompt.userChoice;\n      console.log('PWA: Install prompt outcome:', outcome);\n      deferredPrompt = null;\n    }\n    installBanner.remove();\n  });\n\n  // Handle dismiss button click\n  installBanner.querySelector('#dismiss-btn').addEventListener('click', () => {\n    installBanner.remove();\n    deferredPrompt = null;\n  });\n}\n\n// Handle successful installation\nwindow.addEventListener('appinstalled', () => {\n  console.log('PWA: App was installed successfully');\n  showInAppNotification(\n    'App Installed',\n    'FinanceAnalyst Pro has been installed successfully!',\n    'success'\n  );\n  deferredPrompt = null;\n});\n\n// Network status handling\nexport function setupNetworkHandling() {\n  function updateOnlineStatus() {\n    const isOnline = navigator.onLine;\n    console.log('PWA: Network status:', isOnline ? 'online' : 'offline');\n\n    if (!isOnline) {\n      showInAppNotification(\n        'Connection Lost',\n        'You\\'re now offline. Cached content will be used.',\n        'warning'\n      );\n    } else {\n      showInAppNotification(\n        'Connection Restored',\n        'You\\'re back online. Syncing latest data...',\n        'success'\n      );\n    }\n\n    // Update UI to reflect network status\n    document.body.setAttribute('data-network-status', isOnline ? 'online' : 'offline');\n  }\n\n  window.addEventListener('online', updateOnlineStatus);\n  window.addEventListener('offline', updateOnlineStatus);\n\n  // Initial status\n  updateOnlineStatus();\n}\n\n// Detect automated/audit environments (e.g., Lighthouse/CI)\nfunction isAutomatedEnvironment() {\n  try {\n    const params = new URLSearchParams(window.location.search);\n    return (\n      navigator.webdriver === true ||\n      params.has('lhci') ||\n      params.has('ci') ||\n      params.has('audit') ||\n      params.get('pwa') === '0'\n    );\n  } catch (e) {\n    return navigator.webdriver === true;\n  }\n}\n\n// Initialize PWA features\nexport function initializePWA() {\n  // Skip PWA in automated environments to avoid permission prompts and SW interference\n  if (isAutomatedEnvironment()) {\n    console.warn('PWA: Skipping initialization in automated/audit environment');\n    return;\n  }\n\n  registerSW();\n  setupNetworkHandling();\n\n  // Do NOT request notification permission automatically on load\n  // Prefer requesting permission in response to explicit user action\n\n  console.log('PWA: Initialization complete');\n}\n","import { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store/store';\nimport { initializePerformanceMonitoring } from './utils/performanceMonitoring';\nimport { initializeSecurity } from './utils/securityHeaders';\nimport { initializePWA } from './utils/serviceWorker';\nimport './styles/tailwind.css';\nimport './styles/index.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n// Initialize security measures\nconst securityNonce = initializeSecurity();\n\n// Initialize PWA features\ninitializePWA();\n\n// Initialize performance monitoring\ninitializePerformanceMonitoring();\n\n// Log initialization complete\nconsole.log('🚀 FinanceAnalyst Pro initialized with security nonce:', securityNonce);\n"],"file":"assets/index-DPdPN0n0.js"}