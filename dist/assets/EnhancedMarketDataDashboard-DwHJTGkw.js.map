{"version":3,"file":"EnhancedMarketDataDashboard-DwHJTGkw.js","sources":["../../src/components/PrivateAnalysis/EnhancedMarketDataDashboard.jsx"],"sourcesContent":["import { motion } from 'framer-motion';\nimport {\n  TrendingUp, TrendingDown, Activity, Globe, Bell,\n  Plus, Minus, RefreshCw, Settings,\n  BarChart3, LineChart, AlertCircle, CheckCircle\n} from 'lucide-react';\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { LineChart as RechartsLineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst EnhancedMarketDataDashboard = ({ data: _data, onDataChange: _onDataChange }) => {\n  const [activeView, setActiveView] = useState('overview');\n  const [watchlist, setWatchlist] = useState([\n    { symbol: 'SPY', name: 'SPDR S&P 500 ETF', price: 445.67, change: 2.34, changePercent: 0.53, category: 'index' },\n    { symbol: 'QQQ', name: 'Invesco QQQ Trust', price: 378.91, change: -1.45, changePercent: -0.38, category: 'index' },\n    { symbol: 'VIX', name: 'CBOE Volatility Index', price: 18.45, change: 0.87, changePercent: 4.95, category: 'volatility' },\n    { symbol: 'DXY', name: 'US Dollar Index', price: 102.45, change: -0.23, changePercent: -0.22, category: 'currency' },\n    { symbol: '^TNX', name: '10-Year Treasury Yield', price: 4.25, change: 0.05, changePercent: 1.19, category: 'rates' }\n  ]);\n\n  const [marketData] = useState({\n    indices: {\n      'S&P 500': { value: 4456.78, change: 23.45, changePercent: 0.53 },\n      'NASDAQ': { value: 13789.45, change: -45.67, changePercent: -0.33 },\n      'DOW': { value: 34567.89, change: 156.78, changePercent: 0.46 },\n      'Russell 2000': { value: 1987.65, change: 12.34, changePercent: 0.63 }\n    },\n    sectors: [\n      { name: 'Technology', change: 1.2, weight: 23.5 },\n      { name: 'Healthcare', change: 0.8, weight: 13.2 },\n      { name: 'Financial', change: -0.4, weight: 12.8 },\n      { name: 'Consumer Disc.', change: 0.6, weight: 10.9 },\n      { name: 'Communication', change: -0.2, weight: 9.1 },\n      { name: 'Industrials', change: 0.9, weight: 8.7 }\n    ],\n    economicIndicators: {\n      'Fed Funds Rate': { value: 5.25, change: 0.0, unit: '%' },\n      '10Y Treasury': { value: 4.25, change: 0.05, unit: '%' },\n      'Inflation (CPI)': { value: 3.1, change: -0.2, unit: '%' },\n      'Unemployment': { value: 3.8, change: 0.1, unit: '%' },\n      'GDP Growth': { value: 2.4, change: 0.1, unit: '%' }\n    }\n  });\n\n  const [alerts] = useState([\n    { id: 1, type: 'price', symbol: 'SPY', condition: 'above', value: 450, active: true },\n    { id: 2, type: 'volatility', symbol: 'VIX', condition: 'above', value: 20, active: true }\n  ]);\n\n  const [newSymbol, setNewSymbol] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const formatCurrency = useCallback((value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    const sign = value >= 0 ? '+' : '';\n    return `${sign}${value.toFixed(2)}%`;\n  }, []);\n\n  const getChangeColor = useCallback((change) => {\n    if (change > 0) return 'text-green-600';\n    if (change < 0) return 'text-red-600';\n    return 'text-gray-600';\n  }, []);\n\n  const getChangeIcon = useCallback((change) => {\n    if (change > 0) return TrendingUp;\n    if (change < 0) return TrendingDown;\n    return Minus;\n  }, []);\n\n  // Simulate real-time data updates\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setWatchlist(prev => prev.map(item => ({\n        ...item,\n        price: item.price + (Math.random() - 0.5) * 2,\n        change: item.change + (Math.random() - 0.5) * 0.5,\n        changePercent: item.changePercent + (Math.random() - 0.5) * 0.1\n      })));\n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const addToWatchlist = useCallback(async() => {\n    if (!newSymbol.trim()) return;\n\n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      const newItem = {\n        symbol: newSymbol.toUpperCase(),\n        name: `${newSymbol.toUpperCase()} Inc.`,\n        price: Math.random() * 200 + 50,\n        change: (Math.random() - 0.5) * 10,\n        changePercent: (Math.random() - 0.5) * 5,\n        category: 'stock'\n      };\n\n      setWatchlist(prev => [...prev, newItem]);\n      setNewSymbol('');\n    } catch (error) {\n      console.error('Error adding symbol:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [newSymbol]);\n\n  const removeFromWatchlist = useCallback((symbol) => {\n    setWatchlist(prev => prev.filter(item => item.symbol !== symbol));\n  }, []);\n\n  const chartData = useMemo(() => {\n    // Generate sample time series data\n    const now = new Date();\n    return Array.from({ length: 30 }, (_, i) => ({\n      time: new Date(now.getTime() - (29 - i) * 24 * 60 * 60 * 1000).toLocaleDateString(),\n      SPY: 440 + Math.sin(i * 0.2) * 10 + Math.random() * 5,\n      QQQ: 370 + Math.sin(i * 0.25) * 15 + Math.random() * 8,\n      VIX: 20 + Math.sin(i * 0.3) * 5 + Math.random() * 3\n    }));\n  }, []);\n\n  const correlationMatrix = useMemo(() => {\n    // Calculate correlations between major indices (simulated)\n    return [\n      { pair: 'SPY vs QQQ', correlation: 0.85, strength: 'Strong Positive' },\n      { pair: 'SPY vs VIX', correlation: -0.72, strength: 'Strong Negative' },\n      { pair: 'QQQ vs VIX', correlation: -0.68, strength: 'Moderate Negative' },\n      { pair: 'SPY vs DXY', correlation: -0.45, strength: 'Moderate Negative' }\n    ];\n  }, []);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Activity className=\"text-blue-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Enhanced Market Data Dashboard</h2>\n            <p className=\"text-gray-600\">Real-time market insights & valuation integration</p>\n          </div>\n        </div>\n\n        <div className=\"flex space-x-3\">\n          <motion.button\n            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <RefreshCw size={16} />\n            <span>Sync Data</span>\n          </motion.button>\n\n          <motion.button\n            className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <Settings size={16} />\n            <span>Settings</span>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* View Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {[\n            { id: 'overview', label: 'Market Overview', icon: Globe },\n            { id: 'watchlist', label: 'Watchlist', icon: BarChart3 },\n            { id: 'charts', label: 'Charts & Analysis', icon: LineChart },\n            { id: 'alerts', label: 'Alerts', icon: Bell }\n          ].map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveView(tab.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeView === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{tab.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Market Overview */}\n      {activeView === 'overview' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Major Indices */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Major Indices</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {Object.entries(marketData.indices).map(([name, data]) => {\n                const ChangeIcon = getChangeIcon(data.change);\n                return (\n                  <div key={name} className=\"bg-gray-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600 mb-1\">{name}</div>\n                    <div className=\"text-xl font-bold text-gray-800\">\n                      {data.value.toLocaleString()}\n                    </div>\n                    <div className={`flex items-center space-x-1 text-sm ${getChangeColor(data.change)}`}>\n                      <ChangeIcon size={14} />\n                      <span>{data.change > 0 ? '+' : ''}{data.change.toFixed(2)}</span>\n                      <span>({formatPercent(data.changePercent)})</span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Sector Performance */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Sector Performance</h3>\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                {marketData.sectors.map((sector) => (\n                  <div key={sector.name} className=\"flex justify-between items-center\">\n                    <div>\n                      <div className=\"font-medium text-gray-800\">{sector.name}</div>\n                      <div className=\"text-sm text-gray-600\">{sector.weight}% weight</div>\n                    </div>\n                    <div className={`font-semibold ${getChangeColor(sector.change)}`}>\n                      {formatPercent(sector.change)}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Economic Indicators */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Economic Indicators</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n              {Object.entries(marketData.economicIndicators).map(([name, data]) => (\n                <div key={name} className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-sm text-gray-600 mb-1\">{name}</div>\n                  <div className=\"text-lg font-bold text-gray-800\">\n                    {data.value}{data.unit}\n                  </div>\n                  <div className={`text-sm ${getChangeColor(data.change)}`}>\n                    {data.change > 0 ? '+' : ''}{data.change}{data.unit}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Watchlist */}\n      {activeView === 'watchlist' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Add Symbol */}\n          <div className=\"flex space-x-3\">\n            <div className=\"flex-1\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter symbol (e.g., AAPL, MSFT)\"\n                value={newSymbol}\n                onChange={(e) => setNewSymbol(e.target.value.toUpperCase())}\n                onKeyPress={(e) => e.key === 'Enter' && addToWatchlist()}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <motion.button\n              onClick={addToWatchlist}\n              disabled={isLoading || !newSymbol.trim()}\n              className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n                isLoading || !newSymbol.trim()\n                  ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                  : 'bg-green-600 hover:bg-green-700 text-white'\n              }`}\n              whileHover={!isLoading && newSymbol.trim() ? { scale: 1.02 } : {}}\n            >\n              <Plus size={16} />\n              <span>{isLoading ? 'Adding...' : 'Add'}</span>\n            </motion.button>\n          </div>\n\n          {/* Watchlist Table */}\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4\">Symbol</th>\n                  <th className=\"text-left py-3 px-4\">Name</th>\n                  <th className=\"text-right py-3 px-4\">Price</th>\n                  <th className=\"text-right py-3 px-4\">Change</th>\n                  <th className=\"text-right py-3 px-4\">Change %</th>\n                  <th className=\"text-center py-3 px-4\">Category</th>\n                  <th className=\"text-center py-3 px-4\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {watchlist.map((item) => {\n                  const ChangeIcon = getChangeIcon(item.change);\n                  return (\n                    <tr key={item.symbol} className=\"border-b border-gray-200 hover:bg-gray-50\">\n                      <td className=\"py-3 px-4 font-medium text-gray-800\">{item.symbol}</td>\n                      <td className=\"py-3 px-4 text-gray-600\">{item.name}</td>\n                      <td className=\"text-right py-3 px-4 font-medium\">{formatCurrency(item.price)}</td>\n                      <td className={`text-right py-3 px-4 ${getChangeColor(item.change)}`}>\n                        <div className=\"flex items-center justify-end space-x-1\">\n                          <ChangeIcon size={14} />\n                          <span>{item.change > 0 ? '+' : ''}{item.change.toFixed(2)}</span>\n                        </div>\n                      </td>\n                      <td className={`text-right py-3 px-4 font-medium ${getChangeColor(item.changePercent)}`}>\n                        {formatPercent(item.changePercent)}\n                      </td>\n                      <td className=\"text-center py-3 px-4\">\n                        <span\n                          className={`px-2 py-1 rounded-full text-xs font-medium ${\n                            item.category === 'index' ? 'bg-blue-100 text-blue-800' :\n                              item.category === 'stock' ? 'bg-green-100 text-green-800' :\n                                item.category === 'volatility' ? 'bg-red-100 text-red-800' :\n                                  'bg-gray-100 text-gray-800'\n                          }`}\n                        >\n                          {item.category}\n                        </span>\n                      </td>\n                      <td className=\"text-center py-3 px-4\">\n                        <button\n                          onClick={() => removeFromWatchlist(item.symbol)}\n                          className=\"text-red-600 hover:text-red-800\"\n                        >\n                          <Minus size={16} />\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Charts & Analysis */}\n      {activeView === 'charts' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Price Chart */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">30-Day Price Performance</h3>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <RechartsLineChart data={chartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"time\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Line\n                    type=\"monotone\" dataKey=\"SPY\" stroke=\"#3B82F6\"\n                    strokeWidth={2} name=\"S&P 500\"\n                  />\n                  <Line\n                    type=\"monotone\" dataKey=\"QQQ\" stroke=\"#10B981\"\n                    strokeWidth={2} name=\"NASDAQ\"\n                  />\n                  <Line\n                    type=\"monotone\" dataKey=\"VIX\" stroke=\"#EF4444\"\n                    strokeWidth={2} name=\"VIX\"\n                  />\n                </RechartsLineChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Correlation Analysis */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Correlation Analysis</h3>\n            <div className=\"space-y-3\">\n              {correlationMatrix.map((corr, idx) => (\n                <div key={idx} className=\"flex items-center justify-between p-3 bg-white rounded-lg\">\n                  <div>\n                    <div className=\"font-medium text-gray-800\">{corr.pair}</div>\n                    <div className=\"text-sm text-gray-600\">{corr.strength}</div>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <div\n                      className={`text-lg font-bold ${\n                        Math.abs(corr.correlation) > 0.7 ? 'text-red-600' :\n                          Math.abs(corr.correlation) > 0.4 ? 'text-yellow-600' :\n                            'text-green-600'\n                      }`}\n                    >\n                      {corr.correlation.toFixed(2)}\n                    </div>\n                    <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                      <div\n                        className={`h-2 rounded-full ${\n                          Math.abs(corr.correlation) > 0.7 ? 'bg-red-600' :\n                            Math.abs(corr.correlation) > 0.4 ? 'bg-yellow-600' :\n                              'bg-green-600'\n                        }`}\n                        style={{ width: `${Math.abs(corr.correlation) * 100}%` }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Alerts */}\n      {activeView === 'alerts' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Active Alerts */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Active Alerts</h3>\n            <div className=\"space-y-3\">\n              {alerts.map((alert) => (\n                <div key={alert.id} className=\"flex items-center justify-between p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Bell className=\"text-yellow-600\" size={20} />\n                    <div>\n                      <div className=\"font-medium text-gray-800\">\n                        {alert.symbol} {alert.type} alert\n                      </div>\n                      <div className=\"text-sm text-gray-600\">\n                        Notify when {alert.type} goes {alert.condition} {alert.value}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <span\n                      className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        alert.active ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\n                      }`}\n                    >\n                      {alert.active ? 'Active' : 'Inactive'}\n                    </span>\n                    <button className=\"text-red-600 hover:text-red-800\">\n                      <Minus size={16} />\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Market Status Indicators */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Market Status</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <CheckCircle className=\"text-green-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">US Markets</div>\n                  <div className=\"text-sm text-gray-600\">Open (6h 23m remaining)</div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <AlertCircle className=\"text-yellow-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">European Markets</div>\n                  <div className=\"text-sm text-gray-600\">Closed</div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <AlertCircle className=\"text-red-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">Asian Markets</div>\n                  <div className=\"text-sm text-gray-600\">Closed</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default EnhancedMarketDataDashboard;\n"],"names":["EnhancedMarketDataDashboard","data","_data","onDataChange","_onDataChange","activeView","setActiveView","useState","watchlist","setWatchlist","symbol","name","price","change","changePercent","category","marketData","indices","value","NASDAQ","DOW","sectors","weight","economicIndicators","unit","Unemployment","alerts","id","type","condition","active","newSymbol","setNewSymbol","isLoading","setIsLoading","formatCurrency","useCallback","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercent","toFixed","getChangeColor","getChangeIcon","TrendingUp","TrendingDown","Minus","useEffect","interval","setInterval","prev","map","item","Math","random","clearInterval","addToWatchlist","async","trim","Promise","resolve","setTimeout","newItem","toUpperCase","error","removeFromWatchlist","filter","chartData","useMemo","now","Date","Array","from","length","_","i","time","getTime","toLocaleDateString","SPY","sin","QQQ","VIX","correlationMatrix","pair","correlation","strength","jsxs","className","children","jsx","Activity","size","motion","button","whileHover","scale","RefreshCw","Settings","label","icon","Globe","BarChart3","LineChart","Bell","tab","Icon","onClick","div","initial","opacity","y","animate","entries","ChangeIcon","toLocaleString","sector","Object","placeholder","onChange","e","target","onKeyPress","key","disabled","Plus","ResponsiveContainer","width","height","RechartsLineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","strokeWidth","corr","idx","abs","alert","CheckCircle","AlertCircle"],"mappings":"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"}