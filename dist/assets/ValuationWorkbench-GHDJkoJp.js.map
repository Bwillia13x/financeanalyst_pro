{"version":3,"file":"ValuationWorkbench-GHDJkoJp.js","sources":["../../src/components/ValuationWorkbench/AssumptionsPanel.jsx","../../src/components/ValuationWorkbench/AuditTrail.jsx","../../src/components/ValuationWorkbench/AxisPicker.jsx","../../src/utils/valuationUtils.js","../../src/components/ValuationWorkbench/ErrorHandler.jsx","../../src/components/ValuationWorkbench/MonteCarloAnalysis.jsx","../../src/components/ValuationWorkbench/ProjectionsTable.jsx","../../src/components/ValuationWorkbench/ReverseDCF.jsx","../../src/components/ValuationWorkbench/ScenarioLibrary.jsx","../../src/components/ValuationWorkbench/SensitivityAnalysis.jsx","../../src/components/ValuationWorkbench/TestsPanel.jsx","../../src/components/ValuationWorkbench/TornadoChart.jsx","../../src/components/ValuationWorkbench/ValuationSummary.jsx","../../src/pages/ValuationWorkbench.jsx"],"sourcesContent":["import { Card, Pill, NumberInput, Switch } from 'src/components/ui/UIHelpers.jsx';\n\nconst AssumptionsPanel = ({ assumptions, setAssumptions }) => {\n  const set = (key) => (value) => setAssumptions({ ...assumptions, [key]: value });\n\n  return (\n    <Card title=\"Assumptions\" right={<Pill tone=\"blue\">{assumptions.currency}</Pill>}>\n      <div className=\"grid grid-cols-12 gap-4\">\n        {/* Business Fundamentals */}\n        <div className=\"col-span-12\">\n          <div className=\"grid grid-cols-2 gap-3\">\n            <NumberInput\n              label=\"Shares\"\n              value={assumptions.shares}\n              onChange={set('shares')}\n              suffix=\"sh\"\n              step={1000}\n              min={1}\n            />\n            <NumberInput\n              label=\"Price\"\n              value={assumptions.price}\n              onChange={set('price')}\n              suffix={assumptions.currency}\n              step={0.01}\n              min={0}\n            />\n            <NumberInput\n              label=\"Net Debt\"\n              value={assumptions.netDebt}\n              onChange={set('netDebt')}\n              suffix={assumptions.currency}\n              step={1_000_000}\n            />\n            <NumberInput\n              label=\"Minority Interest\"\n              value={assumptions.minorityInterest}\n              onChange={set('minorityInterest')}\n              suffix={assumptions.currency}\n              step={1_000_000}\n            />\n            <NumberInput\n              label=\"Cash Adj.\"\n              value={assumptions.cashAdjust}\n              onChange={set('cashAdjust')}\n              suffix={assumptions.currency}\n              step={1_000_000}\n            />\n          </div>\n        </div>\n\n        {/* Operating Assumptions */}\n        <div className=\"col-span-12 border-t pt-3\">\n          <div className=\"grid grid-cols-2 gap-3\">\n            <NumberInput\n              label=\"Revenue₀\"\n              value={assumptions.rev0}\n              onChange={set('rev0')}\n              suffix={assumptions.currency}\n              step={1_000_000}\n            />\n            <NumberInput\n              label=\"Tax rate\"\n              value={assumptions.taxRate}\n              onChange={set('taxRate')}\n              suffix=\"ratio\"\n              step={0.005}\n              min={0}\n              max={0.6}\n            />\n            <NumberInput\n              label=\"EBIT margin₀\"\n              value={assumptions.ebitMargin0}\n              onChange={set('ebitMargin0')}\n              suffix=\"ratio\"\n              step={0.005}\n              min={0}\n              max={0.6}\n            />\n            <NumberInput\n              label=\"EBIT margin_T\"\n              value={assumptions.ebitMarginT}\n              onChange={set('ebitMarginT')}\n              suffix=\"ratio\"\n              step={0.005}\n              min={0}\n              max={0.6}\n            />\n            <NumberInput\n              label=\"Projection years\"\n              value={assumptions.years}\n              onChange={set('years')}\n              step={1}\n              min={3}\n              max={30}\n            />\n            <NumberInput\n              label=\"Growth horizon (yrs)\"\n              value={assumptions.growthYears}\n              onChange={set('growthYears')}\n              step={1}\n              min={1}\n              max={assumptions.years}\n            />\n          </div>\n        </div>\n\n        {/* Reinvestment */}\n        <div className=\"col-span-12 border-t pt-3\">\n          <div className=\"mb-1 text-[12px] font-semibold text-slate-700\">Reinvestment</div>\n          <div className=\"grid grid-cols-2 gap-3\">\n            <Switch\n              label=\"Use Sales‑to‑Capital\"\n              on={assumptions.reinvMethod === 'salesToCapital'}\n              setOn={(v) => set('reinvMethod')(v ? 'salesToCapital' : 'components')}\n            />\n            {assumptions.reinvMethod === 'salesToCapital' ? (\n              <NumberInput\n                label=\"Sales‑to‑Capital\"\n                value={assumptions.salesToCapital}\n                onChange={set('salesToCapital')}\n                step={0.1}\n                min={0.2}\n                max={10}\n              />\n            ) : (\n              <>\n                <NumberInput\n                  label=\"Capex % sales\"\n                  value={assumptions.capexPctSales}\n                  onChange={set('capexPctSales')}\n                  step={0.005}\n                  min={0}\n                  max={0.2}\n                />\n                <NumberInput\n                  label=\"D&A % sales\"\n                  value={assumptions.depPctSales}\n                  onChange={set('depPctSales')}\n                  step={0.005}\n                  min={0}\n                  max={0.2}\n                />\n                <NumberInput\n                  label=\"NWC % sales\"\n                  value={assumptions.nwcPctSales}\n                  onChange={set('nwcPctSales')}\n                  step={0.005}\n                  min={0}\n                  max={0.5}\n                />\n              </>\n            )}\n          </div>\n        </div>\n\n        {/* Capital Costs */}\n        <div className=\"col-span-12 border-t pt-3\">\n          <div className=\"mb-1 text-[12px] font-semibold text-slate-700\">Capital costs</div>\n          <div className=\"grid grid-cols-2 gap-3\">\n            <Switch\n              label=\"Use CAPM for Ke\"\n              on={assumptions.capmMode === 'capm'}\n              setOn={(v) => set('capmMode')(v ? 'capm' : 'manualKe')}\n            />\n            {assumptions.capmMode === 'capm' ? (\n              <>\n                <NumberInput\n                  label=\"Risk‑free (rf)\"\n                  value={assumptions.rf}\n                  onChange={set('rf')}\n                  step={0.0025}\n                  min={0}\n                  max={0.2}\n                />\n                <NumberInput\n                  label=\"Beta\"\n                  value={assumptions.beta}\n                  onChange={set('beta')}\n                  step={0.05}\n                  min={-1}\n                  max={3}\n                />\n                <NumberInput\n                  label=\"ERP\"\n                  value={assumptions.erp}\n                  onChange={set('erp')}\n                  step={0.005}\n                  min={0}\n                  max={0.15}\n                />\n              </>\n            ) : (\n              <NumberInput\n                label=\"Ke (manual)\"\n                value={assumptions.keManual}\n                onChange={set('keManual')}\n                step={0.0025}\n                min={0.02}\n                max={0.30}\n              />\n            )}\n            <NumberInput\n              label=\"Kd (pre‑tax)\"\n              value={assumptions.kd}\n              onChange={set('kd')}\n              step={0.0025}\n              min={0.01}\n              max={0.20}\n            />\n            <NumberInput\n              label=\"W_d\"\n              value={assumptions.wd}\n              onChange={set('wd')}\n              step={0.01}\n              min={0}\n              max={1}\n            />\n            <NumberInput\n              label=\"W_e\"\n              value={assumptions.we}\n              onChange={set('we')}\n              step={0.01}\n              min={0}\n              max={1}\n            />\n          </div>\n        </div>\n\n        {/* Terminal Value */}\n        <div className=\"col-span-12 border-t pt-3\">\n          <div className=\"mb-1 text-[12px] font-semibold text-slate-700\">Terminal</div>\n          <div className=\"grid grid-cols-2 gap-3\">\n            <Switch\n              label=\"Gordon Growth\"\n              on={assumptions.terminalMethod === 'gordon'}\n              setOn={(v) => set('terminalMethod')(v ? 'gordon' : 'exitMultiple')}\n            />\n            {assumptions.terminalMethod === 'gordon' ? (\n              <NumberInput\n                label=\"Terminal g\"\n                value={assumptions.tg}\n                onChange={set('tg')}\n                step={0.001}\n                min={-0.02}\n                max={0.05}\n              />\n            ) : (\n              <>\n                <NumberInput\n                  label=\"Exit EV Multiple\"\n                  value={assumptions.exitEVMultiple}\n                  onChange={set('exitEVMultiple')}\n                  step={0.25}\n                  min={2}\n                  max={25}\n                />\n                <label className=\"flex items-center justify-between text-[13px]\">\n                  <span className=\"text-slate-600\">Metric</span>\n                  <select\n                    className=\"rounded-md border border-slate-300 bg-white px-2 py-1\"\n                    value={assumptions.exitMetric}\n                    onChange={(e) => set('exitMetric')(e.target.value)}\n                  >\n                    <option value=\"EBITDA\">EBITDA</option>\n                    <option value=\"EBIT\">EBIT</option>\n                  </select>\n                </label>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default AssumptionsPanel;\n","import { useState } from 'react';\n\nimport { Card } from 'src/components/ui/UIHelpers.jsx';\n\n// Generate audit log entry\nfunction createAuditEntry(field, oldValue, newValue, timestamp = new Date()) {\n  return {\n    id: Date.now() + Math.random(),\n    timestamp,\n    field,\n    oldValue,\n    newValue,\n    change: getChangeDescription(field, oldValue, newValue),\n    user: 'Current User' // In production, this would be from auth context\n  };\n}\n\n// Get human-readable change description\nfunction getChangeDescription(field, oldValue, newValue) {\n  const fieldNames = {\n    ebitMargin0: 'EBIT Margin Y0',\n    ebitMarginT: 'EBIT Margin Terminal',\n    taxRate: 'Tax Rate',\n    salesToCapital: 'Sales-to-Capital',\n    rf: 'Risk-Free Rate',\n    erp: 'Equity Risk Premium',\n    beta: 'Beta',\n    wd: 'Weight of Debt',\n    kd: 'Cost of Debt',\n    tg: 'Terminal Growth',\n    exitEVMultiple: 'Exit Multiple',\n    terminalMethod: 'Terminal Method',\n    price: 'Current Stock Price',\n    shares: 'Shares Outstanding',\n    netDebt: 'Net Debt',\n    cashAdjust: 'Cash Adjustment'\n  };\n\n  const fieldName = fieldNames[field] || field;\n\n  if (typeof oldValue === 'number' && typeof newValue === 'number') {\n    const change = newValue - oldValue;\n    const changeStr = change >= 0 ? `+${change.toFixed(4)}` : change.toFixed(4);\n    return `${fieldName}: ${oldValue.toFixed(4)} → ${newValue.toFixed(4)} (${changeStr})`;\n  }\n\n  return `${fieldName}: ${oldValue} → ${newValue}`;\n}\n\n// Audit trail hook for tracking assumption changes\nexport function useAuditTrail(assumptions, setAssumptions) {\n  const [auditLog, setAuditLog] = useState([]);\n  const [previousAssumptions, setPreviousAssumptions] = useState(assumptions);\n\n  const updateAssumptions = (newAssumptions) => {\n    const entries = [];\n\n    // Compare each field and create audit entries for changes\n    Object.keys(newAssumptions).forEach(field => {\n      const oldValue = previousAssumptions[field];\n      const newValue = newAssumptions[field];\n\n      if (oldValue !== newValue && field !== 'timestamp') {\n        entries.push(createAuditEntry(field, oldValue, newValue));\n      }\n    });\n\n    if (entries.length > 0) {\n      setAuditLog(prev => [...entries, ...prev]);\n    }\n\n    setPreviousAssumptions(newAssumptions);\n    setAssumptions(newAssumptions);\n  };\n\n  const clearAuditLog = () => setAuditLog([]);\n\n  const exportAuditLog = (format = 'json') => {\n    if (format === 'json') {\n      const blob = new Blob([JSON.stringify(auditLog, null, 2)], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `valuation-audit-log-${new Date().toISOString().split('T')[0]}.json`;\n      a.click();\n      URL.revokeObjectURL(url);\n    } else if (format === 'csv') {\n      const headers = ['Timestamp', 'Field', 'Old Value', 'New Value', 'User'];\n      const rows = auditLog.map(entry => [\n        entry.timestamp.toISOString(),\n        entry.field,\n        entry.oldValue,\n        entry.newValue,\n        entry.user\n      ]);\n\n      const csvContent = [headers, ...rows]\n        .map(row => row.map(cell => `\"${cell}\"`).join(','))\n        .join('\\n');\n\n      const blob = new Blob([csvContent], { type: 'text/csv' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `valuation-audit-log-${new Date().toISOString().split('T')[0]}.csv`;\n      a.click();\n      URL.revokeObjectURL(url);\n    }\n  };\n\n  return {\n    auditLog,\n    updateAssumptions,\n    clearAuditLog,\n    exportAuditLog\n  };\n}\n\n// Audit trail display component\nexport const AuditTrail = ({ auditLog, onClear, onExport }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n\n  if (!isExpanded) {\n    return (\n      <Card className=\"p-3\">\n        <div className=\"flex items-center justify-between\">\n          <button\n            onClick={() => setIsExpanded(true)}\n            className=\"text-left text-[13px] text-slate-600 hover:text-slate-800 transition-colors\"\n          >\n            📋 Audit Trail ({auditLog.length} changes)\n          </button>\n          {auditLog.length > 0 && (\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => onExport?.('json')}\n                className=\"px-2 py-1 text-[10px] bg-slate-100 hover:bg-slate-200 rounded text-slate-700\"\n              >\n                JSON\n              </button>\n              <button\n                onClick={() => onExport?.('csv')}\n                className=\"px-2 py-1 text-[10px] bg-slate-100 hover:bg-slate-200 rounded text-slate-700\"\n              >\n                CSV\n              </button>\n            </div>\n          )}\n        </div>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"p-4 space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-[14px] font-semibold text-slate-800\">Audit Trail</h3>\n        <div className=\"flex items-center gap-2\">\n          <button\n            onClick={() => setShowDetails(!showDetails)}\n            className=\"text-[11px] text-slate-600 hover:text-slate-800\"\n          >\n            {showDetails ? 'Simple' : 'Detailed'}\n          </button>\n          <button\n            onClick={() => setIsExpanded(false)}\n            className=\"text-[12px] text-slate-500 hover:text-slate-700\"\n          >\n            ✕\n          </button>\n        </div>\n      </div>\n\n      {auditLog.length === 0 ? (\n        <div className=\"text-[12px] text-slate-500 text-center py-4\">\n          No changes recorded yet\n        </div>\n      ) : (\n        <>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"text-[12px] text-slate-600\">\n              {auditLog.length} changes recorded\n            </div>\n            <div className=\"flex gap-2\">\n              <button\n                onClick={() => onExport?.('json')}\n                className=\"px-2 py-1 text-[11px] bg-slate-100 hover:bg-slate-200 rounded text-slate-700\"\n              >\n                Export JSON\n              </button>\n              <button\n                onClick={() => onExport?.('csv')}\n                className=\"px-2 py-1 text-[11px] bg-slate-100 hover:bg-slate-200 rounded text-slate-700\"\n              >\n                Export CSV\n              </button>\n              <button\n                onClick={onClear}\n                className=\"px-2 py-1 text-[11px] bg-rose-100 hover:bg-rose-200 rounded text-rose-700\"\n              >\n                Clear\n              </button>\n            </div>\n          </div>\n\n          <div className=\"max-h-60 overflow-y-auto space-y-2\">\n            {auditLog.map((entry, index) => (\n              <div key={entry.id} className=\"border-b border-slate-100 pb-2 last:border-b-0\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <div className=\"text-[12px] font-medium text-slate-800\">\n                      {showDetails ? entry.change : entry.field}\n                    </div>\n                    <div className=\"text-[11px] text-slate-600\">\n                      {entry.timestamp.toLocaleString()}\n                    </div>\n                  </div>\n                  <div className=\"text-[10px] text-slate-500\">\n                    #{auditLog.length - index}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </Card>\n  );\n};\n","import { useState } from 'react';\n\nimport { NumberInput, Card } from 'src/components/ui/UIHelpers.jsx';\n\n// Axis configuration for sensitivity analysis\nexport const AxisPicker = ({ onAxisChange, currentConfig }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [config, setConfig] = useState(currentConfig || {\n    wacc: { min: 0.06, max: 0.14, steps: 5 },\n    growth: { min: 0.015, max: 0.035, steps: 5 },\n    exitMultiple: { min: 8, max: 16, steps: 5 }\n  });\n\n  const updateConfig = (axis, field, value) => {\n    const newConfig = {\n      ...config,\n      [axis]: { ...config[axis], [field]: value }\n    };\n    setConfig(newConfig);\n    onAxisChange?.(newConfig);\n  };\n\n  const presets = {\n    conservative: {\n      wacc: { min: 0.08, max: 0.12, steps: 5 },\n      growth: { min: 0.02, max: 0.03, steps: 5 },\n      exitMultiple: { min: 10, max: 14, steps: 5 }\n    },\n    aggressive: {\n      wacc: { min: 0.06, max: 0.16, steps: 7 },\n      growth: { min: 0.01, max: 0.05, steps: 7 },\n      exitMultiple: { min: 6, max: 20, steps: 7 }\n    },\n    tight: {\n      wacc: { min: 0.075, max: 0.105, steps: 4 },\n      growth: { min: 0.02, max: 0.03, steps: 4 },\n      exitMultiple: { min: 10, max: 14, steps: 4 }\n    }\n  };\n\n  const applyPreset = (presetName) => {\n    const preset = presets[presetName];\n    setConfig(preset);\n    onAxisChange?.(preset);\n  };\n\n  if (!isExpanded) {\n    return (\n      <Card className=\"p-3\">\n        <button\n          onClick={() => setIsExpanded(true)}\n          className=\"w-full text-left text-[13px] text-slate-600 hover:text-slate-800 transition-colors\"\n        >\n          ⚙️ Customize Sensitivity Ranges\n        </button>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"p-4 space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-[14px] font-semibold text-slate-800\">Sensitivity Axis Configuration</h3>\n        <button\n          onClick={() => setIsExpanded(false)}\n          className=\"text-[12px] text-slate-500 hover:text-slate-700\"\n        >\n          ✕\n        </button>\n      </div>\n\n      {/* Quick Presets */}\n      <div className=\"space-y-2\">\n        <div className=\"text-[12px] font-medium text-slate-700\">Quick Presets</div>\n        <div className=\"flex gap-2\">\n          {Object.keys(presets).map(preset => (\n            <button\n              key={preset}\n              onClick={() => applyPreset(preset)}\n              className=\"px-3 py-1 text-[11px] font-medium bg-slate-100 hover:bg-slate-200 rounded-md transition-colors capitalize\"\n            >\n              {preset}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* WACC Range */}\n      <div className=\"space-y-2\">\n        <div className=\"text-[12px] font-medium text-slate-700\">WACC Range</div>\n        <div className=\"grid grid-cols-3 gap-2\">\n          <NumberInput\n            label=\"Min\"\n            value={config.wacc.min}\n            onChange={(val) => updateConfig('wacc', 'min', val)}\n            step={0.005}\n            min={0.01}\n            max={0.5}\n            format=\"percent\"\n            placeholder=\"6%\"\n          />\n          <NumberInput\n            label=\"Max\"\n            value={config.wacc.max}\n            onChange={(val) => updateConfig('wacc', 'max', val)}\n            step={0.005}\n            min={0.01}\n            max={0.5}\n            format=\"percent\"\n            placeholder=\"14%\"\n          />\n          <NumberInput\n            label=\"Steps\"\n            value={config.wacc.steps}\n            onChange={(val) => updateConfig('wacc', 'steps', val)}\n            step={1}\n            min={3}\n            max={10}\n            format=\"integer\"\n            placeholder=\"5\"\n          />\n        </div>\n      </div>\n\n      {/* Growth Range */}\n      <div className=\"space-y-2\">\n        <div className=\"text-[12px] font-medium text-slate-700\">Terminal Growth Range</div>\n        <div className=\"grid grid-cols-3 gap-2\">\n          <NumberInput\n            label=\"Min\"\n            value={config.growth.min}\n            onChange={(val) => updateConfig('growth', 'min', val)}\n            step={0.0025}\n            min={-0.02}\n            max={0.1}\n            format=\"percent\"\n            placeholder=\"1.5%\"\n          />\n          <NumberInput\n            label=\"Max\"\n            value={config.growth.max}\n            onChange={(val) => updateConfig('growth', 'max', val)}\n            step={0.0025}\n            min={-0.02}\n            max={0.1}\n            format=\"percent\"\n            placeholder=\"3.5%\"\n          />\n          <NumberInput\n            label=\"Steps\"\n            value={config.growth.steps}\n            onChange={(val) => updateConfig('growth', 'steps', val)}\n            step={1}\n            min={3}\n            max={10}\n            format=\"integer\"\n            placeholder=\"5\"\n          />\n        </div>\n      </div>\n\n      {/* Exit Multiple Range */}\n      <div className=\"space-y-2\">\n        <div className=\"text-[12px] font-medium text-slate-700\">Exit Multiple Range</div>\n        <div className=\"grid grid-cols-3 gap-2\">\n          <NumberInput\n            label=\"Min\"\n            value={config.exitMultiple.min}\n            onChange={(val) => updateConfig('exitMultiple', 'min', val)}\n            step={0.5}\n            min={1}\n            max={50}\n            format=\"number\"\n            placeholder=\"8x\"\n          />\n          <NumberInput\n            label=\"Max\"\n            value={config.exitMultiple.max}\n            onChange={(val) => updateConfig('exitMultiple', 'max', val)}\n            step={0.5}\n            min={1}\n            max={50}\n            format=\"number\"\n            placeholder=\"16x\"\n          />\n          <NumberInput\n            label=\"Steps\"\n            value={config.exitMultiple.steps}\n            onChange={(val) => updateConfig('exitMultiple', 'steps', val)}\n            step={1}\n            min={3}\n            max={10}\n            format=\"integer\"\n            placeholder=\"5\"\n          />\n        </div>\n      </div>\n\n      {/* Current Ranges Preview */}\n      <div className=\"pt-2 border-t border-slate-200\">\n        <div className=\"text-[11px] text-slate-600 space-y-1\">\n          <div>WACC: {(config.wacc.min * 100).toFixed(1)}% → {(config.wacc.max * 100).toFixed(1)}% ({config.wacc.steps} steps)</div>\n          <div>Growth: {(config.growth.min * 100).toFixed(1)}% → {(config.growth.max * 100).toFixed(1)}% ({config.growth.steps} steps)</div>\n          <div>Exit Multiple: {config.exitMultiple.min.toFixed(1)}x → {config.exitMultiple.max.toFixed(1)}x ({config.exitMultiple.steps} steps)</div>\n        </div>\n      </div>\n    </Card>\n  );\n};\n","// Valuation Workbench - Core utilities and mathematical functions\n// Formatting utilities\nexport const Num = new Intl.NumberFormat(undefined, { maximumFractionDigits: 2 });\nexport const Cur = (x, c = 0) => (x >= 1e9 ? `$${(x / 1e9).toFixed(c)}B` : x >= 1e6 ? `$${(x / 1e6).toFixed(c)}M` : `$${x.toFixed(c)}`);\nexport const Pct = (x, d = 1) => `${(100 * x).toFixed(d)}%`;\nexport const clamp = (x, a, b) => Math.max(a, Math.min(b, x));\n\n// Core valuation math functions\nexport function wacc(assumptions) {\n  const ke = assumptions.capmMode === 'capm'\n    ? (assumptions.rf + assumptions.beta * assumptions.erp)\n    : assumptions.keManual;\n  return assumptions.wd * assumptions.kd * (1 - assumptions.taxRate) + assumptions.we * ke;\n}\n\nexport function project(assumptions, growthPath) {\n  const rows = [];\n  let rev = assumptions.rev0;\n  const years = assumptions.years;\n\n  for (let y = 1; y <= years; y++) {\n    const g = growthPath[Math.min(y - 1, growthPath.length - 1)] || 0;\n    const revPrev = rev;\n    rev = rev * (1 + g);\n\n    // margin glide: linear from ebitMargin0 → ebitMarginT over growthYears, then flat\n    const t = clamp((y - 1) / Math.max(1, assumptions.growthYears - 1), 0, 1);\n    const ebitMargin = assumptions.ebitMargin0 * (1 - t) + assumptions.ebitMarginT * t;\n    const ebit = rev * ebitMargin;\n    const nopat = ebit * (1 - assumptions.taxRate);\n\n    let reinvest = 0, dep = rev * assumptions.depPctSales, capex = rev * assumptions.capexPctSales, dNWC = (rev - revPrev) * assumptions.nwcPctSales;\n\n    if (assumptions.reinvMethod === 'salesToCapital') {\n      const deltaSales = rev - revPrev;\n      const reinvSales = deltaSales / (assumptions.salesToCapital || 1e-9);\n      reinvest = Math.max(0, reinvSales);\n      // Treat reinvestment as inclusive of ΔNWC; for display, infer components proportionally\n      dNWC = Math.max(0, (rev - revPrev) * assumptions.nwcPctSales);\n      const capMaint = Math.max(0, reinvest - dNWC);\n      capex = capMaint + dep; // simple split\n      dep = rev * assumptions.depPctSales;\n    } else {\n      reinvest = Math.max(0, capex - dep + dNWC); // components method: Reinv = (Capex - D&A) + ΔNWC\n    }\n\n    const fcff = nopat - reinvest;\n    const metricForExit = (assumptions.exitMetric === 'EBITDA') ? (ebit + dep) : ebit;\n\n    rows.push({\n      year: y,\n      revenue: rev,\n      ebitMargin,\n      ebit,\n      nopat,\n      reinvest,\n      fcff,\n      dep,\n      capex,\n      dNWC,\n      metricForExit\n    });\n  }\n  return rows;\n}\n\nexport function terminalValue(assumptions, rows, disc) {\n  const last = rows[rows.length - 1];\n  if (assumptions.terminalMethod === 'gordon') {\n    const fcf1 = last.fcff * (1 + assumptions.tg);\n    const tv = fcf1 / (disc - assumptions.tg);\n    return { tv, basis: 'FCFF', label: 'Gordon: FCFFₙ₊₁/(WACC−g)' };\n  } else {\n    const tv = last.metricForExit * assumptions.exitEVMultiple;\n    const label = `Exit ${assumptions.exitMetric}×`;\n    return { tv, basis: assumptions.exitMetric, label };\n  }\n}\n\nexport function discount(rows, disc) {\n  let pv = 0;\n  const pvSeries = [];\n  for (let i = 0; i < rows.length; i++) {\n    const t = i + 1;\n    const p = rows[i].fcff / ((1 + disc) ** t);\n    pv += p;\n    pvSeries.push(p);\n  }\n  return { pv, pvSeries };\n}\n\nexport function valueEquity(assumptions, rows) {\n  const disc = wacc(assumptions);\n  const { pv } = discount(rows, disc);\n  const { tv } = terminalValue(assumptions, rows, disc);\n  const pvTV = tv / ((1 + disc) ** rows.length);\n\n  const ev = pv + pvTV;\n  const equity = ev - assumptions.netDebt - assumptions.minorityInterest + assumptions.cashAdjust;\n  const perShare = equity / (assumptions.shares || 1e-9);\n  const mos = (perShare - assumptions.price) / (assumptions.price || 1e-9);\n\n  return { ev, pvTV, pvFCFF: pv, tv, equity, perShare, mos };\n}\n\n// Build growth vector: first growthYears use gMid, then fade to 0 by Year 10 unless user specifies\nexport function growthVector(gStart, years, fadeAfter) {\n  const v = [];\n  for (let y = 1; y <= years; y++) {\n    const t = y <= fadeAfter ? 1 : Math.max(0, 1 - (y - fadeAfter) / (years - fadeAfter));\n    v.push(gStart * t);\n  }\n  return v;\n}\n","import React from 'react';\n\nimport { wacc } from '../../utils/valuationUtils';\n\n// Error validation and user guidance system\nexport function validateAssumptions(assumptions) {\n  const errors = [];\n  const warnings = [];\n  const disc = wacc(assumptions);\n\n  // Critical errors that prevent valuation\n  if (assumptions.terminalMethod === 'gordon' && disc <= assumptions.tg) {\n    errors.push({\n      type: 'gordon_constraint',\n      message: 'WACC ≤ Terminal Growth Rate',\n      guidance: `WACC (${(disc * 100).toFixed(1)}%) must exceed terminal growth (${(assumptions.tg * 100).toFixed(1)}%). Try lowering terminal growth or increasing WACC components.`,\n      severity: 'critical'\n    });\n  }\n\n  if (assumptions.shares <= 0) {\n    errors.push({\n      type: 'shares_invalid',\n      message: 'Invalid Share Count',\n      guidance: 'Shares outstanding must be positive to calculate per-share value.',\n      severity: 'critical'\n    });\n  }\n\n  if (assumptions.price <= 0) {\n    warnings.push({\n      type: 'price_zero',\n      message: 'Zero Stock Price',\n      guidance: 'Margin of Safety calculation may be unreliable with zero price.',\n      severity: 'warning'\n    });\n  }\n\n  // Business logic warnings\n  if (assumptions.salesToCapital < 0.5) {\n    warnings.push({\n      type: 'low_stc',\n      message: 'Very Low Sales-to-Capital',\n      guidance: `Sales-to-Capital of ${assumptions.salesToCapital.toFixed(1)}x implies very high reinvestment needs. Consider if this is realistic.`,\n      severity: 'warning'\n    });\n  }\n\n  if (assumptions.ebitMarginT > 0.4) {\n    warnings.push({\n      type: 'high_margin',\n      message: 'Very High Terminal Margin',\n      guidance: `Terminal EBIT margin of ${(assumptions.ebitMarginT * 100).toFixed(1)}% is unusually high. Verify competitive sustainability.`,\n      severity: 'warning'\n    });\n  }\n\n  // Terminal value sanity checks\n  if (assumptions.terminalMethod === 'exitMultiple' && assumptions.exitEVMultiple > 20) {\n    warnings.push({\n      type: 'high_multiple',\n      message: 'High Exit Multiple',\n      guidance: `Exit multiple of ${assumptions.exitEVMultiple.toFixed(1)}x may produce unrealistic terminal values.`,\n      severity: 'warning'\n    });\n  }\n\n  if (assumptions.rf < 0) {\n    warnings.push({\n      type: 'negative_rf',\n      message: 'Negative Risk-Free Rate',\n      guidance: 'Negative risk-free rates can create unusual WACC dynamics. Verify your rate source.',\n      severity: 'warning'\n    });\n  }\n\n  return { errors, warnings, isValid: errors.length === 0 };\n}\n\nexport const ErrorDisplay = ({ validation }) => {\n  if (!validation || (validation.errors.length === 0 && validation.warnings.length === 0)) {\n    return null;\n  }\n\n  return (\n    <div className=\"space-y-2\">\n      {validation.errors.map((error, index) => (\n        <div key={`error-${index}`} className=\"rounded-lg border border-rose-200 bg-rose-50 p-3\">\n          <div className=\"flex items-start gap-2\">\n            <div className=\"mt-0.5 h-4 w-4 rounded-full bg-rose-500 flex items-center justify-center\">\n              <span className=\"text-white text-[10px] font-bold\">!</span>\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"text-[13px] font-semibold text-rose-800\">{error.message}</div>\n              <div className=\"text-[12px] text-rose-700 mt-1\">{error.guidance}</div>\n            </div>\n          </div>\n        </div>\n      ))}\n\n      {validation.warnings.map((warning, index) => (\n        <div key={`warning-${index}`} className=\"rounded-lg border border-amber-200 bg-amber-50 p-3\">\n          <div className=\"flex items-start gap-2\">\n            <div className=\"mt-0.5 h-4 w-4 rounded-full bg-amber-500 flex items-center justify-center\">\n              <span className=\"text-white text-[10px] font-bold\">?</span>\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"text-[13px] font-semibold text-amber-800\">{warning.message}</div>\n              <div className=\"text-[12px] text-amber-700 mt-1\">{warning.guidance}</div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { project, valueEquity, growthVector, clamp } from '../../utils/valuationUtils';\n\n// Histogram component for Monte Carlo results\nexport const Histogram = ({ data }) => {\n  const bins = 24;\n  if (data.length === 0) return null;\n\n  const lo = data[0], hi = data[data.length - 1];\n  const step = (hi - lo) / (bins || 1);\n  const counts = new Array(bins).fill(0);\n\n  for (const v of data) {\n    const i = Math.min(bins - 1, Math.max(0, Math.floor((v - lo) / (step || 1))));\n    counts[i]++;\n  }\n\n  const maxC = Math.max(...counts, 1);\n\n  return (\n    <svg width={360} height={160} className=\"text-slate-600\">\n      {counts.map((c, i) => {\n        const x = 10 + (i * (340 / bins));\n        const h = (140) * (c / maxC);\n        return (\n          <rect\n            key={i}\n            x={x}\n            y={150 - h}\n            width={340 / bins - 2}\n            height={h}\n            fill=\"#60a5fa\"\n          />\n        );\n      })}\n    </svg>\n  );\n};\n\n// Triangular distribution random number generator\nfunction triRand(t) {\n  const u = Math.random();\n  const c = (t.mid - t.min) / (t.max - t.min + 1e-9);\n  if (u < c) {\n    return t.min + Math.sqrt(u * (t.max - t.min) * (t.mid - t.min));\n  }\n  return t.max - Math.sqrt((1 - u) * (t.max - t.min) * (t.max - t.mid));\n}\n\n// Monte Carlo simulation function\nexport function runMonteCarlo(assumptions, priors, n = 1000) {\n  const vals = [];\n\n  for (let i = 0; i < n; i++) {\n    const aa = { ...assumptions };\n    const g = triRand(priors.g);\n    const path = growthVector(g, aa.years, aa.growthYears);\n    aa.ebitMarginT = clamp(triRand(priors.marginT), 0, 0.6);\n\n    // WACC shift: apply to rf (capm) or keManual\n    const wShift = triRand(priors.waccShifter);\n    if (aa.capmMode === 'capm') {\n      aa.rf = Math.max(0, aa.rf + wShift);\n    } else {\n      aa.keManual = Math.max(0.01, aa.keManual + wShift);\n    }\n\n    aa.salesToCapital = Math.max(0.2, triRand(priors.stc));\n\n    if (aa.terminalMethod === 'gordon') {\n      aa.tg = clamp(triRand(priors.tgOrExit), -0.01, 0.05);\n    } else {\n      aa.exitEVMultiple = Math.max(2, triRand(priors.tgOrExit));\n    }\n\n    const rows = project(aa, path);\n    vals.push(valueEquity(aa, rows).perShare);\n  }\n\n  vals.sort((x, y) => x - y);\n  const p = (q) => vals[Math.max(0, Math.min(vals.length - 1, Math.floor(q * (vals.length - 1))))];\n\n  return {\n    vals,\n    p5: p(0.05),\n    p50: p(0.50),\n    p95: p(0.95)\n  };\n}\n\n// Generate default priors for Monte Carlo\nexport function generatePriors(assumptions) {\n  return {\n    g: { min: 0.02, mid: 0.05, max: 0.08 },\n    marginT: {\n      min: assumptions.ebitMargin0,\n      mid: assumptions.ebitMarginT,\n      max: Math.max(assumptions.ebitMarginT + 0.05, 0.25)\n    },\n    waccShifter: { min: -0.01, mid: 0, max: 0.01 },\n    stc: { min: 1.5, mid: assumptions.salesToCapital, max: 3.5 },\n    tgOrExit: assumptions.terminalMethod === 'gordon'\n      ? { min: 0.00, mid: assumptions.tg, max: 0.04 }\n      : { min: 6, mid: assumptions.exitEVMultiple, max: 12 }\n  };\n}\n","import React from 'react';\n\nimport { Cur, Pct } from '../../utils/valuationUtils';\n\nconst ProjectionsTable = ({ rows, currency }) => {\n  return (\n    <div className=\"overflow-auto rounded-xl border border-slate-200\">\n      <table className=\"min-w-[720px] text-right text-[12px]\">\n        <thead className=\"bg-slate-50 text-slate-600\">\n          <tr>\n            <th className=\"px-2 py-1 text-left\">Year</th>\n            <th className=\"px-2 py-1\">Revenue</th>\n            <th className=\"px-2 py-1\">EBIT%</th>\n            <th className=\"px-2 py-1\">EBIT</th>\n            <th className=\"px-2 py-1\">NOPAT</th>\n            <th className=\"px-2 py-1\">Reinvest</th>\n            <th className=\"px-2 py-1\">FCFF</th>\n            <th className=\"px-2 py-1\">D&A</th>\n            <th className=\"px-2 py-1\">Capex</th>\n            <th className=\"px-2 py-1\">ΔNWC</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map(r => (\n            <tr key={r.year} className=\"odd:bg-white even:bg-slate-50/40\">\n              <td className=\"px-2 py-1 text-left\">{r.year}</td>\n              <td className=\"px-2 py-1\">{Cur(r.revenue, 0)}</td>\n              <td className=\"px-2 py-1\">{Pct(r.ebitMargin, 1)}</td>\n              <td className=\"px-2 py-1\">{Cur(r.ebit, 0)}</td>\n              <td className=\"px-2 py-1\">{Cur(r.nopat, 0)}</td>\n              <td className=\"px-2 py-1\">{Cur(r.reinvest, 0)}</td>\n              <td className=\"px-2 py-1 font-semibold\">{Cur(r.fcff, 0)}</td>\n              <td className=\"px-2 py-1\">{Cur(r.dep, 0)}</td>\n              <td className=\"px-2 py-1\">{Cur(r.capex, 0)}</td>\n              <td className=\"px-2 py-1\">{Cur(r.dNWC, 0)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ProjectionsTable;\n","import { useState } from 'react';\n\nimport { Card, NumberInput, Switch } from 'src/components/ui/UIHelpers.jsx';\n\nimport { project, valueEquity, growthVector, wacc } from '../../utils/valuationUtils';\n\n// Solver functions for reverse DCF\nfunction solveForImpliedGrowth(assumptions, targetPrice, tolerance = 1e-6, maxIterations = 100) {\n  let low = -0.05, high = 0.20;\n  let iteration = 0;\n\n  while (Math.abs(high - low) > tolerance && iteration < maxIterations) {\n    const mid = (low + high) / 2;\n    const testAssumptions = { ...assumptions, tg: mid, terminalMethod: 'gordon' };\n    const growth = growthVector(0.05, testAssumptions.years, testAssumptions.growthYears);\n    const rows = project(testAssumptions, growth);\n    const valuation = valueEquity(testAssumptions, rows);\n\n    if (valuation.perShare > targetPrice) {\n      high = mid;\n    } else {\n      low = mid;\n    }\n    iteration++;\n  }\n\n  return (low + high) / 2;\n}\n\nfunction solveForImpliedWACC(assumptions, targetPrice, tolerance = 1e-6, maxIterations = 100) {\n  let low = 0.01, high = 0.30;\n  let iteration = 0;\n\n  while (Math.abs(high - low) > tolerance && iteration < maxIterations) {\n    const mid = (low + high) / 2;\n    const testAssumptions = { ...assumptions, capmMode: 'manualKe', keManual: mid };\n    const growth = growthVector(0.05, testAssumptions.years, testAssumptions.growthYears);\n    const rows = project(testAssumptions, growth);\n    const valuation = valueEquity(testAssumptions, rows);\n\n    if (valuation.perShare > targetPrice) {\n      low = mid;\n    } else {\n      high = mid;\n    }\n    iteration++;\n  }\n\n  return (low + high) / 2;\n}\n\nfunction solveForImpliedMargin(assumptions, targetPrice, tolerance = 1e-6, maxIterations = 100) {\n  let low = 0.01, high = 0.50;\n  let iteration = 0;\n\n  while (Math.abs(high - low) > tolerance && iteration < maxIterations) {\n    const mid = (low + high) / 2;\n    const testAssumptions = { ...assumptions, ebitMarginT: mid };\n    const growth = growthVector(0.05, testAssumptions.years, testAssumptions.growthYears);\n    const rows = project(testAssumptions, growth);\n    const valuation = valueEquity(testAssumptions, rows);\n\n    if (valuation.perShare > targetPrice) {\n      high = mid;\n    } else {\n      low = mid;\n    }\n    iteration++;\n  }\n\n  return (low + high) / 2;\n}\n\nfunction calculateTargetPrice(assumptions, targetMOS) {\n  return assumptions.price * (1 + targetMOS);\n}\n\nconst ReverseDCF = ({ assumptions, setAssumptions, currentValuation }) => {\n  const [targetPrice, setTargetPrice] = useState(assumptions.price * 1.25);\n  const [targetMOS, setTargetMOS] = useState(0.25);\n  const [solveFor, setSolveFor] = useState('growth');\n  const [results, setResults] = useState(null);\n\n  const runReverseDCF = () => {\n    try {\n      let impliedValue, label, currentValue;\n\n      switch (solveFor) {\n        case 'growth':\n          impliedValue = solveForImpliedGrowth(assumptions, targetPrice);\n          label = 'Implied Terminal Growth';\n          currentValue = assumptions.tg;\n          break;\n        case 'wacc':\n          impliedValue = solveForImpliedWACC(assumptions, targetPrice);\n          label = 'Implied WACC (Ke)';\n          currentValue = wacc(assumptions);\n          break;\n        case 'margin':\n          impliedValue = solveForImpliedMargin(assumptions, targetPrice);\n          label = 'Implied Terminal Margin';\n          currentValue = assumptions.ebitMarginT;\n          break;\n        case 'targetPrice':\n          impliedValue = calculateTargetPrice(assumptions, targetMOS);\n          label = 'Target Price for MOS';\n          currentValue = assumptions.price;\n          break;\n        default:\n          return;\n      }\n\n      setResults({ impliedValue, label, currentValue });\n    } catch (error) {\n      console.error('Reverse DCF solver error:', error);\n      setResults({ error: 'Unable to solve - check assumptions' });\n    }\n  };\n\n  const applyImpliedValue = () => {\n    if (!results || results.error || solveFor === 'targetPrice') return;\n\n    const newAssumptions = { ...assumptions };\n\n    switch (solveFor) {\n      case 'growth':\n        newAssumptions.tg = results.impliedValue;\n        newAssumptions.terminalMethod = 'gordon';\n        break;\n      case 'wacc':\n        newAssumptions.keManual = results.impliedValue;\n        newAssumptions.capmMode = 'manualKe';\n        break;\n      case 'margin':\n        newAssumptions.ebitMarginT = results.impliedValue;\n        break;\n    }\n\n    setAssumptions(newAssumptions);\n  };\n\n  const formatValue = (value, type) => {\n    if (type === 'targetPrice') return `$${value.toFixed(2)}`;\n    return `${(100 * value).toFixed(2)}%`;\n  };\n\n  return (\n    <Card title=\"Reverse DCF / Implied Expectations\">\n      <div className=\"space-y-4\">\n        {/* Target Price Input */}\n        <div className=\"grid grid-cols-2 gap-3\">\n          <NumberInput\n            label=\"Target Price\"\n            value={targetPrice}\n            onChange={setTargetPrice}\n            suffix={assumptions.currency}\n            step={0.01}\n            min={0.01}\n          />\n          <NumberInput\n            label=\"Target MOS\"\n            value={targetMOS}\n            onChange={setTargetMOS}\n            suffix=\"ratio\"\n            step={0.01}\n            min={-0.50}\n            max={2.00}\n          />\n        </div>\n\n        {/* Solve For Selection */}\n        <div className=\"space-y-2\">\n          <div className=\"text-[12px] font-semibold text-slate-700\">Solve For:</div>\n          <div className=\"grid grid-cols-2 gap-2\">\n            {[\n              { value: 'growth', label: 'Terminal Growth' },\n              { value: 'wacc', label: 'WACC (Ke)' },\n              { value: 'margin', label: 'Terminal Margin' },\n              { value: 'targetPrice', label: 'Price for MOS' }\n            ].map(option => (\n              <button\n                key={option.value}\n                onClick={() => setSolveFor(option.value)}\n                className={`px-3 py-2 text-[12px] rounded-md border transition-colors ${\n                  solveFor === option.value\n                    ? 'bg-blue-500 text-white border-blue-500'\n                    : 'bg-white text-slate-600 border-slate-300 hover:bg-slate-50'\n                }`}\n              >\n                {option.label}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Solve Button */}\n        <button\n          onClick={runReverseDCF}\n          className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n        >\n          Solve Reverse DCF\n        </button>\n\n        {/* Results */}\n        {results && (\n          <div className=\"rounded-lg border border-slate-200 p-3\">\n            {results.error ? (\n              <div className=\"text-rose-600 text-[12px]\">{results.error}</div>\n            ) : (\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between text-[13px]\">\n                  <span className=\"text-slate-600\">{results.label}</span>\n                  <span className=\"font-mono font-semibold text-blue-600\">\n                    {formatValue(results.impliedValue, solveFor)}\n                  </span>\n                </div>\n\n                {solveFor !== 'targetPrice' && (\n                  <>\n                    <div className=\"flex items-center justify-between text-[12px] text-slate-500\">\n                      <span>Current Value</span>\n                      <span className=\"font-mono\">\n                        {formatValue(results.currentValue, solveFor)}\n                      </span>\n                    </div>\n\n                    <div className=\"flex items-center justify-between text-[12px] text-slate-500\">\n                      <span>Difference</span>\n                      <span\n                        className={`font-mono ${\n                          results.impliedValue > results.currentValue\n                            ? 'text-emerald-600'\n                            : 'text-rose-600'\n                        }`}\n                      >\n                        {results.impliedValue > results.currentValue ? '+' : ''}\n                        {formatValue(results.impliedValue - results.currentValue, solveFor)}\n                      </span>\n                    </div>\n\n                    <button\n                      onClick={applyImpliedValue}\n                      className=\"w-full mt-2 px-3 py-1 bg-emerald-500 text-white text-[12px] rounded-md hover:bg-emerald-600 transition-colors\"\n                    >\n                      Apply to Assumptions\n                    </button>\n                  </>\n                )}\n\n                {solveFor === 'targetPrice' && (\n                  <div className=\"text-[11px] text-slate-500\">\n                    Price needed for {(targetMOS * 100).toFixed(1)}% margin of safety\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n\n        <div className=\"text-[11px] text-slate-500\">\n          Solves for the implied value that makes DCF per-share equal target price,\n          or calculates target price for desired margin of safety.\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ReverseDCF;\n","import { Card } from 'src/components/ui/UIHelpers.jsx';\n\nconst ScenarioLibrary = ({ scenarios, setScenarios, assumptions, setAssumptions, rows, valuation }) => {\n  const save = () => {\n    const id = Math.random().toString(36).slice(2);\n    const scenario = {\n      id,\n      name: `${assumptions.name} • ${new Date().toISOString().slice(0, 10)}`,\n      assumptions: { ...assumptions },\n      created: new Date().toISOString()\n    };\n    setScenarios([scenario, ...scenarios].slice(0, 10));\n  };\n\n  const load = (scenario) => setAssumptions({ ...scenario.assumptions });\n\n  const del = (id) => setScenarios(scenarios.filter(x => x.id !== id));\n\n  const exportCSV = () => {\n    const head = 'year,revenue,ebit%,ebit,nopat,reinvest,fcff,dep,capex,dnwc\\n';\n    const body = rows.map(r =>\n      `${r.year},${r.revenue.toFixed(2)},${(100 * r.ebitMargin).toFixed(2)}%,${r.ebit.toFixed(2)},${r.nopat.toFixed(2)},${r.reinvest.toFixed(2)},${r.fcff.toFixed(2)},${r.dep.toFixed(2)},${r.capex.toFixed(2)},${r.dNWC.toFixed(2)}`\n    ).join('\\n');\n    const foot = `\\nEV,${valuation.ev.toFixed(2)}\\nEquity,${valuation.equity.toFixed(2)}\\nPerShare,${valuation.perShare.toFixed(2)}\\n`;\n\n    const blob = new Blob([head + body + foot], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const aEl = document.createElement('a');\n    aEl.href = url;\n    aEl.download = 'valuation.csv';\n    aEl.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const exportJSON = () => {\n    const blob = new Blob([JSON.stringify({ scenarios }, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const aEl = document.createElement('a');\n    aEl.href = url;\n    aEl.download = 'scenarios.json';\n    aEl.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const importJSON = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const data = JSON.parse(e.target.result);\n        if (data.scenarios && Array.isArray(data.scenarios)) {\n          // Merge imported scenarios with existing ones, avoiding duplicates\n          const existingIds = new Set(scenarios.map(s => s.id));\n          const newScenarios = data.scenarios.filter(s => !existingIds.has(s.id));\n          setScenarios([...newScenarios, ...scenarios].slice(0, 20)); // Keep max 20 scenarios\n        }\n      } catch (error) {\n        console.error('Failed to import JSON:', error);\n        alert('Invalid JSON file format');\n      }\n    };\n    reader.readAsText(file);\n    // Reset file input\n    event.target.value = '';\n  };\n\n  return (\n    <Card\n      title=\"Scenario Library\"\n      right={\n        <button\n          onClick={save}\n          className=\"rounded-md border border-slate-200 bg-white px-2 py-1 text-[12px] hover:bg-slate-50\"\n        >\n          Save Current\n        </button>\n      }\n    >\n      <div className=\"flex items-center justify-between text-[12px] mb-2\">\n        <div className=\"text-slate-600\">{scenarios.length} saved</div>\n        <div className=\"flex items-center gap-2\">\n          <button\n            onClick={exportCSV}\n            className=\"rounded-md border border-slate-200 bg-white px-2 py-1 hover:bg-slate-50\"\n          >\n            Export CSV\n          </button>\n          <button\n            onClick={exportJSON}\n            className=\"rounded-md border border-slate-200 bg-white px-2 py-1 hover:bg-slate-50\"\n          >\n            Export JSON\n          </button>\n          <label className=\"rounded-md border border-slate-200 bg-white px-2 py-1 hover:bg-slate-50 cursor-pointer\">\n            Import JSON\n            <input\n              type=\"file\"\n              accept=\".json\"\n              onChange={importJSON}\n              className=\"hidden\"\n            />\n          </label>\n        </div>\n      </div>\n      <ul className=\"space-y-1 text-[12px]\">\n        {scenarios.map(s => (\n          <li key={s.id} className=\"flex items-center justify-between rounded border border-slate-200 px-2 py-1\">\n            <div className=\"flex flex-col\">\n              <span className=\"font-medium text-slate-800\">{s.name}</span>\n              <span className=\"text-slate-500\">{new Date(s.created).toLocaleString()}</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                onClick={() => load(s)}\n                className=\"rounded-md border border-slate-200 bg-white px-2 py-1 hover:bg-slate-50\"\n              >\n                Load\n              </button>\n              <button\n                onClick={() => del(s.id)}\n                className=\"text-rose-600 hover:text-rose-800\"\n              >\n                Delete\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default ScenarioLibrary;\n","import React from 'react';\n\nimport { project, valueEquity, growthVector } from '../../utils/valuationUtils';\n\n// Heatmap component for visualizing sensitivity analysis\nexport const Heatmap = ({ grid, xLabels, yLabels }) => {\n  const vMin = Math.min(...grid.flat());\n  const vMax = Math.max(...grid.flat());\n\n  const color = (v) => {\n    const t = (v - vMin) / (vMax - vMin + 1e-9);\n    const h = 220 - 220 * t;\n    return `hsl(${h} 80% 55%)`;\n  };\n\n  return (\n    <div className=\"overflow-hidden rounded-xl border border-slate-200\">\n      <div className=\"grid\" style={{ gridTemplateColumns: `auto repeat(${xLabels.length}, minmax(0,1fr))` }}>\n        <div className=\"bg-slate-50 px-2 py-1 text-[11px] text-slate-600\" />\n        {xLabels.map((x, i) => (\n          <div key={i} className=\"bg-slate-50 px-2 py-1 text-center text-[11px] text-slate-600\">\n            {x}\n          </div>\n        ))}\n        {yLabels.map((y, ri) => (\n          <React.Fragment key={ri}>\n            <div className=\"bg-slate-50 px-2 py-1 text-[11px] text-slate-600\">{y}</div>\n            {grid[ri].map((v, ci) => (\n              <div\n                key={ci}\n                className=\"h-7 text-center text-[11px] flex items-center justify-center text-white font-medium\"\n                style={{ background: color(v) }}\n              >\n                {v.toFixed(2)}\n              </div>\n            ))}\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Helper to generate range arrays\nfunction generateRange(min, max, steps) {\n  if (steps === 1) return [min];\n  const step = (max - min) / (steps - 1);\n  return Array.from({ length: steps }, (_, i) => min + i * step);\n}\n\n// Function to generate heatmap data for sensitivity analysis\nexport function generateHeatmap(assumptions, waccVals, termVals, termIsGrowth) {\n  const grid = [];\n\n  for (let i = 0; i < waccVals.length; i++) {\n    const row = [];\n    for (let j = 0; j < termVals.length; j++) {\n      const aa = { ...assumptions };\n      const growth = growthVector(\n        aa.growthYears > 0 ? (aa.ebitMarginT > aa.ebitMargin0 ? 0.06 : 0.03) : 0,\n        aa.years,\n        aa.growthYears\n      );\n\n      if (termIsGrowth) {\n        aa.terminalMethod = 'gordon';\n        aa.tg = termVals[j];\n      } else {\n        aa.terminalMethod = 'exitMultiple';\n        aa.exitEVMultiple = termVals[j];\n      }\n\n      // Force wacc for the run by overriding keManual to hit target\n      const ke = aa.capmMode === 'capm' ? (aa.rf + aa.beta * aa.erp) : aa.keManual;\n      const curW = aa.wd * aa.kd * (1 - aa.taxRate) + aa.we * ke;\n      const deltaKe = (waccVals[i] - (aa.wd * aa.kd * (1 - aa.taxRate))) / (aa.we || 1e-9);\n      aa.capmMode = 'manualKe';\n      aa.keManual = deltaKe;\n\n      const rows = project(aa, growth);\n      const val = valueEquity(aa, rows).perShare;\n      row.push(val);\n    }\n    grid.push(row);\n  }\n  return grid;\n}\n\n// Enhanced heatmap generation with custom axis configuration\nexport function generateHeatmapsWithConfig(assumptions, axisConfig = null) {\n  const config = axisConfig || {\n    wacc: { min: 0.06, max: 0.14, steps: 5 },\n    growth: { min: 0.015, max: 0.035, steps: 5 },\n    exitMultiple: { min: 8, max: 16, steps: 5 }\n  };\n\n  const waccVals = generateRange(config.wacc.min, config.wacc.max, config.wacc.steps);\n  const growthVals = generateRange(config.growth.min, config.growth.max, config.growth.steps);\n  const exitMultipleVals = generateRange(config.exitMultiple.min, config.exitMultiple.max, config.exitMultiple.steps);\n\n  return {\n    waccGrowth: {\n      grid: generateHeatmap(assumptions, waccVals, growthVals, true),\n      xLabels: growthVals.map(g => (g * 100).toFixed(1) + '%'),\n      yLabels: waccVals.map(w => (w * 100).toFixed(1) + '%'),\n      title: 'WACC × Terminal Growth'\n    },\n    waccExit: {\n      grid: generateHeatmap(assumptions, waccVals, exitMultipleVals, false),\n      xLabels: exitMultipleVals.map(m => m.toFixed(1) + 'x'),\n      yLabels: waccVals.map(w => (w * 100).toFixed(1) + '%'),\n      title: 'WACC × Exit Multiple'\n    }\n  };\n}\n","import { Card } from 'src/components/ui/UIHelpers.jsx';\n\nimport { wacc, terminalValue, project, valueEquity, growthVector } from '../../utils/valuationUtils';\n\nexport function runTests(assumptions, rows, valuation) {\n  const tests = [];\n  const disc = wacc(assumptions);\n\n  // Identity: EV ≈ PV(FCFF)+PV(TV)\n  const pvFCFF = rows.reduce((acc, r, i) => acc + r.fcff / ((1 + disc) ** (i + 1)), 0);\n  const tv = terminalValue(assumptions, rows, disc).tv;\n  const pvTV = tv / ((1 + disc) ** rows.length);\n  tests.push({\n    name: 'EV identity (PV_FCFF + PV_TV)',\n    pass: Math.abs((pvFCFF + pvTV) - valuation.ev) < 1e-6\n  });\n\n  // Gordon constraint if used: WACC>g\n  if (assumptions.terminalMethod === 'gordon') {\n    tests.push({\n      name: 'WACC > g (Gordon)',\n      pass: disc > assumptions.tg\n    });\n  }\n\n  // WACC monotonicity (±50 bps)\n  const aUp = { ...assumptions, rf: assumptions.rf + 0.005 };\n  const aDn = { ...assumptions, rf: Math.max(0, assumptions.rf - 0.005) };\n  const vsUp = valueEquity(aUp, project(aUp, growthVector(0.05, aUp.years, aUp.growthYears))).perShare;\n  const vsDn = valueEquity(aDn, project(aDn, growthVector(0.05, aDn.years, aDn.growthYears))).perShare;\n  tests.push({\n    name: 'Per‑share ↓ when WACC ↑',\n    pass: vsUp < valuation.perShare && vsDn > valuation.perShare\n  });\n\n  // Non‑negative reinvestment, FCFF defined\n  tests.push({\n    name: 'Reinvestment non‑negative',\n    pass: rows.every(r => r.reinvest >= -1e-9)\n  });\n  tests.push({\n    name: 'FCFF finite',\n    pass: rows.every(r => Number.isFinite(r.fcff))\n  });\n\n  // Currency-scale invariance\n  const scaledAssumptions = {\n    ...assumptions,\n    rev0: assumptions.rev0 * 10,\n    netDebt: assumptions.netDebt * 10,\n    minorityInterest: assumptions.minorityInterest * 10,\n    cashAdjust: assumptions.cashAdjust * 10,\n    price: assumptions.price * 10\n  };\n  const scaledRows = project(scaledAssumptions, growthVector(0.05, scaledAssumptions.years, scaledAssumptions.growthYears));\n  const scaledValuation = valueEquity(scaledAssumptions, scaledRows);\n  tests.push({\n    name: 'Currency-scale invariance',\n    pass: Math.abs(scaledValuation.perShare / 10 - valuation.perShare) < 1e-6\n  });\n\n  // Net cash case (negative net debt raises equity)\n  if (assumptions.netDebt < 0) {\n    const zeroCashAssumptions = { ...assumptions, netDebt: 0 };\n    const zeroCashRows = project(zeroCashAssumptions, growthVector(0.05, zeroCashAssumptions.years, zeroCashAssumptions.growthYears));\n    const zeroCashValuation = valueEquity(zeroCashAssumptions, zeroCashRows);\n    tests.push({\n      name: 'Net cash increases equity',\n      pass: valuation.equity > zeroCashValuation.equity\n    });\n  }\n\n  // Shares guard\n  tests.push({\n    name: 'Shares > 0 (division safe)',\n    pass: assumptions.shares > 0\n  });\n\n  // Terminal method parity smoke test\n  if (assumptions.terminalMethod === 'gordon' && assumptions.tg > 0 && disc > assumptions.tg) {\n    const impliedMultiple = tv / rows[rows.length - 1].metricForExit;\n    const multipleAssumptions = {\n      ...assumptions,\n      terminalMethod: 'exitMultiple',\n      exitEVMultiple: impliedMultiple\n    };\n    const multipleRows = project(multipleAssumptions, growthVector(0.05, multipleAssumptions.years, multipleAssumptions.growthYears));\n    const multipleValuation = valueEquity(multipleAssumptions, multipleRows);\n    tests.push({\n      name: 'Terminal method parity',\n      pass: Math.abs(multipleValuation.perShare - valuation.perShare) < 0.01 // 1 cent tolerance\n    });\n  }\n\n  return tests;\n}\n\nconst TestsPanel = ({ tests }) => {\n  return (\n    <Card title=\"Dev / Sanity Tests\">\n      <ul className=\"space-y-1 text-[13px]\">\n        {tests.map(t => (\n          <li key={t.name} className=\"flex items-center justify-between\">\n            <span className=\"text-slate-700\">{t.name}</span>\n            <span className={`ml-2 ${t.pass ? 'text-emerald-600' : 'text-rose-600'}`}>\n              {t.pass ? 'PASS' : 'FAIL'}\n            </span>\n          </li>\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default TestsPanel;\n","import React from 'react';\n\nimport { project, valueEquity, growthVector } from '../../utils/valuationUtils';\n\nexport const TornadoChart = ({ items }) => {\n  const max = Math.max(...items.map(x => Math.abs(x.delta)), 1);\n\n  return (\n    <div className=\"space-y-1\">\n      {items.map((item, i) => {\n        const w = Math.abs(item.delta) / max;\n        const pos = item.delta >= 0;\n        return (\n          <div key={i} className=\"flex items-center gap-2 text-[12px]\">\n            <div className=\"w-40 text-slate-700\">{item.label}</div>\n            <div className=\"relative h-5 flex-1 rounded bg-slate-100\">\n              <div\n                className={`absolute top-0 h-5 rounded ${pos ? 'bg-emerald-400' : 'bg-rose-400'}`}\n                style={{\n                  width: `${w * 100}%`,\n                  left: pos ? '50%' : `${50 - w * 50}%`\n                }}\n              />\n              <div className=\"absolute left-1/2 top-0 h-5 w-px bg-white/60\" />\n            </div>\n            <div className={`w-20 text-right ${pos ? 'text-emerald-700' : 'text-rose-700'}`}>\n              {item.delta >= 0 ? '+' : ''}{item.delta.toFixed(2)}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport function generateTornadoData(assumptions, baseRows, basePerShare) {\n  const one = (label, tweak) => {\n    const aa = { ...assumptions };\n    tweak(aa);\n    const rows = project(aa, growthVector(\n      aa.growthYears > 0 ? (aa.ebitMarginT > aa.ebitMargin0 ? 0.06 : 0.03) : 0,\n      aa.years,\n      aa.growthYears\n    ));\n    const v = valueEquity(aa, rows).perShare;\n    return { label, delta: v - basePerShare };\n  };\n\n  const items = [\n    one('WACC +100 bps', x => {\n      if (x.capmMode === 'capm') x.rf += 0.01; else x.keManual += 0.01;\n    }),\n    one('WACC −100 bps', x => {\n      if (x.capmMode === 'capm') x.rf -= 0.01; else x.keManual -= 0.01;\n    }),\n    one('Terminal g +50 bps', x => {\n      x.terminalMethod = 'gordon'; x.tg += 0.005;\n    }),\n    one('Terminal g −50 bps', x => {\n      x.terminalMethod = 'gordon'; x.tg -= 0.005;\n    }),\n    one('Exit multiple +1x', x => {\n      x.terminalMethod = 'exitMultiple'; x.exitEVMultiple += 1;\n    }),\n    one('Exit multiple −1x', x => {\n      x.terminalMethod = 'exitMultiple'; x.exitEVMultiple -= 1;\n    }),\n    one('EBIT margin +100 bps', x => {\n      x.ebitMarginT += 0.01;\n    }),\n    one('EBIT margin −100 bps', x => {\n      x.ebitMarginT -= 0.01;\n    }),\n    one('Sales‑to‑Capital +0.5', x => {\n      x.reinvMethod = 'salesToCapital'; x.salesToCapital += 0.5;\n    }),\n    one('Sales‑to‑Capital −0.5', x => {\n      x.reinvMethod = 'salesToCapital'; x.salesToCapital = Math.max(0.1, x.salesToCapital - 0.5);\n    })\n  ];\n\n  // Sort by absolute impact desc\n  return items.sort((a, b) => Math.abs(b.delta) - Math.abs(a.delta));\n}\n","import React from 'react';\n\nimport { Cur, Pct } from '../../utils/valuationUtils';\n\nconst ValuationSummary = ({ valuation, assumptions }) => {\n  const tvEvRatio = valuation.tv / (valuation.ev || 1e-9);\n  const getTvEvColor = (ratio) => {\n    if (ratio > 0.8) return 'text-amber-600'; // High TV dependency - warning\n    if (ratio > 0.6) return 'text-slate-600'; // Moderate\n    return 'text-emerald-600'; // Conservative\n  };\n\n  return (\n    <div className=\"grid grid-cols-2 gap-3 text-[13px]\">\n      <div className=\"rounded-xl border border-slate-200 p-3\">\n        <div className=\"text-slate-500\">PV(FCFF)</div>\n        <div className=\"text-lg font-semibold\">{Cur(valuation.pvFCFF, 0)}</div>\n        <div className=\"text-slate-500\">PV(Terminal)</div>\n        <div className=\"text-lg font-semibold\">{Cur(valuation.pvTV, 0)}</div>\n        <div className=\"text-slate-500\">EV</div>\n        <div className=\"text-lg font-semibold\">{Cur(valuation.ev, 0)}</div>\n        <div className=\"text-slate-500\">TV/EV Ratio</div>\n        <div className={`text-sm font-medium ${getTvEvColor(tvEvRatio)}`}>\n          {Pct(tvEvRatio, 1)}\n        </div>\n      </div>\n      <div className=\"rounded-xl border border-slate-200 p-3\">\n        <div className=\"text-slate-500\">EV − Net Debt − MI + Cash Adj.</div>\n        <div className=\"text-lg font-semibold\">{Cur(valuation.equity, 0)}</div>\n        <div className=\"text-slate-500\">Per Share</div>\n        <div className={`text-2xl font-bold ${valuation.perShare >= assumptions.price ? 'text-emerald-600' : 'text-rose-600'}`}>\n          {assumptions.currency} {valuation.perShare.toFixed(2)}\n        </div>\n        <div className=\"text-slate-500\">Margin of Safety vs Price</div>\n        <div className={`text-lg font-semibold ${valuation.mos >= 0 ? 'text-emerald-700' : 'text-rose-700'}`}>\n          {Pct(valuation.mos, 1)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ValuationSummary;\n","import { useState, useMemo, useEffect } from 'react';\n\nimport { Card, Pill } from 'src/components/ui/UIHelpers.jsx';\n\nimport Header from '../components/ui/Header';\nimport AssumptionsPanel from '../components/ValuationWorkbench/AssumptionsPanel';\nimport { AuditTrail, useAuditTrail } from '../components/ValuationWorkbench/AuditTrail';\nimport { AxisPicker } from '../components/ValuationWorkbench/AxisPicker';\nimport { validateAssumptions, ErrorDisplay } from '../components/ValuationWorkbench/ErrorHandler';\nimport { Histogram, runMonteCarlo, generatePriors } from '../components/ValuationWorkbench/MonteCarloAnalysis';\nimport ProjectionsTable from '../components/ValuationWorkbench/ProjectionsTable';\nimport ReverseDCF from '../components/ValuationWorkbench/ReverseDCF';\nimport ScenarioLibrary from '../components/ValuationWorkbench/ScenarioLibrary';\nimport { Heatmap, generateHeatmapsWithConfig } from '../components/ValuationWorkbench/SensitivityAnalysis';\nimport TestsPanel, { runTests } from '../components/ValuationWorkbench/TestsPanel';\nimport { TornadoChart, generateTornadoData } from '../components/ValuationWorkbench/TornadoChart';\nimport ValuationSummary from '../components/ValuationWorkbench/ValuationSummary';\nimport { project, valueEquity, growthVector, wacc, Pct } from '../utils/valuationUtils';\n\n// Default assumptions\nconst defaults = {\n  name: 'VALR demo',\n  currency: 'USD',\n  shares: 300_000_000,\n  price: 25,\n  netDebt: 2_000_000_000,\n  minorityInterest: 0,\n  cashAdjust: 0,\n  rev0: 5_000_000_000,\n  growthYears: 5,\n  years: 10,\n  taxRate: 0.23,\n  ebitMargin0: 0.12,\n  ebitMarginT: 0.18,\n  reinvMethod: 'salesToCapital',\n  salesToCapital: 2.5,\n  capexPctSales: 0.05,\n  depPctSales: 0.04,\n  nwcPctSales: 0.10,\n  capmMode: 'capm',\n  rf: 0.04,\n  beta: 1.1,\n  erp: 0.05,\n  keManual: 0.10,\n  kd: 0.06,\n  wd: 0.25,\n  we: 0.75,\n  terminalMethod: 'gordon',\n  tg: 0.025,\n  exitEVMultiple: 9.0,\n  exitMetric: 'EBITDA'\n};\n\nconst ValuationWorkbench = () => {\n  const [assumptions, setAssumptions] = useState({ ...defaults });\n  const [scenarios, setScenarios] = useState([]);\n  const [mc, setMc] = useState(null);\n  const [axisConfig, setAxisConfig] = useState({\n    wacc: { min: 0.06, max: 0.14, steps: 5 },\n    growth: { min: 0.015, max: 0.035, steps: 5 },\n    exitMultiple: { min: 8, max: 16, steps: 5 }\n  });\n\n  // Audit trail integration\n  const { auditLog, updateAssumptions, clearAuditLog, exportAuditLog } = useAuditTrail(assumptions, setAssumptions);\n\n  // Core calculations\n  const growth = useMemo(() => growthVector(0.05, assumptions.years, assumptions.growthYears), [assumptions.years, assumptions.growthYears]);\n  const rows = useMemo(() => project(assumptions, growth), [assumptions, growth]);\n  const valuation = useMemo(() => valueEquity(assumptions, rows), [assumptions, rows]);\n  const disc = useMemo(() => wacc(assumptions), [assumptions]);\n\n  // Sensitivity analysis data with custom axis configuration\n  const heatmapData = useMemo(() => generateHeatmapsWithConfig(assumptions, axisConfig), [assumptions, axisConfig]);\n\n  // Tornado analysis\n  const tornData = useMemo(() => generateTornadoData(assumptions, rows, valuation.perShare), [assumptions, rows, valuation.perShare]);\n\n  // Monte Carlo priors\n  const priors = useMemo(() => generatePriors(assumptions), [assumptions]);\n\n  // Tests\n  const tests = useMemo(() => runTests(assumptions, rows, valuation), [assumptions, rows, valuation]);\n\n  // Validation\n  const validation = useMemo(() => validateAssumptions(assumptions), [assumptions]);\n\n  // Reset MC when assumptions change\n  useEffect(() => {\n    setMc(null);\n  }, [assumptions]);\n\n  return (\n    <div className=\"min-h-[100dvh] bg-background text-foreground\">\n      <Header />\n\n      <div className=\"pt-[60px]\">\n        {/* Page Header */}\n        <div className=\"border-b border-border bg-card\">\n          <div className=\"flex items-center justify-between p-4\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"flex h-8 w-8 items-center justify-center rounded-md bg-primary\">\n                <svg viewBox=\"0 0 24 24\" className=\"h-4 w-4 text-white\">\n                  <path\n                    d=\"M4 6h16M4 12h10M4 18h7\" stroke=\"currentColor\" strokeWidth=\"2\"\n                    fill=\"none\" strokeLinecap=\"round\"\n                  />\n                </svg>\n              </div>\n              <div>\n                <div className=\"text-xs tracking-wide text-muted-foreground\">FinanceAnalyst Pro</div>\n                <div className=\"text-[13px] font-semibold text-foreground\">Valuation Workbench</div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-3 text-[12px]\">\n              <Pill tone=\"green\">{`WACC ${Pct(disc, 1)}`}</Pill>\n              <Pill tone=\"amber\">\n                {assumptions.terminalMethod === 'gordon'\n                  ? `g ${Pct(assumptions.tg, 1)}`\n                  : `Exit ×${assumptions.exitEVMultiple.toFixed(1)} ${assumptions.exitMetric}`}\n              </Pill>\n              <Pill tone=\"blue\">\n                {valuation.perShare >= assumptions.price ? 'Undervalued' : 'Overvalued'}\n              </Pill>\n            </div>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"p-6\">\n          <div className=\"mb-4 grid grid-cols-12 gap-6\">\n\n            {/* Left Column: Assumptions & Scenarios */}\n            <div className=\"col-span-12 lg:col-span-4 space-y-4\">\n              <AssumptionsPanel assumptions={assumptions} setAssumptions={updateAssumptions} />\n\n              {/* Error Handling & Validation */}\n              <ErrorDisplay validation={validation} />\n\n              <ReverseDCF\n                assumptions={assumptions}\n                setAssumptions={updateAssumptions}\n                currentValuation={valuation}\n              />\n\n              {/* Audit Trail */}\n              <AuditTrail\n                auditLog={auditLog}\n                onClear={clearAuditLog}\n                onExport={exportAuditLog}\n              />\n\n              <ScenarioLibrary\n                scenarios={scenarios}\n                setScenarios={setScenarios}\n                assumptions={assumptions}\n                setAssumptions={updateAssumptions}\n                rows={rows}\n                valuation={valuation}\n              />\n            </div>\n\n            {/* Center Column: Projections & Valuation */}\n            <div className=\"col-span-12 lg:col-span-5 space-y-4\">\n              <Card title=\"10‑Year Projections (FCFF)\">\n                <ProjectionsTable rows={rows} currency={assumptions.currency} />\n              </Card>\n\n              <Card title=\"Enterprise → Equity Bridge\">\n                <ValuationSummary valuation={valuation} assumptions={assumptions} />\n              </Card>\n            </div>\n\n            {/* Right Column: Results & Analysis */}\n            <div className=\"col-span-12 lg:col-span-3 space-y-4\">\n              {/* Sensitivity Analysis */}\n              <Card className=\"p-4\">\n                <h3 className=\"text-[16px] font-semibold text-foreground mb-4\">Sensitivity Analysis</h3>\n\n                {/* Axis Configuration */}\n                <div className=\"mb-4\">\n                  <AxisPicker\n                    currentConfig={axisConfig}\n                    onAxisChange={setAxisConfig}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"text-[14px] font-medium text-foreground mb-2\">{heatmapData.waccGrowth.title}</h4>\n                    <Heatmap\n                      grid={heatmapData.waccGrowth.grid}\n                      xLabels={heatmapData.waccGrowth.xLabels}\n                      yLabels={heatmapData.waccGrowth.yLabels}\n                    />\n                  </div>\n                  <div>\n                    <h4 className=\"text-[14px] font-medium text-foreground mb-2\">{heatmapData.waccExit.title}</h4>\n                    <Heatmap\n                      grid={heatmapData.waccExit.grid}\n                      xLabels={heatmapData.waccExit.xLabels}\n                      yLabels={heatmapData.waccExit.yLabels}\n                    />\n                  </div>\n                </div>\n              </Card>\n\n              <Card title=\"Tornado (Δ per‑share)\">\n                <TornadoChart items={tornData} />\n              </Card>\n\n              <Card\n                title=\"Monte Carlo (1000 runs)\"\n                right={\n                  <button\n                    onClick={() => setMc(runMonteCarlo(assumptions, priors, 1000))}\n                    className=\"rounded-md border border-border bg-card px-2 py-1 text-[12px] hover:bg-muted\"\n                  >\n                    Run\n                  </button>\n                }\n              >\n                {mc ? (\n                  <div className=\"space-y-2 text-[12px]\">\n                    <div className=\"flex items-center justify-between\">\n                      <span>P5</span>\n                      <span className=\"font-mono\">{mc.p5.toFixed(2)}</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span>P50</span>\n                      <span className=\"font-mono\">{mc.p50.toFixed(2)}</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span>P95</span>\n                      <span className=\"font-mono\">{mc.p95.toFixed(2)}</span>\n                    </div>\n                    <Histogram data={mc.vals} />\n                  </div>\n                ) : (\n                  <div className=\"text-[12px] text-muted-foreground\">\n                    Stochastic valuation with triangular priors on g, margins, WACC shift, S/C, terminal. Click Run.\n                  </div>\n                )}\n              </Card>\n            </div>\n          </div>\n\n          <TestsPanel tests={tests} />\n          <div className=\"mt-2 text-[11px] text-muted-foreground\">\n            Tip: to feed real tickers, pipe reported revenue, margins, share count, and balance sheet into the assumptions; set priors from historical distributions.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ValuationWorkbench;\n"],"names":["AssumptionsPanel","assumptions","setAssumptions","set","key","value","jsx","Card","title","right","Pill","tone","children","currency","jsxs","className","NumberInput","label","shares","onChange","suffix","step","min","price","netDebt","minorityInterest","cashAdjust","rev0","taxRate","max","ebitMargin0","ebitMarginT","years","growthYears","Switch","on","reinvMethod","setOn","v","salesToCapital","Fragment","capexPctSales","depPctSales","nwcPctSales","capmMode","rf","beta","erp","keManual","kd","wd","we","terminalMethod","tg","exitEVMultiple","exitMetric","e","target","getChangeDescription","field","oldValue","newValue","fieldName","change","changeStr","toFixed","useAuditTrail","auditLog","setAuditLog","useState","previousAssumptions","setPreviousAssumptions","updateAssumptions","newAssumptions","entries","Object","keys","forEach","push","timestamp","Date","id","now","Math","random","user","createAuditEntry","length","prev","clearAuditLog","exportAuditLog","format","blob","Blob","JSON","stringify","type","url","URL","createObjectURL","a","document","createElement","href","download","toISOString","split","click","revokeObjectURL","csvContent","map","entry","row","cell","join","AuditTrail","onClear","onExport","isExpanded","setIsExpanded","showDetails","setShowDetails","onClick","index","toLocaleString","AxisPicker","onAxisChange","currentConfig","config","setConfig","wacc","steps","growth","exitMultiple","updateConfig","axis","newConfig","presets","conservative","aggressive","tight","preset","presetName","applyPreset","val","placeholder","Cur","x","c","Pct","d","clamp","b","ke","project","growthPath","rows","rev","y","revPrev","t","ebitMargin","ebit","nopat","reinvest","dep","capex","dNWC","reinvSales","fcff","metricForExit","year","revenue","terminalValue","disc","last","tv","basis","valueEquity","pv","pvSeries","i","p","discount","pvTV","ev","equity","perShare","pvFCFF","mos","growthVector","gStart","fadeAfter","ErrorDisplay","validation","errors","warnings","error","message","guidance","warning","Histogram","data","lo","counts","Array","fill","bins","floor","maxC","width","height","h","triRand","u","mid","sqrt","ProjectionsTable","r","ReverseDCF","currentValuation","targetPrice","setTargetPrice","targetMOS","setTargetMOS","solveFor","setSolveFor","results","setResults","formatValue","option","impliedValue","currentValue","tolerance","maxIterations","low","high","iteration","abs","testAssumptions","solveForImpliedGrowth","solveForImpliedWACC","solveForImpliedMargin","calculateTargetPrice","ScenarioLibrary","scenarios","setScenarios","valuation","scenario","toString","slice","name","created","body","foot","aEl","accept","event","file","files","reader","FileReader","onload","parse","result","isArray","existingIds","Set","s","newScenarios","filter","has","alert","readAsText","del","Heatmap","grid","xLabels","yLabels","vMin","flat","vMax","color","style","gridTemplateColumns","ri","React","ci","background","generateRange","from","_","generateHeatmap","waccVals","termVals","termIsGrowth","j","aa","deltaKe","TestsPanel","tests","pass","TornadoChart","items","delta","item","w","pos","left","ValuationSummary","tvEvRatio","ratio","defaults","ValuationWorkbench","mc","setMc","axisConfig","setAxisConfig","useMemo","heatmapData","growthVals","exitMultipleVals","waccGrowth","g","waccExit","m","generateHeatmapsWithConfig","tornData","baseRows","basePerShare","one","tweak","sort","generateTornadoData","priors","marginT","waccShifter","stc","tgOrExit","generatePriors","reduce","acc","aUp","aDn","vsUp","vsDn","every","Number","isFinite","scaledAssumptions","scaledValuation","zeroCashAssumptions","zeroCashValuation","impliedMultiple","multipleAssumptions","multipleValuation","runTests","severity","isValid","validateAssumptions","useEffect","Header","viewBox","stroke","strokeWidth","strokeLinecap","n","vals","path","wShift","q","p5","p50","p95","runMonteCarlo"],"mappings":"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"}