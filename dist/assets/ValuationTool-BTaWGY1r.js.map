{"version":3,"file":"ValuationTool-BTaWGY1r.js","sources":["../../src/components/ValuationTool/DCFInputs.jsx","../../src/components/ValuationTool/EnhancedDCFTool.jsx","../../src/components/ValuationTool/DynamicTimePeriodControl.jsx","../../src/components/ValuationTool/LivingModelDCF.jsx","../../src/components/AnalysisCanvas/CompanySelector.jsx","../../src/components/AnalysisCanvas/CompanyOverview.jsx","../../src/components/AnalysisCanvas/AnalysisModule.jsx","../../src/components/AnalysisCanvas/AnalysisCanvas.jsx","../../src/components/ValuationTool/ValuationTool.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst DCFInputs = ({ inputs, setInputs }) => {\n  const [viewMode, setViewMode] = useState('simple'); // 'simple' or 'detailed'\n\n  const handleChange = (field, value) => {\n    setInputs(prev => ({ ...prev, [field]: parseFloat(value) || 0 }));\n  };\n\n  const handleYearlyChange = (year, field, value) => {\n    const yearlyData = inputs.yearlyData || {};\n    const updatedYearlyData = {\n      ...yearlyData,\n      [year]: {\n        ...yearlyData[year],\n        [field]: parseFloat(value) || 0\n      }\n    };\n    setInputs(prev => ({ ...prev, yearlyData: updatedYearlyData }));\n  };\n\n  const handleBalanceSheetChange = (field, value) => {\n    const balanceSheet = inputs.balanceSheet || {};\n    setInputs(prev => ({\n      ...prev,\n      balanceSheet: {\n        ...balanceSheet,\n        [field]: parseFloat(value) || 0\n      }\n    }));\n  };\n\n  // Initialize yearly data when projection years change\n  useEffect(() => {\n    if (inputs.projectionYears && !inputs.yearlyData) {\n      const initialYearlyData = {};\n      for (let year = 1; year <= inputs.projectionYears; year++) {\n        initialYearlyData[year] = {\n          revenueGrowth: inputs.revenueGrowthRate * 100 || 10,\n          ebitdaMargin: inputs.ebitdaMargin * 100 || 20,\n          taxRate: inputs.taxRate * 100 || 25,\n          capexPercent: inputs.capexPercent * 100 || 3,\n          workingCapitalChange: inputs.workingCapitalPercent * 100 || 2,\n          daPercent: 3 // Depreciation & Amortization as % of revenue\n        };\n      }\n      setInputs(prev => ({ ...prev, yearlyData: initialYearlyData }));\n    }\n  }, [inputs.projectionYears, inputs.yearlyData, setInputs]);\n\n  // Initialize balance sheet data\n  useEffect(() => {\n    if (!inputs.balanceSheet) {\n      setInputs(prev => ({\n        ...prev,\n        balanceSheet: {\n          cash: 10000000, // $10M default\n          totalDebt: 5000000, // $5M default\n          sharesOutstanding: 1000000 // 1M shares default\n        }\n      }));\n    }\n  }, [inputs.balanceSheet, setInputs]);\n\n  const renderSimpleView = () => (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n      <div>\n        <label htmlFor=\"currentRevenue\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Current Revenue ($)\n        </label>\n        <input\n          id=\"currentRevenue\"\n          type=\"number\"\n          value={inputs.currentRevenue || 0}\n          onChange={(e) => handleChange('currentRevenue', e.target.value)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"revenueGrowthRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Revenue Growth Rate (%)\n        </label>\n        <input\n          id=\"revenueGrowthRate\"\n          type=\"number\"\n          step=\"0.01\"\n          value={(inputs.revenueGrowthRate || 0) * 100}\n          onChange={(e) => handleChange('revenueGrowthRate', e.target.value / 100)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"ebitdaMargin\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          EBITDA Margin (%)\n        </label>\n        <input\n          id=\"ebitdaMargin\"\n          type=\"number\"\n          step=\"0.01\"\n          value={(inputs.ebitdaMargin || 0) * 100}\n          onChange={(e) => handleChange('ebitdaMargin', e.target.value / 100)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"taxRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Tax Rate (%)\n        </label>\n        <input\n          id=\"taxRate\"\n          type=\"number\"\n          step=\"0.01\"\n          value={(inputs.taxRate || 0) * 100}\n          onChange={(e) => handleChange('taxRate', e.target.value / 100)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"terminalGrowthRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Terminal Growth Rate (%)\n        </label>\n        <input\n          id=\"terminalGrowthRate\"\n          type=\"number\"\n          step=\"0.01\"\n          value={(inputs.terminalGrowthRate || 0) * 100}\n          onChange={(e) => handleChange('terminalGrowthRate', e.target.value / 100)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"discountRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Discount Rate (WACC) (%)\n        </label>\n        <input\n          id=\"discountRate\"\n          type=\"number\"\n          step=\"0.01\"\n          value={(inputs.discountRate || 0) * 100}\n          onChange={(e) => handleChange('discountRate', e.target.value / 100)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"projectionYears\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Projection Years\n        </label>\n        <input\n          id=\"projectionYears\"\n          type=\"number\"\n          min=\"3\"\n          max=\"10\"\n          value={inputs.projectionYears || 5}\n          onChange={(e) => handleChange('projectionYears', e.target.value)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n        />\n      </div>\n    </div>\n  );\n\n  const renderDetailedView = () => {\n    const years = Array.from({ length: inputs.projectionYears || 5 }, (_, i) => i + 1);\n    const yearlyData = inputs.yearlyData || {};\n    const balanceSheet = inputs.balanceSheet || {};\n\n    return (\n      <div className=\"space-y-6\">\n        {/* Base Year Inputs */}\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\n          <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Base Year (Current)</h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Current Revenue ($)\n              </label>\n              <input\n                type=\"number\"\n                value={inputs.currentRevenue || 0}\n                onChange={(e) => handleChange('currentRevenue', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Terminal Growth Rate (%)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                value={(inputs.terminalGrowthRate || 0) * 100}\n                onChange={(e) => handleChange('terminalGrowthRate', e.target.value / 100)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Discount Rate (WACC) (%)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                value={(inputs.discountRate || 0) * 100}\n                onChange={(e) => handleChange('discountRate', e.target.value / 100)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Year-by-Year Projections Table */}\n        <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n          <div className=\"bg-gray-50 px-4 py-3 border-b border-gray-200\">\n            <h4 className=\"text-md font-semibold text-gray-900\">Annual Projections</h4>\n          </div>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Metric\n                  </th>\n                  {years.map(year => (\n                    <th key={year} className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Year {year}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                <tr>\n                  <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">Revenue Growth (%)</td>\n                  {years.map(year => (\n                    <td key={year} className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        step=\"0.1\"\n                        value={yearlyData[year]?.revenueGrowth || 0}\n                        onChange={(e) => handleYearlyChange(year, 'revenueGrowth', e.target.value)}\n                        className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </td>\n                  ))}\n                </tr>\n                <tr className=\"bg-gray-50\">\n                  <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">EBITDA Margin (%)</td>\n                  {years.map(year => (\n                    <td key={year} className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        step=\"0.1\"\n                        value={yearlyData[year]?.ebitdaMargin || 0}\n                        onChange={(e) => handleYearlyChange(year, 'ebitdaMargin', e.target.value)}\n                        className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </td>\n                  ))}\n                </tr>\n                <tr>\n                  <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">Tax Rate (%)</td>\n                  {years.map(year => (\n                    <td key={year} className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        step=\"0.1\"\n                        value={yearlyData[year]?.taxRate || 0}\n                        onChange={(e) => handleYearlyChange(year, 'taxRate', e.target.value)}\n                        className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </td>\n                  ))}\n                </tr>\n                <tr className=\"bg-gray-50\">\n                  <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">CapEx (% of Revenue)</td>\n                  {years.map(year => (\n                    <td key={year} className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        step=\"0.1\"\n                        value={yearlyData[year]?.capexPercent || 0}\n                        onChange={(e) => handleYearlyChange(year, 'capexPercent', e.target.value)}\n                        className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </td>\n                  ))}\n                </tr>\n                <tr>\n                  <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">D&A (% of Revenue)</td>\n                  {years.map(year => (\n                    <td key={year} className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        step=\"0.1\"\n                        value={yearlyData[year]?.daPercent || 0}\n                        onChange={(e) => handleYearlyChange(year, 'daPercent', e.target.value)}\n                        className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </td>\n                  ))}\n                </tr>\n                <tr className=\"bg-gray-50\">\n                  <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">Δ Working Capital (% of Rev)</td>\n                  {years.map(year => (\n                    <td key={year} className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        step=\"0.1\"\n                        value={yearlyData[year]?.workingCapitalChange || 0}\n                        onChange={(e) => handleYearlyChange(year, 'workingCapitalChange', e.target.value)}\n                        className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </td>\n                  ))}\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Balance Sheet Inputs */}\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\n          <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Balance Sheet Items</h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Cash ($)\n              </label>\n              <input\n                type=\"number\"\n                value={balanceSheet.cash || 0}\n                onChange={(e) => handleBalanceSheetChange('cash', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Total Debt ($)\n              </label>\n              <input\n                type=\"number\"\n                value={balanceSheet.totalDebt || 0}\n                onChange={(e) => handleBalanceSheetChange('totalDebt', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Shares Outstanding\n              </label>\n              <input\n                type=\"number\"\n                value={balanceSheet.sharesOutstanding || 0}\n                onChange={(e) => handleBalanceSheetChange('sharesOutstanding', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">DCF Model Assumptions</h3>\n        <div className=\"flex space-x-2\">\n          <button\n            onClick={() => setViewMode('simple')}\n            className={`px-4 py-2 text-sm rounded-lg transition-colors ${\n              viewMode === 'simple'\n                ? 'bg-blue-500 text-white'\n                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n            }`}\n          >\n            Simple\n          </button>\n          <button\n            onClick={() => setViewMode('detailed')}\n            className={`px-4 py-2 text-sm rounded-lg transition-colors ${\n              viewMode === 'detailed'\n                ? 'bg-blue-500 text-white'\n                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n            }`}\n          >\n            Detailed\n          </button>\n        </div>\n      </div>\n\n      {viewMode === 'simple' ? renderSimpleView() : renderDetailedView()}\n    </div>\n  );\n};\n\nexport default DCFInputs;\n","import { motion } from 'framer-motion';\nimport { Calculator, Download, BarChart3, TrendingUp, AlertCircle, ArrowLeft } from 'lucide-react';\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from 'recharts';\n\nimport { calculateEnhancedDCF, calculateSensitivityAnalysis } from '../../utils/dcfCalculations';\n\nimport DCFInputs from './DCFInputs';\n\nconst EnhancedDCFTool = ({ onBack }) => {\n  const [inputs, setInputs] = useState({\n    currentRevenue: 100000000, // $100M\n    projectionYears: 5,\n    terminalGrowthRate: 0.025, // 2.5%\n    discountRate: 0.12, // 12%\n    yearlyData: {},\n    balanceSheet: {}\n  });\n\n  const [results, setResults] = useState(null);\n  const [sensitivityResults, setSensitivityResults] = useState(null);\n  const [activeTab, setActiveTab] = useState('inputs');\n  const [loading, setLoading] = useState(false);\n\n  // Calculate DCF when inputs change\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      calculateDCF();\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [inputs]);\n\n  const calculateDCF = async() => {\n    if (!inputs.currentRevenue || inputs.currentRevenue <= 0) {\n      setResults(null);\n      setSensitivityResults(null);\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const dcfResults = calculateEnhancedDCF(inputs);\n      setResults(dcfResults);\n\n      // Calculate sensitivity analysis\n      const sensitivity = calculateSensitivityAnalysis(inputs);\n      setSensitivityResults(sensitivity);\n    } catch (error) {\n      console.error('DCF calculation error:', error);\n      setResults(null);\n      setSensitivityResults(null);\n    }\n    setLoading(false);\n  };\n\n  const formatCurrency = (value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  const formatPercent = (value) => {\n    if (!value && value !== 0) return '0%';\n    return `${(value).toFixed(1)}%`;\n  };\n\n  const generateChartData = () => {\n    if (!results) return [];\n\n    return results.years.map((year, index) => ({\n      year: `Year ${year}`,\n      freeCashFlow: results.freeCashFlows[index],\n      presentValue: results.presentValues[index]\n    }));\n  };\n\n  const renderProjectionTable = () => {\n    if (!results?.projectionTable) return null;\n\n    return (\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">Financial Projections</h3>\n        </div>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Metric\n                </th>\n                {results.projectionTable.map((row, index) => (\n                  <th key={index} className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Year {row.year}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              <tr>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">Revenue</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    {formatCurrency(row.revenue)}\n                  </td>\n                ))}\n              </tr>\n              <tr className=\"bg-gray-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">Revenue Growth %</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    {formatPercent(row.revenueGrowth)}\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">EBITDA</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    {formatCurrency(row.ebitda)}\n                  </td>\n                ))}\n              </tr>\n              <tr className=\"bg-gray-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">EBIT</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    {formatCurrency(row.ebit)}\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">NOPAT</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    {formatCurrency(row.nopat)}\n                  </td>\n                ))}\n              </tr>\n              <tr className=\"bg-gray-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">CapEx</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    {formatCurrency(row.capex)}\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">Δ Working Capital</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    {formatCurrency(row.deltaWorkingCapital)}\n                  </td>\n                ))}\n              </tr>\n              <tr className=\"bg-blue-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-blue-900\">Free Cash Flow</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-blue-900 text-right\">\n                    {formatCurrency(row.freeCashFlow)}\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  };\n\n  const renderSensitivityTable = () => {\n    if (!sensitivityResults) return null;\n\n    const { matrix, waccRange, terminalGrowthRange } = sensitivityResults;\n\n    return (\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">\n            Sensitivity Analysis - Implied Share Price\n          </h3>\n          <p className=\"text-sm text-gray-600 mt-1\">\n            Impact of WACC and Terminal Growth Rate changes on valuation\n          </p>\n        </div>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full\">\n            <thead>\n              <tr>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 bg-gray-50\">\n                  WACC \\ Terminal Growth\n                </th>\n                {terminalGrowthRange.map(rate => (\n                  <th key={rate} className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 bg-gray-50\">\n                    {formatPercent(rate)}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {matrix.map((row, rowIndex) => (\n                <tr key={rowIndex} className={rowIndex % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\n                  <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">\n                    {formatPercent(waccRange[rowIndex])}\n                  </td>\n                  {row.map((cell, cellIndex) => {\n                    const isBaseCase = rowIndex === Math.floor(matrix.length / 2) &&\n                                      cellIndex === Math.floor(row.length / 2);\n                    return (\n                      <td\n                        key={cellIndex}\n                        className={`px-4 py-3 text-sm text-center ${\n                          isBaseCase ? 'bg-blue-100 font-bold text-blue-900' : 'text-gray-900'\n                        }`}\n                      >\n                        ${cell.sharePrice.toFixed(2)}\n                      </td>\n                    );\n                  })}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  };\n\n  const tabs = [\n    { id: 'inputs', name: 'Model Inputs', icon: Calculator },\n    { id: 'results', name: 'Results', icon: TrendingUp },\n    { id: 'charts', name: 'Charts', icon: BarChart3 },\n    { id: 'sensitivity', name: 'Sensitivity', icon: AlertCircle }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-6 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center mb-4\">\n            {onBack && (\n              <button\n                onClick={onBack}\n                className=\"flex items-center text-gray-600 hover:text-gray-900 mr-4\"\n              >\n                <ArrowLeft className=\"w-5 h-5 mr-1\" />\n                Back to Overview\n              </button>\n            )}\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            Enhanced DCF Analysis Tool\n          </h1>\n          <p className=\"text-gray-600\">\n            Professional discounted cash flow modeling with year-by-year projections and sensitivity analysis\n          </p>\n        </div>\n\n        {/* Navigation Tabs */}\n        <div className=\"border-b border-gray-200 mb-8\">\n          <nav className=\"-mb-px flex space-x-8\">\n            {tabs.map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <Icon className=\"w-4 h-4 mr-2\" />\n                  {tab.name}\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* Tab Content */}\n        <motion.div\n          key={activeTab}\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"space-y-8\"\n        >\n          {activeTab === 'inputs' && (\n            <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n              <DCFInputs inputs={inputs} setInputs={setInputs} />\n            </div>\n          )}\n\n          {activeTab === 'results' && (\n            <div className=\"space-y-6\">\n              {loading && (\n                <div className=\"text-center py-8\">\n                  <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\" />\n                  <p className=\"mt-2 text-gray-600\">Calculating...</p>\n                </div>\n              )}\n\n              {results && !loading && (\n                <>\n                  {/* Key Metrics */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n                    <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                      <div className=\"text-sm font-medium text-gray-500\">Enterprise Value</div>\n                      <div className=\"text-2xl font-bold text-gray-900 mt-1\">\n                        {formatCurrency(results.enterpriseValue)}\n                      </div>\n                    </div>\n                    <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                      <div className=\"text-sm font-medium text-gray-500\">Equity Value</div>\n                      <div className=\"text-2xl font-bold text-gray-900 mt-1\">\n                        {formatCurrency(results.equityValue)}\n                      </div>\n                    </div>\n                    <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                      <div className=\"text-sm font-medium text-gray-500\">Share Price</div>\n                      <div className=\"text-2xl font-bold text-gray-900 mt-1\">\n                        ${results.impliedSharePrice.toFixed(2)}\n                      </div>\n                    </div>\n                    <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                      <div className=\"text-sm font-medium text-gray-500\">Terminal Value</div>\n                      <div className=\"text-2xl font-bold text-gray-900 mt-1\">\n                        {formatCurrency(results.presentValueTerminal)}\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Projection Table */}\n                  {renderProjectionTable()}\n\n                  {/* Valuation Bridge */}\n                  <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Valuation Bridge</h3>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-gray-600\">PV of Projection Period FCFs</span>\n                        <span className=\"font-semibold\">{formatCurrency(results.cumulativePV)}</span>\n                      </div>\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-gray-600\">PV of Terminal Value</span>\n                        <span className=\"font-semibold\">{formatCurrency(results.presentValueTerminal)}</span>\n                      </div>\n                      <div className=\"border-t pt-3 flex justify-between items-center\">\n                        <span className=\"text-gray-900 font-semibold\">Enterprise Value</span>\n                        <span className=\"font-bold text-lg\">{formatCurrency(results.enterpriseValue)}</span>\n                      </div>\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-gray-600\">Less: Net Debt</span>\n                        <span className=\"font-semibold\">{formatCurrency(results.netDebt)}</span>\n                      </div>\n                      <div className=\"border-t pt-3 flex justify-between items-center\">\n                        <span className=\"text-gray-900 font-semibold\">Equity Value</span>\n                        <span className=\"font-bold text-lg text-blue-600\">{formatCurrency(results.equityValue)}</span>\n                      </div>\n                    </div>\n                  </div>\n                </>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'charts' && (\n            <div className=\"space-y-6\">\n              {results && (\n                <>\n                  <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                      Cash Flow Projections\n                    </h3>\n                    <div className=\"h-96\">\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <LineChart data={generateChartData()}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"year\" />\n                          <YAxis\n                            tickFormatter={(value) =>\n                              new Intl.NumberFormat('en-US', {\n                                style: 'currency',\n                                currency: 'USD',\n                                notation: 'compact'\n                              }).format(value)\n                            }\n                          />\n                          <Tooltip\n                            formatter={(value) => [\n                              new Intl.NumberFormat('en-US', {\n                                style: 'currency',\n                                currency: 'USD'\n                              }).format(value)\n                            ]}\n                          />\n                          <Legend />\n                          <Line\n                            type=\"monotone\"\n                            dataKey=\"freeCashFlow\"\n                            stroke=\"#3b82f6\"\n                            strokeWidth={2}\n                            name=\"Free Cash Flow\"\n                          />\n                          <Line\n                            type=\"monotone\"\n                            dataKey=\"presentValue\"\n                            stroke=\"#10b981\"\n                            strokeWidth={2}\n                            name=\"Present Value\"\n                          />\n                        </LineChart>\n                      </ResponsiveContainer>\n                    </div>\n                  </div>\n                </>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'sensitivity' && (\n            <div className=\"space-y-6\">\n              {sensitivityResults && renderSensitivityTable()}\n            </div>\n          )}\n        </motion.div>\n\n        {/* Export Button */}\n        {results && (\n          <div className=\"mt-8 text-center\">\n            <button\n              className=\"inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-colors\"\n              onClick={() => {\n                // Export functionality would go here\n                console.log('Export results:', results);\n              }}\n            >\n              <Download className=\"w-5 h-5 mr-2\" />\n              Export Results\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EnhancedDCFTool;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Card } from '../ui/Card';\nimport Icon from '../AppIcon';\n\nconst DynamicTimePeriodControl = ({ \n  initialYears = 5, \n  minYears = 1, \n  maxYears = 15, \n  onYearsChange,\n  className = \"\" \n}) => {\n  const [years, setYears] = useState(initialYears);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartX, setDragStartX] = useState(0);\n  const [dragStartYears, setDragStartYears] = useState(0);\n\n  const handleYearsChange = useCallback((newYears) => {\n    const clampedYears = Math.max(minYears, Math.min(maxYears, Math.round(newYears)));\n    if (clampedYears !== years) {\n      setYears(clampedYears);\n      onYearsChange?.(clampedYears);\n    }\n  }, [years, minYears, maxYears, onYearsChange]);\n\n  const handleMouseDown = useCallback((e) => {\n    e.preventDefault();\n    setIsDragging(true);\n    setDragStartX(e.clientX);\n    setDragStartYears(years);\n    document.body.style.cursor = 'ew-resize';\n  }, [years]);\n\n  const handleMouseMove = useCallback((e) => {\n    if (!isDragging) return;\n    \n    const deltaX = e.clientX - dragStartX;\n    const sensitivity = 0.02; // Adjust sensitivity\n    const deltaYears = deltaX * sensitivity;\n    const newYears = dragStartYears + deltaYears;\n    \n    handleYearsChange(newYears);\n  }, [isDragging, dragStartX, dragStartYears, handleYearsChange]);\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false);\n    document.body.style.cursor = 'default';\n  }, []);\n\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      \n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDragging, handleMouseMove, handleMouseUp]);\n\n  const handleSliderChange = (e) => {\n    const newYears = parseInt(e.target.value);\n    handleYearsChange(newYears);\n  };\n\n  const handleQuickSelect = (selectedYears) => {\n    handleYearsChange(selectedYears);\n  };\n\n  const getTimelineMarkers = () => {\n    const markers = [];\n    const step = years <= 5 ? 1 : years <= 10 ? 2 : 3;\n    \n    for (let i = 1; i <= years; i += step) {\n      const percentage = (i / years) * 100;\n      markers.push(\n        <div\n          key={i}\n          className=\"absolute flex flex-col items-center transform -translate-x-1/2\"\n          style={{ left: `${percentage}%` }}\n        >\n          <div className=\"w-px h-3 bg-blue-400\"></div>\n          <span className=\"text-xs text-gray-400 mt-1\">Y{i}</span>\n        </div>\n      );\n    }\n    \n    return markers;\n  };\n\n  return (\n    <Card className={`bg-gray-800 border-gray-700 p-6 ${className}`}>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <Icon name=\"Clock\" className=\"w-5 h-5 text-blue-400\" />\n            <h3 className=\"text-lg font-semibold text-white\">Projection Period</h3>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-400\">Years:</span>\n            <span className=\"text-xl font-bold text-blue-400\">{years}</span>\n          </div>\n        </div>\n\n        {/* Interactive Timeline */}\n        <div className=\"space-y-4\">\n          <div className=\"relative h-12\">\n            {/* Timeline Track */}\n            <div className=\"absolute top-4 left-0 right-0 h-2 bg-gray-700 rounded-full overflow-hidden\">\n              <div \n                className=\"h-full bg-gradient-to-r from-blue-600 to-blue-400 rounded-full transition-all duration-200\"\n                style={{ width: `${(years / maxYears) * 100}%` }}\n              ></div>\n            </div>\n            \n            {/* Draggable Handle */}\n            <div\n              className=\"absolute top-2 w-6 h-6 bg-blue-500 rounded-full border-2 border-white shadow-lg cursor-ew-resize transform -translate-x-1/2 hover:bg-blue-400 transition-colors duration-200\"\n              style={{ left: `${(years / maxYears) * 100}%` }}\n              onMouseDown={handleMouseDown}\n            >\n              <div className=\"absolute inset-0 rounded-full animate-pulse bg-blue-400 opacity-30\"></div>\n            </div>\n            \n            {/* Timeline Markers */}\n            {getTimelineMarkers()}\n          </div>\n\n          {/* Range Slider */}\n          <div className=\"px-2\">\n            <input\n              type=\"range\"\n              min={minYears}\n              max={maxYears}\n              value={years}\n              onChange={handleSliderChange}\n              className=\"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer slider\"\n              style={{\n                background: `linear-gradient(to right, #3b82f6 0%, #3b82f6 ${(years / maxYears) * 100}%, #374151 ${(years / maxYears) * 100}%, #374151 100%)`\n              }}\n            />\n          </div>\n        </div>\n\n        {/* Quick Select Buttons */}\n        <div className=\"flex justify-center space-x-2\">\n          {[3, 5, 7, 10, 12, 15].filter(y => y >= minYears && y <= maxYears).map(quickYears => (\n            <button\n              key={quickYears}\n              onClick={() => handleQuickSelect(quickYears)}\n              className={`px-3 py-1 rounded-full text-sm font-medium transition-all duration-200 ${\n                years === quickYears\n                  ? 'bg-blue-600 text-white shadow-lg'\n                  : 'bg-gray-700 text-gray-300 hover:bg-gray-600 hover:text-white'\n              }`}\n            >\n              {quickYears}Y\n            </button>\n          ))}\n        </div>\n\n        {/* Period Description */}\n        <div className=\"text-center\">\n          <p className=\"text-sm text-gray-400\">\n            {years <= 3 && \"Short-term focus with higher accuracy\"}\n            {years > 3 && years <= 7 && \"Balanced projection period for most analyses\"}\n            {years > 7 && years <= 10 && \"Extended projection for growth companies\"}\n            {years > 10 && \"Long-term strategic planning horizon\"}\n          </p>\n        </div>\n\n        {/* Real-time Impact Indicator */}\n        <div className=\"flex items-center justify-center space-x-2 text-xs text-gray-500\">\n          <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n          <span>Model updates automatically</span>\n        </div>\n      </div>\n\n      <style jsx>{`\n        .slider::-webkit-slider-thumb {\n          appearance: none;\n          width: 20px;\n          height: 20px;\n          border-radius: 50%;\n          background: #3b82f6;\n          border: 2px solid white;\n          cursor: pointer;\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n          transition: all 0.2s ease;\n        }\n        \n        .slider::-webkit-slider-thumb:hover {\n          background: #2563eb;\n          transform: scale(1.1);\n        }\n        \n        .slider::-webkit-slider-track {\n          height: 8px;\n          border-radius: 4px;\n          background: transparent;\n        }\n        \n        .slider::-moz-range-thumb {\n          width: 20px;\n          height: 20px;\n          border-radius: 50%;\n          background: #3b82f6;\n          border: 2px solid white;\n          cursor: pointer;\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n        }\n        \n        .slider::-moz-range-track {\n          height: 8px;\n          border-radius: 4px;\n        }\n      `}</style>\n    </Card>\n  );\n};\n\nexport default DynamicTimePeriodControl;","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Card } from '../ui/Card';\nimport Input from '../ui/Input';\nimport Select from '../ui/Select';\nimport Button from '../ui/Button';\nimport Icon from '../AppIcon';\nimport DynamicTimePeriodControl from './DynamicTimePeriodControl';\nimport reactiveCalculationEngine from '../../services/reactiveCalculationEngine';\nimport realTimeDataService from '../../services/realTimeDataService';\n\nconst LivingModelDCF = ({ symbol, onBack }) => {\n  const [modelId] = useState(`dcf_${Date.now()}`);\n  const [result, setResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [realTimeData, setRealTimeData] = useState({});\n  const [lastUpdateTime, setLastUpdateTime] = useState(null);\n  const modelRef = useRef(null);\n  \n  // Model inputs with reactive updates\n  const [inputs, setInputs] = useState({\n    currentRevenue: 10000000000, // $10B\n    projectionYears: 5,\n    terminalGrowthRate: 0.025,\n    discountRate: 0.12,\n    symbol: symbol || 'AAPL',\n    trackRealTime: true,\n    yearlyData: {\n      1: { revenueGrowth: 15, ebitdaMargin: 25, taxRate: 25, capexPercent: 4, daPercent: 3, workingCapitalChange: 2 },\n      2: { revenueGrowth: 12, ebitdaMargin: 24, taxRate: 25, capexPercent: 4, daPercent: 3, workingCapitalChange: 2 },\n      3: { revenueGrowth: 10, ebitdaMargin: 23, taxRate: 25, capexPercent: 3, daPercent: 3, workingCapitalChange: 1 },\n      4: { revenueGrowth: 8, ebitdaMargin: 22, taxRate: 25, capexPercent: 3, daPercent: 3, workingCapitalChange: 1 },\n      5: { revenueGrowth: 6, ebitdaMargin: 21, taxRate: 25, capexPercent: 3, daPercent: 3, workingCapitalChange: 1 },\n    },\n    balanceSheet: {\n      cash: 100000000,\n      totalDebt: 50000000,\n      sharesOutstanding: 1000000000\n    }\n  });\n\n  // Initialize the reactive model\n  useEffect(() => {\n    const model = reactiveCalculationEngine.createReactiveModel(\n      modelId,\n      'dcf',\n      inputs,\n      (newResult, newInputs, calcError) => {\n        setResult(newResult);\n        setError(calcError);\n        setLastUpdateTime(new Date());\n        setIsLoading(false);\n      }\n    );\n    \n    modelRef.current = model;\n    \n    // Setup real-time data feeds if enabled\n    if (inputs.trackRealTime && inputs.symbol) {\n      model.addDependency('stock_price', inputs.symbol);\n      model.addDependency('interest_rates', 'USD_10Y');\n      model.addDependency('bond_yields', 'US10Y');\n    }\n    \n    return () => {\n      if (modelRef.current) {\n        modelRef.current.destroy();\n      }\n    };\n  }, [modelId]);\n\n  // Subscribe to real-time data for display\n  useEffect(() => {\n    if (!inputs.trackRealTime || !inputs.symbol) return;\n\n    const subscriptions = [\n      { dataType: 'stock_price', symbol: inputs.symbol },\n      { dataType: 'interest_rates', symbol: 'USD_10Y' },\n      { dataType: 'bond_yields', symbol: 'US10Y' },\n      { dataType: 'volatility_index', symbol: 'VIX' }\n    ];\n\n    const unsubscribe = realTimeDataService.subscribeMultiple(\n      subscriptions.map(({ dataType, symbol }) => ({\n        dataType,\n        symbol,\n        callback: (data) => {\n          setRealTimeData(prev => ({\n            ...prev,\n            [`${dataType}_${symbol}`]: data\n          }));\n        }\n      }))\n    );\n\n    return unsubscribe;\n  }, [inputs.trackRealTime, inputs.symbol]);\n\n  // Handle input changes with instant recalculation\n  const updateInput = useCallback((path, value) => {\n    setIsLoading(true);\n    if (modelRef.current) {\n      modelRef.current.updateInput(path, value);\n    }\n    \n    setInputs(prev => {\n      const updated = { ...prev };\n      const keys = path.split('.');\n      let current = updated;\n      \n      for (let i = 0; i < keys.length - 1; i++) {\n        if (!(keys[i] in current)) current[keys[i]] = {};\n        current = current[keys[i]];\n      }\n      \n      current[keys[keys.length - 1]] = value;\n      return updated;\n    });\n  }, []);\n\n  const updateYearlyData = useCallback((year, field, value) => {\n    updateInput(`yearlyData.${year}.${field}`, parseFloat(value) || 0);\n  }, [updateInput]);\n\n  const handleProjectionYearsChange = useCallback((newYears) => {\n    updateInput('projectionYears', newYears);\n    \n    // Extend or trim yearly data\n    setInputs(prev => {\n      const updated = { ...prev };\n      updated.projectionYears = newYears;\n      \n      // Add new years with reasonable defaults\n      for (let year = Object.keys(prev.yearlyData).length + 1; year <= newYears; year++) {\n        if (!updated.yearlyData[year]) {\n          const prevYear = updated.yearlyData[year - 1] || updated.yearlyData[Object.keys(updated.yearlyData).pop()];\n          updated.yearlyData[year] = {\n            revenueGrowth: Math.max(2, (prevYear?.revenueGrowth || 10) - 2),\n            ebitdaMargin: prevYear?.ebitdaMargin || 20,\n            taxRate: prevYear?.taxRate || 25,\n            capexPercent: prevYear?.capexPercent || 3,\n            daPercent: prevYear?.daPercent || 3,\n            workingCapitalChange: prevYear?.workingCapitalChange || 1\n          };\n        }\n      }\n      \n      // Remove years beyond the new projection period\n      Object.keys(updated.yearlyData).forEach(year => {\n        if (parseInt(year) > newYears) {\n          delete updated.yearlyData[year];\n        }\n      });\n      \n      return updated;\n    });\n  }, [updateInput]);\n\n  const toggleRealTimeTracking = useCallback(() => {\n    const newValue = !inputs.trackRealTime;\n    updateInput('trackRealTime', newValue);\n    \n    if (newValue && inputs.symbol && modelRef.current) {\n      modelRef.current.addDependency('stock_price', inputs.symbol);\n      modelRef.current.addDependency('interest_rates', 'USD_10Y');\n    }\n  }, [inputs.trackRealTime, inputs.symbol, updateInput]);\n\n  const formatCurrency = (value, decimals = 0) => {\n    if (!value) return '$0';\n    const absValue = Math.abs(value);\n    if (absValue >= 1e12) return `$${(value / 1e12).toFixed(decimals)}T`;\n    if (absValue >= 1e9) return `$${(value / 1e9).toFixed(decimals)}B`;\n    if (absValue >= 1e6) return `$${(value / 1e6).toFixed(decimals)}M`;\n    if (absValue >= 1e3) return `$${(value / 1e3).toFixed(decimals)}K`;\n    return `$${value.toFixed(decimals)}`;\n  };\n\n  const getRealTimeIndicator = (dataType, symbol) => {\n    const key = `${dataType}_${symbol}`;\n    const data = realTimeData[key];\n    if (!data) return null;\n\n    return (\n      <div className=\"flex items-center space-x-2 text-sm\">\n        <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n        <span className=\"text-gray-300\">\n          {dataType === 'stock_price' && `$${data.price?.toFixed(2)}`}\n          {dataType === 'interest_rates' && `${data.rate?.toFixed(2)}%`}\n          {dataType === 'bond_yields' && `${data.yield?.toFixed(2)}%`}\n          {dataType === 'volatility_index' && `${data.volatility?.toFixed(1)}`}\n        </span>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-8\">\n          <div className=\"flex items-center space-x-4\">\n            <Button \n              onClick={onBack}\n              className=\"bg-gray-700 hover:bg-gray-600\"\n              size=\"sm\"\n            >\n              <Icon name=\"ArrowLeft\" className=\"w-4 h-4 mr-2\" />\n              Back\n            </Button>\n            <div>\n              <h1 className=\"text-3xl font-bold\">Living Model DCF</h1>\n              <div className=\"flex items-center space-x-4 mt-2\">\n                <p className=\"text-gray-400\">Real-time, reactive financial modeling</p>\n                {lastUpdateTime && (\n                  <span className=\"text-xs text-green-400\">\n                    Updated: {lastUpdateTime.toLocaleTimeString()}\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n          \n          {/* Real-time Toggle */}\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={toggleRealTimeTracking}\n              className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-colors ${\n                inputs.trackRealTime \n                  ? 'bg-green-600 hover:bg-green-700 text-white' \n                  : 'bg-gray-700 hover:bg-gray-600 text-gray-300'\n              }`}\n            >\n              <Icon name={inputs.trackRealTime ? \"Zap\" : \"ZapOff\"} className=\"w-4 h-4\" />\n              <span>Real-time: {inputs.trackRealTime ? 'ON' : 'OFF'}</span>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Left Panel - Inputs */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            {/* Company & Basic Inputs */}\n            <Card className=\"bg-gray-800 border-gray-700 p-6\">\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n                <Icon name=\"Building\" className=\"w-5 h-5 mr-2 text-blue-400\" />\n                Company Basics\n              </h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Symbol\n                  </label>\n                  <Input\n                    value={inputs.symbol}\n                    onChange={(e) => updateInput('symbol', e.target.value.toUpperCase())}\n                    className=\"bg-gray-700 border-gray-600\"\n                    placeholder=\"AAPL\"\n                  />\n                  {inputs.trackRealTime && getRealTimeIndicator('stock_price', inputs.symbol)}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Current Revenue\n                  </label>\n                  <Input\n                    type=\"number\"\n                    value={inputs.currentRevenue}\n                    onChange={(e) => updateInput('currentRevenue', parseFloat(e.target.value) || 0)}\n                    className=\"bg-gray-700 border-gray-600\"\n                    step=\"1000000\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Discount Rate (WACC)\n                  </label>\n                  <div className=\"flex items-center space-x-2\">\n                    <Input\n                      type=\"number\"\n                      value={(inputs.discountRate * 100).toFixed(1)}\n                      onChange={(e) => updateInput('discountRate', parseFloat(e.target.value) / 100 || 0)}\n                      className=\"bg-gray-700 border-gray-600\"\n                      step=\"0.1\"\n                      min=\"0\"\n                      max=\"50\"\n                    />\n                    <span className=\"text-gray-400\">%</span>\n                  </div>\n                  {inputs.trackRealTime && getRealTimeIndicator('interest_rates', 'USD_10Y')}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Terminal Growth Rate\n                  </label>\n                  <div className=\"flex items-center space-x-2\">\n                    <Input\n                      type=\"number\"\n                      value={(inputs.terminalGrowthRate * 100).toFixed(1)}\n                      onChange={(e) => updateInput('terminalGrowthRate', parseFloat(e.target.value) / 100 || 0)}\n                      className=\"bg-gray-700 border-gray-600\"\n                      step=\"0.1\"\n                      min=\"0\"\n                      max=\"10\"\n                    />\n                    <span className=\"text-gray-400\">%</span>\n                  </div>\n                </div>\n              </div>\n            </Card>\n\n            {/* Dynamic Time Period Control */}\n            <DynamicTimePeriodControl\n              initialYears={inputs.projectionYears}\n              onYearsChange={handleProjectionYearsChange}\n            />\n\n            {/* Real-time Market Data */}\n            {inputs.trackRealTime && (\n              <Card className=\"bg-gray-800 border-gray-700 p-6\">\n                <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n                  <Icon name=\"Activity\" className=\"w-5 h-5 mr-2 text-green-400\" />\n                  Live Market Data\n                </h3>\n                \n                <div className=\"space-y-3\">\n                  {getRealTimeIndicator('stock_price', inputs.symbol) && (\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-400\">Stock Price:</span>\n                      {getRealTimeIndicator('stock_price', inputs.symbol)}\n                    </div>\n                  )}\n                  \n                  {getRealTimeIndicator('bond_yields', 'US10Y') && (\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-400\">10Y Treasury:</span>\n                      {getRealTimeIndicator('bond_yields', 'US10Y')}\n                    </div>\n                  )}\n                  \n                  {getRealTimeIndicator('volatility_index', 'VIX') && (\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-400\">VIX:</span>\n                      {getRealTimeIndicator('volatility_index', 'VIX')}\n                    </div>\n                  )}\n                </div>\n              </Card>\n            )}\n          </div>\n\n          {/* Middle Panel - Year-by-Year Inputs */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"bg-gray-800 border-gray-700 p-6\">\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n                <Icon name=\"Calendar\" className=\"w-5 h-5 mr-2 text-blue-400\" />\n                Year-by-Year Projections\n              </h3>\n              \n              <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n                {Array.from({ length: inputs.projectionYears }, (_, i) => i + 1).map(year => (\n                  <div key={year} className=\"border border-gray-700 rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-blue-400 mb-3\">Year {year}</h4>\n                    \n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div>\n                        <label className=\"block text-xs text-gray-400 mb-1\">Rev Growth %</label>\n                        <Input\n                          type=\"number\"\n                          value={inputs.yearlyData[year]?.revenueGrowth || 0}\n                          onChange={(e) => updateYearlyData(year, 'revenueGrowth', e.target.value)}\n                          className=\"bg-gray-700 border-gray-600 text-sm\"\n                          step=\"0.1\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-xs text-gray-400 mb-1\">EBITDA Margin %</label>\n                        <Input\n                          type=\"number\"\n                          value={inputs.yearlyData[year]?.ebitdaMargin || 0}\n                          onChange={(e) => updateYearlyData(year, 'ebitdaMargin', e.target.value)}\n                          className=\"bg-gray-700 border-gray-600 text-sm\"\n                          step=\"0.1\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-xs text-gray-400 mb-1\">Tax Rate %</label>\n                        <Input\n                          type=\"number\"\n                          value={inputs.yearlyData[year]?.taxRate || 0}\n                          onChange={(e) => updateYearlyData(year, 'taxRate', e.target.value)}\n                          className=\"bg-gray-700 border-gray-600 text-sm\"\n                          step=\"0.1\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-xs text-gray-400 mb-1\">CapEx % Rev</label>\n                        <Input\n                          type=\"number\"\n                          value={inputs.yearlyData[year]?.capexPercent || 0}\n                          onChange={(e) => updateYearlyData(year, 'capexPercent', e.target.value)}\n                          className=\"bg-gray-700 border-gray-600 text-sm\"\n                          step=\"0.1\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </Card>\n          </div>\n\n          {/* Right Panel - Results */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            {isLoading && (\n              <div className=\"flex items-center justify-center py-8\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\n                <span className=\"ml-2 text-gray-400\">Calculating...</span>\n              </div>\n            )}\n\n            {error && (\n              <Card className=\"bg-red-900/20 border-red-700 p-6\">\n                <div className=\"flex items-center text-red-400\">\n                  <Icon name=\"AlertCircle\" className=\"w-5 h-5 mr-2\" />\n                  <span>Calculation Error</span>\n                </div>\n                <p className=\"text-red-300 mt-2 text-sm\">{error.message}</p>\n              </Card>\n            )}\n\n            {result && (\n              <>\n                {/* Key Metrics */}\n                <Card className=\"bg-gray-800 border-gray-700 p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n                    <Icon name=\"TrendingUp\" className=\"w-5 h-5 mr-2 text-green-400\" />\n                    Key Results\n                  </h3>\n                  \n                  <div className=\"space-y-4\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-400\">Enterprise Value:</span>\n                      <span className=\"font-semibold text-lg text-blue-400\">\n                        {formatCurrency(result.enterpriseValue, 1)}\n                      </span>\n                    </div>\n                    \n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-400\">Equity Value:</span>\n                      <span className=\"font-semibold text-lg text-green-400\">\n                        {formatCurrency(result.equityValue, 1)}\n                      </span>\n                    </div>\n                    \n                    <div className=\"flex justify-between items-center border-t border-gray-700 pt-4\">\n                      <span className=\"text-gray-400\">Share Price:</span>\n                      <span className=\"font-bold text-xl text-yellow-400\">\n                        ${result.impliedSharePrice?.toFixed(2)}\n                      </span>\n                    </div>\n                    \n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-400\">Terminal Value:</span>\n                      <span className=\"font-semibold\">\n                        {formatCurrency(result.terminalValue, 1)}\n                      </span>\n                    </div>\n                  </div>\n                </Card>\n\n                {/* Cash Flow Summary */}\n                <Card className=\"bg-gray-800 border-gray-700 p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n                    <Icon name=\"DollarSign\" className=\"w-5 h-5 mr-2 text-blue-400\" />\n                    Cash Flow Summary\n                  </h3>\n                  \n                  <div className=\"space-y-2\">\n                    {result.years?.map((year, index) => (\n                      <div key={year} className=\"flex justify-between items-center text-sm\">\n                        <span className=\"text-gray-400\">Year {year} FCF:</span>\n                        <span className=\"font-mono\">\n                          {formatCurrency(result.freeCashFlows[index], 1)}\n                        </span>\n                      </div>\n                    ))}\n                    \n                    <div className=\"border-t border-gray-700 pt-2 mt-3\">\n                      <div className=\"flex justify-between items-center text-sm font-semibold\">\n                        <span className=\"text-gray-300\">PV of FCFs:</span>\n                        <span>{formatCurrency(result.cumulativePV, 1)}</span>\n                      </div>\n                    </div>\n                  </div>\n                </Card>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LivingModelDCF;","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Search, TrendingUp, Building2 } from 'lucide-react';\n\nconst CompanySelector = ({ onCompanySelect }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n\n  // Mock company data - in real implementation, this would come from an API\n  const mockCompanies = [\n    {\n      id: 'AAPL',\n      name: 'Apple Inc.',\n      ticker: 'AAPL',\n      sector: 'Technology',\n      marketCap: 3000000000000,\n      price: 175.84,\n      change: 2.34,\n      changePercent: 1.35,\n      financials: {\n        revenue: [274515000000, 294135000000, 365817000000, 383285000000, 394328000000],\n        years: [2019, 2020, 2021, 2022, 2023]\n      }\n    },\n    {\n      id: 'MSFT',\n      name: 'Microsoft Corporation',\n      ticker: 'MSFT',\n      sector: 'Technology',\n      marketCap: 2800000000000,\n      price: 378.85,\n      change: -1.23,\n      changePercent: -0.32,\n      financials: {\n        revenue: [125843000000, 143015000000, 168088000000, 198270000000, 211915000000],\n        years: [2019, 2020, 2021, 2022, 2023]\n      }\n    },\n    {\n      id: 'GOOGL',\n      name: 'Alphabet Inc.',\n      ticker: 'GOOGL',\n      sector: 'Technology',\n      marketCap: 2100000000000,\n      price: 142.56,\n      change: 3.21,\n      changePercent: 2.30,\n      financials: {\n        revenue: [161857000000, 182527000000, 257637000000, 282836000000, 307394000000],\n        years: [2019, 2020, 2021, 2022, 2023]\n      }\n    },\n    {\n      id: 'JNJ',\n      name: 'Johnson & Johnson',\n      ticker: 'JNJ',\n      sector: 'Healthcare',\n      marketCap: 450000000000,\n      price: 156.78,\n      change: 0.89,\n      changePercent: 0.57,\n      financials: {\n        revenue: [82059000000, 82584000000, 93775000000, 94943000000, 85159000000],\n        years: [2019, 2020, 2021, 2022, 2023]\n      }\n    },\n    {\n      id: 'PFE',\n      name: 'Pfizer Inc.',\n      ticker: 'PFE',\n      sector: 'Healthcare',\n      marketCap: 320000000000,\n      price: 28.95,\n      change: -0.45,\n      changePercent: -1.53,\n      financials: {\n        revenue: [51750000000, 41908000000, 81288000000, 100330000000, 58496000000],\n        years: [2019, 2020, 2021, 2022, 2023]\n      }\n    }\n  ];\n\n  // Search functionality\n  useEffect(() => {\n    if (searchTerm.length > 0) {\n      setIsSearching(true);\n      \n      // Simulate API delay\n      const timer = setTimeout(() => {\n        const filtered = mockCompanies.filter(company =>\n          company.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          company.ticker.toLowerCase().includes(searchTerm.toLowerCase())\n        );\n        setSuggestions(filtered);\n        setIsSearching(false);\n      }, 300);\n\n      return () => clearTimeout(timer);\n    } else {\n      setSuggestions([]);\n      setIsSearching(false);\n    }\n  }, [searchTerm]);\n\n  const formatCurrency = (value) => {\n    if (value >= 1e12) return `$${(value / 1e12).toFixed(1)}T`;\n    if (value >= 1e9) return `$${(value / 1e9).toFixed(1)}B`;\n    if (value >= 1e6) return `$${(value / 1e6).toFixed(1)}M`;\n    return `$${value.toFixed(2)}`;\n  };\n\n  const handleCompanySelect = (company) => {\n    onCompanySelect(company);\n    setSearchTerm('');\n    setSuggestions([]);\n  };\n\n  return (\n    <div className=\"relative max-w-lg mx-auto\">\n      {/* Search Input */}\n      <div className=\"relative\">\n        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n          <Search className=\"h-5 w-5 text-gray-400\" />\n        </div>\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"block w-full pl-10 pr-3 py-4 border border-gray-200 rounded-2xl leading-5 bg-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-lg\"\n          placeholder=\"Search companies (e.g., Apple, AAPL)\"\n        />\n      </div>\n\n      {/* Search Results */}\n      <AnimatePresence>\n        {(suggestions.length > 0 || isSearching) && (\n          <motion.div\n            initial={{ opacity: 0, y: -10 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -10 }}\n            className=\"absolute z-10 mt-2 w-full bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden\"\n          >\n            {isSearching ? (\n              <div className=\"p-4 text-center text-gray-500\">\n                <div className=\"inline-block animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"></div>\n                <p className=\"mt-2 text-sm\">Searching...</p>\n              </div>\n            ) : (\n              <div className=\"max-h-80 overflow-y-auto\">\n                {suggestions.map((company) => (\n                  <motion.button\n                    key={company.id}\n                    onClick={() => handleCompanySelect(company)}\n                    whileHover={{ backgroundColor: 'rgba(59, 130, 246, 0.05)' }}\n                    className=\"w-full p-4 text-left border-b border-gray-50 last:border-b-0 focus:outline-none focus:bg-blue-50 transition-colors\"\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"flex-shrink-0\">\n                          <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center\">\n                            <Building2 className=\"w-5 h-5 text-white\" />\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"flex items-center space-x-2\">\n                            <h3 className=\"text-sm font-medium text-gray-900\">\n                              {company.name}\n                            </h3>\n                            <span className=\"text-xs font-mono text-gray-500 bg-gray-100 px-2 py-0.5 rounded\">\n                              {company.ticker}\n                            </span>\n                          </div>\n                          <p className=\"text-xs text-gray-500 mt-0.5\">\n                            {company.sector} • Market Cap: {formatCurrency(company.marketCap)}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          ${company.price}\n                        </div>\n                        <div className={`text-xs flex items-center ${\n                          company.changePercent >= 0 ? 'text-green-600' : 'text-red-600'\n                        }`}>\n                          <TrendingUp \n                            className={`w-3 h-3 mr-1 ${\n                              company.changePercent < 0 ? 'rotate-180' : ''\n                            }`} \n                          />\n                          {company.changePercent >= 0 ? '+' : ''}\n                          {company.changePercent.toFixed(2)}%\n                        </div>\n                      </div>\n                    </div>\n                  </motion.button>\n                ))}\n              </div>\n            )}\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Popular Companies */}\n      {!searchTerm && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n          className=\"mt-8\"\n        >\n          <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Popular Companies</h3>\n          <div className=\"grid grid-cols-2 gap-3\">\n            {mockCompanies.slice(0, 4).map((company) => (\n              <motion.button\n                key={company.id}\n                onClick={() => handleCompanySelect(company)}\n                whileHover={{ scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n                className=\"p-3 bg-white border border-gray-200 rounded-xl hover:border-blue-300 transition-all text-left\"\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-8 h-8 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center\">\n                    <Building2 className=\"w-4 h-4 text-white\" />\n                  </div>\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900\">\n                      {company.ticker}\n                    </div>\n                    <div className=\"text-xs text-gray-500 truncate\">\n                      {company.name}\n                    </div>\n                  </div>\n                </div>\n              </motion.button>\n            ))}\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default CompanySelector;","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { TrendingUp, Building2, Calendar, DollarSign } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer } from 'recharts';\n\nconst CompanyOverview = ({ company, compact = false }) => {\n  if (!company) return null;\n\n  const formatCurrency = (value) => {\n    if (value >= 1e12) return `$${(value / 1e12).toFixed(1)}T`;\n    if (value >= 1e9) return `$${(value / 1e9).toFixed(1)}B`;\n    if (value >= 1e6) return `$${(value / 1e6).toFixed(1)}M`;\n    return `$${value.toFixed(2)}`;\n  };\n\n  // Prepare chart data\n  const chartData = company.financials?.revenue?.map((revenue, index) => ({\n    year: company.financials.years[index],\n    revenue: revenue / 1e9 // Convert to billions for readability\n  })) || [];\n\n  // Calculate growth metrics\n  const calculateGrowth = (data) => {\n    if (!data || data.length < 2) return 0;\n    const latest = data[data.length - 1];\n    const previous = data[data.length - 2];\n    return ((latest - previous) / previous) * 100;\n  };\n\n  const revenueGrowth = calculateGrowth(company.financials?.revenue);\n\n  if (compact) {\n    return (\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-white rounded-2xl p-6 border border-gray-100\"\n      >\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center\">\n              <Building2 className=\"w-6 h-6 text-white\" />\n            </div>\n            <div>\n              <h2 className=\"text-xl font-semibold text-gray-900\">{company.name}</h2>\n              <p className=\"text-sm text-gray-500\">{company.sector}</p>\n            </div>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-2xl font-semibold text-gray-900\">${company.price}</div>\n            <div className={`text-sm flex items-center justify-end ${\n              company.changePercent >= 0 ? 'text-green-600' : 'text-red-600'\n            }`}>\n              <TrendingUp \n                className={`w-4 h-4 mr-1 ${\n                  company.changePercent < 0 ? 'rotate-180' : ''\n                }`} \n              />\n              {company.changePercent >= 0 ? '+' : ''}\n              {company.changePercent.toFixed(2)}%\n            </div>\n          </div>\n        </div>\n      </motion.div>\n    );\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"bg-white rounded-3xl p-8 border border-gray-100 shadow-sm\"\n    >\n      {/* Header */}\n      <div className=\"flex items-start justify-between mb-8\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl flex items-center justify-center\">\n            <Building2 className=\"w-8 h-8 text-white\" />\n          </div>\n          <div>\n            <h1 className=\"text-3xl font-light text-gray-900 mb-1\">{company.name}</h1>\n            <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n              <span className=\"font-mono bg-gray-100 px-2 py-1 rounded\">{company.ticker}</span>\n              <span>{company.sector}</span>\n              <span>Market Cap: {formatCurrency(company.marketCap)}</span>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"text-right\">\n          <div className=\"text-4xl font-light text-gray-900 mb-1\">\n            ${company.price}\n          </div>\n          <div className={`text-lg flex items-center justify-end ${\n            company.changePercent >= 0 ? 'text-green-600' : 'text-red-600'\n          }`}>\n            <TrendingUp \n              className={`w-5 h-5 mr-2 ${\n                company.changePercent < 0 ? 'rotate-180' : ''\n              }`} \n            />\n            {company.changePercent >= 0 ? '+' : ''}\n            {company.change.toFixed(2)} ({company.changePercent.toFixed(2)}%)\n          </div>\n        </div>\n      </div>\n\n      {/* Key Metrics Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n        {/* Revenue Chart */}\n        <div className=\"md:col-span-2\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Revenue Trend</h3>\n            <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n              <Calendar className=\"w-4 h-4\" />\n              <span>{company.financials?.years?.[0]} - {company.financials?.years?.slice(-1)}</span>\n            </div>\n          </div>\n          <div className=\"h-48\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={chartData}>\n                <XAxis \n                  dataKey=\"year\" \n                  axisLine={false}\n                  tickLine={false}\n                  tick={{ fontSize: 12, fill: '#6B7280' }}\n                />\n                <YAxis \n                  axisLine={false}\n                  tickLine={false}\n                  tick={{ fontSize: 12, fill: '#6B7280' }}\n                  tickFormatter={(value) => `$${value}B`}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"revenue\"\n                  stroke=\"#3B82F6\"\n                  strokeWidth={3}\n                  dot={{ fill: '#3B82F6', strokeWidth: 0, r: 4 }}\n                  activeDot={{ r: 6, stroke: '#3B82F6', strokeWidth: 2, fill: '#fff' }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Key Financial Metrics */}\n        <div className=\"space-y-4\">\n          <div className=\"bg-gray-50 rounded-2xl p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm font-medium text-gray-600\">Latest Revenue</span>\n              <DollarSign className=\"w-4 h-4 text-gray-400\" />\n            </div>\n            <div className=\"text-2xl font-semibold text-gray-900\">\n              {formatCurrency(company.financials?.revenue?.slice(-1)[0] || 0)}\n            </div>\n            <div className={`text-sm mt-1 ${\n              revenueGrowth >= 0 ? 'text-green-600' : 'text-red-600'\n            }`}>\n              {revenueGrowth >= 0 ? '+' : ''}{revenueGrowth.toFixed(1)}% YoY\n            </div>\n          </div>\n\n          <div className=\"bg-gray-50 rounded-2xl p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm font-medium text-gray-600\">Market Cap</span>\n              <TrendingUp className=\"w-4 h-4 text-gray-400\" />\n            </div>\n            <div className=\"text-2xl font-semibold text-gray-900\">\n              {formatCurrency(company.marketCap)}\n            </div>\n            <div className=\"text-sm text-gray-500 mt-1\">\n              Public Market\n            </div>\n          </div>\n\n          <div className=\"bg-gray-50 rounded-2xl p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm font-medium text-gray-600\">Sector</span>\n              <Building2 className=\"w-4 h-4 text-gray-400\" />\n            </div>\n            <div className=\"text-lg font-medium text-gray-900\">\n              {company.sector}\n            </div>\n            <div className=\"text-sm text-gray-500 mt-1\">\n              Industry Classification\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Analysis Ready Indicator */}\n      <div className=\"bg-green-50 border border-green-200 rounded-2xl p-4\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\n          <span className=\"text-sm font-medium text-green-800\">\n            Financial data loaded • Ready for analysis\n          </span>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default CompanyOverview;","import React, { useState, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  Calculator, \n  BarChart3, \n  Target, \n  Maximize2, \n  X, \n  TrendingUp,\n  DollarSign,\n  Percent,\n  Calendar\n} from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst AnalysisModule = ({ \n  moduleId, \n  companyData, \n  inputs, \n  results, \n  onInputChange, \n  onFocus, \n  onRemove,\n  isCompact = false,\n  isFullscreen = false \n}) => {\n  const [activeInputTab, setActiveInputTab] = useState('assumptions');\n\n  const moduleConfig = {\n    dcf: {\n      name: 'DCF Analysis',\n      icon: Calculator,\n      color: 'blue',\n      description: 'Discounted cash flow valuation model'\n    },\n    comparables: {\n      name: 'Comparable Analysis',\n      icon: BarChart3,\n      color: 'green',\n      description: 'Peer group valuation analysis'\n    },\n    lbo: {\n      name: 'LBO Analysis',\n      icon: Target,\n      color: 'purple',\n      description: 'Leveraged buyout return analysis'\n    }\n  };\n\n  const config = moduleConfig[moduleId];\n  const Icon = config.icon;\n\n  // Interactive slider component for key assumptions\n  const InteractiveSlider = ({ label, value, min, max, step, suffix = '', onChange }) => (\n    <div className=\"space-y-2\">\n      <div className=\"flex justify-between items-center\">\n        <label className=\"text-sm font-medium text-gray-700\">{label}</label>\n        <span className=\"text-sm font-mono text-gray-900 bg-gray-100 px-2 py-1 rounded\">\n          {value.toFixed(step < 1 ? 1 : 0)}{suffix}\n        </span>\n      </div>\n      <div className=\"relative\">\n        <input\n          type=\"range\"\n          min={min}\n          max={max}\n          step={step}\n          value={value}\n          onChange={(e) => onChange(parseFloat(e.target.value))}\n          className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider\"\n          style={{\n            background: `linear-gradient(to right, rgb(59 130 246) 0%, rgb(59 130 246) ${((value - min) / (max - min)) * 100}%, rgb(229 231 235) ${((value - min) / (max - min)) * 100}%, rgb(229 231 235) 100%)`\n          }}\n        />\n      </div>\n    </div>\n  );\n\n  // Render DCF module content\n  const renderDCFContent = () => {\n    if (!inputs) return null;\n\n    const handleInputChange = (field, value) => {\n      onInputChange({ [field]: value });\n    };\n\n    const handleYearlyInputChange = (year, field, value) => {\n      const updatedYearlyData = {\n        ...inputs.yearlyData,\n        [year]: {\n          ...inputs.yearlyData?.[year],\n          [field]: value\n        }\n      };\n      onInputChange({ yearlyData: updatedYearlyData });\n    };\n\n    // Generate chart data for visualization\n    const chartData = useMemo(() => {\n      if (!results?.freeCashFlows) return [];\n      \n      return results.years.map((year, index) => ({\n        year: `Y${year}`,\n        fcf: results.freeCashFlows[index] / 1e6, // Convert to millions\n        pv: results.presentValues[index] / 1e6\n      }));\n    }, [results]);\n\n    if (isCompact) {\n      return (\n        <div className=\"p-6 space-y-6\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className={`w-10 h-10 bg-${config.color}-100 rounded-lg flex items-center justify-center`}>\n                <Icon className={`w-5 h-5 text-${config.color}-600`} />\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-gray-900\">{config.name}</h3>\n                <p className=\"text-sm text-gray-500\">{config.description}</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <button\n                onClick={onFocus}\n                className=\"p-2 text-gray-400 hover:text-blue-600 transition-colors\"\n              >\n                <Maximize2 className=\"w-4 h-4\" />\n              </button>\n              <button\n                onClick={onRemove}\n                className=\"p-2 text-gray-400 hover:text-red-600 transition-colors\"\n              >\n                <X className=\"w-4 h-4\" />\n              </button>\n            </div>\n          </div>\n\n          {/* Key Interactive Inputs */}\n          <div className=\"space-y-4\">\n            <InteractiveSlider\n              label=\"Terminal Growth Rate\"\n              value={(inputs.terminalGrowthRate || 0.025) * 100}\n              min={0}\n              max={5}\n              step={0.1}\n              suffix=\"%\"\n              onChange={(value) => handleInputChange('terminalGrowthRate', value / 100)}\n            />\n            <InteractiveSlider\n              label=\"Discount Rate (WACC)\"\n              value={(inputs.discountRate || 0.12) * 100}\n              min={5}\n              max={20}\n              step={0.1}\n              suffix=\"%\"\n              onChange={(value) => handleInputChange('discountRate', value / 100)}\n            />\n          </div>\n\n          {/* Results Summary */}\n          {results && (\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"bg-gray-50 rounded-lg p-3\">\n                <div className=\"text-sm text-gray-600 mb-1\">Enterprise Value</div>\n                <div className=\"text-lg font-semibold text-gray-900\">\n                  ${(results.enterpriseValue / 1e9).toFixed(1)}B\n                </div>\n              </div>\n              <div className=\"bg-gray-50 rounded-lg p-3\">\n                <div className=\"text-sm text-gray-600 mb-1\">Implied Price</div>\n                <div className=\"text-lg font-semibold text-gray-900\">\n                  ${results.impliedSharePrice?.toFixed(2) || '0.00'}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Mini Chart */}\n          {chartData.length > 0 && (\n            <div className=\"h-32\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={chartData}>\n                  <Line \n                    type=\"monotone\" \n                    dataKey=\"fcf\" \n                    stroke=\"#3B82F6\" \n                    strokeWidth={2}\n                    dot={false}\n                  />\n                  <XAxis dataKey=\"year\" tick={{ fontSize: 10 }} />\n                  <YAxis tick={{ fontSize: 10 }} />\n                  <Tooltip \n                    formatter={(value) => [`$${value.toFixed(0)}M`, 'FCF']}\n                    labelStyle={{ color: '#374151' }}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    // Fullscreen view\n    return (\n      <div className=\"space-y-8\">\n        {/* Interactive Assumptions Panel */}\n        <div className=\"bg-white rounded-2xl border border-gray-100 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Model Assumptions</h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-6\">\n              <InteractiveSlider\n                label=\"Current Revenue\"\n                value={inputs.currentRevenue || 0}\n                min={1e6}\n                max={1e12}\n                step={1e6}\n                suffix=\"\"\n                onChange={(value) => handleInputChange('currentRevenue', value)}\n              />\n              <InteractiveSlider\n                label=\"Terminal Growth Rate\"\n                value={(inputs.terminalGrowthRate || 0.025) * 100}\n                min={0}\n                max={5}\n                step={0.1}\n                suffix=\"%\"\n                onChange={(value) => handleInputChange('terminalGrowthRate', value / 100)}\n              />\n              <InteractiveSlider\n                label=\"Discount Rate (WACC)\"\n                value={(inputs.discountRate || 0.12) * 100}\n                min={5}\n                max={20}\n                step={0.1}\n                suffix=\"%\"\n                onChange={(value) => handleInputChange('discountRate', value / 100)}\n              />\n            </div>\n            \n            <div className=\"space-y-6\">\n              <InteractiveSlider\n                label=\"Projection Years\"\n                value={inputs.projectionYears || 5}\n                min={3}\n                max={10}\n                step={1}\n                suffix=\" years\"\n                onChange={(value) => handleInputChange('projectionYears', value)}\n              />\n              \n              {/* Year 1 Quick Adjustments */}\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h4 className=\"font-medium text-gray-900 mb-3\">Year 1 Assumptions</h4>\n                <div className=\"space-y-3\">\n                  <InteractiveSlider\n                    label=\"Revenue Growth\"\n                    value={inputs.yearlyData?.[1]?.revenueGrowth || 10}\n                    min={-10}\n                    max={50}\n                    step={0.5}\n                    suffix=\"%\"\n                    onChange={(value) => handleYearlyInputChange(1, 'revenueGrowth', value)}\n                  />\n                  <InteractiveSlider\n                    label=\"EBITDA Margin\"\n                    value={inputs.yearlyData?.[1]?.ebitdaMargin || 20}\n                    min={0}\n                    max={50}\n                    step={0.5}\n                    suffix=\"%\"\n                    onChange={(value) => handleYearlyInputChange(1, 'ebitdaMargin', value)}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Results Dashboard */}\n        {results && (\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Key Metrics */}\n            <div className=\"lg:col-span-1 space-y-4\">\n              <div className=\"bg-white rounded-2xl border border-gray-100 p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Valuation Results</h3>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between p-3 bg-blue-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-2\">\n                      <DollarSign className=\"w-4 h-4 text-blue-600\" />\n                      <span className=\"text-sm font-medium text-blue-900\">Enterprise Value</span>\n                    </div>\n                    <span className=\"text-lg font-bold text-blue-900\">\n                      ${(results.enterpriseValue / 1e9).toFixed(1)}B\n                    </span>\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between p-3 bg-green-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-2\">\n                      <TrendingUp className=\"w-4 h-4 text-green-600\" />\n                      <span className=\"text-sm font-medium text-green-900\">Equity Value</span>\n                    </div>\n                    <span className=\"text-lg font-bold text-green-900\">\n                      ${(results.equityValue / 1e9).toFixed(1)}B\n                    </span>\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between p-3 bg-purple-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Percent className=\"w-4 h-4 text-purple-600\" />\n                      <span className=\"text-sm font-medium text-purple-900\">Implied Price</span>\n                    </div>\n                    <span className=\"text-lg font-bold text-purple-900\">\n                      ${results.impliedSharePrice?.toFixed(2) || '0.00'}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Cash Flow Chart */}\n            <div className=\"lg:col-span-2\">\n              <div className=\"bg-white rounded-2xl border border-gray-100 p-6\">\n                <div className=\"flex items-center justify-between mb-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Free Cash Flow Projection</h3>\n                  <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n                    <Calendar className=\"w-4 h-4\" />\n                    <span>{inputs.projectionYears || 5} Year Model</span>\n                  </div>\n                </div>\n                \n                <div className=\"h-64\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <LineChart data={chartData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f1f5f9\" />\n                      <XAxis \n                        dataKey=\"year\" \n                        axisLine={false}\n                        tickLine={false}\n                        tick={{ fontSize: 12, fill: '#64748b' }}\n                      />\n                      <YAxis \n                        axisLine={false}\n                        tickLine={false}\n                        tick={{ fontSize: 12, fill: '#64748b' }}\n                        tickFormatter={(value) => `$${value}M`}\n                      />\n                      <Tooltip \n                        formatter={(value, name) => [\n                          `$${value.toFixed(0)}M`, \n                          name === 'fcf' ? 'Free Cash Flow' : 'Present Value'\n                        ]}\n                        labelStyle={{ color: '#374151' }}\n                        contentStyle={{ \n                          backgroundColor: '#ffffff',\n                          border: '1px solid #e5e7eb',\n                          borderRadius: '8px'\n                        }}\n                      />\n                      <Line\n                        type=\"monotone\"\n                        dataKey=\"fcf\"\n                        stroke=\"#3B82F6\"\n                        strokeWidth={3}\n                        dot={{ fill: '#3B82F6', strokeWidth: 0, r: 4 }}\n                        name=\"fcf\"\n                      />\n                      <Line\n                        type=\"monotone\"\n                        dataKey=\"pv\"\n                        stroke=\"#10B981\"\n                        strokeWidth={3}\n                        dot={{ fill: '#10B981', strokeWidth: 0, r: 4 }}\n                        name=\"pv\"\n                      />\n                    </LineChart>\n                  </ResponsiveContainer>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Render module based on type\n  const renderModuleContent = () => {\n    switch (moduleId) {\n      case 'dcf':\n        return renderDCFContent();\n      case 'comparables':\n        return (\n          <div className=\"p-6 text-center text-gray-500\">\n            <BarChart3 className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n            <p>Comparable analysis module coming soon</p>\n          </div>\n        );\n      case 'lbo':\n        return (\n          <div className=\"p-6 text-center text-gray-500\">\n            <Target className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n            <p>LBO analysis module coming soon</p>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <motion.div\n      layout\n      className={`${isFullscreen ? '' : 'bg-white border border-gray-100 rounded-2xl overflow-hidden'}`}\n    >\n      {renderModuleContent()}\n    </motion.div>\n  );\n};\n\nexport default AnalysisModule;","import React, { useState, useEffect, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Search, \n  TrendingUp, \n  BarChart3, \n  Calculator, \n  Target,\n  ChevronRight,\n  Minimize2,\n  Maximize2\n} from 'lucide-react';\nimport CompanySelector from './CompanySelector';\nimport CompanyOverview from './CompanyOverview';\nimport AnalysisModule from './AnalysisModule';\nimport { calculateEnhancedDCF } from '../../utils/dcfCalculations';\n\n// Spring-based animation configuration for organic feel\nconst springConfig = {\n  type: \"spring\",\n  stiffness: 400,\n  damping: 25\n};\n\nconst AnalysisCanvas = () => {\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [activeModules, setActiveModules] = useState([]);\n  const [canvasMode, setCanvasMode] = useState('overview'); // 'overview', 'analysis', 'focused'\n  const [focusedModule, setFocusedModule] = useState(null);\n\n  // Company data state with intelligent defaults\n  const [companyData, setCompanyData] = useState({\n    profile: null,\n    financials: null,\n    marketData: null,\n    consensus: null\n  });\n\n  // Analysis state\n  const [analysisInputs, setAnalysisInputs] = useState({\n    dcf: {\n      currentRevenue: 0,\n      projectionYears: 5,\n      terminalGrowthRate: 0.025,\n      discountRate: 0.12,\n      yearlyData: {},\n      balanceSheet: {}\n    }\n  });\n\n  const [analysisResults, setAnalysisResults] = useState({});\n\n  // Available analysis modules\n  const availableModules = [\n    {\n      id: 'dcf',\n      name: 'DCF Analysis',\n      icon: Calculator,\n      description: 'Discounted Cash Flow valuation',\n      color: 'blue',\n      isPrimary: true\n    },\n    {\n      id: 'comparables',\n      name: 'Comparable Analysis',\n      icon: BarChart3,\n      description: 'Peer comparison analysis',\n      color: 'green',\n      isPrimary: true\n    },\n    {\n      id: 'lbo',\n      name: 'LBO Analysis',\n      icon: Target,\n      description: 'Leveraged buyout modeling',\n      color: 'purple',\n      isPrimary: false\n    }\n  ];\n\n  // Handle company selection with intelligent data population\n  const handleCompanySelect = useCallback(async (company) => {\n    setSelectedCompany(company);\n    setCanvasMode('analysis');\n    \n    // Populate with intelligent defaults based on company data\n    if (company.financials?.revenue) {\n      const latestRevenue = company.financials.revenue[company.financials.revenue.length - 1];\n      const growthRates = calculateHistoricalGrowthRates(company.financials.revenue);\n      \n      setAnalysisInputs(prev => ({\n        ...prev,\n        dcf: {\n          ...prev.dcf,\n          currentRevenue: latestRevenue,\n          yearlyData: generateIntelligentDefaults(growthRates, company.sector)\n        }\n      }));\n    }\n\n    // Auto-activate primary modules\n    setActiveModules(['dcf']);\n  }, []);\n\n  // Calculate historical growth rates for intelligent defaults\n  const calculateHistoricalGrowthRates = (revenueData) => {\n    if (!revenueData || revenueData.length < 2) return [];\n    \n    const growthRates = [];\n    for (let i = 1; i < revenueData.length; i++) {\n      const growth = ((revenueData[i] - revenueData[i-1]) / revenueData[i-1]) * 100;\n      growthRates.push(growth);\n    }\n    \n    return growthRates;\n  };\n\n  // Generate intelligent defaults based on historical data and sector\n  const generateIntelligentDefaults = (historicalGrowth, sector) => {\n    const avgGrowth = historicalGrowth.length > 0 \n      ? historicalGrowth.reduce((a, b) => a + b, 0) / historicalGrowth.length \n      : 10;\n\n    const sectorDefaults = getSectorDefaults(sector);\n    \n    const yearlyData = {};\n    for (let year = 1; year <= 5; year++) {\n      // Declining growth model\n      const yearGrowth = Math.max(avgGrowth * (1 - (year - 1) * 0.1), sectorDefaults.terminalGrowth);\n      \n      yearlyData[year] = {\n        revenueGrowth: yearGrowth,\n        ebitdaMargin: sectorDefaults.ebitdaMargin,\n        taxRate: sectorDefaults.taxRate,\n        capexPercent: sectorDefaults.capexPercent,\n        daPercent: sectorDefaults.daPercent,\n        workingCapitalChange: sectorDefaults.workingCapitalChange\n      };\n    }\n    \n    return yearlyData;\n  };\n\n  // Sector-specific defaults\n  const getSectorDefaults = (sector) => {\n    const defaults = {\n      'Technology': {\n        ebitdaMargin: 25,\n        taxRate: 21,\n        capexPercent: 3,\n        daPercent: 5,\n        workingCapitalChange: 1,\n        terminalGrowth: 3\n      },\n      'Healthcare': {\n        ebitdaMargin: 20,\n        taxRate: 25,\n        capexPercent: 4,\n        daPercent: 4,\n        workingCapitalChange: 2,\n        terminalGrowth: 2.5\n      },\n      default: {\n        ebitdaMargin: 18,\n        taxRate: 25,\n        capexPercent: 5,\n        daPercent: 4,\n        workingCapitalChange: 2,\n        terminalGrowth: 2.5\n      }\n    };\n\n    return defaults[sector] || defaults.default;\n  };\n\n  // Add analysis module to canvas\n  const addModule = (moduleId) => {\n    if (!activeModules.includes(moduleId)) {\n      setActiveModules(prev => [...prev, moduleId]);\n    }\n  };\n\n  // Remove module from canvas\n  const removeModule = (moduleId) => {\n    setActiveModules(prev => prev.filter(id => id !== moduleId));\n    if (focusedModule === moduleId) {\n      setFocusedModule(null);\n      setCanvasMode('analysis');\n    }\n  };\n\n  // Focus on specific module\n  const focusModule = (moduleId) => {\n    setFocusedModule(moduleId);\n    setCanvasMode('focused');\n  };\n\n  // Update analysis inputs with real-time calculation\n  const updateAnalysisInputs = useCallback((moduleId, newInputs) => {\n    setAnalysisInputs(prev => ({\n      ...prev,\n      [moduleId]: { ...prev[moduleId], ...newInputs }\n    }));\n\n    // Trigger real-time calculation\n    if (moduleId === 'dcf') {\n      const results = calculateEnhancedDCF({ ...analysisInputs.dcf, ...newInputs });\n      setAnalysisResults(prev => ({ ...prev, dcf: results }));\n    }\n  }, [analysisInputs]);\n\n  // Canvas layout variants\n  const canvasVariants = {\n    overview: {\n      scale: 1,\n      y: 0,\n      transition: springConfig\n    },\n    analysis: {\n      scale: 1,\n      y: 0,\n      transition: springConfig\n    },\n    focused: {\n      scale: 1.02,\n      y: -20,\n      transition: springConfig\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-50 to-white\">\n      {/* Minimal Header - Deference to Content */}\n      <div className=\"sticky top-0 z-50 bg-white/80 backdrop-blur-md border-b border-gray-100\">\n        <div className=\"max-w-7xl mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            {selectedCompany ? (\n              <div className=\"flex items-center space-x-4\">\n                <button\n                  onClick={() => {\n                    setSelectedCompany(null);\n                    setCanvasMode('overview');\n                    setActiveModules([]);\n                  }}\n                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n                >\n                  <Minimize2 size={20} />\n                </button>\n                <div>\n                  <h1 className=\"text-2xl font-light text-gray-900\">\n                    {selectedCompany.name}\n                  </h1>\n                  <p className=\"text-sm text-gray-500\">\n                    {selectedCompany.sector} • {selectedCompany.ticker}\n                  </p>\n                </div>\n              </div>\n            ) : (\n              <h1 className=\"text-2xl font-light text-gray-900\">\n                Analysis Canvas\n              </h1>\n            )}\n\n            {/* Canvas Mode Controls */}\n            {selectedCompany && (\n              <div className=\"flex items-center space-x-2\">\n                <button\n                  onClick={() => setCanvasMode('analysis')}\n                  className={`px-3 py-1.5 text-sm rounded-full transition-all ${\n                    canvasMode === 'analysis'\n                      ? 'bg-blue-100 text-blue-700'\n                      : 'text-gray-500 hover:text-gray-700'\n                  }`}\n                >\n                  Analysis\n                </button>\n                {focusedModule && (\n                  <button\n                    onClick={() => setCanvasMode('focused')}\n                    className={`px-3 py-1.5 text-sm rounded-full transition-all ${\n                      canvasMode === 'focused'\n                        ? 'bg-blue-100 text-blue-700'\n                        : 'text-gray-500 hover:text-gray-700'\n                    }`}\n                  >\n                    Focus\n                  </button>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Main Canvas */}\n      <motion.div\n        variants={canvasVariants}\n        animate={canvasMode}\n        className=\"max-w-7xl mx-auto px-6 py-8\"\n      >\n        <AnimatePresence mode=\"wait\">\n          {!selectedCompany ? (\n            /* Company Selection State */\n            <motion.div\n              key=\"company-selection\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={springConfig}\n              className=\"text-center py-12\"\n            >\n              <div className=\"max-w-2xl mx-auto\">\n                <div className=\"mb-8\">\n                  <div className=\"inline-flex items-center justify-center w-16 h-16 bg-blue-50 rounded-full mb-4\">\n                    <Search className=\"w-8 h-8 text-blue-600\" />\n                  </div>\n                  <h2 className=\"text-3xl font-light text-gray-900 mb-3\">\n                    Begin Your Analysis\n                  </h2>\n                  <p className=\"text-lg text-gray-600\">\n                    Select a company to start building your financial model\n                  </p>\n                </div>\n\n                <CompanySelector onCompanySelect={handleCompanySelect} />\n              </div>\n            </motion.div>\n          ) : canvasMode === 'focused' && focusedModule ? (\n            /* Focused Module State */\n            <motion.div\n              key=\"focused-module\"\n              initial={{ opacity: 0, scale: 0.95 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.95 }}\n              transition={springConfig}\n              className=\"space-y-6\"\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <button\n                    onClick={() => setCanvasMode('analysis')}\n                    className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n                  >\n                    <ChevronRight className=\"w-5 h-5 rotate-180\" />\n                  </button>\n                  <h2 className=\"text-2xl font-light text-gray-900\">\n                    {availableModules.find(m => m.id === focusedModule)?.name}\n                  </h2>\n                </div>\n                <button\n                  onClick={() => removeModule(focusedModule)}\n                  className=\"text-gray-400 hover:text-red-500 transition-colors\"\n                >\n                  Remove\n                </button>\n              </div>\n\n              <AnalysisModule\n                moduleId={focusedModule}\n                companyData={selectedCompany}\n                inputs={analysisInputs[focusedModule]}\n                results={analysisResults[focusedModule]}\n                onInputChange={(newInputs) => updateAnalysisInputs(focusedModule, newInputs)}\n                isFullscreen={true}\n              />\n            </motion.div>\n          ) : (\n            /* Analysis Canvas State */\n            <motion.div\n              key=\"analysis-canvas\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={springConfig}\n              className=\"space-y-8\"\n            >\n              {/* Company Overview Section */}\n              <CompanyOverview \n                company={selectedCompany}\n                compact={activeModules.length > 0}\n              />\n\n              {/* Analysis Modules Grid */}\n              {activeModules.length > 0 && (\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                  {activeModules.map(moduleId => (\n                    <motion.div\n                      key={moduleId}\n                      initial={{ opacity: 0, scale: 0.9 }}\n                      animate={{ opacity: 1, scale: 1 }}\n                      exit={{ opacity: 0, scale: 0.9 }}\n                      transition={springConfig}\n                      className=\"bg-white rounded-2xl shadow-sm border border-gray-100 overflow-hidden hover:shadow-md transition-shadow duration-300\"\n                    >\n                      <AnalysisModule\n                        moduleId={moduleId}\n                        companyData={selectedCompany}\n                        inputs={analysisInputs[moduleId]}\n                        results={analysisResults[moduleId]}\n                        onInputChange={(newInputs) => updateAnalysisInputs(moduleId, newInputs)}\n                        onFocus={() => focusModule(moduleId)}\n                        onRemove={() => removeModule(moduleId)}\n                        isCompact={true}\n                      />\n                    </motion.div>\n                  ))}\n                </div>\n              )}\n\n              {/* Available Modules */}\n              <div className=\"border-t border-gray-100 pt-8\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                  Available Analysis Tools\n                </h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  {availableModules\n                    .filter(module => !activeModules.includes(module.id))\n                    .map(module => {\n                      const Icon = module.icon;\n                      return (\n                        <motion.button\n                          key={module.id}\n                          onClick={() => addModule(module.id)}\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          className=\"p-6 bg-white rounded-xl border border-gray-200 hover:border-gray-300 transition-all duration-200 text-left group\"\n                        >\n                          <div className={`inline-flex items-center justify-center w-12 h-12 bg-${module.color}-50 rounded-lg mb-3 group-hover:bg-${module.color}-100 transition-colors`}>\n                            <Icon className={`w-6 h-6 text-${module.color}-600`} />\n                          </div>\n                          <h4 className=\"font-medium text-gray-900 mb-1\">\n                            {module.name}\n                          </h4>\n                          <p className=\"text-sm text-gray-600\">\n                            {module.description}\n                          </p>\n                        </motion.button>\n                      );\n                    })}\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default AnalysisCanvas;","import React, { useState } from 'react';\nimport { Card } from '../ui/Card';\nimport Button from '../ui/Button';\nimport Icon from '../AppIcon';\nimport SEOHead from '../SEO/SEOHead';\nimport EnhancedDCFTool from './EnhancedDCFTool';\nimport LivingModelDCF from './LivingModelDCF';\nimport AnalysisCanvas from '../AnalysisCanvas/AnalysisCanvas';\n\nconst ValuationTool = () => {\n  const [activeView, setActiveView] = useState('overview'); // 'overview', 'dcf', 'living-dcf', 'lbo', 'comp', 'canvas'\n\n  if (activeView === 'dcf') {\n    return <EnhancedDCFTool onBack={() => setActiveView('overview')} />;\n  }\n\n  if (activeView === 'living-dcf') {\n    return <LivingModelDCF onBack={() => setActiveView('overview')} />;\n  }\n\n  if (activeView === 'canvas') {\n    return <AnalysisCanvas />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white p-6\">\n      <SEOHead\n        title=\"Valuation Tool | FinanceAnalyst Pro\"\n        description=\"Professional DCF analysis, LBO modeling, and comparative valuation tools for investment professionals and analysts.\"\n        canonical=\"/valuation-tool\"\n        keywords=\"valuation tool, DCF analysis, LBO model, comparable company analysis, investment valuation, financial analysis\"\n      />\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\">Valuation Tool</h1>\n          <p className=\"text-gray-400\">\n            Professional valuation models and analysis tools\n          </p>\n        </div>\n\n        {/* Featured Living Model */}\n        <div className=\"mb-8\">\n          <Card className=\"bg-gradient-to-r from-emerald-900 to-teal-900 border-emerald-700\">\n            <div className=\"p-8\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"flex items-center mb-4\">\n                    <Icon name=\"Zap\" className=\"w-10 h-10 text-emerald-300 mr-4\" />\n                    <h2 className=\"text-2xl font-bold text-white\">The Living Model</h2>\n                    <div className=\"ml-3 px-2 py-1 bg-emerald-600 text-emerald-100 text-xs font-semibold rounded-full\">\n                      NEW\n                    </div>\n                  </div>\n                  <p className=\"text-emerald-100 mb-6 text-lg leading-relaxed\">\n                    Experience financial modeling transformed. Real-time data integration, instantaneous calculations, and fluid time period adjustments create a living, breathing analysis that evolves with every input change.\n                  </p>\n                  <div className=\"flex flex-wrap gap-3 mb-6\">\n                    <span className=\"px-3 py-1 bg-emerald-800/50 text-emerald-200 rounded-full text-sm\">\n                      Real-Time Data Feeds\n                    </span>\n                    <span className=\"px-3 py-1 bg-emerald-800/50 text-emerald-200 rounded-full text-sm\">\n                      Instantaneous Calculations\n                    </span>\n                    <span className=\"px-3 py-1 bg-emerald-800/50 text-emerald-200 rounded-full text-sm\">\n                      Dynamic Time Periods\n                    </span>\n                    <span className=\"px-3 py-1 bg-emerald-800/50 text-emerald-200 rounded-full text-sm\">\n                      No \"Run\" Button\n                    </span>\n                  </div>\n                  <Button \n                    className=\"bg-white text-emerald-900 hover:bg-emerald-50 font-semibold px-8 py-3\"\n                    onClick={() => setActiveView('living-dcf')}\n                  >\n                    Experience The Living Model\n                  </Button>\n                </div>\n                <div className=\"hidden lg:block\">\n                  <div className=\"w-32 h-32 bg-emerald-800/30 rounded-2xl flex items-center justify-center relative\">\n                    <Icon name=\"Activity\" className=\"w-16 h-16 text-emerald-300\" />\n                    <div className=\"absolute inset-0 rounded-2xl bg-emerald-400/20 animate-pulse\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Featured Analysis Canvas */}\n        <div className=\"mb-8\">\n          <Card className=\"bg-gradient-to-r from-blue-900 to-indigo-900 border-blue-700\">\n            <div className=\"p-8\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"flex items-center mb-4\">\n                    <Icon name=\"Sparkles\" className=\"w-10 h-10 text-blue-300 mr-4\" />\n                    <h2 className=\"text-2xl font-bold text-white\">Analysis Canvas</h2>\n                  </div>\n                  <p className=\"text-blue-100 mb-6 text-lg leading-relaxed\">\n                    A unified workspace that reimagines financial analysis. Start with any company and seamlessly flow between DCF modeling, comparable analysis, and scenario planning—all in one integrated environment.\n                  </p>\n                  <div className=\"flex flex-wrap gap-3 mb-6\">\n                    <span className=\"px-3 py-1 bg-blue-800/50 text-blue-200 rounded-full text-sm\">\n                      Company-Centric Workflow\n                    </span>\n                    <span className=\"px-3 py-1 bg-blue-800/50 text-blue-200 rounded-full text-sm\">\n                      Intelligent Defaults\n                    </span>\n                    <span className=\"px-3 py-1 bg-blue-800/50 text-blue-200 rounded-full text-sm\">\n                      Interactive Analysis\n                    </span>\n                    <span className=\"px-3 py-1 bg-blue-800/50 text-blue-200 rounded-full text-sm\">\n                      Minimal Design\n                    </span>\n                  </div>\n                  <Button \n                    className=\"bg-white text-blue-900 hover:bg-blue-50 font-semibold px-8 py-3\"\n                    onClick={() => setActiveView('canvas')}\n                  >\n                    Enter Analysis Canvas\n                  </Button>\n                </div>\n                <div className=\"hidden lg:block\">\n                  <div className=\"w-32 h-32 bg-blue-800/30 rounded-2xl flex items-center justify-center\">\n                    <Icon name=\"BarChart3\" className=\"w-16 h-16 text-blue-300\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          <Card className=\"bg-gray-800 border-gray-700 relative overflow-hidden\">\n            <div className=\"absolute top-0 right-0 w-20 h-20 bg-emerald-500/10 rounded-full -translate-y-10 translate-x-10\"></div>\n            <div className=\"p-6 relative\">\n              <div className=\"flex items-center mb-4\">\n                <Icon name=\"Zap\" className=\"w-8 h-8 text-emerald-400 mr-3\" />\n                <h3 className=\"text-xl font-semibold\">Living Model DCF</h3>\n                <div className=\"ml-2 px-2 py-1 bg-emerald-600 text-emerald-100 text-xs font-semibold rounded-full\">\n                  NEW\n                </div>\n              </div>\n              <p className=\"text-gray-400 mb-4\">\n                Real-time, reactive DCF modeling with live data feeds and instantaneous calculations. No more \"run\" buttons—watch your model come alive.\n              </p>\n              <Button \n                className=\"w-full bg-emerald-600 hover:bg-emerald-700\"\n                onClick={() => setActiveView('living-dcf')}\n              >\n                Experience The Living Model\n              </Button>\n            </div>\n          </Card>\n\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <Icon name=\"TrendingUp\" className=\"w-8 h-8 text-blue-400 mr-3\" />\n                <h3 className=\"text-xl font-semibold\">Enhanced DCF Analysis</h3>\n              </div>\n              <p className=\"text-gray-400 mb-4\">\n                Professional DCF modeling with year-by-year projections, sensitivity analysis, and detailed financial statements\n              </p>\n              <Button \n                className=\"w-full\"\n                onClick={() => setActiveView('dcf')}\n              >\n                Launch Enhanced DCF Tool\n              </Button>\n            </div>\n          </Card>\n\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <Icon name=\"BarChart3\" className=\"w-8 h-8 text-green-400 mr-3\" />\n                <h3 className=\"text-xl font-semibold\">Comparable Analysis</h3>\n              </div>\n              <p className=\"text-gray-400 mb-4\">\n                Peer comparison and relative valuation metrics\n              </p>\n              <Button className=\"w-full\" disabled>\n                Coming Soon\n              </Button>\n            </div>\n          </Card>\n\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <Icon name=\"Calculator\" className=\"w-8 h-8 text-purple-400 mr-3\" />\n                <h3 className=\"text-xl font-semibold\">LBO Analysis</h3>\n              </div>\n              <p className=\"text-gray-400 mb-4\">\n                Leveraged buyout modeling and returns analysis\n              </p>\n              <Button className=\"w-full\" disabled>\n                Coming Soon\n              </Button>\n            </div>\n          </Card>\n        </div>\n\n        <div className=\"mt-8\">\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <div className=\"p-6\">\n              <h3 className=\"text-xl font-semibold mb-4\">Enhanced DCF Features</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <h4 className=\"font-semibold text-blue-400 mb-2\">Year-by-Year Modeling</h4>\n                  <ul className=\"text-gray-400 text-sm space-y-1\">\n                    <li>• Individual assumptions for each projection year</li>\n                    <li>• Revenue growth, margins, tax rates, and capex</li>\n                    <li>• Working capital and D&A projections</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-green-400 mb-2\">Professional Calculations</h4>\n                  <ul className=\"text-gray-400 text-sm space-y-1\">\n                    <li>• Proper Unlevered Free Cash Flow calculation</li>\n                    <li>• Enterprise to Equity value bridge</li>\n                    <li>• Balance sheet integration</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-purple-400 mb-2\">Advanced Analytics</h4>\n                  <ul className=\"text-gray-400 text-sm space-y-1\">\n                    <li>• WACC and terminal growth sensitivity analysis</li>\n                    <li>• Interactive projection tables</li>\n                    <li>• Cash flow visualization charts</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-orange-400 mb-2\">User Experience</h4>\n                  <ul className=\"text-gray-400 text-sm space-y-1\">\n                    <li>• Simple and detailed input modes</li>\n                    <li>• Real-time calculation updates</li>\n                    <li>• Export capabilities</li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"mt-6\">\n                <Button \n                  className=\"bg-blue-600 hover:bg-blue-700\"\n                  onClick={() => setActiveView('dcf')}\n                >\n                  Try Enhanced DCF Tool\n                </Button>\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        <div className=\"mt-8\">\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <div className=\"p-6\">\n              <h3 className=\"text-xl font-semibold mb-4\">Quick Access Terminal</h3>\n              <p className=\"text-gray-400 mb-4\">\n                Use the enhanced terminal interface for advanced valuation commands:\n              </p>\n              <div className=\"bg-gray-900 rounded-lg p-4 font-mono text-sm\">\n                <div className=\"text-green-400\">$ DCF(AAPL)</div>\n                <div className=\"text-green-400\">$ LBO(TSLA)</div>\n                <div className=\"text-green-400\">$ COMP(MSFT)</div>\n                <div className=\"text-green-400\">$ HELP(\"VALUATION\")</div>\n              </div>\n              <div className=\"mt-4\">\n                <Button disabled>\n                  Terminal Interface - Coming Soon\n                </Button>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ValuationTool;\n"],"names":["DCFInputs","inputs","setInputs","viewMode","setViewMode","useState","handleChange","field","value","prev","parseFloat","handleYearlyChange","year","yearlyData","updatedYearlyData","handleBalanceSheetChange","balanceSheet","useEffect","projectionYears","initialYearlyData","revenueGrowth","revenueGrowthRate","ebitdaMargin","taxRate","capexPercent","workingCapitalChange","workingCapitalPercent","daPercent","cash","totalDebt","sharesOutstanding","jsxs","className","children","jsx","onClick","htmlFor","id","type","currentRevenue","onChange","e","target","step","terminalGrowthRate","discountRate","min","max","years","Array","from","length","_","i","map","renderDetailedView","EnhancedDCFTool","onBack","results","setResults","sensitivityResults","setSensitivityResults","activeTab","setActiveTab","loading","setLoading","timer","setTimeout","calculateDCF","clearTimeout","async","dcfResults","calculateEnhancedDCF","sensitivity","calculateSensitivityAnalysis","error","formatCurrency","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercent","toFixed","tabs","name","icon","Calculator","TrendingUp","BarChart3","AlertCircle","ArrowLeft","tab","Icon","motion","div","initial","opacity","y","animate","Fragment","enterpriseValue","equityValue","impliedSharePrice","presentValueTerminal","projectionTable","row","index","revenue","ebitda","ebit","nopat","capex","deltaWorkingCapital","freeCashFlow","cumulativePV","netDebt","ResponsiveContainer","width","height","LineChart","data","freeCashFlows","presentValue","presentValues","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","tickFormatter","notation","Tooltip","formatter","Legend","Line","stroke","strokeWidth","matrix","waccRange","terminalGrowthRange","rate","rowIndex","cell","cellIndex","isBaseCase","Math","floor","sharePrice","renderSensitivityTable","Download","DynamicTimePeriodControl","initialYears","minYears","maxYears","onYearsChange","setYears","isDragging","setIsDragging","dragStartX","setDragStartX","dragStartYears","setDragStartYears","handleYearsChange","useCallback","newYears","clampedYears","round","handleMouseDown","preventDefault","clientX","document","body","cursor","handleMouseMove","deltaX","handleMouseUp","addEventListener","removeEventListener","Card","left","onMouseDown","markers","percentage","push","getTimelineMarkers","parseInt","background","filter","quickYears","LivingModelDCF","symbol","modelId","Date","now","result","setResult","isLoading","setIsLoading","setError","realTimeData","setRealTimeData","lastUpdateTime","setLastUpdateTime","modelRef","useRef","trackRealTime","model","reactiveCalculationEngine","createReactiveModel","newResult","newInputs","calcError","current","addDependency","destroy","subscriptions","dataType","realTimeDataService","subscribeMultiple","callback","updateInput","path","updated","keys","split","updateYearlyData","handleProjectionYearsChange","Object","prevYear","pop","forEach","toggleRealTimeTracking","newValue","decimals","absValue","abs","getRealTimeIndicator","price","yield","volatility","Button","size","toLocaleTimeString","Input","toUpperCase","placeholder","message","terminalValue","CompanySelector","onCompanySelect","searchTerm","setSearchTerm","suggestions","setSuggestions","isSearching","setIsSearching","mockCompanies","ticker","sector","marketCap","change","changePercent","financials","filtered","company","toLowerCase","includes","handleCompanySelect","Search","AnimatePresence","exit","button","whileHover","backgroundColor","Building2","transition","delay","slice","scale","whileTap","CompanyOverview","compact","chartData","latest","previous","calculateGrowth","Calendar","axisLine","tickLine","tick","fontSize","fill","dot","r","activeDot","DollarSign","AnalysisModule","moduleId","companyData","onInputChange","onFocus","onRemove","isCompact","isFullscreen","activeInputTab","setActiveInputTab","config","dcf","color","description","comparables","lbo","Target","InteractiveSlider","label","suffix","layout","handleInputChange","handleYearlyInputChange","useMemo","fcf","pv","Maximize2","X","labelStyle","Percent","contentStyle","border","borderRadius","renderDCFContent","renderModuleContent","springConfig","stiffness","damping","AnalysisCanvas","selectedCompany","setSelectedCompany","activeModules","setActiveModules","canvasMode","setCanvasMode","focusedModule","setFocusedModule","setCompanyData","profile","marketData","consensus","analysisInputs","setAnalysisInputs","analysisResults","setAnalysisResults","availableModules","isPrimary","latestRevenue","growthRates","calculateHistoricalGrowthRates","generateIntelligentDefaults","revenueData","growth","historicalGrowth","avgGrowth","reduce","a","b","sectorDefaults","getSectorDefaults","yearGrowth","terminalGrowth","defaults","Technology","Healthcare","default","removeModule","updateAnalysisInputs","canvasVariants","overview","analysis","focused","Minimize2","variants","mode","ChevronRight","find","m","focusModule","module","addModule","ValuationTool","activeView","setActiveView","SEOHead","title","canonical","keywords","disabled"],"mappings":"4tBAEA,MAAMA,EAAY,EAAGC,SAAQC,gBAC3B,MAAOC,EAAUC,GAAeC,EAAAA,SAAS,UAEnCC,EAAe,CAACC,EAAOC,KAC3BN,EAAUO,QAAcA,EAAMF,CAACA,GAAQG,WAAWF,IAAU,MAGxDG,EAAqB,CAACC,EAAML,EAAOC,KACvC,MAAMK,EAAaZ,EAAOY,YAAc,CAAA,EAClCC,EAAoB,IACrBD,EACHD,CAACA,GAAO,IACHC,EAAWD,GACdL,CAACA,GAAQG,WAAWF,IAAU,IAGlCN,UAAwBO,EAAMI,WAAYC,MAGtCC,EAA2B,CAACR,EAAOC,KACvC,MAAMQ,EAAef,EAAOe,cAAgB,CAAA,EAC5Cd,EAAUO,IAAA,IACLA,EACHO,aAAc,IACTA,EACHT,CAACA,GAAQG,WAAWF,IAAU,OAMpCS,EAAAA,UAAU,KACR,GAAIhB,EAAOiB,kBAAoBjB,EAAOY,WAAY,CAChD,MAAMM,EAAoB,CAAA,EAC1B,IAAA,IAASP,EAAO,EAAGA,GAAQX,EAAOiB,gBAAiBN,IACjDO,EAAkBP,GAAQ,CACxBQ,cAA0C,IAA3BnB,EAAOoB,mBAA2B,GACjDC,aAAoC,IAAtBrB,EAAOqB,cAAsB,GAC3CC,QAA0B,IAAjBtB,EAAOsB,SAAiB,GACjCC,aAAoC,IAAtBvB,EAAOuB,cAAsB,EAC3CC,qBAAqD,IAA/BxB,EAAOyB,uBAA+B,EAC5DC,UAAW,GAGfzB,UAAwBO,EAAMI,WAAYM,IAC5C,GACC,CAAClB,EAAOiB,gBAAiBjB,EAAOY,WAAYX,IAG/Ce,EAAAA,UAAU,KACHhB,EAAOe,cACVd,EAAUO,IAAA,IACLA,EACHO,aAAc,CACZY,KAAM,IACNC,UAAW,IACXC,kBAAmB,SAIxB,CAAC7B,EAAOe,aAAcd,IAiTzB,OACE6B,EAAAA,KAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,sCAAsCC,SAAA,0BACpDF,EAAAA,KAAC,MAAA,CAAIC,UAAU,iBACbC,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACCC,QAAS,IAAM/B,EAAY,UAC3B4B,UAAW,mDACI,WAAb7B,EACI,yBACA,+CAEP8B,SAAA,WAGDC,EAAAA,IAAC,SAAA,CACCC,QAAS,IAAM/B,EAAY,YAC3B4B,UAAW,mDACI,aAAb7B,EACI,yBACA,+CAEP8B,SAAA,mBAMS,WAAb9B,EA1UH4B,OAAC,MAAA,CAAIC,UAAU,wCACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAC,MAAC,QAAA,CAAME,QAAQ,iBAAiBJ,UAAU,+CAA+CC,SAAA,wBAGzFC,EAAAA,IAAC,QAAA,CACCG,GAAG,iBACHC,KAAK,SACL9B,MAAOP,EAAOsC,gBAAkB,EAChCC,SAAWC,GAAMnC,EAAa,iBAAkBmC,EAAEC,OAAOlC,OACzDwB,UAAU,2HAIb,MAAA,CACCC,SAAA,CAAAC,MAAC,QAAA,CAAME,QAAQ,oBAAoBJ,UAAU,+CAA+CC,SAAA,4BAG5FC,EAAAA,IAAC,QAAA,CACCG,GAAG,oBACHC,KAAK,SACLK,KAAK,OACLnC,MAAyC,KAAjCP,EAAOoB,mBAAqB,GACpCmB,SAAWC,GAAMnC,EAAa,oBAAqBmC,EAAEC,OAAOlC,MAAQ,KACpEwB,UAAU,2HAIb,MAAA,CACCC,SAAA,CAAAC,MAAC,QAAA,CAAME,QAAQ,eAAeJ,UAAU,+CAA+CC,SAAA,sBAGvFC,EAAAA,IAAC,QAAA,CACCG,GAAG,eACHC,KAAK,SACLK,KAAK,OACLnC,MAAoC,KAA5BP,EAAOqB,cAAgB,GAC/BkB,SAAWC,GAAMnC,EAAa,eAAgBmC,EAAEC,OAAOlC,MAAQ,KAC/DwB,UAAU,2HAIb,MAAA,CACCC,SAAA,CAAAC,MAAC,QAAA,CAAME,QAAQ,UAAUJ,UAAU,+CAA+CC,SAAA,iBAGlFC,EAAAA,IAAC,QAAA,CACCG,GAAG,UACHC,KAAK,SACLK,KAAK,OACLnC,MAA+B,KAAvBP,EAAOsB,SAAW,GAC1BiB,SAAWC,GAAMnC,EAAa,UAAWmC,EAAEC,OAAOlC,MAAQ,KAC1DwB,UAAU,2HAIb,MAAA,CACCC,SAAA,CAAAC,MAAC,QAAA,CAAME,QAAQ,qBAAqBJ,UAAU,+CAA+CC,SAAA,6BAG7FC,EAAAA,IAAC,QAAA,CACCG,GAAG,qBACHC,KAAK,SACLK,KAAK,OACLnC,MAA0C,KAAlCP,EAAO2C,oBAAsB,GACrCJ,SAAWC,GAAMnC,EAAa,qBAAsBmC,EAAEC,OAAOlC,MAAQ,KACrEwB,UAAU,2HAIb,MAAA,CACCC,SAAA,CAAAC,MAAC,QAAA,CAAME,QAAQ,eAAeJ,UAAU,+CAA+CC,SAAA,6BAGvFC,EAAAA,IAAC,QAAA,CACCG,GAAG,eACHC,KAAK,SACLK,KAAK,OACLnC,MAAoC,KAA5BP,EAAO4C,cAAgB,GAC/BL,SAAWC,GAAMnC,EAAa,eAAgBmC,EAAEC,OAAOlC,MAAQ,KAC/DwB,UAAU,2HAIb,MAAA,CACCC,SAAA,CAAAC,MAAC,QAAA,CAAME,QAAQ,kBAAkBJ,UAAU,+CAA+CC,SAAA,qBAG1FC,EAAAA,IAAC,QAAA,CACCG,GAAG,kBACHC,KAAK,SACLQ,IAAI,IACJC,IAAI,KACJvC,MAAOP,EAAOiB,iBAAmB,EACjCsB,SAAWC,GAAMnC,EAAa,kBAAmBmC,EAAEC,OAAOlC,OAC1DwB,UAAU,uHAMS,MACzB,MAAMgB,EAAQC,MAAMC,KAAK,CAAEC,OAAQlD,EAAOiB,iBAAmB,GAAK,CAACkC,EAAGC,IAAMA,EAAI,GAC1ExC,EAAaZ,EAAOY,YAAc,CAAA,EAClCG,EAAef,EAAOe,cAAgB,CAAA,EAE5C,OACEe,EAAAA,KAAC,MAAA,CAAIC,UAAU,YAEbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,4BACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,2CAA2CC,SAAA,wBACzDF,EAAAA,KAAC,MAAA,CAAIC,UAAU,wCACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,wBAGhEC,EAAAA,IAAC,QAAA,CACCI,KAAK,SACL9B,MAAOP,EAAOsC,gBAAkB,EAChCC,SAAWC,GAAMnC,EAAa,iBAAkBmC,EAAEC,OAAOlC,OACzDwB,UAAU,2HAGb,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,6BAGhEC,EAAAA,IAAC,QAAA,CACCI,KAAK,SACLK,KAAK,OACLnC,MAA0C,KAAlCP,EAAO2C,oBAAsB,GACrCJ,SAAWC,GAAMnC,EAAa,qBAAsBmC,EAAEC,OAAOlC,MAAQ,KACrEwB,UAAU,2HAGb,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,6BAGhEC,EAAAA,IAAC,QAAA,CACCI,KAAK,SACLK,KAAK,OACLnC,MAAoC,KAA5BP,EAAO4C,cAAgB,GAC/BL,SAAWC,GAAMnC,EAAa,eAAgBmC,EAAEC,OAAOlC,MAAQ,KAC/DwB,UAAU,0HAOlBD,EAAAA,KAAC,MAAA,CAAIC,UAAU,6DACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,gDACbC,SAAAC,EAAAA,IAAC,MAAGF,UAAU,sCAAsCC,wCAErD,MAAA,CAAID,UAAU,kBACbC,SAAAF,EAAAA,KAAC,QAAA,CAAMC,UAAU,sCACfC,SAAA,CAAAC,MAAC,QAAA,CAAMF,UAAU,aACfC,SAAAF,EAAAA,KAAC,KAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,iFAAiFC,SAAA,WAG9Fe,EAAMM,IAAI1C,GACTmB,EAAAA,KAAC,KAAA,CAAcC,UAAU,mFAAmFC,SAAA,CAAA,QACpGrB,IADCA,SAMfmB,EAAAA,KAAC,QAAA,CAAMC,UAAU,oCACfC,SAAA,CAAAF,OAAC,KAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,8CAA8CC,SAAA,uBAC3De,EAAMM,IAAI1C,GACTsB,EAAAA,IAAC,KAAA,CAAcF,UAAU,YACvBC,SAAAC,EAAAA,IAAC,QAAA,CACCI,KAAK,SACLK,KAAK,MACLnC,MAAOK,EAAWD,IAAOQ,eAAiB,EAC1CoB,SAAWC,GAAM9B,EAAmBC,EAAM,gBAAiB6B,EAAEC,OAAOlC,OACpEwB,UAAU,uHANLpB,OAWbmB,EAAAA,KAAC,KAAA,CAAGC,UAAU,aACZC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,8CAA8CC,SAAA,sBAC3De,EAAMM,IAAI1C,GACTsB,EAAAA,IAAC,KAAA,CAAcF,UAAU,YACvBC,SAAAC,EAAAA,IAAC,QAAA,CACCI,KAAK,SACLK,KAAK,MACLnC,MAAOK,EAAWD,IAAOU,cAAgB,EACzCkB,SAAWC,GAAM9B,EAAmBC,EAAM,eAAgB6B,EAAEC,OAAOlC,OACnEwB,UAAU,uHANLpB,cAWZ,KAAA,CACCqB,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,8CAA8CC,SAAA,iBAC3De,EAAMM,IAAI1C,GACTsB,EAAAA,IAAC,KAAA,CAAcF,UAAU,YACvBC,SAAAC,EAAAA,IAAC,QAAA,CACCI,KAAK,SACLK,KAAK,MACLnC,MAAOK,EAAWD,IAAOW,SAAW,EACpCiB,SAAWC,GAAM9B,EAAmBC,EAAM,UAAW6B,EAAEC,OAAOlC,OAC9DwB,UAAU,uHANLpB,OAWbmB,EAAAA,KAAC,KAAA,CAAGC,UAAU,aACZC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,8CAA8CC,SAAA,yBAC3De,EAAMM,IAAI1C,GACTsB,EAAAA,IAAC,KAAA,CAAcF,UAAU,YACvBC,SAAAC,EAAAA,IAAC,QAAA,CACCI,KAAK,SACLK,KAAK,MACLnC,MAAOK,EAAWD,IAAOY,cAAgB,EACzCgB,SAAWC,GAAM9B,EAAmBC,EAAM,eAAgB6B,EAAEC,OAAOlC,OACnEwB,UAAU,uHANLpB,cAWZ,KAAA,CACCqB,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,8CAA8CC,SAAA,uBAC3De,EAAMM,IAAI1C,GACTsB,EAAAA,IAAC,KAAA,CAAcF,UAAU,YACvBC,SAAAC,EAAAA,IAAC,QAAA,CACCI,KAAK,SACLK,KAAK,MACLnC,MAAOK,EAAWD,IAAOe,WAAa,EACtCa,SAAWC,GAAM9B,EAAmBC,EAAM,YAAa6B,EAAEC,OAAOlC,OAChEwB,UAAU,uHANLpB,OAWbmB,EAAAA,KAAC,KAAA,CAAGC,UAAU,aACZC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,8CAA8CC,SAAA,iCAC3De,EAAMM,IAAI1C,GACTsB,EAAAA,IAAC,KAAA,CAAcF,UAAU,YACvBC,SAAAC,EAAAA,IAAC,QAAA,CACCI,KAAK,SACLK,KAAK,MACLnC,MAAOK,EAAWD,IAAOa,sBAAwB,EACjDe,SAAWC,GAAM9B,EAAmBC,EAAM,uBAAwB6B,EAAEC,OAAOlC,OAC3EwB,UAAU,uHANLpB,kBAiBrBmB,EAAAA,KAAC,MAAA,CAAIC,UAAU,4BACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,2CAA2CC,SAAA,wBACzDF,EAAAA,KAAC,MAAA,CAAIC,UAAU,wCACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,aAGhEC,EAAAA,IAAC,QAAA,CACCI,KAAK,SACL9B,MAAOQ,EAAaY,MAAQ,EAC5BY,SAAWC,GAAM1B,EAAyB,OAAQ0B,EAAEC,OAAOlC,OAC3DwB,UAAU,2HAGb,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,mBAGhEC,EAAAA,IAAC,QAAA,CACCI,KAAK,SACL9B,MAAOQ,EAAaa,WAAa,EACjCW,SAAWC,GAAM1B,EAAyB,YAAa0B,EAAEC,OAAOlC,OAChEwB,UAAU,2HAGb,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,uBAGhEC,EAAAA,IAAC,QAAA,CACCI,KAAK,SACL9B,MAAOQ,EAAac,mBAAqB,EACzCU,SAAWC,GAAM1B,EAAyB,oBAAqB0B,EAAEC,OAAOlC,OACxEwB,UAAU,8HAqC0BuB,OClY9CC,EAAkB,EAAGC,aACzB,MAAOxD,EAAQC,GAAaG,WAAS,CACnCkC,eAAgB,IAChBrB,gBAAiB,EACjB0B,mBAAoB,KACpBC,aAAc,IACdhC,WAAY,CAAA,EACZG,aAAc,CAAA,KAGT0C,EAASC,GAActD,EAAAA,SAAS,OAChCuD,EAAoBC,GAAyBxD,EAAAA,SAAS,OACtDyD,EAAWC,GAAgB1D,EAAAA,SAAS,WACpC2D,EAASC,GAAc5D,EAAAA,UAAS,GAGvCY,EAAAA,UAAU,KACR,MAAMiD,EAAQC,WAAW,KACvBC,KACC,KACH,MAAO,IAAMC,aAAaH,IACzB,CAACjE,IAEJ,MAAMmE,EAAeE,UACnB,IAAKrE,EAAOsC,gBAAkBtC,EAAOsC,gBAAkB,EAGrD,OAFAoB,EAAW,WACXE,EAAsB,MAIxBI,GAAW,GACX,IACE,MAAMM,EAAaC,EAAqBvE,GACxC0D,EAAWY,GAGX,MAAME,EAAcC,EAA6BzE,GACjD4D,EAAsBY,EACxB,OAASE,GAEPhB,EAAW,MACXE,EAAsB,KACxB,CACAI,GAAW,IAGPW,EAAkBpE,GACjBA,GAAmB,IAAVA,EACP,IAAIqE,KAAKC,aAAa,QAAS,CACpCC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAO3E,GANwB,KAS9B4E,EAAiB5E,GAChBA,GAAmB,IAAVA,EACP,GAAIA,EAAO6E,QAAQ,MADQ,KAsK9BC,EAAO,CACX,CAAEjD,GAAI,SAAUkD,KAAM,eAAgBC,KAAMC,GAC5C,CAAEpD,GAAI,UAAWkD,KAAM,UAAWC,KAAME,GACxC,CAAErD,GAAI,SAAUkD,KAAM,SAAUC,KAAMG,GACtC,CAAEtD,GAAI,cAAekD,KAAM,cAAeC,KAAMI,IAGlD,aACG,MAAA,CAAI5D,UAAU,0BACbC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BAEbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,yBACZC,SAAAwB,GACC1B,EAAAA,KAAC,SAAA,CACCI,QAASsB,EACTzB,UAAU,2DAEVC,SAAA,CAAAC,EAAAA,IAAC2D,EAAA,CAAU7D,UAAU,iBAAiB,wBAK5CE,EAAAA,IAAC,KAAA,CAAGF,UAAU,wCAAwCC,SAAA,+BAGtDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,gBAAgBC,SAAA,yGAM/BC,EAAAA,IAAC,MAAA,CAAIF,UAAU,gCACbC,SAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,wBACZC,SAAAqD,EAAKhC,IAAKwC,IACT,MAAMC,EAAOD,EAAIN,KACjB,OACEzD,EAAAA,KAAC,SAAA,CAECI,QAAS,IAAM4B,EAAa+B,EAAIzD,IAChCL,UAAW,iFACT8B,IAAcgC,EAAIzD,GACd,gCACA,8EAGNJ,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAK/D,UAAU,iBACf8D,EAAIP,OATAO,EAAIzD,UAiBnBN,EAAAA,KAACiE,EAAOC,IAAP,CAECC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BpE,UAAU,YAETC,SAAA,CAAc,WAAd6B,SACE,MAAA,CAAI9B,UAAU,iDACbC,SAAAC,EAAAA,IAAClC,EAAA,CAAUC,SAAgBC,gBAIhB,YAAd4D,GACC/B,OAAC,MAAA,CAAIC,UAAU,YACZC,SAAA,CAAA+B,GACCjC,EAAAA,KAAC,MAAA,CAAIC,UAAU,mBACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,8EACfE,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,sBAIrCyB,IAAYM,GACXjC,EAAAA,KAAAuE,EAAAA,SAAA,CAEErE,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,wCACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,iDACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,oCAAoCC,SAAA,2BAClD,MAAA,CAAID,UAAU,wCACZC,SAAA2C,EAAelB,EAAQ6C,sBAG5BxE,EAAAA,KAAC,MAAA,CAAIC,UAAU,iDACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,oCAAoCC,SAAA,uBAClD,MAAA,CAAID,UAAU,wCACZC,SAAA2C,EAAelB,EAAQ8C,kBAG5BzE,EAAAA,KAAC,MAAA,CAAIC,UAAU,iDACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,oCAAoCC,SAAA,gBACnDF,EAAAA,KAAC,MAAA,CAAIC,UAAU,wCAAwCC,SAAA,CAAA,IACnDyB,EAAQ+C,kBAAkBpB,QAAQ,SAGxCtD,EAAAA,KAAC,MAAA,CAAIC,UAAU,iDACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,oCAAoCC,SAAA,yBAClD,MAAA,CAAID,UAAU,wCACZC,SAAA2C,EAAelB,EAAQgD,8BA5PvChD,GAASiD,gBAGZ5E,EAAAA,KAAC,MAAA,CAAIC,UAAU,6DACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,gDACbC,SAAAC,EAAAA,IAAC,MAAGF,UAAU,sCAAsCC,2CAErD,MAAA,CAAID,UAAU,kBACbC,SAAAF,EAAAA,KAAC,QAAA,CAAMC,UAAU,sCACfC,SAAA,CAAAC,MAAC,QAAA,CAAMF,UAAU,aACfC,SAAAF,EAAAA,KAAC,KAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,iFAAiFC,SAAA,WAG9FyB,EAAQiD,gBAAgBrD,IAAI,CAACsD,EAAKC,IACjC9E,EAAAA,KAAC,KAAA,CAAeC,UAAU,kFAAkFC,SAAA,CAAA,QACpG2E,EAAIhG,OADHiG,SAMf9E,EAAAA,KAAC,QAAA,CAAMC,UAAU,oCACfC,SAAA,CAAAF,OAAC,KAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,gEAAgEC,SAAA,YAC7EyB,EAAQiD,gBAAgBrD,IAAI,CAACsD,EAAKC,IACjC3E,EAAAA,IAAC,KAAA,CAAeF,UAAU,+DACvBC,SAAA2C,EAAegC,EAAIE,UADbD,OAKb9E,EAAAA,KAAC,KAAA,CAAGC,UAAU,aACZC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,gEAAgEC,SAAA,qBAC7EyB,EAAQiD,gBAAgBrD,IAAI,CAACsD,EAAKC,IACjC3E,EAAAA,IAAC,KAAA,CAAeF,UAAU,+DACvBC,SAAAmD,EAAcwB,EAAIxF,gBADZyF,cAKZ,KAAA,CACC5E,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,gEAAgEC,SAAA,WAC7EyB,EAAQiD,gBAAgBrD,IAAI,CAACsD,EAAKC,IACjC3E,EAAAA,IAAC,KAAA,CAAeF,UAAU,+DACvBC,SAAA2C,EAAegC,EAAIG,SADbF,OAKb9E,EAAAA,KAAC,KAAA,CAAGC,UAAU,aACZC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,gEAAgEC,SAAA,SAC7EyB,EAAQiD,gBAAgBrD,IAAI,CAACsD,EAAKC,IACjC3E,EAAAA,IAAC,KAAA,CAAeF,UAAU,+DACvBC,SAAA2C,EAAegC,EAAII,OADbH,cAKZ,KAAA,CACC5E,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,gEAAgEC,SAAA,UAC7EyB,EAAQiD,gBAAgBrD,IAAI,CAACsD,EAAKC,IACjC3E,EAAAA,IAAC,KAAA,CAAeF,UAAU,+DACvBC,SAAA2C,EAAegC,EAAIK,QADbJ,OAKb9E,EAAAA,KAAC,KAAA,CAAGC,UAAU,aACZC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,gEAAgEC,SAAA,UAC7EyB,EAAQiD,gBAAgBrD,IAAI,CAACsD,EAAKC,IACjC3E,EAAAA,IAAC,KAAA,CAAeF,UAAU,+DACvBC,SAAA2C,EAAegC,EAAIM,QADbL,cAKZ,KAAA,CACC5E,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,gEAAgEC,SAAA,sBAC7EyB,EAAQiD,gBAAgBrD,IAAI,CAACsD,EAAKC,IACjC3E,EAAAA,IAAC,KAAA,CAAeF,UAAU,+DACvBC,SAAA2C,EAAegC,EAAIO,sBADbN,OAKb9E,EAAAA,KAAC,KAAA,CAAGC,UAAU,aACZC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,8DAA8DC,SAAA,mBAC3EyB,EAAQiD,gBAAgBrD,IAAI,CAACsD,EAAKC,IACjC3E,EAAAA,IAAC,KAAA,CAAeF,UAAU,yEACvBC,SAAA2C,EAAegC,EAAIQ,eADbP,kBAjFe,KAqQxB9E,EAAAA,KAAC,MAAA,CAAIC,UAAU,iDACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,2CAA2CC,SAAA,qBACzDF,EAAAA,KAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,gBAAgBC,SAAA,uCAC/B,OAAA,CAAKD,UAAU,gBAAiBC,SAAA2C,EAAelB,EAAQ2D,mBAE1DtF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,gBAAgBC,SAAA,+BAC/B,OAAA,CAAKD,UAAU,gBAAiBC,SAAA2C,EAAelB,EAAQgD,2BAE1D3E,EAAAA,KAAC,MAAA,CAAIC,UAAU,kDACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,8BAA8BC,SAAA,2BAC7C,OAAA,CAAKD,UAAU,oBAAqBC,SAAA2C,EAAelB,EAAQ6C,sBAE9DxE,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,gBAAgBC,SAAA,yBAC/B,OAAA,CAAKD,UAAU,gBAAiBC,SAAA2C,EAAelB,EAAQ4D,cAE1DvF,EAAAA,KAAC,MAAA,CAAIC,UAAU,kDACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,8BAA8BC,SAAA,uBAC7C,OAAA,CAAKD,UAAU,kCAAmCC,SAAA2C,EAAelB,EAAQ8C,8BASzE,WAAd1C,GACC5B,MAAC,MAAA,CAAIF,UAAU,YACZC,SAAAyB,GACCxB,EAAAA,IAAAoE,EAAAA,SAAA,CACErE,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,iDACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,2CAA2CC,SAAA,0BAGzDC,MAAC,MAAA,CAAIF,UAAU,OACbC,eAACsF,EAAA,CAAoBC,MAAM,OAAOC,OAAO,OACvCxF,SAAAF,EAAAA,KAAC2F,EAAA,CAAUC,KAvT1BjE,EAEEA,EAAQV,MAAMM,IAAI,CAAC1C,EAAMiG,KAAA,CAC9BjG,KAAM,QAAQA,IACdwG,aAAc1D,EAAQkE,cAAcf,GACpCgB,aAAcnE,EAAQoE,cAAcjB,MALjB,GAwTC5E,SAAA,CAAAC,EAAAA,IAAC6F,EAAA,CAAcC,gBAAgB,QAC/B9F,EAAAA,IAAC+F,EAAA,CAAMC,QAAQ,SACfhG,EAAAA,IAACiG,EAAA,CACCC,cAAgB5H,GACd,IAAIqE,KAAKC,aAAa,QAAS,CAC7BC,MAAO,WACPC,SAAU,MACVqD,SAAU,YACTlD,OAAO3E,KAGd0B,EAAAA,IAACoG,EAAA,CACCC,UAAY/H,GAAU,CACpB,IAAIqE,KAAKC,aAAa,QAAS,CAC7BC,MAAO,WACPC,SAAU,QACTG,OAAO3E,YAGbgI,EAAA,IACDtG,EAAAA,IAACuG,EAAA,CACCnG,KAAK,WACL4F,QAAQ,eACRQ,OAAO,UACPC,YAAa,EACbpD,KAAK,mBAEPrD,EAAAA,IAACuG,EAAA,CACCnG,KAAK,WACL4F,QAAQ,eACRQ,OAAO,UACPC,YAAa,EACbpD,KAAK,gCAWR,gBAAdzB,GACC5B,EAAAA,IAAC,MAAA,CAAIF,UAAU,YACZC,SAAA2B,GA9PkB,MAC7B,IAAKA,EAAoB,OAAO,KAEhC,MAAMgF,OAAEA,EAAAC,UAAQA,EAAAC,oBAAWA,GAAwBlF,EAEnD,OACE7B,EAAAA,KAAC,MAAA,CAAIC,UAAU,6DACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,gDACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,sCAAsCC,SAAA,+CAGpDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,6BAA6BC,SAAA,0EAI3C,MAAA,CAAID,UAAU,kBACbC,SAAAF,EAAAA,KAAC,QAAA,CAAMC,UAAU,aACfC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACCD,gBAAC,KAAA,CACCA,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,mEAAmEC,SAAA,4BAGhF6G,EAAoBxF,IAAIyF,GACvB7G,EAAAA,IAAC,KAAA,CAAcF,UAAU,qEACtBC,SAAAmD,EAAc2D,IADRA,SAMf7G,EAAAA,IAAC,QAAA,CACED,SAAA2G,EAAOtF,IAAI,CAACsD,EAAKoC,IAChBjH,EAAAA,KAAC,KAAA,CAAkBC,UAAWgH,EAAW,GAAM,EAAI,WAAa,aAC9D/G,SAAA,CAAAC,MAAC,MAAGF,UAAU,8CACXC,WAAc4G,EAAUG,MAE1BpC,EAAItD,IAAI,CAAC2F,EAAMC,KACd,MAAMC,EAAaH,IAAaI,KAAKC,MAAMT,EAAOzF,OAAS,IACzC+F,IAAcE,KAAKC,MAAMzC,EAAIzD,OAAS,GACxD,OACEpB,EAAAA,KAAC,KAAA,CAECC,UAAW,kCACTmH,EAAa,sCAAwC,iBAExDlH,SAAA,CAAA,IACGgH,EAAKK,WAAWjE,QAAQ,KALrB6D,OATJF,eA+NYO,OA5ItBzF,GAkJNJ,GACCxB,EAAAA,IAAC,MAAA,CAAIF,UAAU,mBACbC,SAAAF,EAAAA,KAAC,SAAA,CACCC,UAAU,yHACVG,QAAS,OAKTF,SAAA,CAAAC,EAAAA,IAACsH,EAAA,CAASxH,UAAU,iBAAiB,4BCvb7CyH,EAA2B,EAC/BC,eAAe,EACfC,WAAW,EACXC,WAAW,GACXC,gBACA7H,YAAY,OAEZ,MAAOgB,EAAO8G,GAAYzJ,EAAAA,SAASqJ,IAC5BK,EAAYC,GAAiB3J,EAAAA,UAAS,IACtC4J,EAAYC,GAAiB7J,EAAAA,SAAS,IACtC8J,EAAgBC,GAAqB/J,EAAAA,SAAS,GAE/CgK,EAAoBC,cAAaC,IACrC,MAAMC,EAAepB,KAAKrG,IAAI4G,EAAUP,KAAKtG,IAAI8G,EAAUR,KAAKqB,MAAMF,KAClEC,IAAiBxH,IACnB8G,EAASU,GACTX,IAAgBW,KAEjB,CAACxH,EAAO2G,EAAUC,EAAUC,IAEzBa,EAAkBJ,cAAa7H,IACnCA,EAAEkI,iBACFX,GAAc,GACdE,EAAczH,EAAEmI,SAChBR,EAAkBpH,GAClB6H,SAASC,KAAK/F,MAAMgG,OAAS,aAC5B,CAAC/H,IAEEgI,EAAkBV,cAAa7H,IACnC,IAAKsH,EAAY,OAEjB,MAAMkB,EAASxI,EAAEmI,QAAUX,EAK3BI,EAFiBF,EAFG,IACDc,IAIlB,CAAClB,EAAYE,EAAYE,EAAgBE,IAEtCa,EAAgBZ,EAAAA,YAAY,KAChCN,GAAc,GACda,SAASC,KAAK/F,MAAMgG,OAAS,WAC5B,IAEH9J,EAAAA,UAAU,KACR,GAAI8I,EAIF,OAHAc,SAASM,iBAAiB,YAAaH,GACvCH,SAASM,iBAAiB,UAAWD,GAE9B,KACLL,SAASO,oBAAoB,YAAaJ,GAC1CH,SAASO,oBAAoB,UAAWF,KAG3C,CAACnB,EAAYiB,EAAiBE,IAgCjC,OACEnJ,EAAAA,KAACsJ,EAAA,CAAKrJ,UAAW,mCAAmCA,IAClDC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,YAEbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,QAAQvD,UAAU,0BAC7BE,EAAAA,IAAC,KAAA,CAAGF,UAAU,mCAAmCC,SAAA,yBAEnDF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,wBAAwBC,SAAA,WACxCC,EAAAA,IAAC,OAAA,CAAKF,UAAU,kCAAmCC,SAAAe,UAKvDjB,EAAAA,KAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,gBAEbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,6EACbC,SAAAC,EAAAA,IAAC,MAAA,CACCF,UAAU,6FACV+C,MAAO,CAAEyC,MAAWxE,EAAQ4G,EAAY,IAAxB,SAKpB1H,EAAAA,IAAC,MAAA,CACCF,UAAU,+KACV+C,MAAO,CAAEuG,KAAUtI,EAAQ4G,EAAY,IAAxB,KACf2B,YAAab,EAEbzI,SAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,yEArDA,MACzB,MAAMwJ,EAAU,GACV7I,EAAOK,GAAS,EAAI,EAAIA,GAAS,GAAK,EAAI,EAEhD,IAAA,IAASK,EAAI,EAAGA,GAAKL,EAAOK,GAAKV,EAAM,CACrC,MAAM8I,EAAcpI,EAAIL,EAAS,IACjCwI,EAAQE,KACN3J,EAAAA,KAAC,MAAA,CAECC,UAAU,iEACV+C,MAAO,CAAEuG,KAAM,GAAGG,MAElBxJ,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,yBACfD,EAAAA,KAAC,OAAA,CAAKC,UAAU,6BAA6BC,SAAA,CAAA,IAAEoB,OAL1CA,GAQX,CAEA,OAAOmI,GAuCEG,MAIHzJ,EAAAA,IAAC,MAAA,CAAIF,UAAU,OACbC,SAAAC,EAAAA,IAAC,QAAA,CACCI,KAAK,QACLQ,IAAK6G,EACL5G,IAAK6G,EACLpJ,MAAOwC,EACPR,SA5EgBC,IAC1B,MAAM8H,EAAWqB,SAASnJ,EAAEC,OAAOlC,OACnC6J,EAAkBE,IA2ERvI,UAAU,0EACV+C,MAAO,CACL8G,WAAY,iDAAkD7I,EAAQ4G,EAAY,iBAAkB5G,EAAQ4G,EAAY,8BAOhI1H,EAAAA,IAAC,OAAIF,UAAU,gCACZC,UAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IAAI6J,UAAY1F,GAAKuD,GAAYvD,GAAKwD,GAAUtG,IAAIyI,GACrEhK,EAAAA,KAAC,SAAA,CAECI,QAAS,KApFnBkI,EAoF2C0B,IACjC/J,UAAW,2EACTgB,IAAU+I,EACN,mCACA,gEAGL9J,SAAA,CAAA8J,EAAW,MARPA,YAcV,MAAA,CAAI/J,UAAU,cACbC,SAAAF,EAAAA,KAAC,IAAA,CAAEC,UAAU,wBACVC,SAAA,CAAAe,GAAS,GAAK,wCACdA,EAAQ,GAAKA,GAAS,GAAK,+CAC3BA,EAAQ,GAAKA,GAAS,IAAM,2CAC5BA,EAAQ,IAAM,4CAKnBjB,EAAAA,KAAC,MAAA,CAAIC,UAAU,mEACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,oDACfE,EAAAA,IAAC,QAAKD,SAAA,sCAIVC,EAAAA,IAAC,QAAA,CAAMA,KAAG,EAAED,SAAA,4hCCzKZ+J,EAAiB,EAAGC,SAAQxI,aAChC,MAAOyI,GAAW7L,WAAS,OAAO8L,KAAKC,UAChCC,EAAQC,GAAajM,EAAAA,SAAS,OAC9BkM,EAAWC,GAAgBnM,EAAAA,UAAS,IACpCsE,EAAO8H,GAAYpM,EAAAA,SAAS,OAC5BqM,EAAcC,GAAmBtM,EAAAA,SAAS,CAAA,IAC1CuM,EAAgBC,GAAqBxM,EAAAA,SAAS,MAC/CyM,EAAWC,EAAAA,OAAO,OAGjB9M,EAAQC,GAAaG,WAAS,CACnCkC,eAAgB,KAChBrB,gBAAiB,EACjB0B,mBAAoB,KACpBC,aAAc,IACdoJ,OAAQA,GAAU,OAClBe,eAAe,EACfnM,WAAY,CACV,EAAG,CAAEO,cAAe,GAAIE,aAAc,GAAIC,QAAS,GAAIC,aAAc,EAAGG,UAAW,EAAGF,qBAAsB,GAC5G,EAAG,CAAEL,cAAe,GAAIE,aAAc,GAAIC,QAAS,GAAIC,aAAc,EAAGG,UAAW,EAAGF,qBAAsB,GAC5G,EAAG,CAAEL,cAAe,GAAIE,aAAc,GAAIC,QAAS,GAAIC,aAAc,EAAGG,UAAW,EAAGF,qBAAsB,GAC5G,EAAG,CAAEL,cAAe,EAAGE,aAAc,GAAIC,QAAS,GAAIC,aAAc,EAAGG,UAAW,EAAGF,qBAAsB,GAC3G,EAAG,CAAEL,cAAe,EAAGE,aAAc,GAAIC,QAAS,GAAIC,aAAc,EAAGG,UAAW,EAAGF,qBAAsB,IAE7GT,aAAc,CACZY,KAAM,IACNC,UAAW,IACXC,kBAAmB,OAKvBb,EAAAA,UAAU,KACR,MAAMgM,EAAQC,EAA0BC,oBACtCjB,EACA,MACAjM,EACA,CAACmN,EAAWC,EAAWC,KACrBhB,EAAUc,GACVX,EAASa,GACTT,EAAkB,IAAIV,MACtBK,GAAa,KAajB,OATAM,EAASS,QAAUN,EAGfhN,EAAO+M,eAAiB/M,EAAOgM,SACjCgB,EAAMO,cAAc,cAAevN,EAAOgM,QAC1CgB,EAAMO,cAAc,iBAAkB,WACtCP,EAAMO,cAAc,cAAe,UAG9B,KACDV,EAASS,SACXT,EAASS,QAAQE,YAGpB,CAACvB,IAGJjL,EAAAA,UAAU,KACR,IAAKhB,EAAO+M,gBAAkB/M,EAAOgM,OAAQ,OAE7C,MAAMyB,EAAgB,CACpB,CAAEC,SAAU,cAAe1B,OAAQhM,EAAOgM,QAC1C,CAAE0B,SAAU,iBAAkB1B,OAAQ,WACtC,CAAE0B,SAAU,cAAe1B,OAAQ,SACnC,CAAE0B,SAAU,mBAAoB1B,OAAQ,QAgB1C,OAboB2B,EAAoBC,kBACtCH,EAAcpK,IAAI,EAAGqK,WAAU1B,OAAAA,MAAO,CACpC0B,WACA1B,OAAAA,EACA6B,SAAWnG,IACTgF,EAAgBlM,IAAA,IACXA,EACH,CAAC,GAAGkN,KAAY1B,KAAWtE,WAOlC,CAAC1H,EAAO+M,cAAe/M,EAAOgM,SAGjC,MAAM8B,EAAczD,EAAAA,YAAY,CAAC0D,EAAMxN,KACrCgM,GAAa,GACTM,EAASS,SACXT,EAASS,QAAQQ,YAAYC,EAAMxN,GAGrCN,EAAUO,IACR,MAAMwN,EAAU,IAAKxN,GACfyN,EAAOF,EAAKG,MAAM,KACxB,IAAIZ,EAAUU,EAEd,IAAA,IAAS5K,EAAI,EAAGA,EAAI6K,EAAK/K,OAAS,EAAGE,IAC7B6K,EAAK7K,KAAMkK,MAAkBW,EAAK7K,IAAM,CAAA,GAC9CkK,EAAUA,EAAQW,EAAK7K,IAIzB,OADAkK,EAAQW,EAAKA,EAAK/K,OAAS,IAAM3C,EAC1ByN,KAER,IAEGG,EAAmB9D,EAAAA,YAAY,CAAC1J,EAAML,EAAOC,KACjDuN,EAAY,cAAcnN,KAAQL,IAASG,WAAWF,IAAU,IAC/D,CAACuN,IAEEM,EAA8B/D,cAAaC,IAC/CwD,EAAY,kBAAmBxD,GAG/BrK,EAAUO,IACR,MAAMwN,EAAU,IAAKxN,GACrBwN,EAAQ/M,gBAAkBqJ,EAG1B,IAAA,IAAS3J,EAAO0N,OAAOJ,KAAKzN,EAAKI,YAAYsC,OAAS,EAAGvC,GAAQ2J,EAAU3J,IACzE,IAAKqN,EAAQpN,WAAWD,GAAO,CAC7B,MAAM2N,EAAWN,EAAQpN,WAAWD,EAAO,IAAMqN,EAAQpN,WAAWyN,OAAOJ,KAAKD,EAAQpN,YAAY2N,OACpGP,EAAQpN,WAAWD,GAAQ,CACzBQ,cAAegI,KAAKrG,IAAI,GAAIwL,GAAUnN,eAAiB,IAAM,GAC7DE,aAAciN,GAAUjN,cAAgB,GACxCC,QAASgN,GAAUhN,SAAW,GAC9BC,aAAc+M,GAAU/M,cAAgB,EACxCG,UAAW4M,GAAU5M,WAAa,EAClCF,qBAAsB8M,GAAU9M,sBAAwB,EAE5D,CAUF,OANA6M,OAAOJ,KAAKD,EAAQpN,YAAY4N,QAAQ7N,IAClCgL,SAAShL,GAAQ2J,UACZ0D,EAAQpN,WAAWD,KAIvBqN,KAER,CAACF,IAEEW,EAAyBpE,EAAAA,YAAY,KACzC,MAAMqE,GAAY1O,EAAO+M,cACzBe,EAAY,gBAAiBY,GAEzBA,GAAY1O,EAAOgM,QAAUa,EAASS,UACxCT,EAASS,QAAQC,cAAc,cAAevN,EAAOgM,QACrDa,EAASS,QAAQC,cAAc,iBAAkB,aAElD,CAACvN,EAAO+M,cAAe/M,EAAOgM,OAAQ8B,IAEnCnJ,EAAiB,CAACpE,EAAOoO,EAAW,KACxC,IAAKpO,EAAO,MAAO,KACnB,MAAMqO,EAAWzF,KAAK0F,IAAItO,GAC1B,OAAIqO,GAAY,KAAa,KAAKrO,EAAQ,MAAM6E,QAAQuJ,MACpDC,GAAY,IAAY,KAAKrO,EAAQ,KAAK6E,QAAQuJ,MAClDC,GAAY,IAAY,KAAKrO,EAAQ,KAAK6E,QAAQuJ,MAClDC,GAAY,IAAY,KAAKrO,EAAQ,KAAK6E,QAAQuJ,MAC/C,IAAIpO,EAAM6E,QAAQuJ,MAGrBG,EAAuB,CAACpB,EAAU1B,KACtC,MACMtE,EAAO+E,EADD,GAAGiB,KAAY1B,KAE3B,OAAKtE,EAGH5F,EAAAA,KAAC,MAAA,CAAIC,UAAU,sCACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,oDACfD,EAAAA,KAAC,OAAA,CAAKC,UAAU,gBACbC,SAAA,CAAa,gBAAb0L,GAA8B,IAAIhG,EAAKqH,OAAO3J,QAAQ,KACzC,mBAAbsI,GAAiC,GAAGhG,EAAKoB,MAAM1D,QAAQ,MAC1C,gBAAbsI,GAA8B,GAAGhG,EAAKsH,OAAO5J,QAAQ,MACxC,qBAAbsI,GAAmC,GAAGhG,EAAKuH,YAAY7J,QAAQ,WATpD,MAepB,aACG,MAAA,CAAIrD,UAAU,0CACbC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oBAEbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yCACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAF,EAAAA,KAACoN,EAAA,CACChN,QAASsB,EACTzB,UAAU,gCACVoN,KAAK,KAELnN,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,YAAYvD,UAAU,iBAAiB,iBAGnD,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,qBAAqBC,SAAA,qBACnCF,EAAAA,KAAC,MAAA,CAAIC,UAAU,mCACbC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAEF,UAAU,gBAAgBC,SAAA,2CAC5B2K,GACC7K,EAAAA,KAAC,OAAA,CAAKC,UAAU,yBAAyBC,SAAA,CAAA,YAC7B2K,EAAeyC,iCAQnCnN,EAAAA,IAAC,MAAA,CAAIF,UAAU,8BACbC,SAAAF,EAAAA,KAAC,SAAA,CACCI,QAASuM,EACT1M,UAAW,uEACT/B,EAAO+M,cACH,6CACA,+CAGN/K,SAAA,CAAAC,MAAC6D,GAAKR,KAAMtF,EAAO+M,cAAgB,MAAQ,SAAUhL,UAAU,mBAC9D,OAAA,CAAKC,SAAA,CAAA,cAAYhC,EAAO+M,cAAgB,KAAO,iBAKtDjL,EAAAA,KAAC,MAAA,CAAIC,UAAU,wCAEbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,0BAEbC,SAAA,CAAAF,EAAAA,KAACsJ,EAAA,CAAKrJ,UAAU,kCACdC,SAAA,CAAAF,EAAAA,KAAC,KAAA,CAAGC,UAAU,+CACZC,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,WAAWvD,UAAU,+BAA+B,oBAIjED,EAAAA,KAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,WAGhEC,EAAAA,IAACoN,EAAA,CACC9O,MAAOP,EAAOgM,OACdzJ,SAAWC,GAAMsL,EAAY,SAAUtL,EAAEC,OAAOlC,MAAM+O,eACtDvN,UAAU,8BACVwN,YAAY,SAEbvP,EAAO+M,eAAiB+B,EAAqB,cAAe9O,EAAOgM,kBAGrE,MAAA,CACChK,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,oBAGhEC,EAAAA,IAACoN,EAAA,CACChN,KAAK,SACL9B,MAAOP,EAAOsC,eACdC,SAAWC,GAAMsL,EAAY,iBAAkBrN,WAAW+B,EAAEC,OAAOlC,QAAU,GAC7EwB,UAAU,8BACVW,KAAK,sBAIR,MAAA,CACCV,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,yBAGhEF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAACoN,EAAA,CACChN,KAAK,SACL9B,OAA8B,IAAtBP,EAAO4C,cAAoBwC,QAAQ,GAC3C7C,SAAWC,GAAMsL,EAAY,eAAgBrN,WAAW+B,EAAEC,OAAOlC,OAAS,KAAO,GACjFwB,UAAU,8BACVW,KAAK,MACLG,IAAI,IACJC,IAAI,OAENb,EAAAA,IAAC,OAAA,CAAKF,UAAU,gBAAgBC,SAAA,SAEjChC,EAAO+M,eAAiB+B,EAAqB,iBAAkB,qBAGjE,MAAA,CACC9M,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,+CAA+CC,SAAA,yBAGhEF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAACoN,EAAA,CACChN,KAAK,SACL9B,OAAoC,IAA5BP,EAAO2C,oBAA0ByC,QAAQ,GACjD7C,SAAWC,GAAMsL,EAAY,qBAAsBrN,WAAW+B,EAAEC,OAAOlC,OAAS,KAAO,GACvFwB,UAAU,8BACVW,KAAK,MACLG,IAAI,IACJC,IAAI,OAENb,EAAAA,IAAC,OAAA,CAAKF,UAAU,gBAAgBC,SAAA,kBAOxCC,EAAAA,IAACuH,EAAA,CACCC,aAAczJ,EAAOiB,gBACrB2I,cAAewE,IAIhBpO,EAAO+M,eACNjL,OAACsJ,EAAA,CAAKrJ,UAAU,kCACdC,SAAA,CAAAF,EAAAA,KAAC,KAAA,CAAGC,UAAU,+CACZC,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,WAAWvD,UAAU,gCAAgC,sBAIlED,EAAAA,KAAC,MAAA,CAAIC,UAAU,YACZC,SAAA,CAAA8M,EAAqB,cAAe9O,EAAOgM,SAC1ClK,OAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,gBAAgBC,SAAA,iBAC/B8M,EAAqB,cAAe9O,EAAOgM,WAI/C8C,EAAqB,cAAe,UACnChN,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,gBAAgBC,SAAA,kBAC/B8M,EAAqB,cAAe,YAIxCA,EAAqB,mBAAoB,QACxChN,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,gBAAgBC,SAAA,SAC/B8M,EAAqB,mBAAoB,yBASrD,MAAA,CAAI/M,UAAU,gBACbC,SAAAF,EAAAA,KAACsJ,EAAA,CAAKrJ,UAAU,kCACdC,SAAA,CAAAF,EAAAA,KAAC,KAAA,CAAGC,UAAU,+CACZC,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,WAAWvD,UAAU,+BAA+B,8BAIjEE,EAAAA,IAAC,OAAIF,UAAU,qCACZC,eAAMiB,KAAK,CAAEC,OAAQlD,EAAOiB,iBAAmB,CAACkC,EAAGC,IAAMA,EAAI,GAAGC,IAAI1C,GACnEmB,EAAAA,KAAC,MAAA,CAAeC,UAAU,wCACxBC,SAAA,CAAAF,EAAAA,KAAC,KAAA,CAAGC,UAAU,mCAAmCC,SAAA,CAAA,QAAMrB,KAEvDmB,EAAAA,KAAC,MAAA,CAAIC,UAAU,yBACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,mCAAmCC,SAAA,iBACpDC,EAAAA,IAACoN,EAAA,CACChN,KAAK,SACL9B,MAAOP,EAAOY,WAAWD,IAAOQ,eAAiB,EACjDoB,SAAWC,GAAM2L,EAAiBxN,EAAM,gBAAiB6B,EAAEC,OAAOlC,OAClEwB,UAAU,sCACVW,KAAK,kBAIR,MAAA,CACCV,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,mCAAmCC,SAAA,oBACpDC,EAAAA,IAACoN,EAAA,CACChN,KAAK,SACL9B,MAAOP,EAAOY,WAAWD,IAAOU,cAAgB,EAChDkB,SAAWC,GAAM2L,EAAiBxN,EAAM,eAAgB6B,EAAEC,OAAOlC,OACjEwB,UAAU,sCACVW,KAAK,kBAIR,MAAA,CACCV,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,mCAAmCC,SAAA,eACpDC,EAAAA,IAACoN,EAAA,CACChN,KAAK,SACL9B,MAAOP,EAAOY,WAAWD,IAAOW,SAAW,EAC3CiB,SAAWC,GAAM2L,EAAiBxN,EAAM,UAAW6B,EAAEC,OAAOlC,OAC5DwB,UAAU,sCACVW,KAAK,kBAIR,MAAA,CACCV,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,mCAAmCC,SAAA,gBACpDC,EAAAA,IAACoN,EAAA,CACChN,KAAK,SACL9B,MAAOP,EAAOY,WAAWD,IAAOY,cAAgB,EAChDgB,SAAWC,GAAM2L,EAAiBxN,EAAM,eAAgB6B,EAAEC,OAAOlC,OACjEwB,UAAU,sCACVW,KAAK,gBA5CH/B,WAuDlBmB,EAAAA,KAAC,MAAA,CAAIC,UAAU,0BACZC,SAAA,CAAAsK,GACCxK,EAAAA,KAAC,MAAA,CAAIC,UAAU,wCACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,iEACfE,EAAAA,IAAC,OAAA,CAAKF,UAAU,qBAAqBC,SAAA,sBAIxC0C,GACC5C,EAAAA,KAACsJ,EAAA,CAAKrJ,UAAU,mCACdC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,iCACbC,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,cAAcvD,UAAU,iBACnCE,EAAAA,IAAC,QAAKD,SAAA,yBAERC,EAAAA,IAAC,IAAA,CAAEF,UAAU,4BAA6BC,WAAMwN,aAInDpD,GACCtK,EAAAA,KAAAuE,WAAA,CAEErE,SAAA,CAAAF,EAAAA,KAACsJ,EAAA,CAAKrJ,UAAU,kCACdC,SAAA,CAAAF,EAAAA,KAAC,KAAA,CAAGC,UAAU,+CACZC,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,aAAavD,UAAU,gCAAgC,iBAIpED,EAAAA,KAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,gBAAgBC,SAAA,sBAChCC,MAAC,QAAKF,UAAU,sCACbC,WAAeoK,EAAO9F,gBAAiB,QAI5CxE,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,gBAAgBC,SAAA,kBAChCC,MAAC,QAAKF,UAAU,uCACbC,WAAeoK,EAAO7F,YAAa,QAIxCzE,EAAAA,KAAC,MAAA,CAAIC,UAAU,kEACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,gBAAgBC,SAAA,iBAChCF,EAAAA,KAAC,OAAA,CAAKC,UAAU,oCAAoCC,SAAA,CAAA,IAChDoK,EAAO5F,mBAAmBpB,QAAQ,SAIxCtD,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,gBAAgBC,SAAA,oBAChCC,MAAC,QAAKF,UAAU,gBACbC,WAAeoK,EAAOqD,cAAe,cAO9C3N,EAAAA,KAACsJ,EAAA,CAAKrJ,UAAU,kCACdC,SAAA,CAAAF,EAAAA,KAAC,KAAA,CAAGC,UAAU,+CACZC,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,aAAavD,UAAU,+BAA+B,uBAInED,EAAAA,KAAC,MAAA,CAAIC,UAAU,YACZC,SAAA,CAAAoK,EAAOrJ,OAAOM,IAAI,CAAC1C,EAAMiG,IACxB9E,EAAAA,KAAC,MAAA,CAAeC,UAAU,4CACxBC,SAAA,CAAAF,EAAAA,KAAC,OAAA,CAAKC,UAAU,gBAAgBC,SAAA,CAAA,QAAMrB,EAAK,WAC3CsB,EAAAA,IAAC,OAAA,CAAKF,UAAU,YACbC,SAAA2C,EAAeyH,EAAOzE,cAAcf,GAAQ,OAHvCjG,UAQX,MAAA,CAAIoB,UAAU,qCACbC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,0DACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,gBAAgBC,SAAA,sBAC/B,OAAA,CAAMA,SAAA2C,EAAeyH,EAAOhF,aAAc,+BC9e7DsI,EAAkB,EAAGC,sBACzB,MAAOC,EAAYC,GAAiBzP,EAAAA,SAAS,KACtC0P,EAAaC,GAAkB3P,EAAAA,SAAS,KACxC4P,EAAaC,GAAkB7P,EAAAA,UAAS,GAGzC8P,EAAgB,CACpB,CACE9N,GAAI,OACJkD,KAAM,aACN6K,OAAQ,OACRC,OAAQ,aACRC,UAAW,KACXtB,MAAO,OACPuB,OAAQ,KACRC,cAAe,KACfC,WAAY,CACV3J,QAAS,CAAC,SAAc,SAAc,SAAc,SAAc,UAClE9D,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,QAGpC,CACEX,GAAI,OACJkD,KAAM,wBACN6K,OAAQ,OACRC,OAAQ,aACRC,UAAW,MACXtB,MAAO,OACPuB,QAAQ,KACRC,eAAe,IACfC,WAAY,CACV3J,QAAS,CAAC,SAAc,SAAc,SAAc,QAAc,UAClE9D,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,QAGpC,CACEX,GAAI,QACJkD,KAAM,gBACN6K,OAAQ,QACRC,OAAQ,aACRC,UAAW,MACXtB,MAAO,OACPuB,OAAQ,KACRC,cAAe,IACfC,WAAY,CACV3J,QAAS,CAAC,SAAc,SAAc,SAAc,SAAc,UAClE9D,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,QAGpC,CACEX,GAAI,MACJkD,KAAM,oBACN6K,OAAQ,MACRC,OAAQ,aACRC,UAAW,MACXtB,MAAO,OACPuB,OAAQ,IACRC,cAAe,IACfC,WAAY,CACV3J,QAAS,CAAC,QAAa,QAAa,QAAa,QAAa,SAC9D9D,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,QAGpC,CACEX,GAAI,MACJkD,KAAM,cACN6K,OAAQ,MACRC,OAAQ,aACRC,UAAW,MACXtB,MAAO,MACPuB,QAAQ,IACRC,eAAe,KACfC,WAAY,CACV3J,QAAS,CAAC,OAAa,QAAa,QAAa,QAAc,SAC/D9D,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,SAMtC/B,EAAAA,UAAU,KACR,GAAI4O,EAAW1M,OAAS,EAAG,CACzB+M,GAAe,GAGf,MAAMhM,EAAQC,WAAW,KACvB,MAAMuM,EAAWP,EAAcrE,UAC7B6E,EAAQpL,KAAKqL,cAAcC,SAAShB,EAAWe,gBAC/CD,EAAQP,OAAOQ,cAAcC,SAAShB,EAAWe,gBAEnDZ,EAAeU,GACfR,GAAe,IACd,KAEH,MAAO,IAAM7L,aAAaH,EAC5B,CACE8L,EAAe,IACfE,GAAe,IAEhB,CAACL,IAEJ,MAOMiB,EAAuBH,IAC3Bf,EAAgBe,GAChBb,EAAc,IACdE,EAAe,KAGjB,OACEjO,EAAAA,KAAC,MAAA,CAAIC,UAAU,4BAEbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,WACbC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAU,uEACbC,eAAC8O,EAAA,CAAO/O,UAAU,4BAEpBE,EAAAA,IAAC,QAAA,CACCI,KAAK,OACL9B,MAAOqP,EACPrN,SAAWC,GAAMqN,EAAcrN,EAAEC,OAAOlC,OACxCwB,UAAU,+LACVwN,YAAY,4CAKhBtN,MAAC8O,EAAA,CACG/O,UAAA8N,EAAY5M,OAAS,GAAK8M,IAC1B/N,EAAAA,IAAC8D,EAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAGC,GAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1B6K,KAAM,CAAE9K,QAAS,EAAGC,GAAG,IACvBpE,UAAU,kGAETC,SAAAgO,EACClO,OAAC,MAAA,CAAIC,UAAU,gCACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,8EACfE,EAAAA,IAAC,IAAA,CAAEF,UAAU,eAAeC,SAAA,0BAG7B,MAAA,CAAID,UAAU,2BACZC,SAAA8N,EAAYzM,IAAKqN,IAChBzO,SAAAA,IAAC8D,EAAOkL,OAAP,CAEC/O,QAAS,IAAM2O,EAAoBH,GACnCQ,WAAY,CAAEC,gBAAiB,4BAC/BpP,UAAU,qHAEVC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,gBACbC,SAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,oGACbC,SAAAC,EAAAA,IAACmP,EAAA,CAAUrP,UAAU,kCAGxB,MAAA,CACCC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,oCACXC,SAAA0O,EAAQpL,OAEXrD,EAAAA,IAAC,OAAA,CAAKF,UAAU,kEACbC,WAAQmO,YAGbrO,EAAAA,KAAC,IAAA,CAAEC,UAAU,+BACVC,SAAA,CAAA0O,EAAQN,OAAO,mBArElB7P,EAqEiDmQ,EAAQL,UApE3E9P,GAAS,KAAa,KAAKA,EAAQ,MAAM6E,QAAQ,MACjD7E,GAAS,IAAY,KAAKA,EAAQ,KAAK6E,QAAQ,MAC/C7E,GAAS,IAAY,KAAKA,EAAQ,KAAK6E,QAAQ,MAC5C,IAAI7E,EAAM6E,QAAQ,eAqEPtD,EAAAA,KAAC,MAAA,CAAIC,UAAU,aACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCAAoCC,SAAA,CAAA,IAC/C0O,EAAQ3B,SAEZjN,EAAAA,KAAC,OAAIC,UAAW,8BACd2O,EAAQH,eAAiB,EAAI,iBAAmB,gBAEhDvO,SAAA,CAAAC,EAAAA,IAACwD,EAAA,CACC1D,UAAW,iBACT2O,EAAQH,cAAgB,EAAI,aAAe,MAG9CG,EAAQH,eAAiB,EAAI,IAAM,GACnCG,EAAQH,cAAcnL,QAAQ,GAAG,cAvCnCsL,EAAQtO,IA/CR,IAAC7B,WAmGlBqP,GACA9N,EAAAA,KAACiE,EAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BkL,WAAY,CAAEC,MAAO,IACrBvP,UAAU,OAEVC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,yCAAyCC,SAAA,sBACvDC,EAAAA,IAAC,MAAA,CAAIF,UAAU,yBACZC,SAAAkO,EAAcqB,MAAM,EAAG,GAAGlO,IAAKqN,GAC9BzO,EAAAA,IAAC8D,EAAOkL,OAAP,CAEC/O,QAAS,IAAM2O,EAAoBH,GACnCQ,WAAY,CAAEM,MAAO,MACrBC,SAAU,CAAED,MAAO,KACnBzP,UAAU,gGAEVC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAU,kGACbC,eAACoP,EAAA,CAAUrP,UAAU,gCAEtB,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,oCACZC,SAAA0O,EAAQP,SAEXlO,EAAAA,IAAC,MAAA,CAAIF,UAAU,iCACZC,WAAQsD,cAfVoL,EAAQtO,cClNvBsP,EAAkB,EAAGhB,UAASiB,WAAU,MAC5C,IAAKjB,EAAS,OAAO,KAErB,MAAM/L,EAAkBpE,GAClBA,GAAS,KAAa,KAAKA,EAAQ,MAAM6E,QAAQ,MACjD7E,GAAS,IAAY,KAAKA,EAAQ,KAAK6E,QAAQ,MAC/C7E,GAAS,IAAY,KAAKA,EAAQ,KAAK6E,QAAQ,MAC5C,IAAI7E,EAAM6E,QAAQ,KAIrBwM,EAAYlB,EAAQF,YAAY3J,SAASxD,IAAI,CAACwD,EAASD,KAAA,CAC3DjG,KAAM+P,EAAQF,WAAWzN,MAAM6D,GAC/BC,QAASA,EAAU,QACd,GAUD1F,EAPkB,CAACuG,IACvB,IAAKA,GAAQA,EAAKxE,OAAS,EAAG,OAAO,EACrC,MAAM2O,EAASnK,EAAKA,EAAKxE,OAAS,GAC5B4O,EAAWpK,EAAKA,EAAKxE,OAAS,GACpC,OAAS2O,EAASC,GAAYA,EAAY,KAGtBC,CAAgBrB,EAAQF,YAAY3J,SAE1D,OAAI8K,EAEA1P,EAAAA,IAAC8D,EAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BpE,UAAU,kDAEVC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAU,oGACbC,eAACoP,EAAA,CAAUrP,UAAU,gCAEtB,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,sCAAuCC,SAAA0O,EAAQpL,OAC7DrD,EAAAA,IAAC,IAAA,CAAEF,UAAU,wBAAyBC,WAAQoO,eAGlDtO,EAAAA,KAAC,MAAA,CAAIC,UAAU,aACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,uCAAuCC,SAAA,CAAA,IAAE0O,EAAQ3B,SAChEjN,EAAAA,KAAC,OAAIC,UAAW,0CACd2O,EAAQH,eAAiB,EAAI,iBAAmB,gBAEhDvO,SAAA,CAAAC,EAAAA,IAACwD,EAAA,CACC1D,UAAW,iBACT2O,EAAQH,cAAgB,EAAI,aAAe,MAG9CG,EAAQH,eAAiB,EAAI,IAAM,GACnCG,EAAQH,cAAcnL,QAAQ,GAAG,eAS5CtD,EAAAA,KAACiE,EAAOC,IAAP,CACCC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BpE,UAAU,4DAGVC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,wCACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAU,qGACbC,eAACoP,EAAA,CAAUrP,UAAU,gCAEtB,MAAA,CACCC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,yCAA0CC,SAAA0O,EAAQpL,OAChExD,EAAAA,KAAC,MAAA,CAAIC,UAAU,oDACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,0CAA2CC,SAAA0O,EAAQP,SACnElO,EAAAA,IAAC,OAAA,CAAMD,SAAA0O,EAAQN,gBACd,OAAA,CAAKpO,SAAA,CAAA,eAAa2C,EAAe+L,EAAQL,uBAKhDvO,EAAAA,KAAC,MAAA,CAAIC,UAAU,aACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yCAAyCC,SAAA,CAAA,IACpD0O,EAAQ3B,SAEZjN,EAAAA,KAAC,OAAIC,UAAW,0CACd2O,EAAQH,eAAiB,EAAI,iBAAmB,gBAEhDvO,SAAA,CAAAC,EAAAA,IAACwD,EAAA,CACC1D,UAAW,iBACT2O,EAAQH,cAAgB,EAAI,aAAe,MAG9CG,EAAQH,eAAiB,EAAI,IAAM,GACnCG,EAAQJ,OAAOlL,QAAQ,GAAG,KAAGsL,EAAQH,cAAcnL,QAAQ,GAAG,cAMrEtD,EAAAA,KAAC,MAAA,CAAIC,UAAU,6CAEbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,gBACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yCACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,oCAAoCC,SAAA,kBAClDF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oDACbC,SAAA,CAAAC,EAAAA,IAAC+P,EAAA,CAASjQ,UAAU,mBACnB,OAAA,CAAMC,SAAA,CAAA0O,EAAQF,YAAYzN,QAAQ,GAAG,MAAI2N,EAAQF,YAAYzN,OAAOwO,OAAM,YAG/EtP,MAAC,MAAA,CAAIF,UAAU,OACbC,SAAAC,EAAAA,IAACqF,EAAA,CAAoBC,MAAM,OAAOC,OAAO,OACvCxF,SAAAF,EAAAA,KAAC2F,EAAA,CAAUC,KAAMkK,EACf5P,SAAA,CAAAC,EAAAA,IAAC+F,EAAA,CACCC,QAAQ,OACRgK,UAAU,EACVC,UAAU,EACVC,KAAM,CAAEC,SAAU,GAAIC,KAAM,aAE9BpQ,EAAAA,IAACiG,EAAA,CACC+J,UAAU,EACVC,UAAU,EACVC,KAAM,CAAEC,SAAU,GAAIC,KAAM,WAC5BlK,cAAgB5H,GAAU,IAAIA,OAEhC0B,EAAAA,IAACuG,EAAA,CACCnG,KAAK,WACL4F,QAAQ,UACRQ,OAAO,UACPC,YAAa,EACb4J,IAAK,CAAED,KAAM,UAAW3J,YAAa,EAAG6J,EAAG,GAC3CC,UAAW,CAAED,EAAG,EAAG9J,OAAQ,UAAWC,YAAa,EAAG2J,KAAM,oBAQtEvQ,EAAAA,KAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,6BACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yCACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,oCAAoCC,SAAA,mBACpDC,EAAAA,IAACwQ,EAAA,CAAW1Q,UAAU,6BAExBE,EAAAA,IAAC,MAAA,CAAIF,UAAU,uCACZC,WAAe0O,EAAQF,YAAY3J,SAAS0K,OAAM,GAAI,IAAM,KAE/DzP,EAAAA,KAAC,OAAIC,UAAW,iBACdZ,GAAiB,EAAI,iBAAmB,gBAEvCa,SAAA,CAAAb,GAAiB,EAAI,IAAM,GAAIA,EAAciE,QAAQ,GAAG,cAI7DtD,EAAAA,KAAC,MAAA,CAAIC,UAAU,6BACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yCACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,oCAAoCC,SAAA,eACpDC,EAAAA,IAACwD,EAAA,CAAW1D,UAAU,mCAEvB,MAAA,CAAIA,UAAU,uCACZC,SAAA2C,EAAe+L,EAAQL,aAE1BpO,EAAAA,IAAC,MAAA,CAAIF,UAAU,6BAA6BC,SAAA,qBAK9CF,EAAAA,KAAC,MAAA,CAAIC,UAAU,6BACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yCACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,oCAAoCC,SAAA,WACpDC,EAAAA,IAACmP,EAAA,CAAUrP,UAAU,6BAEvBE,EAAAA,IAAC,MAAA,CAAIF,UAAU,oCACZC,WAAQoO,SAEXnO,EAAAA,IAAC,MAAA,CAAIF,UAAU,6BAA6BC,SAAA,2CAQjD,MAAA,CAAID,UAAU,sDACbC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,oDACfE,EAAAA,IAAC,OAAA,CAAKF,UAAU,qCAAqCC,SAAA,wDCpLzD0Q,EAAiB,EACrBC,WACAC,cACA5S,SACAyD,UACAoP,gBACAC,UACAC,WACAC,aAAY,EACZC,gBAAe,MAEf,MAAOC,EAAgBC,GAAqB/S,EAAAA,SAAS,eAuB/CgT,EArBe,CACnBC,IAAK,CACH/N,KAAM,eACNC,KAAMC,EACN8N,MAAO,OACPC,YAAa,wCAEfC,YAAa,CACXlO,KAAM,sBACNC,KAAMG,EACN4N,MAAO,QACPC,YAAa,iCAEfE,IAAK,CACHnO,KAAM,eACNC,KAAMmO,EACNJ,MAAO,SACPC,YAAa,qCAIWZ,GACtB7M,EAAOsN,EAAO7N,KAGdoO,EAAoB,EAAGC,QAAOrT,QAAOsC,MAAKC,MAAKJ,OAAMmR,SAAS,GAAItR,cACtET,OAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAMF,UAAU,oCAAqCC,SAAA4R,IACtD9R,EAAAA,KAAC,OAAA,CAAKC,UAAU,gEACbC,SAAA,CAAAzB,EAAM6E,QAAQ1C,EAAO,EAAI,EAAI,GAAImR,QAGtC5R,EAAAA,IAAC,MAAA,CAAIF,UAAU,WACbC,SAAAC,EAAAA,IAAC,QAAA,CACCI,KAAK,QACLQ,MACAC,MACAJ,OACAnC,QACAgC,SAAWC,GAAMD,EAAS9B,WAAW+B,EAAEC,OAAOlC,QAC9CwB,UAAU,0EACV+C,MAAO,CACL8G,WAAY,kEAAmErL,EAAQsC,IAAQC,EAAMD,GAAQ,2BAA4BtC,EAAQsC,IAAQC,EAAMD,GAAQ,uCAqVjL,OACEZ,EAAAA,IAAC8D,EAAOC,IAAP,CACC8N,QAAM,EACN/R,UAAW,IAAGkR,EAAe,GAAK,+DAEjCjR,SA5BuB,MAC1B,OAAQ2Q,GACN,IAAK,MACH,MAzTmB,MACvB,IAAK3S,EAAQ,OAAO,KAEpB,MAAM+T,EAAoB,CAACzT,EAAOC,KAChCsS,EAAc,CAAEvS,CAACA,GAAQC,KAGrByT,EAA0B,CAACrT,EAAML,EAAOC,KAC5C,MAAMM,EAAoB,IACrBb,EAAOY,WACVD,CAACA,GAAO,IACHX,EAAOY,aAAaD,GACvBL,CAACA,GAAQC,IAGbsS,EAAc,CAAEjS,WAAYC,KAIxB+Q,EAAYqC,EAAAA,QAAQ,IACnBxQ,GAASkE,cAEPlE,EAAQV,MAAMM,IAAI,CAAC1C,EAAMiG,KAAA,CAC9BjG,KAAM,IAAIA,IACVuT,IAAKzQ,EAAQkE,cAAcf,GAAS,IACpCuN,GAAI1Q,EAAQoE,cAAcjB,GAAS,OALD,GAOnC,CAACnD,IAEJ,OAAIuP,EAEAlR,EAAAA,KAAC,MAAA,CAAIC,UAAU,gBAEbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,MAAC,MAAA,CAAIF,UAAW,gBAAgBqR,EAAOE,wDACrCtR,SAAAC,EAAAA,IAAC6D,EAAA,CAAK/D,UAAW,gBAAgBqR,EAAOE,uBAEzC,MAAA,CACCtR,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,8BAA+BC,SAAAoR,EAAO9N,OACpDrD,EAAAA,IAAC,IAAA,CAAEF,UAAU,wBAAyBC,WAAOuR,oBAGjDzR,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACCC,QAAS4Q,EACT/Q,UAAU,0DAEVC,SAAAC,EAAAA,IAACmS,EAAA,CAAUrS,UAAU,cAEvBE,EAAAA,IAAC,SAAA,CACCC,QAAS6Q,EACThR,UAAU,yDAEVC,SAAAC,EAAAA,IAACoS,EAAA,CAAEtS,UAAU,oBAMnBD,EAAAA,KAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,CAAAC,EAAAA,IAAC0R,EAAA,CACCC,MAAM,uBACNrT,MAA8C,KAAtCP,EAAO2C,oBAAsB,MACrCE,IAAK,EACLC,IAAK,EACLJ,KAAM,GACNmR,OAAO,IACPtR,SAAWhC,GAAUwT,EAAkB,qBAAsBxT,EAAQ,OAEvE0B,EAAAA,IAAC0R,EAAA,CACCC,MAAM,uBACNrT,MAAuC,KAA/BP,EAAO4C,cAAgB,KAC/BC,IAAK,EACLC,IAAK,GACLJ,KAAM,GACNmR,OAAO,IACPtR,SAAWhC,GAAUwT,EAAkB,eAAgBxT,EAAQ,UAKlEkD,GACC3B,EAAAA,KAAC,MAAA,CAAIC,UAAU,yBACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,4BACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,6BAA6BC,SAAA,qBAC5CF,EAAAA,KAAC,MAAA,CAAIC,UAAU,sCAAsCC,SAAA,CAAA,KAChDyB,EAAQ6C,gBAAkB,KAAKlB,QAAQ,GAAG,UAGjDtD,EAAAA,KAAC,MAAA,CAAIC,UAAU,4BACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,6BAA6BC,SAAA,kBAC5CF,EAAAA,KAAC,MAAA,CAAIC,UAAU,sCAAsCC,SAAA,CAAA,IACjDyB,EAAQ+C,mBAAmBpB,QAAQ,IAAM,gBAOlDwM,EAAU1O,OAAS,GAClBjB,MAAC,MAAA,CAAIF,UAAU,OACbC,SAAAC,EAAAA,IAACqF,EAAA,CAAoBC,MAAM,OAAOC,OAAO,OACvCxF,SAAAF,OAAC2F,EAAA,CAAUC,KAAMkK,EACf5P,SAAA,CAAAC,EAAAA,IAACuG,EAAA,CACCnG,KAAK,WACL4F,QAAQ,MACRQ,OAAO,UACPC,YAAa,EACb4J,KAAK,IAEPrQ,MAAC+F,GAAMC,QAAQ,OAAOkK,KAAM,CAAEC,SAAU,YACvClK,EAAA,CAAMiK,KAAM,CAAEC,SAAU,MACzBnQ,EAAAA,IAACoG,EAAA,CACCC,UAAY/H,GAAU,CAAC,IAAIA,EAAM6E,QAAQ,MAAO,OAChDkP,WAAY,CAAEhB,MAAO,uBAYnCxR,EAAAA,KAAC,MAAA,CAAIC,UAAU,YAEbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,kDACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,2CAA2CC,SAAA,sBAEzDF,EAAAA,KAAC,MAAA,CAAIC,UAAU,wCACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,CAAAC,EAAAA,IAAC0R,EAAA,CACCC,MAAM,kBACNrT,MAAOP,EAAOsC,gBAAkB,EAChCO,IAAK,IACLC,IAAK,KACLJ,KAAM,IACNmR,OAAO,GACPtR,SAAWhC,GAAUwT,EAAkB,iBAAkBxT,KAE3D0B,EAAAA,IAAC0R,EAAA,CACCC,MAAM,uBACNrT,MAA8C,KAAtCP,EAAO2C,oBAAsB,MACrCE,IAAK,EACLC,IAAK,EACLJ,KAAM,GACNmR,OAAO,IACPtR,SAAWhC,GAAUwT,EAAkB,qBAAsBxT,EAAQ,OAEvE0B,EAAAA,IAAC0R,EAAA,CACCC,MAAM,uBACNrT,MAAuC,KAA/BP,EAAO4C,cAAgB,KAC/BC,IAAK,EACLC,IAAK,GACLJ,KAAM,GACNmR,OAAO,IACPtR,SAAWhC,GAAUwT,EAAkB,eAAgBxT,EAAQ,UAInEuB,EAAAA,KAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,CAAAC,EAAAA,IAAC0R,EAAA,CACCC,MAAM,mBACNrT,MAAOP,EAAOiB,iBAAmB,EACjC4B,IAAK,EACLC,IAAK,GACLJ,KAAM,EACNmR,OAAO,SACPtR,SAAWhC,GAAUwT,EAAkB,kBAAmBxT,KAI5DuB,EAAAA,KAAC,MAAA,CAAIC,UAAU,4BACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,iCAAiCC,SAAA,uBAC/CF,EAAAA,KAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,CAAAC,EAAAA,IAAC0R,EAAA,CACCC,MAAM,iBACNrT,MAAOP,EAAOY,aAAa,IAAIO,eAAiB,GAChD0B,KAAK,GACLC,IAAK,GACLJ,KAAM,GACNmR,OAAO,IACPtR,SAAWhC,GAAUyT,EAAwB,EAAG,gBAAiBzT,KAEnE0B,EAAAA,IAAC0R,EAAA,CACCC,MAAM,gBACNrT,MAAOP,EAAOY,aAAa,IAAIS,cAAgB,GAC/CwB,IAAK,EACLC,IAAK,GACLJ,KAAM,GACNmR,OAAO,IACPtR,SAAWhC,GAAUyT,EAAwB,EAAG,eAAgBzT,oBAS3EkD,GACC3B,EAAAA,KAAC,MAAA,CAAIC,UAAU,wCAEbC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAU,0BACbC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,kDACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,2CAA2CC,SAAA,sBACzDF,EAAAA,KAAC,MAAA,CAAIC,UAAU,YACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8DACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAACwQ,EAAA,CAAW1Q,UAAU,0BACtBE,EAAAA,IAAC,OAAA,CAAKF,UAAU,oCAAoCC,SAAA,wBAEtDF,EAAAA,KAAC,OAAA,CAAKC,UAAU,kCAAkCC,SAAA,CAAA,KAC7CyB,EAAQ6C,gBAAkB,KAAKlB,QAAQ,GAAG,UAIjDtD,EAAAA,KAAC,MAAA,CAAIC,UAAU,+DACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAACwD,EAAA,CAAW1D,UAAU,2BACtBE,EAAAA,IAAC,OAAA,CAAKF,UAAU,qCAAqCC,SAAA,oBAEvDF,EAAAA,KAAC,OAAA,CAAKC,UAAU,mCAAmCC,SAAA,CAAA,KAC9CyB,EAAQ8C,YAAc,KAAKnB,QAAQ,GAAG,UAI7CtD,EAAAA,KAAC,MAAA,CAAIC,UAAU,gEACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAACsS,EAAA,CAAQxS,UAAU,4BACnBE,EAAAA,IAAC,OAAA,CAAKF,UAAU,sCAAsCC,SAAA,qBAExDF,EAAAA,KAAC,OAAA,CAAKC,UAAU,oCAAoCC,SAAA,CAAA,IAChDyB,EAAQ+C,mBAAmBpB,QAAQ,IAAM,2BAQpD,MAAA,CAAIrD,UAAU,gBACbC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,kDACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yCACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,sCAAsCC,SAAA,8BACpDF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oDACbC,SAAA,CAAAC,EAAAA,IAAC+P,EAAA,CAASjQ,UAAU,mBACnB,OAAA,CAAMC,SAAA,CAAAhC,EAAOiB,iBAAmB,EAAE,uBAIvCgB,MAAC,MAAA,CAAIF,UAAU,OACbC,SAAAC,EAAAA,IAACqF,EAAA,CAAoBC,MAAM,OAAOC,OAAO,OACvCxF,SAAAF,EAAAA,KAAC2F,EAAA,CAAUC,KAAMkK,EACf5P,SAAA,CAAAC,EAAAA,IAAC6F,EAAA,CAAcC,gBAAgB,MAAMU,OAAO,YAC5CxG,EAAAA,IAAC+F,EAAA,CACCC,QAAQ,OACRgK,UAAU,EACVC,UAAU,EACVC,KAAM,CAAEC,SAAU,GAAIC,KAAM,aAE9BpQ,EAAAA,IAACiG,EAAA,CACC+J,UAAU,EACVC,UAAU,EACVC,KAAM,CAAEC,SAAU,GAAIC,KAAM,WAC5BlK,cAAgB5H,GAAU,IAAIA,OAEhC0B,EAAAA,IAACoG,EAAA,CACCC,UAAW,CAAC/H,EAAO+E,IAAS,CAC1B,IAAI/E,EAAM6E,QAAQ,MACT,QAATE,EAAiB,iBAAmB,iBAEtCgP,WAAY,CAAEhB,MAAO,WACrBkB,aAAc,CACZrD,gBAAiB,UACjBsD,OAAQ,oBACRC,aAAc,SAGlBzS,EAAAA,IAACuG,EAAA,CACCnG,KAAK,WACL4F,QAAQ,MACRQ,OAAO,UACPC,YAAa,EACb4J,IAAK,CAAED,KAAM,UAAW3J,YAAa,EAAG6J,EAAG,GAC3CjN,KAAK,QAEPrD,EAAAA,IAACuG,EAAA,CACCnG,KAAK,WACL4F,QAAQ,KACRQ,OAAO,UACPC,YAAa,EACb4J,IAAK,CAAED,KAAM,UAAW3J,YAAa,EAAG6J,EAAG,GAC3CjN,KAAK,0BAiBdqP,GACT,IAAK,cACH,OACE7S,EAAAA,KAAC,MAAA,CAAIC,UAAU,gCACbC,SAAA,CAAAC,EAAAA,IAACyD,EAAA,CAAU3D,UAAU,yCACrBE,EAAAA,IAAC,KAAED,SAAA,8CAGT,IAAK,MACH,OACEF,EAAAA,KAAC,MAAA,CAAIC,UAAU,gCACbC,SAAA,CAAAC,EAAAA,IAACyR,EAAA,CAAO3R,UAAU,yCAClBE,EAAAA,IAAC,KAAED,SAAA,uCAGT,QACE,OAAO,OASR4S,MC/YDC,EAAe,CACnBxS,KAAM,SACNyS,UAAW,IACXC,QAAS,IAGLC,EAAiB,KACrB,MAAOC,EAAiBC,GAAsB9U,EAAAA,SAAS,OAChD+U,EAAeC,GAAoBhV,EAAAA,SAAS,KAC5CiV,EAAYC,GAAiBlV,EAAAA,SAAS,aACtCmV,EAAeC,GAAoBpV,EAAAA,SAAS,OAG5CwS,EAAa6C,GAAkBrV,WAAS,CAC7CsV,QAAS,KACTlF,WAAY,KACZmF,WAAY,KACZC,UAAW,QAINC,EAAgBC,GAAqB1V,WAAS,CACnDiT,IAAK,CACH/Q,eAAgB,EAChBrB,gBAAiB,EACjB0B,mBAAoB,KACpBC,aAAc,IACdhC,WAAY,CAAA,EACZG,aAAc,CAAA,MAIXgV,EAAiBC,GAAsB5V,EAAAA,SAAS,CAAA,GAGjD6V,EAAmB,CACvB,CACE7T,GAAI,MACJkD,KAAM,eACNC,KAAMC,EACN+N,YAAa,iCACbD,MAAO,OACP4C,WAAW,GAEb,CACE9T,GAAI,cACJkD,KAAM,sBACNC,KAAMG,EACN6N,YAAa,2BACbD,MAAO,QACP4C,WAAW,GAEb,CACE9T,GAAI,MACJkD,KAAM,eACNC,KAAMmO,EACNH,YAAa,4BACbD,MAAO,SACP4C,WAAW,IAKTrF,EAAsBxG,cAAYhG,MAAOqM,IAK7C,GAJAwE,EAAmBxE,GACnB4E,EAAc,YAGV5E,EAAQF,YAAY3J,QAAS,CAC/B,MAAMsP,EAAgBzF,EAAQF,WAAW3J,QAAQ6J,EAAQF,WAAW3J,QAAQ3D,OAAS,GAC/EkT,EAAcC,EAA+B3F,EAAQF,WAAW3J,SAEtEiP,EAAkBtV,IAAA,IACbA,EACH6S,IAAK,IACA7S,EAAK6S,IACR/Q,eAAgB6T,EAChBvV,WAAY0V,EAA4BF,EAAa1F,EAAQN,WAGnE,CAGAgF,EAAiB,CAAC,SACjB,IAGGiB,EAAkCE,IACtC,IAAKA,GAAeA,EAAYrT,OAAS,QAAU,GAEnD,MAAMkT,EAAc,GACpB,IAAA,IAAShT,EAAI,EAAGA,EAAImT,EAAYrT,OAAQE,IAAK,CAC3C,MAAMoT,GAAWD,EAAYnT,GAAKmT,EAAYnT,EAAE,IAAMmT,EAAYnT,EAAE,GAAM,IAC1EgT,EAAY3K,KAAK+K,EACnB,CAEA,OAAOJ,GAIHE,EAA8B,CAACG,EAAkBrG,KACrD,MAAMsG,EAAYD,EAAiBvT,OAAS,EACxCuT,EAAiBE,OAAO,CAACC,EAAGC,IAAMD,EAAIC,EAAG,GAAKJ,EAAiBvT,OAC/D,GAEE4T,EAAiBC,EAAkB3G,GAEnCxP,EAAa,CAAA,EACnB,IAAA,IAASD,EAAO,EAAGA,GAAQ,EAAGA,IAAQ,CAEpC,MAAMqW,EAAa7N,KAAKrG,IAAI4T,GAAa,EAAiB,IAAZ/V,EAAO,IAAWmW,EAAeG,gBAE/ErW,EAAWD,GAAQ,CACjBQ,cAAe6V,EACf3V,aAAcyV,EAAezV,aAC7BC,QAASwV,EAAexV,QACxBC,aAAcuV,EAAevV,aAC7BG,UAAWoV,EAAepV,UAC1BF,qBAAsBsV,EAAetV,qBAEzC,CAEA,OAAOZ,GAIHmW,EAAqB3G,IACzB,MAAM8G,EAAW,CACfC,WAAc,CACZ9V,aAAc,GACdC,QAAS,GACTC,aAAc,EACdG,UAAW,EACXF,qBAAsB,EACtByV,eAAgB,GAElBG,WAAc,CACZ/V,aAAc,GACdC,QAAS,GACTC,aAAc,EACdG,UAAW,EACXF,qBAAsB,EACtByV,eAAgB,KAElBI,QAAS,CACPhW,aAAc,GACdC,QAAS,GACTC,aAAc,EACdG,UAAW,EACXF,qBAAsB,EACtByV,eAAgB,MAIpB,OAAOC,EAAS9G,IAAW8G,EAASG,SAWhCC,EAAgB3E,IACpByC,KAAyB5U,EAAKqL,OAAOzJ,GAAMA,IAAOuQ,IAC9C4C,IAAkB5C,IACpB6C,EAAiB,MACjBF,EAAc,cAWZiC,EAAuBlN,EAAAA,YAAY,CAACsI,EAAUvF,KAOlD,GANA0I,EAAkBtV,IAAA,IACbA,EACHmS,CAACA,GAAW,IAAKnS,EAAKmS,MAAcvF,MAIrB,QAAbuF,EAAoB,CACtB,MAAMlP,EAAUc,EAAqB,IAAKsR,EAAexC,OAAQjG,IACjE4I,UAAiCxV,EAAM6S,IAAK5P,IAC9C,GACC,CAACoS,IAGE2B,EAAiB,CACrBC,SAAU,CACRjG,MAAO,EACPrL,EAAG,EACHkL,WAAYwD,GAEd6C,SAAU,CACRlG,MAAO,EACPrL,EAAG,EACHkL,WAAYwD,GAEd8C,QAAS,CACPnG,MAAO,KACPrL,GAAG,GACHkL,WAAYwD,IAIhB,OACE/S,EAAAA,KAAC,MAAA,CAAIC,UAAU,sDAEbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,0EACbC,SAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,8BACbC,SAAAF,OAAC,MAAA,CAAIC,UAAU,oCACZC,SAAA,CAAAiT,EACCnT,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACCC,QAAS,KACPgT,EAAmB,MACnBI,EAAc,YACdF,EAAiB,KAEnBrT,UAAU,sDAEVC,SAAAC,EAAAA,IAAC2V,EAAA,CAAUzI,KAAM,cAElB,MAAA,CACCnN,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,oCACXC,SAAAiT,EAAgB3P,OAEnBxD,EAAAA,KAAC,IAAA,CAAEC,UAAU,wBACVC,SAAA,CAAAiT,EAAgB7E,OAAO,MAAI6E,EAAgB9E,gBAKlDlO,EAAAA,IAAC,KAAA,CAAGF,UAAU,oCAAoCC,SAAA,oBAMnDiT,GACCnT,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACCC,QAAS,IAAMoT,EAAc,YAC7BvT,UAAW,oDACM,aAAfsT,EACI,4BACA,qCAEPrT,SAAA,aAGAuT,GACCtT,EAAAA,IAAC,SAAA,CACCC,QAAS,IAAMoT,EAAc,WAC7BvT,UAAW,oDACM,YAAfsT,EACI,4BACA,qCAEPrT,SAAA,oBAWbC,EAAAA,IAAC8D,EAAOC,IAAP,CACC6R,SAAUL,EACVpR,QAASiP,EACTtT,UAAU,8BAEVC,SAAAC,EAAAA,IAAC8O,EAAA,CAAgB+G,KAAK,OACnB9V,SAACiT,EA0BiB,YAAfI,GAA4BE,EAE9BzT,EAAAA,KAACiE,EAAOC,IAAP,CAECC,QAAS,CAAEC,QAAS,EAAGsL,MAAO,KAC9BpL,QAAS,CAAEF,QAAS,EAAGsL,MAAO,GAC9BR,KAAM,CAAE9K,QAAS,EAAGsL,MAAO,KAC3BH,WAAYwD,EACZ9S,UAAU,YAEVC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,8BACbC,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACCC,QAAS,IAAMoT,EAAc,YAC7BvT,UAAU,sDAEVC,SAAAC,EAAAA,IAAC8V,EAAA,CAAahW,UAAU,yBAE1BE,EAAAA,IAAC,KAAA,CAAGF,UAAU,oCACXC,SAAAiU,EAAiB+B,KAAKC,GAAKA,EAAE7V,KAAOmT,IAAgBjQ,UAGzDrD,EAAAA,IAAC,SAAA,CACCC,QAAS,IAAMoV,EAAa/B,GAC5BxT,UAAU,qDACXC,SAAA,cAKHC,EAAAA,IAACyQ,EAAA,CACCC,SAAU4C,EACV3C,YAAaqC,EACbjV,OAAQ6V,EAAeN,GACvB9R,QAASsS,EAAgBR,GACzB1C,cAAgBzF,GAAcmK,EAAqBhC,EAAenI,GAClE6F,cAAc,MAjCZ,kBAsCNnR,EAAAA,KAACiE,EAAOC,IAAP,CAECC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1B6K,KAAM,CAAE9K,QAAS,EAAGC,GAAG,IACvBkL,WAAYwD,EACZ9S,UAAU,YAGVC,SAAA,CAAAC,EAAAA,IAACyP,EAAA,CACChB,QAASuE,EACTtD,QAASwD,EAAcjS,OAAS,IAIjCiS,EAAcjS,OAAS,GACtBjB,EAAAA,IAAC,OAAIF,UAAU,wCACZC,SAAAmT,EAAc9R,IAAIsP,GACjB1Q,EAAAA,IAAC8D,EAAOC,IAAP,CAECC,QAAS,CAAEC,QAAS,EAAGsL,MAAO,IAC9BpL,QAAS,CAAEF,QAAS,EAAGsL,MAAO,GAC9BR,KAAM,CAAE9K,QAAS,EAAGsL,MAAO,IAC3BH,WAAYwD,EACZ9S,UAAU,uHAEVC,SAAAC,EAAAA,IAACyQ,EAAA,CACCC,WACAC,YAAaqC,EACbjV,OAAQ6V,EAAelD,GACvBlP,QAASsS,EAAgBpD,GACzBE,cAAgBzF,GAAcmK,EAAqB5E,EAAUvF,GAC7D0F,QAAS,IAhNX,CAACH,IACnB6C,EAAiB7C,GACjB2C,EAAc,YA8MqB4C,CAAYvF,GAC3BI,SAAU,IAAMuE,EAAa3E,GAC7BK,WAAW,KAfRL,MAuBb7Q,EAAAA,KAAC,MAAA,CAAIC,UAAU,gCACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,yCAAyCC,SAAA,6BAGvDC,EAAAA,IAAC,MAAA,CAAIF,UAAU,wCACZC,WACE6J,OAAOsM,IAAWhD,EAAcvE,SAASuH,EAAO/V,KAChDiB,IAAI8U,IACH,MAAMrS,EAAOqS,EAAO5S,KACpB,OACEzD,EAAAA,KAACiE,EAAOkL,OAAP,CAEC/O,QAAS,KAAMkW,OAtPpBzF,EAsP8BwF,EAAO/V,QArPjD+S,EAAcvE,SAAS+B,IAC1ByC,EAAiB5U,GAAQ,IAAIA,EAAMmS,KAFrB,IAACA,GAuPKzB,WAAY,CAAEM,MAAO,MACrBC,SAAU,CAAED,MAAO,KACnBzP,UAAU,mHAEVC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAW,wDAAwDoW,EAAO7E,2CAA2C6E,EAAO7E,8BAC/HtR,SAAAC,MAAC6D,GAAK/D,UAAW,gBAAgBoW,EAAO7E,gBAE1CrR,EAAAA,IAAC,KAAA,CAAGF,UAAU,iCACXC,WAAOsD,OAEVrD,EAAAA,IAAC,IAAA,CAAEF,UAAU,wBACVC,WAAOuR,gBAbL4E,EAAO/V,aApDpB,mBAlENH,EAAAA,IAAC8D,EAAOC,IAAP,CAECC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1B6K,KAAM,CAAE9K,QAAS,EAAGC,GAAG,IACvBkL,WAAYwD,EACZ9S,UAAU,oBAEVC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oBACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,CAAAC,EAAAA,IAAC,OAAIF,UAAU,iFACbC,eAAC8O,EAAA,CAAO/O,UAAU,4BAEpBE,EAAAA,IAAC,KAAA,CAAGF,UAAU,yCAAyCC,SAAA,wBAGvDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,wBAAwBC,SAAA,+DAKvCC,EAAAA,IAACyN,EAAA,CAAgBC,gBAAiBkB,QApBhC,6BCvSZwH,EAAgB,KACpB,MAAOC,EAAYC,GAAiBnY,EAAAA,SAAS,YAE7C,MAAmB,QAAfkY,QACM/U,EAAA,CAAgBC,OAAQ,IAAM+U,EAAc,cAGnC,eAAfD,QACMvM,EAAA,CAAevI,OAAQ,IAAM+U,EAAc,cAGlC,WAAfD,QACMtD,EAAA,IAIRlT,EAAAA,KAAC,MAAA,CAAIC,UAAU,0CACbC,SAAA,CAAAC,EAAAA,IAACuW,EAAA,CACCC,MAAM,sCACNlF,YAAY,sHACZmF,UAAU,kBACVC,SAAS,mHAEX7W,EAAAA,KAAC,MAAA,CAAIC,UAAU,oBACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,OACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,0BAA0BC,SAAA,mBACxCC,EAAAA,IAAC,IAAA,CAAEF,UAAU,gBAAgBC,SAAA,wDAM/BC,MAAC,MAAA,CAAIF,UAAU,OACbC,eAACoJ,EAAA,CAAKrJ,UAAU,mEACdC,SAAAC,EAAAA,IAAC,OAAIF,UAAU,MACbC,SAAAF,OAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yBACbC,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,MAAMvD,UAAU,oCAC3BE,EAAAA,IAAC,KAAA,CAAGF,UAAU,gCAAgCC,SAAA,qBAC9CC,EAAAA,IAAC,MAAA,CAAIF,UAAU,oFAAoFC,SAAA,WAIrGC,EAAAA,IAAC,IAAA,CAAEF,UAAU,gDAAgDC,SAAA,mNAG7DF,EAAAA,KAAC,MAAA,CAAIC,UAAU,4BACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,oEAAoEC,SAAA,yBAGpFC,EAAAA,IAAC,OAAA,CAAKF,UAAU,oEAAoEC,SAAA,+BAGpFC,EAAAA,IAAC,OAAA,CAAKF,UAAU,oEAAoEC,SAAA,yBAGpFC,EAAAA,IAAC,OAAA,CAAKF,UAAU,oEAAoEC,SAAA,uBAItFC,EAAAA,IAACiN,EAAA,CACCnN,UAAU,wEACVG,QAAS,IAAMqW,EAAc,cAC9BvW,SAAA,yCAIF,MAAA,CAAID,UAAU,kBACbC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,oFACbC,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,WAAWvD,UAAU,+BAChCE,EAAAA,IAAC,MAAA,CAAIF,UAAU,+EAS3BE,MAAC,MAAA,CAAIF,UAAU,OACbC,eAACoJ,EAAA,CAAKrJ,UAAU,+DACdC,SAAAC,EAAAA,IAAC,OAAIF,UAAU,MACbC,SAAAF,OAAC,MAAA,CAAIC,UAAU,oCACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yBACbC,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,WAAWvD,UAAU,iCAChCE,EAAAA,IAAC,KAAA,CAAGF,UAAU,gCAAgCC,SAAA,uBAEhDC,EAAAA,IAAC,IAAA,CAAEF,UAAU,6CAA6CC,SAAA,2MAG1DF,EAAAA,KAAC,MAAA,CAAIC,UAAU,4BACbC,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAKF,UAAU,8DAA8DC,SAAA,6BAG9EC,EAAAA,IAAC,OAAA,CAAKF,UAAU,8DAA8DC,SAAA,yBAG9EC,EAAAA,IAAC,OAAA,CAAKF,UAAU,8DAA8DC,SAAA,yBAG9EC,EAAAA,IAAC,OAAA,CAAKF,UAAU,8DAA8DC,SAAA,sBAIhFC,EAAAA,IAACiN,EAAA,CACCnN,UAAU,kEACVG,QAAS,IAAMqW,EAAc,UAC9BvW,SAAA,6BAIHC,MAAC,MAAA,CAAIF,UAAU,kBACbC,eAAC,MAAA,CAAID,UAAU,wEACbC,SAAAC,EAAAA,IAAC6D,GAAKR,KAAK,YAAYvD,UAAU,yCAQ7CD,EAAAA,KAAC,MAAA,CAAIC,UAAU,uDACbC,SAAA,CAAAF,EAAAA,KAACsJ,EAAA,CAAKrJ,UAAU,uDACdC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,mGACfD,EAAAA,KAAC,MAAA,CAAIC,UAAU,eACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yBACbC,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,MAAMvD,UAAU,kCAC3BE,EAAAA,IAAC,KAAA,CAAGF,UAAU,wBAAwBC,SAAA,qBACtCC,EAAAA,IAAC,MAAA,CAAIF,UAAU,oFAAoFC,SAAA,WAIrGC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,6IAGlCC,EAAAA,IAACiN,EAAA,CACCnN,UAAU,6CACVG,QAAS,IAAMqW,EAAc,cAC9BvW,SAAA,4CAMJoJ,EAAA,CAAKrJ,UAAU,8BACdC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,MACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yBACbC,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,aAAavD,UAAU,+BAClCE,EAAAA,IAAC,KAAA,CAAGF,UAAU,wBAAwBC,SAAA,6BAExCC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,qHAGlCC,EAAAA,IAACiN,EAAA,CACCnN,UAAU,SACVG,QAAS,IAAMqW,EAAc,OAC9BvW,SAAA,wCAMJoJ,EAAA,CAAKrJ,UAAU,8BACdC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,MACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yBACbC,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,YAAYvD,UAAU,gCACjCE,EAAAA,IAAC,KAAA,CAAGF,UAAU,wBAAwBC,SAAA,2BAExCC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,yDAGjCkN,EAAA,CAAOnN,UAAU,SAAS6W,UAAQ,EAAC5W,SAAA,2BAMvCoJ,EAAA,CAAKrJ,UAAU,8BACdC,SAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,MACbC,SAAA,CAAAF,EAAAA,KAAC,MAAA,CAAIC,UAAU,yBACbC,SAAA,CAAAC,EAAAA,IAAC6D,EAAA,CAAKR,KAAK,aAAavD,UAAU,iCAClCE,EAAAA,IAAC,KAAA,CAAGF,UAAU,wBAAwBC,SAAA,oBAExCC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,yDAGjCkN,EAAA,CAAOnN,UAAU,SAAS6W,UAAQ,EAAC5W,SAAA,wBAO1CC,EAAAA,IAAC,MAAA,CAAIF,UAAU,OACbC,SAAAC,EAAAA,IAACmJ,EAAA,CAAKrJ,UAAU,8BACdC,SAAAF,OAAC,MAAA,CAAIC,UAAU,MACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,6BAA6BC,SAAA,0BAC3CF,EAAAA,KAAC,MAAA,CAAIC,UAAU,wCACbC,SAAA,CAAAF,OAAC,MAAA,CACCE,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,mCAAmCC,SAAA,0BACjDF,EAAAA,KAAC,KAAA,CAAGC,UAAU,kCACZC,SAAA,CAAAC,EAAAA,IAAC,MAAGD,SAAA,sDACJC,EAAAA,IAAC,MAAGD,SAAA,oDACJC,EAAAA,IAAC,MAAGD,SAAA,uDAGP,MAAA,CACCA,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,oCAAoCC,SAAA,8BAClDF,EAAAA,KAAC,KAAA,CAAGC,UAAU,kCACZC,SAAA,CAAAC,EAAAA,IAAC,MAAGD,SAAA,kDACJC,EAAAA,IAAC,MAAGD,SAAA,wCACJC,EAAAA,IAAC,MAAGD,SAAA,6CAGP,MAAA,CACCA,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,qCAAqCC,SAAA,uBACnDF,EAAAA,KAAC,KAAA,CAAGC,UAAU,kCACZC,SAAA,CAAAC,EAAAA,IAAC,MAAGD,SAAA,oDACJC,EAAAA,IAAC,MAAGD,SAAA,oCACJC,EAAAA,IAAC,MAAGD,SAAA,kDAGP,MAAA,CACCA,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,qCAAqCC,SAAA,oBACnDF,EAAAA,KAAC,KAAA,CAAGC,UAAU,kCACZC,SAAA,CAAAC,EAAAA,IAAC,MAAGD,SAAA,sCACJC,EAAAA,IAAC,MAAGD,SAAA,oCACJC,EAAAA,IAAC,MAAGD,SAAA,mCAIVC,EAAAA,IAAC,MAAA,CAAIF,UAAU,OACbC,SAAAC,EAAAA,IAACiN,EAAA,CACCnN,UAAU,gCACVG,QAAS,IAAMqW,EAAc,OAC9BvW,SAAA,mCAQTC,EAAAA,IAAC,MAAA,CAAIF,UAAU,OACbC,SAAAC,EAAAA,IAACmJ,EAAA,CAAKrJ,UAAU,8BACdC,SAAAF,OAAC,MAAA,CAAIC,UAAU,MACbC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAGF,UAAU,6BAA6BC,SAAA,0BAC3CC,EAAAA,IAAC,IAAA,CAAEF,UAAU,qBAAqBC,SAAA,yEAGlCF,EAAAA,KAAC,MAAA,CAAIC,UAAU,+CACbC,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,iBAAiBC,SAAA,gBAChCC,EAAAA,IAAC,MAAA,CAAIF,UAAU,iBAAiBC,SAAA,gBAChCC,EAAAA,IAAC,MAAA,CAAIF,UAAU,iBAAiBC,SAAA,iBAChCC,EAAAA,IAAC,MAAA,CAAIF,UAAU,iBAAiBC,SAAA,2BAElCC,EAAAA,IAAC,OAAIF,UAAU,OACbC,eAACkN,EAAA,CAAO0J,UAAQ,EAAC5W,SAAA"}