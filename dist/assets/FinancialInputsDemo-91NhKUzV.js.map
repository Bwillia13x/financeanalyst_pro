{"version":3,"mappings":";0cAKiBA,EAAMC,WACrB,EAEIC,YACAC,KACAC,UACAC,iBAAgB,EAChBC,YAAW,EACXC,YAAW,EACXC,QACAC,cACAC,QACAC,OAAO,aACJC,GAELC,KAGA,MAAMC,EAAaX,GAAM,YAAYY,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,KAS1E,cACG,OAAIhB,UAAWiB,EAAG,6BAA8BjB,GAC/CkB,SAAA,CAAAC,OAAC,OAAInB,UAAU,6BACbkB,SAAA,CAAAE,MAAC,SACCC,KAAK,WACLV,MACAV,GAAIW,EACJV,UACAE,WACAC,WACAL,UAAU,aACNU,IAGNS,OAAC,SACCG,QAASV,EACTZ,UAAWiB,EACT,0UAvBU,CAClBM,GAAI,UACJC,QAAS,UACTC,GAAI,WAqBgBhB,GACZP,GAAW,oDACXC,GAAiB,oDACjBK,GAAS,qBACTJ,GAAY,iCAGbc,SAAA,CAAAhB,IAAYC,GACXiB,MAACM,EAAA,CAAM1B,UAAU,0DAElBG,GACCiB,MAACO,EAAA,CAAM3B,UAAU,iEAKrBM,GAASC,GAAeC,IACxBW,OAAC,OAAInB,UAAU,mBACZkB,SAAA,CAAAZ,GACCa,OAAC,SACCG,QAASV,EACTZ,UAAWiB,EACT,4GACAT,EAAQ,mBAAqB,mBAG9BU,SAAA,CAAAZ,EACAD,GAAYe,MAAC,QAAKpB,UAAU,wBAAwBkB,SAAA,SAIxDX,IAAgBC,SACd,KAAER,UAAU,gCAAiCkB,SAAAX,IAG/CC,GAASY,MAAC,KAAEpB,UAAU,2BAA4BkB,SAAAV,YAQtDoB,YAAc,WAGD9B,EAAMC,WAC1B,EAEIC,YACAkB,WACAZ,QACAC,cACAC,QACAH,YAAW,EACXD,YAAW,KACRM,GAELC,IAGEQ,OAAC,YACCR,MAAUP,WAAoBJ,UAAWiB,EAAG,YAAajB,MACrDU,EAEHQ,SAAA,CAAAZ,GACCa,OAAC,UACCnB,UAAWiB,EAAG,sBAAuBT,EAAQ,mBAAqB,mBAEjEU,SAAA,CAAAZ,EACAD,GAAYe,MAAC,QAAKpB,UAAU,wBAAwBkB,SAAA,SAIxDX,IAAgBC,SAAU,KAAER,UAAU,gCAAiCkB,SAAAX,IAExEa,MAAC,OAAIpB,UAAU,YAAakB,aAE3BV,GAASY,MAAC,KAAEpB,UAAU,2BAA4BkB,SAAAV,QAM7CoB,YAAc,gBCjIPC,OAAK,IAAAC,EAAA,IACxBC,OAAO,4CAAUC,0BAAEC,KAAKC,IAAA,CACtBV,QAAS,EAAGW,UAASzB,MACnB,MAAQ0B,eAAUC,EAAAC,MAAKA,QAAOC,EAAAC,cAAOA,EAAAC,QAAeA,EAAAC,oBAASA,GAAwBR,EACrF,OACEd,MAACsB,EAAA,CAAoBC,MAAM,OAAOC,OAAO,OACvC1B,SAAAC,OAACiB,EAAA,CAASD,UAAgBzB,EACxBQ,SAAA,CAAAE,MAACoB,EAAA,CAAcK,gBAAgB,MAAMC,OAAO,wBAC5C1B,MAACkB,EAAA,CAAMQ,OAAO,gCAAgCC,SAAU,KACxD3B,MAACmB,EAAA,CAAMO,OAAO,gCAAgCC,SAAU,KACxD3B,MAACqB,EAAA,CACCO,aAAc,CACZC,gBAAiB,uBACjBC,OAAQ,gCACRC,aAAc,SAGlB/B,MAACiB,EAAA,CAAIe,QAAQ,QAAQC,KAAK,uBAAuBC,OAAQ,CAAC,EAAG,EAAG,EAAG,eAQtDzB,OAAK,IAAAC,EAAA,IAC5BC,OAAO,4CAAUC,0BAAEC,KAAKC,IAAA,CACtBV,QAAS,EAAGW,UAASzB,MACnB,MAAQ6C,uBAAcC,EAAAlB,MAASA,QAAOC,EAAAC,cAAOA,EAAAC,QAAeA,EAAAC,oBAASA,GACnER,EACF,OACEd,MAACsB,EAAA,CAAoBC,MAAM,OAAOC,OAAO,OACvC1B,SAAAC,OAACoC,EAAA,CAAapB,UAAgBzB,EAC5BQ,SAAA,CAAAE,MAACoB,EAAA,CAAcK,gBAAgB,MAAMC,OAAO,wBAC5C1B,MAACkB,EAAA,CAAMQ,OAAO,gCAAgCC,SAAU,KACxD3B,MAACmB,EAAA,CAAMO,OAAO,gCAAgCC,SAAU,KACxD3B,MAACqB,EAAA,CACCO,aAAc,CACZC,gBAAiB,uBACjBC,OAAQ,gCACRC,aAAc,SAGlB/B,MAACoC,EAAA,CAAQJ,QAAQ,QAAQC,KAAK,mCAQpBxB,OAAK,IAAAC,EAAA,IACzBC,OAAO,4CAAUC,0BAAEC,KAAKC,IAAA,CACtBV,QAAS,EAAGW,UAASzB,MACnB,MAAQ+C,iBAAWC,EAAApB,MAAMA,QAAOC,EAAAC,cAAOA,EAAAC,QAAeA,EAAAC,oBAASA,GAAwBR,EACvF,OACEd,MAACsB,EAAA,CAAoBC,MAAM,OAAOC,OAAO,OACvC1B,SAAAC,OAACsC,EAAA,CAAUtB,UAAgBzB,EACzBQ,SAAA,CAAAE,MAACoB,EAAA,CAAcK,gBAAgB,MAAMC,OAAO,wBAC5C1B,MAACkB,EAAA,CAAMQ,OAAO,gCAAgCC,SAAU,KACxD3B,MAACmB,EAAA,CAAMO,OAAO,gCAAgCC,SAAU,KACxD3B,MAACqB,EAAA,CACCO,aAAc,CACZC,gBAAiB,uBACjBC,OAAQ,gCACRC,aAAc,eAGjBO,EAAA,CAAKN,QAAQ,QAAQC,KAAK,uBAAuBP,OAAO,mCCrErE,MAAMa,EAAiB7D,EAAMC,WAAW,EACtCC,YACAM,QACAsD,QACAC,WACAC,SACAC,cAAc,OACd1C,OAAO,WACP2C,SACAC,SACAC,SAAS,QACTC,WAAW,MACX3D,QACAD,cACAF,YAAW,EACXD,YAAW,EACXgE,WAAU,EACVC,WAAW,EACXC,iBAAgB,EAChBrE,KACAsE,aAAY,EACZC,eACAC,MACAC,SACGhE,GACFC,KACD,MAAOgE,EAAcC,GAAmBC,WAAS,KAC1CC,EAAWC,GAAgBF,YAAS,IACpCG,EAASC,GAAcJ,YAAS,GACjCK,EAAWC,SAAO,MAClBC,EAAezE,GAAOuE,EAGtBG,EAAUpF,GAAM,mBAAmBY,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,KAGxEsE,EAAeC,IACnB,IAAKA,GAAe,IAARA,EAAW,MAAO,GAE9B,MAAMC,EAA0B,iBAARD,EAAmBE,WAAWF,GAAOA,EAC7D,GAAIG,MAAMF,GAAW,MAAO,GAE5B,OAAQnE,GACN,IAAK,WACH,OAAO,IAAIsE,KAAKC,aAAa1B,EAAQ,CACnC2B,MAAO,WACP1B,WACA2B,sBAAuBzB,EACvB0B,sBAAuB1B,IACtB2B,OAAOR,GAEZ,IAAK,aACH,OAAO,IAAIG,KAAKC,aAAa1B,EAAQ,CACnC2B,MAAO,UACPC,sBAAuBzB,EACvB0B,sBAAuB1B,IACtB2B,OAAOR,EAAW,KAEvB,QACE,OAAO,IAAIG,KAAKC,aAAa1B,EAAQ,CACnC4B,sBAAuBzB,EACvB0B,sBAAuB1B,IACtB2B,OAAOR,KAKVS,EAAcV,IAClB,IAAKA,EAAK,OAAO,EAGjB,MAAMW,EAAaX,EAChBY,QAAQ,WAAY,IACpBA,QAAQ,KAAM,IAEXX,EAAWC,WAAWS,GAC5B,OAAOR,MAAMF,GAAY,EAAIA,GAkC/BY,YAAU,KACHtB,GACHF,EAAgBU,EAAY1B,KAE7B,CAACA,EAAOvC,EAAM8C,EAAUD,EAAQG,EAAUS,IA4E7C,OANAsB,YAAU,KACJ7B,GAAaa,EAAaiB,SAC5BjB,EAAaiB,QAAQC,SAEtB,CAAC/B,IAGFpD,OAAC,OAAInB,UAAU,YACZkB,SAAA,CAAAZ,GACCa,OAAC,SACCG,QAAS+D,EACTrF,UAAWiB,EACT,6FACAT,IAAUwE,EAAU,mBAAqB,mBAG1C9D,SAAA,CAAAZ,EACAD,GAAYe,MAAC,QAAKpB,UAAU,wBAAwBkB,SAAA,SAIzDC,OAAC,OAAInB,UAAU,WAEbkB,SAAA,CAAAC,OAAC,OAAInB,UAAU,4FACZkB,SAAA,CApCO,MACd,OAAQG,GACN,IAAK,WACH,OAAOD,MAACmF,EAAA,CAAW9F,KAAM,GAAIT,UAAU,0BACzC,IAAK,aACH,OAAOoB,MAACoF,EAAA,CAAQ/F,KAAM,GAAIT,UAAU,0BACtC,QACE,OAAOoB,MAACqF,EAAA,CAAWhG,KAAM,GAAIT,UAAU,4BA6BpC0G,GACA1C,GACC5C,MAAC,QAAKpB,UAAU,4CACbkB,SAAA8C,OAKP5C,MAAC,SACCT,IAAKyE,EACLnF,GAAIoF,EACJhE,KAAK,OACLuC,MAAOe,EACPd,SArEc8C,IACpB,MAAMC,EAAWD,EAAEE,OAAOjD,QAGLU,EAAgB,gBAAkB,eAEtCwC,KAAKF,IAA0B,KAAbA,IACjChC,EAAgBgC,IA+DZG,QAzGaJ,IACnB5B,GAAa,GAEb,MAAMiC,EAAWpD,EAAQA,EAAM7C,WAAa,GAC5C6D,EAAgBoC,GAGhBC,WAAW,KACL7B,EAAaiB,SACfjB,EAAaiB,QAAQa,UAEtB,IA+FGpD,OA3FY6C,IAClB5B,GAAa,GACb,MAAMiC,EAAWf,EAAWtB,GAtDR,CAACY,IACrB,MAAMC,EAA0B,iBAARD,EAAmBU,EAAWV,GAAOA,EAE7D,IAAI4B,GAAQ,EACRC,EAAe,GAEf/G,IAAcmF,GAAyB,IAAbA,GAC5B2B,GAAQ,EACRC,EAAe,2BACL9C,GAAiBkB,EAAW,GACtC2B,GAAQ,EACRC,EAAe,wCACE,IAAR3C,GAAqBe,EAAWf,GACzC0C,GAAQ,EACRC,EAAe,0BAA0B9B,EAAYb,WACpC,IAARC,GAAqBc,EAAWd,IACzCyC,GAAQ,EACRC,EAAe,yBAAyB9B,EAAYZ,MAGtDO,EAAWkC,GAEP3C,GACFA,EAAa2C,EAAOC,IAiCtBC,CAAcL,GAGdpC,EAAgBU,EAAY0B,IAGxBnD,GACFA,EAASmD,GAGPlD,GACFA,EAAO6C,IA6EHW,WA5DgBX,IACR,UAAVA,EAAEY,MACJZ,EAAEa,iBACFpC,EAAaiB,SAASoB,SA0DlB1D,cACA3D,SAAUA,GAAYgE,EACtBpE,UAAWiB,EAET,kFACA,kEACA,oCACA,sGACA,kDACA,8BAGA,aACAgD,GAAU,QAGV,uBACA,oCAGAa,GAAa,6CACbtE,IAAUwE,GAAW,oDACrBZ,GAAW,gBAEXpE,MAEEU,IAILuD,GACC7C,MAAC,OAAIpB,UAAU,gEACbkB,eAAC,QAAKlB,UAAU,4CACbkB,SAAA+C,MAMNG,SACE,OAAIpE,UAAU,4CACbkB,SAAAE,MAAC,OAAIpB,UAAU,8FAKlBQ,IAAUwE,IAAYZ,GACrBhD,MAAC,OAAIpB,UAAU,4CACbkB,eAACwG,EAAA,CAAYjH,KAAM,GAAIT,UAAU,0BAMtCO,IAAgBC,IAAUwE,GACzB5D,MAAC,KAAEpB,UAAU,gCACVkB,SAAAX,KAKHC,IAAUwE,IACV7D,OAAC,KAAEnB,UAAU,mDACXkB,SAAA,CAAAE,MAACsG,EAAA,CAAYjH,KAAM,KAClBD,GAAS,wBAOpBmD,EAAe/B,YAAc,iBCxS7B,MAAM+F,EAAe,EACnB/D,QACAC,WACA+D,SACAC,WACA7H,YACAqB,OAAO,WACP0C,cAAc,OACd+D,aAAY,EACZC,aAAY,EACZC,SACA5H,YAAW,EACXgE,WAAU,EACV5D,QACA0D,SAAS,QACTC,WAAW,MACXE,WAAW,EACXC,iBAAgB,EAChBG,MACAC,MACAH,aAAY,EACZ0D,gBAAe,EACfC,UAAU,aACPxH,MAEH,MAAOyH,EAAcC,GAAmBvD,WAAS,KAC1CwD,EAAYC,GAAiBzD,WAAS,KACtC0D,EAAWC,GAAgB3D,YAAS,GACrCK,EAAWC,SAAO,MAGlBG,EAAeC,IACnB,IAAKA,GAAe,IAARA,EAAW,MAAO,IAE9B,MAAMC,EAA0B,iBAARD,EAAmBE,WAAWF,GAAOA,EAC7D,GAAIG,MAAMF,GAAW,MAAO,IAE5B,OAAQnE,GACN,IAAK,WACH,MAAMoH,EAAY,IAAI9C,KAAKC,aAAa1B,EAAQ,CAC9C2B,MAAO,WACP1B,WACA2B,sBAAuBzB,EACvB0B,sBAAuB1B,IACtB2B,OAAOR,GAGJkD,EAAW7H,KAAK8H,IAAInD,GAC1B,OAAIkD,GAAY,IACP,IAAI/C,KAAKC,aAAa1B,EAAQ,CACnC4B,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAOR,EAAW,KAAW,IACvBkD,GAAY,IACd,IAAI/C,KAAKC,aAAa1B,EAAQ,CACnC4B,sBAAuB,EACvBC,sBAAuB,IACtBC,OAAOR,GAELiD,EAAUtC,QAAQ,QAAS,IAEpC,IAAK,aACH,OAAO,IAAIR,KAAKC,aAAa1B,EAAQ,CACnC2B,MAAO,UACPC,sBAAuBzB,EACvB0B,sBAAuB1B,IACtB2B,OAAOR,EAAW,KAEvB,IAAK,SACH,OAAO,IAAIG,KAAKC,aAAa1B,EAAQ,CACnC4B,sBAAuBzB,EACvB0B,sBAAuB1B,IACtB2B,OAAOR,GAEZ,QACE,OAAOD,GAAKxE,YAAc,KAK1BkF,EAAcV,IAClB,IAAKA,EAAK,OAAO,EAGjB,MAAMW,EAAaX,EAChBY,QAAQ,WAAY,IACpBA,QAAQ,KAAM,IAEXX,EAAWC,WAAWS,GAC5B,OAAOR,MAAMF,GAAY,EAAIA,GAyCzBoD,EAAa,KACjB,MAAMC,EAAsB,SAATxH,EAAkB8G,EAAelC,EAAWkC,GAtC3C,CAAC5C,IACrB,MAAMC,EAAoB,SAATnE,EAAkBkE,EAAMU,EAAWV,GAEpD,QAAa,SAATlE,KAECiD,GAAiBkB,EAAW,GAC/B8C,EAAc,mCACP,QAGG,IAAR7D,GAAqBe,EAAWf,GAClC6D,EAAc,0BAA0BhD,EAAYb,MAC7C,QAGG,IAARC,GAAqBc,EAAWd,GAClC4D,EAAc,yBAAyBhD,EAAYZ,MAC5C,IAGT4D,EAAc,IACP,MAmBFjB,CAAcc,KAIftE,GACFA,EAASgF,GAGPjB,GACFA,EAAOiB,GAGLb,GACFA,GAAO,KAKLc,EAAe,KACnBV,EAAgB,IAChBE,EAAc,IAEVT,GACFA,IAGEG,GACFA,GAAO,IAKLe,EAAgBpC,IACpB,MAAMC,EAAWD,EAAEE,OAAOjD,MAE1B,GAAa,SAATvC,EAAiB,GACEiD,EAAgB,gBAAkB,eACtCwC,KAAKF,IAA0B,KAAbA,IACjCwB,EAAgBxB,EAEpB,MACEwB,EAAgBxB,IAKdoC,EAAkBrC,IACR,UAAVA,EAAEY,KACJZ,EAAEa,iBACFoB,KACmB,WAAVjC,EAAEY,KACXZ,EAAEa,iBACFsB,KACmB,QAAVnC,EAAEY,MACXZ,EAAEa,iBACFoB,MAKJxC,YAAU,KACJ2B,GAAa7C,EAASmB,SAAW9B,IACnCW,EAASmB,QAAQC,QACjBpB,EAASmB,QAAQa,WAElB,CAACa,EAAWxD,IAGf,MA6BM0E,EA7BmB,MACvB,OAAQf,GACN,IAAK,WACH,MAAO,CACLgB,UAAW,+DACXC,KAAMrB,EAAY,iBAAmB,iBACrCsB,MAAO,4CACPC,MAAO,+DACPC,SAAU,kBAEd,IAAK,UACH,MAAO,CACLJ,UAAW,4DACXC,KAAM,gBACNC,MAAO,qBACPC,MAAO,4DACPC,SAAU,iBAEd,QACE,MAAO,CACLJ,UAAW,mCACXC,KAAMrB,EAAY,gBAAkB,iBACpCsB,MAAO,2CACPC,MAAO,iDACPC,SAAU,oBAKHC,GAEf,OAAIxB,EAEA5G,OAAC,OAAInB,UAAU,WACbkB,SAAA,CAAAE,MAAC,SACCT,IAAKuE,EACL7D,KAAK,OACLuC,MAAOuE,EACPtE,SAAUkF,EACVS,UAAWR,EACXjF,cACA3D,SAAUgE,EACVpE,UAAWiB,EACT,8FACA,wEACAgI,EAAOI,MACPjF,GAAW,gBACXiE,GAAc,+CACdrI,KAKJmB,OAAC,OAAInB,UAAU,sCACbkB,SAAA,CAAAE,MAAC,UACCqI,QAASb,EACTxI,SAAUgE,KAAaiE,EACvBrI,UAAWiB,EACT,iEACA,6DACA,mDAEFyI,MAAM,eAENxI,SAAAE,MAACM,EAAA,CAAMjB,KAAM,OAEfW,MAAC,UACCqI,QAASX,EACT1I,SAAUgE,EACVpE,UAAWiB,EACT,yEACA,6DACA,mDAEFyI,MAAM,iBAENxI,SAAAE,MAACuI,EAAA,CAAElJ,KAAM,UAKZ2D,SACE,OAAIpE,UAAU,2CACbkB,SAAAE,MAAC,OAAIpB,UAAU,8FAKlBqI,GACClH,OAAC,OAAInB,UAAU,qFACbkB,SAAA,CAAAE,MAACsG,EAAA,CAAYjH,KAAM,KAClB4H,QAQTlH,OAAC,OACCsI,QAvLe,KACbrJ,GAAY0H,IAEhBM,EAAgBxE,EAAQA,EAAM7C,WAAa,IAC3CuH,EAAc,IAEVN,GACFA,GAAO,KAiLP4B,aAAc,IAAMpB,GAAa,GACjCqB,aAAc,IAAMrB,GAAa,GACjCxI,UAAWiB,EACT,uEACA,4DACAgI,EAAOC,WACN9I,IAAa0H,GAAamB,EAAOG,OACjChJ,IAAa0H,GAAa,iBAC3BA,GAAa,0BACb1H,GAAY,gCACZI,GAAS,qBACTR,GAGFkB,SAAA,CAAAE,MAAC,QAAKpB,UAAWiJ,EAAOE,KACrBjI,SAAAoE,EAAY1B,KAIdkE,GACC1G,MAACqF,EAAA,CAAWhG,KAAM,GAAIT,UAAU,2BAIhC8H,IAAc1H,GAAY6H,GAC1B7G,MAAC0I,EAAA,CACCrJ,KAAM,GACNT,UAAWiB,EACT,0BACAsH,EAAY,aAAe,YAC3BU,EAAOK,YAMZ9I,GACCY,MAACsG,EAAA,CAAYjH,KAAM,GAAIT,UAAU,0BAIlCoE,SACE,OAAIpE,UAAU,OACbkB,SAAAE,MAAC,OAAIpB,UAAU,oGCxVnB+J,EAAkB,CACtBC,IAAK,CAAEC,OAAQ,IAAKC,KAAM,MAAO7F,SAAU,EAAG8F,KAAM,aACpDC,IAAK,CAAEH,OAAQ,IAAKC,KAAM,MAAO7F,SAAU,EAAG8F,KAAM,QACpDE,IAAK,CAAEJ,OAAQ,IAAKC,KAAM,MAAO7F,SAAU,EAAG8F,KAAM,iBACpDG,IAAK,CAAEL,OAAQ,IAAKC,KAAM,MAAO7F,SAAU,EAAG8F,KAAM,gBACpDI,IAAK,CAAEN,OAAQ,KAAMC,KAAM,MAAO7F,SAAU,EAAG8F,KAAM,mBACrDK,IAAK,CAAEP,OAAQ,KAAMC,KAAM,MAAO7F,SAAU,EAAG8F,KAAM,qBACrDM,IAAK,CAAER,OAAQ,MAAOC,KAAM,MAAO7F,SAAU,EAAG8F,KAAM,eACtDO,IAAK,CAAET,OAAQ,IAAKC,KAAM,MAAO7F,SAAU,EAAG8F,KAAM,iBAGhDQ,EAAgB7K,EAAMC,WAAW,EACrCC,YACAM,QACAsD,QAAQ,EACRC,WACAC,SACAC,cACAI,WAAW,MACXD,SAAS,QACT1D,QACAD,cACAF,YAAW,EACXD,YAAW,EACXgE,WAAU,EACVE,iBAAgB,EAChBsG,gBAAe,EACfC,aAAY,EACZC,gBACArK,OAAO,UACPyH,UAAU,UACVjI,KACAsE,aAAY,EACZC,eACAC,MACAC,MACAqG,OAAO,IACPC,qBAAoB,EACpBC,eACGvK,GACFC,KACD,MAAOgE,EAAcC,GAAmBC,WAAS,KAC1CC,EAAWC,GAAgBF,YAAS,IACpCG,EAASC,GAAcJ,YAAS,IAChCqG,EAAmBC,GAAwBtG,WAAS,IACrDK,EAAWC,SAAO,MAClBC,EAAezE,GAAOuE,EAGtBG,EAAUpF,GAAM,kBAAkBY,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,KAGvEoK,EAAiBrB,EAAgB5F,IAAa4F,EAAgBC,IAC9DqB,OAAkC,IAAdJ,EAA0BA,EAAYG,EAAe/G,SAGzEiH,EAAuBC,UAAQ,KACnC,GAAIxH,EAAa,OAAOA,EAExB,OADeyH,EAAe,IAE7B,CAACzH,EAAaI,EAAUkH,IAG3B,SAASG,EAAejG,EAAKkG,EAAU,IACrC,IAAKlG,GAAe,IAARA,EAAW,MAAO,GAE9B,MAAMC,EAA0B,iBAARD,EAAmBE,WAAWF,GAAOA,EAC7D,GAAIG,MAAMF,GAAW,MAAO,GAE5B,MAAMkG,WAAEA,GAAa,EAAAC,YAAOA,GAAc,GAAUF,EAGpD,GAAIE,GAAeX,GAAqBnK,KAAK8H,IAAInD,IAAa,IAAM,CAClE,MAAMkD,EAAW7H,KAAK8H,IAAInD,GACpBoG,EAAOpG,EAAW,EAAI,IAAM,GAElC,GAAIkD,GAAY,IACd,MAAO,GAAGkD,IAAOR,EAAenB,UAAUvB,EAAW,KAAYmD,QAAQ,MAC3E,GAAWnD,GAAY,IACrB,MAAO,GAAGkD,IAAOR,EAAenB,UAAUvB,EAAW,KAASmD,QAAQ,MACxE,GAAWnD,GAAY,IACrB,MAAO,GAAGkD,IAAOR,EAAenB,UAAUvB,EAAW,KAAMmD,QAAQ,KAEvE,CAEA,IACE,OAAO,IAAIlG,KAAKC,aAAa1B,EAAQ,CACnC2B,MAAO,WACP1B,WACA2B,sBAAuBuF,EACvBtF,sBAAuBsF,IACtBrF,OAAOR,EACZ,OAAShF,GAEP,MAAMiI,EAAYjD,EAASqG,QAAQR,GACnC,MAAO,GAAGD,EAAenB,SAASxB,GACpC,CACF,CAGA,SAASqD,EAAcvG,GACrB,IAAKA,EAAK,OAAO,EAGjB,MAAMwG,EAAMxG,EAAIxE,WAAWiL,cAC3B,IAAIC,EAAa,EAEbF,EAAIG,SAAS,KACfD,EAAa,IACJF,EAAIG,SAAS,KACtBD,EAAa,IACJF,EAAIG,SAAS,OACtBD,EAAa,KAIf,MAAM/F,EAAaX,EAChBxE,WACAoF,QAAQ,WAAY,IACpBA,QAAQ,KAAM,IAEXX,EAAWC,WAAWS,GAAc+F,EAC1C,OAAOvG,MAAMF,GAAY,EAAIA,CAC/B,CAGA,MA0CM2G,EAXW,MACf,IAAKtB,QAA+B,IAAlBC,EAA6B,OAAO,KAEtD,MAAMzE,EAA2B,iBAAVzC,EAAqBkI,EAAclI,GAAUA,GAAS,EACvEwI,EAAoC,iBAAlBtB,EAA6BgB,EAAchB,GAAkBA,GAAiB,EAEtG,OAAIzE,EAAU+F,EAAiB,KAC3B/F,EAAU+F,EAAiB,OACxB,WAGKC,GAGdjG,YAAU,KACHtB,GACHF,EAAgB4G,EAAe5H,EAAO,CAAE+H,YAAaX,MAEtD,CAACpH,EAAOO,EAAUD,EAAQmH,EAAmBvG,EAAWkG,IA4D3D5E,YAAU,KACJ7B,GAAaa,EAAaiB,SAC5BjB,EAAaiB,QAAQC,SAEtB,CAAC/B,IAgBJ,OACEpD,OAAC,OAAInB,UAAU,YACZkB,SAAA,CAAAZ,GACCa,OAAC,SACCG,QAAS+D,EACTrF,UAAWiB,EACT,6FACAT,IAAUwE,EAAU,mBAAqB,mBAG1C9D,SAAA,CAAAZ,EACAD,GAAYe,MAAC,QAAKpB,UAAU,wBAAwBkB,SAAA,SAIzDC,OAAC,OAAInB,UAAU,WAEZkB,SAAA,CAAA0J,GACCzJ,OAAC,OAAInB,UAAU,4FACbkB,SAAA,CAAAE,MAACmF,EAAA,CAAW9F,KAAM,GAAIT,UAAU,0BAChCoB,MAAC,QAAKpB,UAAU,4CACbkB,WAAegJ,UAKtB9I,MAAC,SACCT,IAAKyE,EACLnF,GAAIoF,EACJhE,KAAK,OACLuC,MAAOe,EACPd,SAzEc8C,IACpB,MAAMC,EAAWD,EAAEE,OAAOjD,QAGZU,EACV,uBACA,sBAEMwC,KAAKF,IAA0B,KAAbA,IAC1BhC,EAAgBgC,IAiEZG,QA7GaJ,IACnB5B,GAAa,GAEb,MAAMiC,EAAWpD,EAAQA,EAAM7C,WAAa,GAC5C6D,EAAgBoC,GAGhBC,WAAW,KACL7B,EAAaiB,SACfjB,EAAaiB,QAAQa,UAEtB,IAmGGpD,OA/FY6C,IAClB5B,GAAa,GACb,MAAMiC,EAAW8E,EAAcnH,GArEX,CAACY,IACrB,MAAMC,EAA0B,iBAARD,EAAmBuG,EAAcvG,GAAOA,EAEhE,IAAI4B,GAAQ,EACRmF,EAAU,GAEVjM,IAAcmF,GAAyB,IAAbA,GAC5B2B,GAAQ,EACRmF,EAAU,2BACAhI,GAAiBkB,EAAW,GACtC2B,GAAQ,EACRmF,EAAU,wCACO,IAAR7H,GAAqBe,EAAWf,GACzC0C,GAAQ,EACRmF,EAAU,0BAA0Bd,EAAe/G,WAClC,IAARC,GAAqBc,EAAWd,IACzCyC,GAAQ,EACRmF,EAAU,yBAAyBd,EAAe9G,MAGpDO,EAAWkC,GACXgE,EAAqBmB,GAEjB9H,GACFA,EAAa2C,EAAOmF,IA+CtBjF,CAAcL,GAGdpC,EAAgB4G,EAAexE,EAAU,CAAE2E,YAAaX,KAGpDnH,GACFA,EAASmD,GAGPlD,GACFA,EAAO6C,IAiFHW,WA9DgBX,IACR,UAAVA,EAAEY,MACJZ,EAAEa,iBACFpC,EAAaiB,SAASoB,SA4DlB1D,YAAauH,EACblL,SAAUA,GAAYgE,EACtB2G,OACA/K,UAAWiB,EAET,uDACA,kEACA,oCACA,sGACA,kDACA,8BA1DU,CAClBM,GAAI,mBACJC,QAAS,oBACTC,GAAI,uBA0DgBhB,GAtDC,CACrBe,QAAS,kDACT+K,OAAQ,gDACRC,QAAS,uDAsDctE,GAGf,uBAGA0C,EAAe,QAAU,OACzB,OACAuB,GAAS,OAGTrH,GAAa,8CACZtE,IAAUwE,IAAY,oDACvBZ,GAAW,gBAEXpE,MAEEU,IAILyL,GAAmB,YAAVA,GACR/K,MAAC,OAAIpB,UAAU,4CACZkB,SAAU,OAAViL,EACC/K,MAACqL,EAAA,CAAWhM,KAAM,GAAIT,UAAU,iBAEhCoB,MAACsL,GAAajM,KAAM,GAAIT,UAAU,uBAMvCoE,SACE,OAAIpE,UAAU,4CACbkB,SAAAE,MAAC,OAAIpB,UAAU,+FAKjBQ,IAAUwE,KAAaZ,GACvBhD,MAAC,OAAIpB,UAAU,4CACbkB,eAACwG,EAAA,CAAYjH,KAAM,GAAIT,UAAU,0BAMtCO,IAAgBC,GAASwE,SACvB,KAAEhF,UAAU,gCACVkB,SAAAX,KAKHC,IAAUwE,IACV7D,OAAC,KAAEnB,UAAU,mDACXkB,SAAA,CAAAE,MAACsG,EAAA,CAAYjH,KAAM,KAClBD,GAAS0K,KAKbL,QAA+B,IAAlBC,GAAyC,YAAVqB,GAC3ChL,OAAC,KAAEnB,UAAU,wDACVkB,SAAA,CAAU,OAAViL,EACC/K,MAACqL,EAAA,CAAWhM,KAAM,GAAIT,UAAU,iBAEhCoB,MAACsL,EAAA,CAAajM,KAAM,GAAIT,UAAU,qBAClC,iBACawL,EAAeV,WAOxCH,EAAc/I,YAAc,gBC/X5B,MAAM+K,EAAe,EACnBtL,OAAO,UACPZ,OAAO,UACP6L,UACAtM,YACA4M,YAAW,EACX1E,UAAU,aACPxH,MAGH,MAeMmM,EAfU,MACd,OAAQxL,GACN,IAAK,cAQL,QACE,OAAOoF,EAPT,IAAK,YACH,OAAOF,EACT,IAAK,QACH,OAAOkG,EACT,IAAK,aACH,OAAOjG,IAMAE,GA2BPoG,EAxBa,CACjBvL,GAAI,CACFwL,QAAS,iBACTC,KAAM,GACN7D,KAAM,UACN8D,IAAK,QACLC,QAAS,OAEX1L,QAAS,CACPuL,QAAS,mBACTC,KAAM,GACN7D,KAAM,UACN8D,IAAK,QACLC,QAAS,OAEXzL,GAAI,CACFsL,QAAS,mBACTC,KAAM,GACN7D,KAAM,YACN8D,IAAK,QACLC,QAAS,QAIazM,GAGpB0M,EAAgB,CACpB3L,QAAS,wBACT4L,OAAQ,2BACRC,QAAS,uCAIX,GAAa,WAAThM,EACF,OACEF,OAAC,OAAInB,UAAWiB,EAAG,mCAAoC6L,EAAOG,IAAKjN,MAAgBU,EACjFQ,SAAA,CAAAE,MAAC,OAAIpB,UAAWiB,EACd6L,EAAOC,QACP,yEACAI,EAAcjF,MAEfoE,GACClL,MAAC,QAAKpB,UAAWiB,EAAG6L,EAAO3D,KAAMgE,EAAcjF,IAC5ChH,SAAAoL,OAQX,MAQMgB,EAAiBhB,GARA,CACrBiB,YAAa,iBACbC,UAAW,+BACXrB,MAAO,sBACPsB,WAAY,2BACZjM,QAAS,cAGsCH,GAEjD,OACEF,OAAC,OAAInB,UAAWiB,EACd,4CACA6L,EAAOI,QACPJ,EAAOG,IACP,yEACAjN,MACKU,EACLQ,SAAA,CAAAC,OAAC,OAAInB,UAAU,0BAEbkB,SAAA,CAAAE,MAAC,OAAIpB,UAAWiB,EACd6L,EAAOC,QACP,yEACAI,EAAcjF,MAIf0E,GACCxL,MAACyL,EAAA,CACCpM,KAAMqM,EAAOE,KACbhN,UAAWiB,EACT,gBACAkM,EAAcjF,SAOrBoF,GACClM,MAAC,KAAEpB,UAAWiB,EACZ6L,EAAO3D,KACP,0BACAgE,EAAcjF,IAEbhH,SAAAoM,QAQLI,EAAkB,EACtB/K,QAAQ,OACRC,SAAS,MACT5C,YACAkI,UAAU,aACPxH,KASDU,MAAC,OACCpB,UAAWiB,EACT,2BACA0B,EACAC,EAXiB,CACrBpB,QAAS,WACT2C,SAAU,iBACVsJ,WAAY,eASOvF,GACflI,MAEEU,IAwBJiN,EAAc,EAClBlN,OAAO,UACPT,YACAkI,UAAU,aACPxH,MAEH,MAAMkN,EAAc,CAClBrM,GAAI,UACJC,QAAS,cACTC,GAAI,WAGAoM,EAAiB,CACrBrM,QAAS,sBACTsM,QAAS,aACTC,QAAS,aACTC,QAAS,cAGX,OACE5M,MAAC,OACCpB,UAAWiB,EAAG,0BAA2BjB,MACrCU,EAEHQ,UAAC,EAAG,EAAG,GAAG+M,IAAKC,GACd9M,MAAC,OAECpB,UAAWiB,EACT,6BACA2M,EAAYnN,GACZoN,EAAe3F,IAEjBrC,MAAO,CACLsI,eAAuB,GAAJD,EAAH,IAChBE,kBAAmB,SARhBF,OC7MTG,EAAqB,EACzBhN,OAAO,QACPiL,UACAtM,YACAS,OAAO,UACPyH,UAAU,UACV0E,YAAW,EACX0B,eAAc,EACdC,YACAC,WAAW,SACXtN,cACGR,MAGH,MAOMmM,EAPU,CACdrM,MAAOkH,EACPsG,QAASS,EACTV,QAASW,EACTC,KAAMC,GAGavN,GAwBfyL,EArBa,CACjBvL,GAAI,CACF4H,KAAM,UACN6D,KAAM,GACNE,QAAS,MACTD,IAAK,SAEPzL,QAAS,CACP2H,KAAM,UACN6D,KAAM,GACNE,QAAS,MACTD,IAAK,SAEPxL,GAAI,CACF0H,KAAM,YACN6D,KAAM,GACNE,QAAS,MACTD,IAAK,UAIiBxM,GA8BpBwI,EA3Ba,CACjBzI,MAAO,CACLqO,GAAI,oBACJ3L,OAAQ,wBACRiG,KAAM,mBACN6D,KAAM,oBAERgB,QAAS,CACPa,GAAI,gBACJ3L,OAAQ,oBACRiG,KAAM,0BACN6D,KAAM,gBAERe,QAAS,CACPc,GAAI,gBACJ3L,OAAQ,oBACRiG,KAAM,0BACN6D,KAAM,gBAER2B,KAAM,CACJE,GAAI,aACJ3L,OAAQ,kBACRiG,KAAM,gBACN6D,KAAM,kBAIgB3L,GAuB1B,OAAKiL,GAAYpL,EAKfC,OAAC,OACCnB,UAAWiB,EACT,mBACA6L,EAAOG,IACPH,EAAOI,QACPjE,EAAO4F,GACP5F,EAAO/F,OA/Ba,MACxB,OAAQgF,GACN,IAAK,SACH,MAAO,oBACT,IAAK,WACH,OAAOjH,EACL,qCACa,QAAbuN,GAAsB,mBACT,WAAbA,GAAyB,gBACZ,SAAbA,GAAuB,kBACV,UAAbA,GAAwB,kBAE5B,IAAK,SACH,MAAO,0BACT,QACE,MAAO,sBAiBPM,GACA9O,MAEEU,EAGHQ,SAAA,CAAA0L,GAAYC,GACXzL,MAACyL,EAAA,CACCpM,KAAMqM,EAAOE,KACbhN,UAAWiB,EAAG,uBAAwBgI,EAAO+D,QAKjD7L,OAAC,OAAInB,UAAU,iBACZkB,SAAA,CAAAoL,GACClL,MAAC,KAAEpB,UAAWiB,EAAG6L,EAAO3D,KAAMF,EAAOE,KAAM,eACxCjI,SAAAoL,IAGJpL,GACCE,MAAC,OAAIpB,UAAWiB,EAAG6L,EAAO3D,KAAMF,EAAOE,MACpCjI,gBAMNoN,GAAeC,GACdnN,MAAC,UACCqI,QAAS8E,EACTvO,UAAWiB,EACT,0EACAgI,EAAOE,MAET,aAAW,UAEXjI,SAAAE,MAACuI,EAAA,CAAElJ,KAAMqM,EAAOE,YAhDf,MAwDL+B,EAAkB,EACtBvO,QACAwN,UACAD,UACAY,OACA3O,eACGU,MAGH,IAAIW,EAAMiL,EAEV,GAAI9L,EACFa,EAAO,QACPiL,EAAU9L,UACDwN,EACT3M,EAAO,UACPiL,EAAU0B,UACDD,EACT1M,EAAO,UACPiL,EAAUyB,WACDY,EAIT,OAAO,KAHPtN,EAAO,OACPiL,EAAUqC,CAGZ,CAEA,OACEvN,MAACiN,EAAA,CACChN,OACAiL,UACA7L,KAAK,KACLyH,QAAQ,SACRlI,eACIU,KAMJsO,EAAiB,EACrBC,QAAQ,GACRjP,YACAkP,eAAc,KACXxO,KAEEuO,EAAME,OAGT/N,MAAC,OAAIpB,UAAWiB,EAAG,YAAajB,MAAgBU,EAC7CQ,SAAA+N,EAAMhB,IAAI,CAACmB,EAAMC,IAChBjO,MAACiN,EAAA,CAEChN,KAAM+N,EAAK/N,MAAQ,QACnBiL,QAAS4C,EAAc,GAAGG,EAAQ,MAAMD,EAAK9C,UAAY8C,EAAK9C,QAC9D7L,KAAK,KACLyH,QAAQ,UAJHmH,MANa,KAkBtBC,EAAoB,EACxBC,SAAS,GACTC,WAAW,GACXxP,YACA0J,QAAQ,mCACR+F,eAAc,KACX/O,MAEH,MAAOgP,EAAaC,GAAkB7P,EAAM+E,SAAS4K,GAE/CG,EAAcL,EAAOJ,OAASK,EAASL,OAE7C,GAAoB,IAAhBS,EAAmB,OAAO,KAE9B,MAAMC,EAAW,IACZN,EAAOtB,IAAIzN,IAAA,CAAYa,KAAM,QAASiL,QAAS9L,QAC/CgP,EAASvB,IAAID,IAAA,CAAc3M,KAAM,UAAWiL,QAAS0B,MAG1D,OACE7M,OAAC,OAAInB,UAAWiB,EAAG,YAAajB,MAAgBU,EAE9CQ,SAAA,CAAAC,OAAC,OAAInB,UAAU,oCACbkB,SAAA,CAAAE,MAAC,MAAGpB,UAAU,wCACXkB,SAAAwI,IAEF+F,GACCrO,MAAC,UACCqI,QAAS,IAAMkG,GAAgBD,GAC/B1P,UAAU,wEAETkB,SAAAwO,EAAc,QAAQE,WAAuB,aAMlDF,GACAtO,MAAC4N,EAAA,CACCC,MAAOY,EACPX,aAAW,IAKdQ,GACCvO,OAAC,KAAEnB,UAAU,gCACVkB,SAAA,CAAAqO,EAAOJ,OAAS,GAAK,GAAGI,EAAOJ,eAAeI,EAAOJ,OAAS,EAAI,IAAM,KACxEI,EAAOJ,OAAS,GAAKK,EAASL,OAAS,GAAK,KAC5CK,EAASL,OAAS,GAAK,GAAGK,EAASL,iBAAiBK,EAASL,OAAS,EAAI,IAAM,YCjQrFW,EAAsB,KAC1B,MAAOC,EAAQC,GAAanL,WAAS,CACnCoL,QAAS,MACTC,SAAU,KACVC,OAAQ,KACRC,OAAQ,KACRC,cAAe,KACflM,SAAU,QAGLmM,EAAWC,GAAgB1L,WAAS,CACzC0I,aAAa,EACbiD,YAAY,KAGPjB,EAAQkB,GAAa5L,WAAS,KAC9B6L,EAAeC,GAAoB9L,YAAS,GAU7C+L,EAAqBrJ,GAASX,IAClCoJ,EAAUa,QAAcA,EAAMtJ,CAACA,GAAMX,MAUvC,aACG,OAAI5G,UAAU,gEACbkB,SAAAC,OAAC,OAAInB,UAAU,8BAEbkB,SAAA,CAAAC,OAAC,OAAInB,UAAU,wBACbkB,SAAA,CAAAC,OAAC,OAAInB,UAAU,yCACbkB,SAAA,CAAAE,MAAC,OAAIpB,UAAU,6BACbkB,eAACuF,EAAA,CAAWzG,UAAU,4BAExBoB,MAAC,MAAGpB,UAAU,oCAAoCkB,SAAA,2CAEpDE,MAAC,KAAEpB,UAAU,2CAA2CkB,SAAA,+GAM1DC,OAAC,OAAInB,UAAU,wCAGbkB,SAAA,CAAAC,OAAC2P,EAAA,CAAK9Q,UAAU,gBACdkB,SAAA,CAAAC,OAAC,OAAInB,UAAU,0BACbkB,SAAA,CAAAE,MAACmF,EAAA,CAAWvG,UAAU,6BACtBoB,MAAC,MAAGpB,UAAU,uCAAuCkB,SAAA,gCAGvDC,OAAC,OAAInB,UAAU,YACbkB,SAAA,CAAAE,MAACuC,EAAA,CACCrD,MAAM,iBACNsD,MAAOmM,EAAOE,QACdpM,SAAU+M,EAAkB,WAC5BvP,KAAK,WACL8C,SAAS,MACT5D,YAAY,qCACZF,UAAQ,EACRmE,aAAc,CAACQ,EAASsH,SAG1BlL,MAACuC,EAAA,CACCrD,MAAM,qBACNsD,MAAOmM,EAAOG,SACdrM,SAAU+M,EAAkB,YAC5BvP,KAAK,WACL8C,SAAS,MACT3D,MAAOuP,EAAOG,SAAWH,EAAOE,QAAU,iCAAmC,OAG/E7O,MAACuC,EAAA,CACCrD,MAAM,cACNsD,MAAOmM,EAAOI,OACdtM,SAAU+M,EAAkB,UAC5BvP,KAAK,aACL4C,OAAO,IACPI,SAAU,EACV9D,YAAY,qCAGda,MAACuC,EAAA,CACCrD,MAAM,gBACNsD,MAAOmM,EAAOK,OACdvM,SAAU+M,EAAkB,UAC5BvP,KAAK,SACL4C,OAAO,IACPI,SAAU,EACVI,IAAK,EACLC,IAAK,IACLN,QAASkM,EAAUE,mBAMzBrP,OAAC2P,EAAA,CAAK9Q,UAAU,gBACdkB,SAAA,CAAAC,OAAC,OAAInB,UAAU,0BACbkB,SAAA,CAAAE,MAACqL,EAAA,CAAWzM,UAAU,0BACtBoB,MAAC,MAAGpB,UAAU,uCAAuCkB,SAAA,+BAGvDC,OAAC,OAAInB,UAAU,YACbkB,SAAA,CAAAE,MAACuJ,EAAA,CACCrK,MAAM,mBACNsD,MAAOmM,EAAO5L,SACdN,SAAU+M,EAAkB,YAC5BzM,SAAS,MACT6G,mBAAmB,EACnBH,WAAW,EACXC,cAAe,KACfvK,YAAY,kDAGda,MAACuJ,EAAA,CACCrK,MAAM,0BACNsD,MAAO,KACPC,SAAW0B,MACXpB,SAAS,MACTD,OAAO,QACPzD,KAAK,OAGPW,MAACuJ,EAAA,CACCrK,MAAM,mBACNsD,MAAO,KACPC,SAAW0B,MACXpB,SAAS,MACT1D,KAAK,KACLyH,QAAQ,WAGV9G,MAACuJ,EAAA,CACCrK,MAAM,sBACNsD,MAAO,KACPC,SAAW0B,MACXpB,SAAS,MACTD,OAAO,QACP8G,mBAAmB,UAMzB7J,OAAC2P,EAAA,CAAK9Q,UAAU,gBACdkB,SAAA,CAAAE,MAAC,MAAGpB,UAAU,uCAAuCkB,SAAA,iCAEpD,OAAIlB,UAAU,YACbkB,SAAAC,OAAC,OAAInB,UAAU,oDACbkB,SAAA,CAAAE,MAAC,OAAIpB,UAAU,qCAAqCkB,SAAA,YACpDE,MAAC,OAAIpB,UAAU,qCAAqCkB,SAAA,YACpDE,MAAC,OAAIpB,UAAU,qCAAqCkB,SAAA,aAEpDE,MAAC,OAAIpB,UAAU,yBAAyBkB,SAAA,YACxCE,MAACuG,EAAA,CACC/D,MAAOmM,EAAOM,cACdxM,SAAU+M,EAAkB,iBAC5BvP,KAAK,WACL0G,UAAW2I,EACX1I,OAAQ2I,EACRzI,QAAQ,YAEV9G,MAACuG,EAAA,CACC/D,MAA8B,KAAvBmM,EAAOM,cACdxM,SAAW0B,MACXlE,KAAK,WACL6G,QAAQ,aAGV9G,MAAC,OAAIpB,UAAU,yBAAyBkB,SAAA,gBACxCE,MAACuG,EAAA,CACC/D,MAAO,KACPC,SAAW0B,MACXlE,KAAK,eAEPD,MAACuG,EAAA,CACC/D,MAAO,KACPC,SAAW0B,MACXlE,KAAK,aACL6G,QAAQ,aAGV9G,MAAC,OAAIpB,UAAU,yBAAyBkB,SAAA,eACxCE,MAACuG,EAAA,CACC/D,MAA8B,IAAvBmM,EAAOM,cACdvI,WAAW,EACXI,QAAQ,YAEV9G,MAACuG,EAAA,CACC/D,MAA8B,KAAvBmM,EAAOM,cAAuB,IACrCvI,WAAW,EACXI,QAAQ,oBAOhB/G,OAAC2P,EAAA,CAAK9Q,UAAU,gBACdkB,SAAA,CAAAE,MAAC,MAAGpB,UAAU,uCAAuCkB,SAAA,mBAErDC,OAAC,OAAInB,UAAU,YACbkB,SAAA,CAAAC,OAAC,OAAInB,UAAU,yBACbkB,SAAA,CAAAE,MAACuL,EAAA,CACCtL,KAAK,cACLiL,QAAQ,qBACR7L,KAAK,YAEPW,MAACuL,EAAA,CACCtL,KAAK,YACLiL,QAAQ,qBACR7L,KAAK,UACLyH,QAAQ,cAIZ/G,OAAC,OAAInB,UAAU,YACbkB,SAAA,CAAAE,MAAC,MAAGpB,UAAU,qCAAqCkB,SAAA,0BACnDC,OAAC,OAAInB,UAAU,0BACbkB,SAAA,CAAAE,MAACuL,GAAatL,KAAK,SAASiL,QAAQ,aAAa7L,KAAK,OACtDW,MAACuM,EAAA,CAAYlN,KAAK,UAAUyH,QAAQ,kBACnCwF,EAAA,CAAgB/K,MAAM,OAAOC,OAAO,MAAMsF,QAAQ,mBAIvD/G,OAAC,OAAInB,UAAU,YACbkB,SAAA,CAAAE,MAAC,MAAGpB,UAAU,qCAAqCkB,SAAA,6BACnDE,MAAC,UACCqI,QA9NY,KAC1B8G,UAA2BM,EAAMtD,aAAa,KAC9CtG,WAAW,KACTsJ,UAA2BM,EAAMtD,aAAa,MAC7C,MA2NWnN,SAAUkQ,EAAU/C,YACpBvN,UAAU,uGAETkB,SAAAoP,EAAU/C,YAAc,iBAAmB,oBAE7C+C,EAAU/C,aACTnM,MAACuL,EAAA,CACCtL,KAAK,cACLiL,QAAQ,iCACR7L,KAAK,KACLyH,QAAQ,qBAQlB/G,OAAC2P,EAAA,CAAK9Q,UAAU,8BACdkB,SAAA,CAAAE,MAAC,MAAGpB,UAAU,uCAAuCkB,SAAA,0BAErDC,OAAC,OAAInB,UAAU,wCACbkB,SAAA,CAAAC,OAAC,OAAInB,UAAU,YACbkB,SAAA,CAAAE,MAAC,MAAGpB,UAAU,qCAAqCkB,SAAA,mCAEnDE,MAACiN,EAAA,CACChN,KAAK,QACLiL,QAAQ,6BACR7L,KAAK,YAGPW,MAACiN,EAAA,CACChN,KAAK,UACLiL,QAAQ,mCACR7L,KAAK,YAGPW,MAACiN,EAAA,CACChN,KAAK,UACLiL,QAAQ,mDACR7L,KAAK,YAGPW,MAACiN,EAAA,CACChN,KAAK,OACLiL,QAAQ,kEACR7L,KAAK,eAITU,OAAC,OAAInB,UAAU,YACbkB,SAAA,CAAAE,MAAC,MAAGpB,UAAU,qCAAqCkB,SAAA,qBAEnDC,OAAC,OAAInB,UAAU,YACbkB,SAAA,CAAAE,MAAC,SAAMpB,UAAU,qCAAqCkB,SAAA,oBACtDE,MAAC,SACCC,KAAK,SACLuC,OAAO,GACPC,SAAW8C,GA9QP,EAAC/C,EAAOa,EAAKC,KACjC,MAAMqM,EAAY,GACdnN,EAAQa,GAAKsM,EAAUC,KAAK,0BAA0BvM,KACtDb,EAAQc,GAAKqM,EAAUC,KAAK,yBAAyBtM,KACzD+L,EAAUM,IA0QuB1J,CAAc5B,WAAWkB,EAAEE,OAAOjD,OAAQ,EAAG,KAC9D5D,UAAU,oDAEZoB,MAAC2N,EAAA,CACCvO,MAAO+O,EAAOJ,OAAS,EAAII,EAAO,GAAK,KACvCZ,KAAwB,IAAlBY,EAAOJ,OAAe,mCAAqC,UAIrE/N,MAACkO,EAAA,CACCC,OAAQ,CACN,oCACA,2CAEFC,SAAU,CACR,qCACA,sCAEFC,aAAa,gBAQvBtO,OAAC2P,EAAA,CAAK9Q,UAAU,MACdkB,SAAA,CAAAE,MAAC,MAAGpB,UAAU,4CAA4CkB,SAAA,yBAC1DC,OAAC,OAAInB,UAAU,+DACbkB,SAAA,CAAAC,OAAC,OAAInB,UAAU,6BACbkB,SAAA,CAAAE,MAAC,MAAGpB,UAAU,kCAAkCkB,SAAA,yBAChDE,MAAC,QAAKpB,UAAU,8CAA+CkB,SAAA,yGAQjEC,OAAC,OAAInB,UAAU,6BACbkB,SAAA,CAAAE,MAAC,MAAGpB,UAAU,kCAAkCkB,SAAA,wBAChDE,MAAC,QAAKpB,UAAU,8CAA+CkB,SAAA,0GAQjEC,OAAC,OAAInB,UAAU,6BACbkB,SAAA,CAAAE,MAAC,MAAGpB,UAAU,kCAAkCkB,SAAA,wBAChDE,MAAC,QAAKpB,UAAU,8CAA+CkB,SAAA","names":["React","forwardRef","className","id","checked","indeterminate","disabled","required","label","description","error","size","props","ref","checkboxId","Math","random","toString","substr","cn","children","jsxs","jsx","type","htmlFor","sm","default","lg","Check","Minus","displayName","lazy","__vitePreload","import","__VITE_PRELOAD__","then","module","data","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","width","height","strokeDasharray","stroke","fontSize","contentStyle","backgroundColor","border","borderRadius","dataKey","fill","radius","ScatterChart","Scatter","AreaChart","Area","FinancialInput","value","onChange","onBlur","placeholder","prefix","suffix","locale","currency","loading","decimals","allowNegative","autoFocus","onValidation","min","max","displayValue","setDisplayValue","useState","isFocused","setIsFocused","isValid","setIsValid","inputRef","useRef","componentRef","inputId","formatValue","val","numValue","parseFloat","isNaN","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","parseValue","cleanValue","replace","useEffect","current","focus","DollarSign","Percent","Calculator","getIcon","e","newValue","target","test","onFocus","rawValue","setTimeout","select","valid","errorMessage","validateInput","onKeyPress","key","preventDefault","blur","AlertCircle","EditableCell","onSave","onCancel","isFormula","isEditing","onEdit","showEditIcon","variant","editingValue","setEditingValue","localError","setLocalError","isHovered","setIsHovered","formatted","absValue","abs","handleSave","finalValue","handleCancel","handleChange","handleKeyPress","styles","container","text","hover","input","editIcon","getVariantStyles","onKeyDown","onClick","title","X","onMouseEnter","onMouseLeave","Edit2","CURRENCY_CONFIG","USD","symbol","code","name","EUR","GBP","JPY","CAD","AUD","CHF","CNY","CurrencyInput","showCurrency","showTrend","previousValue","step","abbreviateDisplay","precision","validationMessage","setValidationMessage","currencyConfig","effectiveDecimals","effectivePlaceholder","useMemo","formatCurrency","options","forDisplay","abbreviated","sign","toFixed","parseCurrency","str","toLowerCase","multiplier","endsWith","trend","previous","getTrend","message","filled","minimal","TrendingUp","TrendingDown","LoadingState","showIcon","Icon","config","spinner","icon","gap","padding","variantStyles","subtle","pulsing","displayMessage","calculation","financial","percentage","LoadingSkeleton","LoadingDots","sizeClasses","variantClasses","primary","success","warning","map","i","animationDelay","animationDuration","ValidationFeedback","dismissible","onDismiss","position","AlertTriangle","CheckCircle","info","Info","bg","getVariantClasses","FieldValidation","ValidationList","items","showNumbers","length","item","index","ValidationSummary","errors","warnings","collapsible","isCollapsed","setIsCollapsed","totalIssues","allItems","FinancialInputsDemo","values","setValues","revenue","expenses","growth","margin","editableValue","isLoading","setIsLoading","validation","setErrors","isEditingCell","setIsEditingCell","handleValueChange","prev","Card","newErrors","push"],"ignoreList":[],"sources":["../../src/components/ui/Checkbox.jsx","../../src/components/ui/LazyChart.jsx","../../src/components/ui/FinancialInput.jsx","../../src/components/ui/EditableCell.jsx","../../src/components/ui/CurrencyInput.jsx","../../src/components/ui/LoadingState.jsx","../../src/components/ui/ValidationFeedback.jsx","../../src/components/FinancialInputsDemo.jsx"],"sourcesContent":["import { Check, Minus } from 'lucide-react';\nimport React from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst Checkbox = React.forwardRef(\n  (\n    {\n      className,\n      id,\n      checked,\n      indeterminate = false,\n      disabled = false,\n      required = false,\n      label,\n      description,\n      error,\n      size = 'default',\n      ...props\n    },\n    ref\n  ) => {\n    // Generate unique ID if not provided\n    const checkboxId = id || `checkbox-${Math.random().toString(36).substr(2, 9)}`;\n\n    // Size variants\n    const sizeClasses = {\n      sm: 'h-4 w-4',\n      default: 'h-4 w-4',\n      lg: 'h-5 w-5'\n    };\n\n    return (\n      <div className={cn('flex items-start space-x-2', className)}>\n        <div className=\"relative flex items-center\">\n          <input\n            type=\"checkbox\"\n            ref={ref}\n            id={checkboxId}\n            checked={checked}\n            disabled={disabled}\n            required={required}\n            className=\"sr-only\"\n            {...props}\n          />\n\n          <label\n            htmlFor={checkboxId}\n            className={cn(\n              'peer shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground cursor-pointer transition-colors',\n              sizeClasses[size],\n              checked && 'bg-primary text-primary-foreground border-primary',\n              indeterminate && 'bg-primary text-primary-foreground border-primary',\n              error && 'border-destructive',\n              disabled && 'cursor-not-allowed opacity-50'\n            )}\n          >\n            {checked && !indeterminate && (\n              <Check className=\"h-3 w-3 text-current flex items-center justify-center\" />\n            )}\n            {indeterminate && (\n              <Minus className=\"h-3 w-3 text-current flex items-center justify-center\" />\n            )}\n          </label>\n        </div>\n\n        {(label || description || error) && (\n          <div className=\"flex-1 space-y-1\">\n            {label && (\n              <label\n                htmlFor={checkboxId}\n                className={cn(\n                  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 cursor-pointer',\n                  error ? 'text-destructive' : 'text-foreground'\n                )}\n              >\n                {label}\n                {required && <span className=\"text-destructive ml-1\">*</span>}\n              </label>\n            )}\n\n            {description && !error && (\n              <p className=\"text-sm text-muted-foreground\">{description}</p>\n            )}\n\n            {error && <p className=\"text-sm text-destructive\">{error}</p>}\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nCheckbox.displayName = 'Checkbox';\n\n// Checkbox Group component\nconst CheckboxGroup = React.forwardRef(\n  (\n    {\n      className,\n      children,\n      label,\n      description,\n      error,\n      required = false,\n      disabled = false,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <fieldset\n        ref={ref} disabled={disabled} className={cn('space-y-3', className)}\n        {...props}\n      >\n        {label && (\n          <legend\n            className={cn('text-sm font-medium', error ? 'text-destructive' : 'text-foreground')}\n          >\n            {label}\n            {required && <span className=\"text-destructive ml-1\">*</span>}\n          </legend>\n        )}\n\n        {description && !error && <p className=\"text-sm text-muted-foreground\">{description}</p>}\n\n        <div className=\"space-y-2\">{children}</div>\n\n        {error && <p className=\"text-sm text-destructive\">{error}</p>}\n      </fieldset>\n    );\n  }\n);\n\nCheckboxGroup.displayName = 'CheckboxGroup';\n\nexport { Checkbox, CheckboxGroup };\n","import React, { Suspense, lazy } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\n// Lazy load the chart components to reduce initial bundle size\nconst LazyBarChart = lazy(() =>\n  import('recharts').then(module => ({\n    default: ({ data, ...props }) => {\n      const { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } = module;\n      return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart data={data} {...props}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--color-border)\" />\n            <XAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <YAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'var(--color-popover)',\n                border: '1px solid var(--color-border)',\n                borderRadius: '8px'\n              }}\n            />\n            <Bar dataKey=\"value\" fill=\"var(--color-primary)\" radius={[2, 2, 0, 0]} />\n          </BarChart>\n        </ResponsiveContainer>\n      );\n    }\n  }))\n);\n\nconst LazyScatterChart = lazy(() =>\n  import('recharts').then(module => ({\n    default: ({ data, ...props }) => {\n      const { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } =\n        module;\n      return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <ScatterChart data={data} {...props}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--color-border)\" />\n            <XAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <YAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'var(--color-popover)',\n                border: '1px solid var(--color-border)',\n                borderRadius: '8px'\n              }}\n            />\n            <Scatter dataKey=\"value\" fill=\"var(--color-primary)\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n      );\n    }\n  }))\n);\n\nconst LazyAreaChart = lazy(() =>\n  import('recharts').then(module => ({\n    default: ({ data, ...props }) => {\n      const { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } = module;\n      return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <AreaChart data={data} {...props}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--color-border)\" />\n            <XAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <YAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'var(--color-popover)',\n                border: '1px solid var(--color-border)',\n                borderRadius: '8px'\n              }}\n            />\n            <Area dataKey=\"value\" fill=\"var(--color-primary)\" stroke=\"var(--color-primary)\" />\n          </AreaChart>\n        </ResponsiveContainer>\n      );\n    }\n  }))\n);\n\n// Chart wrapper component with loading state\nconst ChartWrapper = ({ children, loading = false }) => {\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  return (\n    <Suspense\n      fallback={\n        <div className=\"flex items-center justify-center h-full\">\n          <LoadingSpinner size=\"lg\" />\n        </div>\n      }\n    >\n      {children}\n    </Suspense>\n  );\n};\n\n// Export chart components\nexport const BarChart = props => (\n  <ChartWrapper>\n    <LazyBarChart {...props} />\n  </ChartWrapper>\n);\n\nexport const ScatterChart = props => (\n  <ChartWrapper>\n    <LazyScatterChart {...props} />\n  </ChartWrapper>\n);\n\nexport const AreaChart = props => (\n  <ChartWrapper>\n    <LazyAreaChart {...props} />\n  </ChartWrapper>\n);\n\nexport default ChartWrapper;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { AlertCircle, Calculator, DollarSign, Percent } from 'lucide-react';\nimport { cn } from '../../utils/cn';\n\nconst FinancialInput = React.forwardRef(({\n  className,\n  label,\n  value,\n  onChange,\n  onBlur,\n  placeholder = '0.00',\n  type = 'currency', // 'currency', 'percentage', 'number'\n  prefix,\n  suffix,\n  locale = 'en-US',\n  currency = 'USD',\n  error,\n  description,\n  required = false,\n  disabled = false,\n  loading = false,\n  decimals = 2,\n  allowNegative = true,\n  id,\n  autoFocus = false,\n  onValidation,\n  min,\n  max,\n  ...props\n}, ref) => {\n  const [displayValue, setDisplayValue] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const inputRef = useRef(null);\n  const componentRef = ref || inputRef;\n\n  // Generate unique ID if not provided\n  const inputId = id || `financial-input-${Math.random().toString(36).substr(2, 9)}`;\n\n  // Format value for display\n  const formatValue = (val) => {\n    if (!val && val !== 0) return '';\n    \n    const numValue = typeof val === 'string' ? parseFloat(val) : val;\n    if (isNaN(numValue)) return '';\n\n    switch (type) {\n      case 'currency':\n        return new Intl.NumberFormat(locale, {\n          style: 'currency',\n          currency: currency,\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(numValue);\n      \n      case 'percentage':\n        return new Intl.NumberFormat(locale, {\n          style: 'percent',\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(numValue / 100);\n      \n      default:\n        return new Intl.NumberFormat(locale, {\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(numValue);\n    }\n  };\n\n  // Parse display value to raw number\n  const parseValue = (val) => {\n    if (!val) return 0;\n    \n    // Remove currency symbols, commas, and spaces\n    const cleanValue = val\n      .replace(/[^\\d.-]/g, '')\n      .replace(/,/g, '');\n    \n    const numValue = parseFloat(cleanValue);\n    return isNaN(numValue) ? 0 : numValue;\n  };\n\n  // Validate input\n  const validateInput = (val) => {\n    const numValue = typeof val === 'string' ? parseValue(val) : val;\n    \n    let valid = true;\n    let errorMessage = '';\n\n    if (required && (!numValue && numValue !== 0)) {\n      valid = false;\n      errorMessage = 'This field is required';\n    } else if (!allowNegative && numValue < 0) {\n      valid = false;\n      errorMessage = 'Negative values are not allowed';\n    } else if (min !== undefined && numValue < min) {\n      valid = false;\n      errorMessage = `Value must be at least ${formatValue(min)}`;\n    } else if (max !== undefined && numValue > max) {\n      valid = false;\n      errorMessage = `Value must not exceed ${formatValue(max)}`;\n    }\n\n    setIsValid(valid);\n    \n    if (onValidation) {\n      onValidation(valid, errorMessage);\n    }\n\n    return valid;\n  };\n\n  // Update display value when prop value changes\n  useEffect(() => {\n    if (!isFocused) {\n      setDisplayValue(formatValue(value));\n    }\n  }, [value, type, currency, locale, decimals, isFocused]);\n\n  // Handle focus\n  const handleFocus = (e) => {\n    setIsFocused(true);\n    // Show raw number for editing\n    const rawValue = value ? value.toString() : '';\n    setDisplayValue(rawValue);\n    \n    // Select all text for easy replacement\n    setTimeout(() => {\n      if (componentRef.current) {\n        componentRef.current.select();\n      }\n    }, 0);\n  };\n\n  // Handle blur\n  const handleBlur = (e) => {\n    setIsFocused(false);\n    const rawValue = parseValue(displayValue);\n    \n    validateInput(rawValue);\n    \n    // Format for display\n    setDisplayValue(formatValue(rawValue));\n    \n    // Call onChange with parsed value\n    if (onChange) {\n      onChange(rawValue);\n    }\n    \n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  // Handle input change\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n    \n    // Basic validation for numeric input\n    const numericRegex = allowNegative ? /^-?\\d*\\.?\\d*$/ : /^\\d*\\.?\\d*$/;\n    \n    if (numericRegex.test(newValue) || newValue === '') {\n      setDisplayValue(newValue);\n    }\n  };\n\n  // Handle key press\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      componentRef.current?.blur();\n    }\n  };\n\n  // Get icon based on type\n  const getIcon = () => {\n    switch (type) {\n      case 'currency':\n        return <DollarSign size={16} className=\"text-muted-foreground\" />;\n      case 'percentage':\n        return <Percent size={16} className=\"text-muted-foreground\" />;\n      default:\n        return <Calculator size={16} className=\"text-muted-foreground\" />;\n    }\n  };\n\n  // Auto-focus if specified\n  useEffect(() => {\n    if (autoFocus && componentRef.current) {\n      componentRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  return (\n    <div className=\"space-y-2\">\n      {label && (\n        <label\n          htmlFor={inputId}\n          className={cn(\n            'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n            error && !isValid ? 'text-destructive' : 'text-foreground'\n          )}\n        >\n          {label}\n          {required && <span className=\"text-destructive ml-1\">*</span>}\n        </label>\n      )}\n\n      <div className=\"relative\">\n        {/* Left icon/prefix */}\n        <div className=\"absolute left-3 top-1/2 -translate-y-1/2 flex items-center gap-2 pointer-events-none z-10\">\n          {getIcon()}\n          {prefix && (\n            <span className=\"text-sm text-muted-foreground font-medium\">\n              {prefix}\n            </span>\n          )}\n        </div>\n\n        <input\n          ref={componentRef}\n          id={inputId}\n          type=\"text\"\n          value={displayValue}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyPress={handleKeyPress}\n          placeholder={placeholder}\n          disabled={disabled || loading}\n          className={cn(\n            // Base styles\n            'flex h-11 w-full rounded-lg border bg-background text-sm ring-offset-background',\n            'file:border-0 file:bg-transparent file:text-sm file:font-medium',\n            'placeholder:text-muted-foreground',\n            'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n            'disabled:cursor-not-allowed disabled:opacity-50',\n            'transition-all duration-200',\n            \n            // Padding adjustments for icons\n            'pl-10 pr-4',\n            suffix && 'pr-16',\n            \n            // Financial styling\n            'font-mono text-right',\n            'border-input hover:border-ring/50',\n            \n            // States\n            isFocused && 'ring-2 ring-ring ring-offset-2 border-ring',\n            error && !isValid && 'border-destructive focus-visible:ring-destructive',\n            loading && 'animate-pulse',\n            \n            className\n          )}\n          {...props}\n        />\n\n        {/* Right suffix */}\n        {suffix && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2 pointer-events-none\">\n            <span className=\"text-sm text-muted-foreground font-medium\">\n              {suffix}\n            </span>\n          </div>\n        )}\n\n        {/* Loading indicator */}\n        {loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <div className=\"w-4 h-4 border-2 border-muted-foreground border-t-transparent rounded-full animate-spin\" />\n          </div>\n        )}\n\n        {/* Error icon */}\n        {error && !isValid && !loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <AlertCircle size={16} className=\"text-destructive\" />\n          </div>\n        )}\n      </div>\n\n      {/* Description */}\n      {description && !error && !isValid && (\n        <p className=\"text-sm text-muted-foreground\">\n          {description}\n        </p>\n      )}\n\n      {/* Error message */}\n      {(error || !isValid) && (\n        <p className=\"text-sm text-destructive flex items-center gap-1\">\n          <AlertCircle size={14} />\n          {error || 'Invalid input'}\n        </p>\n      )}\n    </div>\n  );\n});\n\nFinancialInput.displayName = 'FinancialInput';\n\nexport default FinancialInput;","import React, { useState, useEffect, useRef } from 'react';\nimport { Check, X, Edit2, Calculator, AlertCircle } from 'lucide-react';\nimport { cn } from '../../utils/cn';\n\nconst EditableCell = ({\n  value,\n  onChange,\n  onSave,\n  onCancel,\n  className,\n  type = 'currency', // 'currency', 'percentage', 'number', 'text'\n  placeholder = '0.00',\n  isFormula = false,\n  isEditing = false,\n  onEdit,\n  disabled = false,\n  loading = false,\n  error,\n  locale = 'en-US',\n  currency = 'USD',\n  decimals = 2,\n  allowNegative = true,\n  min,\n  max,\n  autoFocus = true,\n  showEditIcon = true,\n  variant = 'default', // 'default', 'adjusted', 'formula'\n  ...props\n}) => {\n  const [editingValue, setEditingValue] = useState('');\n  const [localError, setLocalError] = useState('');\n  const [isHovered, setIsHovered] = useState(false);\n  const inputRef = useRef(null);\n\n  // Format value for display\n  const formatValue = (val) => {\n    if (!val && val !== 0) return '—';\n    \n    const numValue = typeof val === 'string' ? parseFloat(val) : val;\n    if (isNaN(numValue)) return '—';\n\n    switch (type) {\n      case 'currency':\n        const formatted = new Intl.NumberFormat(locale, {\n          style: 'currency',\n          currency: currency,\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(numValue);\n        \n        // For large numbers, add suffix\n        const absValue = Math.abs(numValue);\n        if (absValue >= 1000000) {\n          return new Intl.NumberFormat(locale, {\n            minimumFractionDigits: 1,\n            maximumFractionDigits: 1\n          }).format(numValue / 1000000) + 'M';\n        } else if (absValue >= 1000) {\n          return new Intl.NumberFormat(locale, {\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n          }).format(numValue);\n        }\n        return formatted.replace(/\\.00$/, '');\n      \n      case 'percentage':\n        return new Intl.NumberFormat(locale, {\n          style: 'percent',\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(numValue / 100);\n      \n      case 'number':\n        return new Intl.NumberFormat(locale, {\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(numValue);\n      \n      default:\n        return val?.toString() || '';\n    }\n  };\n\n  // Parse display value to raw number\n  const parseValue = (val) => {\n    if (!val) return 0;\n    \n    // Remove currency symbols, commas, and spaces\n    const cleanValue = val\n      .replace(/[^\\d.-]/g, '')\n      .replace(/,/g, '');\n    \n    const numValue = parseFloat(cleanValue);\n    return isNaN(numValue) ? 0 : numValue;\n  };\n\n  // Validate input\n  const validateInput = (val) => {\n    const numValue = type === 'text' ? val : parseValue(val);\n    \n    if (type === 'text') return true;\n    \n    if (!allowNegative && numValue < 0) {\n      setLocalError('Negative values are not allowed');\n      return false;\n    }\n    \n    if (min !== undefined && numValue < min) {\n      setLocalError(`Value must be at least ${formatValue(min)}`);\n      return false;\n    }\n    \n    if (max !== undefined && numValue > max) {\n      setLocalError(`Value must not exceed ${formatValue(max)}`);\n      return false;\n    }\n    \n    setLocalError('');\n    return true;\n  };\n\n  // Handle edit start\n  const handleEdit = () => {\n    if (disabled || isFormula) return;\n    \n    setEditingValue(value ? value.toString() : '');\n    setLocalError('');\n    \n    if (onEdit) {\n      onEdit(true);\n    }\n  };\n\n  // Handle save\n  const handleSave = () => {\n    const finalValue = type === 'text' ? editingValue : parseValue(editingValue);\n    \n    if (!validateInput(editingValue)) {\n      return;\n    }\n    \n    if (onChange) {\n      onChange(finalValue);\n    }\n    \n    if (onSave) {\n      onSave(finalValue);\n    }\n    \n    if (onEdit) {\n      onEdit(false);\n    }\n  };\n\n  // Handle cancel\n  const handleCancel = () => {\n    setEditingValue('');\n    setLocalError('');\n    \n    if (onCancel) {\n      onCancel();\n    }\n    \n    if (onEdit) {\n      onEdit(false);\n    }\n  };\n\n  // Handle input change\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n    \n    if (type !== 'text') {\n      const numericRegex = allowNegative ? /^-?\\d*\\.?\\d*$/ : /^\\d*\\.?\\d*$/;\n      if (numericRegex.test(newValue) || newValue === '') {\n        setEditingValue(newValue);\n      }\n    } else {\n      setEditingValue(newValue);\n    }\n  };\n\n  // Handle key press\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSave();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      handleCancel();\n    } else if (e.key === 'Tab') {\n      e.preventDefault();\n      handleSave();\n    }\n  };\n\n  // Auto-focus input when editing starts\n  useEffect(() => {\n    if (isEditing && inputRef.current && autoFocus) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, [isEditing, autoFocus]);\n\n  // Get variant styles\n  const getVariantStyles = () => {\n    switch (variant) {\n      case 'adjusted':\n        return {\n          container: 'bg-gradient-to-r from-amber-50 to-yellow-50 border-amber-200',\n          text: isFormula ? 'text-amber-900' : 'text-slate-700',\n          hover: 'hover:bg-amber-100 hover:border-amber-300',\n          input: 'border-amber-400 focus:ring-amber-100 focus:border-amber-500',\n          editIcon: 'text-amber-500'\n        };\n      case 'formula':\n        return {\n          container: 'bg-gradient-to-r from-blue-50 to-blue-100 border-blue-200',\n          text: 'text-blue-900',\n          hover: 'cursor-not-allowed',\n          input: 'border-blue-400 focus:ring-blue-100 focus:border-blue-500',\n          editIcon: 'text-blue-500'\n        };\n      default:\n        return {\n          container: 'bg-background border-transparent',\n          text: isFormula ? 'text-blue-900' : 'text-slate-700',\n          hover: 'hover:bg-slate-50 hover:border-slate-200',\n          input: 'border-input focus:ring-ring focus:border-ring',\n          editIcon: 'text-slate-400'\n        };\n    }\n  };\n\n  const styles = getVariantStyles();\n\n  if (isEditing) {\n    return (\n      <div className=\"relative\">\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={editingValue}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          placeholder={placeholder}\n          disabled={loading}\n          className={cn(\n            'w-full px-3 py-2.5 bg-white border-2 rounded-lg text-slate-900 text-right font-mono text-sm',\n            'focus:outline-none focus:ring-4 shadow-lg transition-all duration-200',\n            styles.input,\n            loading && 'animate-pulse',\n            localError && 'border-destructive focus:ring-destructive/20',\n            className\n          )}\n        />\n        \n        {/* Action buttons */}\n        <div className=\"absolute -top-2 -right-2 flex gap-1\">\n          <button\n            onClick={handleSave}\n            disabled={loading || !!localError}\n            className={cn(\n              'w-5 h-5 bg-success hover:bg-success/90 text-white rounded-full',\n              'flex items-center justify-center text-xs transition-colors',\n              'disabled:opacity-50 disabled:cursor-not-allowed'\n            )}\n            title=\"Save changes\"\n          >\n            <Check size={12} />\n          </button>\n          <button\n            onClick={handleCancel}\n            disabled={loading}\n            className={cn(\n              'w-5 h-5 bg-destructive hover:bg-destructive/90 text-white rounded-full',\n              'flex items-center justify-center text-xs transition-colors',\n              'disabled:opacity-50 disabled:cursor-not-allowed'\n            )}\n            title=\"Cancel changes\"\n          >\n            <X size={12} />\n          </button>\n        </div>\n\n        {/* Loading indicator */}\n        {loading && (\n          <div className=\"absolute left-2 top-1/2 -translate-y-1/2\">\n            <div className=\"w-3 h-3 border-2 border-muted-foreground border-t-transparent rounded-full animate-spin\" />\n          </div>\n        )}\n\n        {/* Local error */}\n        {localError && (\n          <div className=\"absolute -bottom-6 left-0 right-0 text-xs text-destructive flex items-center gap-1\">\n            <AlertCircle size={10} />\n            {localError}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      onClick={handleEdit}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      className={cn(\n        'px-3 py-2.5 rounded-lg font-mono text-sm transition-all duration-200',\n        'min-h-[40px] flex items-center justify-end relative group',\n        styles.container,\n        !disabled && !isFormula && styles.hover,\n        !disabled && !isFormula && 'cursor-pointer',\n        isFormula && 'font-semibold shadow-sm',\n        disabled && 'opacity-50 cursor-not-allowed',\n        error && 'border-destructive',\n        className\n      )}\n    >\n      <span className={styles.text}>\n        {formatValue(value)}\n      </span>\n\n      {/* Formula indicator */}\n      {isFormula && (\n        <Calculator size={12} className=\"ml-2 text-blue-500/80\" />\n      )}\n\n      {/* Edit icon */}\n      {!isFormula && !disabled && showEditIcon && (\n        <Edit2 \n          size={12} \n          className={cn(\n            'ml-2 transition-opacity',\n            isHovered ? 'opacity-60' : 'opacity-0',\n            styles.editIcon\n          )} \n        />\n      )}\n\n      {/* Error indicator */}\n      {error && (\n        <AlertCircle size={12} className=\"ml-2 text-destructive\" />\n      )}\n\n      {/* Loading indicator */}\n      {loading && (\n        <div className=\"ml-2\">\n          <div className=\"w-3 h-3 border-2 border-current border-t-transparent rounded-full animate-spin opacity-50\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditableCell;","import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { DollarSign, AlertCircle, TrendingUp, TrendingDown } from 'lucide-react';\nimport { cn } from '../../utils/cn';\n\n// Currency configurations\nconst CURRENCY_CONFIG = {\n  USD: { symbol: '$', code: 'USD', decimals: 2, name: 'US Dollar' },\n  EUR: { symbol: '€', code: 'EUR', decimals: 2, name: 'Euro' },\n  GBP: { symbol: '£', code: 'GBP', decimals: 2, name: 'British Pound' },\n  JPY: { symbol: '¥', code: 'JPY', decimals: 0, name: 'Japanese Yen' },\n  CAD: { symbol: 'C$', code: 'CAD', decimals: 2, name: 'Canadian Dollar' },\n  AUD: { symbol: 'A$', code: 'AUD', decimals: 2, name: 'Australian Dollar' },\n  CHF: { symbol: 'CHF', code: 'CHF', decimals: 2, name: 'Swiss Franc' },\n  CNY: { symbol: '¥', code: 'CNY', decimals: 2, name: 'Chinese Yuan' }\n};\n\nconst CurrencyInput = React.forwardRef(({\n  className,\n  label,\n  value = 0,\n  onChange,\n  onBlur,\n  placeholder,\n  currency = 'USD',\n  locale = 'en-US',\n  error,\n  description,\n  required = false,\n  disabled = false,\n  loading = false,\n  allowNegative = true,\n  showCurrency = true,\n  showTrend = false,\n  previousValue,\n  size = 'default', // 'sm', 'default', 'lg'\n  variant = 'default', // 'default', 'filled', 'minimal'\n  id,\n  autoFocus = false,\n  onValidation,\n  min,\n  max,\n  step = 0.01,\n  abbreviateDisplay = false, // Show 1.2M instead of 1,200,000\n  precision, // Override default currency precision\n  ...props\n}, ref) => {\n  const [displayValue, setDisplayValue] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const [validationMessage, setValidationMessage] = useState('');\n  const inputRef = useRef(null);\n  const componentRef = ref || inputRef;\n\n  // Generate unique ID if not provided\n  const inputId = id || `currency-input-${Math.random().toString(36).substr(2, 9)}`;\n\n  // Get currency configuration\n  const currencyConfig = CURRENCY_CONFIG[currency] || CURRENCY_CONFIG.USD;\n  const effectiveDecimals = precision !== undefined ? precision : currencyConfig.decimals;\n\n  // Memoized placeholder\n  const effectivePlaceholder = useMemo(() => {\n    if (placeholder) return placeholder;\n    const sample = formatCurrency(0);\n    return sample;\n  }, [placeholder, currency, effectiveDecimals]);\n\n  // Format currency value\n  function formatCurrency(val, options = {}) {\n    if (!val && val !== 0) return '';\n    \n    const numValue = typeof val === 'string' ? parseFloat(val) : val;\n    if (isNaN(numValue)) return '';\n\n    const { forDisplay = false, abbreviated = false } = options;\n\n    // Handle abbreviation for large numbers\n    if (abbreviated && abbreviateDisplay && Math.abs(numValue) >= 1000) {\n      const absValue = Math.abs(numValue);\n      const sign = numValue < 0 ? '-' : '';\n      \n      if (absValue >= 1000000000) {\n        return `${sign}${currencyConfig.symbol}${(absValue / 1000000000).toFixed(1)}B`;\n      } else if (absValue >= 1000000) {\n        return `${sign}${currencyConfig.symbol}${(absValue / 1000000).toFixed(1)}M`;\n      } else if (absValue >= 1000) {\n        return `${sign}${currencyConfig.symbol}${(absValue / 1000).toFixed(0)}K`;\n      }\n    }\n\n    try {\n      return new Intl.NumberFormat(locale, {\n        style: 'currency',\n        currency: currency,\n        minimumFractionDigits: effectiveDecimals,\n        maximumFractionDigits: effectiveDecimals,\n      }).format(numValue);\n    } catch (error) {\n      // Fallback formatting\n      const formatted = numValue.toFixed(effectiveDecimals);\n      return `${currencyConfig.symbol}${formatted}`;\n    }\n  }\n\n  // Parse display value to number\n  function parseCurrency(val) {\n    if (!val) return 0;\n    \n    // Handle abbreviated values\n    const str = val.toString().toLowerCase();\n    let multiplier = 1;\n    \n    if (str.endsWith('k')) {\n      multiplier = 1000;\n    } else if (str.endsWith('m')) {\n      multiplier = 1000000;\n    } else if (str.endsWith('b')) {\n      multiplier = 1000000000;\n    }\n    \n    // Remove currency symbols, commas, spaces, and multiplier suffixes\n    const cleanValue = val\n      .toString()\n      .replace(/[^\\d.-]/g, '')\n      .replace(/,/g, '');\n    \n    const numValue = parseFloat(cleanValue) * multiplier;\n    return isNaN(numValue) ? 0 : numValue;\n  }\n\n  // Validate input\n  const validateInput = (val) => {\n    const numValue = typeof val === 'string' ? parseCurrency(val) : val;\n    \n    let valid = true;\n    let message = '';\n\n    if (required && (!numValue && numValue !== 0)) {\n      valid = false;\n      message = 'This field is required';\n    } else if (!allowNegative && numValue < 0) {\n      valid = false;\n      message = 'Negative values are not allowed';\n    } else if (min !== undefined && numValue < min) {\n      valid = false;\n      message = `Value must be at least ${formatCurrency(min)}`;\n    } else if (max !== undefined && numValue > max) {\n      valid = false;\n      message = `Value must not exceed ${formatCurrency(max)}`;\n    }\n\n    setIsValid(valid);\n    setValidationMessage(message);\n    \n    if (onValidation) {\n      onValidation(valid, message);\n    }\n\n    return valid;\n  };\n\n  // Calculate trend\n  const getTrend = () => {\n    if (!showTrend || previousValue === undefined) return null;\n    \n    const current = typeof value === 'string' ? parseCurrency(value) : (value || 0);\n    const previous = typeof previousValue === 'string' ? parseCurrency(previousValue) : (previousValue || 0);\n    \n    if (current > previous) return 'up';\n    if (current < previous) return 'down';\n    return 'neutral';\n  };\n\n  const trend = getTrend();\n\n  // Update display value when prop value changes\n  useEffect(() => {\n    if (!isFocused) {\n      setDisplayValue(formatCurrency(value, { abbreviated: abbreviateDisplay }));\n    }\n  }, [value, currency, locale, effectiveDecimals, isFocused, abbreviateDisplay]);\n\n  // Handle focus\n  const handleFocus = (e) => {\n    setIsFocused(true);\n    // Show raw number for editing\n    const rawValue = value ? value.toString() : '';\n    setDisplayValue(rawValue);\n    \n    // Select all text for easy replacement\n    setTimeout(() => {\n      if (componentRef.current) {\n        componentRef.current.select();\n      }\n    }, 0);\n  };\n\n  // Handle blur\n  const handleBlur = (e) => {\n    setIsFocused(false);\n    const rawValue = parseCurrency(displayValue);\n    \n    validateInput(rawValue);\n    \n    // Format for display\n    setDisplayValue(formatCurrency(rawValue, { abbreviated: abbreviateDisplay }));\n    \n    // Call onChange with parsed value\n    if (onChange) {\n      onChange(rawValue);\n    }\n    \n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  // Handle input change\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n    \n    // Allow numbers, decimals, negative signs, and K/M/B suffixes\n    const regex = allowNegative \n      ? /^-?\\d*\\.?\\d*[kmb]?$/i \n      : /^\\d*\\.?\\d*[kmb]?$/i;\n    \n    if (regex.test(newValue) || newValue === '') {\n      setDisplayValue(newValue);\n    }\n  };\n\n  // Handle key press\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      componentRef.current?.blur();\n    }\n  };\n\n  // Auto-focus if specified\n  useEffect(() => {\n    if (autoFocus && componentRef.current) {\n      componentRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  // Size variants\n  const sizeClasses = {\n    sm: 'h-9 px-3 text-sm',\n    default: 'h-11 px-4 text-sm',\n    lg: 'h-12 px-4 text-base'\n  };\n\n  // Variant styles\n  const variantClasses = {\n    default: 'border-input bg-background hover:border-ring/50',\n    filled: 'border-transparent bg-muted hover:bg-muted/80',\n    minimal: 'border-transparent bg-transparent hover:bg-muted/50'\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      {label && (\n        <label\n          htmlFor={inputId}\n          className={cn(\n            'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n            error || !isValid ? 'text-destructive' : 'text-foreground'\n          )}\n        >\n          {label}\n          {required && <span className=\"text-destructive ml-1\">*</span>}\n        </label>\n      )}\n\n      <div className=\"relative\">\n        {/* Currency symbol */}\n        {showCurrency && (\n          <div className=\"absolute left-3 top-1/2 -translate-y-1/2 flex items-center gap-1 pointer-events-none z-10\">\n            <DollarSign size={16} className=\"text-muted-foreground\" />\n            <span className=\"text-sm text-muted-foreground font-medium\">\n              {currencyConfig.code}\n            </span>\n          </div>\n        )}\n\n        <input\n          ref={componentRef}\n          id={inputId}\n          type=\"text\"\n          value={displayValue}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyPress={handleKeyPress}\n          placeholder={effectivePlaceholder}\n          disabled={disabled || loading}\n          step={step}\n          className={cn(\n            // Base styles\n            'flex w-full rounded-lg border ring-offset-background',\n            'file:border-0 file:bg-transparent file:text-sm file:font-medium',\n            'placeholder:text-muted-foreground',\n            'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n            'disabled:cursor-not-allowed disabled:opacity-50',\n            'transition-all duration-200',\n            \n            // Size\n            sizeClasses[size],\n            \n            // Variant\n            variantClasses[variant],\n            \n            // Financial styling\n            'font-mono text-right',\n            \n            // Padding adjustments\n            showCurrency ? 'pl-16' : 'pl-4',\n            'pr-4',\n            trend && 'pr-8',\n            \n            // States\n            isFocused && 'ring-2 ring-ring ring-offset-2 border-ring',\n            (error || !isValid) && 'border-destructive focus-visible:ring-destructive',\n            loading && 'animate-pulse',\n            \n            className\n          )}\n          {...props}\n        />\n\n        {/* Trend indicator */}\n        {trend && trend !== 'neutral' && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            {trend === 'up' ? (\n              <TrendingUp size={16} className=\"text-success\" />\n            ) : (\n              <TrendingDown size={16} className=\"text-destructive\" />\n            )}\n          </div>\n        )}\n\n        {/* Loading indicator */}\n        {loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <div className=\"w-4 h-4 border-2 border-muted-foreground border-t-transparent rounded-full animate-spin\" />\n          </div>\n        )}\n\n        {/* Error icon */}\n        {(error || !isValid) && !loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <AlertCircle size={16} className=\"text-destructive\" />\n          </div>\n        )}\n      </div>\n\n      {/* Description */}\n      {description && !error && isValid && (\n        <p className=\"text-sm text-muted-foreground\">\n          {description}\n        </p>\n      )}\n\n      {/* Error message */}\n      {(error || !isValid) && (\n        <p className=\"text-sm text-destructive flex items-center gap-1\">\n          <AlertCircle size={14} />\n          {error || validationMessage}\n        </p>\n      )}\n\n      {/* Trend information */}\n      {showTrend && previousValue !== undefined && trend !== 'neutral' && (\n        <p className=\"text-xs text-muted-foreground flex items-center gap-1\">\n          {trend === 'up' ? (\n            <TrendingUp size={12} className=\"text-success\" />\n          ) : (\n            <TrendingDown size={12} className=\"text-destructive\" />\n          )}\n          vs. previous: {formatCurrency(previousValue)}\n        </p>\n      )}\n    </div>\n  );\n});\n\nCurrencyInput.displayName = 'CurrencyInput';\n\nexport { CurrencyInput as default, CURRENCY_CONFIG };","import React from 'react';\nimport { Calculator, TrendingUp, DollarSign, Percent } from 'lucide-react';\nimport { cn } from '../../utils/cn';\n\nconst LoadingState = ({\n  type = 'default', // 'default', 'calculation', 'financial', 'inline'\n  size = 'default', // 'sm', 'default', 'lg'\n  message,\n  className,\n  showIcon = true,\n  variant = 'default', // 'default', 'subtle', 'pulsing'\n  ...props\n}) => {\n  // Get appropriate icon based on type\n  const getIcon = () => {\n    switch (type) {\n      case 'calculation':\n        return Calculator;\n      case 'financial':\n        return DollarSign;\n      case 'trend':\n        return TrendingUp;\n      case 'percentage':\n        return Percent;\n      default:\n        return Calculator;\n    }\n  };\n\n  const Icon = getIcon();\n\n  // Size configurations\n  const sizeConfig = {\n    sm: {\n      spinner: 'w-3 h-3 border',\n      icon: 12,\n      text: 'text-xs',\n      gap: 'gap-1',\n      padding: 'p-1'\n    },\n    default: {\n      spinner: 'w-4 h-4 border-2',\n      icon: 16,\n      text: 'text-sm',\n      gap: 'gap-2',\n      padding: 'p-2'\n    },\n    lg: {\n      spinner: 'w-6 h-6 border-2',\n      icon: 20,\n      text: 'text-base',\n      gap: 'gap-3',\n      padding: 'p-3'\n    }\n  };\n\n  const config = sizeConfig[size];\n\n  // Variant styles\n  const variantStyles = {\n    default: 'text-muted-foreground',\n    subtle: 'text-muted-foreground/70',\n    pulsing: 'text-muted-foreground animate-pulse'\n  };\n\n  // Inline variant for table cells and small spaces\n  if (type === 'inline') {\n    return (\n      <div className={cn('flex items-center justify-center', config.gap, className)} {...props}>\n        <div className={cn(\n          config.spinner,\n          'border-muted-foreground border-t-transparent rounded-full animate-spin',\n          variantStyles[variant]\n        )} />\n        {message && (\n          <span className={cn(config.text, variantStyles[variant])}>\n            {message}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  // Default card-style loading state\n  const defaultMessage = {\n    calculation: 'Calculating...',\n    financial: 'Processing financial data...',\n    trend: 'Analyzing trends...',\n    percentage: 'Computing percentages...',\n    default: 'Loading...'\n  };\n\n  const displayMessage = message || defaultMessage[type];\n\n  return (\n    <div className={cn(\n      'flex flex-col items-center justify-center',\n      config.padding,\n      config.gap,\n      'bg-muted/30 rounded-lg border border-dashed border-muted-foreground/30',\n      className\n    )} {...props}>\n      <div className=\"flex items-center gap-2\">\n        {/* Animated spinner */}\n        <div className={cn(\n          config.spinner,\n          'border-muted-foreground border-t-transparent rounded-full animate-spin',\n          variantStyles[variant]\n        )} />\n        \n        {/* Icon with subtle animation */}\n        {showIcon && (\n          <Icon \n            size={config.icon} \n            className={cn(\n              'animate-pulse',\n              variantStyles[variant]\n            )} \n          />\n        )}\n      </div>\n      \n      {/* Loading message */}\n      {displayMessage && (\n        <p className={cn(\n          config.text,\n          'font-medium text-center',\n          variantStyles[variant]\n        )}>\n          {displayMessage}\n        </p>\n      )}\n    </div>\n  );\n};\n\n// Skeleton component for table cells and consistent spacing\nconst LoadingSkeleton = ({\n  width = 'w-20',\n  height = 'h-6',\n  className,\n  variant = 'default', // 'default', 'currency', 'percentage'\n  ...props\n}) => {\n  const variantClasses = {\n    default: 'bg-muted',\n    currency: 'bg-emerald-100',\n    percentage: 'bg-blue-100'\n  };\n\n  return (\n    <div\n      className={cn(\n        'animate-pulse rounded-md',\n        width,\n        height,\n        variantClasses[variant],\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\n// Pulse component for subtle loading indicators\nconst LoadingPulse = ({\n  children,\n  className,\n  isLoading = false,\n  ...props\n}) => {\n  if (!isLoading) {\n    return children;\n  }\n\n  return (\n    <div className={cn('animate-pulse opacity-50', className)} {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Dots animation for minimal loading states\nconst LoadingDots = ({\n  size = 'default',\n  className,\n  variant = 'default',\n  ...props\n}) => {\n  const sizeClasses = {\n    sm: 'w-1 h-1',\n    default: 'w-1.5 h-1.5',\n    lg: 'w-2 h-2'\n  };\n\n  const variantClasses = {\n    default: 'bg-muted-foreground',\n    primary: 'bg-primary',\n    success: 'bg-success',\n    warning: 'bg-warning'\n  };\n\n  return (\n    <div \n      className={cn('flex items-center gap-1', className)} \n      {...props}\n    >\n      {[0, 1, 2].map((i) => (\n        <div\n          key={i}\n          className={cn(\n            'rounded-full animate-pulse',\n            sizeClasses[size],\n            variantClasses[variant]\n          )}\n          style={{\n            animationDelay: `${i * 0.2}s`,\n            animationDuration: '1.4s'\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\n// Export all components\nexport default LoadingState;\nexport { LoadingSkeleton, LoadingPulse, LoadingDots };","import React from 'react';\nimport { AlertCircle, CheckCircle, AlertTriangle, Info, X } from 'lucide-react';\nimport { cn } from '../../utils/cn';\n\nconst ValidationFeedback = ({\n  type = 'error', // 'error', 'warning', 'success', 'info'\n  message,\n  className,\n  size = 'default', // 'sm', 'default', 'lg'\n  variant = 'default', // 'default', 'inline', 'floating', 'subtle'\n  showIcon = true,\n  dismissible = false,\n  onDismiss,\n  position = 'bottom', // 'top', 'bottom', 'left', 'right' (for floating)\n  children,\n  ...props\n}) => {\n  // Icon mapping\n  const iconMap = {\n    error: AlertCircle,\n    warning: AlertTriangle,\n    success: CheckCircle,\n    info: Info\n  };\n\n  const Icon = iconMap[type];\n\n  // Size configurations\n  const sizeConfig = {\n    sm: {\n      text: 'text-xs',\n      icon: 12,\n      padding: 'p-2',\n      gap: 'gap-1'\n    },\n    default: {\n      text: 'text-sm',\n      icon: 14,\n      padding: 'p-3',\n      gap: 'gap-2'\n    },\n    lg: {\n      text: 'text-base',\n      icon: 16,\n      padding: 'p-4',\n      gap: 'gap-3'\n    }\n  };\n\n  const config = sizeConfig[size];\n\n  // Type-based styling\n  const typeStyles = {\n    error: {\n      bg: 'bg-destructive/10',\n      border: 'border-destructive/20',\n      text: 'text-destructive',\n      icon: 'text-destructive'\n    },\n    warning: {\n      bg: 'bg-warning/10',\n      border: 'border-warning/20',\n      text: 'text-warning-foreground',\n      icon: 'text-warning'\n    },\n    success: {\n      bg: 'bg-success/10',\n      border: 'border-success/20',\n      text: 'text-success-foreground',\n      icon: 'text-success'\n    },\n    info: {\n      bg: 'bg-blue-50',\n      border: 'border-blue-200',\n      text: 'text-blue-700',\n      icon: 'text-blue-500'\n    }\n  };\n\n  const styles = typeStyles[type];\n\n  // Variant-specific classes\n  const getVariantClasses = () => {\n    switch (variant) {\n      case 'inline':\n        return 'flex items-center';\n      case 'floating':\n        return cn(\n          'absolute z-50 shadow-lg rounded-lg',\n          position === 'top' && 'bottom-full mb-2',\n          position === 'bottom' && 'top-full mt-2',\n          position === 'left' && 'right-full mr-2',\n          position === 'right' && 'left-full ml-2'\n        );\n      case 'subtle':\n        return 'border-0 bg-transparent';\n      default:\n        return 'rounded-lg border';\n    }\n  };\n\n  // Don't render if no message and no children\n  if (!message && !children) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        'flex items-start',\n        config.gap,\n        config.padding,\n        styles.bg,\n        styles.border,\n        getVariantClasses(),\n        className\n      )}\n      {...props}\n    >\n      {/* Icon */}\n      {showIcon && Icon && (\n        <Icon\n          size={config.icon}\n          className={cn('flex-shrink-0 mt-0.5', styles.icon)}\n        />\n      )}\n\n      {/* Content */}\n      <div className=\"flex-1 min-w-0\">\n        {message && (\n          <p className={cn(config.text, styles.text, 'font-medium')}>\n            {message}\n          </p>\n        )}\n        {children && (\n          <div className={cn(config.text, styles.text)}>\n            {children}\n          </div>\n        )}\n      </div>\n\n      {/* Dismiss button */}\n      {dismissible && onDismiss && (\n        <button\n          onClick={onDismiss}\n          className={cn(\n            'flex-shrink-0 ml-2 p-1 rounded-full hover:bg-black/10 transition-colors',\n            styles.text\n          )}\n          aria-label=\"Dismiss\"\n        >\n          <X size={config.icon} />\n        </button>\n      )}\n    </div>\n  );\n};\n\n// Field-specific validation component\nconst FieldValidation = ({\n  error,\n  warning,\n  success,\n  info,\n  className,\n  ...props\n}) => {\n  // Determine the highest priority message\n  let type, message;\n  \n  if (error) {\n    type = 'error';\n    message = error;\n  } else if (warning) {\n    type = 'warning';\n    message = warning;\n  } else if (success) {\n    type = 'success';\n    message = success;\n  } else if (info) {\n    type = 'info';\n    message = info;\n  } else {\n    return null;\n  }\n\n  return (\n    <ValidationFeedback\n      type={type}\n      message={message}\n      size=\"sm\"\n      variant=\"inline\"\n      className={className}\n      {...props}\n    />\n  );\n};\n\n// List of validation errors/warnings\nconst ValidationList = ({\n  items = [],\n  className,\n  showNumbers = false,\n  ...props\n}) => {\n  if (!items.length) return null;\n\n  return (\n    <div className={cn('space-y-2', className)} {...props}>\n      {items.map((item, index) => (\n        <ValidationFeedback\n          key={index}\n          type={item.type || 'error'}\n          message={showNumbers ? `${index + 1}. ${item.message}` : item.message}\n          size=\"sm\"\n          variant=\"inline\"\n        />\n      ))}\n    </div>\n  );\n};\n\n// Summary validation component for forms\nconst ValidationSummary = ({\n  errors = [],\n  warnings = [],\n  className,\n  title = 'Please fix the following issues:',\n  collapsible = false,\n  ...props\n}) => {\n  const [isCollapsed, setIsCollapsed] = React.useState(collapsible);\n  \n  const totalIssues = errors.length + warnings.length;\n  \n  if (totalIssues === 0) return null;\n\n  const allItems = [\n    ...errors.map(error => ({ type: 'error', message: error })),\n    ...warnings.map(warning => ({ type: 'warning', message: warning }))\n  ];\n\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <h4 className=\"text-sm font-semibold text-foreground\">\n          {title}\n        </h4>\n        {collapsible && (\n          <button\n            onClick={() => setIsCollapsed(!isCollapsed)}\n            className=\"text-xs text-muted-foreground hover:text-foreground transition-colors\"\n          >\n            {isCollapsed ? `Show ${totalIssues} issues` : 'Hide'}\n          </button>\n        )}\n      </div>\n\n      {/* Issues list */}\n      {!isCollapsed && (\n        <ValidationList\n          items={allItems}\n          showNumbers\n        />\n      )}\n\n      {/* Collapsed summary */}\n      {isCollapsed && (\n        <p className=\"text-sm text-muted-foreground\">\n          {errors.length > 0 && `${errors.length} error${errors.length > 1 ? 's' : ''}`}\n          {errors.length > 0 && warnings.length > 0 && ', '}\n          {warnings.length > 0 && `${warnings.length} warning${warnings.length > 1 ? 's' : ''}`}\n        </p>\n      )}\n    </div>\n  );\n};\n\n// Real-time validation status indicator\nconst ValidationStatus = ({\n  isValidating = false,\n  isValid = true,\n  className,\n  size = 'default',\n  ...props\n}) => {\n  const sizeClasses = {\n    sm: 'w-3 h-3',\n    default: 'w-4 h-4',\n    lg: 'w-5 h-5'\n  };\n\n  if (isValidating) {\n    return (\n      <div\n        className={cn(\n          'border-2 border-blue-500 border-t-transparent rounded-full animate-spin',\n          sizeClasses[size],\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n\n  if (isValid) {\n    return (\n      <CheckCircle\n        className={cn('text-success', className)}\n        size={size === 'sm' ? 12 : size === 'lg' ? 20 : 16}\n        {...props}\n      />\n    );\n  }\n\n  return (\n    <AlertCircle\n      className={cn('text-destructive', className)}\n      size={size === 'sm' ? 12 : size === 'lg' ? 20 : 16}\n      {...props}\n    />\n  );\n};\n\nexport default ValidationFeedback;\nexport { FieldValidation, ValidationList, ValidationSummary, ValidationStatus };","import React, { useState } from 'react';\nimport { \n  FinancialInput, \n  EditableCell, \n  CurrencyInput, \n  LoadingState, \n  LoadingSkeleton,\n  LoadingDots,\n  ValidationFeedback,\n  FieldValidation,\n  ValidationSummary\n} from './ui';\nimport { Card } from './ui/Card';\nimport { Calculator, TrendingUp, DollarSign } from 'lucide-react';\n\nconst FinancialInputsDemo = () => {\n  const [values, setValues] = useState({\n    revenue: 1250000,\n    expenses: 850000,\n    growth: 12.5,\n    margin: 32.1,\n    editableValue: 450000,\n    currency: 2400000\n  });\n\n  const [isLoading, setIsLoading] = useState({\n    calculation: false,\n    validation: false\n  });\n\n  const [errors, setErrors] = useState([]);\n  const [isEditingCell, setIsEditingCell] = useState(false);\n\n  // Simulate calculation loading\n  const simulateCalculation = () => {\n    setIsLoading(prev => ({ ...prev, calculation: true }));\n    setTimeout(() => {\n      setIsLoading(prev => ({ ...prev, calculation: false }));\n    }, 2000);\n  };\n\n  const handleValueChange = (key) => (newValue) => {\n    setValues(prev => ({ ...prev, [key]: newValue }));\n  };\n\n  const validateInput = (value, min, max) => {\n    const newErrors = [];\n    if (value < min) newErrors.push(`Value must be at least ${min}`);\n    if (value > max) newErrors.push(`Value must not exceed ${max}`);\n    setErrors(newErrors);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 p-8\">\n      <div className=\"max-w-6xl mx-auto space-y-8\">\n        {/* Header */}\n        <div className=\"text-center space-y-4\">\n          <div className=\"flex items-center justify-center gap-3\">\n            <div className=\"p-3 bg-blue-100 rounded-xl\">\n              <Calculator className=\"w-8 h-8 text-blue-600\" />\n            </div>\n            <h1 className=\"text-3xl font-bold text-slate-900\">Enhanced Financial Input Components</h1>\n          </div>\n          <p className=\"text-lg text-slate-600 max-w-2xl mx-auto\">\n            Professional financial input components with smart formatting, validation, and seamless user experience\n          </p>\n        </div>\n\n        {/* Main Demo Grid */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          \n          {/* Financial Input Component */}\n          <Card className=\"p-6 space-y-6\">\n            <div className=\"flex items-center gap-3\">\n              <DollarSign className=\"w-5 h-5 text-emerald-600\" />\n              <h2 className=\"text-xl font-semibold text-slate-900\">FinancialInput Component</h2>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <FinancialInput\n                label=\"Annual Revenue\"\n                value={values.revenue}\n                onChange={handleValueChange('revenue')}\n                type=\"currency\"\n                currency=\"USD\"\n                description=\"Enter the company's annual revenue\"\n                required\n                onValidation={(isValid, message) => console.log('Validation:', isValid, message)}\n              />\n\n              <FinancialInput\n                label=\"Operating Expenses\"\n                value={values.expenses}\n                onChange={handleValueChange('expenses')}\n                type=\"currency\"\n                currency=\"USD\"\n                error={values.expenses > values.revenue ? \"Expenses cannot exceed revenue\" : null}\n              />\n\n              <FinancialInput\n                label=\"Growth Rate\"\n                value={values.growth}\n                onChange={handleValueChange('growth')}\n                type=\"percentage\"\n                suffix=\"%\"\n                decimals={1}\n                description=\"Year-over-year growth percentage\"\n              />\n\n              <FinancialInput\n                label=\"Profit Margin\"\n                value={values.margin}\n                onChange={handleValueChange('margin')}\n                type=\"number\"\n                suffix=\"%\"\n                decimals={2}\n                min={0}\n                max={100}\n                loading={isLoading.validation}\n              />\n            </div>\n          </Card>\n\n          {/* Currency Input Component */}\n          <Card className=\"p-6 space-y-6\">\n            <div className=\"flex items-center gap-3\">\n              <TrendingUp className=\"w-5 h-5 text-blue-600\" />\n              <h2 className=\"text-xl font-semibold text-slate-900\">CurrencyInput Component</h2>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <CurrencyInput\n                label=\"Market Valuation\"\n                value={values.currency}\n                onChange={handleValueChange('currency')}\n                currency=\"USD\"\n                abbreviateDisplay={true}\n                showTrend={true}\n                previousValue={2100000}\n                description=\"Company market valuation with trend indicator\"\n              />\n\n              <CurrencyInput\n                label=\"Investment Amount (EUR)\"\n                value={850000}\n                onChange={(val) => console.log('EUR Value:', val)}\n                currency=\"EUR\"\n                locale=\"de-DE\"\n                size=\"lg\"\n              />\n\n              <CurrencyInput\n                label=\"Small Investment\"\n                value={25000}\n                onChange={(val) => console.log('Small Investment:', val)}\n                currency=\"USD\"\n                size=\"sm\"\n                variant=\"filled\"\n              />\n\n              <CurrencyInput\n                label=\"Japanese Investment\"\n                value={15000000}\n                onChange={(val) => console.log('JPY Value:', val)}\n                currency=\"JPY\"\n                locale=\"ja-JP\"\n                abbreviateDisplay={true}\n              />\n            </div>\n          </Card>\n\n          {/* Editable Cells */}\n          <Card className=\"p-6 space-y-6\">\n            <h2 className=\"text-xl font-semibold text-slate-900\">EditableCell Component</h2>\n            \n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-3 gap-4 p-4 bg-slate-50 rounded-lg\">\n                <div className=\"text-sm font-medium text-slate-600\">Account</div>\n                <div className=\"text-sm font-medium text-slate-600\">Current</div>\n                <div className=\"text-sm font-medium text-slate-600\">Adjusted</div>\n                \n                <div className=\"text-sm text-slate-700\">Revenue</div>\n                <EditableCell\n                  value={values.editableValue}\n                  onChange={handleValueChange('editableValue')}\n                  type=\"currency\"\n                  isEditing={isEditingCell}\n                  onEdit={setIsEditingCell}\n                  variant=\"default\"\n                />\n                <EditableCell\n                  value={values.editableValue * 1.15}\n                  onChange={(val) => console.log('Adjusted:', val)}\n                  type=\"currency\"\n                  variant=\"adjusted\"\n                />\n                \n                <div className=\"text-sm text-slate-700\">Growth Rate</div>\n                <EditableCell\n                  value={15.5}\n                  onChange={(val) => console.log('Growth:', val)}\n                  type=\"percentage\"\n                />\n                <EditableCell\n                  value={18.2}\n                  onChange={(val) => console.log('Adj Growth:', val)}\n                  type=\"percentage\"\n                  variant=\"adjusted\"\n                />\n                \n                <div className=\"text-sm text-slate-700\">Calculated</div>\n                <EditableCell\n                  value={values.editableValue * 0.25}\n                  isFormula={true}\n                  variant=\"formula\"\n                />\n                <EditableCell\n                  value={values.editableValue * 1.15 * 0.25}\n                  isFormula={true}\n                  variant=\"formula\"\n                />\n              </div>\n            </div>\n          </Card>\n\n          {/* Loading States */}\n          <Card className=\"p-6 space-y-6\">\n            <h2 className=\"text-xl font-semibold text-slate-900\">Loading States</h2>\n            \n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <LoadingState \n                  type=\"calculation\" \n                  message=\"Calculating DCF...\"\n                  size=\"default\"\n                />\n                <LoadingState \n                  type=\"financial\" \n                  message=\"Processing data...\"\n                  size=\"default\"\n                  variant=\"subtle\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Inline Loading States</h4>\n                <div className=\"flex items-center gap-4\">\n                  <LoadingState type=\"inline\" message=\"Loading...\" size=\"sm\" />\n                  <LoadingDots size=\"default\" variant=\"primary\" />\n                  <LoadingSkeleton width=\"w-24\" height=\"h-4\" variant=\"currency\" />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Interactive Loading Demo</h4>\n                <button\n                  onClick={simulateCalculation}\n                  disabled={isLoading.calculation}\n                  className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white rounded-lg transition-colors\"\n                >\n                  {isLoading.calculation ? 'Calculating...' : 'Run Calculation'}\n                </button>\n                {isLoading.calculation && (\n                  <LoadingState \n                    type=\"calculation\"\n                    message=\"Computing financial metrics...\"\n                    size=\"sm\"\n                    variant=\"pulsing\"\n                  />\n                )}\n              </div>\n            </div>\n          </Card>\n\n          {/* Validation Feedback */}\n          <Card className=\"p-6 space-y-6 lg:col-span-2\">\n            <h2 className=\"text-xl font-semibold text-slate-900\">Validation & Feedback</h2>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Individual Validation Messages</h4>\n                \n                <ValidationFeedback\n                  type=\"error\"\n                  message=\"Revenue cannot be negative\"\n                  size=\"default\"\n                />\n                \n                <ValidationFeedback\n                  type=\"warning\"\n                  message=\"Growth rate seems unusually high\"\n                  size=\"default\"\n                />\n                \n                <ValidationFeedback\n                  type=\"success\"\n                  message=\"All financial metrics are within expected ranges\"\n                  size=\"default\"\n                />\n                \n                <ValidationFeedback\n                  type=\"info\"\n                  message=\"Consider adjusting the discount rate based on market conditions\"\n                  size=\"default\"\n                />\n              </div>\n\n              <div className=\"space-y-4\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Field Validation</h4>\n                \n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-slate-700\">Test Validation</label>\n                  <input\n                    type=\"number\"\n                    value={-50}\n                    onChange={(e) => validateInput(parseFloat(e.target.value), 0, 1000)}\n                    className=\"w-full px-3 py-2 border border-input rounded-lg\"\n                  />\n                  <FieldValidation\n                    error={errors.length > 0 ? errors[0] : null}\n                    info={errors.length === 0 ? \"Value is within acceptable range\" : null}\n                  />\n                </div>\n\n                <ValidationSummary\n                  errors={[\n                    \"Operating expenses exceed revenue\",\n                    \"Growth rate must be between 0% and 100%\"\n                  ]}\n                  warnings={[\n                    \"Margin seems low for this industry\",\n                    \"Consider reviewing the assumptions\"\n                  ]}\n                  collapsible={true}\n                />\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Usage Examples */}\n        <Card className=\"p-6\">\n          <h2 className=\"text-xl font-semibold text-slate-900 mb-4\">Quick Usage Examples</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 text-sm\">\n            <div className=\"p-4 bg-slate-50 rounded-lg\">\n              <h4 className=\"font-medium text-slate-700 mb-2\">Basic Currency Input</h4>\n              <code className=\"text-xs text-slate-600 block whitespace-pre\">{`<CurrencyInput\n  value={1000000}\n  onChange={setValue}\n  currency=\"USD\"\n  label=\"Revenue\"\n/>`}</code>\n            </div>\n            \n            <div className=\"p-4 bg-slate-50 rounded-lg\">\n              <h4 className=\"font-medium text-slate-700 mb-2\">Editable Table Cell</h4>\n              <code className=\"text-xs text-slate-600 block whitespace-pre\">{`<EditableCell\n  value={value}\n  onChange={onChange}\n  type=\"currency\"\n  variant=\"adjusted\"\n/>`}</code>\n            </div>\n            \n            <div className=\"p-4 bg-slate-50 rounded-lg\">\n              <h4 className=\"font-medium text-slate-700 mb-2\">Validation Feedback</h4>\n              <code className=\"text-xs text-slate-600 block whitespace-pre\">{`<FieldValidation\n  error=\"Invalid input\"\n  warning=\"Check value\"\n  success=\"Valid input\"\n/>`}</code>\n            </div>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default FinancialInputsDemo;"],"file":"assets/FinancialInputsDemo-91NhKUzV.js"}