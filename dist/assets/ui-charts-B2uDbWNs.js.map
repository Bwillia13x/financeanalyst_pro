{"version":3,"file":"ui-charts-B2uDbWNs.js","sources":["../../src/utils/cn.js","../../src/components/LazyLoader/LazyLoader.jsx","../../src/components/ui/charts/LazyChartWrapper.jsx","../../src/components/ui/charts/MetricsDashboard.jsx","../../src/components/ui/charts/index.js","../../src/components/ui/charts/DCFWaterfall.jsx","../../src/components/ui/charts/RevenueBreakdown.jsx","../../src/components/ui/charts/TrendLine.jsx","../../src/components/ui/charts/SensitivityHeatmap.jsx"],"sourcesContent":["import { clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n","import React, { useState, useEffect, useRef, Suspense } from 'react';\nimport { trackFinancialComponentPerformance } from '../../utils/performanceMonitoring';\n\n// Enhanced lazy loading component for financial components\nconst LazyLoader = ({ \n  children, \n  fallback = null,\n  componentName = 'unknown',\n  threshold = 0.1,\n  rootMargin = '50px',\n  preloadDelay = 2000,\n  priority = 'normal',\n  onLoad = null,\n  onError = null,\n  performanceTracking = true\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [loadError, setLoadError] = useState(null);\n  const [preloadTimer, setPreloadTimer] = useState(null);\n  \n  const containerRef = useRef(null);\n  const observerRef = useRef(null);\n  const loadStartTime = useRef(null);\n\n  // Set up intersection observer\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    const options = {\n      threshold,\n      rootMargin\n    };\n\n    observerRef.current = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          loadStartTime.current = performance.now();\n          setIsVisible(true);\n          \n          // Stop observing once visible\n          if (observerRef.current) {\n            observerRef.current.unobserve(entry.target);\n          }\n        }\n      });\n    }, options);\n\n    observerRef.current.observe(containerRef.current);\n\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n      if (preloadTimer) {\n        clearTimeout(preloadTimer);\n      }\n    };\n  }, [threshold, rootMargin, preloadTimer]);\n\n  // Preload high-priority components\n  useEffect(() => {\n    if (priority === 'high' && preloadDelay > 0) {\n      const timer = setTimeout(() => {\n        loadStartTime.current = performance.now();\n        setIsVisible(true);\n      }, preloadDelay);\n      \n      setPreloadTimer(timer);\n    }\n  }, [priority, preloadDelay]);\n\n  // Track component load performance\n  useEffect(() => {\n    if (isLoaded && loadStartTime.current && performanceTracking) {\n      const loadTime = performance.now() - loadStartTime.current;\n      \n      trackFinancialComponentPerformance(componentName, {\n        loadTime,\n        priority,\n        lazy: true,\n        timestamp: Date.now()\n      });\n\n      onLoad?.({ componentName, loadTime });\n    }\n  }, [isLoaded, componentName, priority, performanceTracking, onLoad]);\n\n  // Handle load success\n  const handleLoadSuccess = () => {\n    setIsLoaded(true);\n    setLoadError(null);\n  };\n\n  // Handle load error\n  const handleLoadError = (error) => {\n    setLoadError(error);\n    onError?.(error);\n    \n    if (performanceTracking) {\n      trackFinancialComponentPerformance(componentName, {\n        loadError: error.message,\n        priority,\n        lazy: true,\n        timestamp: Date.now()\n      });\n    }\n  };\n\n  // Default fallback component\n  const defaultFallback = (\n    <div className=\"animate-pulse bg-gray-100 rounded-lg p-6\">\n      <div className=\"space-y-4\">\n        <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n        <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n        <div className=\"h-32 bg-gray-200 rounded\"></div>\n      </div>\n    </div>\n  );\n\n  // Error fallback\n  const errorFallback = (\n    <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\n      <div className=\"flex items-center\">\n        <div className=\"flex-shrink-0\">\n          <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n          </svg>\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800\">\n            Failed to load {componentName}\n          </h3>\n          <div className=\"mt-2 text-sm text-red-700\">\n            <p>{loadError?.message || 'An unexpected error occurred'}</p>\n          </div>\n          <div className=\"mt-4\">\n            <button\n              onClick={() => {\n                setLoadError(null);\n                setIsVisible(false);\n                setTimeout(() => setIsVisible(true), 100);\n              }}\n              className=\"text-sm font-medium text-red-800 hover:text-red-900\"\n            >\n              Try again\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div ref={containerRef} className=\"lazy-loader-container\">\n      {!isVisible ? (\n        fallback || defaultFallback\n      ) : loadError ? (\n        errorFallback\n      ) : (\n        <Suspense fallback={fallback || defaultFallback}>\n          <ErrorBoundary \n            onError={handleLoadError}\n            onLoad={handleLoadSuccess}\n            componentName={componentName}\n          >\n            {children}\n          </ErrorBoundary>\n        </Suspense>\n      )}\n    </div>\n  );\n};\n\n// Error boundary for lazy loaded components\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.props.onError?.(error, errorInfo);\n  }\n\n  componentDidMount() {\n    if (!this.state.hasError) {\n      this.props.onLoad?.();\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null; // Let parent handle error display\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default LazyLoader;","import React, { Suspense } from 'react';\nimport LazyLoader from '../../LazyLoader';\nimport { useFinancialAccessibility } from '../../../hooks/useAccessibility';\n\n// Loading fallback for charts\nconst ChartLoadingFallback = ({ title = 'Chart', height = 320 }) => (\n  <div className=\"w-full bg-white border border-gray-200 rounded-lg p-6\" style={{ height }}>\n    <div className=\"animate-pulse\">\n      <div className=\"h-6 bg-gray-200 rounded w-1/3 mb-4\"></div>\n      <div className=\"space-y-3\">\n        <div className=\"h-4 bg-gray-200 rounded w-full\"></div>\n        <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n        <div className=\"h-32 bg-gray-200 rounded w-full\"></div>\n        <div className=\"grid grid-cols-3 gap-2\">\n          <div className=\"h-3 bg-gray-200 rounded\"></div>\n          <div className=\"h-3 bg-gray-200 rounded\"></div>\n          <div className=\"h-3 bg-gray-200 rounded\"></div>\n        </div>\n      </div>\n    </div>\n    <div className=\"sr-only\">Loading {title}...</div>\n  </div>\n);\n\n// HOC for lazy loading charts with accessibility\nconst withLazyChart = (ChartComponent, componentName, options = {}) => {\n  const LazyChartComponent = React.forwardRef((props, ref) => {\n    const {\n      priority = 'normal',\n      preloadDelay = 2000,\n      height = 320,\n      title = componentName,\n      ...chartProps\n    } = props;\n\n    // Add accessibility monitoring\n    const { elementRef } = useFinancialAccessibility('chart');\n\n    const fallback = <ChartLoadingFallback title={title} height={height} />;\n\n    return (\n      <div ref={(el) => {\n        elementRef(el);\n        if (ref) {\n          if (typeof ref === 'function') ref(el);\n          else ref.current = el;\n        }\n      }}>\n        <LazyLoader\n          componentName={componentName}\n          priority={priority}\n          preloadDelay={preloadDelay}\n          fallback={fallback}\n          performanceTracking={true}\n          {...options}\n        >\n          <Suspense fallback={fallback}>\n            <ChartComponent {...chartProps} />\n          </Suspense>\n        </LazyLoader>\n      </div>\n    );\n  });\n\n  LazyChartComponent.displayName = `LazyChart(${componentName})`;\n  return LazyChartComponent;\n};\n\nexport { withLazyChart, ChartLoadingFallback };\nexport default withLazyChart;","import React from 'react';\nimport { TrendingUp, TrendingDown, Minus } from 'lucide-react';\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent, CardHeader, CardTitle } from '../Card';\n\nconst MetricCard = ({ \n  title, \n  value, \n  change, \n  format = 'number',\n  prefix = '',\n  suffix = '',\n  className \n}) => {\n  const formatValue = (val) => {\n    if (format === 'currency') {\n      return `$${(val / 1000000).toFixed(1)}M`;\n    } else if (format === 'percentage') {\n      return `${val.toFixed(1)}%`;\n    } else if (format === 'ratio') {\n      return val.toFixed(2);\n    } else if (format === 'large-number') {\n      if (val >= 1000000000) return `${(val / 1000000000).toFixed(1)}B`;\n      if (val >= 1000000) return `${(val / 1000000).toFixed(1)}M`;\n      if (val >= 1000) return `${(val / 1000).toFixed(1)}K`;\n      return val.toFixed(0);\n    }\n    return val.toLocaleString();\n  };\n\n  const getTrendIcon = () => {\n    if (change > 0) return TrendingUp;\n    if (change < 0) return TrendingDown;\n    return Minus;\n  };\n\n  const getTrendColor = () => {\n    if (change > 0) return 'text-success';\n    if (change < 0) return 'text-destructive';\n    return 'text-muted-foreground';\n  };\n\n  const TrendIcon = getTrendIcon();\n\n  return (\n    <Card className={cn(\"relative overflow-hidden\", className)}>\n      <CardContent className=\"p-6\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <p className=\"text-sm font-medium text-muted-foreground\">{title}</p>\n          {change !== undefined && (\n            <div className={cn(\"flex items-center gap-1\", getTrendColor())}>\n              <TrendIcon className=\"h-4 w-4\" />\n              <span className=\"text-xs font-medium\">\n                {Math.abs(change).toFixed(1)}%\n              </span>\n            </div>\n          )}\n        </div>\n        <div className=\"flex items-baseline gap-1\">\n          {prefix && <span className=\"text-lg text-muted-foreground\">{prefix}</span>}\n          <p className=\"text-2xl font-bold text-foreground\">\n            {formatValue(value)}\n          </p>\n          {suffix && <span className=\"text-lg text-muted-foreground\">{suffix}</span>}\n        </div>\n        {change !== undefined && (\n          <p className=\"text-xs text-muted-foreground mt-1\">\n            vs. previous period\n          </p>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nconst MetricsDashboard = ({ \n  metrics = [], \n  className,\n  title = \"Key Financial Metrics\",\n  columns = 4\n}) => {\n  const gridClasses = {\n    2: 'grid-cols-1 md:grid-cols-2',\n    3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',\n    4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4',\n    5: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5',\n    6: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6'\n  };\n\n  // Group metrics by category if categories exist\n  const groupedMetrics = metrics.reduce((groups, metric) => {\n    const category = metric.category || 'default';\n    if (!groups[category]) groups[category] = [];\n    groups[category].push(metric);\n    return groups;\n  }, {});\n\n  const hasCategories = Object.keys(groupedMetrics).length > 1 || \n    (Object.keys(groupedMetrics).length === 1 && !groupedMetrics.default);\n\n  return (\n    <div className={cn(\"w-full space-y-6\", className)}>\n      {title && (\n        <div>\n          <h2 className=\"text-xl font-semibold text-foreground mb-2\">{title}</h2>\n          <div className=\"h-px bg-gradient-to-r from-border to-transparent\"></div>\n        </div>\n      )}\n\n      {hasCategories ? (\n        // Render with categories\n        Object.entries(groupedMetrics).map(([category, categoryMetrics]) => (\n          <div key={category}>\n            {category !== 'default' && (\n              <h3 className=\"text-lg font-medium text-foreground mb-4 flex items-center gap-2\">\n                {category}\n                <div className=\"flex-1 h-px bg-muted\"></div>\n              </h3>\n            )}\n            <div className={cn(\"grid gap-4\", gridClasses[Math.min(columns, 6)])}>\n              {categoryMetrics.map((metric, index) => (\n                <MetricCard\n                  key={`${category}-${index}`}\n                  title={metric.title}\n                  value={metric.value}\n                  change={metric.change}\n                  format={metric.format}\n                  prefix={metric.prefix}\n                  suffix={metric.suffix}\n                  className={metric.highlight ? \"ring-2 ring-secondary ring-opacity-20\" : \"\"}\n                />\n              ))}\n            </div>\n          </div>\n        ))\n      ) : (\n        // Render without categories\n        <div className={cn(\"grid gap-4\", gridClasses[Math.min(columns, 6)])}>\n          {metrics.map((metric, index) => (\n            <MetricCard\n              key={index}\n              title={metric.title}\n              value={metric.value}\n              change={metric.change}\n              format={metric.format}\n              prefix={metric.prefix}\n              suffix={metric.suffix}\n              className={metric.highlight ? \"ring-2 ring-secondary ring-opacity-20\" : \"\"}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Summary footer if provided */}\n      {metrics.some(m => m.isSummary) && (\n        <div className=\"pt-4 border-t border-muted\">\n          <div className={cn(\"grid gap-4\", gridClasses[Math.min(columns, 6)])}>\n            {metrics\n              .filter(m => m.isSummary)\n              .map((metric, index) => (\n                <MetricCard\n                  key={`summary-${index}`}\n                  title={metric.title}\n                  value={metric.value}\n                  change={metric.change}\n                  format={metric.format}\n                  prefix={metric.prefix}\n                  suffix={metric.suffix}\n                  className=\"bg-primary/5 border-primary/20\"\n                />\n              ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport { MetricsDashboard, MetricCard };","import { withLazyChart } from './LazyChartWrapper';\n\n// Import chart components\nimport DCFWaterfallBase from './DCFWaterfall';\nimport RevenueBreakdownBase from './RevenueBreakdown';\nimport TrendLineBase from './TrendLine';\nimport SensitivityHeatmapBase from './SensitivityHeatmap';\nimport { MetricsDashboard as MetricsDashboardBase, MetricCard } from './MetricsDashboard';\n\n// Create lazy versions with optimized loading\nexport const DCFWaterfall = withLazyChart(DCFWaterfallBase, 'dcf-waterfall', {\n  priority: 'high',\n  preloadDelay: 1000\n});\n\nexport const RevenueBreakdown = withLazyChart(RevenueBreakdownBase, 'revenue-breakdown', {\n  priority: 'normal',\n  preloadDelay: 1500\n});\n\nexport const TrendLine = withLazyChart(TrendLineBase, 'trend-line', {\n  priority: 'normal',\n  preloadDelay: 2000\n});\n\nexport const SensitivityHeatmap = withLazyChart(SensitivityHeatmapBase, 'sensitivity-heatmap', {\n  priority: 'normal',\n  preloadDelay: 2500\n});\n\nexport const MetricsDashboard = withLazyChart(MetricsDashboardBase, 'metrics-dashboard', {\n  priority: 'high',\n  preloadDelay: 500\n});\n\n// Re-export MetricCard as it's lightweight\nexport { MetricCard };\n\n// Export the lazy chart wrapper for custom use\nexport { withLazyChart, ChartLoadingFallback } from './LazyChartWrapper';","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, ResponsiveContainer, Cell, ReferenceLine } from 'recharts';\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent, CardHeader, CardTitle } from '../Card';\n\nconst DCFWaterfall = ({ \n  data = [], \n  className,\n  title = \"DCF Cash Flow Components\",\n  formatValue = (value) => `$${(value / 1000000).toFixed(1)}M`\n}) => {\n  // Calculate cumulative values for waterfall effect\n  const processedData = data.reduce((acc, item, index) => {\n    const prevTotal = index === 0 ? 0 : acc[index - 1].cumulative;\n    const cumulative = prevTotal + item.value;\n    \n    acc.push({\n      ...item,\n      cumulative,\n      start: prevTotal,\n      isPositive: item.value >= 0,\n      isTotal: item.type === 'total'\n    });\n    \n    return acc;\n  }, []);\n\n  const CustomBar = (props) => {\n    const { payload, x, y, width, height } = props;\n    if (!payload) return null;\n\n    const barColor = payload.isTotal \n      ? 'var(--color-primary)' \n      : payload.isPositive \n        ? 'var(--color-secondary)' \n        : 'var(--color-destructive)';\n\n    return (\n      <rect\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        fill={barColor}\n        className=\"transition-opacity duration-200 hover:opacity-80\"\n      />\n    );\n  };\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (!active || !payload || !payload.length) return null;\n\n    const data = payload[0].payload;\n    \n    return (\n      <div className=\"bg-white border border-gray-200 rounded-md shadow-elevation-1 p-3 min-w-[160px]\">\n        <p className=\"font-medium text-sm text-foreground mb-1\">{label}</p>\n        <p className=\"text-sm text-muted-foreground\">\n          Value: <span className=\"font-mono font-medium\">{formatValue(data.value)}</span>\n        </p>\n        {!data.isTotal && (\n          <p className=\"text-sm text-muted-foreground\">\n            Cumulative: <span className=\"font-mono font-medium\">{formatValue(data.cumulative)}</span>\n          </p>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <Card className={cn(\"w-full\", className)}>\n      <CardHeader className=\"pb-4\">\n        <CardTitle className=\"text-lg font-semibold text-foreground\">{title}</CardTitle>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"h-80 w-full\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={processedData}\n              margin={{ top: 20, right: 30, left: 20, bottom: 60 }}\n            >\n              <XAxis \n                dataKey=\"name\"\n                axisLine={false}\n                tickLine={false}\n                tick={{ fontSize: 12, fill: 'var(--color-muted-foreground)' }}\n                angle={-45}\n                textAnchor=\"end\"\n                height={80}\n              />\n              <YAxis\n                axisLine={false}\n                tickLine={false}\n                tick={{ fontSize: 12, fill: 'var(--color-muted-foreground)' }}\n                tickFormatter={formatValue}\n              />\n              <ReferenceLine y={0} stroke=\"var(--color-border)\" strokeWidth={1} />\n              <Bar \n                dataKey=\"value\" \n                shape={<CustomBar />}\n                radius={[2, 2, 0, 0]}\n              />\n              <CustomTooltip />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n        \n        {/* Legend */}\n        <div className=\"flex items-center justify-center gap-6 mt-4 pt-4 border-t border-gray-100\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-sm bg-secondary\"></div>\n            <span className=\"text-sm text-muted-foreground\">Positive</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-sm bg-destructive\"></div>\n            <span className=\"text-sm text-muted-foreground\">Negative</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-sm bg-primary\"></div>\n            <span className=\"text-sm text-muted-foreground\">Total</span>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DCFWaterfall;","import React, { useState } from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent, CardHeader, CardTitle } from '../Card';\n\nconst RevenueBreakdown = ({ \n  data = [], \n  className,\n  title = \"Revenue Breakdown\",\n  formatValue = (value) => `$${(value / 1000000).toFixed(1)}M`\n}) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  // Generate colors using CSS variables with fallbacks\n  const colors = [\n    'var(--color-primary)',\n    'var(--color-secondary)', \n    'var(--color-accent)',\n    'var(--color-success)',\n    'var(--color-warning)',\n    '#64748b', // slate-500\n    '#94a3b8', // slate-400\n    '#cbd5e1'  // slate-300\n  ];\n\n  const total = data.reduce((sum, item) => sum + item.value, 0);\n  \n  const processedData = data.map((item, index) => ({\n    ...item,\n    percentage: ((item.value / total) * 100).toFixed(1),\n    color: colors[index % colors.length]\n  }));\n\n  const onPieEnter = (_, index) => {\n    setActiveIndex(index);\n  };\n\n  const onPieLeave = () => {\n    setActiveIndex(null);\n  };\n\n  const CustomTooltip = ({ active, payload }) => {\n    if (!active || !payload || !payload.length) return null;\n\n    const data = payload[0].payload;\n    \n    return (\n      <div className=\"bg-white border border-gray-200 rounded-md shadow-elevation-1 p-3 min-w-[160px]\">\n        <p className=\"font-medium text-sm text-foreground mb-1\">{data.name}</p>\n        <p className=\"text-sm text-muted-foreground\">\n          Value: <span className=\"font-mono font-medium\">{formatValue(data.value)}</span>\n        </p>\n        <p className=\"text-sm text-muted-foreground\">\n          Share: <span className=\"font-mono font-medium\">{data.percentage}%</span>\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <Card className={cn(\"w-full\", className)}>\n      <CardHeader className=\"pb-4\">\n        <CardTitle className=\"text-lg font-semibold text-foreground\">{title}</CardTitle>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"flex flex-col lg:flex-row items-center gap-8\">\n          {/* Chart */}\n          <div className=\"h-80 w-80 flex-shrink-0\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={processedData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={60}\n                  outerRadius={120}\n                  paddingAngle={2}\n                  dataKey=\"value\"\n                  onMouseEnter={onPieEnter}\n                  onMouseLeave={onPieLeave}\n                >\n                  {processedData.map((entry, index) => (\n                    <Cell \n                      key={`cell-${index}`} \n                      fill={entry.color}\n                      className=\"transition-all duration-200\"\n                      style={{\n                        filter: activeIndex === index ? 'brightness(1.1)' : 'none',\n                        transform: activeIndex === index ? 'scale(1.02)' : 'scale(1)',\n                        transformOrigin: 'center'\n                      }}\n                    />\n                  ))}\n                </Pie>\n                <CustomTooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n\n          {/* Legend */}\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"space-y-3\">\n              {processedData.map((item, index) => (\n                <div \n                  key={item.name}\n                  className={cn(\n                    \"flex items-center justify-between p-3 rounded-md transition-colors duration-200 cursor-pointer\",\n                    activeIndex === index \n                      ? \"bg-muted\" \n                      : \"hover:bg-gray-50\"\n                  )}\n                  onMouseEnter={() => setActiveIndex(index)}\n                  onMouseLeave={() => setActiveIndex(null)}\n                >\n                  <div className=\"flex items-center gap-3 min-w-0\">\n                    <div \n                      className=\"w-4 h-4 rounded-sm flex-shrink-0\"\n                      style={{ backgroundColor: item.color }}\n                    />\n                    <div className=\"min-w-0\">\n                      <p className=\"font-medium text-sm text-foreground truncate\">\n                        {item.name}\n                      </p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {item.percentage}% of total\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"text-right flex-shrink-0\">\n                    <p className=\"font-mono text-sm font-medium text-foreground\">\n                      {formatValue(item.value)}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n            \n            {/* Total */}\n            <div className=\"mt-4 pt-4 border-t border-gray-100\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"font-semibold text-foreground\">Total Revenue</span>\n                <span className=\"font-mono text-lg font-bold text-primary\">\n                  {formatValue(total)}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RevenueBreakdown;","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer, Dot } from 'recharts';\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent, CardHeader, CardTitle } from '../Card';\n\nconst TrendLine = ({ \n  data = [], \n  className,\n  title = \"Growth Trend Analysis\",\n  dataKey = \"value\",\n  formatValue = (value) => `${value.toFixed(1)}%`,\n  showGrowthRate = true\n}) => {\n  // Calculate period-over-period growth\n  const processedData = data.map((item, index) => {\n    if (index === 0) return { ...item, growth: null };\n    \n    const prevValue = data[index - 1][dataKey];\n    const currentValue = item[dataKey];\n    const growth = prevValue !== 0 ? ((currentValue - prevValue) / prevValue) * 100 : 0;\n    \n    return { ...item, growth };\n  });\n\n  // Calculate overall trend\n  const firstValue = data[0]?.[dataKey] || 0;\n  const lastValue = data[data.length - 1]?.[dataKey] || 0;\n  const overallGrowth = firstValue !== 0 ? ((lastValue - firstValue) / firstValue) * 100 : 0;\n  const isPositiveTrend = overallGrowth >= 0;\n\n  const CustomDot = (props) => {\n    const { payload, cx, cy } = props;\n    if (!payload) return null;\n\n    return (\n      <Dot\n        cx={cx}\n        cy={cy}\n        r={4}\n        fill=\"var(--color-secondary)\"\n        className=\"transition-all duration-200 hover:r-6\"\n      />\n    );\n  };\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (!active || !payload || !payload.length) return null;\n\n    const data = payload[0].payload;\n    \n    return (\n      <div className=\"bg-white border border-gray-200 rounded-md shadow-elevation-1 p-3 min-w-[160px]\">\n        <p className=\"font-medium text-sm text-foreground mb-1\">{label}</p>\n        <p className=\"text-sm text-muted-foreground\">\n          Value: <span className=\"font-mono font-medium\">{formatValue(data[dataKey])}</span>\n        </p>\n        {data.growth !== null && (\n          <p className=\"text-sm text-muted-foreground\">\n            Growth: <span className={cn(\n              \"font-mono font-medium\",\n              data.growth >= 0 ? \"text-success\" : \"text-destructive\"\n            )}>\n              {data.growth >= 0 ? '+' : ''}{data.growth.toFixed(1)}%\n            </span>\n          </p>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <Card className={cn(\"w-full\", className)}>\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"text-lg font-semibold text-foreground\">{title}</CardTitle>\n          {showGrowthRate && (\n            <div className=\"text-right\">\n              <p className=\"text-xs text-muted-foreground\">Overall Growth</p>\n              <p className={cn(\n                \"text-sm font-mono font-semibold\",\n                isPositiveTrend ? \"text-success\" : \"text-destructive\"\n              )}>\n                {isPositiveTrend ? '+' : ''}{overallGrowth.toFixed(1)}%\n              </p>\n            </div>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"h-80 w-full\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart\n              data={processedData}\n              margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n            >\n              <XAxis \n                dataKey=\"period\"\n                axisLine={false}\n                tickLine={false}\n                tick={{ fontSize: 12, fill: 'var(--color-muted-foreground)' }}\n              />\n              <YAxis\n                axisLine={false}\n                tickLine={false}\n                tick={{ fontSize: 12, fill: 'var(--color-muted-foreground)' }}\n                tickFormatter={formatValue}\n              />\n              <Line\n                type=\"monotone\"\n                dataKey={dataKey}\n                stroke=\"var(--color-secondary)\"\n                strokeWidth={3}\n                dot={<CustomDot />}\n                activeDot={{ \n                  r: 6, \n                  fill: 'var(--color-secondary)',\n                  stroke: 'var(--color-background)',\n                  strokeWidth: 2\n                }}\n                className=\"drop-shadow-sm\"\n              />\n              <CustomTooltip />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Key metrics */}\n        <div className=\"grid grid-cols-3 gap-4 mt-4 pt-4 border-t border-gray-100\">\n          <div className=\"text-center\">\n            <p className=\"text-xs text-muted-foreground mb-1\">Starting Value</p>\n            <p className=\"font-mono text-sm font-medium text-foreground\">\n              {formatValue(firstValue)}\n            </p>\n          </div>\n          <div className=\"text-center\">\n            <p className=\"text-xs text-muted-foreground mb-1\">Current Value</p>\n            <p className=\"font-mono text-sm font-medium text-foreground\">\n              {formatValue(lastValue)}\n            </p>\n          </div>\n          <div className=\"text-center\">\n            <p className=\"text-xs text-muted-foreground mb-1\">Net Change</p>\n            <p className={cn(\n              \"font-mono text-sm font-medium\",\n              isPositiveTrend ? \"text-success\" : \"text-destructive\"\n            )}>\n              {isPositiveTrend ? '+' : ''}{overallGrowth.toFixed(1)}%\n            </p>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TrendLine;","import React, { useState } from 'react';\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent, CardHeader, CardTitle } from '../Card';\n\nconst SensitivityHeatmap = ({ \n  data = [], \n  xAxisLabels = [],\n  yAxisLabels = [],\n  className,\n  title = \"Sensitivity Analysis\",\n  formatValue = (value) => `${value.toFixed(1)}%`,\n  formatCell = (value) => `${value > 0 ? '+' : ''}${value.toFixed(1)}%`\n}) => {\n  const [hoveredCell, setHoveredCell] = useState(null);\n\n  // Calculate min/max for color scaling\n  const allValues = data.flat();\n  const minValue = Math.min(...allValues);\n  const maxValue = Math.max(...allValues);\n  const range = maxValue - minValue;\n\n  // Get color intensity based on value\n  const getColorIntensity = (value) => {\n    if (range === 0) return 0.5;\n    return (value - minValue) / range;\n  };\n\n  // Get cell color based on value\n  const getCellColor = (value, intensity) => {\n    if (value > 0) {\n      // Green for positive values\n      return `rgba(34, 197, 94, ${0.2 + intensity * 0.6})`;\n    } else if (value < 0) {\n      // Red for negative values  \n      return `rgba(239, 68, 68, ${0.2 + intensity * 0.6})`;\n    } else {\n      // Neutral for zero\n      return 'rgba(148, 163, 184, 0.2)';\n    }\n  };\n\n  const CustomTooltip = ({ x, y, value, xLabel, yLabel }) => {\n    if (hoveredCell?.x !== x || hoveredCell?.y !== y) return null;\n    \n    return (\n      <div \n        className=\"absolute pointer-events-none z-10 bg-white border border-gray-200 rounded-md shadow-elevation-2 p-3 min-w-[180px]\"\n        style={{\n          left: hoveredCell.clientX + 10,\n          top: hoveredCell.clientY - 60\n        }}\n      >\n        <p className=\"font-medium text-sm text-foreground mb-1\">\n          {yLabel} × {xLabel}\n        </p>\n        <p className=\"text-sm text-muted-foreground\">\n          Impact: <span className={cn(\n            \"font-mono font-medium\",\n            value > 0 ? \"text-success\" : value < 0 ? \"text-destructive\" : \"text-muted-foreground\"\n          )}>\n            {formatCell(value)}\n          </span>\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <Card className={cn(\"w-full\", className)}>\n      <CardHeader className=\"pb-4\">\n        <CardTitle className=\"text-lg font-semibold text-foreground\">{title}</CardTitle>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"relative overflow-auto\">\n          <div className=\"min-w-[600px]\">\n            {/* Header row */}\n            <div className=\"grid grid-cols-[120px_repeat(var(--cols),1fr)] gap-1 mb-1\">\n              <div></div> {/* Empty corner */}\n              {xAxisLabels.map((label, index) => (\n                <div key={index} className=\"text-center p-2\">\n                  <span className=\"text-xs font-medium text-muted-foreground\">\n                    {label}\n                  </span>\n                </div>\n              ))}\n            </div>\n\n            {/* Data rows */}\n            {data.map((row, yIndex) => (\n              <div \n                key={yIndex} \n                className=\"grid grid-cols-[120px_repeat(var(--cols),1fr)] gap-1 mb-1\"\n                style={{ '--cols': xAxisLabels.length }}\n              >\n                {/* Y-axis label */}\n                <div className=\"flex items-center justify-end pr-3\">\n                  <span className=\"text-xs font-medium text-muted-foreground\">\n                    {yAxisLabels[yIndex]}\n                  </span>\n                </div>\n                \n                {/* Data cells */}\n                {row.map((value, xIndex) => {\n                  const intensity = getColorIntensity(value);\n                  const backgroundColor = getCellColor(value, intensity);\n                  \n                  return (\n                    <div\n                      key={xIndex}\n                      className=\"relative h-12 rounded-sm border border-gray-100 cursor-pointer transition-all duration-200 hover:border-gray-300\"\n                      style={{ backgroundColor }}\n                      onMouseEnter={(e) => {\n                        setHoveredCell({\n                          x: xIndex,\n                          y: yIndex,\n                          value,\n                          clientX: e.clientX,\n                          clientY: e.clientY\n                        });\n                      }}\n                      onMouseLeave={() => setHoveredCell(null)}\n                    >\n                      <div className=\"absolute inset-0 flex items-center justify-center\">\n                        <span className={cn(\n                          \"text-xs font-mono font-medium\",\n                          Math.abs(value) > range * 0.6 \n                            ? \"text-white\" \n                            : \"text-gray-900\"\n                        )}>\n                          {formatCell(value)}\n                        </span>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            ))}\n          </div>\n\n          {/* Tooltip */}\n          {hoveredCell && (\n            <CustomTooltip\n              x={hoveredCell.x}\n              y={hoveredCell.y}\n              value={hoveredCell.value}\n              xLabel={xAxisLabels[hoveredCell.x]}\n              yLabel={yAxisLabels[hoveredCell.y]}\n            />\n          )}\n        </div>\n\n        {/* Legend */}\n        <div className=\"flex items-center justify-center gap-6 mt-6 pt-4 border-t border-gray-100\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"flex items-center gap-1\">\n              <div className=\"w-4 h-4 rounded-sm bg-red-500 opacity-40\"></div>\n              <div className=\"w-4 h-4 rounded-sm bg-red-500 opacity-80\"></div>\n            </div>\n            <span className=\"text-xs text-muted-foreground\">Negative Impact</span>\n          </div>\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-4 h-4 rounded-sm bg-slate-400 opacity-20 border border-gray-200\"></div>\n            <span className=\"text-xs text-muted-foreground\">Neutral</span>\n          </div>\n          <div className=\"flex items-center gap-3\">\n            <div className=\"flex items-center gap-1\">\n              <div className=\"w-4 h-4 rounded-sm bg-green-500 opacity-40\"></div>\n              <div className=\"w-4 h-4 rounded-sm bg-green-500 opacity-80\"></div>\n            </div>\n            <span className=\"text-xs text-muted-foreground\">Positive Impact</span>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SensitivityHeatmap;"],"names":["cn","inputs","twMerge","clsx","LazyLoader","children","fallback","componentName","threshold","rootMargin","preloadDelay","priority","onLoad","onError","performanceTracking","isVisible","setIsVisible","useState","isLoaded","setIsLoaded","loadError","setLoadError","preloadTimer","setPreloadTimer","containerRef","useRef","observerRef","loadStartTime","useEffect","current","options","IntersectionObserver","entries","forEach","entry","isIntersecting","performance","now","unobserve","target","observe","disconnect","clearTimeout","timer","setTimeout","loadTime","trackFinancialComponentPerformance","lazy","timestamp","Date","defaultFallback","className","jsxs","jsx","errorFallback","viewBox","fill","fillRule","d","clipRule","message","onClick","ref","Suspense","ErrorBoundary","error","React","Component","constructor","props","super","this","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","componentDidMount","render","ChartLoadingFallback","title","height","style","withLazyChart","ChartComponent","LazyChartComponent","forwardRef","chartProps","elementRef","useFinancialAccessibility","el","displayName","MetricCard","value","change","format","prefix","suffix","TrendIcon","TrendingUp","TrendingDown","Minus","Card","CardContent","Math","abs","toFixed","val","toLocaleString","data","formatValue","processedData","reduce","acc","item","index","prevTotal","cumulative","push","start","isPositive","isTotal","type","CustomBar","payload","x","y","width","barColor","CustomTooltip","active","label","length","CardHeader","CardTitle","ResponsiveContainer","BarChart","margin","top","right","left","bottom","XAxis","dataKey","axisLine","tickLine","tick","fontSize","angle","textAnchor","YAxis","tickFormatter","ReferenceLine","stroke","strokeWidth","Bar","shape","radius","activeIndex","setActiveIndex","colors","total","sum","map","percentage","color","name","PieChart","Pie","cx","cy","innerRadius","outerRadius","paddingAngle","onMouseEnter","_","onMouseLeave","Cell","filter","transform","transformOrigin","backgroundColor","showGrowthRate","growth","prevValue","currentValue","firstValue","lastValue","overallGrowth","isPositiveTrend","CustomDot","Dot","r","LineChart","Line","dot","activeDot","xAxisLabels","yAxisLabels","formatCell","hoveredCell","setHoveredCell","allValues","flat","minValue","min","range","max","xLabel","yLabel","clientX","clientY","row","yIndex","xIndex","intensity","getColorIntensity","getCellColor","e","metrics","columns","gridClasses","groupedMetrics","groups","metric","category","hasCategories","Object","keys","default","categoryMetrics","highlight","some","m","isSummary"],"mappings":"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"}