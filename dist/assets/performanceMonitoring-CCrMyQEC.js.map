{"version":3,"file":"performanceMonitoring-CCrMyQEC.js","sources":["../../src/utils/performanceMonitoring.js"],"sourcesContent":["// Real User Monitoring, Web Vitals Tracking, and Sentry Performance Integration\n// Note: Sentry is dynamically imported to avoid bundle bloat\n\n// Web Vitals metrics tracking\nconst webVitalsData = {\n  CLS: null,\n  FID: null,\n  FCP: null,\n  LCP: null,\n  TTFB: null,\n  INP: null\n};\n\n// Performance observer for tracking metrics\nconst _performanceEntries = [];\nlet _performanceObserver;\n\n// Initialize performance monitoring\nexport function initializePerformanceMonitoring() {\n  // Initialize Web Vitals tracking\n  initializeWebVitals();\n\n  // Initialize custom performance tracking\n  initializeCustomMetrics();\n\n  // Initialize navigation timing\n  trackNavigationTiming();\n\n  // Initialize resource timing\n  trackResourceTiming();\n\n  // Initialize user interactions\n  trackUserInteractions();\n\n  console.log('Performance monitoring initialized');\n}\n\n// Web Vitals implementation\nfunction initializeWebVitals() {\n  // Cumulative Layout Shift (CLS)\n  let clsValue = 0;\n  const clsEntries = [];\n\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (!entry.hadRecentInput) {\n        clsValue += entry.value;\n        clsEntries.push(entry);\n      }\n    }\n    webVitalsData.CLS = clsValue;\n    reportWebVital('CLS', clsValue, clsEntries);\n  }).observe({ type: 'layout-shift', buffered: true });\n\n  // First Input Delay (FID) / Interaction to Next Paint (INP)\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (entry.name === 'first-input-delay') {\n        webVitalsData.FID = entry.processingStart - entry.startTime;\n        reportWebVital('FID', webVitalsData.FID, [entry]);\n      }\n\n      // Track INP for better user interaction measurement\n      if (entry.interactionId) {\n        const duration = entry.processingEnd - entry.startTime;\n        if (!webVitalsData.INP || duration > webVitalsData.INP) {\n          webVitalsData.INP = duration;\n          reportWebVital('INP', duration, [entry]);\n        }\n      }\n    }\n  }).observe({ type: 'event', buffered: true });\n\n  // First Contentful Paint (FCP)\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (entry.name === 'first-contentful-paint') {\n        webVitalsData.FCP = entry.startTime;\n        reportWebVital('FCP', entry.startTime, [entry]);\n      }\n    }\n  }).observe({ type: 'paint', buffered: true });\n\n  // Largest Contentful Paint (LCP)\n  new PerformanceObserver((entryList) => {\n    const entries = entryList.getEntries();\n    const lastEntry = entries[entries.length - 1];\n    webVitalsData.LCP = lastEntry.startTime;\n    reportWebVital('LCP', lastEntry.startTime, [lastEntry]);\n  }).observe({ type: 'largest-contentful-paint', buffered: true });\n\n  // Time to First Byte (TTFB)\n  const navigationEntry = performance.getEntriesByType('navigation')[0];\n  if (navigationEntry) {\n    webVitalsData.TTFB = navigationEntry.responseStart - navigationEntry.requestStart;\n    reportWebVital('TTFB', webVitalsData.TTFB, [navigationEntry]);\n  }\n}\n\n// Custom metrics for financial application\nfunction initializeCustomMetrics() {\n  // Track when critical financial components load\n  const criticalComponents = [\n    'financial-spreadsheet',\n    'dcf-calculator',\n    'chart-rendering',\n    'market-data-fetch'\n  ];\n\n  criticalComponents.forEach(component => {\n    performance.mark(`${component}-start`);\n  });\n\n  // Track component rendering times\n  window.trackComponentRender = (componentName, renderTime) => {\n    performance.mark(`${componentName}-end`);\n    performance.measure(\n      `${componentName}-render`,\n      `${componentName}-start`,\n      `${componentName}-end`\n    );\n\n    reportCustomMetric('component-render', {\n      component: componentName,\n      renderTime,\n      timestamp: Date.now()\n    });\n  };\n\n  // Track financial calculation performance\n  window.trackCalculationPerformance = (calculationType, duration, complexity) => {\n    reportCustomMetric('financial-calculation', {\n      type: calculationType,\n      duration,\n      complexity,\n      timestamp: Date.now()\n    });\n  };\n}\n\n// Navigation timing tracking\nfunction trackNavigationTiming() {\n  window.addEventListener('load', () => {\n    setTimeout(() => {\n      const navigation = performance.getEntriesByType('navigation')[0];\n      if (navigation) {\n        const timings = {\n          dns: navigation.domainLookupEnd - navigation.domainLookupStart,\n          tcp: navigation.connectEnd - navigation.connectStart,\n          ssl: navigation.secureConnectionStart > 0 ? navigation.connectEnd - navigation.secureConnectionStart : 0,\n          ttfb: navigation.responseStart - navigation.requestStart,\n          download: navigation.responseEnd - navigation.responseStart,\n          domProcessing: navigation.domComplete - navigation.domLoading,\n          totalLoadTime: navigation.loadEventEnd - navigation.fetchStart\n        };\n\n        reportNavigationTiming(timings);\n      }\n    }, 0);\n  });\n}\n\n// Resource timing tracking\nfunction trackResourceTiming() {\n  new PerformanceObserver((list) => {\n    for (const entry of list.getEntries()) {\n      // Track important resource types\n      if (entry.initiatorType === 'script' ||\n          entry.initiatorType === 'css' ||\n          entry.initiatorType === 'img' ||\n          entry.initiatorType === 'fetch') {\n\n        const resourceData = {\n          name: entry.name,\n          type: entry.initiatorType,\n          size: entry.transferSize || entry.encodedBodySize,\n          duration: entry.duration,\n          cached: entry.transferSize === 0 && entry.encodedBodySize > 0,\n          timestamp: Date.now()\n        };\n\n        // Only report large resources or slow loads\n        if (resourceData.size > 50000 || resourceData.duration > 1000) {\n          reportResourceTiming(resourceData);\n        }\n      }\n    }\n  }).observe({ entryTypes: ['resource'] });\n}\n\n// User interaction tracking\nfunction trackUserInteractions() {\n  let interactionCount = 0;\n  let totalInteractionTime = 0;\n\n  const interactionEvents = ['click', 'keydown', 'touchstart'];\n\n  interactionEvents.forEach(eventType => {\n    document.addEventListener(eventType, (event) => {\n      const startTime = performance.now();\n\n      // Track interaction delay\n      requestAnimationFrame(() => {\n        const endTime = performance.now();\n        const interactionTime = endTime - startTime;\n\n        interactionCount++;\n        totalInteractionTime += interactionTime;\n\n        // Report slow interactions\n        if (interactionTime > 100) {\n          reportSlowInteraction({\n            type: eventType,\n            target: event.target.tagName,\n            duration: interactionTime,\n            timestamp: Date.now()\n          });\n        }\n      });\n    }, { passive: true });\n  });\n\n  // Report interaction summary periodically\n  setInterval(() => {\n    if (interactionCount > 0) {\n      reportInteractionSummary({\n        count: interactionCount,\n        averageTime: totalInteractionTime / interactionCount,\n        timestamp: Date.now()\n      });\n\n      // Reset counters\n      interactionCount = 0;\n      totalInteractionTime = 0;\n    }\n  }, 30000); // Every 30 seconds\n}\n\n// Reporting functions\nfunction reportWebVital(name, value, entries) {\n  const data = {\n    metric: name,\n    value: Math.round(value),\n    entries: entries.map(entry => ({\n      startTime: entry.startTime,\n      duration: entry.duration || 0\n    })),\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    connection: getConnectionInfo()\n  };\n\n  console.log(`Web Vital - ${name}:`, value);\n\n  // Send to Sentry Performance if available\n  if (window.Sentry) {\n    window.Sentry.addBreadcrumb({\n      category: 'performance',\n      message: `Web Vital ${name}: ${Math.round(value)}`,\n      level: value > getPerformanceThreshold(name) ? 'warning' : 'info',\n      data: { metric: name, value: Math.round(value) }\n    });\n\n    // Report as Sentry measurement\n    window.Sentry.setMeasurement(name, Math.round(value), name === 'CLS' ? '' : 'millisecond');\n  }\n\n  sendToAnalytics('web-vital', data);\n}\n\nfunction reportCustomMetric(type, data) {\n  const metricData = {\n    type,\n    ...data,\n    url: window.location.href,\n    userAgent: navigator.userAgent\n  };\n\n  console.log(`Custom Metric - ${type}:`, data);\n  sendToAnalytics('custom-metric', metricData);\n}\n\nfunction reportNavigationTiming(timings) {\n  const data = {\n    ...timings,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    connection: getConnectionInfo()\n  };\n\n  console.log('Navigation Timing:', timings);\n  sendToAnalytics('navigation-timing', data);\n}\n\nfunction reportResourceTiming(resourceData) {\n  console.log('Resource Timing:', resourceData);\n  sendToAnalytics('resource-timing', resourceData);\n}\n\nfunction reportSlowInteraction(interactionData) {\n  console.log('Slow Interaction:', interactionData);\n  sendToAnalytics('slow-interaction', interactionData);\n}\n\nfunction reportInteractionSummary(summaryData) {\n  console.log('Interaction Summary:', summaryData);\n  sendToAnalytics('interaction-summary', summaryData);\n}\n\n// Error tracking\nexport function trackError(error, errorInfo) {\n  const errorData = {\n    message: error.message,\n    stack: error.stack,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    componentStack: errorInfo?.componentStack,\n    errorBoundary: errorInfo?.errorBoundary\n  };\n\n  console.error('Application Error:', errorData);\n  sendToAnalytics('error', errorData);\n}\n\n// Performance budget monitoring\nexport function checkPerformanceBudgets() {\n  const budgets = {\n    LCP: 2500,  // 2.5s\n    FID: 100,   // 100ms\n    CLS: 0.1,   // 0.1\n    FCP: 1800,  // 1.8s\n    TTFB: 800   // 800ms\n  };\n\n  const violations = [];\n\n  Object.entries(budgets).forEach(([metric, budget]) => {\n    const value = webVitalsData[metric];\n    if (value !== null && value > budget) {\n      violations.push({\n        metric,\n        value,\n        budget,\n        overBy: value - budget\n      });\n    }\n  });\n\n  if (violations.length > 0) {\n    console.warn('Performance Budget Violations:', violations);\n    sendToAnalytics('budget-violations', {\n      violations,\n      timestamp: Date.now(),\n      url: window.location.href\n    });\n  }\n\n  return violations;\n}\n\n// Utility functions\nfunction getPerformanceThreshold(metricName) {\n  const thresholds = {\n    LCP: 2500,  // 2.5s\n    FID: 100,   // 100ms\n    CLS: 0.1,   // 0.1\n    FCP: 1800,  // 1.8s\n    TTFB: 800,  // 800ms\n    INP: 200    // 200ms\n  };\n  return thresholds[metricName] || 1000;\n}\n\nfunction getConnectionInfo() {\n  if ('connection' in navigator) {\n    return {\n      effectiveType: navigator.connection.effectiveType,\n      downlink: navigator.connection.downlink,\n      rtt: navigator.connection.rtt\n    };\n  }\n  return null;\n}\n\nfunction sendToAnalytics(type, data) {\n  // In production, send to your analytics service\n  // For now, we'll store locally and batch send\n\n  try {\n    const analyticsData = {\n      type,\n      data,\n      sessionId: getSessionId(),\n      userId: getUserId()\n    };\n\n    // Store in localStorage for batching\n    const existingData = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n    existingData.push(analyticsData);\n\n    // Keep only last 100 entries to prevent storage overflow\n    if (existingData.length > 100) {\n      existingData.splice(0, existingData.length - 100);\n    }\n\n    localStorage.setItem('analytics-queue', JSON.stringify(existingData));\n\n    // Send batch if queue is full or on interval\n    if (existingData.length >= 10) {\n      sendAnalyticsBatch();\n    }\n\n  } catch (error) {\n    console.error('Failed to queue analytics data:', error);\n  }\n}\n\nfunction sendAnalyticsBatch() {\n  try {\n    const queuedData = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n    if (queuedData.length === 0) return;\n\n    // In production, replace with your analytics endpoint\n    console.log('Sending analytics batch:', queuedData.length, 'items');\n\n    // Simulate sending to analytics service\n    if (window.gtag) {\n      queuedData.forEach(item => {\n        window.gtag('event', item.type, {\n          custom_parameter: JSON.stringify(item.data)\n        });\n      });\n    }\n\n    // Clear queue after successful send\n    localStorage.removeItem('analytics-queue');\n\n  } catch (error) {\n    console.error('Failed to send analytics batch:', error);\n  }\n}\n\n// Session and user management\nfunction getSessionId() {\n  let sessionId = sessionStorage.getItem('session-id');\n  if (!sessionId) {\n    sessionId = Date.now() + '-' + Math.random().toString(36).substr(2, 9);\n    sessionStorage.setItem('session-id', sessionId);\n  }\n  return sessionId;\n}\n\nfunction getUserId() {\n  let userId = localStorage.getItem('user-id');\n  if (!userId) {\n    userId = 'anonymous-' + Date.now() + '-' + Math.random().toString(36).substr(2, 9);\n    localStorage.setItem('user-id', userId);\n  }\n  return userId;\n}\n\n// Initialize batch sending on interval\nsetInterval(sendAnalyticsBatch, 60000); // Every minute\n\n// Send batch before page unload\nwindow.addEventListener('beforeunload', () => {\n  sendAnalyticsBatch();\n});\n\n// Accessibility metrics reporting\nexport function reportPerformanceMetric(type, data) {\n  const metricData = {\n    type,\n    ...data,\n    url: window.location.href,\n    userAgent: navigator.userAgent,\n    timestamp: Date.now()\n  };\n\n  console.log(`Performance Metric - ${type}:`, data);\n  sendToAnalytics('performance-metric', metricData);\n}\n\n// Track accessibility test results\nexport function trackAccessibilityResults(results) {\n  const accessibilityData = {\n    violations: results.violations?.length || 0,\n    passes: results.passes?.length || 0,\n    incomplete: results.incomplete?.length || 0,\n    score: results.score || 0,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent\n  };\n\n  console.log('Accessibility Results:', accessibilityData);\n  sendToAnalytics('accessibility-results', accessibilityData);\n\n  // Store accessibility history\n  try {\n    const history = JSON.parse(localStorage.getItem('accessibility-history') || '[]');\n    history.push(accessibilityData);\n\n    // Keep only last 50 entries\n    if (history.length > 50) {\n      history.splice(0, history.length - 50);\n    }\n\n    localStorage.setItem('accessibility-history', JSON.stringify(history));\n  } catch (error) {\n    console.error('Failed to store accessibility history:', error);\n  }\n}\n\n// Track financial component performance\nexport function trackFinancialComponentPerformance(componentName, metrics) {\n  const performanceData = {\n    component: componentName,\n    ...metrics,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent\n  };\n\n  console.log(`Financial Component Performance - ${componentName}:`, metrics);\n  sendToAnalytics('financial-component-performance', performanceData);\n}\n\n// Get comprehensive performance dashboard data\nexport function getPerformanceDashboardData() {\n  const accessibilityHistory = JSON.parse(localStorage.getItem('accessibility-history') || '[]');\n  const analyticsQueue = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n\n  // Calculate trends\n  const recentAccessibility = accessibilityHistory.slice(-10);\n  const avgScore = recentAccessibility.reduce((sum, entry) => sum + entry.score, 0) / recentAccessibility.length || 0;\n  const avgViolations = recentAccessibility.reduce((sum, entry) => sum + entry.violations, 0) / recentAccessibility.length || 0;\n\n  // Get performance metrics from queue\n  const performanceMetrics = analyticsQueue\n    .filter(item => item.type === 'performance-metric')\n    .slice(-20)\n    .map(item => item.data);\n\n  const webVitalMetrics = analyticsQueue\n    .filter(item => item.type === 'web-vital')\n    .slice(-10)\n    .map(item => item.data);\n\n  return {\n    webVitals: webVitalsData,\n    budgetViolations: checkPerformanceBudgets(),\n    accessibility: {\n      currentScore: recentAccessibility[recentAccessibility.length - 1]?.score || 0,\n      averageScore: Math.round(avgScore),\n      averageViolations: Math.round(avgViolations),\n      history: recentAccessibility,\n      trends: {\n        scoreImproving: recentAccessibility.length >= 2 &&\n          recentAccessibility[recentAccessibility.length - 1].score >\n          recentAccessibility[recentAccessibility.length - 2].score\n      }\n    },\n    performance: {\n      recentMetrics: performanceMetrics,\n      webVitalHistory: webVitalMetrics\n    },\n    timestamp: Date.now()\n  };\n}\n\n// Export current performance data\nexport function getPerformanceData() {\n  return {\n    webVitals: webVitalsData,\n    budgetViolations: checkPerformanceBudgets(),\n    timestamp: Date.now()\n  };\n}\n"],"names":["webVitalsData","CLS","FID","FCP","LCP","TTFB","INP","initializePerformanceMonitoring","clsValue","clsEntries","PerformanceObserver","entryList","entry","getEntries","hadRecentInput","value","push","reportWebVital","observe","type","buffered","name","processingStart","startTime","interactionId","duration","processingEnd","entries","lastEntry","length","navigationEntry","performance","getEntriesByType","responseStart","requestStart","initializeWebVitals","forEach","component","mark","window","trackComponentRender","componentName","renderTime","measure","reportCustomMetric","timestamp","Date","now","trackCalculationPerformance","calculationType","complexity","addEventListener","setTimeout","navigation","timings","dns","domainLookupEnd","domainLookupStart","tcp","connectEnd","connectStart","ssl","secureConnectionStart","ttfb","download","responseEnd","domProcessing","domComplete","domLoading","totalLoadTime","loadEventEnd","fetchStart","sendToAnalytics","url","location","href","userAgent","navigator","connection","getConnectionInfo","list","initiatorType","resourceData","size","transferSize","encodedBodySize","cached","reportResourceTiming","entryTypes","interactionCount","totalInteractionTime","eventType","document","event","requestAnimationFrame","interactionTime","target","tagName","passive","setInterval","count","averageTime","trackUserInteractions","data","metric","Math","round","map","metricName","Sentry","addBreadcrumb","category","message","level","setMeasurement","trackError","error","errorInfo","stack","componentStack","errorBoundary","checkPerformanceBudgets","violations","Object","budget","overBy","effectiveType","downlink","rtt","analyticsData","sessionId","getSessionId","userId","getUserId","existingData","JSON","parse","localStorage","getItem","splice","setItem","stringify","sendAnalyticsBatch","queuedData","gtag","item","custom_parameter","removeItem","sessionStorage","random","toString","substr","reportPerformanceMetric","trackAccessibilityResults","results","accessibilityData","passes","incomplete","score","history","trackFinancialComponentPerformance","metrics","getPerformanceDashboardData","accessibilityHistory","analyticsQueue","recentAccessibility","slice","avgScore","reduce","sum","avgViolations","performanceMetrics","filter","webVitalMetrics","webVitals","budgetViolations","accessibility","currentScore","averageScore","averageViolations","trends","scoreImproving","recentMetrics","webVitalHistory","getPerformanceData"],"mappings":"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"}