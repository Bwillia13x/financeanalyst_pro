{"version":3,"file":"valuation-tools-CH5aoDQV.js","sources":["../../src/components/SEO/SEOHead.jsx","../../src/services/realTimeDataService.js","../../src/utils/dcfCalculations.js","../../src/components/AnalysisCanvas/AnalysisModule.jsx","../../src/components/AnalysisCanvas/CompanyOverview.jsx","../../src/components/AnalysisCanvas/CompanySelector.jsx","../../src/components/AnalysisCanvas/AnalysisCanvas.jsx","../../src/components/ValuationTool/DCFInputs.jsx","../../src/components/ValuationTool/EnhancedDCFTool.jsx","../../src/services/reactiveCalculationEngine.js","../../src/components/ValuationTool/DynamicTimePeriodControl.jsx","../../src/components/ValuationTool/LivingModelDCF.jsx","../../src/components/ValuationTool/ValuationTool.jsx","../../src/components/ValuationTool/ValuationToolDocs.jsx"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport { Helmet } from 'react-helmet-async';\n\nconst SEOHead = ({\n  title = 'Valor-IVX',\n  description = 'Professional financial modeling and valuation platform for analysts, investors, and finance professionals.',\n  canonical,\n  image = '/assets/images/og-image.svg',\n  type = 'website',\n  keywords = 'financial modeling, DCF analysis, valuation tools, LBO modeling, scenario analysis, financial analytics',\n  author = 'Valor IVX',\n  twitterHandle = '@valorivx',\n  publishedTime,\n  modifiedTime\n}) => {\n  const siteUrl = 'https://valor-ivx.com';\n  const fullCanonical = canonical ? `${siteUrl}${canonical}` : siteUrl;\n  const fullImage = image.startsWith('http') ? image : `${siteUrl}${image}`;\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keywords\" content={keywords} />\n      <meta name=\"author\" content={author} />\n\n      {/* Canonical URL */}\n      <link rel=\"canonical\" href={fullCanonical} />\n\n      {/* Open Graph */}\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:type\" content={type} />\n      <meta property=\"og:url\" content={fullCanonical} />\n      <meta property=\"og:image\" content={fullImage} />\n      <meta property=\"og:image:width\" content=\"1200\" />\n      <meta property=\"og:image:height\" content=\"630\" />\n      <meta property=\"og:site_name\" content=\"Valor-IVX\" />\n      <meta property=\"og:locale\" content=\"en_US\" />\n\n      {/* Twitter Card */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content={twitterHandle} />\n      <meta name=\"twitter:creator\" content={twitterHandle} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={fullImage} />\n\n      {/* Article specific meta tags */}\n      {publishedTime && <meta property=\"article:published_time\" content={publishedTime} />}\n      {modifiedTime && <meta property=\"article:modified_time\" content={modifiedTime} />}\n\n      {/* Additional SEO meta tags */}\n      <meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" />\n      <meta name=\"googlebot\" content=\"index, follow\" />\n\n      {/* Language and geo targeting */}\n      <meta name=\"language\" content=\"en-US\" />\n      <meta name=\"geo.region\" content=\"US\" />\n\n      {/* Structured Data - JSON-LD */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify({\n          '@context': 'https://schema.org',\n          '@type': 'WebApplication',\n          'name': 'Valor-IVX',\n          description,\n          'url': siteUrl,\n          'author': {\n            '@type': 'Organization',\n            'name': author\n          },\n          'applicationCategory': 'FinanceApplication',\n          'operatingSystem': 'Web',\n          'offers': {\n            '@type': 'Offer',\n            'category': 'Financial Software'\n          }\n        })}\n      </script>\n    </Helmet>\n  );\n};\n\nexport default SEOHead;\n","/**\n * Real-Time Data Service\n * Provides live market data feeds for the Living Model system\n * Enhanced with comprehensive market data and commodity feeds\n */\n\nclass RealTimeDataService {\n  constructor() {\n    this.subscribers = new Map();\n    this.connections = new Map();\n    this.dataCache = new Map();\n    this.updateInterval = 500; // 500ms updates for smoother experience\n    this.isActive = false;\n    this.marketDataTypes = new Set([\n      'stock_price', 'interest_rates', 'fx_rates', 'commodity_prices',\n      'volatility_index', 'bond_yields', 'economic_indicators'\n    ]);\n  }\n\n  /**\n   * Subscribe to real-time updates for a specific data type\n   */\n  subscribe(dataType, symbol, callback) {\n    const key = `${dataType}_${symbol}`;\n\n    if (!this.subscribers.has(key)) {\n      this.subscribers.set(key, new Set());\n    }\n\n    this.subscribers.get(key).add(callback);\n\n    // Start the data feed if not already active\n    if (!this.connections.has(key)) {\n      this.startDataFeed(dataType, symbol);\n    }\n\n    // Return current cached data if available\n    if (this.dataCache.has(key)) {\n      callback(this.dataCache.get(key));\n    }\n\n    // Return unsubscribe function\n    return () => {\n      this.unsubscribe(dataType, symbol, callback);\n    };\n  }\n\n  /**\n   * Unsubscribe from real-time updates\n   */\n  unsubscribe(dataType, symbol, callback) {\n    const key = `${dataType}_${symbol}`;\n    const subscribers = this.subscribers.get(key);\n\n    if (subscribers) {\n      subscribers.delete(callback);\n\n      // Stop data feed if no more subscribers\n      if (subscribers.size === 0) {\n        this.stopDataFeed(key);\n      }\n    }\n  }\n\n  /**\n   * Start a data feed for specific data type and symbol\n   */\n  startDataFeed(dataType, symbol) {\n    const key = `${dataType}_${symbol}`;\n\n    switch (dataType) {\n      case 'stock_price':\n        this.startStockPriceFeed(key, symbol);\n        break;\n      case 'interest_rates':\n        this.startInterestRateFeed(key, symbol);\n        break;\n      case 'fx_rates':\n        this.startFXRateFeed(key, symbol);\n        break;\n      case 'commodity_prices':\n        this.startCommodityFeed(key, symbol);\n        break;\n      case 'bond_yields':\n        this.startBondYieldFeed(key, symbol);\n        break;\n      case 'volatility_index':\n        this.startVolatilityFeed(key, symbol);\n        break;\n      case 'economic_indicators':\n        this.startEconomicIndicatorFeed(key, symbol);\n        break;\n      default:\n        console.warn(`Unknown data type: ${dataType}`);\n    }\n  }\n\n  /**\n   * Stock Price Feed (simulated real-time data)\n   */\n  startStockPriceFeed(key, symbol) {\n    const basePrice = this.getBasePrice(symbol);\n    let lastPrice = basePrice;\n\n    const interval = setInterval(() => {\n      // Simulate realistic price movement\n      const volatility = 0.02;\n      const drift = 0.0001;\n      const dt = this.updateInterval / (1000 * 60 * 60 * 24);\n\n      const randomShock = (Math.random() - 0.5) * 2;\n      const priceChange = lastPrice * (drift * dt + volatility * Math.sqrt(dt) * randomShock);\n\n      lastPrice = Math.max(0.01, lastPrice + priceChange);\n\n      const data = {\n        symbol,\n        price: lastPrice,\n        change: lastPrice - basePrice,\n        changePercent: ((lastPrice - basePrice) / basePrice) * 100,\n        timestamp: new Date().toISOString(),\n        marketOpen: this.isMarketOpen()\n      };\n\n      this.updateSubscribers(key, data);\n    }, this.updateInterval);\n\n    this.connections.set(key, interval);\n  }\n\n  /**\n   * Interest Rate Feed\n   */\n  startInterestRateFeed(key, symbol) {\n    let baseRate = this.getBaseInterestRate(symbol);\n\n    const interval = setInterval(() => {\n      const change = (Math.random() - 0.5) * 0.01;\n      baseRate = Math.max(0, baseRate + change);\n\n      const data = {\n        symbol,\n        rate: baseRate,\n        timestamp: new Date().toISOString()\n      };\n\n      this.updateSubscribers(key, data);\n    }, this.updateInterval * 5);\n\n    this.connections.set(key, interval);\n  }\n\n  updateSubscribers(key, data) {\n    this.dataCache.set(key, data);\n    const subscribers = this.subscribers.get(key);\n\n    if (subscribers) {\n      subscribers.forEach(callback => {\n        try {\n          callback(data);\n        } catch (error) {\n          console.error('Error in subscriber callback:', error);\n        }\n      });\n    }\n  }\n\n  stopDataFeed(key) {\n    const connection = this.connections.get(key);\n    if (connection) {\n      clearInterval(connection);\n      this.connections.delete(key);\n      this.dataCache.delete(key);\n    }\n  }\n\n  getBasePrice(symbol) {\n    const basePrices = {\n      'AAPL': 175.84,\n      'MSFT': 378.85,\n      'GOOGL': 142.56,\n      'TSLA': 248.42,\n      'AMZN': 151.94\n    };\n    return basePrices[symbol] || 100;\n  }\n\n  getBaseInterestRate(symbol) {\n    const rates = {\n      'USD_3M': 5.25,\n      'USD_10Y': 4.15,\n      'EUR_3M': 3.85,\n      'EUR_10Y': 2.45\n    };\n    return rates[symbol] || 4.0;\n  }\n\n  isMarketOpen() {\n    const now = new Date();\n    const day = now.getDay();\n    const hour = now.getHours();\n    return day >= 1 && day <= 5 && hour >= 9 && hour < 16;\n  }\n\n  /**\n   * Foreign Exchange Rate Feed\n   */\n  startFXRateFeed(key, symbol) {\n    let baseRate = this.getBaseFXRate(symbol);\n\n    const interval = setInterval(() => {\n      const volatility = 0.005;\n      const change = (Math.random() - 0.5) * 2 * volatility;\n      baseRate = Math.max(0.01, baseRate * (1 + change));\n\n      const data = {\n        symbol,\n        rate: baseRate,\n        change: change * 100,\n        timestamp: new Date().toISOString()\n      };\n\n      this.updateSubscribers(key, data);\n    }, this.updateInterval);\n\n    this.connections.set(key, interval);\n  }\n\n  /**\n   * Commodity Price Feed\n   */\n  startCommodityFeed(key, symbol) {\n    let basePrice = this.getBaseCommodityPrice(symbol);\n\n    const interval = setInterval(() => {\n      const volatility = symbol === 'OIL' ? 0.03 : 0.02;\n      const change = (Math.random() - 0.5) * 2 * volatility;\n      basePrice = Math.max(1, basePrice * (1 + change));\n\n      const data = {\n        symbol,\n        price: basePrice,\n        change: change * 100,\n        timestamp: new Date().toISOString()\n      };\n\n      this.updateSubscribers(key, data);\n    }, this.updateInterval * 2);\n\n    this.connections.set(key, interval);\n  }\n\n  /**\n   * Bond Yield Feed\n   */\n  startBondYieldFeed(key, symbol) {\n    let baseYield = this.getBaseBondYield(symbol);\n\n    const interval = setInterval(() => {\n      const change = (Math.random() - 0.5) * 0.02;\n      baseYield = Math.max(0, baseYield + change);\n\n      const data = {\n        symbol,\n        yield: baseYield,\n        timestamp: new Date().toISOString()\n      };\n\n      this.updateSubscribers(key, data);\n    }, this.updateInterval * 3);\n\n    this.connections.set(key, interval);\n  }\n\n  /**\n   * Volatility Index Feed\n   */\n  startVolatilityFeed(key, symbol) {\n    let baseVol = this.getBaseVolatility(symbol);\n\n    const interval = setInterval(() => {\n      const change = (Math.random() - 0.5) * 2;\n      baseVol = Math.max(5, Math.min(80, baseVol + change));\n\n      const data = {\n        symbol,\n        volatility: baseVol,\n        timestamp: new Date().toISOString()\n      };\n\n      this.updateSubscribers(key, data);\n    }, this.updateInterval * 4);\n\n    this.connections.set(key, interval);\n  }\n\n  /**\n   * Economic Indicator Feed\n   */\n  startEconomicIndicatorFeed(key, symbol) {\n    let baseValue = this.getBaseEconomicIndicator(symbol);\n\n    const interval = setInterval(() => {\n      const change = (Math.random() - 0.5) * 0.1;\n      baseValue = Math.max(0, baseValue + change);\n\n      const data = {\n        symbol,\n        value: baseValue,\n        timestamp: new Date().toISOString()\n      };\n\n      this.updateSubscribers(key, data);\n    }, this.updateInterval * 10);\n\n    this.connections.set(key, interval);\n  }\n\n  getBaseFXRate(symbol) {\n    const rates = {\n      'EURUSD': 1.0850,\n      'GBPUSD': 1.2650,\n      'USDJPY': 149.50,\n      'USDCHF': 0.8750,\n      'AUDUSD': 0.6580\n    };\n    return rates[symbol] || 1.0;\n  }\n\n  getBaseCommodityPrice(symbol) {\n    const prices = {\n      'OIL': 85.50,\n      'GOLD': 2050.00,\n      'SILVER': 24.80,\n      'COPPER': 8.20,\n      'NATGAS': 3.15\n    };\n    return prices[symbol] || 50.0;\n  }\n\n  getBaseBondYield(symbol) {\n    const yields = {\n      'US10Y': 4.25,\n      'US2Y': 4.85,\n      'DE10Y': 2.35,\n      'GB10Y': 4.15,\n      'JP10Y': 0.75\n    };\n    return yields[symbol] || 3.0;\n  }\n\n  getBaseVolatility(symbol) {\n    const volatilities = {\n      'VIX': 18.5,\n      'VVIX': 95.2,\n      'MOVE': 105.8\n    };\n    return volatilities[symbol] || 20.0;\n  }\n\n  getBaseEconomicIndicator(symbol) {\n    const indicators = {\n      'GDP_GROWTH': 2.4,\n      'INFLATION': 3.2,\n      'UNEMPLOYMENT': 3.8,\n      'CONSUMER_CONF': 102.5\n    };\n    return indicators[symbol] || 100.0;\n  }\n\n  getCurrentData(dataType, symbol) {\n    const key = `${dataType}_${symbol}`;\n    return this.dataCache.get(key);\n  }\n\n  /**\n   * Get all available data types\n   */\n  getAvailableDataTypes() {\n    return Array.from(this.marketDataTypes);\n  }\n\n  /**\n   * Subscribe to multiple data feeds at once\n   */\n  subscribeMultiple(subscriptions) {\n    const unsubscribeFunctions = [];\n\n    subscriptions.forEach(({ dataType, symbol, callback }) => {\n      const unsubscribe = this.subscribe(dataType, symbol, callback);\n      unsubscribeFunctions.push(unsubscribe);\n    });\n\n    return () => {\n      unsubscribeFunctions.forEach(fn => fn());\n    };\n  }\n}\n\nconst realTimeDataService = new RealTimeDataService();\nexport default realTimeDataService;\n","// Enhanced DCF Calculation Engine for Professional Financial Analysis\n// Supports year-by-year projections and proper Unlevered Free Cash Flow calculation\n\nexport const calculateEnhancedDCF = (inputs) => {\n  if (!inputs || !inputs.currentRevenue) {\n    return null;\n  }\n\n  const {\n    currentRevenue,\n    projectionYears = 5,\n    terminalGrowthRate = 0.025,\n    discountRate = 0.12,\n    yearlyData = {},\n    balanceSheet = {}\n  } = inputs;\n\n  const results = {\n    years: [],\n    revenues: [],\n    ebitda: [],\n    ebit: [],\n    nopat: [],\n    freeCashFlows: [],\n    presentValues: [],\n    cumulativePV: 0,\n    terminalValue: 0,\n    presentValueTerminal: 0,\n    enterpriseValue: 0,\n    equityValue: 0,\n    impliedSharePrice: 0,\n    netDebt: 0,\n    assumptions: {\n      discountRate: discountRate * 100,\n      terminalGrowthRate: terminalGrowthRate * 100,\n      currentRevenue,\n      projectionYears\n    },\n    projectionTable: []\n  };\n\n  let previousRevenue = currentRevenue;\n\n  // Calculate year-by-year projections\n  for (let year = 1; year <= projectionYears; year++) {\n    const yearData = yearlyData[year] || {};\n\n    // Use year-specific inputs or defaults\n    const revenueGrowth = (yearData.revenueGrowth || 10) / 100;\n    const ebitdaMargin = (yearData.ebitdaMargin || 20) / 100;\n    const taxRate = (yearData.taxRate || 25) / 100;\n    const capexPercent = (yearData.capexPercent || 3) / 100;\n    const daPercent = (yearData.daPercent || 3) / 100;\n    const workingCapitalChange = (yearData.workingCapitalChange || 2) / 100;\n\n    // Revenue projection\n    const revenue = previousRevenue * (1 + revenueGrowth);\n\n    // EBITDA calculation\n    const ebitda = revenue * ebitdaMargin;\n\n    // Depreciation & Amortization\n    const depreciation = revenue * daPercent;\n\n    // EBIT (Earnings Before Interest and Taxes)\n    const ebit = ebitda - depreciation;\n\n    // Taxes on EBIT\n    const taxes = ebit * taxRate;\n\n    // NOPAT (Net Operating Profit After Tax)\n    const nopat = ebit - taxes;\n\n    // Capital Expenditure\n    const capex = revenue * capexPercent;\n\n    // Change in Net Working Capital\n    const deltaWorkingCapital = revenue * workingCapitalChange;\n\n    // Unlevered Free Cash Flow = NOPAT + D&A - CapEx - ΔWorking Capital\n    const freeCashFlow = nopat + depreciation - capex - deltaWorkingCapital;\n\n    // Present Value of FCF\n    const presentValue = freeCashFlow / Math.pow(1 + discountRate, year);\n\n    // Store results\n    results.years.push(year);\n    results.revenues.push(revenue);\n    results.ebitda.push(ebitda);\n    results.ebit.push(ebit);\n    results.nopat.push(nopat);\n    results.freeCashFlows.push(freeCashFlow);\n    results.presentValues.push(presentValue);\n    results.cumulativePV += presentValue;\n\n    // Detailed projection table entry\n    results.projectionTable.push({\n      year,\n      revenue,\n      revenueGrowth: revenueGrowth * 100,\n      ebitda,\n      ebitdaMargin: ebitdaMargin * 100,\n      depreciation,\n      ebit,\n      taxes,\n      taxRate: taxRate * 100,\n      nopat,\n      capex,\n      deltaWorkingCapital,\n      freeCashFlow,\n      presentValue\n    });\n\n    previousRevenue = revenue;\n  }\n\n  // Terminal Value Calculation\n  if (results.freeCashFlows.length > 0) {\n    const terminalYearFCF = results.freeCashFlows[projectionYears - 1];\n    const terminalFCF = terminalYearFCF * (1 + terminalGrowthRate);\n\n    // Terminal Value = Terminal FCF / (WACC - Terminal Growth Rate)\n    results.terminalValue = terminalFCF / (discountRate - terminalGrowthRate);\n    results.presentValueTerminal = results.terminalValue / Math.pow(1 + discountRate, projectionYears);\n  }\n\n  // Enterprise Value = Sum of PV of FCFs + PV of Terminal Value\n  results.enterpriseValue = results.cumulativePV + results.presentValueTerminal;\n\n  // Calculate Net Debt and Equity Value\n  const cash = balanceSheet.cash || 0;\n  const totalDebt = balanceSheet.totalDebt || 0;\n  results.netDebt = totalDebt - cash;\n\n  // Equity Value = Enterprise Value - Net Debt\n  results.equityValue = results.enterpriseValue - results.netDebt;\n\n  // Implied Share Price\n  const sharesOutstanding = balanceSheet.sharesOutstanding || 1000000;\n  results.impliedSharePrice = results.equityValue / sharesOutstanding;\n\n  return results;\n};\n\n// Simplified DCF for backward compatibility and quick calculations\nexport const calculateSimpleDCF = (inputs) => {\n  if (!inputs || !inputs.currentRevenue) {\n    return null;\n  }\n\n  // Convert simple inputs to enhanced format\n  const enhancedInputs = {\n    currentRevenue: inputs.currentRevenue,\n    projectionYears: inputs.projectionYears || 5,\n    terminalGrowthRate: inputs.terminalGrowthRate || 0.025,\n    discountRate: inputs.discountRate || 0.12,\n    yearlyData: {},\n    balanceSheet: {\n      cash: 0,\n      totalDebt: 0,\n      sharesOutstanding: 1000000\n    }\n  };\n\n  // Create uniform yearly data from simple inputs\n  for (let year = 1; year <= enhancedInputs.projectionYears; year++) {\n    enhancedInputs.yearlyData[year] = {\n      revenueGrowth: (inputs.revenueGrowthRate || 0.1) * 100,\n      ebitdaMargin: (inputs.ebitdaMargin || 0.2) * 100,\n      taxRate: (inputs.taxRate || 0.25) * 100,\n      capexPercent: (inputs.capexPercent || 0.03) * 100,\n      daPercent: 3,\n      workingCapitalChange: (inputs.workingCapitalPercent || 0.02) * 100\n    };\n  }\n\n  return calculateEnhancedDCF(enhancedInputs);\n};\n\n// Legacy DCF function for existing analysis results\nexport const calculateDCF = (data, modelInputs = null) => {\n  if (!data?.statements?.incomeStatement) {\n    return null;\n  }\n\n  // Default DCF parameters if not provided\n  const dcfParams = modelInputs?.dcf || {\n    discountRate: 12, // 12% default WACC\n    terminalGrowthRate: 2.5, // 2.5% terminal growth\n    projectionYears: 5,\n    taxRate: 25, // 25% tax rate\n    sharesOutstanding: 1000 // Default shares outstanding\n  };\n\n  const statements = data.statements;\n  const income = statements.incomeStatement;\n\n  // Get available periods and latest data\n  const periods = Object.keys(income.totalRevenue || {}).sort((a, b) => parseInt(a) - parseInt(b));\n  if (periods.length === 0) return null;\n\n  const latestPeriod = periods[periods.length - 1];\n  const baseRevenue = income.totalRevenue?.[latestPeriod] || 0;\n  const baseOperatingIncome = income.operatingIncome?.[latestPeriod] || 0;\n\n  // Calculate growth rates from historical data\n  let revenueGrowthRate = 5; // Default 5% growth\n  if (periods.length >= 2) {\n    const previousPeriod = periods[periods.length - 2];\n    const currentRevenue = income.totalRevenue?.[latestPeriod] || 0;\n    const previousRevenue = income.totalRevenue?.[previousPeriod] || 0;\n\n    if (previousRevenue > 0) {\n      revenueGrowthRate = ((currentRevenue - previousRevenue) / previousRevenue) * 100;\n      // Cap growth rate between -10% and 25% for reasonable projections\n      revenueGrowthRate = Math.max(-10, Math.min(25, revenueGrowthRate));\n    }\n  }\n\n  // Operating margin calculation\n  const operatingMargin = baseRevenue > 0 ? (baseOperatingIncome / baseRevenue) * 100 : 0;\n\n  const results = {\n    years: [],\n    freeCashFlows: [],\n    presentValues: [],\n    cumulativePV: 0,\n    terminalValue: 0,\n    presentValueTerminal: 0,\n    enterpriseValue: 0,\n    equityValue: 0,\n    impliedSharePrice: 0,\n    impliedValuation: 0,\n    assumptions: {\n      discountRate: dcfParams.discountRate,\n      terminalGrowthRate: dcfParams.terminalGrowthRate,\n      revenueGrowthRate,\n      operatingMargin,\n      taxRate: dcfParams.taxRate\n    }\n  };\n\n  // Project future cash flows\n  for (let year = 1; year <= dcfParams.projectionYears; year++) {\n    // Declining growth rate over projection period\n    const yearGrowthRate = revenueGrowthRate * (1 - (year - 1) * 0.1);\n    const projectedRevenue = baseRevenue * Math.pow(1 + yearGrowthRate / 100, year);\n    const projectedOperatingIncome = projectedRevenue * (operatingMargin / 100);\n\n    // NOPAT (Net Operating Profit After Tax)\n    const nopat = projectedOperatingIncome * (1 - dcfParams.taxRate / 100);\n\n    // Simplified free cash flow (NOPAT - assume capex/working capital changes offset depreciation)\n    const freeCashFlow = nopat;\n\n    // Present value\n    const presentValue = freeCashFlow / Math.pow(1 + dcfParams.discountRate / 100, year);\n\n    results.years.push(year);\n    results.freeCashFlows.push(freeCashFlow);\n    results.presentValues.push(presentValue);\n    results.cumulativePV += presentValue;\n  }\n\n  // Terminal value calculation\n  const terminalYear = dcfParams.projectionYears;\n  const terminalCashFlow = results.freeCashFlows[terminalYear - 1];\n  const terminalGrowthCashFlow = terminalCashFlow * (1 + dcfParams.terminalGrowthRate / 100);\n\n  results.terminalValue = terminalGrowthCashFlow / ((dcfParams.discountRate - dcfParams.terminalGrowthRate) / 100);\n  results.presentValueTerminal = results.terminalValue / Math.pow(1 + dcfParams.discountRate / 100, terminalYear);\n\n  // Enterprise and equity value\n  results.enterpriseValue = results.cumulativePV + results.presentValueTerminal;\n  results.equityValue = results.enterpriseValue; // Simplified - assume no net debt\n  results.impliedSharePrice = results.equityValue / dcfParams.sharesOutstanding;\n  results.impliedValuation = results.equityValue;\n\n  return results;\n};\n\n// Sensitivity Analysis Function\nexport const calculateSensitivityAnalysis = (inputs, waccRange = [-2, -1, 0, 1, 2], terminalGrowthRange = [-1, -0.5, 0, 0.5, 1]) => {\n  if (!inputs) return null;\n\n  const baseWACC = inputs.discountRate || 0.12;\n  const baseTerminalGrowth = inputs.terminalGrowthRate || 0.025;\n\n  const sensitivityMatrix = [];\n\n  waccRange.forEach(waccDelta => {\n    const row = [];\n    terminalGrowthRange.forEach(terminalDelta => {\n      const testInputs = {\n        ...inputs,\n        discountRate: baseWACC + (waccDelta / 100),\n        terminalGrowthRate: baseTerminalGrowth + (terminalDelta / 100)\n      };\n\n      try {\n        const result = calculateEnhancedDCF(testInputs);\n        row.push({\n          wacc: (baseWACC + (waccDelta / 100)) * 100,\n          terminalGrowth: (baseTerminalGrowth + (terminalDelta / 100)) * 100,\n          sharePrice: result?.impliedSharePrice || 0,\n          equityValue: result?.equityValue || 0\n        });\n      } catch (error) {\n        row.push({\n          wacc: (baseWACC + (waccDelta / 100)) * 100,\n          terminalGrowth: (baseTerminalGrowth + (terminalDelta / 100)) * 100,\n          sharePrice: 0,\n          equityValue: 0\n        });\n      }\n    });\n    sensitivityMatrix.push(row);\n  });\n\n  return {\n    matrix: sensitivityMatrix,\n    waccRange: waccRange.map(delta => (baseWACC + (delta / 100)) * 100),\n    terminalGrowthRange: terminalGrowthRange.map(delta => (baseTerminalGrowth + (delta / 100)) * 100),\n    baseCase: {\n      wacc: baseWACC * 100,\n      terminalGrowth: baseTerminalGrowth * 100\n    }\n  };\n};\n\n// Export default for backward compatibility\nexport default {\n  calculateDCF,\n  calculateSimpleDCF,\n  calculateEnhancedDCF,\n  calculateSensitivityAnalysis\n};\n","import { motion } from 'framer-motion';\nimport {\n  Calculator,\n  BarChart3,\n  Target,\n  Maximize2,\n  X,\n  TrendingUp,\n  DollarSign,\n  Percent,\n  Calendar\n} from 'lucide-react';\nimport { useState, useMemo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst AnalysisModule = ({\n  moduleId,\n  _companyData,\n  inputs,\n  results,\n  onInputChange,\n  onFocus,\n  onRemove,\n  isCompact = false,\n  isFullscreen = false\n}) => {\n  const [_activeInputTab, _setActiveInputTab] = useState('assumptions');\n\n  // Generate chart data for visualization - moved outside renderDCFContent\n  const chartData = useMemo(() => {\n    if (!results?.freeCashFlows) return [];\n\n    return results.years.map((year, index) => ({\n      year: `Y${year}`,\n      fcf: results.freeCashFlows[index] / 1e6, // Convert to millions\n      pv: results.presentValues[index] / 1e6\n    }));\n  }, [results]);\n\n  const moduleConfig = {\n    dcf: {\n      name: 'DCF Analysis',\n      icon: Calculator,\n      color: 'blue',\n      description: 'Discounted cash flow valuation model'\n    },\n    comparables: {\n      name: 'Comparable Analysis',\n      icon: BarChart3,\n      color: 'green',\n      description: 'Peer group valuation analysis'\n    },\n    lbo: {\n      name: 'LBO Analysis',\n      icon: Target,\n      color: 'purple',\n      description: 'Leveraged buyout return analysis'\n    }\n  };\n\n  const config = moduleConfig[moduleId];\n  const Icon = config.icon;\n\n  // Interactive slider component for key assumptions\n  const InteractiveSlider = ({ label, value, min, max, step, suffix = '', onChange }) => (\n    <div className=\"space-y-2\">\n      <div className=\"flex justify-between items-center\">\n        <label className=\"text-sm font-medium text-gray-700\">{label}</label>\n        <span className=\"text-sm font-mono text-gray-900 bg-gray-100 px-2 py-1 rounded\">\n          {value.toFixed(step < 1 ? 1 : 0)}{suffix}\n        </span>\n      </div>\n      <div className=\"relative\">\n        <input\n          type=\"range\"\n          min={min}\n          max={max}\n          step={step}\n          value={value}\n          onChange={(e) => onChange(parseFloat(e.target.value))}\n          className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider\"\n          style={{\n            background: `linear-gradient(to right, rgb(59 130 246) 0%, rgb(59 130 246) ${((value - min) / (max - min)) * 100}%, rgb(229 231 235) ${((value - min) / (max - min)) * 100}%, rgb(229 231 235) 100%)`\n          }}\n        />\n      </div>\n    </div>\n  );\n\n  // Render DCF module content\n  const renderDCFContent = () => {\n    if (!inputs) return null;\n\n    const handleInputChange = (field, value) => {\n      onInputChange({ [field]: value });\n    };\n\n    const handleYearlyInputChange = (year, field, value) => {\n      const updatedYearlyData = {\n        ...inputs.yearlyData,\n        [year]: {\n          ...inputs.yearlyData?.[year],\n          [field]: value\n        }\n      };\n      onInputChange({ yearlyData: updatedYearlyData });\n    };\n\n    // Chart data is now available from component scope\n\n    if (isCompact) {\n      return (\n        <div className=\"p-6 space-y-6\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className={`w-10 h-10 bg-${config.color}-100 rounded-lg flex items-center justify-center`}>\n                <Icon className={`w-5 h-5 text-${config.color}-600`} />\n              </div>\n              <div>\n                <h3 className=\"font-semibold text-gray-900\">{config.name}</h3>\n                <p className=\"text-sm text-gray-500\">{config.description}</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <button\n                onClick={onFocus}\n                className=\"p-2 text-gray-400 hover:text-blue-600 transition-colors\"\n              >\n                <Maximize2 className=\"w-4 h-4\" />\n              </button>\n              <button\n                onClick={onRemove}\n                className=\"p-2 text-gray-400 hover:text-red-600 transition-colors\"\n              >\n                <X className=\"w-4 h-4\" />\n              </button>\n            </div>\n          </div>\n\n          {/* Key Interactive Inputs */}\n          <div className=\"space-y-4\">\n            <InteractiveSlider\n              label=\"Terminal Growth Rate\"\n              value={(inputs.terminalGrowthRate || 0.025) * 100}\n              min={0}\n              max={5}\n              step={0.1}\n              suffix=\"%\"\n              onChange={(value) => handleInputChange('terminalGrowthRate', value / 100)}\n            />\n            <InteractiveSlider\n              label=\"Discount Rate (WACC)\"\n              value={(inputs.discountRate || 0.12) * 100}\n              min={5}\n              max={20}\n              step={0.1}\n              suffix=\"%\"\n              onChange={(value) => handleInputChange('discountRate', value / 100)}\n            />\n          </div>\n\n          {/* Results Summary */}\n          {results && (\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"bg-gray-50 rounded-lg p-3\">\n                <div className=\"text-sm text-gray-600 mb-1\">Enterprise Value</div>\n                <div className=\"text-lg font-semibold text-gray-900\">\n                  ${(results.enterpriseValue / 1e9).toFixed(1)}B\n                </div>\n              </div>\n              <div className=\"bg-gray-50 rounded-lg p-3\">\n                <div className=\"text-sm text-gray-600 mb-1\">Implied Price</div>\n                <div className=\"text-lg font-semibold text-gray-900\">\n                  ${results.impliedSharePrice?.toFixed(2) || '0.00'}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Mini Chart */}\n          {chartData.length > 0 && (\n            <div className=\"h-32\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={chartData}>\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"fcf\"\n                    stroke=\"#3B82F6\"\n                    strokeWidth={2}\n                    dot={false}\n                  />\n                  <XAxis dataKey=\"year\" tick={{ fontSize: 10 }} />\n                  <YAxis tick={{ fontSize: 10 }} />\n                  <Tooltip\n                    formatter={(value) => [`$${value.toFixed(0)}M`, 'FCF']}\n                    labelStyle={{ color: '#374151' }}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    // Fullscreen view\n    return (\n      <div className=\"space-y-8\">\n        {/* Interactive Assumptions Panel */}\n        <div className=\"bg-white rounded-2xl border border-gray-100 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Model Assumptions</h3>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-6\">\n              <InteractiveSlider\n                label=\"Current Revenue\"\n                value={inputs.currentRevenue || 0}\n                min={1e6}\n                max={1e12}\n                step={1e6}\n                suffix=\"\"\n                onChange={(value) => handleInputChange('currentRevenue', value)}\n              />\n              <InteractiveSlider\n                label=\"Terminal Growth Rate\"\n                value={(inputs.terminalGrowthRate || 0.025) * 100}\n                min={0}\n                max={5}\n                step={0.1}\n                suffix=\"%\"\n                onChange={(value) => handleInputChange('terminalGrowthRate', value / 100)}\n              />\n              <InteractiveSlider\n                label=\"Discount Rate (WACC)\"\n                value={(inputs.discountRate || 0.12) * 100}\n                min={5}\n                max={20}\n                step={0.1}\n                suffix=\"%\"\n                onChange={(value) => handleInputChange('discountRate', value / 100)}\n              />\n            </div>\n\n            <div className=\"space-y-6\">\n              <InteractiveSlider\n                label=\"Projection Years\"\n                value={inputs.projectionYears || 5}\n                min={3}\n                max={10}\n                step={1}\n                suffix=\" years\"\n                onChange={(value) => handleInputChange('projectionYears', value)}\n              />\n\n              {/* Year 1 Quick Adjustments */}\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h4 className=\"font-medium text-gray-900 mb-3\">Year 1 Assumptions</h4>\n                <div className=\"space-y-3\">\n                  <InteractiveSlider\n                    label=\"Revenue Growth\"\n                    value={inputs.yearlyData?.[1]?.revenueGrowth || 10}\n                    min={-10}\n                    max={50}\n                    step={0.5}\n                    suffix=\"%\"\n                    onChange={(value) => handleYearlyInputChange(1, 'revenueGrowth', value)}\n                  />\n                  <InteractiveSlider\n                    label=\"EBITDA Margin\"\n                    value={inputs.yearlyData?.[1]?.ebitdaMargin || 20}\n                    min={0}\n                    max={50}\n                    step={0.5}\n                    suffix=\"%\"\n                    onChange={(value) => handleYearlyInputChange(1, 'ebitdaMargin', value)}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Results Dashboard */}\n        {results && (\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Key Metrics */}\n            <div className=\"lg:col-span-1 space-y-4\">\n              <div className=\"bg-white rounded-2xl border border-gray-100 p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Valuation Results</h3>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between p-3 bg-blue-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-2\">\n                      <DollarSign className=\"w-4 h-4 text-blue-600\" />\n                      <span className=\"text-sm font-medium text-blue-900\">Enterprise Value</span>\n                    </div>\n                    <span className=\"text-lg font-bold text-blue-900\">\n                      ${(results.enterpriseValue / 1e9).toFixed(1)}B\n                    </span>\n                  </div>\n\n                  <div className=\"flex items-center justify-between p-3 bg-green-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-2\">\n                      <TrendingUp className=\"w-4 h-4 text-green-600\" />\n                      <span className=\"text-sm font-medium text-green-900\">Equity Value</span>\n                    </div>\n                    <span className=\"text-lg font-bold text-green-900\">\n                      ${(results.equityValue / 1e9).toFixed(1)}B\n                    </span>\n                  </div>\n\n                  <div className=\"flex items-center justify-between p-3 bg-purple-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Percent className=\"w-4 h-4 text-purple-600\" />\n                      <span className=\"text-sm font-medium text-purple-900\">Implied Price</span>\n                    </div>\n                    <span className=\"text-lg font-bold text-purple-900\">\n                      ${results.impliedSharePrice?.toFixed(2) || '0.00'}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Cash Flow Chart */}\n            <div className=\"lg:col-span-2\">\n              <div className=\"bg-white rounded-2xl border border-gray-100 p-6\">\n                <div className=\"flex items-center justify-between mb-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Free Cash Flow Projection</h3>\n                  <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n                    <Calendar className=\"w-4 h-4\" />\n                    <span>{inputs.projectionYears || 5} Year Model</span>\n                  </div>\n                </div>\n\n                <div className=\"h-64\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <LineChart data={chartData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f1f5f9\" />\n                      <XAxis\n                        dataKey=\"year\"\n                        axisLine={false}\n                        tickLine={false}\n                        tick={{ fontSize: 12, fill: '#64748b' }}\n                      />\n                      <YAxis\n                        axisLine={false}\n                        tickLine={false}\n                        tick={{ fontSize: 12, fill: '#64748b' }}\n                        tickFormatter={(value) => `$${value}M`}\n                      />\n                      <Tooltip\n                        formatter={(value, name) => [\n                          `$${value.toFixed(0)}M`,\n                          name === 'fcf' ? 'Free Cash Flow' : 'Present Value'\n                        ]}\n                        labelStyle={{ color: '#374151' }}\n                        contentStyle={{\n                          backgroundColor: '#ffffff',\n                          border: '1px solid #e5e7eb',\n                          borderRadius: '8px'\n                        }}\n                      />\n                      <Line\n                        type=\"monotone\"\n                        dataKey=\"fcf\"\n                        stroke=\"#3B82F6\"\n                        strokeWidth={3}\n                        dot={{ fill: '#3B82F6', strokeWidth: 0, r: 4 }}\n                        name=\"fcf\"\n                      />\n                      <Line\n                        type=\"monotone\"\n                        dataKey=\"pv\"\n                        stroke=\"#10B981\"\n                        strokeWidth={3}\n                        dot={{ fill: '#10B981', strokeWidth: 0, r: 4 }}\n                        name=\"pv\"\n                      />\n                    </LineChart>\n                  </ResponsiveContainer>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Render module based on type\n  const renderModuleContent = () => {\n    switch (moduleId) {\n      case 'dcf':\n        return renderDCFContent();\n      case 'comparables':\n        return (\n          <div className=\"p-6 text-center text-gray-500\">\n            <BarChart3 className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n            <p>Comparable analysis module coming soon</p>\n          </div>\n        );\n      case 'lbo':\n        return (\n          <div className=\"p-6 text-center text-gray-500\">\n            <Target className=\"w-12 h-12 mx-auto mb-4 text-gray-300\" />\n            <p>LBO analysis module coming soon</p>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <motion.div\n      layout\n      className={`${isFullscreen ? '' : 'bg-white border border-gray-100 rounded-2xl overflow-hidden'}`}\n    >\n      {renderModuleContent()}\n    </motion.div>\n  );\n};\n\nexport default AnalysisModule;\n","import { motion } from 'framer-motion';\nimport { TrendingUp, Building2, Calendar, DollarSign } from 'lucide-react';\n// React import not needed for modern JSX transform\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer } from 'recharts';\n\nconst CompanyOverview = ({ company, compact = false }) => {\n  if (!company) return null;\n\n  const formatCurrency = (value) => {\n    if (value >= 1e12) return `$${(value / 1e12).toFixed(1)}T`;\n    if (value >= 1e9) return `$${(value / 1e9).toFixed(1)}B`;\n    if (value >= 1e6) return `$${(value / 1e6).toFixed(1)}M`;\n    return `$${value.toFixed(2)}`;\n  };\n\n  // Prepare chart data\n  const chartData = company.financials?.revenue?.map((revenue, index) => ({\n    year: company.financials.years[index],\n    revenue: revenue / 1e9 // Convert to billions for readability\n  })) || [];\n\n  // Calculate growth metrics\n  const calculateGrowth = (data) => {\n    if (!data || data.length < 2) return 0;\n    const latest = data[data.length - 1];\n    const previous = data[data.length - 2];\n    return ((latest - previous) / previous) * 100;\n  };\n\n  const revenueGrowth = calculateGrowth(company.financials?.revenue);\n\n  if (compact) {\n    return (\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-white rounded-2xl p-6 border border-gray-100\"\n      >\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center\">\n              <Building2 className=\"w-6 h-6 text-white\" />\n            </div>\n            <div>\n              <h2 className=\"text-xl font-semibold text-gray-900\">{company.name}</h2>\n              <p className=\"text-sm text-gray-500\">{company.sector}</p>\n            </div>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-2xl font-semibold text-gray-900\">${company.price}</div>\n            <div\n              className={`text-sm flex items-center justify-end ${\n                company.changePercent >= 0 ? 'text-green-600' : 'text-red-600'\n              }`}\n            >\n              <TrendingUp\n                className={`w-4 h-4 mr-1 ${\n                  company.changePercent < 0 ? 'rotate-180' : ''\n                }`}\n              />\n              {company.changePercent >= 0 ? '+' : ''}\n              {company.changePercent.toFixed(2)}%\n            </div>\n          </div>\n        </div>\n      </motion.div>\n    );\n  }\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"bg-white rounded-3xl p-8 border border-gray-100 shadow-sm\"\n    >\n      {/* Header */}\n      <div className=\"flex items-start justify-between mb-8\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-blue-600 rounded-2xl flex items-center justify-center\">\n            <Building2 className=\"w-8 h-8 text-white\" />\n          </div>\n          <div>\n            <h1 className=\"text-3xl font-light text-gray-900 mb-1\">{company.name}</h1>\n            <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n              <span className=\"font-mono bg-gray-100 px-2 py-1 rounded\">{company.ticker}</span>\n              <span>{company.sector}</span>\n              <span>Market Cap: {formatCurrency(company.marketCap)}</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"text-right\">\n          <div className=\"text-4xl font-light text-gray-900 mb-1\">\n            ${company.price}\n          </div>\n          <div\n            className={`text-lg flex items-center justify-end ${\n              company.changePercent >= 0 ? 'text-green-600' : 'text-red-600'\n            }`}\n          >\n            <TrendingUp\n              className={`w-5 h-5 mr-2 ${\n                company.changePercent < 0 ? 'rotate-180' : ''\n              }`}\n            />\n            {company.changePercent >= 0 ? '+' : ''}\n            {company.change.toFixed(2)} ({company.changePercent.toFixed(2)}%)\n          </div>\n        </div>\n      </div>\n\n      {/* Key Metrics Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n        {/* Revenue Chart */}\n        <div className=\"md:col-span-2\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Revenue Trend</h3>\n            <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n              <Calendar className=\"w-4 h-4\" />\n              <span>{company.financials?.years?.[0]} - {company.financials?.years?.slice(-1)}</span>\n            </div>\n          </div>\n          <div className=\"h-48\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={chartData}>\n                <XAxis\n                  dataKey=\"year\"\n                  axisLine={false}\n                  tickLine={false}\n                  tick={{ fontSize: 12, fill: '#6B7280' }}\n                />\n                <YAxis\n                  axisLine={false}\n                  tickLine={false}\n                  tick={{ fontSize: 12, fill: '#6B7280' }}\n                  tickFormatter={(value) => `$${value}B`}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"revenue\"\n                  stroke=\"#3B82F6\"\n                  strokeWidth={3}\n                  dot={{ fill: '#3B82F6', strokeWidth: 0, r: 4 }}\n                  activeDot={{ r: 6, stroke: '#3B82F6', strokeWidth: 2, fill: '#fff' }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Key Financial Metrics */}\n        <div className=\"space-y-4\">\n          <div className=\"bg-gray-50 rounded-2xl p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm font-medium text-gray-600\">Latest Revenue</span>\n              <DollarSign className=\"w-4 h-4 text-gray-400\" />\n            </div>\n            <div className=\"text-2xl font-semibold text-gray-900\">\n              {formatCurrency(company.financials?.revenue?.slice(-1)[0] || 0)}\n            </div>\n            <div\n              className={`text-sm mt-1 ${\n                revenueGrowth >= 0 ? 'text-green-600' : 'text-red-600'\n              }`}\n            >\n              {revenueGrowth >= 0 ? '+' : ''}{revenueGrowth.toFixed(1)}% YoY\n            </div>\n          </div>\n\n          <div className=\"bg-gray-50 rounded-2xl p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm font-medium text-gray-600\">Market Cap</span>\n              <TrendingUp className=\"w-4 h-4 text-gray-400\" />\n            </div>\n            <div className=\"text-2xl font-semibold text-gray-900\">\n              {formatCurrency(company.marketCap)}\n            </div>\n            <div className=\"text-sm text-gray-500 mt-1\">\n              Public Market\n            </div>\n          </div>\n\n          <div className=\"bg-gray-50 rounded-2xl p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm font-medium text-gray-600\">Sector</span>\n              <Building2 className=\"w-4 h-4 text-gray-400\" />\n            </div>\n            <div className=\"text-lg font-medium text-gray-900\">\n              {company.sector}\n            </div>\n            <div className=\"text-sm text-gray-500 mt-1\">\n              Industry Classification\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Analysis Ready Indicator */}\n      <div className=\"bg-green-50 border border-green-200 rounded-2xl p-4\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\" />\n          <span className=\"text-sm font-medium text-green-800\">\n            Financial data loaded • Ready for analysis\n          </span>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default CompanyOverview;\n","import { motion, AnimatePresence } from 'framer-motion';\nimport { Search, TrendingUp, Building2 } from 'lucide-react';\nimport { useState, useEffect } from 'react';\n\nconst CompanySelector = ({ onCompanySelect }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n\n  // Mock company data - in real implementation, this would come from an API\n  const mockCompanies = [\n    {\n      id: 'AAPL',\n      name: 'Apple Inc.',\n      ticker: 'AAPL',\n      sector: 'Technology',\n      marketCap: 3000000000000,\n      price: 175.84,\n      change: 2.34,\n      changePercent: 1.35,\n      financials: {\n        revenue: [274515000000, 294135000000, 365817000000, 383285000000, 394328000000],\n        years: [2019, 2020, 2021, 2022, 2023]\n      }\n    },\n    {\n      id: 'MSFT',\n      name: 'Microsoft Corporation',\n      ticker: 'MSFT',\n      sector: 'Technology',\n      marketCap: 2800000000000,\n      price: 378.85,\n      change: -1.23,\n      changePercent: -0.32,\n      financials: {\n        revenue: [125843000000, 143015000000, 168088000000, 198270000000, 211915000000],\n        years: [2019, 2020, 2021, 2022, 2023]\n      }\n    },\n    {\n      id: 'GOOGL',\n      name: 'Alphabet Inc.',\n      ticker: 'GOOGL',\n      sector: 'Technology',\n      marketCap: 2100000000000,\n      price: 142.56,\n      change: 3.21,\n      changePercent: 2.30,\n      financials: {\n        revenue: [161857000000, 182527000000, 257637000000, 282836000000, 307394000000],\n        years: [2019, 2020, 2021, 2022, 2023]\n      }\n    },\n    {\n      id: 'JNJ',\n      name: 'Johnson & Johnson',\n      ticker: 'JNJ',\n      sector: 'Healthcare',\n      marketCap: 450000000000,\n      price: 156.78,\n      change: 0.89,\n      changePercent: 0.57,\n      financials: {\n        revenue: [82059000000, 82584000000, 93775000000, 94943000000, 85159000000],\n        years: [2019, 2020, 2021, 2022, 2023]\n      }\n    },\n    {\n      id: 'PFE',\n      name: 'Pfizer Inc.',\n      ticker: 'PFE',\n      sector: 'Healthcare',\n      marketCap: 320000000000,\n      price: 28.95,\n      change: -0.45,\n      changePercent: -1.53,\n      financials: {\n        revenue: [51750000000, 41908000000, 81288000000, 100330000000, 58496000000],\n        years: [2019, 2020, 2021, 2022, 2023]\n      }\n    }\n  ];\n\n  // Search functionality\n  useEffect(() => {\n    if (searchTerm.length > 0) {\n      setIsSearching(true);\n\n      // Simulate API delay\n      const timer = setTimeout(() => {\n        const filtered = mockCompanies.filter(company =>\n          company.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          company.ticker.toLowerCase().includes(searchTerm.toLowerCase())\n        );\n        setSuggestions(filtered);\n        setIsSearching(false);\n      }, 300);\n\n      return () => clearTimeout(timer);\n    } else {\n      setSuggestions([]);\n      setIsSearching(false);\n    }\n  }, [searchTerm]);\n\n  const formatCurrency = (value) => {\n    if (value >= 1e12) return `$${(value / 1e12).toFixed(1)}T`;\n    if (value >= 1e9) return `$${(value / 1e9).toFixed(1)}B`;\n    if (value >= 1e6) return `$${(value / 1e6).toFixed(1)}M`;\n    return `$${value.toFixed(2)}`;\n  };\n\n  const handleCompanySelect = (company) => {\n    onCompanySelect(company);\n    setSearchTerm('');\n    setSuggestions([]);\n  };\n\n  return (\n    <div className=\"relative max-w-lg mx-auto\">\n      {/* Search Input */}\n      <div className=\"relative\">\n        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n          <Search className=\"h-5 w-5 text-gray-400\" />\n        </div>\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"block w-full pl-10 pr-3 py-4 border border-gray-200 rounded-2xl leading-5 bg-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-lg\"\n          placeholder=\"Search companies (e.g., Apple, AAPL)\"\n        />\n      </div>\n\n      {/* Search Results */}\n      <AnimatePresence>\n        {(suggestions.length > 0 || isSearching) && (\n          <motion.div\n            initial={{ opacity: 0, y: -10 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -10 }}\n            className=\"absolute z-10 mt-2 w-full bg-white rounded-2xl shadow-xl border border-gray-100 overflow-hidden\"\n          >\n            {isSearching ? (\n              <div className=\"p-4 text-center text-gray-500\">\n                <div className=\"inline-block animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\" />\n                <p className=\"mt-2 text-sm\">Searching...</p>\n              </div>\n            ) : (\n              <div className=\"max-h-80 overflow-y-auto\">\n                {suggestions.map((company) => (\n                  <motion.button\n                    key={company.id}\n                    onClick={() => handleCompanySelect(company)}\n                    whileHover={{ backgroundColor: 'rgba(59, 130, 246, 0.05)' }}\n                    className=\"w-full p-4 text-left border-b border-gray-50 last:border-b-0 focus:outline-none focus:bg-blue-50 transition-colors\"\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"flex-shrink-0\">\n                          <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center\">\n                            <Building2 className=\"w-5 h-5 text-white\" />\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"flex items-center space-x-2\">\n                            <h3 className=\"text-sm font-medium text-gray-900\">\n                              {company.name}\n                            </h3>\n                            <span className=\"text-xs font-mono text-gray-500 bg-gray-100 px-2 py-0.5 rounded\">\n                              {company.ticker}\n                            </span>\n                          </div>\n                          <p className=\"text-xs text-gray-500 mt-0.5\">\n                            {company.sector} • Market Cap: {formatCurrency(company.marketCap)}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          ${company.price}\n                        </div>\n                        <div\n                          className={`text-xs flex items-center ${\n                            company.changePercent >= 0 ? 'text-green-600' : 'text-red-600'\n                          }`}\n                        >\n                          <TrendingUp\n                            className={`w-3 h-3 mr-1 ${\n                              company.changePercent < 0 ? 'rotate-180' : ''\n                            }`}\n                          />\n                          {company.changePercent >= 0 ? '+' : ''}\n                          {company.changePercent.toFixed(2)}%\n                        </div>\n                      </div>\n                    </div>\n                  </motion.button>\n                ))}\n              </div>\n            )}\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Popular Companies */}\n      {!searchTerm && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.2 }}\n          className=\"mt-8\"\n        >\n          <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Popular Companies</h3>\n          <div className=\"grid grid-cols-2 gap-3\">\n            {mockCompanies.slice(0, 4).map((company) => (\n              <motion.button\n                key={company.id}\n                onClick={() => handleCompanySelect(company)}\n                whileHover={{ scale: 1.02 }}\n                whileTap={{ scale: 0.98 }}\n                className=\"p-3 bg-white border border-gray-200 rounded-xl hover:border-blue-300 transition-all text-left\"\n              >\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-8 h-8 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center\">\n                    <Building2 className=\"w-4 h-4 text-white\" />\n                  </div>\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900\">\n                      {company.ticker}\n                    </div>\n                    <div className=\"text-xs text-gray-500 truncate\">\n                      {company.name}\n                    </div>\n                  </div>\n                </div>\n              </motion.button>\n            ))}\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default CompanySelector;\n","import { motion, AnimatePresence } from 'framer-motion';\nimport {\n  Search,\n  BarChart3,\n  Calculator,\n  Target,\n  ChevronRight,\n  Minimize2\n} from 'lucide-react';\nimport { useState, useCallback } from 'react';\n\nimport { calculateEnhancedDCF } from '../../utils/dcfCalculations';\n\nimport AnalysisModule from './AnalysisModule';\nimport CompanyOverview from './CompanyOverview';\nimport CompanySelector from './CompanySelector';\n\n// Spring-based animation configuration for organic feel\nconst springConfig = {\n  type: 'spring',\n  stiffness: 400,\n  damping: 25\n};\n\nconst AnalysisCanvas = () => {\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [activeModules, setActiveModules] = useState([]);\n  const [canvasMode, setCanvasMode] = useState('overview'); // 'overview', 'analysis', 'focused'\n  const [focusedModule, setFocusedModule] = useState(null);\n\n  // Company data state with intelligent defaults\n  const [_companyData, _setCompanyData] = useState({\n    profile: null,\n    financials: null,\n    marketData: null,\n    consensus: null\n  });\n\n  // Analysis state\n  const [analysisInputs, setAnalysisInputs] = useState({\n    dcf: {\n      currentRevenue: 0,\n      projectionYears: 5,\n      terminalGrowthRate: 0.025,\n      discountRate: 0.12,\n      yearlyData: {},\n      balanceSheet: {}\n    }\n  });\n\n  const [analysisResults, setAnalysisResults] = useState({});\n\n  // Available analysis modules\n  const availableModules = [\n    {\n      id: 'dcf',\n      name: 'DCF Analysis',\n      icon: Calculator,\n      description: 'Discounted Cash Flow valuation',\n      color: 'blue',\n      isPrimary: true\n    },\n    {\n      id: 'comparables',\n      name: 'Comparable Analysis',\n      icon: BarChart3,\n      description: 'Peer comparison analysis',\n      color: 'green',\n      isPrimary: true\n    },\n    {\n      id: 'lbo',\n      name: 'LBO Analysis',\n      icon: Target,\n      description: 'Leveraged buyout modeling',\n      color: 'purple',\n      isPrimary: false\n    }\n  ];\n\n  // Handle company selection with intelligent data population\n  const handleCompanySelect = useCallback(async(company) => {\n    setSelectedCompany(company);\n    setCanvasMode('analysis');\n\n    // Populate with intelligent defaults based on company data\n    if (company.financials?.revenue) {\n      const latestRevenue = company.financials.revenue[company.financials.revenue.length - 1];\n      const growthRates = calculateHistoricalGrowthRates(company.financials.revenue);\n\n      setAnalysisInputs(prev => ({\n        ...prev,\n        dcf: {\n          ...prev.dcf,\n          currentRevenue: latestRevenue,\n          yearlyData: generateIntelligentDefaults(growthRates, company.sector)\n        }\n      }));\n    }\n\n    // Auto-activate primary modules\n    setActiveModules(['dcf']);\n  }, []);\n\n  // Calculate historical growth rates for intelligent defaults\n  const calculateHistoricalGrowthRates = (revenueData) => {\n    if (!revenueData || revenueData.length < 2) return [];\n\n    const growthRates = [];\n    for (let i = 1; i < revenueData.length; i++) {\n      const growth = ((revenueData[i] - revenueData[i - 1]) / revenueData[i - 1]) * 100;\n      growthRates.push(growth);\n    }\n\n    return growthRates;\n  };\n\n  // Generate intelligent defaults based on historical data and sector\n  const generateIntelligentDefaults = (historicalGrowth, sector) => {\n    const avgGrowth = historicalGrowth.length > 0\n      ? historicalGrowth.reduce((a, b) => a + b, 0) / historicalGrowth.length\n      : 10;\n\n    const sectorDefaults = getSectorDefaults(sector);\n\n    const yearlyData = {};\n    for (let year = 1; year <= 5; year++) {\n      // Declining growth model\n      const yearGrowth = Math.max(avgGrowth * (1 - (year - 1) * 0.1), sectorDefaults.terminalGrowth);\n\n      yearlyData[year] = {\n        revenueGrowth: yearGrowth,\n        ebitdaMargin: sectorDefaults.ebitdaMargin,\n        taxRate: sectorDefaults.taxRate,\n        capexPercent: sectorDefaults.capexPercent,\n        daPercent: sectorDefaults.daPercent,\n        workingCapitalChange: sectorDefaults.workingCapitalChange\n      };\n    }\n\n    return yearlyData;\n  };\n\n  // Sector-specific defaults\n  const getSectorDefaults = (sector) => {\n    const defaults = {\n      'Technology': {\n        ebitdaMargin: 25,\n        taxRate: 21,\n        capexPercent: 3,\n        daPercent: 5,\n        workingCapitalChange: 1,\n        terminalGrowth: 3\n      },\n      'Healthcare': {\n        ebitdaMargin: 20,\n        taxRate: 25,\n        capexPercent: 4,\n        daPercent: 4,\n        workingCapitalChange: 2,\n        terminalGrowth: 2.5\n      },\n      default: {\n        ebitdaMargin: 18,\n        taxRate: 25,\n        capexPercent: 5,\n        daPercent: 4,\n        workingCapitalChange: 2,\n        terminalGrowth: 2.5\n      }\n    };\n\n    return defaults[sector] || defaults.default;\n  };\n\n  // Add analysis module to canvas\n  const addModule = (moduleId) => {\n    if (!activeModules.includes(moduleId)) {\n      setActiveModules(prev => [...prev, moduleId]);\n    }\n  };\n\n  // Remove module from canvas\n  const removeModule = (moduleId) => {\n    setActiveModules(prev => prev.filter(id => id !== moduleId));\n    if (focusedModule === moduleId) {\n      setFocusedModule(null);\n      setCanvasMode('analysis');\n    }\n  };\n\n  // Focus on specific module\n  const focusModule = (moduleId) => {\n    setFocusedModule(moduleId);\n    setCanvasMode('focused');\n  };\n\n  // Update analysis inputs with real-time calculation\n  const updateAnalysisInputs = useCallback((moduleId, newInputs) => {\n    setAnalysisInputs(prev => ({\n      ...prev,\n      [moduleId]: { ...prev[moduleId], ...newInputs }\n    }));\n\n    // Trigger real-time calculation\n    if (moduleId === 'dcf') {\n      const results = calculateEnhancedDCF({ ...analysisInputs.dcf, ...newInputs });\n      setAnalysisResults(prev => ({ ...prev, dcf: results }));\n    }\n  }, [analysisInputs]);\n\n  // Canvas layout variants\n  const canvasVariants = {\n    overview: {\n      scale: 1,\n      y: 0,\n      transition: springConfig\n    },\n    analysis: {\n      scale: 1,\n      y: 0,\n      transition: springConfig\n    },\n    focused: {\n      scale: 1.02,\n      y: -20,\n      transition: springConfig\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-gray-50 to-white\">\n      {/* Minimal Header - Deference to Content */}\n      <div className=\"sticky top-0 z-50 bg-white/80 backdrop-blur-md border-b border-gray-100\">\n        <div className=\"max-w-7xl mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            {selectedCompany ? (\n              <div className=\"flex items-center space-x-4\">\n                <button\n                  onClick={() => {\n                    setSelectedCompany(null);\n                    setCanvasMode('overview');\n                    setActiveModules([]);\n                  }}\n                  className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n                >\n                  <Minimize2 size={20} />\n                </button>\n                <div>\n                  <h1 className=\"text-2xl font-light text-gray-900\">\n                    {selectedCompany.name}\n                  </h1>\n                  <p className=\"text-sm text-gray-500\">\n                    {selectedCompany.sector} • {selectedCompany.ticker}\n                  </p>\n                </div>\n              </div>\n            ) : (\n              <h1 className=\"text-2xl font-light text-gray-900\">\n                Analysis Canvas\n              </h1>\n            )}\n\n            {/* Canvas Mode Controls */}\n            {selectedCompany && (\n              <div className=\"flex items-center space-x-2\">\n                <button\n                  onClick={() => setCanvasMode('analysis')}\n                  className={`px-3 py-1.5 text-sm rounded-full transition-all ${\n                    canvasMode === 'analysis'\n                      ? 'bg-blue-100 text-blue-700'\n                      : 'text-gray-500 hover:text-gray-700'\n                  }`}\n                >\n                  Analysis\n                </button>\n                {focusedModule && (\n                  <button\n                    onClick={() => setCanvasMode('focused')}\n                    className={`px-3 py-1.5 text-sm rounded-full transition-all ${\n                      canvasMode === 'focused'\n                        ? 'bg-blue-100 text-blue-700'\n                        : 'text-gray-500 hover:text-gray-700'\n                    }`}\n                  >\n                    Focus\n                  </button>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Main Canvas */}\n      <motion.div\n        variants={canvasVariants}\n        animate={canvasMode}\n        className=\"max-w-7xl mx-auto px-6 py-8\"\n      >\n        <AnimatePresence mode=\"wait\">\n          {!selectedCompany ? (\n            /* Company Selection State */\n            <motion.div\n              key=\"company-selection\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={springConfig}\n              className=\"text-center py-12\"\n            >\n              <div className=\"max-w-2xl mx-auto\">\n                <div className=\"mb-8\">\n                  <div className=\"inline-flex items-center justify-center w-16 h-16 bg-blue-50 rounded-full mb-4\">\n                    <Search className=\"w-8 h-8 text-blue-600\" />\n                  </div>\n                  <h2 className=\"text-3xl font-light text-gray-900 mb-3\">\n                    Begin Your Analysis\n                  </h2>\n                  <p className=\"text-lg text-gray-600\">\n                    Select a company to start building your financial model\n                  </p>\n                </div>\n\n                <CompanySelector onCompanySelect={handleCompanySelect} />\n              </div>\n            </motion.div>\n          ) : canvasMode === 'focused' && focusedModule ? (\n            /* Focused Module State */\n            <motion.div\n              key=\"focused-module\"\n              initial={{ opacity: 0, scale: 0.95 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.95 }}\n              transition={springConfig}\n              className=\"space-y-6\"\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <button\n                    onClick={() => setCanvasMode('analysis')}\n                    className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n                  >\n                    <ChevronRight className=\"w-5 h-5 rotate-180\" />\n                  </button>\n                  <h2 className=\"text-2xl font-light text-gray-900\">\n                    {availableModules.find(m => m.id === focusedModule)?.name}\n                  </h2>\n                </div>\n                <button\n                  onClick={() => removeModule(focusedModule)}\n                  className=\"text-gray-400 hover:text-red-500 transition-colors\"\n                >\n                  Remove\n                </button>\n              </div>\n\n              <AnalysisModule\n                moduleId={focusedModule}\n                companyData={selectedCompany}\n                inputs={analysisInputs[focusedModule]}\n                results={analysisResults[focusedModule]}\n                onInputChange={(newInputs) => updateAnalysisInputs(focusedModule, newInputs)}\n                isFullscreen={true}\n              />\n            </motion.div>\n          ) : (\n            /* Analysis Canvas State */\n            <motion.div\n              key=\"analysis-canvas\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={springConfig}\n              className=\"space-y-8\"\n            >\n              {/* Company Overview Section */}\n              <CompanyOverview\n                company={selectedCompany}\n                compact={activeModules.length > 0}\n              />\n\n              {/* Analysis Modules Grid */}\n              {activeModules.length > 0 && (\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                  {activeModules.map(moduleId => (\n                    <motion.div\n                      key={moduleId}\n                      initial={{ opacity: 0, scale: 0.9 }}\n                      animate={{ opacity: 1, scale: 1 }}\n                      exit={{ opacity: 0, scale: 0.9 }}\n                      transition={springConfig}\n                      className=\"bg-white rounded-2xl shadow-sm border border-gray-100 overflow-hidden hover:shadow-md transition-shadow duration-300\"\n                    >\n                      <AnalysisModule\n                        moduleId={moduleId}\n                        companyData={selectedCompany}\n                        inputs={analysisInputs[moduleId]}\n                        results={analysisResults[moduleId]}\n                        onInputChange={(newInputs) => updateAnalysisInputs(moduleId, newInputs)}\n                        onFocus={() => focusModule(moduleId)}\n                        onRemove={() => removeModule(moduleId)}\n                        isCompact={true}\n                      />\n                    </motion.div>\n                  ))}\n                </div>\n              )}\n\n              {/* Available Modules */}\n              <div className=\"border-t border-gray-100 pt-8\">\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">\n                  Available Analysis Tools\n                </h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  {availableModules\n                    .filter(module => !activeModules.includes(module.id))\n                    .map(module => {\n                      const Icon = module.icon;\n                      return (\n                        <motion.button\n                          key={module.id}\n                          onClick={() => addModule(module.id)}\n                          whileHover={{ scale: 1.02 }}\n                          whileTap={{ scale: 0.98 }}\n                          className=\"p-6 bg-white rounded-xl border border-gray-200 hover:border-gray-300 transition-all duration-200 text-left group\"\n                        >\n                          <div className={`inline-flex items-center justify-center w-12 h-12 bg-${module.color}-50 rounded-lg mb-3 group-hover:bg-${module.color}-100 transition-colors`}>\n                            <Icon className={`w-6 h-6 text-${module.color}-600`} />\n                          </div>\n                          <h4 className=\"font-medium text-gray-900 mb-1\">\n                            {module.name}\n                          </h4>\n                          <p className=\"text-sm text-gray-600\">\n                            {module.description}\n                          </p>\n                        </motion.button>\n                      );\n                    })}\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default AnalysisCanvas;\n","import { useState, useEffect } from 'react';\n\nconst DCFInputs = ({ inputs, setInputs }) => {\n  const [viewMode, setViewMode] = useState('simple'); // 'simple' or 'detailed'\n  const [validationErrors, setValidationErrors] = useState({});\n\n  // Business logic validation rules\n  const validationRules = {\n    terminalGrowthRate: { min: 0, max: 0.05, label: 'Terminal Growth Rate' },\n    discountRate: { min: 0.02, max: 0.25, label: 'Discount Rate (WACC)' },\n    revenueGrowthRate: { min: -0.5, max: 1.0, label: 'Revenue Growth Rate' },\n    ebitdaMargin: { min: -0.5, max: 1.0, label: 'EBITDA Margin' },\n    taxRate: { min: 0, max: 0.5, label: 'Tax Rate' },\n    projectionYears: { min: 3, max: 10, label: 'Projection Years' },\n    currentRevenue: { min: 0, max: 1e12, label: 'Current Revenue' }\n  };\n\n  const validateInput = (field, value) => {\n    const rule = validationRules[field];\n    if (!rule) return null;\n\n    const numValue = parseFloat(value);\n    if (isNaN(numValue)) {\n      return `${rule.label} must be a valid number`;\n    }\n\n    if (numValue < rule.min || numValue > rule.max) {\n      const minPercent = rule.min >= 0 && rule.min <= 1 ? `${rule.min * 100}%` : rule.min;\n      const maxPercent = rule.max >= 0 && rule.max <= 1 ? `${rule.max * 100}%` : rule.max;\n      return `${rule.label} must be between ${minPercent} and ${maxPercent}`;\n    }\n\n    // Additional business logic validations\n    if (field === 'discountRate' && inputs.terminalGrowthRate && numValue <= inputs.terminalGrowthRate) {\n      return 'Discount rate must be greater than terminal growth rate';\n    }\n\n    return null;\n  };\n\n  const handleChange = (field, value) => {\n    const numValue = parseFloat(value) || 0;\n    const error = validateInput(field, numValue);\n\n    // Update validation errors\n    setValidationErrors(prev => ({\n      ...prev,\n      [field]: error\n    }));\n\n    // Apply bounds to keep values within reasonable ranges\n    let boundedValue = numValue;\n    const rule = validationRules[field];\n    if (rule) {\n      boundedValue = Math.max(rule.min, Math.min(rule.max, numValue));\n    }\n\n    setInputs(prev => ({ ...prev, [field]: boundedValue }));\n  };\n\n  const handleYearlyChange = (year, field, value) => {\n    const yearlyData = inputs.yearlyData || {};\n    const updatedYearlyData = {\n      ...yearlyData,\n      [year]: {\n        ...yearlyData[year],\n        [field]: parseFloat(value) || 0\n      }\n    };\n    setInputs(prev => ({ ...prev, yearlyData: updatedYearlyData }));\n  };\n\n  const handleBalanceSheetChange = (field, value) => {\n    const balanceSheet = inputs.balanceSheet || {};\n    setInputs(prev => ({\n      ...prev,\n      balanceSheet: {\n        ...balanceSheet,\n        [field]: parseFloat(value) || 0\n      }\n    }));\n  };\n\n  // Initialize yearly data when projection years change\n  useEffect(() => {\n    if (inputs.projectionYears && !inputs.yearlyData) {\n      const initialYearlyData = {};\n      for (let year = 1; year <= inputs.projectionYears; year++) {\n        initialYearlyData[year] = {\n          revenueGrowth: inputs.revenueGrowthRate * 100 || 10,\n          ebitdaMargin: inputs.ebitdaMargin * 100 || 20,\n          taxRate: inputs.taxRate * 100 || 25,\n          capexPercent: inputs.capexPercent * 100 || 3,\n          workingCapitalChange: inputs.workingCapitalPercent * 100 || 2,\n          daPercent: 3 // Depreciation & Amortization as % of revenue\n        };\n      }\n      setInputs(prev => ({ ...prev, yearlyData: initialYearlyData }));\n    }\n  }, [inputs.projectionYears, inputs.yearlyData, setInputs]);\n\n  // Initialize balance sheet data\n  useEffect(() => {\n    if (!inputs.balanceSheet) {\n      setInputs(prev => ({\n        ...prev,\n        balanceSheet: {\n          cash: 10000000, // $10M default\n          totalDebt: 5000000, // $5M default\n          sharesOutstanding: 1000000 // 1M shares default\n        }\n      }));\n    }\n  }, [inputs.balanceSheet, setInputs]);\n\n  const renderSimpleView = () => (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n      <div>\n        <label htmlFor=\"currentRevenue\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Current Revenue ($)\n        </label>\n        <input\n          id=\"currentRevenue\"\n          type=\"number\"\n          value={inputs.currentRevenue || 0}\n          onChange={(e) => handleChange('currentRevenue', e.target.value)}\n          className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${\n            validationErrors.currentRevenue ? 'border-red-500' : 'border-gray-300'\n          }`}\n        />\n        {validationErrors.currentRevenue && (\n          <p className=\"text-red-500 text-xs mt-1\">{validationErrors.currentRevenue}</p>\n        )}\n      </div>\n\n      <div>\n        <label htmlFor=\"revenueGrowthRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Revenue Growth Rate (%)\n        </label>\n        <input\n          id=\"revenueGrowthRate\"\n          type=\"number\"\n          step=\"0.01\"\n          value={(inputs.revenueGrowthRate || 0) * 100}\n          onChange={(e) => handleChange('revenueGrowthRate', e.target.value / 100)}\n          className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${\n            validationErrors.revenueGrowthRate ? 'border-red-500' : 'border-gray-300'\n          }`}\n        />\n        {validationErrors.revenueGrowthRate && (\n          <p className=\"text-red-500 text-xs mt-1\">{validationErrors.revenueGrowthRate}</p>\n        )}\n      </div>\n\n      <div>\n        <label htmlFor=\"ebitdaMargin\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          EBITDA Margin (%)\n        </label>\n        <input\n          id=\"ebitdaMargin\"\n          type=\"number\"\n          step=\"0.01\"\n          value={(inputs.ebitdaMargin || 0) * 100}\n          onChange={(e) => handleChange('ebitdaMargin', e.target.value / 100)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"taxRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Tax Rate (%)\n        </label>\n        <input\n          id=\"taxRate\"\n          type=\"number\"\n          step=\"0.01\"\n          value={(inputs.taxRate || 0) * 100}\n          onChange={(e) => handleChange('taxRate', e.target.value / 100)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"terminalGrowthRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Terminal Growth Rate (%)\n        </label>\n        <input\n          id=\"terminalGrowthRate\"\n          type=\"number\"\n          step=\"0.01\"\n          value={(inputs.terminalGrowthRate || 0) * 100}\n          onChange={(e) => handleChange('terminalGrowthRate', e.target.value / 100)}\n          className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${\n            validationErrors.terminalGrowthRate ? 'border-red-500' : 'border-gray-300'\n          }`}\n        />\n        {validationErrors.terminalGrowthRate && (\n          <p className=\"text-red-500 text-xs mt-1\">{validationErrors.terminalGrowthRate}</p>\n        )}\n      </div>\n\n      <div>\n        <label htmlFor=\"discountRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Discount Rate (WACC) (%)\n        </label>\n        <input\n          id=\"discountRate\"\n          type=\"number\"\n          step=\"0.01\"\n          value={(inputs.discountRate || 0) * 100}\n          onChange={(e) => handleChange('discountRate', e.target.value / 100)}\n          className={`w-full px-3 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${\n            validationErrors.discountRate ? 'border-red-500' : 'border-gray-300'\n          }`}\n        />\n        {validationErrors.discountRate && (\n          <p className=\"text-red-500 text-xs mt-1\">{validationErrors.discountRate}</p>\n        )}\n      </div>\n\n      <div>\n        <label htmlFor=\"projectionYears\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n          Projection Years\n        </label>\n        <input\n          id=\"projectionYears\"\n          type=\"number\"\n          min=\"3\"\n          max=\"10\"\n          value={inputs.projectionYears || 5}\n          onChange={(e) => handleChange('projectionYears', e.target.value)}\n          className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n        />\n      </div>\n    </div>\n  );\n\n  const renderDetailedView = () => {\n    const years = Array.from({ length: inputs.projectionYears || 5 }, (_, i) => i + 1);\n    const yearlyData = inputs.yearlyData || {};\n    const balanceSheet = inputs.balanceSheet || {};\n\n    return (\n      <div className=\"space-y-6\">\n        {/* Base Year Inputs */}\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\n          <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Base Year (Current)</h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Current Revenue ($)\n              </label>\n              <input\n                type=\"number\"\n                value={inputs.currentRevenue || 0}\n                onChange={(e) => handleChange('currentRevenue', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Terminal Growth Rate (%)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                value={(inputs.terminalGrowthRate || 0) * 100}\n                onChange={(e) => handleChange('terminalGrowthRate', e.target.value / 100)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Discount Rate (WACC) (%)\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n                value={(inputs.discountRate || 0) * 100}\n                onChange={(e) => handleChange('discountRate', e.target.value / 100)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Year-by-Year Projections Table */}\n        <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n          <div className=\"bg-gray-50 px-4 py-3 border-b border-gray-200\">\n            <h4 className=\"text-md font-semibold text-gray-900\">Annual Projections</h4>\n          </div>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Metric\n                  </th>\n                  {years.map(year => (\n                    <th key={year} className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Year {year}\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                <tr>\n                  <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">Revenue Growth (%)</td>\n                  {years.map(year => (\n                    <td key={year} className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        step=\"0.1\"\n                        value={yearlyData[year]?.revenueGrowth || 0}\n                        onChange={(e) => handleYearlyChange(year, 'revenueGrowth', e.target.value)}\n                        className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </td>\n                  ))}\n                </tr>\n                <tr className=\"bg-gray-50\">\n                  <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">EBITDA Margin (%)</td>\n                  {years.map(year => (\n                    <td key={year} className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        step=\"0.1\"\n                        value={yearlyData[year]?.ebitdaMargin || 0}\n                        onChange={(e) => handleYearlyChange(year, 'ebitdaMargin', e.target.value)}\n                        className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </td>\n                  ))}\n                </tr>\n                <tr>\n                  <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">Tax Rate (%)</td>\n                  {years.map(year => (\n                    <td key={year} className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        step=\"0.1\"\n                        value={yearlyData[year]?.taxRate || 0}\n                        onChange={(e) => handleYearlyChange(year, 'taxRate', e.target.value)}\n                        className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </td>\n                  ))}\n                </tr>\n                <tr className=\"bg-gray-50\">\n                  <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">CapEx (% of Revenue)</td>\n                  {years.map(year => (\n                    <td key={year} className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        step=\"0.1\"\n                        value={yearlyData[year]?.capexPercent || 0}\n                        onChange={(e) => handleYearlyChange(year, 'capexPercent', e.target.value)}\n                        className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </td>\n                  ))}\n                </tr>\n                <tr>\n                  <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">D&A (% of Revenue)</td>\n                  {years.map(year => (\n                    <td key={year} className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        step=\"0.1\"\n                        value={yearlyData[year]?.daPercent || 0}\n                        onChange={(e) => handleYearlyChange(year, 'daPercent', e.target.value)}\n                        className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </td>\n                  ))}\n                </tr>\n                <tr className=\"bg-gray-50\">\n                  <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">Δ Working Capital (% of Rev)</td>\n                  {years.map(year => (\n                    <td key={year} className=\"px-4 py-3\">\n                      <input\n                        type=\"number\"\n                        step=\"0.1\"\n                        value={yearlyData[year]?.workingCapitalChange || 0}\n                        onChange={(e) => handleYearlyChange(year, 'workingCapitalChange', e.target.value)}\n                        className=\"w-full px-2 py-1 text-sm border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-transparent\"\n                      />\n                    </td>\n                  ))}\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Balance Sheet Inputs */}\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\n          <h4 className=\"text-md font-semibold text-gray-900 mb-3\">Balance Sheet Items</h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Cash ($)\n              </label>\n              <input\n                type=\"number\"\n                value={balanceSheet.cash || 0}\n                onChange={(e) => handleBalanceSheetChange('cash', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Total Debt ($)\n              </label>\n              <input\n                type=\"number\"\n                value={balanceSheet.totalDebt || 0}\n                onChange={(e) => handleBalanceSheetChange('totalDebt', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Shares Outstanding\n              </label>\n              <input\n                type=\"number\"\n                value={balanceSheet.sharesOutstanding || 0}\n                onChange={(e) => handleBalanceSheetChange('sharesOutstanding', e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between items-center\">\n        <h3 className=\"text-lg font-semibold text-gray-900\">DCF Model Assumptions</h3>\n        <div className=\"flex space-x-2\">\n          <button\n            onClick={() => setViewMode('simple')}\n            className={`px-4 py-2 text-sm rounded-lg transition-colors ${\n              viewMode === 'simple'\n                ? 'bg-blue-500 text-white'\n                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n            }`}\n          >\n            Simple\n          </button>\n          <button\n            onClick={() => setViewMode('detailed')}\n            className={`px-4 py-2 text-sm rounded-lg transition-colors ${\n              viewMode === 'detailed'\n                ? 'bg-blue-500 text-white'\n                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\n            }`}\n          >\n            Detailed\n          </button>\n        </div>\n      </div>\n\n      {viewMode === 'simple' ? renderSimpleView() : renderDetailedView()}\n    </div>\n  );\n};\n\nexport default DCFInputs;\n","import { motion } from 'framer-motion';\nimport { Calculator, Download, BarChart3, TrendingUp, AlertCircle, ArrowLeft } from 'lucide-react';\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from 'recharts';\n\nimport { calculateEnhancedDCF, calculateSensitivityAnalysis } from '../../utils/dcfCalculations';\n\nimport DCFInputs from './DCFInputs';\n\nconst EnhancedDCFTool = ({ onBack }) => {\n  const [inputs, setInputs] = useState({\n    currentRevenue: 100000000, // $100M\n    projectionYears: 5,\n    terminalGrowthRate: 0.025, // 2.5%\n    discountRate: 0.12, // 12%\n    yearlyData: {},\n    balanceSheet: {}\n  });\n\n  const [results, setResults] = useState(null);\n  const [sensitivityResults, setSensitivityResults] = useState(null);\n  const [activeTab, setActiveTab] = useState('inputs');\n  const [loading, setLoading] = useState(false);\n\n  // Calculate DCF when inputs change\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      calculateDCF();\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [inputs]);\n\n  const calculateDCF = async() => {\n    if (!inputs.currentRevenue || inputs.currentRevenue <= 0) {\n      setResults(null);\n      setSensitivityResults(null);\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const dcfResults = calculateEnhancedDCF(inputs);\n      setResults(dcfResults);\n\n      // Calculate sensitivity analysis\n      const sensitivity = calculateSensitivityAnalysis(inputs);\n      setSensitivityResults(sensitivity);\n    } catch (error) {\n      console.error('DCF calculation error:', error);\n      setResults(null);\n      setSensitivityResults(null);\n    }\n    setLoading(false);\n  };\n\n  const formatCurrency = (value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  const formatPercent = (value) => {\n    if (!value && value !== 0) return '0%';\n    return `${(value).toFixed(1)}%`;\n  };\n\n  const generateChartData = () => {\n    if (!results) return [];\n\n    return results.years.map((year, index) => ({\n      year: `Year ${year}`,\n      freeCashFlow: results.freeCashFlows[index],\n      presentValue: results.presentValues[index]\n    }));\n  };\n\n  const renderProjectionTable = () => {\n    if (!results?.projectionTable) return null;\n\n    return (\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">Financial Projections</h3>\n        </div>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Metric\n                </th>\n                {results.projectionTable.map((row, index) => (\n                  <th key={index} className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Year {row.year}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              <tr>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">Revenue</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    {formatCurrency(row.revenue)}\n                  </td>\n                ))}\n              </tr>\n              <tr className=\"bg-gray-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">Revenue Growth %</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    {formatPercent(row.revenueGrowth)}\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">EBITDA</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    {formatCurrency(row.ebitda)}\n                  </td>\n                ))}\n              </tr>\n              <tr className=\"bg-gray-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">EBIT</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    {formatCurrency(row.ebit)}\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">NOPAT</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    {formatCurrency(row.nopat)}\n                  </td>\n                ))}\n              </tr>\n              <tr className=\"bg-gray-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">CapEx</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    {formatCurrency(row.capex)}\n                  </td>\n                ))}\n              </tr>\n              <tr>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">Δ Working Capital</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right\">\n                    {formatCurrency(row.deltaWorkingCapital)}\n                  </td>\n                ))}\n              </tr>\n              <tr className=\"bg-blue-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-blue-900\">Free Cash Flow</td>\n                {results.projectionTable.map((row, index) => (\n                  <td key={index} className=\"px-6 py-4 whitespace-nowrap text-sm font-bold text-blue-900 text-right\">\n                    {formatCurrency(row.freeCashFlow)}\n                  </td>\n                ))}\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  };\n\n  const renderSensitivityTable = () => {\n    if (!sensitivityResults) return null;\n\n    const { matrix, waccRange, terminalGrowthRange } = sensitivityResults;\n\n    return (\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        <div className=\"bg-gray-50 px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">\n            Sensitivity Analysis - Implied Share Price\n          </h3>\n          <p className=\"text-sm text-gray-600 mt-1\">\n            Impact of WACC and Terminal Growth Rate changes on valuation\n          </p>\n        </div>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full\">\n            <thead>\n              <tr>\n                <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 bg-gray-50\">\n                  WACC \\ Terminal Growth\n                </th>\n                {terminalGrowthRange.map(rate => (\n                  <th key={rate} className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 bg-gray-50\">\n                    {formatPercent(rate)}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {matrix.map((row, rowIndex) => (\n                <tr key={rowIndex} className={rowIndex % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\n                  <td className=\"px-4 py-3 text-sm font-medium text-gray-900\">\n                    {formatPercent(waccRange[rowIndex])}\n                  </td>\n                  {row.map((cell, cellIndex) => {\n                    const isBaseCase = rowIndex === Math.floor(matrix.length / 2) &&\n                                      cellIndex === Math.floor(row.length / 2);\n                    return (\n                      <td\n                        key={cellIndex}\n                        className={`px-4 py-3 text-sm text-center ${\n                          isBaseCase ? 'bg-blue-100 font-bold text-blue-900' : 'text-gray-900'\n                        }`}\n                      >\n                        ${cell.sharePrice.toFixed(2)}\n                      </td>\n                    );\n                  })}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  };\n\n  const tabs = [\n    { id: 'inputs', name: 'Model Inputs', icon: Calculator },\n    { id: 'results', name: 'Results', icon: TrendingUp },\n    { id: 'charts', name: 'Charts', icon: BarChart3 },\n    { id: 'sensitivity', name: 'Sensitivity', icon: AlertCircle }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-6 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center mb-4\">\n            {onBack && (\n              <button\n                onClick={onBack}\n                className=\"flex items-center text-gray-600 hover:text-gray-900 mr-4\"\n              >\n                <ArrowLeft className=\"w-5 h-5 mr-1\" />\n                Back to Overview\n              </button>\n            )}\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            Enhanced DCF Analysis Tool\n          </h1>\n          <p className=\"text-gray-600\">\n            Professional discounted cash flow modeling with year-by-year projections and sensitivity analysis\n          </p>\n        </div>\n\n        {/* Navigation Tabs */}\n        <div className=\"border-b border-gray-200 mb-8\">\n          <nav className=\"-mb-px flex space-x-8\">\n            {tabs.map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`flex items-center py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <Icon className=\"w-4 h-4 mr-2\" />\n                  {tab.name}\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* Tab Content */}\n        <motion.div\n          key={activeTab}\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"space-y-8\"\n        >\n          {activeTab === 'inputs' && (\n            <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n              <DCFInputs inputs={inputs} setInputs={setInputs} />\n            </div>\n          )}\n\n          {activeTab === 'results' && (\n            <div className=\"space-y-6\">\n              {loading && (\n                <div className=\"text-center py-8\">\n                  <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\" />\n                  <p className=\"mt-2 text-gray-600\">Calculating...</p>\n                </div>\n              )}\n\n              {results && !loading && (\n                <>\n                  {/* Key Metrics */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n                    <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                      <div className=\"text-sm font-medium text-gray-500\">Enterprise Value</div>\n                      <div className=\"text-2xl font-bold text-gray-900 mt-1\">\n                        {formatCurrency(results.enterpriseValue)}\n                      </div>\n                    </div>\n                    <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                      <div className=\"text-sm font-medium text-gray-500\">Equity Value</div>\n                      <div className=\"text-2xl font-bold text-gray-900 mt-1\">\n                        {formatCurrency(results.equityValue)}\n                      </div>\n                    </div>\n                    <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                      <div className=\"text-sm font-medium text-gray-500\">Share Price</div>\n                      <div className=\"text-2xl font-bold text-gray-900 mt-1\">\n                        ${results.impliedSharePrice.toFixed(2)}\n                      </div>\n                    </div>\n                    <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                      <div className=\"text-sm font-medium text-gray-500\">Terminal Value</div>\n                      <div className=\"text-2xl font-bold text-gray-900 mt-1\">\n                        {formatCurrency(results.presentValueTerminal)}\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Projection Table */}\n                  {renderProjectionTable()}\n\n                  {/* Valuation Bridge */}\n                  <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Valuation Bridge</h3>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-gray-600\">PV of Projection Period FCFs</span>\n                        <span className=\"font-semibold\">{formatCurrency(results.cumulativePV)}</span>\n                      </div>\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-gray-600\">PV of Terminal Value</span>\n                        <span className=\"font-semibold\">{formatCurrency(results.presentValueTerminal)}</span>\n                      </div>\n                      <div className=\"border-t pt-3 flex justify-between items-center\">\n                        <span className=\"text-gray-900 font-semibold\">Enterprise Value</span>\n                        <span className=\"font-bold text-lg\">{formatCurrency(results.enterpriseValue)}</span>\n                      </div>\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-gray-600\">Less: Net Debt</span>\n                        <span className=\"font-semibold\">{formatCurrency(results.netDebt)}</span>\n                      </div>\n                      <div className=\"border-t pt-3 flex justify-between items-center\">\n                        <span className=\"text-gray-900 font-semibold\">Equity Value</span>\n                        <span className=\"font-bold text-lg text-blue-600\">{formatCurrency(results.equityValue)}</span>\n                      </div>\n                    </div>\n                  </div>\n                </>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'charts' && (\n            <div className=\"space-y-6\">\n              {results && (\n                <>\n                  <div className=\"bg-white p-6 rounded-lg border border-gray-200\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                      Cash Flow Projections\n                    </h3>\n                    <div className=\"h-96\">\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\n                        <LineChart data={generateChartData()}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis dataKey=\"year\" />\n                          <YAxis\n                            tickFormatter={(value) =>\n                              new Intl.NumberFormat('en-US', {\n                                style: 'currency',\n                                currency: 'USD',\n                                notation: 'compact'\n                              }).format(value)\n                            }\n                          />\n                          <Tooltip\n                            formatter={(value) => [\n                              new Intl.NumberFormat('en-US', {\n                                style: 'currency',\n                                currency: 'USD'\n                              }).format(value)\n                            ]}\n                          />\n                          <Legend />\n                          <Line\n                            type=\"monotone\"\n                            dataKey=\"freeCashFlow\"\n                            stroke=\"#3b82f6\"\n                            strokeWidth={2}\n                            name=\"Free Cash Flow\"\n                          />\n                          <Line\n                            type=\"monotone\"\n                            dataKey=\"presentValue\"\n                            stroke=\"#10b981\"\n                            strokeWidth={2}\n                            name=\"Present Value\"\n                          />\n                        </LineChart>\n                      </ResponsiveContainer>\n                    </div>\n                  </div>\n                </>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'sensitivity' && (\n            <div className=\"space-y-6\">\n              {sensitivityResults && renderSensitivityTable()}\n            </div>\n          )}\n        </motion.div>\n\n        {/* Export Button */}\n        {results && (\n          <div className=\"mt-8 text-center\">\n            <button\n              className=\"inline-flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 transition-colors\"\n              onClick={() => {\n                // Export functionality would go here\n                console.log('Export results:', results);\n              }}\n            >\n              <Download className=\"w-5 h-5 mr-2\" />\n              Export Results\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EnhancedDCFTool;\n","/**\n * Reactive Calculation Engine for The Living Model\n * Provides instantaneous recalculation of financial models when inputs change\n */\n\nimport { calculateEnhancedDCF, calculateSensitivityAnalysis } from '../utils/dcfCalculations';\n\nimport realTimeDataService from './realTimeDataService';\n\nclass ReactiveCalculationEngine {\n  constructor() {\n    this.modelSubscriptions = new Map();\n    this.calculationQueue = [];\n    this.isProcessing = false;\n    this.lastCalculationTime = 0;\n    this.throttleDelay = 50; // 50ms throttle for smooth updates\n\n    // Performance monitoring\n    this.calculationTimes = [];\n    this.maxCalculationHistory = 100;\n  }\n\n  /**\n   * Create a reactive model that automatically recalculates when inputs change\n   */\n  createReactiveModel(modelId, modelType, initialInputs, callback) {\n    const model = {\n      id: modelId,\n      type: modelType,\n      inputs: { ...initialInputs },\n      result: null,\n      callback,\n      realTimeFeeds: new Map(),\n      lastUpdate: Date.now(),\n      dependencies: new Set()\n    };\n\n    this.modelSubscriptions.set(modelId, model);\n\n    // Initial calculation\n    this.calculateModel(model);\n\n    // Setup real-time data subscriptions if needed\n    this.setupRealTimeFeeds(model);\n\n    return {\n      updateInput: (path, value) => this.updateModelInput(modelId, path, value),\n      updateInputs: (updates) => this.updateModelInputs(modelId, updates),\n      getResult: () => model.result,\n      destroy: () => this.destroyModel(modelId),\n      addDependency: (dataType, symbol) => this.addModelDependency(modelId, dataType, symbol)\n    };\n  }\n\n  /**\n   * Update a single input in the model\n   */\n  updateModelInput(modelId, path, value) {\n    const model = this.modelSubscriptions.get(modelId);\n    if (!model) return;\n\n    // Update the input using path notation (e.g., 'yearlyData.1.revenueGrowth')\n    this.setNestedValue(model.inputs, path, value);\n    model.lastUpdate = Date.now();\n\n    // Queue the calculation\n    this.queueCalculation(model);\n  }\n\n  /**\n   * Update multiple inputs at once\n   */\n  updateModelInputs(modelId, updates) {\n    const model = this.modelSubscriptions.get(modelId);\n    if (!model) return;\n\n    Object.entries(updates).forEach(([path, value]) => {\n      this.setNestedValue(model.inputs, path, value);\n    });\n\n    model.lastUpdate = Date.now();\n    this.queueCalculation(model);\n  }\n\n  /**\n   * Add real-time data dependency\n   */\n  addModelDependency(modelId, dataType, symbol) {\n    const model = this.modelSubscriptions.get(modelId);\n    if (!model) return;\n\n    const dependencyKey = `${dataType}_${symbol}`;\n    model.dependencies.add(dependencyKey);\n\n    // Subscribe to real-time updates\n    const unsubscribe = realTimeDataService.subscribe(dataType, symbol, (data) => {\n      this.handleRealTimeUpdate(modelId, dataType, symbol, data);\n    });\n\n    model.realTimeFeeds.set(dependencyKey, unsubscribe);\n  }\n\n  /**\n   * Handle real-time data updates\n   */\n  handleRealTimeUpdate(modelId, dataType, symbol, data) {\n    const model = this.modelSubscriptions.get(modelId);\n    if (!model) return;\n\n    // Update the model inputs based on real-time data\n    switch (dataType) {\n      case 'stock_price':\n        this.updateModelInput(modelId, 'currentStockPrice', data.price);\n        break;\n      case 'interest_rates':\n        this.updateModelInput(modelId, 'discountRate', data.rate / 100);\n        break;\n      case 'bond_yields':\n        this.updateModelInput(modelId, 'riskFreeRate', data.yield / 100);\n        break;\n      default:\n        // Store in realTimeData section\n        this.updateModelInput(modelId, `realTimeData.${dataType}.${symbol}`, data);\n    }\n  }\n\n  /**\n   * Queue a calculation with throttling\n   */\n  queueCalculation(model) {\n    if (!this.calculationQueue.includes(model)) {\n      this.calculationQueue.push(model);\n    }\n\n    if (!this.isProcessing) {\n      this.processCalculationQueue();\n    }\n  }\n\n  /**\n   * Process the calculation queue with throttling\n   */\n  async processCalculationQueue() {\n    if (this.isProcessing) return;\n\n    this.isProcessing = true;\n\n    while (this.calculationQueue.length > 0) {\n      const now = Date.now();\n      const timeSinceLastCalculation = now - this.lastCalculationTime;\n\n      if (timeSinceLastCalculation < this.throttleDelay) {\n        await new Promise(resolve =>\n          setTimeout(resolve, this.throttleDelay - timeSinceLastCalculation)\n        );\n      }\n\n      const model = this.calculationQueue.shift();\n      if (model) {\n        await this.calculateModel(model);\n        this.lastCalculationTime = Date.now();\n      }\n    }\n\n    this.isProcessing = false;\n  }\n\n  /**\n   * Calculate the model based on its type\n   */\n  async calculateModel(model) {\n    const startTime = performance.now();\n\n    try {\n      let result = null;\n\n      switch (model.type) {\n        case 'dcf':\n          result = calculateEnhancedDCF(model.inputs);\n          break;\n        case 'sensitivity':\n          result = calculateSensitivityAnalysis(model.inputs);\n          break;\n        default:\n          console.warn(`Unknown model type: ${model.type}`);\n          return;\n      }\n\n      model.result = result;\n\n      // Track performance\n      const calculationTime = performance.now() - startTime;\n      this.trackCalculationPerformance(calculationTime);\n\n      // Notify callback\n      if (model.callback && typeof model.callback === 'function') {\n        model.callback(result, model.inputs);\n      }\n\n    } catch (error) {\n      console.error(`Error calculating model ${model.id}:`, error);\n\n      if (model.callback && typeof model.callback === 'function') {\n        model.callback(null, model.inputs, error);\n      }\n    }\n  }\n\n  /**\n   * Setup real-time data feeds for the model\n   */\n  setupRealTimeFeeds(model) {\n    // Auto-detect dependencies based on model inputs\n    if (model.inputs.symbol) {\n      this.addModelDependency(model.id, 'stock_price', model.inputs.symbol);\n    }\n\n    if (model.inputs.trackInterestRates !== false) {\n      this.addModelDependency(model.id, 'interest_rates', 'USD_10Y');\n    }\n  }\n\n  /**\n   * Destroy a model and clean up subscriptions\n   */\n  destroyModel(modelId) {\n    const model = this.modelSubscriptions.get(modelId);\n    if (!model) return;\n\n    // Unsubscribe from real-time feeds\n    model.realTimeFeeds.forEach(unsubscribe => unsubscribe());\n\n    // Remove from subscriptions\n    this.modelSubscriptions.delete(modelId);\n  }\n\n  /**\n   * Set nested value using path notation\n   */\n  setNestedValue(obj, path, value) {\n    const keys = path.split('.');\n    let current = obj;\n\n    for (let i = 0; i < keys.length - 1; i++) {\n      const key = keys[i];\n      if (!(key in current) || typeof current[key] !== 'object') {\n        current[key] = {};\n      }\n      current = current[key];\n    }\n\n    current[keys[keys.length - 1]] = value;\n  }\n\n  /**\n   * Track calculation performance\n   */\n  trackCalculationPerformance(time) {\n    this.calculationTimes.push(time);\n\n    if (this.calculationTimes.length > this.maxCalculationHistory) {\n      this.calculationTimes.shift();\n    }\n  }\n\n  /**\n   * Get performance statistics\n   */\n  getPerformanceStats() {\n    if (this.calculationTimes.length === 0) {\n      return { avgTime: 0, maxTime: 0, minTime: 0, totalCalculations: 0 };\n    }\n\n    const times = this.calculationTimes;\n    const avgTime = times.reduce((sum, time) => sum + time, 0) / times.length;\n    const maxTime = Math.max(...times);\n    const minTime = Math.min(...times);\n\n    return {\n      avgTime: Math.round(avgTime * 100) / 100,\n      maxTime: Math.round(maxTime * 100) / 100,\n      minTime: Math.round(minTime * 100) / 100,\n      totalCalculations: times.length\n    };\n  }\n\n  /**\n   * Get all active models\n   */\n  getActiveModels() {\n    return Array.from(this.modelSubscriptions.keys());\n  }\n\n  /**\n   * Get model by ID\n   */\n  getModel(modelId) {\n    return this.modelSubscriptions.get(modelId);\n  }\n}\n\nconst reactiveCalculationEngine = new ReactiveCalculationEngine();\nexport default reactiveCalculationEngine;\n","import React, { useState, useCallback, useEffect } from 'react';\n\nimport Icon from '../AppIcon';\nimport { Card } from '../ui/Card';\n\nconst DynamicTimePeriodControl = ({\n  initialYears = 5,\n  minYears = 1,\n  maxYears = 15,\n  onYearsChange,\n  className = ''\n}) => {\n  const [years, setYears] = useState(initialYears);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartX, setDragStartX] = useState(0);\n  const [dragStartYears, setDragStartYears] = useState(0);\n\n  const handleYearsChange = useCallback((newYears) => {\n    const clampedYears = Math.max(minYears, Math.min(maxYears, Math.round(newYears)));\n    if (clampedYears !== years) {\n      setYears(clampedYears);\n      onYearsChange?.(clampedYears);\n    }\n  }, [years, minYears, maxYears, onYearsChange]);\n\n  const handleMouseDown = useCallback((e) => {\n    e.preventDefault();\n    setIsDragging(true);\n    setDragStartX(e.clientX);\n    setDragStartYears(years);\n    document.body.style.cursor = 'ew-resize';\n  }, [years]);\n\n  const handleMouseMove = useCallback((e) => {\n    if (!isDragging) return;\n\n    const deltaX = e.clientX - dragStartX;\n    const sensitivity = 0.02; // Adjust sensitivity\n    const deltaYears = deltaX * sensitivity;\n    const newYears = dragStartYears + deltaYears;\n\n    handleYearsChange(newYears);\n  }, [isDragging, dragStartX, dragStartYears, handleYearsChange]);\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false);\n    document.body.style.cursor = 'default';\n  }, []);\n\n  useEffect(() => {\n    if (isDragging) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDragging, handleMouseMove, handleMouseUp]);\n\n  const handleSliderChange = (e) => {\n    const newYears = parseInt(e.target.value);\n    handleYearsChange(newYears);\n  };\n\n  const handleQuickSelect = (selectedYears) => {\n    handleYearsChange(selectedYears);\n  };\n\n  const getTimelineMarkers = () => {\n    const markers = [];\n    const step = years <= 5 ? 1 : years <= 10 ? 2 : 3;\n\n    for (let i = 1; i <= years; i += step) {\n      const percentage = (i / years) * 100;\n      markers.push(\n        <div\n          key={i}\n          className=\"absolute flex flex-col items-center transform -translate-x-1/2\"\n          style={{ left: `${percentage}%` }}\n        >\n          <div className=\"w-px h-3 bg-blue-400\" />\n          <span className=\"text-xs text-gray-400 mt-1\">Y{i}</span>\n        </div>\n      );\n    }\n\n    return markers;\n  };\n\n  return (\n    <Card className={`bg-gray-800 border-gray-700 p-6 ${className}`}>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <Icon name=\"Clock\" className=\"w-5 h-5 text-blue-400\" />\n            <h3 className=\"text-lg font-semibold text-white\">Projection Period</h3>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-400\">Years:</span>\n            <span className=\"text-xl font-bold text-blue-400\">{years}</span>\n          </div>\n        </div>\n\n        {/* Interactive Timeline */}\n        <div className=\"space-y-4\">\n          <div className=\"relative h-12\">\n            {/* Timeline Track */}\n            <div className=\"absolute top-4 left-0 right-0 h-2 bg-gray-700 rounded-full overflow-hidden\">\n              <div\n                className=\"h-full bg-gradient-to-r from-blue-600 to-blue-400 rounded-full transition-all duration-200\"\n                style={{ width: `${(years / maxYears) * 100}%` }}\n              />\n            </div>\n\n            {/* Draggable Handle */}\n            <div\n              className=\"absolute top-2 w-6 h-6 bg-blue-500 rounded-full border-2 border-white shadow-lg cursor-ew-resize transform -translate-x-1/2 hover:bg-blue-400 transition-colors duration-200\"\n              style={{ left: `${(years / maxYears) * 100}%` }}\n              onMouseDown={handleMouseDown}\n            >\n              <div className=\"absolute inset-0 rounded-full animate-pulse bg-blue-400 opacity-30\" />\n            </div>\n\n            {/* Timeline Markers */}\n            {getTimelineMarkers()}\n          </div>\n\n          {/* Range Slider */}\n          <div className=\"px-2\">\n            <input\n              type=\"range\"\n              min={minYears}\n              max={maxYears}\n              value={years}\n              onChange={handleSliderChange}\n              className=\"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer slider\"\n              style={{\n                background: `linear-gradient(to right, #3b82f6 0%, #3b82f6 ${(years / maxYears) * 100}%, #374151 ${(years / maxYears) * 100}%, #374151 100%)`\n              }}\n            />\n          </div>\n        </div>\n\n        {/* Quick Select Buttons */}\n        <div className=\"flex justify-center space-x-2\">\n          {[3, 5, 7, 10, 12, 15].filter(y => y >= minYears && y <= maxYears).map(quickYears => (\n            <button\n              key={quickYears}\n              onClick={() => handleQuickSelect(quickYears)}\n              className={`px-3 py-1 rounded-full text-sm font-medium transition-all duration-200 ${\n                years === quickYears\n                  ? 'bg-blue-600 text-white shadow-lg'\n                  : 'bg-gray-700 text-gray-300 hover:bg-gray-600 hover:text-white'\n              }`}\n            >\n              {quickYears}Y\n            </button>\n          ))}\n        </div>\n\n        {/* Period Description */}\n        <div className=\"text-center\">\n          <p className=\"text-sm text-gray-400\">\n            {years <= 3 && 'Short-term focus with higher accuracy'}\n            {years > 3 && years <= 7 && 'Balanced projection period for most analyses'}\n            {years > 7 && years <= 10 && 'Extended projection for growth companies'}\n            {years > 10 && 'Long-term strategic planning horizon'}\n          </p>\n        </div>\n\n        {/* Real-time Impact Indicator */}\n        <div className=\"flex items-center justify-center space-x-2 text-xs text-gray-500\">\n          <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\" />\n          <span>Model updates automatically</span>\n        </div>\n      </div>\n\n      <style jsx>{`\n        .slider::-webkit-slider-thumb {\n          appearance: none;\n          width: 20px;\n          height: 20px;\n          border-radius: 50%;\n          background: #3b82f6;\n          border: 2px solid white;\n          cursor: pointer;\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n          transition: all 0.2s ease;\n        }\n        \n        .slider::-webkit-slider-thumb:hover {\n          background: #2563eb;\n          transform: scale(1.1);\n        }\n        \n        .slider::-webkit-slider-track {\n          height: 8px;\n          border-radius: 4px;\n          background: transparent;\n        }\n        \n        .slider::-moz-range-thumb {\n          width: 20px;\n          height: 20px;\n          border-radius: 50%;\n          background: #3b82f6;\n          border: 2px solid white;\n          cursor: pointer;\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n        }\n        \n        .slider::-moz-range-track {\n          height: 8px;\n          border-radius: 4px;\n        }\n      `}\n      </style>\n    </Card>\n  );\n};\n\nexport default DynamicTimePeriodControl;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\n\nimport reactiveCalculationEngine from '../../services/reactiveCalculationEngine';\nimport realTimeDataService from '../../services/realTimeDataService';\nimport Icon from '../AppIcon';\nimport Button from '../ui/Button';\nimport { Card } from '../ui/Card';\nimport Input from '../ui/Input';\nimport Select from '../ui/Select';\n\nimport DynamicTimePeriodControl from './DynamicTimePeriodControl';\n\n\nconst LivingModelDCF = ({ symbol, onBack }) => {\n  const [modelId] = useState(`dcf_${Date.now()}`);\n  const [result, setResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [realTimeData, setRealTimeData] = useState({});\n  const [lastUpdateTime, setLastUpdateTime] = useState(null);\n  const modelRef = useRef(null);\n\n  // Model inputs with reactive updates\n  const [inputs, setInputs] = useState({\n    currentRevenue: 10000000000, // $10B\n    projectionYears: 5,\n    terminalGrowthRate: 0.025,\n    discountRate: 0.12,\n    symbol: symbol || 'AAPL',\n    trackRealTime: true,\n    yearlyData: {\n      1: { revenueGrowth: 15, ebitdaMargin: 25, taxRate: 25, capexPercent: 4, daPercent: 3, workingCapitalChange: 2 },\n      2: { revenueGrowth: 12, ebitdaMargin: 24, taxRate: 25, capexPercent: 4, daPercent: 3, workingCapitalChange: 2 },\n      3: { revenueGrowth: 10, ebitdaMargin: 23, taxRate: 25, capexPercent: 3, daPercent: 3, workingCapitalChange: 1 },\n      4: { revenueGrowth: 8, ebitdaMargin: 22, taxRate: 25, capexPercent: 3, daPercent: 3, workingCapitalChange: 1 },\n      5: { revenueGrowth: 6, ebitdaMargin: 21, taxRate: 25, capexPercent: 3, daPercent: 3, workingCapitalChange: 1 }\n    },\n    balanceSheet: {\n      cash: 100000000,\n      totalDebt: 50000000,\n      sharesOutstanding: 1000000000\n    }\n  });\n\n  // Initialize the reactive model\n  useEffect(() => {\n    const model = reactiveCalculationEngine.createReactiveModel(\n      modelId,\n      'dcf',\n      inputs,\n      (newResult, newInputs, calcError) => {\n        setResult(newResult);\n        setError(calcError);\n        setLastUpdateTime(new Date());\n        setIsLoading(false);\n      }\n    );\n\n    modelRef.current = model;\n\n    // Setup real-time data feeds if enabled\n    if (inputs.trackRealTime && inputs.symbol) {\n      model.addDependency('stock_price', inputs.symbol);\n      model.addDependency('interest_rates', 'USD_10Y');\n      model.addDependency('bond_yields', 'US10Y');\n    }\n\n    return () => {\n      if (modelRef.current) {\n        modelRef.current.destroy();\n      }\n    };\n  }, [modelId]);\n\n  // Subscribe to real-time data for display\n  useEffect(() => {\n    if (!inputs.trackRealTime || !inputs.symbol) return;\n\n    const subscriptions = [\n      { dataType: 'stock_price', symbol: inputs.symbol },\n      { dataType: 'interest_rates', symbol: 'USD_10Y' },\n      { dataType: 'bond_yields', symbol: 'US10Y' },\n      { dataType: 'volatility_index', symbol: 'VIX' }\n    ];\n\n    const unsubscribe = realTimeDataService.subscribeMultiple(\n      subscriptions.map(({ dataType, symbol }) => ({\n        dataType,\n        symbol,\n        callback: (data) => {\n          setRealTimeData(prev => ({\n            ...prev,\n            [`${dataType}_${symbol}`]: data\n          }));\n        }\n      }))\n    );\n\n    return unsubscribe;\n  }, [inputs.trackRealTime, inputs.symbol]);\n\n  // Handle input changes with instant recalculation\n  const updateInput = useCallback((path, value) => {\n    setIsLoading(true);\n    if (modelRef.current) {\n      modelRef.current.updateInput(path, value);\n    }\n\n    setInputs(prev => {\n      const updated = { ...prev };\n      const keys = path.split('.');\n      let current = updated;\n\n      for (let i = 0; i < keys.length - 1; i++) {\n        if (!(keys[i] in current)) current[keys[i]] = {};\n        current = current[keys[i]];\n      }\n\n      current[keys[keys.length - 1]] = value;\n      return updated;\n    });\n  }, []);\n\n  const updateYearlyData = useCallback((year, field, value) => {\n    updateInput(`yearlyData.${year}.${field}`, parseFloat(value) || 0);\n  }, [updateInput]);\n\n  const handleProjectionYearsChange = useCallback((newYears) => {\n    updateInput('projectionYears', newYears);\n\n    // Extend or trim yearly data\n    setInputs(prev => {\n      const updated = { ...prev };\n      updated.projectionYears = newYears;\n\n      // Add new years with reasonable defaults\n      for (let year = Object.keys(prev.yearlyData).length + 1; year <= newYears; year++) {\n        if (!updated.yearlyData[year]) {\n          const prevYear = updated.yearlyData[year - 1] || updated.yearlyData[Object.keys(updated.yearlyData).pop()];\n          updated.yearlyData[year] = {\n            revenueGrowth: Math.max(2, (prevYear?.revenueGrowth || 10) - 2),\n            ebitdaMargin: prevYear?.ebitdaMargin || 20,\n            taxRate: prevYear?.taxRate || 25,\n            capexPercent: prevYear?.capexPercent || 3,\n            daPercent: prevYear?.daPercent || 3,\n            workingCapitalChange: prevYear?.workingCapitalChange || 1\n          };\n        }\n      }\n\n      // Remove years beyond the new projection period\n      Object.keys(updated.yearlyData).forEach(year => {\n        if (parseInt(year) > newYears) {\n          delete updated.yearlyData[year];\n        }\n      });\n\n      return updated;\n    });\n  }, [updateInput]);\n\n  const toggleRealTimeTracking = useCallback(() => {\n    const newValue = !inputs.trackRealTime;\n    updateInput('trackRealTime', newValue);\n\n    if (newValue && inputs.symbol && modelRef.current) {\n      modelRef.current.addDependency('stock_price', inputs.symbol);\n      modelRef.current.addDependency('interest_rates', 'USD_10Y');\n    }\n  }, [inputs.trackRealTime, inputs.symbol, updateInput]);\n\n  const formatCurrency = (value, decimals = 0) => {\n    if (!value) return '$0';\n    const absValue = Math.abs(value);\n    if (absValue >= 1e12) return `$${(value / 1e12).toFixed(decimals)}T`;\n    if (absValue >= 1e9) return `$${(value / 1e9).toFixed(decimals)}B`;\n    if (absValue >= 1e6) return `$${(value / 1e6).toFixed(decimals)}M`;\n    if (absValue >= 1e3) return `$${(value / 1e3).toFixed(decimals)}K`;\n    return `$${value.toFixed(decimals)}`;\n  };\n\n  const getRealTimeIndicator = (dataType, symbol) => {\n    const key = `${dataType}_${symbol}`;\n    const data = realTimeData[key];\n    if (!data) return null;\n\n    return (\n      <div className=\"flex items-center space-x-2 text-sm\">\n        <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\" />\n        <span className=\"text-gray-300\">\n          {dataType === 'stock_price' && `$${data.price?.toFixed(2)}`}\n          {dataType === 'interest_rates' && `${data.rate?.toFixed(2)}%`}\n          {dataType === 'bond_yields' && `${data.yield?.toFixed(2)}%`}\n          {dataType === 'volatility_index' && `${data.volatility?.toFixed(1)}`}\n        </span>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-8\">\n          <div className=\"flex items-center space-x-4\">\n            <Button\n              onClick={onBack}\n              className=\"bg-gray-700 hover:bg-gray-600\"\n              size=\"sm\"\n            >\n              <Icon name=\"ArrowLeft\" className=\"w-4 h-4 mr-2\" />\n              Back\n            </Button>\n            <div>\n              <h1 className=\"text-3xl font-bold\">Living Model DCF</h1>\n              <div className=\"flex items-center space-x-4 mt-2\">\n                <p className=\"text-gray-400\">Real-time, reactive financial modeling</p>\n                {lastUpdateTime && (\n                  <span className=\"text-xs text-green-400\">\n                    Updated: {lastUpdateTime.toLocaleTimeString()}\n                  </span>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Real-time Toggle */}\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={toggleRealTimeTracking}\n              className={`flex items-center space-x-2 px-4 py-2 rounded-lg transition-colors ${\n                inputs.trackRealTime\n                  ? 'bg-green-600 hover:bg-green-700 text-white'\n                  : 'bg-gray-700 hover:bg-gray-600 text-gray-300'\n              }`}\n            >\n              <Icon name={inputs.trackRealTime ? 'Zap' : 'ZapOff'} className=\"w-4 h-4\" />\n              <span>Real-time: {inputs.trackRealTime ? 'ON' : 'OFF'}</span>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Left Panel - Inputs */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            {/* Company & Basic Inputs */}\n            <Card className=\"bg-gray-800 border-gray-700 p-6\">\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n                <Icon name=\"Building\" className=\"w-5 h-5 mr-2 text-blue-400\" />\n                Company Basics\n              </h3>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Symbol\n                  </label>\n                  <Input\n                    value={inputs.symbol}\n                    onChange={(e) => updateInput('symbol', e.target.value.toUpperCase())}\n                    className=\"bg-gray-700 border-gray-600\"\n                    placeholder=\"AAPL\"\n                  />\n                  {inputs.trackRealTime && getRealTimeIndicator('stock_price', inputs.symbol)}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Current Revenue\n                  </label>\n                  <Input\n                    type=\"number\"\n                    value={inputs.currentRevenue}\n                    onChange={(e) => updateInput('currentRevenue', parseFloat(e.target.value) || 0)}\n                    className=\"bg-gray-700 border-gray-600\"\n                    step=\"1000000\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Discount Rate (WACC)\n                  </label>\n                  <div className=\"flex items-center space-x-2\">\n                    <Input\n                      type=\"number\"\n                      value={(inputs.discountRate * 100).toFixed(1)}\n                      onChange={(e) => updateInput('discountRate', parseFloat(e.target.value) / 100 || 0)}\n                      className=\"bg-gray-700 border-gray-600\"\n                      step=\"0.1\"\n                      min=\"0\"\n                      max=\"50\"\n                    />\n                    <span className=\"text-gray-400\">%</span>\n                  </div>\n                  {inputs.trackRealTime && getRealTimeIndicator('interest_rates', 'USD_10Y')}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-300 mb-2\">\n                    Terminal Growth Rate\n                  </label>\n                  <div className=\"flex items-center space-x-2\">\n                    <Input\n                      type=\"number\"\n                      value={(inputs.terminalGrowthRate * 100).toFixed(1)}\n                      onChange={(e) => updateInput('terminalGrowthRate', parseFloat(e.target.value) / 100 || 0)}\n                      className=\"bg-gray-700 border-gray-600\"\n                      step=\"0.1\"\n                      min=\"0\"\n                      max=\"10\"\n                    />\n                    <span className=\"text-gray-400\">%</span>\n                  </div>\n                </div>\n              </div>\n            </Card>\n\n            {/* Dynamic Time Period Control */}\n            <DynamicTimePeriodControl\n              initialYears={inputs.projectionYears}\n              onYearsChange={handleProjectionYearsChange}\n            />\n\n            {/* Real-time Market Data */}\n            {inputs.trackRealTime && (\n              <Card className=\"bg-gray-800 border-gray-700 p-6\">\n                <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n                  <Icon name=\"Activity\" className=\"w-5 h-5 mr-2 text-green-400\" />\n                  Live Market Data\n                </h3>\n\n                <div className=\"space-y-3\">\n                  {getRealTimeIndicator('stock_price', inputs.symbol) && (\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-400\">Stock Price:</span>\n                      {getRealTimeIndicator('stock_price', inputs.symbol)}\n                    </div>\n                  )}\n\n                  {getRealTimeIndicator('bond_yields', 'US10Y') && (\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-400\">10Y Treasury:</span>\n                      {getRealTimeIndicator('bond_yields', 'US10Y')}\n                    </div>\n                  )}\n\n                  {getRealTimeIndicator('volatility_index', 'VIX') && (\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-400\">VIX:</span>\n                      {getRealTimeIndicator('volatility_index', 'VIX')}\n                    </div>\n                  )}\n                </div>\n              </Card>\n            )}\n          </div>\n\n          {/* Middle Panel - Year-by-Year Inputs */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"bg-gray-800 border-gray-700 p-6\">\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n                <Icon name=\"Calendar\" className=\"w-5 h-5 mr-2 text-blue-400\" />\n                Year-by-Year Projections\n              </h3>\n\n              <div className=\"space-y-4 max-h-96 overflow-y-auto\">\n                {Array.from({ length: inputs.projectionYears }, (_, i) => i + 1).map(year => (\n                  <div key={year} className=\"border border-gray-700 rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-blue-400 mb-3\">Year {year}</h4>\n\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div>\n                        <label className=\"block text-xs text-gray-400 mb-1\">Rev Growth %</label>\n                        <Input\n                          type=\"number\"\n                          value={inputs.yearlyData[year]?.revenueGrowth || 0}\n                          onChange={(e) => updateYearlyData(year, 'revenueGrowth', e.target.value)}\n                          className=\"bg-gray-700 border-gray-600 text-sm\"\n                          step=\"0.1\"\n                        />\n                      </div>\n\n                      <div>\n                        <label className=\"block text-xs text-gray-400 mb-1\">EBITDA Margin %</label>\n                        <Input\n                          type=\"number\"\n                          value={inputs.yearlyData[year]?.ebitdaMargin || 0}\n                          onChange={(e) => updateYearlyData(year, 'ebitdaMargin', e.target.value)}\n                          className=\"bg-gray-700 border-gray-600 text-sm\"\n                          step=\"0.1\"\n                        />\n                      </div>\n\n                      <div>\n                        <label className=\"block text-xs text-gray-400 mb-1\">Tax Rate %</label>\n                        <Input\n                          type=\"number\"\n                          value={inputs.yearlyData[year]?.taxRate || 0}\n                          onChange={(e) => updateYearlyData(year, 'taxRate', e.target.value)}\n                          className=\"bg-gray-700 border-gray-600 text-sm\"\n                          step=\"0.1\"\n                        />\n                      </div>\n\n                      <div>\n                        <label className=\"block text-xs text-gray-400 mb-1\">CapEx % Rev</label>\n                        <Input\n                          type=\"number\"\n                          value={inputs.yearlyData[year]?.capexPercent || 0}\n                          onChange={(e) => updateYearlyData(year, 'capexPercent', e.target.value)}\n                          className=\"bg-gray-700 border-gray-600 text-sm\"\n                          step=\"0.1\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </Card>\n          </div>\n\n          {/* Right Panel - Results */}\n          <div className=\"lg:col-span-1 space-y-6\">\n            {isLoading && (\n              <div className=\"flex items-center justify-center py-8\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\" />\n                <span className=\"ml-2 text-gray-400\">Calculating...</span>\n              </div>\n            )}\n\n            {error && (\n              <Card className=\"bg-red-900/20 border-red-700 p-6\">\n                <div className=\"flex items-center text-red-400\">\n                  <Icon name=\"AlertCircle\" className=\"w-5 h-5 mr-2\" />\n                  <span>Calculation Error</span>\n                </div>\n                <p className=\"text-red-300 mt-2 text-sm\">{error.message}</p>\n              </Card>\n            )}\n\n            {result && (\n              <>\n                {/* Key Metrics */}\n                <Card className=\"bg-gray-800 border-gray-700 p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n                    <Icon name=\"TrendingUp\" className=\"w-5 h-5 mr-2 text-green-400\" />\n                    Key Results\n                  </h3>\n\n                  <div className=\"space-y-4\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-400\">Enterprise Value:</span>\n                      <span className=\"font-semibold text-lg text-blue-400\">\n                        {formatCurrency(result.enterpriseValue, 1)}\n                      </span>\n                    </div>\n\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-400\">Equity Value:</span>\n                      <span className=\"font-semibold text-lg text-green-400\">\n                        {formatCurrency(result.equityValue, 1)}\n                      </span>\n                    </div>\n\n                    <div className=\"flex justify-between items-center border-t border-gray-700 pt-4\">\n                      <span className=\"text-gray-400\">Share Price:</span>\n                      <span className=\"font-bold text-xl text-yellow-400\">\n                        ${result.impliedSharePrice?.toFixed(2)}\n                      </span>\n                    </div>\n\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-gray-400\">Terminal Value:</span>\n                      <span className=\"font-semibold\">\n                        {formatCurrency(result.terminalValue, 1)}\n                      </span>\n                    </div>\n                  </div>\n                </Card>\n\n                {/* Cash Flow Summary */}\n                <Card className=\"bg-gray-800 border-gray-700 p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4 flex items-center\">\n                    <Icon name=\"DollarSign\" className=\"w-5 h-5 mr-2 text-blue-400\" />\n                    Cash Flow Summary\n                  </h3>\n\n                  <div className=\"space-y-2\">\n                    {result.years?.map((year, index) => (\n                      <div key={year} className=\"flex justify-between items-center text-sm\">\n                        <span className=\"text-gray-400\">Year {year} FCF:</span>\n                        <span className=\"font-mono\">\n                          {formatCurrency(result.freeCashFlows[index], 1)}\n                        </span>\n                      </div>\n                    ))}\n\n                    <div className=\"border-t border-gray-700 pt-2 mt-3\">\n                      <div className=\"flex justify-between items-center text-sm font-semibold\">\n                        <span className=\"text-gray-300\">PV of FCFs:</span>\n                        <span>{formatCurrency(result.cumulativePV, 1)}</span>\n                      </div>\n                    </div>\n                  </div>\n                </Card>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LivingModelDCF;\n","import React, { useState } from 'react';\n\nimport AnalysisCanvas from '../AnalysisCanvas/AnalysisCanvas';\nimport Icon from '../AppIcon';\nimport SEOHead from '../SEO/SEOHead';\nimport Button from '../ui/Button';\nimport { Card } from '../ui/Card';\n\nimport EnhancedDCFTool from './EnhancedDCFTool';\nimport LivingModelDCF from './LivingModelDCF';\n\n\nconst ValuationTool = () => {\n  const [activeView, setActiveView] = useState('overview'); // 'overview', 'dcf', 'living-dcf', 'lbo', 'comp', 'canvas'\n\n  if (activeView === 'dcf') {\n    return <EnhancedDCFTool onBack={() => setActiveView('overview')} />;\n  }\n\n  if (activeView === 'living-dcf') {\n    return <LivingModelDCF onBack={() => setActiveView('overview')} />;\n  }\n\n  if (activeView === 'canvas') {\n    return <AnalysisCanvas />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white p-6\">\n      <SEOHead\n        title=\"Valuation Tool | FinanceAnalyst Pro\"\n        description=\"Professional DCF analysis, LBO modeling, and comparative valuation tools for investment professionals and analysts.\"\n        canonical=\"/valuation-tool\"\n        keywords=\"valuation tool, DCF analysis, LBO model, comparable company analysis, investment valuation, financial analysis\"\n      />\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\">Valuation Tool</h1>\n          <p className=\"text-gray-400\">\n            Professional valuation models and analysis tools\n          </p>\n        </div>\n\n        {/* Featured Living Model */}\n        <div className=\"mb-8\">\n          <Card className=\"bg-gradient-to-r from-emerald-900 to-teal-900 border-emerald-700\">\n            <div className=\"p-8\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"flex items-center mb-4\">\n                    <Icon name=\"Zap\" className=\"w-10 h-10 text-emerald-300 mr-4\" />\n                    <h2 className=\"text-2xl font-bold text-white\">The Living Model</h2>\n                    <div className=\"ml-3 px-2 py-1 bg-emerald-600 text-emerald-100 text-xs font-semibold rounded-full\">\n                      NEW\n                    </div>\n                  </div>\n                  <p className=\"text-emerald-100 mb-6 text-lg leading-relaxed\">\n                    Experience financial modeling transformed. Real-time data integration, instantaneous calculations, and fluid time period adjustments create a living, breathing analysis that evolves with every input change.\n                  </p>\n                  <div className=\"flex flex-wrap gap-3 mb-6\">\n                    <span className=\"px-3 py-1 bg-emerald-800/50 text-emerald-200 rounded-full text-sm\">\n                      Real-Time Data Feeds\n                    </span>\n                    <span className=\"px-3 py-1 bg-emerald-800/50 text-emerald-200 rounded-full text-sm\">\n                      Instantaneous Calculations\n                    </span>\n                    <span className=\"px-3 py-1 bg-emerald-800/50 text-emerald-200 rounded-full text-sm\">\n                      Dynamic Time Periods\n                    </span>\n                    <span className=\"px-3 py-1 bg-emerald-800/50 text-emerald-200 rounded-full text-sm\">\n                      No \"Run\" Button\n                    </span>\n                  </div>\n                  <Button\n                    className=\"bg-white text-emerald-900 hover:bg-emerald-50 font-semibold px-8 py-3\"\n                    onClick={() => setActiveView('living-dcf')}\n                  >\n                    Experience The Living Model\n                  </Button>\n                </div>\n                <div className=\"hidden lg:block\">\n                  <div className=\"w-32 h-32 bg-emerald-800/30 rounded-2xl flex items-center justify-center relative\">\n                    <Icon name=\"Activity\" className=\"w-16 h-16 text-emerald-300\" />\n                    <div className=\"absolute inset-0 rounded-2xl bg-emerald-400/20 animate-pulse\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Featured Analysis Canvas */}\n        <div className=\"mb-8\">\n          <Card className=\"bg-gradient-to-r from-blue-900 to-indigo-900 border-blue-700\">\n            <div className=\"p-8\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <div className=\"flex items-center mb-4\">\n                    <Icon name=\"Sparkles\" className=\"w-10 h-10 text-blue-300 mr-4\" />\n                    <h2 className=\"text-2xl font-bold text-white\">Analysis Canvas</h2>\n                  </div>\n                  <p className=\"text-blue-100 mb-6 text-lg leading-relaxed\">\n                    A unified workspace that reimagines financial analysis. Start with any company and seamlessly flow between DCF modeling, comparable analysis, and scenario planning—all in one integrated environment.\n                  </p>\n                  <div className=\"flex flex-wrap gap-3 mb-6\">\n                    <span className=\"px-3 py-1 bg-blue-800/50 text-blue-200 rounded-full text-sm\">\n                      Company-Centric Workflow\n                    </span>\n                    <span className=\"px-3 py-1 bg-blue-800/50 text-blue-200 rounded-full text-sm\">\n                      Intelligent Defaults\n                    </span>\n                    <span className=\"px-3 py-1 bg-blue-800/50 text-blue-200 rounded-full text-sm\">\n                      Interactive Analysis\n                    </span>\n                    <span className=\"px-3 py-1 bg-blue-800/50 text-blue-200 rounded-full text-sm\">\n                      Minimal Design\n                    </span>\n                  </div>\n                  <Button\n                    className=\"bg-white text-blue-900 hover:bg-blue-50 font-semibold px-8 py-3\"\n                    onClick={() => setActiveView('canvas')}\n                  >\n                    Enter Analysis Canvas\n                  </Button>\n                </div>\n                <div className=\"hidden lg:block\">\n                  <div className=\"w-32 h-32 bg-blue-800/30 rounded-2xl flex items-center justify-center\">\n                    <Icon name=\"BarChart3\" className=\"w-16 h-16 text-blue-300\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          <Card className=\"bg-gray-800 border-gray-700 relative overflow-hidden\">\n            <div className=\"absolute top-0 right-0 w-20 h-20 bg-emerald-500/10 rounded-full -translate-y-10 translate-x-10\" />\n            <div className=\"p-6 relative\">\n              <div className=\"flex items-center mb-4\">\n                <Icon name=\"Zap\" className=\"w-8 h-8 text-emerald-400 mr-3\" />\n                <h3 className=\"text-xl font-semibold\">Living Model DCF</h3>\n                <div className=\"ml-2 px-2 py-1 bg-emerald-600 text-emerald-100 text-xs font-semibold rounded-full\">\n                  NEW\n                </div>\n              </div>\n              <p className=\"text-gray-400 mb-4\">\n                Real-time, reactive DCF modeling with live data feeds and instantaneous calculations. No more \"run\" buttons—watch your model come alive.\n              </p>\n              <Button\n                className=\"w-full bg-emerald-600 hover:bg-emerald-700\"\n                onClick={() => setActiveView('living-dcf')}\n              >\n                Experience The Living Model\n              </Button>\n            </div>\n          </Card>\n\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <Icon name=\"TrendingUp\" className=\"w-8 h-8 text-blue-400 mr-3\" />\n                <h3 className=\"text-xl font-semibold\">Enhanced DCF Analysis</h3>\n              </div>\n              <p className=\"text-gray-400 mb-4\">\n                Professional DCF modeling with year-by-year projections, sensitivity analysis, and detailed financial statements\n              </p>\n              <Button\n                className=\"w-full\"\n                onClick={() => setActiveView('dcf')}\n              >\n                Launch Enhanced DCF Tool\n              </Button>\n            </div>\n          </Card>\n\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <Icon name=\"BarChart3\" className=\"w-8 h-8 text-green-400 mr-3\" />\n                <h3 className=\"text-xl font-semibold\">Comparable Analysis</h3>\n              </div>\n              <p className=\"text-gray-400 mb-4\">\n                Peer comparison and relative valuation metrics\n              </p>\n              <Button className=\"w-full\" disabled>\n                Coming Soon\n              </Button>\n            </div>\n          </Card>\n\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <Icon name=\"Calculator\" className=\"w-8 h-8 text-purple-400 mr-3\" />\n                <h3 className=\"text-xl font-semibold\">LBO Analysis</h3>\n              </div>\n              <p className=\"text-gray-400 mb-4\">\n                Leveraged buyout modeling and returns analysis\n              </p>\n              <Button className=\"w-full\" disabled>\n                Coming Soon\n              </Button>\n            </div>\n          </Card>\n        </div>\n\n        <div className=\"mt-8\">\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <div className=\"p-6\">\n              <h3 className=\"text-xl font-semibold mb-4\">Enhanced DCF Features</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <h4 className=\"font-semibold text-blue-400 mb-2\">Year-by-Year Modeling</h4>\n                  <ul className=\"text-gray-400 text-sm space-y-1\">\n                    <li>• Individual assumptions for each projection year</li>\n                    <li>• Revenue growth, margins, tax rates, and capex</li>\n                    <li>• Working capital and D&A projections</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-green-400 mb-2\">Professional Calculations</h4>\n                  <ul className=\"text-gray-400 text-sm space-y-1\">\n                    <li>• Proper Unlevered Free Cash Flow calculation</li>\n                    <li>• Enterprise to Equity value bridge</li>\n                    <li>• Balance sheet integration</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-purple-400 mb-2\">Advanced Analytics</h4>\n                  <ul className=\"text-gray-400 text-sm space-y-1\">\n                    <li>• WACC and terminal growth sensitivity analysis</li>\n                    <li>• Interactive projection tables</li>\n                    <li>• Cash flow visualization charts</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-orange-400 mb-2\">User Experience</h4>\n                  <ul className=\"text-gray-400 text-sm space-y-1\">\n                    <li>• Simple and detailed input modes</li>\n                    <li>• Real-time calculation updates</li>\n                    <li>• Export capabilities</li>\n                  </ul>\n                </div>\n              </div>\n              <div className=\"mt-6\">\n                <Button\n                  className=\"bg-blue-600 hover:bg-blue-700\"\n                  onClick={() => setActiveView('dcf')}\n                >\n                  Try Enhanced DCF Tool\n                </Button>\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        <div className=\"mt-8\">\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <div className=\"p-6\">\n              <h3 className=\"text-xl font-semibold mb-4\">Quick Access Terminal</h3>\n              <p className=\"text-gray-400 mb-4\">\n                Use the enhanced terminal interface for advanced valuation commands:\n              </p>\n              <div className=\"bg-gray-900 rounded-lg p-4 font-mono text-sm\">\n                <div className=\"text-green-400\">$ DCF(AAPL)</div>\n                <div className=\"text-green-400\">$ LBO(TSLA)</div>\n                <div className=\"text-green-400\">$ COMP(MSFT)</div>\n                <div className=\"text-green-400\">$ HELP(\"VALUATION\")</div>\n              </div>\n              <div className=\"mt-4\">\n                <Button disabled>\n                  Terminal Interface - Coming Soon\n                </Button>\n              </div>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ValuationTool;\n","import { motion } from 'framer-motion';\nimport { BookOpen, Calculator, TrendingUp, Info, AlertTriangle } from 'lucide-react';\nimport React from 'react';\n\nconst ValuationToolDocs = () => {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"text-center mb-8\"\n        >\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n            Business Valuation Guide\n          </h1>\n          <p className=\"text-xl text-gray-600\">\n            Understanding DCF and LBO methodologies for private company valuation\n          </p>\n        </motion.div>\n\n        <div className=\"space-y-8\">\n          {/* Overview */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"bg-white rounded-xl shadow-lg p-6\"\n          >\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4 flex items-center\">\n              <BookOpen className=\"w-6 h-6 mr-2\" />\n              Overview\n            </h2>\n            <p className=\"text-gray-700 leading-relaxed\">\n              This tool provides professional-grade business valuation capabilities using two primary methodologies:\n              <strong> Discounted Cash Flow (DCF)</strong> and <strong>Leveraged Buyout (LBO)</strong> analysis.\n              These methods are widely used by investment professionals, private equity firms, and corporate finance teams\n              to determine the intrinsic value of privately held companies.\n            </p>\n          </motion.div>\n\n          {/* DCF Section */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"bg-white rounded-xl shadow-lg p-6\"\n          >\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4 flex items-center\">\n              <Calculator className=\"w-6 h-6 mr-2\" />\n              Discounted Cash Flow (DCF) Analysis\n            </h2>\n\n            <div className=\"space-y-6\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">What is DCF?</h3>\n                <p className=\"text-gray-700 leading-relaxed\">\n                  DCF is a valuation method that estimates the value of an investment based on its expected future cash flows.\n                  The model discounts these cash flows back to their present value using a discount rate that reflects the\n                  risk and time value of money.\n                </p>\n              </div>\n\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Key Components</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"bg-blue-50 p-4 rounded-lg\">\n                    <h4 className=\"font-semibold text-blue-900 mb-2\">Free Cash Flow Projections</h4>\n                    <p className=\"text-sm text-blue-700\">\n                      Projected cash flows available to all capital providers (debt and equity holders)\n                    </p>\n                  </div>\n                  <div className=\"bg-green-50 p-4 rounded-lg\">\n                    <h4 className=\"font-semibold text-green-900 mb-2\">Terminal Value</h4>\n                    <p className=\"text-sm text-green-700\">\n                      Value of cash flows beyond the projection period, assuming perpetual growth\n                    </p>\n                  </div>\n                  <div className=\"bg-purple-50 p-4 rounded-lg\">\n                    <h4 className=\"font-semibold text-purple-900 mb-2\">Discount Rate</h4>\n                    <p className=\"text-sm text-purple-700\">\n                      Rate used to discount future cash flows, reflecting risk and opportunity cost\n                    </p>\n                  </div>\n                  <div className=\"bg-orange-50 p-4 rounded-lg\">\n                    <h4 className=\"font-semibold text-orange-900 mb-2\">Enterprise Value</h4>\n                    <p className=\"text-sm text-orange-700\">\n                      Total value of the business before considering capital structure\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Input Parameters</h3>\n                <div className=\"space-y-3\">\n                  <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium\">Current Revenue</span>\n                    <span className=\"text-sm text-gray-600\">Starting point for projections</span>\n                  </div>\n                  <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium\">Revenue Growth Rate</span>\n                    <span className=\"text-sm text-gray-600\">Annual growth assumption</span>\n                  </div>\n                  <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium\">EBITDA Margin</span>\n                    <span className=\"text-sm text-gray-600\">Profitability assumption</span>\n                  </div>\n                  <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium\">Discount Rate</span>\n                    <span className=\"text-sm text-gray-600\">Risk-adjusted return requirement</span>\n                  </div>\n                  <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium\">Terminal Growth Rate</span>\n                    <span className=\"text-sm text-gray-600\">Long-term growth assumption</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* LBO Section */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"bg-white rounded-xl shadow-lg p-6\"\n          >\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4 flex items-center\">\n              <TrendingUp className=\"w-6 h-6 mr-2\" />\n              Leveraged Buyout (LBO) Analysis\n            </h2>\n\n            <div className=\"space-y-6\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">What is LBO?</h3>\n                <p className=\"text-gray-700 leading-relaxed\">\n                  LBO analysis evaluates the potential returns from acquiring a company using significant debt financing.\n                  The model projects the company's performance under new ownership and calculates returns based on\n                  the exit strategy (typically sale or IPO).\n                </p>\n              </div>\n\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Key Components</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"bg-blue-50 p-4 rounded-lg\">\n                    <h4 className=\"font-semibold text-blue-900 mb-2\">Equity Investment</h4>\n                    <p className=\"text-sm text-blue-700\">\n                      Amount of equity capital invested in the transaction\n                    </p>\n                  </div>\n                  <div className=\"bg-green-50 p-4 rounded-lg\">\n                    <h4 className=\"font-semibold text-green-900 mb-2\">Debt Financing</h4>\n                    <p className=\"text-sm text-green-700\">\n                      Leverage used to finance the acquisition\n                    </p>\n                  </div>\n                  <div className=\"bg-purple-50 p-4 rounded-lg\">\n                    <h4 className=\"font-semibold text-purple-900 mb-2\">Exit Value</h4>\n                    <p className=\"text-sm text-purple-700\">\n                      Expected value at exit based on EBITDA multiple\n                    </p>\n                  </div>\n                  <div className=\"bg-orange-50 p-4 rounded-lg\">\n                    <h4 className=\"font-semibold text-orange-900 mb-2\">IRR & MOIC</h4>\n                    <p className=\"text-sm text-orange-700\">\n                      Internal Rate of Return and Multiple on Invested Capital\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Input Parameters</h3>\n                <div className=\"space-y-3\">\n                  <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium\">Purchase Price</span>\n                    <span className=\"text-sm text-gray-600\">Total acquisition cost</span>\n                  </div>\n                  <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium\">Equity Contribution</span>\n                    <span className=\"text-sm text-gray-600\">Percentage of equity vs debt</span>\n                  </div>\n                  <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium\">Exit Multiple</span>\n                    <span className=\"text-sm text-gray-600\">EBITDA multiple at exit</span>\n                  </div>\n                  <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium\">Exit Year</span>\n                    <span className=\"text-sm text-gray-600\">Holding period</span>\n                  </div>\n                  <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\n                    <span className=\"font-medium\">EBITDA Growth</span>\n                    <span className=\"text-sm text-gray-600\">Operational improvement</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Best Practices */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"bg-white rounded-xl shadow-lg p-6\"\n          >\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4 flex items-center\">\n              <Info className=\"w-6 h-6 mr-2\" />\n              Best Practices & Considerations\n            </h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">DCF Best Practices</h3>\n                <ul className=\"space-y-2 text-gray-700\">\n                  <li className=\"flex items-start\">\n                    <span className=\"text-blue-600 mr-2\">•</span>\n                    Use conservative growth assumptions based on industry benchmarks\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-blue-600 mr-2\">•</span>\n                    Consider multiple scenarios (base, upside, downside)\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-blue-600 mr-2\">•</span>\n                    Validate discount rate against comparable companies\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-blue-600 mr-2\">•</span>\n                    Ensure terminal growth rate is sustainable long-term\n                  </li>\n                </ul>\n              </div>\n\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">LBO Best Practices</h3>\n                <ul className=\"space-y-2 text-gray-700\">\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-600 mr-2\">•</span>\n                    Model realistic operational improvements\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-600 mr-2\">•</span>\n                    Consider debt capacity and interest coverage\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-600 mr-2\">•</span>\n                    Account for transaction and management fees\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"text-green-600 mr-2\">•</span>\n                    Validate exit multiple against market comparables\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Limitations */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"bg-white rounded-xl shadow-lg p-6\"\n          >\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4 flex items-center\">\n              <AlertTriangle className=\"w-6 h-6 mr-2\" />\n              Limitations & Disclaimers\n            </h2>\n\n            <div className=\"space-y-4 text-gray-700\">\n              <p>\n                <strong>Important:</strong> This tool provides estimates based on simplified models and should not be\n                considered as financial advice. Professional valuations require comprehensive analysis including:\n              </p>\n\n              <ul className=\"space-y-2 ml-4\">\n                <li>• Detailed financial modeling and scenario analysis</li>\n                <li>• Industry-specific benchmarks and comparables</li>\n                <li>• Due diligence on company operations and market position</li>\n                <li>• Legal and regulatory considerations</li>\n                <li>• Expert review by qualified professionals</li>\n              </ul>\n\n              <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 rounded\">\n                <p className=\"text-yellow-800\">\n                  <strong>Disclaimer:</strong> The results generated by this tool are for educational and preliminary\n                  analysis purposes only. Actual valuations should be conducted by qualified professionals with access\n                  to complete company information and market data.\n                </p>\n              </div>\n            </div>\n          </motion.div>\n\n          {/* Industry Benchmarks */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"bg-white rounded-xl shadow-lg p-6\"\n          >\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Industry Benchmarks</h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Typical Discount Rates</h3>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between p-2 bg-gray-50 rounded\">\n                    <span>Large Cap Public</span>\n                    <span className=\"font-semibold\">8-12%</span>\n                  </div>\n                  <div className=\"flex justify-between p-2 bg-gray-50 rounded\">\n                    <span>Mid Cap Private</span>\n                    <span className=\"font-semibold\">12-18%</span>\n                  </div>\n                  <div className=\"flex justify-between p-2 bg-gray-50 rounded\">\n                    <span>Small Cap Private</span>\n                    <span className=\"font-semibold\">15-25%</span>\n                  </div>\n                  <div className=\"flex justify-between p-2 bg-gray-50 rounded\">\n                    <span>Early Stage</span>\n                    <span className=\"font-semibold\">25-40%</span>\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Exit Multiples by Sector</h3>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between p-2 bg-gray-50 rounded\">\n                    <span>Technology</span>\n                    <span className=\"font-semibold\">8-15x</span>\n                  </div>\n                  <div className=\"flex justify-between p-2 bg-gray-50 rounded\">\n                    <span>Manufacturing</span>\n                    <span className=\"font-semibold\">6-10x</span>\n                  </div>\n                  <div className=\"flex justify-between p-2 bg-gray-50 rounded\">\n                    <span>Healthcare</span>\n                    <span className=\"font-semibold\">8-12x</span>\n                  </div>\n                  <div className=\"flex justify-between p-2 bg-gray-50 rounded\">\n                    <span>Consumer</span>\n                    <span className=\"font-semibold\">6-9x</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ValuationToolDocs;\n"],"names":["SEOHead","title","description","canonical","image","type","keywords","author","twitterHandle","publishedTime","modifiedTime","siteUrl","fullCanonical","fullImage","startsWith","Helmet","children","jsx","name","content","rel","href","property","stringify","url","applicationCategory","operatingSystem","offers","category","realTimeDataService","constructor","this","subscribers","Map","connections","dataCache","updateInterval","isActive","marketDataTypes","Set","subscribe","dataType","symbol","callback","key","has","set","get","add","startDataFeed","unsubscribe","delete","size","stopDataFeed","startStockPriceFeed","startInterestRateFeed","startFXRateFeed","startCommodityFeed","startBondYieldFeed","startVolatilityFeed","startEconomicIndicatorFeed","basePrice","getBasePrice","lastPrice","interval","setInterval","dt","randomShock","Math","random","priceChange","sqrt","max","data","price","change","changePercent","timestamp","Date","toISOString","marketOpen","isMarketOpen","updateSubscribers","baseRate","getBaseInterestRate","rate","forEach","error","connection","clearInterval","AAPL","MSFT","GOOGL","TSLA","AMZN","USD_3M","USD_10Y","EUR_3M","EUR_10Y","now","day","getDay","hour","getHours","getBaseFXRate","getBaseCommodityPrice","volatility","baseYield","getBaseBondYield","yield","baseVol","getBaseVolatility","min","baseValue","getBaseEconomicIndicator","value","EURUSD","GBPUSD","USDJPY","USDCHF","AUDUSD","OIL","GOLD","SILVER","COPPER","NATGAS","US10Y","US2Y","DE10Y","GB10Y","JP10Y","VIX","VVIX","MOVE","GDP_GROWTH","INFLATION","UNEMPLOYMENT","CONSUMER_CONF","getCurrentData","getAvailableDataTypes","Array","from","subscribeMultiple","subscriptions","unsubscribeFunctions","push","fn","calculateEnhancedDCF","inputs","currentRevenue","projectionYears","terminalGrowthRate","discountRate","yearlyData","balanceSheet","results","years","revenues","ebitda","ebit","nopat","freeCashFlows","presentValues","cumulativePV","terminalValue","presentValueTerminal","enterpriseValue","equityValue","impliedSharePrice","netDebt","assumptions","projectionTable","previousRevenue","year","yearData","revenueGrowth","ebitdaMargin","taxRate","capexPercent","revenue","depreciation","daPercent","taxes","capex","deltaWorkingCapital","workingCapitalChange","freeCashFlow","presentValue","pow","length","terminalFCF","cash","totalDebt","sharesOutstanding","calculateDCF","modelInputs","statements","incomeStatement","dcfParams","dcf","income","periods","Object","keys","totalRevenue","sort","a","b","parseInt","latestPeriod","baseRevenue","baseOperatingIncome","operatingIncome","revenueGrowthRate","previousPeriod","operatingMargin","impliedValuation","yearGrowthRate","terminalYear","terminalGrowthCashFlow","calculateSensitivityAnalysis","waccRange","terminalGrowthRange","baseWACC","baseTerminalGrowth","sensitivityMatrix","waccDelta","row","terminalDelta","testInputs","result","wacc","terminalGrowth","sharePrice","matrix","map","delta","baseCase","AnalysisModule","moduleId","_companyData","onInputChange","onFocus","onRemove","isCompact","isFullscreen","useState","chartData","useMemo","index","fcf","pv","config","icon","Calculator","color","comparables","BarChart3","lbo","Target","Icon","InteractiveSlider","label","step","suffix","onChange","jsxs","className","toFixed","e","parseFloat","target","style","background","motion","div","layout","handleInputChange","field","handleYearlyInputChange","updatedYearlyData","onClick","Maximize2","X","ResponsiveContainer","width","height","LineChart","Line","dataKey","stroke","strokeWidth","dot","XAxis","tick","fontSize","YAxis","Tooltip","formatter","labelStyle","DollarSign","TrendingUp","Percent","Calendar","CartesianGrid","strokeDasharray","axisLine","tickLine","fill","tickFormatter","contentStyle","backgroundColor","border","borderRadius","r","renderDCFContent","renderModuleContent","CompanyOverview","company","compact","formatCurrency","financials","latest","previous","calculateGrowth","initial","opacity","y","animate","Building2","sector","ticker","marketCap","slice","activeDot","CompanySelector","onCompanySelect","searchTerm","setSearchTerm","suggestions","setSuggestions","isSearching","setIsSearching","mockCompanies","id","useEffect","timer","setTimeout","filtered","filter","toLowerCase","includes","clearTimeout","handleCompanySelect","Search","placeholder","AnimatePresence","exit","button","whileHover","transition","delay","scale","whileTap","springConfig","stiffness","damping","AnalysisCanvas","selectedCompany","setSelectedCompany","activeModules","setActiveModules","canvasMode","setCanvasMode","focusedModule","setFocusedModule","profile","marketData","consensus","analysisInputs","setAnalysisInputs","analysisResults","setAnalysisResults","availableModules","isPrimary","useCallback","async","latestRevenue","growthRates","calculateHistoricalGrowthRates","prev","generateIntelligentDefaults","revenueData","i","growth","historicalGrowth","avgGrowth","reduce","sectorDefaults","getSectorDefaults","yearGrowth","defaults","Technology","Healthcare","default","removeModule","updateAnalysisInputs","newInputs","canvasVariants","overview","analysis","focused","Minimize2","variants","mode","ChevronRight","find","m","companyData","focusModule","module","addModule","DCFInputs","setInputs","viewMode","setViewMode","validationErrors","setValidationErrors","validationRules","handleChange","numValue","rule","isNaN","minPercent","maxPercent","validateInput","boundedValue","handleYearlyChange","handleBalanceSheetChange","initialYearlyData","workingCapitalPercent","htmlFor","_","renderDetailedView","EnhancedDCFTool","onBack","setResults","sensitivityResults","setSensitivityResults","activeTab","setActiveTab","loading","setLoading","dcfResults","sensitivity","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercent","tabs","AlertCircle","ArrowLeft","tab","Fragment","notation","Legend","rowIndex","cell","cellIndex","isBaseCase","floor","renderSensitivityTable","Download","reactiveCalculationEngine","modelSubscriptions","calculationQueue","isProcessing","lastCalculationTime","throttleDelay","calculationTimes","maxCalculationHistory","createReactiveModel","modelId","modelType","initialInputs","model","realTimeFeeds","lastUpdate","dependencies","calculateModel","setupRealTimeFeeds","updateInput","path","updateModelInput","updateInputs","updates","updateModelInputs","getResult","destroy","destroyModel","addDependency","addModelDependency","setNestedValue","queueCalculation","entries","dependencyKey","handleRealTimeUpdate","processCalculationQueue","timeSinceLastCalculation","Promise","resolve","shift","startTime","performance","calculationTime","trackCalculationPerformance","trackInterestRates","obj","split","current","time","getPerformanceStats","avgTime","maxTime","minTime","totalCalculations","times","sum","round","getActiveModels","getModel","DynamicTimePeriodControl","initialYears","minYears","maxYears","onYearsChange","setYears","isDragging","setIsDragging","dragStartX","setDragStartX","dragStartYears","setDragStartYears","handleYearsChange","newYears","clampedYears","handleMouseDown","preventDefault","clientX","document","body","cursor","handleMouseMove","deltaX","handleMouseUp","addEventListener","removeEventListener","Card","left","onMouseDown","markers","percentage","getTimelineMarkers","quickYears","LivingModelDCF","setResult","isLoading","setIsLoading","setError","realTimeData","setRealTimeData","lastUpdateTime","setLastUpdateTime","modelRef","useRef","trackRealTime","newResult","calcError","updated","updateYearlyData","handleProjectionYearsChange","prevYear","pop","toggleRealTimeTracking","newValue","decimals","absValue","abs","getRealTimeIndicator","Button","toLocaleTimeString","Input","toUpperCase","message","activeView","setActiveView","disabled","BookOpen","Info","AlertTriangle"],"mappings":"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"}