{"version":3,"file":"PrivateAnalysis-KnMb8Fzp.js","sources":["../../src/services/monteCarloEngine.js","../../src/services/storageService.js","../../src/services/financialDataStorage.js","../../src/components/DataExportImport.jsx","../../src/components/PrivateAnalysis/AdvancedLBOTool.jsx","../../src/components/PrivateAnalysis/AnalysisResults.jsx","../../src/components/PrivateAnalysis/ContextualInsightsSidebar.jsx","../../src/components/PrivateAnalysis/EnhancedMarketDataDashboard.jsx","../../src/components/PrivateAnalysis/EnhancedScenarioAnalysis.jsx","../../src/components/PrivateAnalysis/FinancialModelWorkspace.jsx","../../src/components/PrivateAnalysis/FinancialSpreadsheet.jsx","../../src/components/PrivateAnalysis/DataVisualization.jsx","../../src/components/PrivateAnalysis/WACCCalculator.jsx","../../src/components/PrivateAnalysis/AdvancedDCF.jsx","../../src/components/PrivateAnalysis/ComparableAnalysis.jsx","../../src/components/PrivateAnalysis/MonteCarloSimulation.jsx","../../src/components/PrivateAnalysis/ScenarioModeling.jsx","../../src/components/PrivateAnalysis/SensitivityAnalysis.jsx","../../src/components/PrivateAnalysis/ModelingTools.jsx","../../src/components/PrivateAnalysis/MonteCarloIntegrationHub.jsx","../../src/pages/PrivateAnalysis.jsx"],"sourcesContent":["import { apiLogger } from '../utils/apiLogger.js';\n\n/**\n * Monte Carlo Simulation Engine\n * Provides advanced statistical modeling and risk analysis\n */\nclass MonteCarloEngine {\n  constructor() {\n    this.workers = [];\n    this.isRunning = false;\n    this.currentSimulation = null;\n  }\n\n  /**\n   * Run Monte Carlo simulation for DCF analysis\n   * @param {Object} baseInputs - Base DCF inputs\n   * @param {Object} distributions - Variable distributions\n   * @param {Object} options - Simulation options\n   * @returns {Promise<Object>} Simulation results\n   */\n  async runDCFSimulation(baseInputs, distributions, options = {}) {\n    const {\n      iterations = 10000,\n      confidenceLevel = 0.95,\n      correlationMatrix = null,\n      randomSeed = null\n    } = options;\n\n    apiLogger.log('INFO', 'Starting DCF Monte Carlo simulation', {\n      iterations,\n      variables: Object.keys(distributions).length\n    });\n\n    this.isRunning = true;\n    const startTime = Date.now();\n\n    try {\n      // Initialize random number generator\n      if (randomSeed) {\n        this.setSeed(randomSeed);\n      }\n\n      // Generate correlated random samples\n      const samples = this.generateCorrelatedSamples(\n        distributions,\n        iterations,\n        correlationMatrix\n      );\n\n      // Run simulation iterations\n      const results = [];\n      const progressCallback = options.onProgress;\n\n      for (let i = 0; i < iterations; i++) {\n        if (!this.isRunning) {\n          throw new Error('Simulation cancelled');\n        }\n\n        // Create scenario inputs\n        const scenarioInputs = this.createScenarioInputs(baseInputs, samples[i], distributions);\n\n        // Calculate DCF for this scenario\n        const dcfResult = this.calculateDCFScenario(scenarioInputs);\n        results.push({\n          iteration: i + 1,\n          pricePerShare: dcfResult.pricePerShare,\n          enterpriseValue: dcfResult.enterpriseValue,\n          upside: dcfResult.upside,\n          inputs: scenarioInputs\n        });\n\n        // Report progress\n        if (progressCallback && i % Math.floor(iterations / 100) === 0) {\n          progressCallback((i / iterations) * 100);\n        }\n      }\n\n      // Analyze results\n      const analysis = this.analyzeResults(results, confidenceLevel);\n\n      const endTime = Date.now();\n      apiLogger.log('INFO', 'DCF Monte Carlo simulation completed', {\n        iterations,\n        duration: endTime - startTime,\n        meanPrice: analysis.statistics.mean\n      });\n\n      return {\n        type: 'DCF_MONTE_CARLO',\n        timestamp: new Date().toISOString(),\n        parameters: { iterations, confidenceLevel, randomSeed },\n        results,\n        analysis,\n        duration: endTime - startTime\n      };\n\n    } catch (error) {\n      this.isRunning = false;\n      apiLogger.log('ERROR', 'DCF Monte Carlo simulation failed', { error: error.message });\n      throw error;\n    } finally {\n      this.isRunning = false;\n    }\n  }\n\n  /**\n   * Run Monte Carlo simulation for LBO analysis\n   * @param {Object} baseInputs - Base LBO inputs\n   * @param {Object} distributions - Variable distributions\n   * @param {Object} options - Simulation options\n   * @returns {Promise<Object>} Simulation results\n   */\n  async runLBOSimulation(baseInputs, distributions, options = {}) {\n    const {\n      iterations = 10000,\n      confidenceLevel = 0.95,\n      correlationMatrix = null,\n      randomSeed = null\n    } = options;\n\n    apiLogger.log('INFO', 'Starting LBO Monte Carlo simulation', {\n      iterations,\n      variables: Object.keys(distributions).length\n    });\n\n    this.isRunning = true;\n    const startTime = Date.now();\n\n    try {\n      if (randomSeed) {\n        this.setSeed(randomSeed);\n      }\n\n      const samples = this.generateCorrelatedSamples(\n        distributions,\n        iterations,\n        correlationMatrix\n      );\n\n      const results = [];\n      const progressCallback = options.onProgress;\n\n      for (let i = 0; i < iterations; i++) {\n        if (!this.isRunning) {\n          throw new Error('Simulation cancelled');\n        }\n\n        const scenarioInputs = this.createScenarioInputs(baseInputs, samples[i], distributions);\n        const lboResult = this.calculateLBOScenario(scenarioInputs);\n\n        results.push({\n          iteration: i + 1,\n          irr: lboResult.irr,\n          moic: lboResult.moic,\n          totalReturn: lboResult.totalReturn,\n          inputs: scenarioInputs\n        });\n\n        if (progressCallback && i % Math.floor(iterations / 100) === 0) {\n          progressCallback((i / iterations) * 100);\n        }\n      }\n\n      const analysis = this.analyzeResults(results, confidenceLevel, ['irr', 'moic', 'totalReturn']);\n\n      const endTime = Date.now();\n      apiLogger.log('INFO', 'LBO Monte Carlo simulation completed', {\n        iterations,\n        duration: endTime - startTime,\n        meanIRR: analysis.statistics.irr?.mean\n      });\n\n      return {\n        type: 'LBO_MONTE_CARLO',\n        timestamp: new Date().toISOString(),\n        parameters: { iterations, confidenceLevel, randomSeed },\n        results,\n        analysis,\n        duration: endTime - startTime\n      };\n\n    } catch (error) {\n      this.isRunning = false;\n      apiLogger.log('ERROR', 'LBO Monte Carlo simulation failed', { error: error.message });\n      throw error;\n    } finally {\n      this.isRunning = false;\n    }\n  }\n\n  /**\n   * Generate correlated random samples using Cholesky decomposition\n   * @param {Object} distributions - Variable distributions\n   * @param {number} iterations - Number of iterations\n   * @param {Array} correlationMatrix - Correlation matrix\n   * @returns {Array} Array of sample sets\n   */\n  generateCorrelatedSamples(distributions, iterations, correlationMatrix) {\n    const variables = Object.keys(distributions);\n    const numVars = variables.length;\n    const samples = [];\n\n    // Generate independent samples first\n    const independentSamples = [];\n    for (let i = 0; i < iterations; i++) {\n      const sample = {};\n      variables.forEach(variable => {\n        const dist = distributions[variable];\n        sample[variable] = this.sampleFromDistribution(dist);\n      });\n      independentSamples.push(sample);\n    }\n\n    // Apply correlation if matrix is provided\n    if (correlationMatrix && correlationMatrix.length === numVars) {\n      const choleskyMatrix = this.choleskyDecomposition(correlationMatrix);\n\n      for (let i = 0; i < iterations; i++) {\n        const correlatedSample = {};\n        const independentValues = variables.map(v => independentSamples[i][v]);\n        const correlatedValues = this.applyCorrelation(independentValues, choleskyMatrix);\n\n        variables.forEach((variable, index) => {\n          correlatedSample[variable] = correlatedValues[index];\n        });\n\n        samples.push(correlatedSample);\n      }\n    } else {\n      samples.push(...independentSamples);\n    }\n\n    return samples;\n  }\n\n  /**\n   * Sample from a probability distribution with enhanced types\n   * @param {Object} distribution - Distribution parameters\n   * @returns {number} Random sample\n   */\n  sampleFromDistribution(distribution) {\n    const { type, parameters } = distribution;\n\n    switch (type) {\n      case 'normal':\n        return this.normalRandom(parameters.mean, parameters.stdDev);\n\n      case 'lognormal': {\n        const normalSample = this.normalRandom(parameters.mu, parameters.sigma);\n        return Math.exp(normalSample);\n      }\n\n      case 'uniform':\n        return parameters.min + Math.random() * (parameters.max - parameters.min);\n\n      case 'triangular':\n        return this.triangularRandom(parameters.min, parameters.mode, parameters.max);\n\n      case 'beta':\n        return this.betaRandom(parameters.alpha, parameters.beta);\n\n      case 'exponential':\n        return this.exponentialRandom(parameters.lambda);\n\n      case 'weibull':\n        return this.weibullRandom(parameters.shape, parameters.scale);\n\n      case 'pareto':\n        return this.paretoRandom(parameters.scale, parameters.shape);\n\n      case 'student_t':\n        return this.studentTRandom(parameters.df);\n\n      case 'chi_squared':\n        return this.chiSquaredRandom(parameters.df);\n\n      default:\n        throw new Error(`Unsupported distribution type: ${type}`);\n    }\n  }\n\n  /**\n   * Generate exponential random variable\n   * @param {number} lambda - Rate parameter\n   * @returns {number} Exponential random variable\n   */\n  exponentialRandom(lambda) {\n    return -Math.log(1 - Math.random()) / lambda;\n  }\n\n  /**\n   * Generate Weibull random variable\n   * @param {number} shape - Shape parameter (k)\n   * @param {number} scale - Scale parameter (lambda)\n   * @returns {number} Weibull random variable\n   */\n  weibullRandom(shape, scale) {\n    const u = Math.random();\n    return scale * Math.pow(-Math.log(1 - u), 1 / shape);\n  }\n\n  /**\n   * Generate Pareto random variable\n   * @param {number} scale - Scale parameter (xm)\n   * @param {number} shape - Shape parameter (alpha)\n   * @returns {number} Pareto random variable\n   */\n  paretoRandom(scale, shape) {\n    const u = Math.random();\n    return scale / Math.pow(u, 1 / shape);\n  }\n\n  /**\n   * Generate Student's t random variable\n   * @param {number} df - Degrees of freedom\n   * @returns {number} Student's t random variable\n   */\n  studentTRandom(df) {\n    if (df <= 0) throw new Error('Degrees of freedom must be positive');\n\n    const normal = this.normalRandom(0, 1);\n    const chiSq = this.chiSquaredRandom(df);\n\n    return normal / Math.sqrt(chiSq / df);\n  }\n\n  /**\n   * Generate Chi-squared random variable\n   * @param {number} df - Degrees of freedom\n   * @returns {number} Chi-squared random variable\n   */\n  chiSquaredRandom(df) {\n    if (df <= 0) throw new Error('Degrees of freedom must be positive');\n\n    return this.gammaRandom(df / 2) * 2;\n  }\n\n  /**\n   * Generate normal random variable using Box-Muller transform\n   * @param {number} mean - Mean\n   * @param {number} stdDev - Standard deviation\n   * @returns {number} Normal random variable\n   */\n  normalRandom(mean = 0, stdDev = 1) {\n    if (this.spareNormal !== undefined) {\n      const spare = this.spareNormal;\n      this.spareNormal = undefined;\n      return spare * stdDev + mean;\n    }\n\n    const u1 = Math.random();\n    const u2 = Math.random();\n    const z0 = Math.sqrt(-2 * Math.log(u1)) * Math.cos(2 * Math.PI * u2);\n    const z1 = Math.sqrt(-2 * Math.log(u1)) * Math.sin(2 * Math.PI * u2);\n\n    this.spareNormal = z1;\n    return z0 * stdDev + mean;\n  }\n\n  /**\n   * Generate triangular random variable\n   * @param {number} min - Minimum value\n   * @param {number} mode - Mode value\n   * @param {number} max - Maximum value\n   * @returns {number} Triangular random variable\n   */\n  triangularRandom(min, mode, max) {\n    const u = Math.random();\n    const c = (mode - min) / (max - min);\n\n    if (u < c) {\n      return min + Math.sqrt(u * (max - min) * (mode - min));\n    } else {\n      return max - Math.sqrt((1 - u) * (max - min) * (max - mode));\n    }\n  }\n\n  /**\n   * Generate beta random variable\n   * @param {number} alpha - Alpha parameter\n   * @param {number} beta - Beta parameter\n   * @returns {number} Beta random variable\n   */\n  betaRandom(alpha, beta) {\n    const x = this.gammaRandom(alpha);\n    const y = this.gammaRandom(beta);\n    return x / (x + y);\n  }\n\n  /**\n   * Generate gamma random variable\n   * @param {number} shape - Shape parameter\n   * @returns {number} Gamma random variable\n   */\n  gammaRandom(shape) {\n    // Marsaglia and Tsang's method for shape >= 1\n    if (shape >= 1) {\n      const d = shape - 1 / 3;\n      const c = 1 / Math.sqrt(9 * d);\n\n      while (true) {\n        let x, v;\n        do {\n          x = this.normalRandom();\n          v = 1 + c * x;\n        } while (v <= 0);\n\n        v = v * v * v;\n        const u = Math.random();\n\n        if (u < 1 - 0.0331 * x * x * x * x) {\n          return d * v;\n        }\n\n        if (Math.log(u) < 0.5 * x * x + d * (1 - v + Math.log(v))) {\n          return d * v;\n        }\n      }\n    } else {\n      // For shape < 1, use transformation\n      return this.gammaRandom(shape + 1) * Math.pow(Math.random(), 1 / shape);\n    }\n  }\n\n  /**\n   * Perform Cholesky decomposition\n   * @param {Array} matrix - Correlation matrix\n   * @returns {Array} Lower triangular matrix\n   */\n  choleskyDecomposition(matrix) {\n    const n = matrix.length;\n    const L = Array(n).fill().map(() => Array(n).fill(0));\n\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j <= i; j++) {\n        if (i === j) {\n          let sum = 0;\n          for (let k = 0; k < j; k++) {\n            sum += L[j][k] * L[j][k];\n          }\n          L[j][j] = Math.sqrt(matrix[j][j] - sum);\n        } else {\n          let sum = 0;\n          for (let k = 0; k < j; k++) {\n            sum += L[i][k] * L[j][k];\n          }\n          L[i][j] = (matrix[i][j] - sum) / L[j][j];\n        }\n      }\n    }\n\n    return L;\n  }\n\n  /**\n   * Apply correlation using Cholesky matrix\n   * @param {Array} independentValues - Independent random values\n   * @param {Array} choleskyMatrix - Cholesky decomposition matrix\n   * @returns {Array} Correlated values\n   */\n  applyCorrelation(independentValues, choleskyMatrix) {\n    const n = independentValues.length;\n    const correlatedValues = Array(n).fill(0);\n\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j <= i; j++) {\n        correlatedValues[i] += choleskyMatrix[i][j] * independentValues[j];\n      }\n    }\n\n    return correlatedValues;\n  }\n\n  /**\n   * Create scenario inputs by applying random samples to base inputs\n   * @param {Object} baseInputs - Base model inputs\n   * @param {Object} samples - Random samples\n   * @param {Object} distributions - Distribution definitions\n   * @returns {Object} Scenario inputs\n   */\n  createScenarioInputs(baseInputs, samples, distributions) {\n    const scenarioInputs = { ...baseInputs };\n\n    Object.entries(samples).forEach(([variable, sample]) => {\n      const distribution = distributions[variable];\n\n      if (distribution.applyTo) {\n        // Apply sample to specific input field\n        scenarioInputs[distribution.applyTo] = sample;\n      } else {\n        // Direct assignment\n        scenarioInputs[variable] = sample;\n      }\n    });\n\n    return scenarioInputs;\n  }\n\n  /**\n   * Calculate DCF scenario (simplified for Monte Carlo)\n   * @param {Object} inputs - Scenario inputs\n   * @returns {Object} DCF results\n   */\n  calculateDCFScenario(inputs) {\n    // This would integrate with the financialModelingEngine\n    // Simplified calculation for demonstration\n    const {\n      currentRevenue = 1000000000,\n      revenueGrowthRate = 0.1,\n      fcfMargin = 0.15,\n      wacc = 0.1,\n      terminalGrowthRate = 0.025,\n      sharesOutstanding = 100000000,\n      currentPrice = 100\n    } = inputs;\n\n    // Simple DCF calculation\n    const projectionYears = 5;\n    let totalPV = 0;\n    let revenue = currentRevenue;\n\n    for (let year = 1; year <= projectionYears; year++) {\n      revenue *= (1 + revenueGrowthRate);\n      const fcf = revenue * fcfMargin;\n      const pv = fcf / Math.pow(1 + wacc, year);\n      totalPV += pv;\n    }\n\n    // Terminal value\n    const terminalFCF = revenue * fcfMargin * (1 + terminalGrowthRate);\n    const terminalValue = terminalFCF / (wacc - terminalGrowthRate);\n    const pvTerminal = terminalValue / Math.pow(1 + wacc, projectionYears);\n\n    const enterpriseValue = totalPV + pvTerminal;\n    const pricePerShare = enterpriseValue / sharesOutstanding;\n    const upside = ((pricePerShare - currentPrice) / currentPrice) * 100;\n\n    return {\n      pricePerShare,\n      enterpriseValue,\n      upside\n    };\n  }\n\n  /**\n   * Calculate LBO scenario (simplified for Monte Carlo)\n   * @param {Object} inputs - Scenario inputs\n   * @returns {Object} LBO results\n   */\n  calculateLBOScenario(inputs) {\n    // Simplified LBO calculation for demonstration\n    const {\n      ebitda = 100000000,\n      ebitdaGrowthRate = 0.05,\n      exitMultiple = 10,\n      debtMultiple = 5,\n      holdingPeriod = 5\n    } = inputs;\n\n    const purchasePrice = ebitda * 10; // Assume 10x entry multiple\n    const debt = ebitda * debtMultiple;\n    const equity = purchasePrice - debt;\n\n    // Project exit EBITDA\n    const exitEbitda = ebitda * Math.pow(1 + ebitdaGrowthRate, holdingPeriod);\n    const exitValue = exitEbitda * exitMultiple;\n    const remainingDebt = debt * 0.5; // Assume 50% paydown\n    const exitProceeds = exitValue - remainingDebt;\n\n    const totalReturn = exitProceeds / equity;\n    const irr = Math.pow(totalReturn, 1 / holdingPeriod) - 1;\n\n    return {\n      irr,\n      moic: totalReturn,\n      totalReturn: exitProceeds\n    };\n  }\n\n  /**\n   * Analyze simulation results with enhanced statistical measures\n   * @param {Array} results - Simulation results\n   * @param {number} confidenceLevel - Confidence level\n   * @param {Array} metrics - Metrics to analyze\n   * @returns {Object} Comprehensive statistical analysis\n   */\n  analyzeResults(results, confidenceLevel, metrics = ['pricePerShare', 'enterpriseValue', 'upside']) {\n    const analysis = {\n      statistics: {},\n      percentiles: {},\n      confidenceIntervals: {},\n      riskMetrics: {},\n      distributionTests: {},\n      correlations: {}\n    };\n\n    metrics.forEach(metric => {\n      const values = results.map(r => r[metric]).filter(v => v !== null && !isNaN(v)).sort((a, b) => a - b);\n\n      if (values.length === 0) return;\n\n      const mean = values.reduce((sum, v) => sum + v, 0) / values.length;\n      const variance = values.reduce((sum, v) => sum + Math.pow(v - mean, 2), 0) / values.length;\n      const stdDev = Math.sqrt(variance);\n      const sampleStdDev = Math.sqrt(variance * values.length / (values.length - 1)); // Bessel's correction\n\n      analysis.statistics[metric] = {\n        mean,\n        median: this.percentile(values, 0.5),\n        mode: this.calculateMode(values),\n        stdDev,\n        sampleStdDev,\n        variance,\n        min: values[0],\n        max: values[values.length - 1],\n        range: values[values.length - 1] - values[0],\n        count: values.length,\n        // Additional robust statistics\n        trimmedMean: this.calculateTrimmedMean(values, 0.1), // 10% trimmed mean\n        mad: this.calculateMAD(values), // Median Absolute Deviation\n        iqr: this.percentile(values, 0.75) - this.percentile(values, 0.25)\n      };\n\n      analysis.percentiles[metric] = {\n        p1: this.percentile(values, 0.01),\n        p5: this.percentile(values, 0.05),\n        p10: this.percentile(values, 0.10),\n        p25: this.percentile(values, 0.25),\n        p50: this.percentile(values, 0.5),\n        p75: this.percentile(values, 0.75),\n        p90: this.percentile(values, 0.90),\n        p95: this.percentile(values, 0.95),\n        p99: this.percentile(values, 0.99)\n      };\n\n      const alpha = 1 - confidenceLevel;\n      const lowerBound = this.percentile(values, alpha / 2);\n      const upperBound = this.percentile(values, 1 - alpha / 2);\n\n      analysis.confidenceIntervals[metric] = {\n        level: confidenceLevel,\n        lowerBound,\n        upperBound,\n        width: upperBound - lowerBound,\n        // Bootstrap confidence intervals\n        bootstrapCI: this.calculateBootstrapCI(values, confidenceLevel)\n      };\n\n      const var95 = this.percentile(values, 0.05);\n      const var99 = this.percentile(values, 0.01);\n      const cvar95 = values.slice(0, Math.floor(values.length * 0.05)).reduce((sum, v) => sum + v, 0) / Math.floor(values.length * 0.05);\n      const cvar99 = values.slice(0, Math.floor(values.length * 0.01)).reduce((sum, v) => sum + v, 0) / Math.floor(values.length * 0.01);\n\n      analysis.riskMetrics[metric] = {\n        var95, // Value at Risk (5%)\n        var99, // Value at Risk (1%)\n        cvar95, // Conditional VaR (5%)\n        cvar99, // Conditional VaR (1%)\n        skewness: this.calculateSkewness(values, mean, stdDev),\n        kurtosis: this.calculateKurtosis(values, mean, stdDev),\n        excessKurtosis: this.calculateKurtosis(values, mean, stdDev) - 3,\n        // Tail risk measures\n        expectedShortfall: cvar95,\n        maxDrawdown: this.calculateMaxDrawdown(values),\n        // Risk-adjusted returns\n        sharpeRatio: this.calculateSharpeRatio(values, 0.02), // Assuming 2% risk-free rate\n        sortinoRatio: this.calculateSortinoRatio(values, mean)\n      };\n\n      // Distribution fitting tests\n      analysis.distributionTests[metric] = {\n        jarqueBera: this.jarqueBeraTest(values),\n        kolmogorovSmirnov: this.ksTestNormality(values),\n        shapiroWilk: values.length <= 5000 ? this.shapiroWilkTest(values) : null\n      };\n    });\n\n    // Calculate correlation matrix between metrics\n    if (metrics.length > 1) {\n      analysis.correlations = this.calculateCorrelationMatrix(results, metrics);\n    }\n\n    return analysis;\n  }\n\n  /**\n   * Calculate mode of dataset\n   */\n  calculateMode(values) {\n    const frequency = {};\n    values.forEach(v => {\n      const rounded = Math.round(v * 100) / 100; // Round to avoid floating point issues\n      frequency[rounded] = (frequency[rounded] || 0) + 1;\n    });\n\n    const maxFreq = Math.max(...Object.values(frequency));\n    const modes = Object.keys(frequency).filter(k => frequency[k] === maxFreq);\n\n    return modes.length === 1 ? parseFloat(modes[0]) : null;\n  }\n\n  /**\n   * Calculate trimmed mean\n   */\n  calculateTrimmedMean(sortedValues, trimProportion = 0.1) {\n    const trimCount = Math.floor(sortedValues.length * trimProportion);\n    const trimmedValues = sortedValues.slice(trimCount, -trimCount || undefined);\n    return trimmedValues.reduce((sum, v) => sum + v, 0) / trimmedValues.length;\n  }\n\n  /**\n   * Calculate Median Absolute Deviation\n   */\n  calculateMAD(values) {\n    const median = this.percentile(values, 0.5);\n    const deviations = values.map(v => Math.abs(v - median)).sort((a, b) => a - b);\n    return this.percentile(deviations, 0.5);\n  }\n\n  /**\n   * Calculate bootstrap confidence interval\n   */\n  calculateBootstrapCI(values, confidenceLevel, bootstrapSamples = 1000) {\n    const bootstrapMeans = [];\n\n    for (let i = 0; i < bootstrapSamples; i++) {\n      const sample = [];\n      for (let j = 0; j < values.length; j++) {\n        sample.push(values[Math.floor(Math.random() * values.length)]);\n      }\n      bootstrapMeans.push(sample.reduce((sum, v) => sum + v, 0) / sample.length);\n    }\n\n    bootstrapMeans.sort((a, b) => a - b);\n    const alpha = 1 - confidenceLevel;\n\n    return {\n      lowerBound: this.percentile(bootstrapMeans, alpha / 2),\n      upperBound: this.percentile(bootstrapMeans, 1 - alpha / 2)\n    };\n  }\n\n  /**\n   * Calculate maximum drawdown\n   */\n  calculateMaxDrawdown(values) {\n    let peak = values[0];\n    let maxDrawdown = 0;\n\n    for (const value of values) {\n      if (value > peak) {\n        peak = value;\n      }\n      const drawdown = (peak - value) / peak;\n      if (drawdown > maxDrawdown) {\n        maxDrawdown = drawdown;\n      }\n    }\n\n    return maxDrawdown;\n  }\n\n  /**\n   * Calculate Sharpe ratio approximation\n   */\n  calculateSharpeRatio(values, riskFreeRate = 0.02) {\n    const mean = values.reduce((sum, v) => sum + v, 0) / values.length;\n    const variance = values.reduce((sum, v) => sum + Math.pow(v - mean, 2), 0) / values.length;\n    const stdDev = Math.sqrt(variance);\n\n    return stdDev > 0 ? (mean - riskFreeRate) / stdDev : 0;\n  }\n\n  /**\n   * Calculate Sortino ratio\n   */\n  calculateSortinoRatio(values, targetReturn) {\n    const excessReturns = values.map(v => v - targetReturn);\n    const negativeReturns = excessReturns.filter(r => r < 0);\n\n    if (negativeReturns.length === 0) return Infinity;\n\n    const downsideDeviation = Math.sqrt(\n      negativeReturns.reduce((sum, r) => sum + r * r, 0) / negativeReturns.length\n    );\n\n    const meanExcessReturn = excessReturns.reduce((sum, r) => sum + r, 0) / excessReturns.length;\n\n    return downsideDeviation > 0 ? meanExcessReturn / downsideDeviation : 0;\n  }\n\n  /**\n   * Jarque-Bera test for normality\n   */\n  jarqueBeraTest(values) {\n    const n = values.length;\n    const mean = values.reduce((sum, v) => sum + v, 0) / n;\n    const variance = values.reduce((sum, v) => sum + Math.pow(v - mean, 2), 0) / n;\n    const stdDev = Math.sqrt(variance);\n\n    const skewness = this.calculateSkewness(values, mean, stdDev);\n    const kurtosis = this.calculateKurtosis(values, mean, stdDev);\n\n    const jb = (n / 6) * (Math.pow(skewness, 2) + Math.pow(kurtosis - 3, 2) / 4);\n    const pValue = 1 - this.chiSquaredCDF(jb, 2); // Approximate p-value\n\n    return {\n      statistic: jb,\n      pValue,\n      isNormal: pValue > 0.05\n    };\n  }\n\n  /**\n   * Approximate chi-squared CDF\n   */\n  chiSquaredCDF(x, df) {\n    if (x <= 0) return 0;\n    return this.incompleteGamma(df / 2, x / 2);\n  }\n\n  /**\n   * Incomplete gamma function approximation\n   */\n  incompleteGamma(a, x) {\n    // Simple approximation for demonstration\n    if (x === 0) return 0;\n    if (x < 0) return 0;\n    if (a <= 0) return 0;\n\n    // Use series expansion for small x relative to a\n    if (x < a + 1) {\n      let sum = 1 / a;\n      let term = 1 / a;\n      for (let n = 1; n < 100; n++) {\n        term *= x / (a + n);\n        sum += term;\n        if (Math.abs(term) < 1e-15) break;\n      }\n      return Math.exp(-x + a * Math.log(x) - this.logGamma(a)) * sum;\n    } else {\n      // Use continued fraction for large x\n      let b = x + 1 - a;\n      let c = 1e30;\n      let d = 1 / b;\n      let h = d;\n\n      for (let i = 1; i <= 100; i++) {\n        const an = -i * (i - a);\n        b += 2;\n        d = an * d + b;\n        if (Math.abs(d) < 1e-30) d = 1e-30;\n        c = b + an / c;\n        if (Math.abs(c) < 1e-30) c = 1e-30;\n        d = 1 / d;\n        const del = d * c;\n        h *= del;\n        if (Math.abs(del - 1) < 1e-15) break;\n      }\n\n      const gammacf = Math.exp(-x + a * Math.log(x) - this.logGamma(a)) * h;\n      return 1 - gammacf;\n    }\n  }\n\n  /**\n   * Log gamma function approximation\n   */\n  logGamma(x) {\n    const coef = [\n      76.18009172947144, -86.50532032941676, 24.01409824083091,\n      -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\n    ];\n\n    let j = 0;\n    let ser = 1.0000000001900151;\n    let xx = x;\n    let y = xx = x;\n    let tmp = x + 5.5;\n    tmp -= (x + 0.5) * Math.log(tmp);\n\n    for (; j < 6; j++) {\n      ser += coef[j] / ++y;\n    }\n\n    return -tmp + Math.log(2.506628274631001 * ser / xx);\n  }\n\n  /**\n   * Kolmogorov-Smirnov test for normality\n   */\n  ksTestNormality(values) {\n    const n = values.length;\n    const mean = values.reduce((sum, v) => sum + v, 0) / n;\n    const variance = values.reduce((sum, v) => sum + Math.pow(v - mean, 2), 0) / n;\n    const stdDev = Math.sqrt(variance);\n\n    let maxD = 0;\n\n    for (let i = 0; i < n; i++) {\n      const empirical = (i + 1) / n;\n      const theoretical = this.normalCDF((values[i] - mean) / stdDev);\n      const d = Math.abs(empirical - theoretical);\n      if (d > maxD) maxD = d;\n    }\n\n    const critical = 1.36 / Math.sqrt(n); // Critical value at 5% significance\n\n    return {\n      statistic: maxD,\n      critical,\n      isNormal: maxD < critical\n    };\n  }\n\n  /**\n   * Normal CDF approximation\n   */\n  normalCDF(x) {\n    return 0.5 * (1 + this.erf(x / Math.sqrt(2)));\n  }\n\n  /**\n   * Error function approximation\n   */\n  erf(x) {\n    const a1 =  0.254829592;\n    const a2 = -0.284496736;\n    const a3 =  1.421413741;\n    const a4 = -1.453152027;\n    const a5 =  1.061405429;\n    const p  =  0.3275911;\n\n    const sign = x < 0 ? -1 : 1;\n    x = Math.abs(x);\n\n    const t = 1.0 / (1.0 + p * x);\n    const y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n    return sign * y;\n  }\n\n  /**\n   * Shapiro-Wilk test for normality (simplified)\n   */\n  shapiroWilkTest(values) {\n    // Simplified implementation - in practice, would use lookup tables\n    const n = values.length;\n    if (n < 3 || n > 5000) return null;\n\n    const sortedValues = [...values].sort((a, b) => a - b);\n    const mean = values.reduce((sum, v) => sum + v, 0) / n;\n\n    // This is a very simplified approximation\n    const numerator = 0;\n    let denominator = 0;\n\n    for (let i = 0; i < n; i++) {\n      denominator += Math.pow(sortedValues[i] - mean, 2);\n    }\n\n    // Simplified calculation - real implementation would use Shapiro-Wilk coefficients\n    const w = numerator / denominator;\n\n    return {\n      statistic: w,\n      isNormal: w > 0.9 // Very rough approximation\n    };\n  }\n\n  /**\n   * Calculate correlation matrix between metrics\n   */\n  calculateCorrelationMatrix(results, metrics) {\n    const correlationMatrix = {};\n\n    for (let i = 0; i < metrics.length; i++) {\n      correlationMatrix[metrics[i]] = {};\n      for (let j = 0; j < metrics.length; j++) {\n        if (i === j) {\n          correlationMatrix[metrics[i]][metrics[j]] = 1.0;\n        } else {\n          const valuesI = results.map(r => r[metrics[i]]).filter(v => v !== null && !isNaN(v));\n          const valuesJ = results.map(r => r[metrics[j]]).filter(v => v !== null && !isNaN(v));\n\n          correlationMatrix[metrics[i]][metrics[j]] = this.calculateCorrelation(valuesI, valuesJ);\n        }\n      }\n    }\n\n    return correlationMatrix;\n  }\n\n  /**\n   * Calculate Pearson correlation coefficient\n   */\n  calculateCorrelation(x, y) {\n    if (x.length !== y.length || x.length === 0) return 0;\n\n    const n = x.length;\n    const meanX = x.reduce((sum, v) => sum + v, 0) / n;\n    const meanY = y.reduce((sum, v) => sum + v, 0) / n;\n\n    let numerator = 0;\n    let sumXX = 0;\n    let sumYY = 0;\n\n    for (let i = 0; i < n; i++) {\n      const dx = x[i] - meanX;\n      const dy = y[i] - meanY;\n      numerator += dx * dy;\n      sumXX += dx * dx;\n      sumYY += dy * dy;\n    }\n\n    const denominator = Math.sqrt(sumXX * sumYY);\n    return denominator > 0 ? numerator / denominator : 0;\n  }\n\n  /**\n   * Calculate percentile\n   * @param {Array} sortedValues - Sorted array of values\n   * @param {number} p - Percentile (0-1)\n   * @returns {number} Percentile value\n   */\n  percentile(sortedValues, p) {\n    const index = p * (sortedValues.length - 1);\n    const lower = Math.floor(index);\n    const upper = Math.ceil(index);\n    const weight = index - lower;\n\n    if (lower === upper) {\n      return sortedValues[lower];\n    }\n\n    return sortedValues[lower] * (1 - weight) + sortedValues[upper] * weight;\n  }\n\n  /**\n   * Calculate skewness\n   * @param {Array} values - Array of values\n   * @param {number} mean - Mean\n   * @param {number} stdDev - Standard deviation\n   * @returns {number} Skewness\n   */\n  calculateSkewness(values, mean, stdDev) {\n    const n = values.length;\n    const sum = values.reduce((sum, v) => sum + Math.pow((v - mean) / stdDev, 3), 0);\n    return (n / ((n - 1) * (n - 2))) * sum;\n  }\n\n  /**\n   * Calculate kurtosis\n   * @param {Array} values - Array of values\n   * @param {number} mean - Mean\n   * @param {number} stdDev - Standard deviation\n   * @returns {number} Kurtosis\n   */\n  calculateKurtosis(values, mean, stdDev) {\n    const n = values.length;\n    const sum = values.reduce((sum, v) => sum + Math.pow((v - mean) / stdDev, 4), 0);\n    return ((n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3))) * sum - (3 * Math.pow(n - 1, 2)) / ((n - 2) * (n - 3));\n  }\n\n  /**\n   * Set random seed for reproducible results\n   * @param {number} seed - Random seed\n   */\n  setSeed(seed) {\n    // Simple linear congruential generator for reproducible results\n    this.seed = seed;\n    this.random = () => {\n      this.seed = (this.seed * 9301 + 49297) % 233280;\n      return this.seed / 233280;\n    };\n    Math.random = this.random;\n  }\n\n  /**\n   * Stop running simulation\n   */\n  stopSimulation() {\n    this.isRunning = false;\n  }\n\n  /**\n   * Check if simulation is running\n   * @returns {boolean} True if running\n   */\n  isSimulationRunning() {\n    return this.isRunning;\n  }\n}\n\n// Export singleton instance\nexport const monteCarloEngine = new MonteCarloEngine();\nexport default MonteCarloEngine;\n","/**\n * Enhanced Local Storage Service for Finance Analyst Pro\n * Provides comprehensive data persistence with compression, encryption, and versioning\n */\n\nimport { apiLogger } from '../utils/apiLogger.js';\n\n// Storage configuration\nconst STORAGE_CONFIG = {\n  version: '1.0.0',\n  prefix: 'financeanalyst_',\n  compression: {\n    enabled: true,\n    threshold: 1024 // Compress data larger than 1KB\n  },\n  encryption: {\n    enabled: false, // Will be enabled when auth is implemented\n    algorithm: 'AES-GCM'\n  },\n  quotaManagement: {\n    maxSize: 50 * 1024 * 1024, // 50MB limit\n    cleanupThreshold: 0.8 // Clean up when 80% full\n  }\n};\n\n// Data schemas for validation\nconst DATA_SCHEMAS = {\n  dcfModel: {\n    version: '1.0',\n    required: ['symbol', 'assumptions', 'projections', 'valuation'],\n    structure: {\n      symbol: 'string',\n      assumptions: 'object',\n      projections: 'object',\n      valuation: 'object',\n      metadata: 'object'\n    }\n  },\n  lboModel: {\n    version: '1.0',\n    required: ['symbol', 'transaction', 'financing', 'returns'],\n    structure: {\n      symbol: 'string',\n      transaction: 'object',\n      financing: 'object',\n      returns: 'object',\n      metadata: 'object'\n    }\n  },\n  monteCarloResults: {\n    version: '1.0',\n    required: ['modelType', 'iterations', 'results', 'statistics'],\n    structure: {\n      modelType: 'string',\n      iterations: 'number',\n      results: 'array',\n      statistics: 'object',\n      metadata: 'object'\n    }\n  },\n  userPreferences: {\n    version: '1.0',\n    required: ['theme', 'layout'],\n    structure: {\n      theme: 'string',\n      layout: 'object',\n      notifications: 'object',\n      privacy: 'object'\n    }\n  },\n  marketData: {\n    version: '1.0',\n    required: ['symbol', 'data', 'timestamp'],\n    structure: {\n      symbol: 'string',\n      data: 'object',\n      timestamp: 'number',\n      source: 'string'\n    }\n  }\n};\n\n/**\n * Enhanced Storage Service Class\n */\nclass StorageService {\n  constructor() {\n    this.isAvailable = this.checkStorageAvailability();\n    this.compressionWorker = null;\n    this.initializeCompression();\n    this.setupQuotaMonitoring();\n  }\n\n  /**\n   * Check if localStorage is available\n   */\n  checkStorageAvailability() {\n    try {\n      const test = '__storage_test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      apiLogger.log('ERROR', 'localStorage not available', { error: e.message });\n      return false;\n    }\n  }\n\n  /**\n   * Initialize compression capabilities\n   */\n  initializeCompression() {\n    if (STORAGE_CONFIG.compression.enabled && 'CompressionStream' in window) {\n      // Modern browsers with compression support\n      this.compressionAvailable = true;\n    } else {\n      // Fallback to simple JSON stringification\n      this.compressionAvailable = false;\n    }\n  }\n\n  /**\n   * Setup quota monitoring\n   */\n  setupQuotaMonitoring() {\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      this.monitorQuota();\n    }\n  }\n\n  /**\n   * Monitor storage quota usage\n   */\n  async monitorQuota() {\n    try {\n      const estimate = await navigator.storage.estimate();\n      const usageRatio = estimate.usage / estimate.quota;\n\n      if (usageRatio > STORAGE_CONFIG.quotaManagement.cleanupThreshold) {\n        apiLogger.log('WARN', 'Storage quota threshold exceeded', {\n          usage: estimate.usage,\n          quota: estimate.quota,\n          ratio: usageRatio\n        });\n        await this.performCleanup();\n      }\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to monitor storage quota', { error: error.message });\n    }\n  }\n\n  /**\n   * Generate storage key with prefix\n   */\n  generateKey(type, identifier) {\n    return `${STORAGE_CONFIG.prefix}${type}_${identifier}`;\n  }\n\n  /**\n   * Validate data against schema\n   */\n  validateData(data, schemaType) {\n    const schema = DATA_SCHEMAS[schemaType];\n    if (!schema) {\n      throw new Error(`Unknown schema type: ${schemaType}`);\n    }\n\n    // Check required fields\n    for (const field of schema.required) {\n      if (!(field in data)) {\n        throw new Error(`Missing required field: ${field}`);\n      }\n    }\n\n    // Validate data types\n    for (const [field, expectedType] of Object.entries(schema.structure)) {\n      if (field in data) {\n        const actualType = Array.isArray(data[field]) ? 'array' : typeof data[field];\n        if (actualType !== expectedType) {\n          throw new Error(`Invalid type for ${field}: expected ${expectedType}, got ${actualType}`);\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Compress data if enabled and beneficial\n   */\n  async compressData(data) {\n    const jsonString = JSON.stringify(data);\n\n    if (!STORAGE_CONFIG.compression.enabled ||\n        jsonString.length < STORAGE_CONFIG.compression.threshold ||\n        !this.compressionAvailable) {\n      return { data: jsonString, compressed: false };\n    }\n\n    try {\n      // Simple compression using built-in methods\n      const compressed = await this.simpleCompress(jsonString);\n      return { data: compressed, compressed: true };\n    } catch (error) {\n      apiLogger.log('WARN', 'Compression failed, storing uncompressed', { error: error.message });\n      return { data: jsonString, compressed: false };\n    }\n  }\n\n  /**\n   * Simple compression implementation\n   */\n  async simpleCompress(data) {\n    // For now, use a simple encoding - can be enhanced with actual compression\n    return btoa(encodeURIComponent(data));\n  }\n\n  /**\n   * Decompress data\n   */\n  async decompressData(compressedData, isCompressed) {\n    if (!isCompressed) {\n      return compressedData;\n    }\n\n    try {\n      return decodeURIComponent(atob(compressedData));\n    } catch (error) {\n      apiLogger.log('ERROR', 'Decompression failed', { error: error.message });\n      throw new Error('Failed to decompress data');\n    }\n  }\n\n  /**\n   * Store data with metadata\n   */\n  async setItem(type, identifier, data, options = {}) {\n    if (!this.isAvailable) {\n      throw new Error('Storage not available');\n    }\n\n    try {\n      // Validate data if schema exists\n      if (DATA_SCHEMAS[type]) {\n        this.validateData(data, type);\n      }\n\n      // Prepare storage object\n      const storageObject = {\n        version: STORAGE_CONFIG.version,\n        schemaVersion: DATA_SCHEMAS[type]?.version || '1.0',\n        timestamp: Date.now(),\n        data,\n        metadata: {\n          type,\n          identifier,\n          size: JSON.stringify(data).length,\n          ...options.metadata\n        }\n      };\n\n      // Compress if needed\n      const { data: processedData, compressed } = await this.compressData(storageObject);\n\n      // Add compression flag\n      const finalObject = {\n        compressed,\n        data: processedData\n      };\n\n      const key = this.generateKey(type, identifier);\n      localStorage.setItem(key, JSON.stringify(finalObject));\n\n      apiLogger.log('DEBUG', 'Data stored successfully', {\n        key,\n        type,\n        identifier,\n        compressed,\n        size: processedData.length\n      });\n\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to store data', {\n        type,\n        identifier,\n        error: error.message\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Retrieve data with decompression\n   */\n  async getItem(type, identifier) {\n    if (!this.isAvailable) {\n      return null;\n    }\n\n    try {\n      const key = this.generateKey(type, identifier);\n      const stored = localStorage.getItem(key);\n\n      if (!stored) {\n        return null;\n      }\n\n      const parsedStored = JSON.parse(stored);\n      const decompressedData = await this.decompressData(\n        parsedStored.data,\n        parsedStored.compressed\n      );\n\n      const storageObject = JSON.parse(decompressedData);\n\n      // Check version compatibility\n      if (storageObject.version !== STORAGE_CONFIG.version) {\n        apiLogger.log('WARN', 'Version mismatch detected', {\n          stored: storageObject.version,\n          current: STORAGE_CONFIG.version\n        });\n        // Could trigger migration here\n      }\n\n      apiLogger.log('DEBUG', 'Data retrieved successfully', {\n        key,\n        type,\n        identifier,\n        age: Date.now() - storageObject.timestamp\n      });\n\n      return storageObject.data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve data', {\n        type,\n        identifier,\n        error: error.message\n      });\n      return null;\n    }\n  }\n\n  /**\n   * Remove specific item\n   */\n  removeItem(type, identifier) {\n    if (!this.isAvailable) {\n      return false;\n    }\n\n    try {\n      const key = this.generateKey(type, identifier);\n      localStorage.removeItem(key);\n\n      apiLogger.log('DEBUG', 'Data removed successfully', { key, type, identifier });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to remove data', {\n        type,\n        identifier,\n        error: error.message\n      });\n      return false;\n    }\n  }\n\n  /**\n   * List all items of a specific type\n   */\n  listItems(type) {\n    if (!this.isAvailable) {\n      return [];\n    }\n\n    const prefix = this.generateKey(type, '');\n    const items = [];\n\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(prefix)) {\n        const identifier = key.replace(prefix, '');\n        items.push(identifier);\n      }\n    }\n\n    return items;\n  }\n\n  /**\n   * Perform cleanup of old data\n   */\n  async performCleanup() {\n    const cutoffTime = Date.now() - (30 * 24 * 60 * 60 * 1000); // 30 days\n    let cleanedCount = 0;\n\n    for (let i = localStorage.length - 1; i >= 0; i--) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(STORAGE_CONFIG.prefix)) {\n        try {\n          const stored = localStorage.getItem(key);\n          const parsedStored = JSON.parse(stored);\n          const decompressedData = await this.decompressData(\n            parsedStored.data,\n            parsedStored.compressed\n          );\n          const storageObject = JSON.parse(decompressedData);\n\n          if (storageObject.timestamp < cutoffTime) {\n            localStorage.removeItem(key);\n            cleanedCount++;\n          }\n        } catch (_error) {\n          // Remove corrupted data\n          localStorage.removeItem(key);\n          cleanedCount++;\n        }\n      }\n    }\n\n    apiLogger.log('INFO', 'Storage cleanup completed', { cleanedCount });\n    return cleanedCount;\n  }\n\n  /**\n   * Get storage statistics\n   */\n  async getStorageStats() {\n    let totalSize = 0;\n    let itemCount = 0;\n    const typeStats = {};\n\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(STORAGE_CONFIG.prefix)) {\n        const value = localStorage.getItem(key);\n        totalSize += value.length;\n        itemCount++;\n\n        // Extract type from key\n        const type = key.split('_')[1];\n        if (type) {\n          typeStats[type] = (typeStats[type] || 0) + 1;\n        }\n      }\n    }\n\n    const quota = await this.getQuotaInfo();\n\n    return {\n      totalSize,\n      itemCount,\n      typeStats,\n      quota,\n      usageRatio: quota ? totalSize / quota.quota : 0\n    };\n  }\n\n  /**\n   * Get quota information\n   */\n  async getQuotaInfo() {\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      try {\n        return await navigator.storage.estimate();\n      } catch (error) {\n        apiLogger.log('ERROR', 'Failed to get quota info', { error: error.message });\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Clear all application data\n   */\n  clearAll() {\n    if (!this.isAvailable) {\n      return false;\n    }\n\n    const keys = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(STORAGE_CONFIG.prefix)) {\n        keys.push(key);\n      }\n    }\n\n    keys.forEach(key => localStorage.removeItem(key));\n\n    apiLogger.log('INFO', 'All application data cleared', { clearedCount: keys.length });\n    return true;\n  }\n}\n\n// Create and export singleton instance\nexport const storageService = new StorageService();\nexport default storageService;\n","/**\n * Financial Data Storage Service\n * Specialized storage utilities for financial models and market data\n */\n\nimport { apiLogger } from '../utils/apiLogger.js';\n\nimport { storageService } from './storageService.js';\n\n/**\n * Financial Data Storage Manager\n */\nclass FinancialDataStorage {\n  constructor() {\n    this.storage = storageService;\n  }\n\n  /**\n   * DCF Model Storage\n   */\n  async saveDCFModel(symbol, modelData) {\n    try {\n      const dcfData = {\n        symbol: symbol.toUpperCase(),\n        assumptions: modelData.assumptions || {},\n        projections: modelData.projections || {},\n        valuation: modelData.valuation || {},\n        metadata: {\n          createdAt: Date.now(),\n          lastModified: Date.now(),\n          version: '1.0',\n          modelType: 'DCF',\n          ...modelData.metadata\n        }\n      };\n\n      await this.storage.setItem('dcfModel', symbol.toUpperCase(), dcfData);\n\n      apiLogger.log('INFO', 'DCF model saved', { symbol, valuation: dcfData.valuation.intrinsicValue });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save DCF model', { symbol, error: error.message });\n      throw error;\n    }\n  }\n\n  async getDCFModel(symbol) {\n    try {\n      const data = await this.storage.getItem('dcfModel', symbol.toUpperCase());\n      if (data) {\n        apiLogger.log('DEBUG', 'DCF model retrieved', { symbol });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve DCF model', { symbol, error: error.message });\n      return null;\n    }\n  }\n\n  async listDCFModels() {\n    return this.storage.listItems('dcfModel');\n  }\n\n  async deleteDCFModel(symbol) {\n    return this.storage.removeItem('dcfModel', symbol.toUpperCase());\n  }\n\n  /**\n   * LBO Model Storage\n   */\n  async saveLBOModel(symbol, modelData) {\n    try {\n      const lboData = {\n        symbol: symbol.toUpperCase(),\n        transaction: modelData.transaction || {},\n        financing: modelData.financing || {},\n        returns: modelData.returns || {},\n        metadata: {\n          createdAt: Date.now(),\n          lastModified: Date.now(),\n          version: '1.0',\n          modelType: 'LBO',\n          ...modelData.metadata\n        }\n      };\n\n      await this.storage.setItem('lboModel', symbol.toUpperCase(), lboData);\n\n      apiLogger.log('INFO', 'LBO model saved', {\n        symbol,\n        irr: lboData.returns.irr,\n        moic: lboData.returns.moic\n      });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save LBO model', { symbol, error: error.message });\n      throw error;\n    }\n  }\n\n  async getLBOModel(symbol) {\n    try {\n      const data = await this.storage.getItem('lboModel', symbol.toUpperCase());\n      if (data) {\n        apiLogger.log('DEBUG', 'LBO model retrieved', { symbol });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve LBO model', { symbol, error: error.message });\n      return null;\n    }\n  }\n\n  async listLBOModels() {\n    return this.storage.listItems('lboModel');\n  }\n\n  async deleteLBOModel(symbol) {\n    return this.storage.removeItem('lboModel', symbol.toUpperCase());\n  }\n\n  /**\n   * Monte Carlo Results Storage\n   */\n  async saveMonteCarloResults(modelId, resultsData) {\n    try {\n      const mcData = {\n        modelType: resultsData.modelType || 'DCF',\n        iterations: resultsData.iterations || 10000,\n        results: resultsData.results || [],\n        statistics: resultsData.statistics || {},\n        metadata: {\n          createdAt: Date.now(),\n          modelId,\n          symbol: resultsData.symbol,\n          version: '1.0',\n          ...resultsData.metadata\n        }\n      };\n\n      await this.storage.setItem('monteCarloResults', modelId, mcData);\n\n      apiLogger.log('INFO', 'Monte Carlo results saved', {\n        modelId,\n        iterations: mcData.iterations,\n        mean: mcData.statistics.mean\n      });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save Monte Carlo results', { modelId, error: error.message });\n      throw error;\n    }\n  }\n\n  async getMonteCarloResults(modelId) {\n    try {\n      const data = await this.storage.getItem('monteCarloResults', modelId);\n      if (data) {\n        apiLogger.log('DEBUG', 'Monte Carlo results retrieved', { modelId });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve Monte Carlo results', { modelId, error: error.message });\n      return null;\n    }\n  }\n\n  async listMonteCarloResults() {\n    return this.storage.listItems('monteCarloResults');\n  }\n\n  async deleteMonteCarloResults(modelId) {\n    return this.storage.removeItem('monteCarloResults', modelId);\n  }\n\n  /**\n   * Market Data Storage with TTL\n   */\n  async saveMarketData(symbol, marketData, ttlMinutes = 15) {\n    try {\n      const data = {\n        symbol: symbol.toUpperCase(),\n        data: marketData,\n        timestamp: Date.now(),\n        source: marketData.source || 'unknown',\n        expiresAt: Date.now() + (ttlMinutes * 60 * 1000)\n      };\n\n      await this.storage.setItem('marketData', symbol.toUpperCase(), data);\n\n      apiLogger.log('DEBUG', 'Market data cached', {\n        symbol,\n        source: data.source,\n        ttlMinutes\n      });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to cache market data', { symbol, error: error.message });\n      throw error;\n    }\n  }\n\n  async getMarketData(symbol) {\n    try {\n      const data = await this.storage.getItem('marketData', symbol.toUpperCase());\n\n      if (data && data.expiresAt > Date.now()) {\n        apiLogger.log('DEBUG', 'Market data cache hit', { symbol });\n        return data.data;\n      } else if (data) {\n        // Data expired, remove it\n        await this.deleteMarketData(symbol);\n        apiLogger.log('DEBUG', 'Market data cache expired', { symbol });\n      }\n\n      return null;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve market data', { symbol, error: error.message });\n      return null;\n    }\n  }\n\n  async deleteMarketData(symbol) {\n    return this.storage.removeItem('marketData', symbol.toUpperCase());\n  }\n\n  /**\n   * User Preferences Storage\n   */\n  async saveUserPreferences(preferences) {\n    try {\n      const prefData = {\n        theme: preferences.theme || 'light',\n        layout: preferences.layout || {},\n        notifications: preferences.notifications || {},\n        privacy: preferences.privacy || {},\n        metadata: {\n          lastUpdated: Date.now(),\n          version: '1.0'\n        }\n      };\n\n      await this.storage.setItem('userPreferences', 'default', prefData);\n\n      apiLogger.log('INFO', 'User preferences saved', { theme: prefData.theme });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save user preferences', { error: error.message });\n      throw error;\n    }\n  }\n\n  async getUserPreferences() {\n    try {\n      const data = await this.storage.getItem('userPreferences', 'default');\n      if (data) {\n        apiLogger.log('DEBUG', 'User preferences retrieved');\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve user preferences', { error: error.message });\n      return null;\n    }\n  }\n\n  /**\n   * Watchlist Storage\n   */\n  async saveWatchlist(name, symbols) {\n    try {\n      const watchlistData = {\n        name,\n        symbols: symbols.map(s => s.toUpperCase()),\n        metadata: {\n          createdAt: Date.now(),\n          lastModified: Date.now(),\n          symbolCount: symbols.length\n        }\n      };\n\n      await this.storage.setItem('watchlist', name, watchlistData);\n\n      apiLogger.log('INFO', 'Watchlist saved', { name, symbolCount: symbols.length });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save watchlist', { name, error: error.message });\n      throw error;\n    }\n  }\n\n  async getWatchlist(name) {\n    try {\n      const data = await this.storage.getItem('watchlist', name);\n      if (data) {\n        apiLogger.log('DEBUG', 'Watchlist retrieved', { name });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve watchlist', { name, error: error.message });\n      return null;\n    }\n  }\n\n  async listWatchlists() {\n    return this.storage.listItems('watchlist');\n  }\n\n  async deleteWatchlist(name) {\n    return this.storage.removeItem('watchlist', name);\n  }\n\n  /**\n   * Export all financial data\n   */\n  async exportAllData() {\n    try {\n      const exportData = {\n        timestamp: Date.now(),\n        version: '1.0',\n        data: {\n          dcfModels: {},\n          lboModels: {},\n          monteCarloResults: {},\n          watchlists: {},\n          userPreferences: null\n        }\n      };\n\n      // Export DCF models\n      const dcfModels = await this.listDCFModels();\n      for (const symbol of dcfModels) {\n        exportData.data.dcfModels[symbol] = await this.getDCFModel(symbol);\n      }\n\n      // Export LBO models\n      const lboModels = await this.listLBOModels();\n      for (const symbol of lboModels) {\n        exportData.data.lboModels[symbol] = await this.getLBOModel(symbol);\n      }\n\n      // Export Monte Carlo results\n      const mcResults = await this.listMonteCarloResults();\n      for (const modelId of mcResults) {\n        exportData.data.monteCarloResults[modelId] = await this.getMonteCarloResults(modelId);\n      }\n\n      // Export watchlists\n      const watchlists = await this.listWatchlists();\n      for (const name of watchlists) {\n        exportData.data.watchlists[name] = await this.getWatchlist(name);\n      }\n\n      // Export user preferences\n      exportData.data.userPreferences = await this.getUserPreferences();\n\n      apiLogger.log('INFO', 'Data export completed', {\n        dcfCount: dcfModels.length,\n        lboCount: lboModels.length,\n        mcCount: mcResults.length,\n        watchlistCount: watchlists.length\n      });\n\n      return exportData;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to export data', { error: error.message });\n      throw error;\n    }\n  }\n\n  /**\n   * Import financial data\n   */\n  async importData(importData) {\n    try {\n      let importCount = 0;\n\n      // Import DCF models\n      if (importData.data.dcfModels) {\n        for (const [symbol, data] of Object.entries(importData.data.dcfModels)) {\n          await this.saveDCFModel(symbol, data);\n          importCount++;\n        }\n      }\n\n      // Import LBO models\n      if (importData.data.lboModels) {\n        for (const [symbol, data] of Object.entries(importData.data.lboModels)) {\n          await this.saveLBOModel(symbol, data);\n          importCount++;\n        }\n      }\n\n      // Import Monte Carlo results\n      if (importData.data.monteCarloResults) {\n        for (const [modelId, data] of Object.entries(importData.data.monteCarloResults)) {\n          await this.saveMonteCarloResults(modelId, data);\n          importCount++;\n        }\n      }\n\n      // Import watchlists\n      if (importData.data.watchlists) {\n        for (const [name, data] of Object.entries(importData.data.watchlists)) {\n          await this.saveWatchlist(name, data.symbols);\n          importCount++;\n        }\n      }\n\n      // Import user preferences\n      if (importData.data.userPreferences) {\n        await this.saveUserPreferences(importData.data.userPreferences);\n        importCount++;\n      }\n\n      apiLogger.log('INFO', 'Data import completed', { importCount });\n      return importCount;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to import data', { error: error.message });\n      throw error;\n    }\n  }\n\n  /**\n   * Get storage statistics for financial data\n   */\n  async getFinancialDataStats() {\n    const stats = await this.storage.getStorageStats();\n\n    return {\n      ...stats,\n      financialData: {\n        dcfModels: (await this.listDCFModels()).length,\n        lboModels: (await this.listLBOModels()).length,\n        monteCarloResults: (await this.listMonteCarloResults()).length,\n        watchlists: (await this.listWatchlists()).length\n      }\n    };\n  }\n\n  /**\n   * Clean up expired market data\n   */\n  async cleanupExpiredMarketData() {\n    const marketDataKeys = this.storage.listItems('marketData');\n    let cleanedCount = 0;\n\n    for (const symbol of marketDataKeys) {\n      const data = await this.storage.getItem('marketData', symbol);\n      if (data && data.expiresAt <= Date.now()) {\n        await this.deleteMarketData(symbol);\n        cleanedCount++;\n      }\n    }\n\n    apiLogger.log('INFO', 'Expired market data cleaned', { cleanedCount });\n    return cleanedCount;\n  }\n}\n\n// Create and export singleton instance\nexport const financialDataStorage = new FinancialDataStorage();\nexport default financialDataStorage;\n","/**\n * Data Export/Import Component\n * Provides UI for exporting and importing financial data\n */\n\nimport {\n  Download,\n  Upload,\n  FileText,\n  CheckCircle,\n  Loader2,\n  Info,\n  AlertCircle,\n  FileSpreadsheet,\n  Bookmark,\n  Users,\n  Database\n} from 'lucide-react';\nimport React, { useState } from 'react';\n\nimport { financialDataStorage } from '../services/financialDataStorage.js';\nimport { apiLogger } from '../utils/apiLogger.js';\n\nconst defaultTemplates = [\n  { id: 1, name: 'Standard 3-Statement Model', category: 'General', lastUsed: '2024-01-15', uses: 42 },\n  { id: 2, name: 'SaaS DCF Template', category: 'Technology', lastUsed: '2024-01-10', uses: 28 },\n  { id: 3, name: 'LBO Analysis Template', category: 'Private Equity', lastUsed: '2024-01-05', uses: 35 }\n];\n\nconst DataExportImport = ({ data: _data, onDataChange: _onDataChange, savedAnalyses: _savedAnalyses, onAnalysesChange: _onAnalysesChange, onClose, className: _className }) => {\n  const [activeTab, setActiveTab] = useState('excel');\n  const [isExporting, setIsExporting] = useState(false);\n  const [isImporting, setIsImporting] = useState(false);\n  const [exportStatus, setExportStatus] = useState(null);\n  const [importStatus, setImportStatus] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [templates, _setTemplates] = useState(defaultTemplates);\n  const [collaborators, _setCollaborators] = useState([\n    { id: 1, name: 'John Smith', email: 'john@company.com', role: 'Analyst', lastActive: '2 min ago', avatar: 'JS' },\n    { id: 2, name: 'Sarah Johnson', email: 'sarah@company.com', role: 'VP', lastActive: '1 hour ago', avatar: 'SJ' }\n  ]);\n\n  // Load storage statistics on component mount\n  React.useEffect(() => {\n    loadStats();\n  }, []);\n\n  const loadStats = async() => {\n    try {\n      const storageStats = await financialDataStorage.getFinancialDataStats();\n      setStats(storageStats);\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to load storage stats', { error: error.message });\n    }\n  };\n\n  const handleExport = async() => {\n    setIsExporting(true);\n    setExportStatus(null);\n\n    try {\n      const exportData = await financialDataStorage.exportAllData();\n\n      // Create downloadable file\n      const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n        type: 'application/json'\n      });\n\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `financeanalyst_backup_${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n\n      setExportStatus({\n        type: 'success',\n        message: 'Data exported successfully',\n        details: {\n          dcfModels: Object.keys(exportData.data.dcfModels).length,\n          lboModels: Object.keys(exportData.data.lboModels).length,\n          monteCarloResults: Object.keys(exportData.data.monteCarloResults).length,\n          watchlists: Object.keys(exportData.data.watchlists).length\n        }\n      });\n\n      apiLogger.log('INFO', 'Data export completed', {\n        totalItems: Object.keys(exportData.data.dcfModels).length +\n                   Object.keys(exportData.data.lboModels).length +\n                   Object.keys(exportData.data.monteCarloResults).length +\n                   Object.keys(exportData.data.watchlists).length\n      });\n    } catch (error) {\n      setExportStatus({\n        type: 'error',\n        message: 'Export failed',\n        details: error.message\n      });\n      apiLogger.log('ERROR', 'Data export failed', { error: error.message });\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  const handleImport = async(event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    setIsImporting(true);\n    setImportStatus(null);\n\n    try {\n      const text = await file.text();\n      const importData = JSON.parse(text);\n\n      // Validate import data structure\n      if (!importData.data || !importData.version) {\n        throw new Error('Invalid backup file format');\n      }\n\n      const importCount = await financialDataStorage.importData(importData);\n\n      setImportStatus({\n        type: 'success',\n        message: 'Data imported successfully',\n        details: {\n          importCount,\n          timestamp: new Date(importData.timestamp).toLocaleString()\n        }\n      });\n\n      // Refresh stats\n      await loadStats();\n\n      apiLogger.log('INFO', 'Data import completed', { importCount });\n    } catch (error) {\n      setImportStatus({\n        type: 'error',\n        message: 'Import failed',\n        details: error.message\n      });\n      apiLogger.log('ERROR', 'Data import failed', { error: error.message });\n    } finally {\n      setIsImporting(false);\n      // Clear file input\n      event.target.value = '';\n    }\n  };\n\n  const formatBytes = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Data Management</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            ×\n          </button>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8\">\n            {[\n              { id: 'excel', label: 'Excel Integration', icon: FileSpreadsheet },\n              { id: 'templates', label: 'Templates', icon: Bookmark },\n              { id: 'collaboration', label: 'Collaboration', icon: Users },\n              { id: 'export', label: 'Export', icon: Download },\n              { id: 'import', label: 'Import', icon: Upload },\n              { id: 'stats', label: 'Statistics', icon: Database }\n            ].map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span>{tab.label}</span>\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n\n          {activeTab === 'excel' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-start\">\n                  <Info className=\"w-5 h-5 text-blue-600 mt-0.5 mr-3\" />\n                  <div>\n                    <h3 className=\"font-medium text-blue-900\">Excel Integration</h3>\n                    <p className=\"text-sm text-blue-700 mt-1\">\n                      Connect your Excel spreadsheets to FinanceAnalyst for seamless data synchronization.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <button\n                onClick={handleExport}\n                disabled={isExporting}\n                className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center\"\n              >\n                {isExporting ? (\n                  <>\n                    <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                    Exporting...\n                  </>\n                ) : (\n                  <>\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Export All Data\n                  </>\n                )}\n              </button>\n\n              {exportStatus && (\n                <div\n                  className={`border rounded-lg p-4 ${\n                    exportStatus.type === 'success'\n                      ? 'bg-green-50 border-green-200'\n                      : 'bg-red-50 border-red-200'\n                  }`}\n                >\n                  <div className=\"flex items-start\">\n                    {exportStatus.type === 'success' ? (\n                      <CheckCircle className=\"w-5 h-5 text-green-600 mt-0.5 mr-3\" />\n                    ) : (\n                      <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5 mr-3\" />\n                    )}\n                    <div>\n                      <h4\n                        className={`font-medium ${\n                          exportStatus.type === 'success' ? 'text-green-900' : 'text-red-900'\n                        }`}\n                      >\n                        {exportStatus.message}\n                      </h4>\n                      {exportStatus.type === 'success' && exportStatus.details && (\n                        <div className=\"text-sm text-green-700 mt-2\">\n                          <p>Exported items:</p>\n                          <ul className=\"list-disc list-inside ml-4\">\n                            <li>{exportStatus.details.dcfModels} DCF Models</li>\n                            <li>{exportStatus.details.lboModels} LBO Models</li>\n                            <li>{exportStatus.details.monteCarloResults} Monte Carlo Results</li>\n                            <li>{exportStatus.details.watchlists} Watchlists</li>\n                          </ul>\n                        </div>\n                      )}\n                      {exportStatus.type === 'error' && (\n                        <p className=\"text-sm text-red-700 mt-1\">{exportStatus.details}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'templates' && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Templates</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {templates.map((template) => (\n                  <div key={template.id} className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">{template.name}</h4>\n                    <p className=\"text-sm text-gray-600\">{template.category}</p>\n                    <p className=\"text-sm text-gray-600\">Last used: {template.lastUsed}</p>\n                    <p className=\"text-sm text-gray-600\">Uses: {template.uses}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'collaboration' && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Collaboration</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {collaborators.map((collaborator) => (\n                  <div key={collaborator.id} className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">{collaborator.name}</h4>\n                    <p className=\"text-sm text-gray-600\">{collaborator.email}</p>\n                    <p className=\"text-sm text-gray-600\">Role: {collaborator.role}</p>\n                    <p className=\"text-sm text-gray-600\">Last active: {collaborator.lastActive}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'export' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-start\">\n                  <Info className=\"w-5 h-5 text-blue-600 mt-0.5 mr-3\" />\n                  <div>\n                    <h3 className=\"font-medium text-blue-900\">Export Your Data</h3>\n                    <p className=\"text-sm text-blue-700 mt-1\">\n                      Download all your financial models, analysis results, and preferences as a backup file.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <button\n                onClick={handleExport}\n                disabled={isExporting}\n                className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center\"\n              >\n                {isExporting ? (\n                  <>\n                    <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                    Exporting...\n                  </>\n                ) : (\n                  <>\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Export All Data\n                  </>\n                )}\n              </button>\n\n              {exportStatus && (\n                <div\n                  className={`border rounded-lg p-4 ${\n                    exportStatus.type === 'success'\n                      ? 'bg-green-50 border-green-200'\n                      : 'bg-red-50 border-red-200'\n                  }`}\n                >\n                  <div className=\"flex items-start\">\n                    {exportStatus.type === 'success' ? (\n                      <CheckCircle className=\"w-5 h-5 text-green-600 mt-0.5 mr-3\" />\n                    ) : (\n                      <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5 mr-3\" />\n                    )}\n                    <div>\n                      <h4\n                        className={`font-medium ${\n                          exportStatus.type === 'success' ? 'text-green-900' : 'text-red-900'\n                        }`}\n                      >\n                        {exportStatus.message}\n                      </h4>\n                      {exportStatus.type === 'success' && exportStatus.details && (\n                        <div className=\"text-sm text-green-700 mt-2\">\n                          <p>Exported items:</p>\n                          <ul className=\"list-disc list-inside ml-4\">\n                            <li>{exportStatus.details.dcfModels} DCF Models</li>\n                            <li>{exportStatus.details.lboModels} LBO Models</li>\n                            <li>{exportStatus.details.monteCarloResults} Monte Carlo Results</li>\n                            <li>{exportStatus.details.watchlists} Watchlists</li>\n                          </ul>\n                        </div>\n                      )}\n                      {exportStatus.type === 'error' && (\n                        <p className=\"text-sm text-red-700 mt-1\">{exportStatus.details}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n\n          {activeTab === 'import' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4\">\n                <div className=\"flex items-start\">\n                  <AlertCircle className=\"w-5 h-5 text-amber-600 mt-0.5 mr-3\" />\n                  <div>\n                    <h3 className=\"font-medium text-amber-900\">Import Data</h3>\n                    <p className=\"text-sm text-amber-700 mt-1\">\n                      Import data from a backup file. This will add to your existing data.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\n                <FileText className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n                <label className=\"cursor-pointer\">\n                  <span className=\"text-lg font-medium text-gray-900\">\n                    Choose backup file\n                  </span>\n                  <p className=\"text-sm text-gray-500 mt-1\">\n                    Select a JSON backup file to import\n                  </p>\n                  <input\n                    type=\"file\"\n                    accept=\".json\"\n                    onChange={handleImport}\n                    disabled={isImporting}\n                    className=\"hidden\"\n                  />\n                </label>\n              </div>\n\n              {isImporting && (\n                <div className=\"flex items-center justify-center py-4\">\n                  <Loader2 className=\"w-6 h-6 animate-spin text-blue-600 mr-2\" />\n                  <span className=\"text-gray-600\">Importing data...</span>\n                </div>\n              )}\n\n              {importStatus && (\n                <div\n                  className={`border rounded-lg p-4 ${\n                    importStatus.type === 'success'\n                      ? 'bg-green-50 border-green-200'\n                      : 'bg-red-50 border-red-200'\n                  }`}\n                >\n                  <div className=\"flex items-start\">\n                    {importStatus.type === 'success' ? (\n                      <CheckCircle className=\"w-5 h-5 text-green-600 mt-0.5 mr-3\" />\n                    ) : (\n                      <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5 mr-3\" />\n                    )}\n                    <div>\n                      <h4\n                        className={`font-medium ${\n                          importStatus.type === 'success' ? 'text-green-900' : 'text-red-900'\n                        }`}\n                      >\n                        {importStatus.message}\n                      </h4>\n                      {importStatus.type === 'success' && importStatus.details && (\n                        <div className=\"text-sm text-green-700 mt-2\">\n                          <p>Imported {importStatus.details.importCount} items</p>\n                          <p>Backup created: {importStatus.details.timestamp}</p>\n                        </div>\n                      )}\n                      {importStatus.type === 'error' && (\n                        <p className=\"text-sm text-red-700 mt-1\">{importStatus.details}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n\n          {activeTab === 'stats' && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Storage Statistics</h3>\n\n              {stats ? (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Storage Usage</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Total Size:</span>\n                        <span className=\"font-medium\">{formatBytes(stats.totalSize)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Total Items:</span>\n                        <span className=\"font-medium\">{stats.itemCount}</span>\n                      </div>\n                      {stats.quota && (\n                        <div className=\"flex justify-between\">\n                          <span>Usage:</span>\n                          <span className=\"font-medium\">\n                            {(stats.usageRatio * 100).toFixed(1)}%\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Financial Data</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>DCF Models:</span>\n                        <span className=\"font-medium\">{stats.financialData.dcfModels}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>LBO Models:</span>\n                        <span className=\"font-medium\">{stats.financialData.lboModels}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Monte Carlo Results:</span>\n                        <span className=\"font-medium\">{stats.financialData.monteCarloResults}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Watchlists:</span>\n                        <span className=\"font-medium\">{stats.financialData.watchlists}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex items-center justify-center py-8\">\n                  <Loader2 className=\"w-6 h-6 animate-spin text-blue-600 mr-2\" />\n                  <span className=\"text-gray-600\">Loading statistics...</span>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DataExportImport;\n","import { motion } from 'framer-motion';\nimport { Building2, Calculator, DollarSign, BarChart3 } from 'lucide-react';\nimport React, { useState, useCallback } from 'react';\n\nimport { lboModelingEngine } from '../../services/lboModelingEngine.js';\n\nconst AdvancedLBOTool = ({ data: _data, onDataChange }) => {\n  const [activeTab, setActiveTab] = useState('inputs');\n  const [lboResults, setLBOResults] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n\n  const [lboInputs, setLBOInputs] = useState({\n    symbol: 'COMPANY',\n    companyName: 'Target Company',\n    purchasePrice: 500000000,\n    ebitda: 75000000,\n    revenue: 500000000,\n    equityContribution: 0.35,\n    seniorDebtMultiple: 4.0,\n    subordinatedDebtMultiple: 1.5,\n    seniorInterestRate: 0.055,\n    subordinatedInterestRate: 0.095,\n    ebitdaGrowthRate: 0.06,\n    capexAsPercentOfRevenue: 0.03,\n    nwcAsPercentOfRevenue: 0.02,\n    holdingPeriod: 5,\n    exitMultiple: 10.0,\n    transactionFees: 0.02,\n    managementFees: 0.02,\n    taxRate: 0.21\n  });\n\n  const formatCurrency = useCallback((value) => {\n    if (!value) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    return `${(value * 100).toFixed(1)}%`;\n  }, []);\n\n  const calculateLBO = useCallback(async() => {\n    try {\n      setIsCalculating(true);\n      const modelInputs = {\n        symbol: lboInputs.symbol,\n        companyName: lboInputs.companyName,\n        purchasePrice: lboInputs.purchasePrice,\n        ebitda: lboInputs.ebitda,\n        revenue: lboInputs.revenue,\n        assumptions: {\n          debt: {\n            seniorDebtMultiple: lboInputs.seniorDebtMultiple,\n            subordinatedDebtMultiple: lboInputs.subordinatedDebtMultiple,\n            seniorInterestRate: lboInputs.seniorInterestRate,\n            subordinatedInterestRate: lboInputs.subordinatedInterestRate\n          },\n          operating: {\n            ebitdaGrowthRate: lboInputs.ebitdaGrowthRate,\n            capexAsPercentOfRevenue: lboInputs.capexAsPercentOfRevenue,\n            nwcAsPercentOfRevenue: lboInputs.nwcAsPercentOfRevenue,\n            taxRate: lboInputs.taxRate\n          },\n          exit: {\n            exitMultiple: lboInputs.exitMultiple\n          },\n          transaction: {\n            holdingPeriod: lboInputs.holdingPeriod,\n            transactionFees: lboInputs.transactionFees\n          }\n        }\n      };\n\n      const results = lboModelingEngine.buildLBOModel(modelInputs);\n      setLBOResults(results);\n\n      if (onDataChange) {\n        onDataChange({\n          lboModel: { inputs: lboInputs, results, timestamp: new Date().toISOString() }\n        });\n      }\n    } catch (error) {\n      console.error('LBO calculation error:', error);\n      alert(`Error: ${error.message}`);\n    } finally {\n      setIsCalculating(false);\n    }\n  }, [lboInputs, onDataChange]);\n\n  const handleInputChange = useCallback((field, value) => {\n    setLBOInputs(prev => ({\n      ...prev,\n      [field]: typeof value === 'string' ? parseFloat(value) || 0 : value\n    }));\n  }, []);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Building2 className=\"text-blue-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Advanced LBO Modeling</h2>\n            <p className=\"text-gray-600\">Professional leveraged buyout analysis</p>\n          </div>\n        </div>\n\n        <motion.button\n          onClick={calculateLBO}\n          disabled={isCalculating}\n          className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n            isCalculating\n              ? 'bg-gray-300 text-gray-500'\n              : 'bg-blue-600 hover:bg-blue-700 text-white'\n          }`}\n        >\n          <Calculator size={18} />\n          <span>{isCalculating ? 'Calculating...' : 'Calculate LBO'}</span>\n        </motion.button>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {[\n            { id: 'inputs', label: 'Model Inputs', icon: DollarSign },\n            { id: 'results', label: 'Results & Analysis', icon: BarChart3 }\n          ].map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{tab.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Inputs Tab */}\n      {activeTab === 'inputs' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {/* Transaction */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-3\">Transaction</h3>\n              <div className=\"space-y-3\">\n                <div>\n                  <label htmlFor=\"purchase-price\" className=\"block text-sm font-medium text-gray-700 mb-1\">Purchase Price</label>\n                  <input\n                    id=\"purchase-price\"\n                    type=\"number\"\n                    value={lboInputs.purchasePrice}\n                    onChange={(e) => handleInputChange('purchasePrice', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                  <p className=\"text-xs text-gray-500\">{formatCurrency(lboInputs.purchasePrice)}</p>\n                </div>\n                <div>\n                  <label htmlFor=\"current-ebitda\" className=\"block text-sm font-medium text-gray-700 mb-1\">Current EBITDA</label>\n                  <input\n                    id=\"current-ebitda\"\n                    type=\"number\"\n                    value={lboInputs.ebitda}\n                    onChange={(e) => handleInputChange('ebitda', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"holding-period\" className=\"block text-sm font-medium text-gray-700 mb-1\">Holding Period</label>\n                  <input\n                    id=\"holding-period\"\n                    type=\"number\"\n                    value={lboInputs.holdingPeriod}\n                    onChange={(e) => handleInputChange('holdingPeriod', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Financing */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-3\">Financing</h3>\n              <div className=\"space-y-3\">\n                <div>\n                  <label htmlFor=\"senior-debt\" className=\"block text-sm font-medium text-gray-700 mb-1\">Senior Debt Multiple</label>\n                  <input\n                    id=\"senior-debt\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={lboInputs.seniorDebtMultiple}\n                    onChange={(e) => handleInputChange('seniorDebtMultiple', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"sub-debt\" className=\"block text-sm font-medium text-gray-700 mb-1\">Sub Debt Multiple</label>\n                  <input\n                    id=\"sub-debt\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={lboInputs.subordinatedDebtMultiple}\n                    onChange={(e) => handleInputChange('subordinatedDebtMultiple', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Senior Rate (%)</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.001\"\n                    value={lboInputs.seniorInterestRate * 100}\n                    onChange={(e) => handleInputChange('seniorInterestRate', (e.target.value || 0) / 100)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Operating */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-3\">Operating</h3>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">EBITDA Growth (%)</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={lboInputs.ebitdaGrowthRate * 100}\n                    onChange={(e) => handleInputChange('ebitdaGrowthRate', (e.target.value || 0) / 100)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Exit Multiple</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={lboInputs.exitMultiple}\n                    onChange={(e) => handleInputChange('exitMultiple', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Tax Rate (%)</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={lboInputs.taxRate * 100}\n                    onChange={(e) => handleInputChange('taxRate', (e.target.value || 0) / 100)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Results Tab */}\n      {activeTab === 'results' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          {lboResults ? (\n            <div className=\"space-y-6\">\n              {/* Key Metrics */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-blue-600\">\n                    {formatPercent(lboResults.baseCase?.returnsAnalysis?.irr || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">IRR</div>\n                </div>\n                <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-green-600\">\n                    {(lboResults.baseCase?.returnsAnalysis?.moic || 0).toFixed(1)}x\n                  </div>\n                  <div className=\"text-sm text-gray-600\">MOIC</div>\n                </div>\n                <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-purple-600\">\n                    {(lboResults.transactionStructure?.debtToEbitda || 0).toFixed(1)}x\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Leverage</div>\n                </div>\n                <div className=\"bg-orange-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-orange-600\">\n                    {formatCurrency(lboResults.baseCase?.exitAnalysis?.equityProceeds || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Exit Value</div>\n                </div>\n              </div>\n\n              {/* Transaction Structure */}\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <h3 className=\"text-lg font-semibold mb-4\">Transaction Structure</h3>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Purchase Price:</span>\n                      <span className=\"font-medium\">{formatCurrency(lboResults.transactionStructure?.purchasePrice)}</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Total Debt:</span>\n                      <span className=\"font-medium\">{formatCurrency(lboResults.transactionStructure?.totalDebt)}</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Equity Investment:</span>\n                      <span className=\"font-medium\">{formatCurrency(lboResults.transactionStructure?.equityContribution)}</span>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Entry Multiple:</span>\n                      <span className=\"font-medium\">{(lboResults.transactionStructure?.entryMultiple || 0).toFixed(1)}x</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Debt/EBITDA:</span>\n                      <span className=\"font-medium\">{(lboResults.transactionStructure?.debtToEbitda || 0).toFixed(1)}x</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Equity %:</span>\n                      <span className=\"font-medium\">{formatPercent(lboResults.transactionStructure?.equityPercentage || 0)}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Scenarios */}\n              {lboResults.scenarios && Object.keys(lboResults.scenarios).length > 0 && (\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Scenario Analysis</h3>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full\">\n                      <thead>\n                        <tr className=\"border-b border-gray-300\">\n                          <th className=\"text-left py-2\">Scenario</th>\n                          <th className=\"text-right py-2\">IRR</th>\n                          <th className=\"text-right py-2\">MOIC</th>\n                          <th className=\"text-right py-2\">Exit Value</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr className=\"border-b border-gray-200\">\n                          <td className=\"py-2 font-medium\">Base Case</td>\n                          <td className=\"text-right py-2\">{formatPercent(lboResults.baseCase?.returnsAnalysis?.irr || 0)}</td>\n                          <td className=\"text-right py-2\">{(lboResults.baseCase?.returnsAnalysis?.moic || 0).toFixed(1)}x</td>\n                          <td className=\"text-right py-2\">{formatCurrency(lboResults.baseCase?.exitAnalysis?.equityProceeds || 0)}</td>\n                        </tr>\n                        {Object.entries(lboResults.scenarios).map(([name, scenario]) => (\n                          <tr key={name} className=\"border-b border-gray-200\">\n                            <td className=\"py-2\">{name}</td>\n                            <td className=\"text-right py-2\">{formatPercent(scenario.returnsAnalysis?.irr || 0)}</td>\n                            <td className=\"text-right py-2\">{(scenario.returnsAnalysis?.moic || 0).toFixed(1)}x</td>\n                            <td className=\"text-right py-2\">{formatCurrency(scenario.exitAnalysis?.equityProceeds || 0)}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"text-center py-12 text-gray-500\">\n              <BarChart3 size={48} className=\"mx-auto mb-4 opacity-50\" />\n              <p>Run LBO calculation to see results</p>\n            </div>\n          )}\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default AdvancedLBOTool;\n","import {\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  Percent,\n  Activity,\n  AlertTriangle,\n  CheckCircle,\n  Info,\n  BarChart3,\n  Target,\n  Calculator,\n  PieChart,\n  Zap,\n  Shield,\n  Clock,\n  Layers,\n  Award,\n  TrendingDown as Decline,\n  Eye,\n  FileText,\n  BarChart2,\n  LineChart,\n  Timer,\n  ArrowUpRight,\n  ArrowDownRight,\n  Gauge,\n  CreditCard,\n  Banknote,\n  Building2,\n  Users,\n  Star\n} from 'lucide-react';\nimport React, { useMemo } from 'react';\n\nconst AnalysisResults = ({\n  data,\n  adjustedValues,\n  modelInputs,\n  calculateDCF,\n  formatCurrency,\n  formatPercentage\n}) => {\n  // Calculate comprehensive financial metrics\n  const analysis = useMemo(() => {\n    try {\n      if (!data?.statements?.incomeStatement) return null;\n\n      const income = data.statements.incomeStatement;\n      const periods = Object.keys(income.totalRevenue || {}).sort((a, b) => parseInt(a) - parseInt(b));\n\n      if (periods.length < 2) return null;\n\n      const latest = periods[periods.length - 1];\n      const previous = periods[periods.length - 2];\n      const earliest = periods[0];\n\n      // Financial Performance Analysis - Use adjusted values for latest period when available\n      const revenueLatest = adjustedValues?.totalRevenue || income.totalRevenue?.[latest] || 0;\n      const revenuePrevious = income.totalRevenue?.[previous] || 0;\n      const revenueEarliest = income.totalRevenue?.[earliest] || 0;\n\n      const grossProfitLatest = adjustedValues?.grossProfit || income.grossProfit?.[latest] || 0;\n      const grossProfitPrevious = income.grossProfit?.[previous] || 0;\n\n      const operatingIncomeLatest = adjustedValues?.operatingIncome || income.operatingIncome?.[latest] || 0;\n      const operatingIncomePrevious = income.operatingIncome?.[previous] || 0;\n\n      const totalCOGSLatest = adjustedValues?.totalCostOfGoodsSold || income.totalCostOfGoodsSold?.[latest] || 0;\n      const totalCOGSPrevious = income.totalCostOfGoodsSold?.[previous] || 0;\n\n      // Growth Calculations\n      const revenueGrowthYoY = revenuePrevious ? ((revenueLatest - revenuePrevious) / revenuePrevious) * 100 : 0;\n      const revenueCAGR = revenueEarliest && periods.length > 2 ?\n        (Math.pow(revenueLatest / revenueEarliest, 1 / (periods.length - 1)) - 1) * 100 : 0;\n\n      const grossProfitGrowth = grossProfitPrevious ? ((grossProfitLatest - grossProfitPrevious) / grossProfitPrevious) * 100 : 0;\n      const operatingIncomeGrowth = operatingIncomePrevious ? ((operatingIncomeLatest - operatingIncomePrevious) / operatingIncomePrevious) * 100 : 0;\n\n      // Profitability Ratios (with safe calculations)\n      const grossMarginLatest = (revenueLatest && revenueLatest !== 0) ? (grossProfitLatest / revenueLatest) * 100 : 0;\n      const grossMarginPrevious = (revenuePrevious && revenuePrevious !== 0) ? (grossProfitPrevious / revenuePrevious) * 100 : 0;\n      const operatingMarginLatest = (revenueLatest && revenueLatest !== 0) ? (operatingIncomeLatest / revenueLatest) * 100 : 0;\n      const operatingMarginPrevious = (revenuePrevious && revenuePrevious !== 0) ? (operatingIncomePrevious / revenuePrevious) * 100 : 0;\n\n      const marginImprovement = isFinite(grossMarginLatest) && isFinite(grossMarginPrevious) ? grossMarginLatest - grossMarginPrevious : 0;\n      const operatingMarginChange = isFinite(operatingMarginLatest) && isFinite(operatingMarginPrevious) ? operatingMarginLatest - operatingMarginPrevious : 0;\n\n      // DCF Analysis\n      let dcfResults = null;\n      if (calculateDCF) {\n        try {\n          dcfResults = calculateDCF(data);\n        } catch (error) {\n          console.error('DCF calculation error:', error);\n        }\n      }\n\n      // Business Unit Analysis (Revenue Breakdown) - with safe value access\n      const revenueBreakdown = [\n        { name: 'Energy Devices', value: Number(income.energyDevices?.[latest]) || 0 },\n        { name: 'Injectables', value: Number(income.injectables?.[latest]) || 0 },\n        { name: 'Wellness', value: Number(income.wellness?.[latest]) || 0 },\n        { name: 'Weightloss', value: Number(income.weightloss?.[latest]) || 0 },\n        { name: 'Retail Sales', value: Number(income.retailSales?.[latest]) || 0 },\n        { name: 'Surgery', value: Number(income.surgery?.[latest]) || 0 }\n      ].filter(item => item.value > 0 && isFinite(item.value));\n\n      // Advanced Financial Ratios and Metrics\n      const totalAssets = income.totalAssets?.[latest] || revenueLatest * 1.2; // Estimate if not provided\n      const totalEquity = income.totalEquity?.[latest] || totalAssets * 0.6; // Estimate if not provided\n      const totalDebt = income.totalDebt?.[latest] || totalAssets * 0.3; // Estimate if not provided\n      const currentAssets = income.currentAssets?.[latest] || totalAssets * 0.4; // Estimate if not provided\n      const currentLiabilities = income.currentLiabilities?.[latest] || totalAssets * 0.2; // Estimate if not provided\n      const inventory = income.inventory?.[latest] || revenueLatest * 0.15; // Estimate if not provided\n      const accountsReceivable = income.accountsReceivable?.[latest] || revenueLatest * 0.1; // Estimate if not provided\n      const cashAndEquivalents = income.cashAndEquivalents?.[latest] || totalAssets * 0.1; // Estimate if not provided\n\n      // Advanced Ratios\n      const returnOnAssets = (totalAssets && totalAssets !== 0) ? (operatingIncomeLatest / totalAssets) * 100 : 0;\n      const returnOnEquity = (totalEquity && totalEquity !== 0) ? (operatingIncomeLatest / totalEquity) * 100 : 0;\n      const debtToEquity = (totalEquity && totalEquity !== 0) ? totalDebt / totalEquity : 0;\n      const currentRatio = (currentLiabilities && currentLiabilities !== 0) ? currentAssets / currentLiabilities : 0;\n      const quickRatio = (currentLiabilities && currentLiabilities !== 0) ? (currentAssets - inventory) / currentLiabilities : 0;\n      const assetTurnover = (totalAssets && totalAssets !== 0) ? revenueLatest / totalAssets : 0;\n      const inventoryTurnover = (inventory && inventory !== 0) ? (revenueLatest * 0.7) / inventory : 0; // Assuming COGS is 70% of revenue\n      const receivablesTurnover = (accountsReceivable && accountsReceivable !== 0) ? revenueLatest / accountsReceivable : 0;\n      const cashRatio = (currentLiabilities && currentLiabilities !== 0) ? cashAndEquivalents / currentLiabilities : 0;\n      const workingCapital = currentAssets - currentLiabilities;\n      const workingCapitalRatio = (revenueLatest && revenueLatest !== 0) ? workingCapital / revenueLatest : 0;\n\n      // Efficiency Metrics\n      const operatingCycle = inventoryTurnover > 0 && receivablesTurnover > 0 ? (365 / inventoryTurnover) + (365 / receivablesTurnover) : 0;\n      const cashConversionCycle = operatingCycle > 0 ? operatingCycle - 30 : 0; // Assuming 30 days payable period\n\n      // Growth Quality Metrics\n      const operatingLeverage = grossProfitPrevious !== 0 ? (operatingIncomeGrowth / revenueGrowthYoY) : 0;\n      const profitabilityTrend = (operatingMarginLatest - operatingMarginPrevious) * 100;\n\n      // Risk Metrics\n      const financialLeverage = (totalEquity && totalEquity !== 0) ? totalAssets / totalEquity : 0;\n      const interestCoverage = income.interestExpense?.[latest] ? operatingIncomeLatest / income.interestExpense[latest] : 0;\n      const debtServiceCoverage = income.debtService?.[latest] ? operatingIncomeLatest / income.debtService[latest] : 0;\n\n      // Market & Valuation Metrics (estimated)\n      const revenuePerEmployee = income.employeeCount?.[latest] ? revenueLatest / income.employeeCount[latest] : 0;\n      const revenuePerShare = income.sharesOutstanding?.[latest] ? revenueLatest / income.sharesOutstanding[latest] : 0;\n      const bookValuePerShare = income.sharesOutstanding?.[latest] && totalEquity ? totalEquity / income.sharesOutstanding[latest] : 0;\n\n      // Industry Benchmarks (Healthcare/Medical Device estimates)\n      const industryBenchmarks = {\n        grossMargin: 65,\n        operatingMargin: 18,\n        returnOnAssets: 8,\n        returnOnEquity: 15,\n        currentRatio: 2.5,\n        debtToEquity: 0.4,\n        assetTurnover: 0.8,\n        revenueGrowth: 8\n      };\n\n      // Performance vs Benchmarks\n      const benchmarkComparison = {\n        grossMargin: grossMarginLatest - industryBenchmarks.grossMargin,\n        operatingMargin: operatingMarginLatest - industryBenchmarks.operatingMargin,\n        returnOnAssets: returnOnAssets - industryBenchmarks.returnOnAssets,\n        returnOnEquity: returnOnEquity - industryBenchmarks.returnOnEquity,\n        currentRatio: currentRatio - industryBenchmarks.currentRatio,\n        debtToEquity: industryBenchmarks.debtToEquity - debtToEquity, // Lower is better\n        assetTurnover: assetTurnover - industryBenchmarks.assetTurnover,\n        revenueGrowth: revenueGrowthYoY - industryBenchmarks.revenueGrowth\n      };\n\n      // Comprehensive KPI Suite\n      const kpis = [\n        {\n          title: 'Revenue Growth',\n          value: `${revenueGrowthYoY > 0 ? '+' : ''}${isFinite(revenueGrowthYoY) ? revenueGrowthYoY.toFixed(1) : '0.0'}%`,\n          trend: revenueGrowthYoY > 0 ? 'up' : 'down',\n          description: 'Year-over-year revenue growth rate',\n          icon: TrendingUp,\n          benchmark: industryBenchmarks.revenueGrowth,\n          performance: benchmarkComparison.revenueGrowth\n        },\n        {\n          title: 'Gross Margin',\n          value: `${isFinite(grossMarginLatest) ? grossMarginLatest.toFixed(1) : '0.0'}%`,\n          trend: marginImprovement > 0 ? 'up' : 'down',\n          description: `${marginImprovement > 0 ? '+' : ''}${isFinite(marginImprovement) ? marginImprovement.toFixed(1) : '0.0'}% vs prior year`,\n          icon: Percent,\n          benchmark: industryBenchmarks.grossMargin,\n          performance: benchmarkComparison.grossMargin\n        },\n        {\n          title: 'Operating Margin',\n          value: `${isFinite(operatingMarginLatest) ? operatingMarginLatest.toFixed(1) : '0.0'}%`,\n          trend: operatingMarginChange > 0 ? 'up' : 'down',\n          description: `${operatingMarginChange > 0 ? '+' : ''}${isFinite(operatingMarginChange) ? operatingMarginChange.toFixed(1) : '0.0'}% vs prior year`,\n          icon: BarChart3,\n          benchmark: industryBenchmarks.operatingMargin,\n          performance: benchmarkComparison.operatingMargin\n        },\n        {\n          title: 'Return on Assets',\n          value: `${isFinite(returnOnAssets) ? returnOnAssets.toFixed(1) : '0.0'}%`,\n          trend: returnOnAssets > industryBenchmarks.returnOnAssets ? 'up' : 'down',\n          description: 'Asset utilization efficiency',\n          icon: Target,\n          benchmark: industryBenchmarks.returnOnAssets,\n          performance: benchmarkComparison.returnOnAssets\n        },\n        {\n          title: 'Return on Equity',\n          value: `${isFinite(returnOnEquity) ? returnOnEquity.toFixed(1) : '0.0'}%`,\n          trend: returnOnEquity > industryBenchmarks.returnOnEquity ? 'up' : 'down',\n          description: 'Shareholder value generation',\n          icon: Award,\n          benchmark: industryBenchmarks.returnOnEquity,\n          performance: benchmarkComparison.returnOnEquity\n        },\n        {\n          title: 'Current Ratio',\n          value: `${isFinite(currentRatio) ? currentRatio.toFixed(1) : '0.0'}x`,\n          trend: currentRatio > 2.0 ? 'up' : currentRatio > 1.5 ? 'neutral' : 'down',\n          description: 'Short-term liquidity strength',\n          icon: Shield,\n          benchmark: industryBenchmarks.currentRatio,\n          performance: benchmarkComparison.currentRatio\n        },\n        {\n          title: 'Asset Turnover',\n          value: `${isFinite(assetTurnover) ? assetTurnover.toFixed(1) : '0.0'}x`,\n          trend: assetTurnover > industryBenchmarks.assetTurnover ? 'up' : 'down',\n          description: 'Revenue per dollar of assets',\n          icon: Zap,\n          benchmark: industryBenchmarks.assetTurnover,\n          performance: benchmarkComparison.assetTurnover\n        },\n        {\n          title: 'Debt-to-Equity',\n          value: `${isFinite(debtToEquity) ? debtToEquity.toFixed(1) : '0.0'}x`,\n          trend: debtToEquity < industryBenchmarks.debtToEquity ? 'up' : 'down',\n          description: 'Financial leverage position',\n          icon: CreditCard,\n          benchmark: industryBenchmarks.debtToEquity,\n          performance: benchmarkComparison.debtToEquity\n        }\n      ];\n\n      // Liquidity Analysis\n      const liquidityMetrics = [\n        {\n          name: 'Current Ratio',\n          value: currentRatio,\n          formatted: `${currentRatio.toFixed(2)}x`,\n          benchmark: 2.5,\n          status: currentRatio >= 2.5 ? 'excellent' : currentRatio >= 2.0 ? 'good' : currentRatio >= 1.5 ? 'fair' : 'poor'\n        },\n        {\n          name: 'Quick Ratio',\n          value: quickRatio,\n          formatted: `${quickRatio.toFixed(2)}x`,\n          benchmark: 1.5,\n          status: quickRatio >= 1.5 ? 'excellent' : quickRatio >= 1.0 ? 'good' : quickRatio >= 0.8 ? 'fair' : 'poor'\n        },\n        {\n          name: 'Cash Ratio',\n          value: cashRatio,\n          formatted: `${cashRatio.toFixed(2)}x`,\n          benchmark: 0.5,\n          status: cashRatio >= 0.5 ? 'excellent' : cashRatio >= 0.3 ? 'good' : cashRatio >= 0.2 ? 'fair' : 'poor'\n        },\n        {\n          name: 'Working Capital',\n          value: workingCapital,\n          formatted: formatCurrency(workingCapital),\n          benchmark: revenueLatest * 0.15,\n          status: workingCapital >= revenueLatest * 0.15 ? 'excellent' : workingCapital >= 0 ? 'good' : 'poor'\n        }\n      ];\n\n      // Efficiency Analysis\n      const efficiencyMetrics = [\n        {\n          name: 'Asset Turnover',\n          value: assetTurnover,\n          formatted: `${assetTurnover.toFixed(2)}x`,\n          description: 'Revenue generation per asset dollar'\n        },\n        {\n          name: 'Inventory Turnover',\n          value: inventoryTurnover,\n          formatted: `${inventoryTurnover.toFixed(1)}x`,\n          description: 'Inventory management efficiency'\n        },\n        {\n          name: 'Receivables Turnover',\n          value: receivablesTurnover,\n          formatted: `${receivablesTurnover.toFixed(1)}x`,\n          description: 'Collection efficiency'\n        },\n        {\n          name: 'Operating Cycle',\n          value: operatingCycle,\n          formatted: `${operatingCycle.toFixed(0)} days`,\n          description: 'Cash-to-cash cycle duration'\n        }\n      ];\n\n      // Risk Assessment\n      const riskMetrics = [\n        {\n          name: 'Financial Leverage',\n          value: financialLeverage,\n          formatted: `${financialLeverage.toFixed(1)}x`,\n          level: financialLeverage < 2 ? 'low' : financialLeverage < 3 ? 'moderate' : 'high'\n        },\n        {\n          name: 'Debt-to-Equity',\n          value: debtToEquity,\n          formatted: `${debtToEquity.toFixed(2)}x`,\n          level: debtToEquity < 0.3 ? 'low' : debtToEquity < 0.6 ? 'moderate' : 'high'\n        },\n        {\n          name: 'Interest Coverage',\n          value: interestCoverage,\n          formatted: `${interestCoverage.toFixed(1)}x`,\n          level: interestCoverage > 10 ? 'low' : interestCoverage > 5 ? 'moderate' : 'high'\n        }\n      ];\n\n      return {\n        periods,\n        latest,\n        previous,\n        revenue: {\n          latest: revenueLatest,\n          previous: revenuePrevious,\n          growth: revenueGrowthYoY,\n          cagr: revenueCAGR\n        },\n        profitability: {\n          grossMargin: grossMarginLatest,\n          grossMarginChange: marginImprovement,\n          operatingMargin: operatingMarginLatest,\n          operatingMarginChange,\n          operatingLeverage,\n          profitabilityTrend\n        },\n        financial: {\n          returnOnAssets,\n          returnOnEquity,\n          assetTurnover,\n          totalAssets,\n          totalEquity,\n          totalDebt,\n          workingCapital,\n          workingCapitalRatio\n        },\n        liquidity: {\n          currentRatio,\n          quickRatio,\n          cashRatio,\n          cashAndEquivalents,\n          currentAssets,\n          currentLiabilities\n        },\n        efficiency: {\n          inventoryTurnover,\n          receivablesTurnover,\n          operatingCycle,\n          cashConversionCycle\n        },\n        risk: {\n          debtToEquity,\n          financialLeverage,\n          interestCoverage,\n          debtServiceCoverage\n        },\n        market: {\n          revenuePerEmployee,\n          revenuePerShare,\n          bookValuePerShare\n        },\n        benchmarks: {\n          industry: industryBenchmarks,\n          comparison: benchmarkComparison\n        },\n        dcf: dcfResults,\n        revenueBreakdown,\n        kpis,\n        liquidityMetrics,\n        efficiencyMetrics,\n        riskMetrics\n      };\n    } catch (error) {\n      console.error('Error in AnalysisResults analysis calculation:', error);\n      return null;\n    }\n  }, [data, calculateDCF]);\n\n  if (!analysis) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <AlertTriangle className=\"mx-auto h-12 w-12 text-yellow-400 mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Insufficient Data</h3>\n          <p className=\"text-gray-500\">Please ensure financial data is loaded to generate analysis results.</p>\n        </div>\n      </div>\n    );\n  }\n\n  const MetricCard = ({ title, value, trend, description, icon: Icon, benchmark, performance }) => (\n    <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700 hover:border-gray-600 transition-all duration-200\">\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex items-center gap-3\">\n          <div\n            className={`p-2 rounded-lg ${\n              trend === 'up' ? 'bg-green-900/30 text-green-400' :\n                trend === 'down' ? 'bg-red-900/30 text-red-400' :\n                  'bg-gray-700 text-gray-400'\n            }`}\n          >\n            <Icon className=\"h-5 w-5\" />\n          </div>\n          <div>\n            <div className=\"text-sm font-medium text-gray-300\">{title}</div>\n            <div className=\"text-xs text-gray-500 mt-1\">{description}</div>\n          </div>\n        </div>\n        {trend === 'up' && <TrendingUp className=\"h-5 w-5 text-green-400 flex-shrink-0\" />}\n        {trend === 'down' && <TrendingDown className=\"h-5 w-5 text-red-400 flex-shrink-0\" />}\n      </div>\n      <div className=\"text-3xl font-bold text-white mb-2\">{value}</div>\n      {benchmark && (\n        <div className=\"border-t border-gray-700 pt-3 mt-3\">\n          <div className=\"flex justify-between text-xs\">\n            <span className=\"text-gray-400\">Industry Avg:</span>\n            <span className=\"text-gray-300\">{typeof benchmark === 'number' ? benchmark.toFixed(1) + (title.includes('%') ? '%' : title.includes('x') ? 'x' : '') : benchmark}</span>\n          </div>\n          <div className=\"flex justify-between text-xs mt-1\">\n            <span className=\"text-gray-400\">vs Industry:</span>\n            <span\n              className={`font-medium ${\n                performance > 0 ? 'text-green-400' : performance < 0 ? 'text-red-400' : 'text-gray-300'\n              }`}\n            >\n              {performance > 0 ? '+' : ''}{performance?.toFixed(1) || '0.0'}\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-6 p-6 bg-gray-900 text-white h-full\">\n      {/* Header */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h2 className=\"text-2xl font-bold text-white mb-6 flex items-center\">\n          <BarChart3 className=\"h-6 w-6 text-blue-400 mr-3\" />\n          Financial Analysis Results\n        </h2>\n        <p className=\"text-gray-400\">\n          Comprehensive analysis of your company's financial performance and valuation\n        </p>\n      </div>\n\n      {/* Key Performance Indicators */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {analysis.kpis.map((kpi, index) => (\n          <MetricCard key={index} {...kpi} />\n        ))}\n      </div>\n\n      {/* Advanced Financial Analysis Tabs */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 overflow-hidden\">\n        <div className=\"flex border-b border-gray-700\">\n          <button className=\"px-6 py-3 text-sm font-medium text-white bg-blue-600 border-r border-gray-700\">\n            Liquidity Analysis\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white border-r border-gray-700\">\n            Efficiency Metrics\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white border-r border-gray-700\">\n            Risk Assessment\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white\">\n            Benchmarking\n          </button>\n        </div>\n\n        {/* Liquidity Analysis Panel */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center mb-4\">\n            <Shield className=\"h-5 w-5 text-blue-400 mr-2\" />\n            <h3 className=\"text-lg font-semibold text-white\">Liquidity Position Analysis</h3>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {analysis.liquidityMetrics.map((metric, index) => (\n              <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium text-gray-200\">{metric.name}</span>\n                  <span\n                    className={`px-2 py-1 rounded text-xs font-medium ${\n                      metric.status === 'excellent' ? 'bg-green-900/30 text-green-400' :\n                        metric.status === 'good' ? 'bg-blue-900/30 text-blue-400' :\n                          metric.status === 'fair' ? 'bg-yellow-900/30 text-yellow-400' :\n                            'bg-red-900/30 text-red-400'\n                    }`}\n                  >\n                    {metric.status}\n                  </span>\n                </div>\n                <div className=\"text-xl font-bold text-white mb-1\">{metric.formatted}</div>\n                <div className=\"text-xs text-gray-400\">\n                  Benchmark: {typeof metric.benchmark === 'number' ? metric.benchmark.toFixed(1) + 'x' : formatCurrency(metric.benchmark)}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"mt-6 p-4 bg-gray-750 rounded-lg border border-gray-600\">\n            <h4 className=\"font-medium text-gray-200 mb-3 flex items-center\">\n              <Eye className=\"h-4 w-4 text-blue-400 mr-2\" />\n              Liquidity Analysis Summary\n            </h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-400\">Working Capital:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.financial.workingCapital)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Cash Position:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.cashAndEquivalents)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Current Assets:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.currentAssets)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Current Liabilities:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.currentLiabilities)}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Efficiency & Operations Analysis */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <div className=\"flex items-center mb-6\">\n          <Zap className=\"h-5 w-5 text-orange-400 mr-2\" />\n          <h3 className=\"text-lg font-semibold text-white\">Operational Efficiency Metrics</h3>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {analysis.efficiencyMetrics.map((metric, index) => (\n            <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n              <div className=\"text-sm font-medium text-gray-200 mb-2\">{metric.name}</div>\n              <div className=\"text-xl font-bold text-white mb-1\">{metric.formatted}</div>\n              <div className=\"text-xs text-gray-400\">{metric.description}</div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Timer className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Cash Conversion</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">{analysis.efficiency.cashConversionCycle.toFixed(0)} days</div>\n            <div className=\"text-xs text-gray-400\">Time to convert inventory to cash</div>\n          </div>\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Gauge className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Asset Productivity</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">{analysis.financial.assetTurnover.toFixed(2)}x</div>\n            <div className=\"text-xs text-gray-400\">Revenue per dollar of assets</div>\n          </div>\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Users className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Revenue/Employee</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">\n              {analysis.market.revenuePerEmployee > 0 ? formatCurrency(analysis.market.revenuePerEmployee) : 'N/A'}\n            </div>\n            <div className=\"text-xs text-gray-400\">Productivity per employee</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Risk Assessment Dashboard */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <div className=\"flex items-center mb-6\">\n          <AlertTriangle className=\"h-5 w-5 text-red-400 mr-2\" />\n          <h3 className=\"text-lg font-semibold text-white\">Financial Risk Assessment</h3>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {analysis.riskMetrics.map((metric, index) => (\n            <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-sm font-medium text-gray-200\">{metric.name}</span>\n                <span\n                  className={`px-2 py-1 rounded text-xs font-medium ${\n                    metric.level === 'low' ? 'bg-green-900/30 text-green-400' :\n                      metric.level === 'moderate' ? 'bg-yellow-900/30 text-yellow-400' :\n                        'bg-red-900/30 text-red-400'\n                  }`}\n                >\n                  {metric.level} risk\n                </span>\n              </div>\n              <div className=\"text-xl font-bold text-white\">{metric.formatted}</div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-6 p-4 bg-gray-750 rounded-lg border border-gray-600\">\n          <h4 className=\"font-medium text-gray-200 mb-3 flex items-center\">\n            <Shield className=\"h-4 w-4 text-red-400 mr-2\" />\n            Risk Analysis Summary\n          </h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-400\">Financial Leverage:</span>\n              <span\n                className={`ml-2 font-medium ${\n                  analysis.risk.financialLeverage < 2 ? 'text-green-400' :\n                    analysis.risk.financialLeverage < 3 ? 'text-yellow-400' : 'text-red-400'\n                }`}\n              >\n                {analysis.risk.financialLeverage.toFixed(1)}x\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Interest Coverage:</span>\n              <span\n                className={`ml-2 font-medium ${\n                  analysis.risk.interestCoverage > 10 ? 'text-green-400' :\n                    analysis.risk.interestCoverage > 5 ? 'text-yellow-400' : 'text-red-400'\n                }`}\n              >\n                {analysis.risk.interestCoverage.toFixed(1)}x\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Financial Performance Summary */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Financial Performance Trends */}\n        <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n          <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n            <Activity className=\"h-5 w-5 text-purple-400 mr-2\" />\n            Performance Trends\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h4 className=\"font-medium text-gray-200 mb-3\">Revenue Analysis</h4>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Latest Period:</span>\n                  <span className=\"font-semibold text-white\">{formatCurrency(analysis.revenue.latest)}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">YoY Growth:</span>\n                  <span\n                    className={`font-semibold ${\n                      analysis.revenue.growth > 0 ? 'text-green-400' : 'text-red-400'\n                    }`}\n                  >\n                    {analysis.revenue.growth > 0 ? '+' : ''}{analysis.revenue.growth.toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">CAGR:</span>\n                  <span className=\"font-semibold text-gray-200\">{analysis.revenue.cagr.toFixed(1)}%</span>\n                </div>\n              </div>\n            </div>\n            <div>\n              <h4 className=\"font-medium text-gray-200 mb-3\">Profitability Margins</h4>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Gross Margin:</span>\n                  <span className=\"font-semibold text-white\">{analysis.profitability.grossMargin.toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Operating Margin:</span>\n                  <span className=\"font-semibold text-white\">{analysis.profitability.operatingMargin.toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Margin Change:</span>\n                  <span\n                    className={`font-semibold ${\n                      analysis.profitability.grossMarginChange > 0 ? 'text-green-400' : 'text-red-400'\n                    }`}\n                  >\n                    {analysis.profitability.grossMarginChange > 0 ? '+' : ''}{analysis.profitability.grossMarginChange.toFixed(1)}pp\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Valuation Summary */}\n        {analysis.dcf && (\n          <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n            <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n              <DollarSign className=\"h-5 w-5 text-green-400 mr-2\" />\n              DCF Valuation Summary\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"text-center p-4 bg-green-900/30 border border-green-700 rounded-lg\">\n                <div className=\"text-2xl font-bold text-green-400\">\n                  {formatCurrency(analysis.dcf.enterpriseValue)}\n                </div>\n                <div className=\"text-sm text-green-300\">Enterprise Value</div>\n              </div>\n              <div className=\"text-center p-4 bg-blue-900/30 border border-blue-700 rounded-lg\">\n                <div className=\"text-2xl font-bold text-blue-400\">\n                  {formatCurrency(analysis.dcf.sharePrice)}\n                </div>\n                <div className=\"text-sm text-blue-300\">Price per Share</div>\n              </div>\n              <div className=\"text-center p-4 bg-gray-700 border border-gray-600 rounded-lg\">\n                <div className=\"text-2xl font-bold text-gray-300\">\n                  {formatCurrency(analysis.dcf.terminalValue)}\n                </div>\n                <div className=\"text-sm text-gray-400\">Terminal Value</div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Revenue Breakdown */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n          <PieChart className=\"h-5 w-5 text-orange-400 mr-2\" />\n          Business Unit Performance\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {analysis.revenueBreakdown.map((unit, index) => {\n            const percentage = analysis.revenue.latest ? (unit.value / analysis.revenue.latest) * 100 : 0;\n            return (\n              <div key={index} className=\"p-4 bg-gray-700 border border-gray-600 rounded-lg\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"font-medium text-gray-200\">{unit.name}</span>\n                  <span className=\"text-sm text-gray-400\">{percentage.toFixed(1)}%</span>\n                </div>\n                <div className=\"text-lg font-semibold text-white mb-1\">\n                  {formatCurrency(unit.value)}\n                </div>\n                <div className=\"w-full bg-gray-600 rounded-full h-2\">\n                  <div\n                    className=\"bg-blue-500 h-2 rounded-full\"\n                    style={{ width: `${Math.min(percentage, 100)}%` }}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Key Insights */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n          <CheckCircle className=\"h-5 w-5 text-green-400 mr-2\" />\n          Key Financial Insights\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <h4 className=\"font-medium text-gray-200 mb-2\">Strengths</h4>\n            <ul className=\"space-y-1 text-sm text-gray-400\">\n              {analysis.revenue.growth > 0 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Positive revenue growth trajectory\n                </li>\n              )}\n              {analysis.profitability.grossMargin > 60 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Strong gross margin above 60%\n                </li>\n              )}\n              {analysis.profitability.grossMarginChange > 0 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Improving profitability margins\n                </li>\n              )}\n              <li className=\"flex items-center\">\n                <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                Diversified healthcare revenue streams\n              </li>\n            </ul>\n          </div>\n          <div>\n            <h4 className=\"font-medium text-gray-200 mb-2\">Areas for Focus</h4>\n            <ul className=\"space-y-1 text-sm text-gray-400\">\n              {analysis.revenue.growth < 5 && (\n                <li className=\"flex items-center\">\n                  <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                  Revenue growth below industry benchmarks\n                </li>\n              )}\n              {analysis.profitability.operatingMargin < 20 && (\n                <li className=\"flex items-center\">\n                  <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                  Operating margin optimization opportunities\n                </li>\n              )}\n              <li className=\"flex items-center\">\n                <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                Monitor competitive positioning in key segments\n              </li>\n              <li className=\"flex items-center\">\n                <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                Consider strategic initiatives for growth acceleration\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnalysisResults;\n","import { motion, AnimatePresence } from 'framer-motion';\nimport {\n  TrendingUp,\n  BarChart3,\n  Info,\n  AlertTriangle,\n  ChevronRight,\n  ChevronDown,\n  Target,\n  Users,\n  DollarSign,\n  Building2,\n  Lightbulb,\n  X\n} from 'lucide-react';\nimport React, { useState, useEffect, useMemo } from 'react';\n\nconst ContextualInsightsSidebar = ({\n  financialData,\n  currentMetric,\n  analysisContext = 'general',\n  onInsightClick,\n  isVisible = true,\n  onToggle\n}) => {\n  const [expandedSections, setExpandedSections] = useState({\n    assumptions: true,\n    benchmarks: true,\n    insights: true,\n    suggestions: false\n  });\n\n  // Industry benchmark data (in real implementation, this would come from APIs)\n  const industryBenchmarks = useMemo(() => ({\n    healthcare: {\n      revenueGrowth: { min: 8, median: 15, max: 25, unit: '%' },\n      ebitdaMargin: { min: 18, median: 28, max: 40, unit: '%' },\n      grossMargin: { min: 65, median: 75, max: 85, unit: '%' },\n      roe: { min: 12, median: 18, max: 25, unit: '%' }\n    },\n    technology: {\n      revenueGrowth: { min: 15, median: 25, max: 50, unit: '%' },\n      ebitdaMargin: { min: 20, median: 35, max: 50, unit: '%' },\n      grossMargin: { min: 70, median: 80, max: 90, unit: '%' },\n      roe: { min: 15, median: 22, max: 35, unit: '%' }\n    },\n    manufacturing: {\n      revenueGrowth: { min: 3, median: 8, max: 15, unit: '%' },\n      ebitdaMargin: { min: 10, median: 18, max: 25, unit: '%' },\n      grossMargin: { min: 25, median: 35, max: 45, unit: '%' },\n      roe: { min: 8, median: 15, max: 22, unit: '%' }\n    }\n  }), []);\n\n  // Generate contextual insights based on current analysis\n  const generateContextualInsights = () => {\n    const insights = [];\n\n    if (!financialData?.statements?.incomeStatement) {\n      return [{\n        type: 'info',\n        title: 'Getting Started',\n        content: 'Import financial data to see contextual insights and benchmarks.',\n        action: 'Import Data'\n      }];\n    }\n\n    const income = financialData.statements.incomeStatement;\n    const latestRevenue = income.totalRevenue?.[2] || 0;\n    const latestOperatingIncome = income.operatingIncome?.[2] || 0;\n\n    // Revenue-based insights\n    if (latestRevenue > 0) {\n      const operatingMargin = (latestOperatingIncome / latestRevenue) * 100;\n\n      insights.push({\n        type: 'benchmark',\n        title: 'Operating Margin Analysis',\n        content: `Current operating margin of ${operatingMargin.toFixed(1)}% compares to healthcare industry median of 28%.`,\n        metric: operatingMargin,\n        benchmark: 28,\n        status: operatingMargin >= 28 ? 'above' : operatingMargin >= 20 ? 'within' : 'below'\n      });\n    }\n\n    // Context-specific insights\n    if (analysisContext === 'dcf') {\n      insights.push({\n        type: 'assumption',\n        title: 'DCF Model Assumptions',\n        content: 'Consider industry-specific discount rates and terminal growth assumptions.',\n        suggestions: [\n          'Healthcare companies typically use 8-12% WACC',\n          'Terminal growth rates should reflect long-term GDP growth (2-3%)',\n          'Consider regulatory risks in discount rate adjustments'\n        ]\n      });\n    }\n\n    if (currentMetric?.includes('revenue')) {\n      insights.push({\n        type: 'insight',\n        title: 'Revenue Growth Drivers',\n        content: 'Analyze revenue composition and growth sustainability.',\n        suggestions: [\n          'Break down revenue by service line',\n          'Assess recurring vs. one-time revenue',\n          'Evaluate market expansion opportunities'\n        ]\n      });\n    }\n\n    return insights;\n  };\n\n  const contextualInsights = generateContextualInsights();\n\n  const toggleSection = (section) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n\n  const renderBenchmarkBar = (current, benchmark, min, max) => {\n    const range = max - min;\n    const currentPos = Math.max(0, Math.min(100, ((current - min) / range) * 100));\n    const benchmarkPos = Math.max(0, Math.min(100, ((benchmark - min) / range) * 100));\n\n    return (\n      <div className=\"relative h-2 bg-slate-200 rounded-full overflow-hidden\">\n        <div\n          className=\"absolute top-0 h-full bg-blue-200 rounded-full\"\n          style={{ width: `${benchmarkPos}%` }}\n        />\n        <div\n          className=\"absolute top-0 h-full w-1 bg-blue-600 rounded-full\"\n          style={{ left: `${benchmarkPos}%` }}\n        />\n        <div\n          className=\"absolute top-0 h-full w-1 bg-amber-500 rounded-full\"\n          style={{ left: `${currentPos}%` }}\n        />\n      </div>\n    );\n  };\n\n  const renderInsightItem = (insight, index) => {\n    const icons = {\n      info: Info,\n      benchmark: Target,\n      assumption: AlertTriangle,\n      insight: Lightbulb\n    };\n\n    const colors = {\n      info: 'text-blue-500 bg-blue-50',\n      benchmark: 'text-emerald-500 bg-emerald-50',\n      assumption: 'text-amber-500 bg-amber-50',\n      insight: 'text-purple-500 bg-purple-50'\n    };\n\n    const Icon = icons[insight.type] || Info;\n    const colorClass = colors[insight.type] || colors.info;\n\n    return (\n      <motion.div\n        key={index}\n        initial={{ opacity: 0, x: 20 }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ delay: index * 0.1 }}\n        className=\"p-4 bg-white rounded-lg border border-slate-200 hover:border-slate-300 transition-colors\"\n      >\n        <div className=\"flex items-start gap-3\">\n          <div className={`p-2 rounded-lg ${colorClass}`}>\n            <Icon size={16} />\n          </div>\n          <div className=\"flex-1 min-w-0\">\n            <h4 className=\"font-semibold text-slate-900 text-sm mb-2\">{insight.title}</h4>\n            <p className=\"text-sm text-slate-600 mb-3\">{insight.content}</p>\n\n            {insight.metric !== undefined && insight.benchmark !== undefined && (\n              <div className=\"mb-3\">\n                <div className=\"flex justify-between text-xs text-slate-500 mb-1\">\n                  <span>Current: {insight.metric.toFixed(1)}%</span>\n                  <span>Benchmark: {insight.benchmark}%</span>\n                </div>\n                {renderBenchmarkBar(insight.metric, insight.benchmark, 0, Math.max(insight.benchmark * 1.5, insight.metric * 1.2))}\n              </div>\n            )}\n\n            {insight.suggestions && (\n              <div className=\"mt-3\">\n                <div className=\"space-y-1\">\n                  {insight.suggestions.map((suggestion, idx) => (\n                    <div key={idx} className=\"flex items-start gap-2 text-xs text-slate-600\">\n                      <ChevronRight size={12} className=\"text-slate-400 mt-0.5 flex-shrink-0\" />\n                      <span>{suggestion}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {insight.action && (\n              <button\n                onClick={() => onInsightClick?.(insight)}\n                className=\"mt-3 px-3 py-1.5 bg-blue-50 hover:bg-blue-100 text-blue-700 text-xs font-medium rounded-md transition-colors\"\n              >\n                {insight.action}\n              </button>\n            )}\n          </div>\n        </div>\n      </motion.div>\n    );\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <motion.div\n      initial={{ x: 320, opacity: 0 }}\n      animate={{ x: 0, opacity: 1 }}\n      exit={{ x: 320, opacity: 0 }}\n      className=\"fixed right-0 top-16 bottom-0 w-80 bg-slate-50 border-l border-slate-200 shadow-xl z-40 overflow-hidden flex flex-col\"\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 bg-white border-b border-slate-200\">\n        <div className=\"flex items-center gap-2\">\n          <div className=\"p-1.5 bg-blue-100 rounded-lg\">\n            <BarChart3 size={16} className=\"text-blue-600\" />\n          </div>\n          <h3 className=\"font-semibold text-slate-900\">Contextual Insights</h3>\n        </div>\n        {onToggle && (\n          <button\n            onClick={onToggle}\n            className=\"p-1.5 hover:bg-slate-100 rounded-lg transition-colors\"\n          >\n            <X size={16} className=\"text-slate-500\" />\n          </button>\n        )}\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-y-auto\">\n        <div className=\"p-4 space-y-4\">\n          {/* Assumptions Section */}\n          <div className=\"bg-white rounded-lg border border-slate-200\">\n            <button\n              onClick={() => toggleSection('assumptions')}\n              className=\"w-full flex items-center justify-between p-4 text-left hover:bg-slate-50 transition-colors\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <Target size={16} className=\"text-amber-600\" />\n                <span className=\"font-medium text-slate-900\">Key Assumptions</span>\n              </div>\n              {expandedSections.assumptions ?\n                <ChevronDown size={16} className=\"text-slate-400\" /> :\n                <ChevronRight size={16} className=\"text-slate-400\" />\n              }\n            </button>\n\n            <AnimatePresence>\n              {expandedSections.assumptions && (\n                <motion.div\n                  initial={{ height: 0, opacity: 0 }}\n                  animate={{ height: 'auto', opacity: 1 }}\n                  exit={{ height: 0, opacity: 0 }}\n                  className=\"border-t border-slate-100\"\n                >\n                  <div className=\"p-4 space-y-3\">\n                    <div className=\"flex justify-between items-center text-sm\">\n                      <span className=\"text-slate-600\">Discount Rate</span>\n                      <span className=\"font-mono text-slate-900\">10.0%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center text-sm\">\n                      <span className=\"text-slate-600\">Terminal Growth</span>\n                      <span className=\"font-mono text-slate-900\">2.5%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center text-sm\">\n                      <span className=\"text-slate-600\">Tax Rate</span>\n                      <span className=\"font-mono text-slate-900\">25.0%</span>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n\n          {/* Industry Benchmarks Section */}\n          <div className=\"bg-white rounded-lg border border-slate-200\">\n            <button\n              onClick={() => toggleSection('benchmarks')}\n              className=\"w-full flex items-center justify-between p-4 text-left hover:bg-slate-50 transition-colors\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <Users size={16} className=\"text-emerald-600\" />\n                <span className=\"font-medium text-slate-900\">Industry Benchmarks</span>\n              </div>\n              {expandedSections.benchmarks ?\n                <ChevronDown size={16} className=\"text-slate-400\" /> :\n                <ChevronRight size={16} className=\"text-slate-400\" />\n              }\n            </button>\n\n            <AnimatePresence>\n              {expandedSections.benchmarks && (\n                <motion.div\n                  initial={{ height: 0, opacity: 0 }}\n                  animate={{ height: 'auto', opacity: 1 }}\n                  exit={{ height: 0, opacity: 0 }}\n                  className=\"border-t border-slate-100\"\n                >\n                  <div className=\"p-4 space-y-4\">\n                    <div className=\"text-sm\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"text-slate-600\">Revenue Growth</span>\n                        <span className=\"text-xs text-slate-500\">Healthcare Industry</span>\n                      </div>\n                      <div className=\"flex justify-between text-xs text-slate-500 mb-1\">\n                        <span>8%</span>\n                        <span className=\"font-medium\">15% (median)</span>\n                        <span>25%</span>\n                      </div>\n                      {renderBenchmarkBar(12, 15, 8, 25)}\n                    </div>\n\n                    <div className=\"text-sm\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"text-slate-600\">EBITDA Margin</span>\n                        <span className=\"text-xs text-slate-500\">Healthcare Industry</span>\n                      </div>\n                      <div className=\"flex justify-between text-xs text-slate-500 mb-1\">\n                        <span>18%</span>\n                        <span className=\"font-medium\">28% (median)</span>\n                        <span>40%</span>\n                      </div>\n                      {renderBenchmarkBar(24, 28, 18, 40)}\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n\n          {/* Contextual Insights */}\n          <div className=\"space-y-3\">\n            {contextualInsights.map((insight, index) => renderInsightItem(insight, index))}\n          </div>\n\n          {/* Automated Suggestions */}\n          <div className=\"bg-white rounded-lg border border-slate-200\">\n            <button\n              onClick={() => toggleSection('suggestions')}\n              className=\"w-full flex items-center justify-between p-4 text-left hover:bg-slate-50 transition-colors\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <Lightbulb size={16} className=\"text-purple-600\" />\n                <span className=\"font-medium text-slate-900\">Smart Suggestions</span>\n              </div>\n              {expandedSections.suggestions ?\n                <ChevronDown size={16} className=\"text-slate-400\" /> :\n                <ChevronRight size={16} className=\"text-slate-400\" />\n              }\n            </button>\n\n            <AnimatePresence>\n              {expandedSections.suggestions && (\n                <motion.div\n                  initial={{ height: 0, opacity: 0 }}\n                  animate={{ height: 'auto', opacity: 1 }}\n                  exit={{ height: 0, opacity: 0 }}\n                  className=\"border-t border-slate-100\"\n                >\n                  <div className=\"p-4 space-y-3\">\n                    <div className=\"flex items-start gap-3 p-3 bg-blue-50 rounded-lg\">\n                      <BarChart3 size={14} className=\"text-blue-600 mt-0.5\" />\n                      <div>\n                        <div className=\"text-sm font-medium text-blue-900 mb-1\">\n                          Create Revenue vs CapEx Chart\n                        </div>\n                        <div className=\"text-xs text-blue-700\">\n                          Visualize the relationship between revenue growth and capital expenditure\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-start gap-3 p-3 bg-emerald-50 rounded-lg\">\n                      <TrendingUp size={14} className=\"text-emerald-600 mt-0.5\" />\n                      <div>\n                        <div className=\"text-sm font-medium text-emerald-900 mb-1\">\n                          Add Sensitivity Analysis\n                        </div>\n                        <div className=\"text-xs text-emerald-700\">\n                          Test how valuation changes with different assumptions\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default ContextualInsightsSidebar;\n","import { motion } from 'framer-motion';\nimport {\n  TrendingUp, TrendingDown, Activity, Globe, Bell,\n  Plus, Minus, RefreshCw, Settings, Download, Search,\n  BarChart3, LineChart, PieChart, AlertCircle, CheckCircle\n} from 'lucide-react';\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { LineChart as RechartsLineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, AreaChart, Area, BarChart, Bar } from 'recharts';\n\nconst EnhancedMarketDataDashboard = ({ data, onDataChange }) => {\n  const [activeView, setActiveView] = useState('overview');\n  const [watchlist, setWatchlist] = useState([\n    { symbol: 'SPY', name: 'SPDR S&P 500 ETF', price: 445.67, change: 2.34, changePercent: 0.53, category: 'index' },\n    { symbol: 'QQQ', name: 'Invesco QQQ Trust', price: 378.91, change: -1.45, changePercent: -0.38, category: 'index' },\n    { symbol: 'VIX', name: 'CBOE Volatility Index', price: 18.45, change: 0.87, changePercent: 4.95, category: 'volatility' },\n    { symbol: 'DXY', name: 'US Dollar Index', price: 102.45, change: -0.23, changePercent: -0.22, category: 'currency' },\n    { symbol: '^TNX', name: '10-Year Treasury Yield', price: 4.25, change: 0.05, changePercent: 1.19, category: 'rates' }\n  ]);\n\n  const [marketData, setMarketData] = useState({\n    indices: {\n      'S&P 500': { value: 4456.78, change: 23.45, changePercent: 0.53 },\n      'NASDAQ': { value: 13789.45, change: -45.67, changePercent: -0.33 },\n      'DOW': { value: 34567.89, change: 156.78, changePercent: 0.46 },\n      'Russell 2000': { value: 1987.65, change: 12.34, changePercent: 0.63 }\n    },\n    sectors: [\n      { name: 'Technology', change: 1.2, weight: 23.5 },\n      { name: 'Healthcare', change: 0.8, weight: 13.2 },\n      { name: 'Financial', change: -0.4, weight: 12.8 },\n      { name: 'Consumer Disc.', change: 0.6, weight: 10.9 },\n      { name: 'Communication', change: -0.2, weight: 9.1 },\n      { name: 'Industrials', change: 0.9, weight: 8.7 }\n    ],\n    economicIndicators: {\n      'Fed Funds Rate': { value: 5.25, change: 0.0, unit: '%' },\n      '10Y Treasury': { value: 4.25, change: 0.05, unit: '%' },\n      'Inflation (CPI)': { value: 3.1, change: -0.2, unit: '%' },\n      'Unemployment': { value: 3.8, change: 0.1, unit: '%' },\n      'GDP Growth': { value: 2.4, change: 0.1, unit: '%' }\n    }\n  });\n\n  const [alerts, setAlerts] = useState([\n    { id: 1, type: 'price', symbol: 'SPY', condition: 'above', value: 450, active: true },\n    { id: 2, type: 'volatility', symbol: 'VIX', condition: 'above', value: 20, active: true }\n  ]);\n\n  const [newSymbol, setNewSymbol] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const formatCurrency = useCallback((value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    const sign = value >= 0 ? '+' : '';\n    return `${sign}${value.toFixed(2)}%`;\n  }, []);\n\n  const getChangeColor = useCallback((change) => {\n    if (change > 0) return 'text-green-600';\n    if (change < 0) return 'text-red-600';\n    return 'text-gray-600';\n  }, []);\n\n  const getChangeIcon = useCallback((change) => {\n    if (change > 0) return TrendingUp;\n    if (change < 0) return TrendingDown;\n    return Minus;\n  }, []);\n\n  // Simulate real-time data updates\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setWatchlist(prev => prev.map(item => ({\n        ...item,\n        price: item.price + (Math.random() - 0.5) * 2,\n        change: item.change + (Math.random() - 0.5) * 0.5,\n        changePercent: item.changePercent + (Math.random() - 0.5) * 0.1\n      })));\n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const addToWatchlist = useCallback(async() => {\n    if (!newSymbol.trim()) return;\n\n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      const newItem = {\n        symbol: newSymbol.toUpperCase(),\n        name: `${newSymbol.toUpperCase()} Inc.`,\n        price: Math.random() * 200 + 50,\n        change: (Math.random() - 0.5) * 10,\n        changePercent: (Math.random() - 0.5) * 5,\n        category: 'stock'\n      };\n\n      setWatchlist(prev => [...prev, newItem]);\n      setNewSymbol('');\n    } catch (error) {\n      console.error('Error adding symbol:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [newSymbol]);\n\n  const removeFromWatchlist = useCallback((symbol) => {\n    setWatchlist(prev => prev.filter(item => item.symbol !== symbol));\n  }, []);\n\n  const chartData = useMemo(() => {\n    // Generate sample time series data\n    const now = new Date();\n    return Array.from({ length: 30 }, (_, i) => ({\n      time: new Date(now.getTime() - (29 - i) * 24 * 60 * 60 * 1000).toLocaleDateString(),\n      SPY: 440 + Math.sin(i * 0.2) * 10 + Math.random() * 5,\n      QQQ: 370 + Math.sin(i * 0.25) * 15 + Math.random() * 8,\n      VIX: 20 + Math.sin(i * 0.3) * 5 + Math.random() * 3\n    }));\n  }, []);\n\n  const correlationMatrix = useMemo(() => {\n    // Calculate correlations between major indices (simulated)\n    return [\n      { pair: 'SPY vs QQQ', correlation: 0.85, strength: 'Strong Positive' },\n      { pair: 'SPY vs VIX', correlation: -0.72, strength: 'Strong Negative' },\n      { pair: 'QQQ vs VIX', correlation: -0.68, strength: 'Moderate Negative' },\n      { pair: 'SPY vs DXY', correlation: -0.45, strength: 'Moderate Negative' }\n    ];\n  }, []);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Activity className=\"text-blue-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Enhanced Market Data Dashboard</h2>\n            <p className=\"text-gray-600\">Real-time market insights & valuation integration</p>\n          </div>\n        </div>\n\n        <div className=\"flex space-x-3\">\n          <motion.button\n            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <RefreshCw size={16} />\n            <span>Sync Data</span>\n          </motion.button>\n\n          <motion.button\n            className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <Settings size={16} />\n            <span>Settings</span>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* View Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {[\n            { id: 'overview', label: 'Market Overview', icon: Globe },\n            { id: 'watchlist', label: 'Watchlist', icon: BarChart3 },\n            { id: 'charts', label: 'Charts & Analysis', icon: LineChart },\n            { id: 'alerts', label: 'Alerts', icon: Bell }\n          ].map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveView(tab.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeView === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{tab.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Market Overview */}\n      {activeView === 'overview' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Major Indices */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Major Indices</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {Object.entries(marketData.indices).map(([name, data]) => {\n                const ChangeIcon = getChangeIcon(data.change);\n                return (\n                  <div key={name} className=\"bg-gray-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600 mb-1\">{name}</div>\n                    <div className=\"text-xl font-bold text-gray-800\">\n                      {data.value.toLocaleString()}\n                    </div>\n                    <div className={`flex items-center space-x-1 text-sm ${getChangeColor(data.change)}`}>\n                      <ChangeIcon size={14} />\n                      <span>{data.change > 0 ? '+' : ''}{data.change.toFixed(2)}</span>\n                      <span>({formatPercent(data.changePercent)})</span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Sector Performance */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Sector Performance</h3>\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                {marketData.sectors.map((sector) => (\n                  <div key={sector.name} className=\"flex justify-between items-center\">\n                    <div>\n                      <div className=\"font-medium text-gray-800\">{sector.name}</div>\n                      <div className=\"text-sm text-gray-600\">{sector.weight}% weight</div>\n                    </div>\n                    <div className={`font-semibold ${getChangeColor(sector.change)}`}>\n                      {formatPercent(sector.change)}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Economic Indicators */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Economic Indicators</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n              {Object.entries(marketData.economicIndicators).map(([name, data]) => (\n                <div key={name} className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-sm text-gray-600 mb-1\">{name}</div>\n                  <div className=\"text-lg font-bold text-gray-800\">\n                    {data.value}{data.unit}\n                  </div>\n                  <div className={`text-sm ${getChangeColor(data.change)}`}>\n                    {data.change > 0 ? '+' : ''}{data.change}{data.unit}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Watchlist */}\n      {activeView === 'watchlist' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Add Symbol */}\n          <div className=\"flex space-x-3\">\n            <div className=\"flex-1\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter symbol (e.g., AAPL, MSFT)\"\n                value={newSymbol}\n                onChange={(e) => setNewSymbol(e.target.value.toUpperCase())}\n                onKeyPress={(e) => e.key === 'Enter' && addToWatchlist()}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <motion.button\n              onClick={addToWatchlist}\n              disabled={isLoading || !newSymbol.trim()}\n              className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n                isLoading || !newSymbol.trim()\n                  ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                  : 'bg-green-600 hover:bg-green-700 text-white'\n              }`}\n              whileHover={!isLoading && newSymbol.trim() ? { scale: 1.02 } : {}}\n            >\n              <Plus size={16} />\n              <span>{isLoading ? 'Adding...' : 'Add'}</span>\n            </motion.button>\n          </div>\n\n          {/* Watchlist Table */}\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4\">Symbol</th>\n                  <th className=\"text-left py-3 px-4\">Name</th>\n                  <th className=\"text-right py-3 px-4\">Price</th>\n                  <th className=\"text-right py-3 px-4\">Change</th>\n                  <th className=\"text-right py-3 px-4\">Change %</th>\n                  <th className=\"text-center py-3 px-4\">Category</th>\n                  <th className=\"text-center py-3 px-4\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {watchlist.map((item) => {\n                  const ChangeIcon = getChangeIcon(item.change);\n                  return (\n                    <tr key={item.symbol} className=\"border-b border-gray-200 hover:bg-gray-50\">\n                      <td className=\"py-3 px-4 font-medium text-gray-800\">{item.symbol}</td>\n                      <td className=\"py-3 px-4 text-gray-600\">{item.name}</td>\n                      <td className=\"text-right py-3 px-4 font-medium\">{formatCurrency(item.price)}</td>\n                      <td className={`text-right py-3 px-4 ${getChangeColor(item.change)}`}>\n                        <div className=\"flex items-center justify-end space-x-1\">\n                          <ChangeIcon size={14} />\n                          <span>{item.change > 0 ? '+' : ''}{item.change.toFixed(2)}</span>\n                        </div>\n                      </td>\n                      <td className={`text-right py-3 px-4 font-medium ${getChangeColor(item.changePercent)}`}>\n                        {formatPercent(item.changePercent)}\n                      </td>\n                      <td className=\"text-center py-3 px-4\">\n                        <span\n                          className={`px-2 py-1 rounded-full text-xs font-medium ${\n                            item.category === 'index' ? 'bg-blue-100 text-blue-800' :\n                              item.category === 'stock' ? 'bg-green-100 text-green-800' :\n                                item.category === 'volatility' ? 'bg-red-100 text-red-800' :\n                                  'bg-gray-100 text-gray-800'\n                          }`}\n                        >\n                          {item.category}\n                        </span>\n                      </td>\n                      <td className=\"text-center py-3 px-4\">\n                        <button\n                          onClick={() => removeFromWatchlist(item.symbol)}\n                          className=\"text-red-600 hover:text-red-800\"\n                        >\n                          <Minus size={16} />\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Charts & Analysis */}\n      {activeView === 'charts' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Price Chart */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">30-Day Price Performance</h3>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <RechartsLineChart data={chartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"time\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Line\n                    type=\"monotone\" dataKey=\"SPY\" stroke=\"#3B82F6\"\n                    strokeWidth={2} name=\"S&P 500\"\n                  />\n                  <Line\n                    type=\"monotone\" dataKey=\"QQQ\" stroke=\"#10B981\"\n                    strokeWidth={2} name=\"NASDAQ\"\n                  />\n                  <Line\n                    type=\"monotone\" dataKey=\"VIX\" stroke=\"#EF4444\"\n                    strokeWidth={2} name=\"VIX\"\n                  />\n                </RechartsLineChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Correlation Analysis */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Correlation Analysis</h3>\n            <div className=\"space-y-3\">\n              {correlationMatrix.map((corr, idx) => (\n                <div key={idx} className=\"flex items-center justify-between p-3 bg-white rounded-lg\">\n                  <div>\n                    <div className=\"font-medium text-gray-800\">{corr.pair}</div>\n                    <div className=\"text-sm text-gray-600\">{corr.strength}</div>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <div\n                      className={`text-lg font-bold ${\n                        Math.abs(corr.correlation) > 0.7 ? 'text-red-600' :\n                          Math.abs(corr.correlation) > 0.4 ? 'text-yellow-600' :\n                            'text-green-600'\n                      }`}\n                    >\n                      {corr.correlation.toFixed(2)}\n                    </div>\n                    <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                      <div\n                        className={`h-2 rounded-full ${\n                          Math.abs(corr.correlation) > 0.7 ? 'bg-red-600' :\n                            Math.abs(corr.correlation) > 0.4 ? 'bg-yellow-600' :\n                              'bg-green-600'\n                        }`}\n                        style={{ width: `${Math.abs(corr.correlation) * 100}%` }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Alerts */}\n      {activeView === 'alerts' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Active Alerts */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Active Alerts</h3>\n            <div className=\"space-y-3\">\n              {alerts.map((alert) => (\n                <div key={alert.id} className=\"flex items-center justify-between p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Bell className=\"text-yellow-600\" size={20} />\n                    <div>\n                      <div className=\"font-medium text-gray-800\">\n                        {alert.symbol} {alert.type} alert\n                      </div>\n                      <div className=\"text-sm text-gray-600\">\n                        Notify when {alert.type} goes {alert.condition} {alert.value}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <span\n                      className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        alert.active ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\n                      }`}\n                    >\n                      {alert.active ? 'Active' : 'Inactive'}\n                    </span>\n                    <button className=\"text-red-600 hover:text-red-800\">\n                      <Minus size={16} />\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Market Status Indicators */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Market Status</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <CheckCircle className=\"text-green-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">US Markets</div>\n                  <div className=\"text-sm text-gray-600\">Open (6h 23m remaining)</div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <AlertCircle className=\"text-yellow-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">European Markets</div>\n                  <div className=\"text-sm text-gray-600\">Closed</div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <AlertCircle className=\"text-red-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">Asian Markets</div>\n                  <div className=\"text-sm text-gray-600\">Closed</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default EnhancedMarketDataDashboard;\n","import { motion } from 'framer-motion';\nimport {\n  BarChart3, Plus, Trash2,\n  Play, Download, Settings, RefreshCw, AlertTriangle, CheckCircle\n} from 'lucide-react';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar, LineChart, Line } from 'recharts';\n\nconst EnhancedScenarioAnalysis = ({ data, onDataChange, calculateDCF, lboModelingEngine }) => {\n  const [activeView, setActiveView] = useState('scenarios');\n  const [scenarios, setScenarios] = useState([\n    {\n      id: 1,\n      name: 'Base Case',\n      probability: 40,\n      revenueGrowth: 5.0,\n      marginExpansion: 0.5,\n      exitMultiple: 10.0,\n      capexIntensity: 3.0,\n      isBase: true\n    },\n    {\n      id: 2,\n      name: 'Bull Case',\n      probability: 30,\n      revenueGrowth: 8.0,\n      marginExpansion: 1.5,\n      exitMultiple: 12.0,\n      capexIntensity: 2.5,\n      isBase: false\n    },\n    {\n      id: 3,\n      name: 'Bear Case',\n      probability: 30,\n      revenueGrowth: 2.0,\n      marginExpansion: -0.5,\n      exitMultiple: 8.0,\n      capexIntensity: 4.0,\n      isBase: false\n    }\n  ]);\n\n  const [analysisSettings, setAnalysisSettings] = useState({\n    modelType: 'dcf', // 'dcf', 'lbo', '3statement'\n    outputMetric: 'enterpriseValue',\n    includeCorrelations: false,\n    numSimulations: 1000\n  });\n\n  const [results, setResults] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n\n  const formatCurrency = useCallback((value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    return `${(value || 0).toFixed(1)}%`;\n  }, []);\n\n  const runScenarioAnalysis = useCallback(async() => {\n    setIsCalculating(true);\n\n    try {\n      const scenarioResults = [];\n\n      for (const scenario of scenarios) {\n        let result = null;\n\n        if (analysisSettings.modelType === 'dcf') {\n          // Run DCF analysis for each scenario\n          const scenarioData = {\n            ...data,\n            statements: {\n              ...data.statements,\n              incomeStatement: {\n                ...data.statements.incomeStatement,\n                // Apply scenario assumptions to modify data\n                totalRevenue: data.statements.incomeStatement.totalRevenue?.map((rev, idx) => {\n                  if (idx === 0) return rev; // Base year unchanged\n                  return rev * Math.pow(1 + scenario.revenueGrowth / 100, idx);\n                })\n              }\n            }\n          };\n\n          result = calculateDCF ? calculateDCF(scenarioData) : null;\n        } else if (analysisSettings.modelType === 'lbo' && lboModelingEngine) {\n          // Run LBO analysis for each scenario\n          const lboInputs = {\n            symbol: data.symbol || 'COMPANY',\n            companyName: data.companyName || 'Target Company',\n            purchasePrice: 500000000,\n            ebitda: 75000000,\n            revenue: 500000000,\n            assumptions: {\n              operating: {\n                ebitdaGrowthRate: scenario.revenueGrowth / 100,\n                capexAsPercentOfRevenue: scenario.capexIntensity / 100\n              },\n              exit: {\n                exitMultiple: scenario.exitMultiple\n              }\n            }\n          };\n\n          result = lboModelingEngine.buildLBOModel(lboInputs);\n        }\n\n        scenarioResults.push({\n          ...scenario,\n          result,\n          enterpriseValue: result?.enterpriseValue || result?.baseCase?.exitAnalysis?.enterpriseValue || 0,\n          equityValue: result?.equityValue || result?.baseCase?.exitAnalysis?.equityProceeds || 0,\n          irr: result?.irr || result?.baseCase?.returnsAnalysis?.irr || 0,\n          moic: result?.moic || result?.baseCase?.returnsAnalysis?.moic || 0\n        });\n      }\n\n      // Calculate probability-weighted metrics\n      const weightedValue = scenarioResults.reduce((sum, s) =>\n        sum + (s.enterpriseValue * s.probability / 100), 0\n      );\n\n      const valueRange = {\n        min: Math.min(...scenarioResults.map(s => s.enterpriseValue)),\n        max: Math.max(...scenarioResults.map(s => s.enterpriseValue)),\n        range: Math.max(...scenarioResults.map(s => s.enterpriseValue)) -\n               Math.min(...scenarioResults.map(s => s.enterpriseValue))\n      };\n\n      // Risk metrics\n      const standardDeviation = Math.sqrt(\n        scenarioResults.reduce((sum, s) => {\n          const deviation = s.enterpriseValue - weightedValue;\n          return sum + (deviation * deviation * s.probability / 100);\n        }, 0)\n      );\n\n      const coefficientOfVariation = standardDeviation / weightedValue;\n\n      setResults({\n        scenarios: scenarioResults,\n        summary: {\n          weightedValue,\n          valueRange,\n          standardDeviation,\n          coefficientOfVariation,\n          probabilityOfPositiveReturn: scenarioResults\n            .filter(s => s.enterpriseValue > (data.currentMarketCap || 1000000000))\n            .reduce((sum, s) => sum + s.probability, 0)\n        },\n        chartData: scenarioResults.map(s => ({\n          name: s.name,\n          value: s.enterpriseValue,\n          probability: s.probability,\n          irr: s.irr * 100,\n          moic: s.moic\n        }))\n      });\n\n    } catch (error) {\n      console.error('Scenario analysis error:', error);\n      alert(`Error running scenario analysis: ${error.message}`);\n    } finally {\n      setIsCalculating(false);\n    }\n  }, [scenarios, analysisSettings, data, calculateDCF, lboModelingEngine]);\n\n  const addScenario = useCallback(() => {\n    const newScenario = {\n      id: Date.now(),\n      name: `Scenario ${scenarios.length + 1}`,\n      probability: Math.max(0, 100 - scenarios.reduce((sum, s) => sum + s.probability, 0)),\n      revenueGrowth: 5.0,\n      marginExpansion: 0.0,\n      exitMultiple: 10.0,\n      capexIntensity: 3.0,\n      isBase: false\n    };\n    setScenarios(prev => [...prev, newScenario]);\n  }, [scenarios]);\n\n  const updateScenario = useCallback((id, field, value) => {\n    setScenarios(prev => prev.map(scenario =>\n      scenario.id === id ? { ...scenario, [field]: parseFloat(value) || value } : scenario\n    ));\n  }, []);\n\n  const deleteScenario = useCallback((id) => {\n    setScenarios(prev => prev.filter(scenario => scenario.id !== id && !scenario.isBase));\n  }, []);\n\n  const totalProbability = useMemo(() =>\n    scenarios.reduce((sum, s) => sum + s.probability, 0), [scenarios]\n  );\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <BarChart3 className=\"text-purple-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Enhanced Scenario Analysis</h2>\n            <p className=\"text-gray-600\">Cross-model scenario planning & risk assessment</p>\n          </div>\n        </div>\n\n        <div className=\"flex space-x-3\">\n          <motion.button\n            onClick={runScenarioAnalysis}\n            disabled={isCalculating || totalProbability !== 100}\n            className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n              isCalculating || totalProbability !== 100\n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                : 'bg-purple-600 hover:bg-purple-700 text-white'\n            }`}\n            whileHover={!isCalculating && totalProbability === 100 ? { scale: 1.02 } : {}}\n          >\n            <Play size={18} />\n            <span>{isCalculating ? 'Running...' : 'Run Analysis'}</span>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Model Selection & Settings */}\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Model Type</label>\n            <select\n              value={analysisSettings.modelType}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, modelType: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            >\n              <option value=\"dcf\">DCF Valuation</option>\n              <option value=\"lbo\">LBO Analysis</option>\n              <option value=\"3statement\">3-Statement Model</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Output Metric</label>\n            <select\n              value={analysisSettings.outputMetric}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, outputMetric: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            >\n              <option value=\"enterpriseValue\">Enterprise Value</option>\n              <option value=\"equityValue\">Equity Value</option>\n              <option value=\"irr\">IRR</option>\n              <option value=\"moic\">MOIC</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Simulations</label>\n            <input\n              type=\"number\"\n              value={analysisSettings.numSimulations}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, numSimulations: parseInt(e.target.value) || 1000 }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            />\n          </div>\n\n          <div className=\"flex items-end\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={analysisSettings.includeCorrelations}\n                onChange={(e) => setAnalysisSettings(prev => ({ ...prev, includeCorrelations: e.target.checked }))}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Include Correlations</span>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Probability Warning */}\n      {totalProbability !== 100 && (\n        <div className=\"mb-6 p-3 bg-amber-50 border border-amber-200 rounded-lg flex items-center\">\n          <AlertTriangle className=\"text-amber-500 mr-2\" size={20} />\n          <span className=\"text-amber-800\">\n            Total probability is {totalProbability}%. Adjust scenarios to sum to 100%.\n          </span>\n        </div>\n      )}\n\n      {/* Scenarios Table */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold\">Scenarios</h3>\n          <motion.button\n            onClick={addScenario}\n            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <Plus size={16} />\n            <span>Add Scenario</span>\n          </motion.button>\n        </div>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead>\n              <tr className=\"border-b-2 border-gray-300\">\n                <th className=\"text-left py-3 px-4\">Scenario</th>\n                <th className=\"text-right py-3 px-4\">Probability (%)</th>\n                <th className=\"text-right py-3 px-4\">Revenue Growth (%)</th>\n                <th className=\"text-right py-3 px-4\">Margin Expansion (bps)</th>\n                <th className=\"text-right py-3 px-4\">Exit Multiple</th>\n                <th className=\"text-right py-3 px-4\">CapEx Intensity (%)</th>\n                <th className=\"text-center py-3 px-4\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {scenarios.map((scenario) => (\n                <tr key={scenario.id} className={`border-b border-gray-200 ${scenario.isBase ? 'bg-blue-50' : ''}`}>\n                  <td className=\"py-3 px-4\">\n                    <input\n                      type=\"text\"\n                      value={scenario.name}\n                      onChange={(e) => updateScenario(scenario.id, 'name', e.target.value)}\n                      disabled={scenario.isBase}\n                      className={`border border-gray-300 rounded px-2 py-1 ${scenario.isBase ? 'bg-gray-100' : ''}`}\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"1\"\n                      value={scenario.probability}\n                      onChange={(e) => updateScenario(scenario.id, 'probability', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.revenueGrowth}\n                      onChange={(e) => updateScenario(scenario.id, 'revenueGrowth', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.marginExpansion}\n                      onChange={(e) => updateScenario(scenario.id, 'marginExpansion', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.exitMultiple}\n                      onChange={(e) => updateScenario(scenario.id, 'exitMultiple', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.capexIntensity}\n                      onChange={(e) => updateScenario(scenario.id, 'capexIntensity', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-center py-3 px-4\">\n                    {!scenario.isBase && (\n                      <button\n                        onClick={() => deleteScenario(scenario.id)}\n                        className=\"text-red-600 hover:text-red-800\"\n                      >\n                        <Trash2 size={16} />\n                      </button>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Results */}\n      {results && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"space-y-6\"\n        >\n          {/* Summary Metrics */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {formatCurrency(results.summary.weightedValue)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Expected Value</div>\n            </div>\n            <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {formatCurrency(results.summary.valueRange.max)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Best Case</div>\n            </div>\n            <div className=\"bg-red-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-red-600\">\n                {formatCurrency(results.summary.valueRange.min)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Worst Case</div>\n            </div>\n            <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {formatPercent(results.summary.probabilityOfPositiveReturn)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Success Probability</div>\n            </div>\n          </div>\n\n          {/* Scenario Results Chart */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Scenario Results</h3>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={results.chartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis tickFormatter={(value) => formatCurrency(value)} />\n                  <Tooltip formatter={(value) => [formatCurrency(value), 'Enterprise Value']} />\n                  <Bar dataKey=\"value\" fill=\"#8884d8\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Risk Analysis */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h4 className=\"font-semibold mb-3\">Risk Metrics</h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span>Standard Deviation:</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.standardDeviation)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Coefficient of Variation:</span>\n                  <span className=\"font-medium\">{(results.summary.coefficientOfVariation * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Value at Risk (5%):</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.valueRange.min)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Upside Potential:</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.valueRange.range)}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h4 className=\"font-semibold mb-3\">Scenario Returns</h4>\n              <div className=\"space-y-2 text-sm\">\n                {results.scenarios.map((scenario) => (\n                  <div key={scenario.id} className=\"flex justify-between\">\n                    <span>{scenario.name}:</span>\n                    <span className=\"font-medium\">\n                      {analysisSettings.outputMetric === 'irr' ? formatPercent(scenario.irr) :\n                        analysisSettings.outputMetric === 'moic' ? `${scenario.moic.toFixed(1)}x` :\n                          formatCurrency(scenario[analysisSettings.outputMetric])}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {!results && (\n        <div className=\"text-center py-12 text-gray-500\">\n          <BarChart3 size={48} className=\"mx-auto mb-4 opacity-50\" />\n          <p>Configure scenarios and run analysis to see results</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EnhancedScenarioAnalysis;\n","import { motion } from 'framer-motion';\nimport { FileText, TrendingUp, Building, Activity, Calculator, RefreshCw, CheckCircle, AlertCircle } from 'lucide-react';\nimport React, { useState, useCallback } from 'react';\n\nconst FinancialModelWorkspace = ({ data, onDataChange }) => {\n  const [activeStatement, setActiveStatement] = useState('income');\n  const [modelData, setModelData] = useState({\n    // Income Statement (in thousands)\n    revenue: [100000, 105000, 110250, 115763, 121551],\n    costOfGoodsSold: [60000, 63000, 66150, 69458, 72931],\n    grossProfit: [40000, 42000, 44100, 46305, 48620],\n    operatingExpenses: [25000, 26250, 27563, 28941, 30388],\n    ebitda: [15000, 15750, 16538, 17364, 18232],\n    depreciation: [3000, 3150, 3308, 3473, 3647],\n    ebit: [12000, 12600, 13230, 13891, 14585],\n    interestExpense: [2000, 1800, 1580, 1340, 1080],\n    ebt: [10000, 10800, 11650, 12551, 13505],\n    taxes: [2100, 2268, 2447, 2636, 2836],\n    netIncome: [7900, 8532, 9203, 9915, 10669],\n\n    // Balance Sheet\n    cash: [5000, 8532, 12735, 17650, 23319],\n    accountsReceivable: [8333, 8750, 9188, 9647, 10129],\n    inventory: [10000, 10500, 11025, 11576, 12155],\n    totalCurrentAssets: [23333, 27782, 32948, 38873, 45603],\n    ppe: [50000, 51850, 53543, 55070, 56423],\n    totalAssets: [73333, 79632, 86491, 93943, 102026],\n\n    accountsPayable: [5000, 5250, 5513, 5789, 6078],\n    shortTermDebt: [3000, 2000, 1000, 0, 0],\n    totalCurrentLiabilities: [8000, 7250, 6513, 5789, 6078],\n    longTermDebt: [25000, 23000, 21000, 19000, 17000],\n    totalLiabilities: [33000, 30250, 27513, 24789, 23078],\n    shareholderEquity: [40333, 49382, 58978, 69154, 78948],\n    totalLiabilitiesEquity: [73333, 79632, 86491, 93943, 102026],\n\n    // Cash Flow\n    operatingCashFlow: [8567, 10233, 11345, 12464, 13584],\n    capex: [-5000, -4850, -5000, -5000, -5000],\n    investingCashFlow: [-5000, -4850, -5000, -5000, -5000],\n    debtRepayment: [-2000, -2000, -2000, -2000, -2000],\n    financingCashFlow: [-2000, -2000, -2000, -2000, -2000],\n    netCashFlow: [1567, 3383, 4345, 5464, 6584],\n    endingCash: [5000, 8383, 12728, 18192, 24776]\n  });\n\n  const [assumptions, setAssumptions] = useState({\n    revenueGrowthRate: 0.05,\n    cogsPercentOfRevenue: 0.60,\n    opexGrowthRate: 0.05,\n    taxRate: 0.21,\n    depreciationRate: 0.06,\n    capexPercentOfRevenue: 0.05,\n    debtPaydown: 2000\n  });\n\n  const [validationErrors, setValidationErrors] = useState([]);\n  const periods = ['Year 1', 'Year 2', 'Year 3', 'Year 4', 'Year 5'];\n\n  const formatCurrency = useCallback((value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0\n    }).format(value * 1000); // Convert from thousands\n  }, []);\n\n  const recalculateModel = useCallback(() => {\n    const newData = { ...modelData };\n\n    // Recalculate projections based on assumptions\n    for (let i = 1; i < 5; i++) {\n      // Income Statement\n      newData.revenue[i] = newData.revenue[i - 1] * (1 + assumptions.revenueGrowthRate);\n      newData.costOfGoodsSold[i] = newData.revenue[i] * assumptions.cogsPercentOfRevenue;\n      newData.grossProfit[i] = newData.revenue[i] - newData.costOfGoodsSold[i];\n      newData.operatingExpenses[i] = newData.operatingExpenses[i - 1] * (1 + assumptions.opexGrowthRate);\n      newData.ebitda[i] = newData.grossProfit[i] - newData.operatingExpenses[i];\n      newData.depreciation[i] = newData.ppe[i - 1] * assumptions.depreciationRate;\n      newData.ebit[i] = newData.ebitda[i] - newData.depreciation[i];\n      newData.interestExpense[i] = newData.longTermDebt[i - 1] * 0.06;\n      newData.ebt[i] = newData.ebit[i] - newData.interestExpense[i];\n      newData.taxes[i] = Math.max(0, newData.ebt[i] * assumptions.taxRate);\n      newData.netIncome[i] = newData.ebt[i] - newData.taxes[i];\n\n      // Balance Sheet\n      const capex = newData.revenue[i] * assumptions.capexPercentOfRevenue;\n      newData.ppe[i] = newData.ppe[i - 1] + capex - newData.depreciation[i];\n      newData.longTermDebt[i] = Math.max(0, newData.longTermDebt[i - 1] - assumptions.debtPaydown);\n      newData.shortTermDebt[i] = Math.max(0, newData.shortTermDebt[i - 1] - 1000);\n\n      // Working capital (simplified)\n      newData.accountsReceivable[i] = newData.revenue[i] * 0.083; // ~30 days\n      newData.inventory[i] = newData.costOfGoodsSold[i] * 0.1; // ~36 days\n      newData.accountsPayable[i] = newData.costOfGoodsSold[i] * 0.05; // ~18 days\n\n      // Cash Flow\n      const wcChange = (newData.accountsReceivable[i] - newData.accountsReceivable[i - 1]) +\n                      (newData.inventory[i] - newData.inventory[i - 1]) -\n                      (newData.accountsPayable[i] - newData.accountsPayable[i - 1]);\n\n      newData.operatingCashFlow[i] = newData.netIncome[i] + newData.depreciation[i] - wcChange;\n      newData.capex[i] = -capex;\n      newData.investingCashFlow[i] = newData.capex[i];\n      newData.debtRepayment[i] = -assumptions.debtPaydown;\n      newData.financingCashFlow[i] = newData.debtRepayment[i];\n      newData.netCashFlow[i] = newData.operatingCashFlow[i] + newData.investingCashFlow[i] + newData.financingCashFlow[i];\n      newData.endingCash[i] = newData.cash[i - 1] + newData.netCashFlow[i];\n      newData.cash[i] = newData.endingCash[i];\n\n      // Complete Balance Sheet\n      newData.totalCurrentAssets[i] = newData.cash[i] + newData.accountsReceivable[i] + newData.inventory[i];\n      newData.totalAssets[i] = newData.totalCurrentAssets[i] + newData.ppe[i];\n      newData.totalCurrentLiabilities[i] = newData.accountsPayable[i] + newData.shortTermDebt[i];\n      newData.totalLiabilities[i] = newData.totalCurrentLiabilities[i] + newData.longTermDebt[i];\n      newData.shareholderEquity[i] = newData.totalAssets[i] - newData.totalLiabilities[i];\n      newData.totalLiabilitiesEquity[i] = newData.totalLiabilities[i] + newData.shareholderEquity[i];\n    }\n\n    setModelData(newData);\n\n    // Validate model\n    const errors = [];\n    for (let i = 0; i < 5; i++) {\n      const diff = Math.abs(newData.totalAssets[i] - newData.totalLiabilitiesEquity[i]);\n      if (diff > 1) {\n        errors.push(`Balance sheet doesn't balance in ${periods[i]}`);\n      }\n    }\n    setValidationErrors(errors);\n\n  }, [modelData, assumptions, periods]);\n\n  const handleAssumptionChange = useCallback((field, value) => {\n    setAssumptions(prev => ({ ...prev, [field]: parseFloat(value) || 0 }));\n  }, []);\n\n  const statements = [\n    { id: 'income', label: 'Income Statement', icon: TrendingUp },\n    { id: 'balance', label: 'Balance Sheet', icon: Building },\n    { id: 'cashflow', label: 'Cash Flow', icon: Activity },\n    { id: 'assumptions', label: 'Assumptions', icon: Calculator }\n  ];\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <FileText className=\"text-green-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">3-Statement Financial Model</h2>\n            <p className=\"text-gray-600\">Integrated Income Statement, Balance Sheet & Cash Flow</p>\n          </div>\n        </div>\n\n        <motion.button\n          onClick={recalculateModel}\n          className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg flex items-center space-x-2\"\n          whileHover={{ scale: 1.02 }}\n        >\n          <RefreshCw size={16} />\n          <span>Recalculate</span>\n        </motion.button>\n      </div>\n\n      {/* Validation Status */}\n      {validationErrors.length === 0 ? (\n        <div className=\"mb-6 p-3 bg-green-50 border border-green-200 rounded-lg flex items-center\">\n          <CheckCircle className=\"text-green-500 mr-2\" size={20} />\n          <span className=\"text-green-800 font-medium\">Model is balanced and consistent</span>\n        </div>\n      ) : (\n        <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <div className=\"flex items-center mb-2\">\n            <AlertCircle className=\"text-red-500 mr-2\" size={20} />\n            <h3 className=\"font-semibold text-red-800\">Validation Errors</h3>\n          </div>\n          <ul className=\"text-sm text-red-700\">\n            {validationErrors.map((error, idx) => <li key={idx}>• {error}</li>)}\n          </ul>\n        </div>\n      )}\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {statements.map((statement) => {\n            const Icon = statement.icon;\n            return (\n              <button\n                key={statement.id}\n                onClick={() => setActiveStatement(statement.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeStatement === statement.id\n                    ? 'border-green-500 text-green-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{statement.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Income Statement */}\n      {activeStatement === 'income' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Income Statement ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {[\n                  { label: 'Revenue', key: 'revenue' },\n                  { label: 'Cost of Goods Sold', key: 'costOfGoodsSold' },\n                  { label: 'Gross Profit', key: 'grossProfit' },\n                  { label: 'Operating Expenses', key: 'operatingExpenses' },\n                  { label: 'EBITDA', key: 'ebitda' },\n                  { label: 'Depreciation', key: 'depreciation' },\n                  { label: 'EBIT', key: 'ebit' },\n                  { label: 'Interest Expense', key: 'interestExpense' },\n                  { label: 'EBT', key: 'ebt' },\n                  { label: 'Taxes', key: 'taxes' },\n                  { label: 'Net Income', key: 'netIncome' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4 font-medium\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Balance Sheet */}\n      {activeStatement === 'balance' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Balance Sheet ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                <tr className=\"bg-gray-100\"><td colSpan={6} className=\"py-2 px-4 font-semibold\">ASSETS</td></tr>\n                {[\n                  { label: 'Cash', key: 'cash' },\n                  { label: 'Accounts Receivable', key: 'accountsReceivable' },\n                  { label: 'Inventory', key: 'inventory' },\n                  { label: 'Total Current Assets', key: 'totalCurrentAssets' },\n                  { label: 'PP&E', key: 'ppe' },\n                  { label: 'Total Assets', key: 'totalAssets' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n\n                <tr className=\"bg-gray-100\"><td colSpan={6} className=\"py-2 px-4 font-semibold\">LIABILITIES & EQUITY</td></tr>\n                {[\n                  { label: 'Accounts Payable', key: 'accountsPayable' },\n                  { label: 'Short-term Debt', key: 'shortTermDebt' },\n                  { label: 'Total Current Liabilities', key: 'totalCurrentLiabilities' },\n                  { label: 'Long-term Debt', key: 'longTermDebt' },\n                  { label: 'Total Liabilities', key: 'totalLiabilities' },\n                  { label: 'Shareholder Equity', key: 'shareholderEquity' },\n                  { label: 'Total Liab. & Equity', key: 'totalLiabilitiesEquity' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Cash Flow */}\n      {activeStatement === 'cashflow' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Cash Flow Statement ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {[\n                  { label: 'Operating Cash Flow', key: 'operatingCashFlow' },\n                  { label: 'CapEx', key: 'capex' },\n                  { label: 'Investing Cash Flow', key: 'investingCashFlow' },\n                  { label: 'Debt Repayment', key: 'debtRepayment' },\n                  { label: 'Financing Cash Flow', key: 'financingCashFlow' },\n                  { label: 'Net Cash Flow', key: 'netCashFlow' },\n                  { label: 'Ending Cash', key: 'endingCash' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Assumptions */}\n      {activeStatement === 'assumptions' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-4\">Key Assumptions</h3>\n              <div className=\"space-y-3\">\n                {[\n                  { label: 'Revenue Growth Rate (%)', key: 'revenueGrowthRate', isPercent: true },\n                  { label: 'COGS % of Revenue', key: 'cogsPercentOfRevenue', isPercent: true },\n                  { label: 'OpEx Growth Rate (%)', key: 'opexGrowthRate', isPercent: true },\n                  { label: 'Tax Rate (%)', key: 'taxRate', isPercent: true },\n                  { label: 'CapEx % of Revenue', key: 'capexPercentOfRevenue', isPercent: true },\n                  { label: 'Annual Debt Paydown ($000s)', key: 'debtPaydown', isPercent: false }\n                ].map(assumption => (\n                  <div key={assumption.key}>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      {assumption.label}\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      value={assumption.isPercent ? assumptions[assumption.key] * 100 : assumptions[assumption.key]}\n                      onChange={(e) => handleAssumptionChange(\n                        assumption.key,\n                        assumption.isPercent ? (e.target.value || 0) / 100 : e.target.value\n                      )}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-4\">Model Metrics</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span>5-Year Revenue CAGR:</span>\n                  <span className=\"font-medium\">{((Math.pow(modelData.revenue[4] / modelData.revenue[0], 1 / 4) - 1) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>5-Year EBITDA CAGR:</span>\n                  <span className=\"font-medium\">{((Math.pow(modelData.ebitda[4] / modelData.ebitda[0], 1 / 4) - 1) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Exit EBITDA Margin:</span>\n                  <span className=\"font-medium\">{((modelData.ebitda[4] / modelData.revenue[4]) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Exit Debt/EBITDA:</span>\n                  <span className=\"font-medium\">{(modelData.longTermDebt[4] / modelData.ebitda[4]).toFixed(1)}x</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default FinancialModelWorkspace;\n","import { Plus, ChevronDown, ChevronRight, Calculator, FileText, TrendingUp, Edit2 } from 'lucide-react';\nimport React, { useState, useRef, useEffect } from 'react';\n\nimport { useFinancialAccessibility } from '../../hooks/useAccessibility';\n\nconst FinancialSpreadsheet = ({ data, onDataChange, onAdjustedValuesChange }) => {\n  const [activeStatement, setActiveStatement] = useState('incomeStatement');\n  const [adjustedValues, setAdjustedValues] = useState({});\n\n  // Add accessibility monitoring for financial spreadsheet\n  const { elementRef, testFinancialFeatures } = useFinancialAccessibility('spreadsheet');\n  const [expandedSections, setExpandedSections] = useState({\n    // Income Statement\n    revenue: true,\n    costOfGoodsSold: true,\n    operatingExpenses: true,\n    salariesBenefits: true,\n    grossProfit: true,\n    operatingIncome: true,\n    incomeBeforeTax: true,\n    otherIncomeExpense: true,\n    // Balance Sheet\n    currentAssets: true,\n    nonCurrentAssets: true,\n    currentLiabilities: true,\n    nonCurrentLiabilities: true,\n    equity: true,\n    // Cash Flow\n    operatingActivities: true,\n    investingActivities: true,\n    financingActivities: true\n  });\n\n  const [editingCell, setEditingCell] = useState(null);\n  const [cellValue, setCellValue] = useState('');\n  const inputRef = useRef(null);\n\n  // Initialize adjusted values with 2024 data (period index 2)\n  useEffect(() => {\n    if (data?.statements?.incomeStatement && Object.keys(adjustedValues).length === 0) {\n      const newAdjustedValues = {};\n      const incomeStatement = data.statements.incomeStatement;\n\n      Object.keys(incomeStatement).forEach(key => {\n        if (incomeStatement[key] && incomeStatement[key][2] !== undefined) {\n          newAdjustedValues[key] = incomeStatement[key][2];\n        }\n      });\n\n      setAdjustedValues(newAdjustedValues);\n      if (onAdjustedValuesChange) {\n        onAdjustedValuesChange(newAdjustedValues);\n      }\n    }\n  }, [data, adjustedValues, onAdjustedValuesChange]);\n\n  // Get current template based on active statement\n  const getCurrentTemplate = () => {\n    switch (activeStatement) {\n      case 'balanceSheet':\n        return balanceSheetTemplate;\n      case 'cashFlow':\n        return cashFlowTemplate;\n      default:\n        return incomeStatementTemplate;\n    }\n  };\n\n\n  // Income Statement Template Structure with Enhanced Color Coding\n  const incomeStatementTemplate = {\n    revenue: {\n      title: 'Revenue',\n      color: 'bg-emerald-50 border-emerald-300',\n      headerBg: 'bg-emerald-600',\n      textColor: 'text-emerald-900',\n      items: [\n        { key: 'energyDevices', label: 'Energy Devices', level: 1 },\n        { key: 'injectables', label: 'Injectables', level: 1 },\n        { key: 'wellness', label: 'Wellness', level: 1 },\n        { key: 'weightloss', label: 'Weightloss', level: 1 },\n        { key: 'retailSales', label: 'Retail Sales', level: 1 },\n        { key: 'surgery', label: 'Surgery', level: 1 },\n        { key: 'totalRevenue', label: 'Total Revenue', level: 0, bold: true, formula: true }\n      ]\n    },\n    costOfGoodsSold: {\n      title: 'Cost of Goods Sold',\n      color: 'bg-red-50 border-red-300',\n      headerBg: 'bg-red-600',\n      textColor: 'text-red-900',\n      items: [\n        { key: 'energyDeviceSupplies', label: 'Energy Device Supplies', level: 1 },\n        { key: 'injectablesCogs', label: 'Injectables', level: 1 },\n        { key: 'wellnessCogs', label: 'Wellness', level: 1 },\n        { key: 'weightlossCogs', label: 'Weightloss', level: 1 },\n        { key: 'retailProducts', label: 'Retail Products', level: 1 },\n        { key: 'surgicalSupplies', label: 'Surgical Supplies', level: 1 },\n        { key: 'totalCostOfGoodsSold', label: 'Total Cost of Goods Sold', level: 0, bold: true, formula: true }\n      ]\n    },\n    grossProfit: {\n      title: 'Gross Profit',\n      color: 'bg-blue-50 border-blue-300',\n      headerBg: 'bg-blue-600',\n      textColor: 'text-blue-900',\n      items: [\n        { key: 'grossProfit', label: 'Gross Profit', level: 0, bold: true, formula: true }\n      ]\n    },\n    salariesBenefits: {\n      title: 'Salaries & Benefits',\n      color: 'bg-purple-50 border-purple-300',\n      headerBg: 'bg-purple-600',\n      textColor: 'text-purple-900',\n      items: [\n        { key: 'employeeBenefits', label: 'Employee Benefits', level: 1 },\n        { key: 'payroll', label: 'Payroll', level: 1 },\n        { key: 'payrollTaxes', label: 'Payroll Taxes', level: 1 },\n        { key: 'totalSalariesBenefits', label: 'Total Salaries & Benefits', level: 0, bold: true, formula: true }\n      ]\n    },\n    operatingExpenses: {\n      title: 'Operating Expenses',\n      color: 'bg-orange-50 border-orange-300',\n      headerBg: 'bg-orange-600',\n      textColor: 'text-orange-900',\n      items: [\n        { key: 'marketing', label: 'Marketing', level: 1 },\n        { key: 'automobile', label: 'Automobile', level: 1 },\n        { key: 'creditCardBankCharges', label: 'Credit Card and Bank Charges', level: 1 },\n        { key: 'donations', label: 'Donations', level: 1 },\n        { key: 'computerTelephoneUtilities', label: 'Computer, Telephone, and Utilities', level: 1 },\n        { key: 'depreciation', label: 'Depreciation', level: 1 },\n        { key: 'duesSubscriptions', label: 'Dues & Subscriptions', level: 1 },\n        { key: 'education', label: 'Education', level: 1 },\n        { key: 'equipmentRental', label: 'Equipment Rental', level: 1 },\n        { key: 'insurance', label: 'Insurance', level: 1 },\n        { key: 'interestExpense', label: 'Interest Expense', level: 1 },\n        { key: 'travelMealsEntertainment', label: 'Travel, Meals, and Entertainment', level: 1 },\n        { key: 'rent', label: 'Rent', level: 1 },\n        { key: 'officeExpenses', label: 'Office Expenses', level: 1 },\n        { key: 'professionalFees', label: 'Professional Fees', level: 1 },\n        { key: 'repairsMaintenance', label: 'Repairs & Maintenance', level: 1 },\n        { key: 'localTax', label: 'Local Tax', level: 1 },\n        { key: 'stateTax', label: 'State Tax', level: 1 },\n        { key: 'totalOperatingExpense', label: 'Total Operating Expense', level: 0, bold: true, formula: true }\n      ]\n    },\n    operatingIncome: {\n      title: 'Operating Income',\n      color: 'bg-teal-50 border-teal-300',\n      headerBg: 'bg-teal-600',\n      textColor: 'text-teal-900',\n      items: [\n        { key: 'operatingIncome', label: 'Operating Income', level: 0, bold: true }\n      ]\n    },\n    otherIncomeExpense: {\n      title: 'Other Income / (Expense)',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-600',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'gainOnAssetSale', label: 'Gain (Loss) On Asset Sale', level: 1 },\n        { key: 'interestIncome', label: 'Interest Income', level: 1 },\n        { key: 'otherExpenses', label: 'Other Expenses', level: 1 },\n        { key: 'totalOtherIncomeExpense', label: 'Total Other Income / (Expenses)', level: 0, bold: true, formula: true }\n      ]\n    },\n    incomeBeforeTax: {\n      title: 'Net Income Before Taxes',\n      color: 'bg-amber-50 border-amber-300',\n      headerBg: 'bg-amber-600',\n      textColor: 'text-amber-900',\n      items: [\n        { key: 'incomeBeforeTax', label: 'Net Income Before Taxes', level: 0, bold: true }\n      ]\n    }\n  };\n\n  // Balance Sheet Template Structure\n  const balanceSheetTemplate = {\n    currentAssets: {\n      title: 'Current Assets',\n      color: 'bg-emerald-50 border-emerald-300',\n      headerBg: 'bg-emerald-600',\n      textColor: 'text-emerald-900',\n      items: [\n        { key: 'cash', label: 'Cash and Cash Equivalents', level: 1 },\n        { key: 'receivables', label: 'Accounts Receivable', level: 1 },\n        { key: 'inventory', label: 'Inventory', level: 1 },\n        { key: 'prepaidExpenses', label: 'Prepaid Expenses', level: 1 },\n        { key: 'otherCurrentAssets', label: 'Other Current Assets', level: 1 },\n        { key: 'totalCurrentAssets', label: 'Total Current Assets', level: 0, formula: true, bold: true }\n      ]\n    },\n    nonCurrentAssets: {\n      title: 'Non-Current Assets',\n      color: 'bg-blue-50 border-blue-300',\n      headerBg: 'bg-blue-600',\n      textColor: 'text-blue-900',\n      items: [\n        { key: 'ppe', label: 'Property, Plant & Equipment', level: 1 },\n        { key: 'accumulatedDepreciation', label: 'Less: Accumulated Depreciation', level: 1 },\n        { key: 'netPPE', label: 'Net Property, Plant & Equipment', level: 1, formula: true },\n        { key: 'intangibleAssets', label: 'Intangible Assets', level: 1 },\n        { key: 'goodwill', label: 'Goodwill', level: 1 },\n        { key: 'otherNonCurrentAssets', label: 'Other Non-Current Assets', level: 1 },\n        { key: 'totalNonCurrentAssets', label: 'Total Non-Current Assets', level: 0, formula: true, bold: true }\n      ]\n    },\n    totalAssets: {\n      title: 'Total Assets',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'totalAssets', label: 'Total Assets', level: 0, formula: true, bold: true }\n      ]\n    },\n    currentLiabilities: {\n      title: 'Current Liabilities',\n      color: 'bg-red-50 border-red-300',\n      headerBg: 'bg-red-600',\n      textColor: 'text-red-900',\n      items: [\n        { key: 'accountsPayable', label: 'Accounts Payable', level: 1 },\n        { key: 'accruedExpenses', label: 'Accrued Expenses', level: 1 },\n        { key: 'shortTermDebt', label: 'Short-term Debt', level: 1 },\n        { key: 'currentPortionLongTermDebt', label: 'Current Portion of Long-term Debt', level: 1 },\n        { key: 'otherCurrentLiabilities', label: 'Other Current Liabilities', level: 1 },\n        { key: 'totalCurrentLiabilities', label: 'Total Current Liabilities', level: 0, formula: true, bold: true }\n      ]\n    },\n    nonCurrentLiabilities: {\n      title: 'Non-Current Liabilities',\n      color: 'bg-orange-50 border-orange-300',\n      headerBg: 'bg-orange-600',\n      textColor: 'text-orange-900',\n      items: [\n        { key: 'longTermDebt', label: 'Long-term Debt', level: 1 },\n        { key: 'deferredTaxLiabilities', label: 'Deferred Tax Liabilities', level: 1 },\n        { key: 'otherNonCurrentLiabilities', label: 'Other Non-Current Liabilities', level: 1 },\n        { key: 'totalNonCurrentLiabilities', label: 'Total Non-Current Liabilities', level: 0, formula: true, bold: true }\n      ]\n    },\n    totalLiabilities: {\n      title: 'Total Liabilities',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'totalLiabilities', label: 'Total Liabilities', level: 0, formula: true, bold: true }\n      ]\n    },\n    equity: {\n      title: 'Shareholders\\' Equity',\n      color: 'bg-purple-50 border-purple-300',\n      headerBg: 'bg-purple-600',\n      textColor: 'text-purple-900',\n      items: [\n        { key: 'commonStock', label: 'Common Stock', level: 1 },\n        { key: 'retainedEarnings', label: 'Retained Earnings', level: 1 },\n        { key: 'otherEquity', label: 'Other Comprehensive Income', level: 1 },\n        { key: 'totalEquity', label: 'Total Shareholders\\' Equity', level: 0, formula: true, bold: true }\n      ]\n    },\n    totalLiabilitiesEquity: {\n      title: 'Total Liabilities and Equity',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'totalLiabilitiesEquity', label: 'Total Liabilities and Shareholders\\' Equity', level: 0, formula: true, bold: true }\n      ]\n    }\n  };\n\n  // Cash Flow Template Structure\n  const cashFlowTemplate = {\n    operatingActivities: {\n      title: 'Operating Activities',\n      color: 'bg-emerald-50 border-emerald-300',\n      headerBg: 'bg-emerald-600',\n      textColor: 'text-emerald-900',\n      items: [\n        { key: 'netIncome', label: 'Net Income', level: 1 },\n        { key: 'depreciation', label: 'Depreciation and Amortization', level: 1 },\n        { key: 'receivablesChange', label: 'Change in Accounts Receivable', level: 1 },\n        { key: 'inventoryChange', label: 'Change in Inventory', level: 1 },\n        { key: 'payablesChange', label: 'Change in Accounts Payable', level: 1 },\n        { key: 'otherOperatingChanges', label: 'Other Operating Changes', level: 1 },\n        { key: 'netCashFromOperating', label: 'Net Cash from Operating Activities', level: 0, formula: true, bold: true }\n      ]\n    },\n    investingActivities: {\n      title: 'Investing Activities',\n      color: 'bg-blue-50 border-blue-300',\n      headerBg: 'bg-blue-600',\n      textColor: 'text-blue-900',\n      items: [\n        { key: 'capex', label: 'Capital Expenditures', level: 1 },\n        { key: 'acquisitions', label: 'Acquisitions', level: 1 },\n        { key: 'assetSales', label: 'Asset Sales', level: 1 },\n        { key: 'otherInvestingActivities', label: 'Other Investing Activities', level: 1 },\n        { key: 'netCashFromInvesting', label: 'Net Cash from Investing Activities', level: 0, formula: true, bold: true }\n      ]\n    },\n    financingActivities: {\n      title: 'Financing Activities',\n      color: 'bg-purple-50 border-purple-300',\n      headerBg: 'bg-purple-600',\n      textColor: 'text-purple-900',\n      items: [\n        { key: 'debtIssuance', label: 'Debt Issuance', level: 1 },\n        { key: 'debtRepayment', label: 'Debt Repayment', level: 1 },\n        { key: 'equityIssuance', label: 'Equity Issuance', level: 1 },\n        { key: 'dividends', label: 'Dividends Paid', level: 1 },\n        { key: 'otherFinancingActivities', label: 'Other Financing Activities', level: 1 },\n        { key: 'netCashFromFinancing', label: 'Net Cash from Financing Activities', level: 0, formula: true, bold: true }\n      ]\n    },\n    netCashFlow: {\n      title: 'Net Cash Flow',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'netCashFlow', label: 'Net Change in Cash', level: 0, formula: true, bold: true },\n        { key: 'beginningCash', label: 'Cash at Beginning of Period', level: 1 },\n        { key: 'endingCash', label: 'Cash at End of Period', level: 0, formula: true, bold: true }\n      ]\n    }\n  };\n\n  const currentTemplate = getCurrentTemplate();\n\n  const toggleSection = (section) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n\n  const handleCellClick = (rowKey, periodIndex, isAdjusted = false) => {\n    setEditingCell({ rowKey, periodIndex, isAdjusted });\n    let currentValue = '';\n\n    if (isAdjusted) {\n      currentValue = adjustedValues[rowKey] || '';\n    } else {\n      currentValue = data.statements.incomeStatement[rowKey]?.[periodIndex] || '';\n    }\n\n    setCellValue(currentValue.toString());\n  };\n\n  const handleCellBlur = () => {\n    if (editingCell) {\n      const { rowKey, periodIndex, isAdjusted } = editingCell;\n      const newValue = parseFloat(cellValue) || 0;\n\n      if (isAdjusted) {\n        // Update adjusted values\n        const newAdjustedValues = {\n          ...adjustedValues,\n          [rowKey]: newValue\n        };\n        setAdjustedValues(newAdjustedValues);\n        if (onAdjustedValuesChange) {\n          onAdjustedValuesChange(newAdjustedValues);\n        }\n      } else {\n        // Update original data\n        const newData = { ...data };\n        if (!newData.statements.incomeStatement[rowKey]) {\n          newData.statements.incomeStatement[rowKey] = {};\n        }\n        newData.statements.incomeStatement[rowKey][periodIndex] = newValue;\n        onDataChange(newData);\n      }\n\n      setEditingCell(null);\n      setCellValue('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleCellBlur();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      setEditingCell(null);\n      setCellValue('');\n    } else if (e.key === 'Tab') {\n      e.preventDefault();\n      handleCellBlur();\n      // Could implement tab navigation to next cell here\n    }\n  };\n\n  // Input validation for numeric values\n  const validateNumericInput = (value) => {\n    // Allow negative numbers, decimals, and empty strings\n    const numericRegex = /^-?\\d*\\.?\\d*$/;\n    return numericRegex.test(value) || value === '';\n  };\n\n  const formatNumber = (value) => {\n    if (!value && value !== 0) return '';\n\n    // Convert to number if it's a string\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    if (isNaN(numValue)) return '';\n\n    // Format based on magnitude for better readability\n    const absValue = Math.abs(numValue);\n    let formattedValue;\n\n    if (absValue >= 1000000) {\n      // Millions\n      formattedValue = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 1,\n        maximumFractionDigits: 1\n      }).format(numValue / 1000000);\n      formattedValue += 'M';\n    } else if (absValue >= 1000) {\n      // Thousands\n      formattedValue = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      }).format(numValue);\n    } else {\n      // Less than 1000\n      formattedValue = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }).format(numValue);\n    }\n\n    return formattedValue;\n  };\n\n  const addNewRow = () => {\n    const newRowLabel = prompt('Enter row label:');\n    if (newRowLabel) {\n      const newData = { ...data };\n      // Add to template structure (this could be enhanced to persist custom rows)\n      onDataChange(newData);\n    }\n  };\n\n  const addPeriod = () => {\n    const newPeriodLabel = prompt('Enter period label (e.g., \"Year 5\"):');\n    if (newPeriodLabel) {\n      const newData = { ...data };\n      newData.periods = [...newData.periods, newPeriodLabel];\n      onDataChange(newData);\n    }\n  };\n\n  useEffect(() => {\n    if (editingCell && inputRef.current) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, [editingCell]);\n\n  const renderRow = (item) => {\n    const { key, label, level, formula, bold } = item;\n\n    // Enhanced spacing and visual hierarchy\n    const indentClass = level === 1 ? 'pl-8' : level === 2 ? 'pl-12' : 'pl-4';\n    const textWeight = bold ? 'font-bold' : level === 0 ? 'font-semibold' : 'font-medium';\n    const textSize = level === 0 ? 'text-sm' : 'text-sm';\n    const textColor = level === 0 ? 'text-slate-900' : 'text-slate-700';\n    const rowBg = level === 0 ? 'bg-slate-50/70' : 'bg-white';\n    const borderColor = level === 0 ? 'border-slate-200' : 'border-slate-100';\n\n    return (\n      <tr key={key} className={`${rowBg} border-b ${borderColor} hover:bg-slate-50 transition-all duration-150 group`}>\n        {/* Account Name Column */}\n        <td className={`px-6 py-4 ${indentClass} ${textWeight} ${textSize} ${textColor}`}>\n          <div className=\"flex items-center gap-3\">\n            {level === 0 && (\n              <div className=\"w-1.5 h-4 bg-gradient-to-b from-blue-500 to-blue-600 rounded-full flex-shrink-0 shadow-sm\" />\n            )}\n            <span className=\"leading-tight\">{label}</span>\n            {formula && (\n              <div className=\"flex items-center gap-1\">\n                <Calculator size={14} className=\"text-blue-500/80 flex-shrink-0\" />\n                <span className=\"text-xs text-blue-600 font-medium px-1.5 py-0.5 bg-blue-50 rounded-md\">AUTO</span>\n              </div>\n            )}\n          </div>\n        </td>\n\n        {/* Units Column */}\n        <td className=\"px-4 py-4 text-center\">\n          <span className=\"text-xs font-medium text-slate-500 uppercase tracking-wide bg-slate-100 px-2 py-1 rounded-md\">\n            $ 000s\n          </span>\n        </td>\n\n        {/* Period Columns */}\n        {data.periods.map((_, periodIndex) => (\n          <td key={periodIndex} className=\"px-4 py-4 text-right\">\n            {editingCell?.rowKey === key && editingCell?.periodIndex === periodIndex && !editingCell?.isAdjusted ? (\n              <div className=\"relative\">\n                <input\n                  ref={inputRef}\n                  type=\"text\"\n                  value={cellValue}\n                  onChange={(e) => {\n                    const newValue = e.target.value;\n                    if (validateNumericInput(newValue)) {\n                      setCellValue(newValue);\n                    }\n                  }}\n                  onBlur={handleCellBlur}\n                  onKeyDown={handleKeyPress}\n                  className=\"w-full px-3 py-2.5 bg-white border-2 border-blue-400 rounded-lg text-slate-900 text-right font-mono text-sm focus:outline-none focus:ring-4 focus:ring-blue-100 focus:border-blue-500 shadow-lg\"\n                  placeholder=\"0.00\"\n                />\n                <div className=\"absolute -top-2 -right-2 flex gap-1\">\n                  <button\n                    onClick={handleCellBlur}\n                    className=\"w-5 h-5 bg-emerald-500 hover:bg-emerald-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                  >\n                    ✓\n                  </button>\n                  <button\n                    onClick={() => {\n                      setEditingCell(null);\n                      setCellValue('');\n                    }}\n                    className=\"w-5 h-5 bg-red-500 hover:bg-red-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                  >\n                    ×\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <div\n                onClick={() => !formula && handleCellClick(key, periodIndex)}\n                className={`px-3 py-2.5 rounded-lg font-mono text-sm transition-all duration-200 min-h-[40px] flex items-center justify-end ${\n                  formula\n                    ? 'bg-gradient-to-r from-blue-50 to-blue-100 text-blue-800 font-semibold border border-blue-200 shadow-sm'\n                    : 'hover:bg-slate-100 text-slate-800 cursor-pointer border border-transparent hover:border-slate-200 hover:shadow-sm group-hover:bg-slate-50'\n                }`}\n              >\n                <span className={formula ? 'text-blue-900' : 'text-slate-700'}>\n                  {formatNumber(data.statements.incomeStatement[key]?.[periodIndex]) || '—'}\n                </span>\n                {!formula && (\n                  <Edit2 size={12} className=\"ml-2 opacity-0 group-hover:opacity-40 text-slate-400 transition-opacity\" />\n                )}\n              </div>\n            )}\n          </td>\n        ))}\n\n        {/* Adjusted Column */}\n        <td className=\"px-4 py-4 text-right bg-gradient-to-r from-amber-50 to-yellow-50 border-l-2 border-amber-300\">\n          {editingCell?.rowKey === key && editingCell?.isAdjusted ? (\n            <div className=\"relative\">\n              <input\n                ref={inputRef}\n                type=\"text\"\n                value={cellValue}\n                onChange={(e) => {\n                  const newValue = e.target.value;\n                  if (validateNumericInput(newValue)) {\n                    setCellValue(newValue);\n                  }\n                }}\n                onBlur={handleCellBlur}\n                onKeyDown={handleKeyPress}\n                className=\"w-full px-3 py-2.5 bg-white border-2 border-amber-400 rounded-lg text-slate-900 text-right font-mono text-sm focus:outline-none focus:ring-4 focus:ring-amber-100 focus:border-amber-500 shadow-lg\"\n                placeholder=\"0.00\"\n              />\n              <div className=\"absolute -top-2 -right-2 flex gap-1\">\n                <button\n                  onClick={handleCellBlur}\n                  className=\"w-5 h-5 bg-emerald-500 hover:bg-emerald-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                >\n                  ✓\n                </button>\n                <button\n                  onClick={() => {\n                    setEditingCell(null);\n                    setCellValue('');\n                  }}\n                  className=\"w-5 h-5 bg-red-500 hover:bg-red-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                >\n                  ×\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div\n              onClick={() => !formula && handleCellClick(key, null, true)}\n              className={`px-3 py-2.5 rounded-lg font-mono text-sm transition-all duration-200 min-h-[40px] flex items-center justify-end ${\n                formula\n                  ? 'bg-gradient-to-r from-amber-100 to-yellow-100 text-amber-800 font-semibold border border-amber-300 shadow-sm'\n                  : 'hover:bg-amber-100 text-slate-800 cursor-pointer border border-transparent hover:border-amber-300 hover:shadow-sm'\n              }`}\n            >\n              <span className={formula ? 'text-amber-900' : 'text-slate-700'}>\n                {formatNumber(adjustedValues[key] || 0) || '—'}\n              </span>\n              {!formula && (\n                <Edit2 size={12} className=\"ml-2 opacity-0 group-hover:opacity-40 text-amber-500 transition-opacity\" />\n              )}\n            </div>\n          )}\n        </td>\n\n        {/* Type Column */}\n        <td className=\"px-4 py-4 text-center\">\n          <span\n            className={`inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium ${\n              formula\n                ? 'bg-blue-100 text-blue-800 border border-blue-200'\n                : 'bg-slate-100 text-slate-700 border border-slate-200'\n            }`}\n          >\n            {formula ? (\n              <>\n                <Calculator size={10} className=\"mr-1\" />\n                Auto\n              </>\n            ) : (\n              <>\n                <Edit2 size={10} className=\"mr-1\" />\n                Manual\n              </>\n            )}\n          </span>\n        </td>\n      </tr>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 pb-8\">\n      {/* Header Section */}\n      <div className=\"bg-white border-b border-slate-200 shadow-sm\">\n        <div className=\"max-w-full mx-auto px-8 py-6\">\n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <TrendingUp className=\"w-6 h-6 text-blue-600\" />\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-slate-900\">Financial Spreadsheet</h1>\n                <p className=\"text-sm text-slate-600 mt-1\">Professional financial modeling workspace</p>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-3\">\n              <button\n                onClick={addPeriod}\n                className=\"px-4 py-2.5 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center gap-2 transition-all duration-200 shadow-sm hover:shadow-md font-medium\"\n              >\n                <Plus size={16} />\n                Add Period\n              </button>\n              <select\n                value={activeStatement}\n                onChange={(e) => setActiveStatement(e.target.value)}\n                className=\"px-4 py-2.5 bg-white border border-slate-300 rounded-lg text-slate-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 font-medium shadow-sm\"\n              >\n                <option value=\"incomeStatement\">Income Statement</option>\n                <option value=\"balanceSheet\">Balance Sheet</option>\n                <option value=\"cashFlow\">Cash Flow Statement</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-full mx-auto p-8\">\n        <div className=\"bg-white rounded-xl border border-slate-200 shadow-lg\">\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              {/* Enhanced Table Header */}\n              <thead className=\"bg-gradient-to-r from-slate-800 to-slate-900 text-white\">\n                <tr>\n                  <th className=\"min-w-[320px] px-6 py-4 text-left text-sm font-semibold tracking-wider\">\n                    <div className=\"flex items-center gap-2\">\n                      <FileText size={16} className=\"text-slate-300\" />\n                      Account Description\n                    </div>\n                  </th>\n                  <th className=\"w-20 px-4 py-4 text-center text-sm font-semibold\">Units</th>\n                  {data.periods.map((period, index) => (\n                    <th key={index} className=\"min-w-[140px] px-4 py-4 text-center text-sm font-semibold\">\n                      <div className=\"flex flex-col\">\n                        <span>{period}</span>\n                        <span className=\"text-xs text-slate-300 font-normal\">Actual</span>\n                      </div>\n                    </th>\n                  ))}\n                  <th className=\"min-w-[140px] px-4 py-4 text-center text-sm font-semibold bg-gradient-to-r from-amber-600 to-yellow-600 border-l-2 border-amber-400\">\n                    <div className=\"flex flex-col\">\n                      <span>Adjusted</span>\n                      <span className=\"text-xs text-amber-100 font-normal\">Modified</span>\n                    </div>\n                  </th>\n                  <th className=\"w-28 px-4 py-4 text-center text-sm font-semibold\">\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <Calculator size={14} />\n                      Type\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody className=\"divide-y divide-slate-100\">\n                {Object.entries(currentTemplate).map(([sectionKey, section]) => (\n                  <React.Fragment key={sectionKey}>\n                    {/* Enhanced Section Header */}\n                    <tr className={`${section.headerBg || 'bg-slate-600'} border-b-2 border-slate-300`}>\n                      <td colSpan={data.periods.length + 4} className=\"py-4 px-6\">\n                        <div className=\"flex items-center gap-3 text-white w-full text-left group\">\n                          <button\n                            onClick={() => toggleSection(sectionKey)}\n                            className=\"flex items-center gap-3 text-white hover:text-slate-200 transition-colors flex-1\"\n                          >\n                            <div className=\"flex items-center justify-center w-6 h-6 rounded-full bg-white/20 group-hover:bg-white/30 transition-colors\">\n                              {expandedSections[sectionKey] ?\n                                <ChevronDown size={14} /> :\n                                <ChevronRight size={14} />\n                              }\n                            </div>\n                            <span className=\"font-bold text-lg\">{section.title}</span>\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              addNewRow();\n                            }}\n                            className=\"p-1.5 hover:bg-white/20 rounded-lg transition-colors opacity-0 group-hover:opacity-100\"\n                            title=\"Add custom row\"\n                          >\n                            <Plus size={16} />\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n\n                    {/* Section Rows */}\n                    {expandedSections[sectionKey] && section.items.map(item =>\n                      renderRow(item)\n                    )}\n                  </React.Fragment>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Enhanced Instructions Panel */}\n        <div className=\"mt-8 grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <div className=\"bg-white rounded-xl p-6 border border-slate-200 shadow-sm\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <Calculator className=\"w-5 h-5 text-blue-600\" />\n              </div>\n              <h3 className=\"font-bold text-slate-900\">How to Use</h3>\n            </div>\n            <ul className=\"space-y-2 text-sm text-slate-700\">\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Click any editable cell to modify values with enhanced input controls\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Use Enter to save changes or Escape to cancel editing\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Expand/collapse sections using the arrow controls\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Formula cells automatically calculate based on inputs\n              </li>\n            </ul>\n          </div>\n\n          <div className=\"bg-white rounded-xl p-6 border border-slate-200 shadow-sm\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <div className=\"p-2 bg-green-100 rounded-lg\">\n                <TrendingUp className=\"w-5 h-5 text-green-600\" />\n              </div>\n              <h3 className=\"font-bold text-slate-900\">Professional Features</h3>\n            </div>\n            <ul className=\"space-y-2 text-sm text-slate-700\">\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Color-coded sections for easy visual navigation\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Adjusted column for scenario analysis and modifications\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Professional number formatting with proper alignment\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Enhanced editing experience with save/cancel controls\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FinancialSpreadsheet;\n","import { motion } from 'framer-motion';\nimport { TrendingUp, BarChart3, PieChart as PieChartIcon, Activity, Eye, EyeOff } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\nimport {\n  LineChart, Line, BarChart, Bar, AreaChart, Area, PieChart, Pie, Cell,\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\nconst DataVisualization = ({\n  dcfData,\n  sensitivityData,\n  scenarioData,\n  formatCurrency,\n  formatPercent\n}) => {\n  const [activeChart, setActiveChart] = useState('dcf-waterfall');\n  const [showDetails, setShowDetails] = useState(true);\n\n  // Chart configuration\n  const chartTypes = [\n    { id: 'dcf-waterfall', label: 'DCF Waterfall', icon: BarChart3, category: 'dcf' },\n    { id: 'cashflow-trend', label: 'Cash Flow Trend', icon: TrendingUp, category: 'dcf' },\n    { id: 'sensitivity-tornado', label: 'Sensitivity Tornado', icon: Activity, category: 'sensitivity' },\n    { id: 'scenario-distribution', label: 'Scenario Distribution', icon: PieChartIcon, category: 'scenario' },\n    { id: 'valuation-bridge', label: 'Valuation Bridge', icon: BarChart3, category: 'combined' }\n  ];\n\n  // Prepare DCF Waterfall Data\n  const dcfWaterfallData = useMemo(() => {\n    if (!dcfData?.years) return [];\n\n    let cumulativeValue = 0;\n    const data = [];\n\n    // Add each year's contribution\n    dcfData.years.forEach((year, index) => {\n      const startValue = cumulativeValue;\n      cumulativeValue += year.presentValue;\n\n      data.push({\n        name: `Year ${year.year}`,\n        value: year.presentValue,\n        cumulative: cumulativeValue,\n        start: startValue,\n        freeCashFlow: year.freeCashFlow,\n        category: 'operations'\n      });\n    });\n\n    // Add terminal value\n    const terminalStart = cumulativeValue;\n    cumulativeValue += dcfData.presentValueTerminal;\n\n    data.push({\n      name: 'Terminal Value',\n      value: dcfData.presentValueTerminal,\n      cumulative: cumulativeValue,\n      start: terminalStart,\n      category: 'terminal'\n    });\n\n    return data;\n  }, [dcfData]);\n\n  // Prepare Cash Flow Trend Data\n  const cashFlowTrendData = useMemo(() => {\n    if (!dcfData?.years) return [];\n\n    return dcfData.years.map((year, index) => ({\n      year: `Year ${year.year}`,\n      freeCashFlow: year.freeCashFlow,\n      presentValue: year.presentValue,\n      revenue: year.revenue,\n      operatingIncome: year.operatingIncome,\n      workingCapitalChange: year.workingCapitalChange,\n      capex: Math.abs(year.capex)\n    }));\n  }, [dcfData]);\n\n  // Prepare Sensitivity Tornado Data\n  const sensitivityTornadoData = useMemo(() => {\n    if (!sensitivityData) return [];\n\n    return Object.entries(sensitivityData).map(([variable, result]) => {\n      const maxUpside = Math.max(...result.dataPoints.map(d => d.changeFromBase));\n      const maxDownside = Math.min(...result.dataPoints.map(d => d.changeFromBase));\n\n      return {\n        variable: result.definition.name,\n        upside: maxUpside,\n        downside: Math.abs(maxDownside),\n        range: maxUpside - maxDownside\n      };\n    }).sort((a, b) => b.range - a.range);\n  }, [sensitivityData]);\n\n  // Prepare Scenario Distribution Data\n  const scenarioDistributionData = useMemo(() => {\n    if (!scenarioData?.length) return [];\n\n    return scenarioData.map((scenario, index) => ({\n      name: scenario.name,\n      value: scenario.enterpriseValue,\n      probability: scenario.probability,\n      weightedValue: scenario.weightedValue,\n      fill: `hsl(${(index * 137.5) % 360}, 70%, 50%)`\n    }));\n  }, [scenarioData]);\n\n  // Custom tooltip for different chart types\n  const CustomTooltip = ({ active, payload, label, chartType }) => {\n    if (!active || !payload || !payload.length) return null;\n\n    const formatValue = (value, key) => {\n      if (key?.includes('Percent') || key?.includes('Rate')) {\n        return formatPercent(value);\n      }\n      return formatCurrency(value);\n    };\n\n    return (\n      <div className=\"bg-white p-3 border rounded-lg shadow-lg\">\n        <p className=\"font-medium text-gray-800\">{label}</p>\n        {payload.map((entry, index) => (\n          <p key={index} style={{ color: entry.color }} className=\"text-sm\">\n            {`${entry.dataKey}: ${formatValue(entry.value, entry.dataKey)}`}\n          </p>\n        ))}\n      </div>\n    );\n  };\n\n  // DCF Waterfall Chart\n  const DCFWaterfallChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <BarChart data={dcfWaterfallData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis tickFormatter={(value) => formatCurrency(value)} />\n        <Tooltip content={<CustomTooltip chartType=\"waterfall\" />} />\n        <Bar dataKey=\"value\" fill=\"#3B82F6\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n\n  // Cash Flow Trend Chart\n  const CashFlowTrendChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <LineChart data={cashFlowTrendData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"year\" />\n        <YAxis tickFormatter={(value) => formatCurrency(value)} />\n        <Tooltip content={<CustomTooltip chartType=\"trend\" />} />\n        <Legend />\n        <Line\n          type=\"monotone\" dataKey=\"freeCashFlow\" stroke=\"#10B981\"\n          strokeWidth={3} name=\"Free Cash Flow\"\n        />\n        <Line\n          type=\"monotone\" dataKey=\"presentValue\" stroke=\"#3B82F6\"\n          strokeWidth={2} name=\"Present Value\"\n        />\n        <Line\n          type=\"monotone\" dataKey=\"revenue\" stroke=\"#8B5CF6\"\n          strokeWidth={2} name=\"Revenue\"\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n\n  // Sensitivity Tornado Chart\n  const SensitivityTornadoChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <BarChart\n        data={sensitivityTornadoData}\n        layout=\"horizontal\"\n        margin={{ top: 20, right: 30, left: 100, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" tickFormatter={(value) => `${value.toFixed(1)}%`} />\n        <YAxis type=\"category\" dataKey=\"variable\" />\n        <Tooltip\n          formatter={(value, name) => [`${value.toFixed(1)}%`, name]}\n          labelFormatter={(label) => `Variable: ${label}`}\n        />\n        <Bar dataKey=\"upside\" fill=\"#10B981\" name=\"Upside Impact\" />\n        <Bar dataKey=\"downside\" fill=\"#EF4444\" name=\"Downside Impact\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n\n  // Scenario Distribution Chart\n  const ScenarioDistributionChart = () => (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <PieChart>\n          <Pie\n            data={scenarioDistributionData}\n            cx=\"50%\"\n            cy=\"50%\"\n            outerRadius={80}\n            dataKey=\"probability\"\n            label={({ name, probability }) => `${name}: ${probability}%`}\n          >\n            {scenarioDistributionData.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.fill} />\n            ))}\n          </Pie>\n          <Tooltip formatter={(value) => `${value}%`} />\n        </PieChart>\n      </ResponsiveContainer>\n\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart data={scenarioDistributionData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis tickFormatter={(value) => formatCurrency(value)} />\n          <Tooltip content={<CustomTooltip chartType=\"scenario\" />} />\n          <Bar dataKey=\"value\" fill=\"#8B5CF6\" name=\"Enterprise Value\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n\n  // Valuation Bridge Chart\n  const ValuationBridgeChart = () => {\n    const bridgeData = [\n      { name: 'PV of Operations', value: dcfData?.cumulativePV || 0, type: 'positive' },\n      { name: 'PV of Terminal', value: dcfData?.presentValueTerminal || 0, type: 'positive' },\n      { name: 'Enterprise Value', value: dcfData?.enterpriseValue || 0, type: 'total' }\n    ];\n\n    return (\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart data={bridgeData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis tickFormatter={(value) => formatCurrency(value)} />\n          <Tooltip content={<CustomTooltip chartType=\"bridge\" />} />\n          <Bar\n            dataKey=\"value\"\n            fill={(entry) => entry.type === 'total' ? '#1F2937' : '#3B82F6'}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const renderChart = () => {\n    switch (activeChart) {\n      case 'dcf-waterfall':\n        return <DCFWaterfallChart />;\n      case 'cashflow-trend':\n        return <CashFlowTrendChart />;\n      case 'sensitivity-tornado':\n        return <SensitivityTornadoChart />;\n      case 'scenario-distribution':\n        return <ScenarioDistributionChart />;\n      case 'valuation-bridge':\n        return <ValuationBridgeChart />;\n      default:\n        return <DCFWaterfallChart />;\n    }\n  };\n\n  const getChartDescription = () => {\n    switch (activeChart) {\n      case 'dcf-waterfall':\n        return 'Shows the contribution of each year\\'s cash flows and terminal value to total enterprise value.';\n      case 'cashflow-trend':\n        return 'Displays the trend of free cash flows, present values, and key financial metrics over time.';\n      case 'sensitivity-tornado':\n        return 'Illustrates how changes in key variables impact enterprise value, ranked by sensitivity.';\n      case 'scenario-distribution':\n        return 'Compares different scenarios by probability weights and resulting enterprise values.';\n      case 'valuation-bridge':\n        return 'Breaks down enterprise value into operating value and terminal value components.';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <BarChart3 size={20} />\n            Data Visualization\n          </h3>\n          <p className=\"text-gray-600\">\n            Interactive charts and graphs to visualize valuation results and sensitivity analysis.\n          </p>\n        </div>\n        <button\n          onClick={() => setShowDetails(!showDetails)}\n          className={`px-3 py-2 rounded-lg text-sm transition-colors flex items-center gap-2 ${\n            showDetails ? 'bg-blue-100 text-blue-700' : 'bg-gray-100 text-gray-700'\n          }`}\n        >\n          {showDetails ? <EyeOff size={14} /> : <Eye size={14} />}\n          {showDetails ? 'Hide Details' : 'Show Details'}\n        </button>\n      </div>\n\n      {/* Chart Type Selector */}\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-3\">\n        {chartTypes.map((chart) => {\n          const Icon = chart.icon;\n          return (\n            <motion.button\n              key={chart.id}\n              onClick={() => setActiveChart(chart.id)}\n              className={`p-3 rounded-lg border-2 transition-all text-center ${\n                activeChart === chart.id\n                  ? 'border-blue-500 bg-blue-50 text-blue-700'\n                  : 'border-gray-200 bg-white hover:border-gray-300 text-gray-700'\n              }`}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <Icon size={20} className=\"mx-auto mb-2\" />\n              <div className=\"text-xs font-medium\">{chart.label}</div>\n            </motion.button>\n          );\n        })}\n      </div>\n\n      {/* Chart Container */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h4 className=\"font-semibold text-lg\">\n            {chartTypes.find(c => c.id === activeChart)?.label}\n          </h4>\n          {showDetails && (\n            <span className=\"text-sm text-gray-500\">\n              {getChartDescription()}\n            </span>\n          )}\n        </div>\n\n        <div className=\"min-h-[400px]\">\n          {renderChart()}\n        </div>\n      </div>\n\n      {/* Chart Insights */}\n      {showDetails && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">Key Insights</h4>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {activeChart === 'dcf-waterfall' && (\n              <>\n                <div className=\"p-4 bg-blue-50 rounded-lg\">\n                  <div className=\"text-sm text-blue-600 font-medium\">Operations Contribution</div>\n                  <div className=\"text-lg font-bold text-blue-800\">\n                    {dcfData?.cumulativePV ?\n                      `${((dcfData.cumulativePV / dcfData.enterpriseValue) * 100).toFixed(1)}%` :\n                      'N/A'\n                    }\n                  </div>\n                </div>\n                <div className=\"p-4 bg-purple-50 rounded-lg\">\n                  <div className=\"text-sm text-purple-600 font-medium\">Terminal Contribution</div>\n                  <div className=\"text-lg font-bold text-purple-800\">\n                    {dcfData?.presentValueTerminal ?\n                      `${((dcfData.presentValueTerminal / dcfData.enterpriseValue) * 100).toFixed(1)}%` :\n                      'N/A'\n                    }\n                  </div>\n                </div>\n                <div className=\"p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-sm text-green-600 font-medium\">Avg. Annual FCF</div>\n                  <div className=\"text-lg font-bold text-green-800\">\n                    {dcfData?.freeCashFlows ?\n                      formatCurrency(dcfData.freeCashFlows.reduce((a, b) => a + b, 0) / dcfData.freeCashFlows.length) :\n                      'N/A'\n                    }\n                  </div>\n                </div>\n              </>\n            )}\n\n            {activeChart === 'sensitivity-tornado' && sensitivityTornadoData.length > 0 && (\n              <>\n                <div className=\"p-4 bg-red-50 rounded-lg\">\n                  <div className=\"text-sm text-red-600 font-medium\">Highest Risk Variable</div>\n                  <div className=\"text-lg font-bold text-red-800\">\n                    {sensitivityTornadoData[0]?.variable}\n                  </div>\n                  <div className=\"text-sm text-red-600\">\n                    ±{sensitivityTornadoData[0]?.range.toFixed(1)}% impact\n                  </div>\n                </div>\n                <div className=\"p-4 bg-yellow-50 rounded-lg\">\n                  <div className=\"text-sm text-yellow-600 font-medium\">Medium Risk Variables</div>\n                  <div className=\"text-lg font-bold text-yellow-800\">\n                    {sensitivityTornadoData.slice(1, 3).map(v => v.variable).join(', ')}\n                  </div>\n                </div>\n                <div className=\"p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-sm text-green-600 font-medium\">Lowest Risk Variable</div>\n                  <div className=\"text-lg font-bold text-green-800\">\n                    {sensitivityTornadoData[sensitivityTornadoData.length - 1]?.variable}\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataVisualization;\n","import { motion } from 'framer-motion';\nimport { Calculator, TrendingUp, DollarSign, Percent, Info, BookOpen, Settings } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst WACCCalculator = ({ modelInputs, onModelInputChange, formatPercent }) => {\n  const [showDetails, setShowDetails] = useState(true);\n  const [activeTab, setActiveTab] = useState('inputs');\n\n  // WACC calculation inputs with defaults\n  const waccInputs = modelInputs.dcf.wacc || {\n    // Cost of Equity (CAPM)\n    riskFreeRate: 4.5,\n    marketRiskPremium: 6.0,\n    beta: 1.2,\n    smallCompanyPremium: 3.0,\n    companySpecificRisk: 2.0,\n\n    // Cost of Debt\n    debtInterestRate: 6.5,\n    taxRate: 25,\n\n    // Capital Structure\n    marketValueEquity: 100000,\n    marketValueDebt: 30000,\n\n    // Alternative methods\n    buildUpMethod: {\n      riskFreeRate: 4.5,\n      equityRiskPremium: 6.0,\n      sizeRiskPremium: 3.0,\n      industryRiskPremium: 2.0,\n      companySpecificRisk: 2.0\n    },\n\n    // Industry benchmarks\n    industryWACC: 10.5,\n    industryBeta: 1.1,\n    industryDebtEquityRatio: 0.3\n  };\n\n  // Calculate WACC components\n  const waccCalculation = useMemo(() => {\n    const inputs = { ...waccInputs, ...modelInputs.dcf.wacc };\n\n    // Cost of Equity - CAPM Method\n    const costOfEquityCAPM = inputs.riskFreeRate +\n                            (inputs.beta * inputs.marketRiskPremium) +\n                            inputs.smallCompanyPremium +\n                            inputs.companySpecificRisk;\n\n    // Cost of Equity - Build-up Method\n    const costOfEquityBuildUp = inputs.buildUpMethod.riskFreeRate +\n                               inputs.buildUpMethod.equityRiskPremium +\n                               inputs.buildUpMethod.sizeRiskPremium +\n                               inputs.buildUpMethod.industryRiskPremium +\n                               inputs.buildUpMethod.companySpecificRisk;\n\n    // Cost of Debt (after-tax)\n    const costOfDebtAfterTax = inputs.debtInterestRate * (1 - inputs.taxRate / 100);\n\n    // Capital structure weights\n    const totalCapital = inputs.marketValueEquity + inputs.marketValueDebt;\n    const equityWeight = inputs.marketValueEquity / totalCapital;\n    const debtWeight = inputs.marketValueDebt / totalCapital;\n\n    // WACC calculations\n    const waccCAPM = (costOfEquityCAPM / 100 * equityWeight) +\n                     (costOfDebtAfterTax / 100 * debtWeight);\n\n    const waccBuildUp = (costOfEquityBuildUp / 100 * equityWeight) +\n                        (costOfDebtAfterTax / 100 * debtWeight);\n\n    // Risk-adjusted WACC (average of methods)\n    const finalWACC = (waccCAPM + waccBuildUp) / 2;\n\n    return {\n      costOfEquityCAPM,\n      costOfEquityBuildUp,\n      costOfDebtAfterTax,\n      equityWeight: equityWeight * 100,\n      debtWeight: debtWeight * 100,\n      waccCAPM: waccCAPM * 100,\n      waccBuildUp: waccBuildUp * 100,\n      finalWACC: finalWACC * 100,\n      totalCapital,\n      debtToEquityRatio: inputs.marketValueDebt / inputs.marketValueEquity\n    };\n  }, [waccInputs, modelInputs.dcf.wacc]);\n\n  const updateWACCInput = (field, value) => {\n    const updatedWACC = {\n      ...waccInputs,\n      ...modelInputs.dcf.wacc,\n      [field]: parseFloat(value) || 0\n    };\n    onModelInputChange('dcf', 'wacc', updatedWACC);\n  };\n\n  const updateBuildUpInput = (field, value) => {\n    const updatedWACC = {\n      ...waccInputs,\n      ...modelInputs.dcf.wacc,\n      buildUpMethod: {\n        ...waccInputs.buildUpMethod,\n        ...modelInputs.dcf.wacc?.buildUpMethod,\n        [field]: parseFloat(value) || 0\n      }\n    };\n    onModelInputChange('dcf', 'wacc', updatedWACC);\n  };\n\n  const applyWACCToDCF = (waccValue) => {\n    onModelInputChange('dcf', 'discountRate', waccValue);\n  };\n\n  const tabs = [\n    { id: 'inputs', label: 'Inputs', icon: Settings },\n    { id: 'calculation', label: 'Calculation', icon: Calculator },\n    { id: 'benchmarks', label: 'Benchmarks', icon: TrendingUp }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Calculator size={20} />\n            WACC Calculator\n          </h3>\n          <p className=\"text-gray-600\">\n            Professional weighted average cost of capital calculation using CAPM and build-up methods.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => applyWACCToDCF(waccCalculation.finalWACC)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\"\n          >\n            Apply to DCF\n          </button>\n          <button\n            onClick={() => setShowDetails(!showDetails)}\n            className={`px-3 py-2 rounded-lg text-sm transition-colors ${\n              showDetails ? 'bg-gray-200 text-gray-700' : 'bg-gray-100 text-gray-600'\n            }`}\n          >\n            {showDetails ? 'Hide Details' : 'Show Details'}\n          </button>\n        </div>\n      </div>\n\n      {/* Key Results */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <motion.div\n          className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Percent size={20} className=\"text-blue-600\" />\n            <span className=\"text-xs text-blue-600 font-medium\">FINAL WACC</span>\n          </div>\n          <div className=\"text-2xl font-bold text-blue-800\">\n            {formatPercent(waccCalculation.finalWACC)}\n          </div>\n          <div className=\"text-sm text-blue-600 mt-1\">\n            Risk-adjusted average\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <TrendingUp size={20} className=\"text-green-600\" />\n            <span className=\"text-xs text-green-600 font-medium\">COST OF EQUITY</span>\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {formatPercent(waccCalculation.costOfEquityCAPM)}\n          </div>\n          <div className=\"text-sm text-green-600 mt-1\">\n            CAPM method\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <DollarSign size={20} className=\"text-purple-600\" />\n            <span className=\"text-xs text-purple-600 font-medium\">COST OF DEBT</span>\n          </div>\n          <div className=\"text-2xl font-bold text-purple-800\">\n            {formatPercent(waccCalculation.costOfDebtAfterTax)}\n          </div>\n          <div className=\"text-sm text-purple-600 mt-1\">\n            After-tax\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Info size={20} className=\"text-orange-600\" />\n            <span className=\"text-xs text-orange-600 font-medium\">DEBT/EQUITY</span>\n          </div>\n          <div className=\"text-2xl font-bold text-orange-800\">\n            {waccCalculation.debtToEquityRatio.toFixed(2)}x\n          </div>\n          <div className=\"text-sm text-orange-600 mt-1\">\n            Capital structure\n          </div>\n        </motion.div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg\">\n        {tabs.map((tab) => {\n          const Icon = tab.icon;\n          return (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`flex-1 flex items-center justify-center gap-2 py-2 px-4 rounded-md transition-all ${\n                activeTab === tab.id\n                  ? 'bg-white text-blue-600 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <Icon size={16} />\n              {tab.label}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        {activeTab === 'inputs' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">WACC Input Parameters</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* Cost of Equity - CAPM */}\n              <div>\n                <h5 className=\"font-medium mb-4 text-blue-800\">Cost of Equity (CAPM Method)</h5>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Risk-Free Rate (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.riskFreeRate || waccInputs.riskFreeRate}\n                      onChange={(e) => updateWACCInput('riskFreeRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">10-year Treasury rate</span>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Risk Premium (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.marketRiskPremium || waccInputs.marketRiskPremium}\n                      onChange={(e) => updateWACCInput('marketRiskPremium', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Expected market return - risk-free rate</span>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Beta (β)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.beta || waccInputs.beta}\n                      onChange={(e) => updateWACCInput('beta', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Systematic risk relative to market</span>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Small Company Premium (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.smallCompanyPremium || waccInputs.smallCompanyPremium}\n                      onChange={(e) => updateWACCInput('smallCompanyPremium', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Size-related risk premium</span>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Company-Specific Risk (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.companySpecificRisk || waccInputs.companySpecificRisk}\n                      onChange={(e) => updateWACCInput('companySpecificRisk', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Unsystematic risk premium</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Capital Structure & Debt */}\n              <div>\n                <h5 className=\"font-medium mb-4 text-purple-800\">Capital Structure & Cost of Debt</h5>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Value of Equity ($000s)\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={modelInputs.dcf.wacc?.marketValueEquity || waccInputs.marketValueEquity}\n                      onChange={(e) => updateWACCInput('marketValueEquity', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Value of Debt ($000s)\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={modelInputs.dcf.wacc?.marketValueDebt || waccInputs.marketValueDebt}\n                      onChange={(e) => updateWACCInput('marketValueDebt', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Pre-Tax Cost of Debt (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.debtInterestRate || waccInputs.debtInterestRate}\n                      onChange={(e) => updateWACCInput('debtInterestRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Interest rate on debt</span>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Tax Rate (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.taxRate || modelInputs.dcf.taxRate}\n                      onChange={(e) => updateWACCInput('taxRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Corporate tax rate</span>\n                  </div>\n\n                  {/* Capital Structure Summary */}\n                  <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n                    <h6 className=\"font-medium mb-2\">Capital Structure</h6>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Equity Weight:</span>\n                        <span className=\"font-medium\">{formatPercent(waccCalculation.equityWeight)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Debt Weight:</span>\n                        <span className=\"font-medium\">{formatPercent(waccCalculation.debtWeight)}</span>\n                      </div>\n                      <div className=\"flex justify-between border-t pt-2\">\n                        <span>Total Capital:</span>\n                        <span className=\"font-medium\">${(waccCalculation.totalCapital / 1000).toFixed(0)}M</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'calculation' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">WACC Calculation Breakdown</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* CAPM Method */}\n              <div className=\"p-6 bg-blue-50 rounded-lg border border-blue-200\">\n                <h5 className=\"font-medium mb-4 text-blue-800\">CAPM Method</h5>\n                <div className=\"space-y-3 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Risk-Free Rate:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.riskFreeRate || waccInputs.riskFreeRate)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta × Market Risk Premium:</span>\n                    <span className=\"font-medium\">\n                      {formatPercent((modelInputs.dcf.wacc?.beta || waccInputs.beta) * (modelInputs.dcf.wacc?.marketRiskPremium || waccInputs.marketRiskPremium))}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Small Company Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.smallCompanyPremium || waccInputs.smallCompanyPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Company-Specific Risk:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.companySpecificRisk || waccInputs.companySpecificRisk)}</span>\n                  </div>\n                  <div className=\"flex justify-between border-t pt-2 font-semibold\">\n                    <span>Cost of Equity (CAPM):</span>\n                    <span>{formatPercent(waccCalculation.costOfEquityCAPM)}</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Build-up Method */}\n              <div className=\"p-6 bg-green-50 rounded-lg border border-green-200\">\n                <h5 className=\"font-medium mb-4 text-green-800\">Build-up Method</h5>\n                <div className=\"space-y-3 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Risk-Free Rate:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.riskFreeRate)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Equity Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.equityRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Size Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.sizeRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Industry Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.industryRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Company-Specific Risk:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.companySpecificRisk)}</span>\n                  </div>\n                  <div className=\"flex justify-between border-t pt-2 font-semibold\">\n                    <span>Cost of Equity (Build-up):</span>\n                    <span>{formatPercent(waccCalculation.costOfEquityBuildUp)}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Final WACC Calculation */}\n            <div className=\"p-6 bg-gray-50 rounded-lg border\">\n              <h5 className=\"font-medium mb-4\">Final WACC Calculation</h5>\n              <div className=\"space-y-4 text-sm\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <div className=\"flex justify-between mb-2\">\n                      <span>WACC (CAPM Method):</span>\n                      <span className=\"font-medium\">{formatPercent(waccCalculation.waccCAPM)}</span>\n                    </div>\n                    <div className=\"text-xs text-gray-600\">\n                      [{formatPercent(waccCalculation.costOfEquityCAPM)} × {formatPercent(waccCalculation.equityWeight)}] +\n                      [{formatPercent(waccCalculation.costOfDebtAfterTax)} × {formatPercent(waccCalculation.debtWeight)}]\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"flex justify-between mb-2\">\n                      <span>WACC (Build-up Method):</span>\n                      <span className=\"font-medium\">{formatPercent(waccCalculation.waccBuildUp)}</span>\n                    </div>\n                    <div className=\"text-xs text-gray-600\">\n                      [{formatPercent(waccCalculation.costOfEquityBuildUp)} × {formatPercent(waccCalculation.equityWeight)}] +\n                      [{formatPercent(waccCalculation.costOfDebtAfterTax)} × {formatPercent(waccCalculation.debtWeight)}]\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"border-t pt-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-lg font-semibold\">Risk-Adjusted WACC:</span>\n                    <span className=\"text-2xl font-bold text-blue-600\">{formatPercent(waccCalculation.finalWACC)}</span>\n                  </div>\n                  <div className=\"text-xs text-gray-600 mt-1\">\n                    Average of CAPM and Build-up methods\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'benchmarks' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">Industry Benchmarks & Validation</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              <div className=\"p-4 bg-blue-50 rounded-lg\">\n                <h6 className=\"font-medium text-blue-800 mb-2\">Your Company</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC:</span>\n                    <span className=\"font-semibold\">{formatPercent(waccCalculation.finalWACC)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta:</span>\n                    <span className=\"font-semibold\">{(modelInputs.dcf.wacc?.beta || waccInputs.beta).toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>D/E Ratio:</span>\n                    <span className=\"font-semibold\">{waccCalculation.debtToEquityRatio.toFixed(2)}x</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"p-4 bg-green-50 rounded-lg\">\n                <h6 className=\"font-medium text-green-800 mb-2\">Industry Average</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC:</span>\n                    <span className=\"font-semibold\">{formatPercent(waccInputs.industryWACC)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta:</span>\n                    <span className=\"font-semibold\">{waccInputs.industryBeta.toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>D/E Ratio:</span>\n                    <span className=\"font-semibold\">{waccInputs.industryDebtEquityRatio.toFixed(2)}x</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"p-4 bg-yellow-50 rounded-lg\">\n                <h6 className=\"font-medium text-yellow-800 mb-2\">Variance</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC Diff:</span>\n                    <span\n                      className={`font-semibold ${\n                        waccCalculation.finalWACC > waccInputs.industryWACC ? 'text-red-600' : 'text-green-600'\n                      }`}\n                    >\n                      {waccCalculation.finalWACC > waccInputs.industryWACC ? '+' : ''}\n                      {formatPercent(waccCalculation.finalWACC - waccInputs.industryWACC)}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta Diff:</span>\n                    <span\n                      className={`font-semibold ${\n                        (modelInputs.dcf.wacc?.beta || waccInputs.beta) > waccInputs.industryBeta ? 'text-red-600' : 'text-green-600'\n                      }`}\n                    >\n                      {(modelInputs.dcf.wacc?.beta || waccInputs.beta) > waccInputs.industryBeta ? '+' : ''}\n                      {((modelInputs.dcf.wacc?.beta || waccInputs.beta) - waccInputs.industryBeta).toFixed(2)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Validation Notes */}\n            <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n              <div className=\"flex items-start gap-2\">\n                <BookOpen size={16} className=\"text-blue-600 mt-0.5\" />\n                <div>\n                  <h6 className=\"font-medium text-blue-800 mb-2\">Validation Guidelines</h6>\n                  <ul className=\"text-sm text-blue-700 space-y-1\">\n                    <li>• WACC should be within ±2% of industry average for similar companies</li>\n                    <li>• Beta should reflect business risk relative to market (typically 0.8-1.5 for most companies)</li>\n                    <li>• Cost of equity should exceed risk-free rate by at least 4-6% for private companies</li>\n                    <li>• Debt/equity ratio should align with industry norms and company strategy</li>\n                    <li>• Consider economic conditions and company-specific factors</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WACCCalculator;\n","import { motion } from 'framer-motion';\nimport { Calculator, TrendingUp, DollarSign, BarChart3, Info, Settings } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nimport DataVisualization from './DataVisualization';\nimport WACCCalculator from './WACCCalculator';\n\nconst AdvancedDCF = ({ data, modelInputs, onModelInputChange, formatCurrency, formatPercent }) => {\n  const [_showDetails, _setShowDetails] = useState(false);\n  const [_showAssumptions, _setShowAssumptions] = useState(true);\n  const [activeTab, setActiveTab] = useState('results');\n\n  // Enhanced DCF calculation with working capital\n  const advancedDCFResults = useMemo(() => {\n    const { discountRate, terminalGrowthRate, projectionYears, taxRate } = modelInputs.dcf;\n    const statements = data.statements;\n\n    // Working capital assumptions (if not provided, use defaults)\n    const workingCapitalAssumptions = modelInputs.dcf.workingCapital || {\n      receivablesDays: 45,\n      inventoryDays: 60,\n      payablesDays: 30,\n      receivablesGrowth: 2, // % of revenue\n      inventoryGrowth: 1.5, // % of revenue\n      payablesGrowth: 1.8 // % of revenue\n    };\n\n    // Capex assumptions\n    const capexAssumptions = modelInputs.dcf.capex || {\n      capexAsPercentOfRevenue: 3.5,\n      depreciationRate: 7, // years\n      maintenanceCapex: 2.0 // % of revenue\n    };\n\n    const results = {\n      years: [],\n      freeCashFlows: [],\n      presentValues: [],\n      workingCapitalChanges: [],\n      capexAmounts: [],\n      unleveredFreeCashFlow: [],\n      cumulativePV: 0,\n      terminalValue: 0,\n      presentValueTerminal: 0,\n      enterpriseValue: 0,\n      equityValue: 0,\n      impliedShare: 0\n    };\n\n    // Base year revenue for calculations\n    const baseRevenue = statements.incomeStatement.totalRevenue?.[0] || 100000;\n\n    for (let year = 1; year <= projectionYears; year++) {\n      const yearData = {\n        year,\n        revenue: statements.incomeStatement.totalRevenue?.[year] || 0,\n        operatingIncome: statements.incomeStatement.operatingIncome?.[year] || 0,\n        nopat: 0, // Net Operating Profit After Tax\n        workingCapitalChange: 0,\n        capex: 0,\n        depreciation: 0,\n        freeCashFlow: 0,\n        presentValue: 0\n      };\n\n      // NOPAT calculation\n      yearData.nopat = yearData.operatingIncome * (1 - taxRate / 100);\n\n      // Working capital calculation\n      const currentRevenue = yearData.revenue;\n      const previousRevenue = year > 1 ? (statements.incomeStatement.totalRevenue?.[year - 1] || 0) : baseRevenue;\n\n      // Calculate working capital components\n      const currentReceivables = (currentRevenue * workingCapitalAssumptions.receivablesDays) / 365;\n      const currentInventory = (currentRevenue * workingCapitalAssumptions.inventoryDays) / 365;\n      const currentPayables = (currentRevenue * workingCapitalAssumptions.payablesDays) / 365;\n\n      const previousReceivables = (previousRevenue * workingCapitalAssumptions.receivablesDays) / 365;\n      const previousInventory = (previousRevenue * workingCapitalAssumptions.inventoryDays) / 365;\n      const previousPayables = (previousRevenue * workingCapitalAssumptions.payablesDays) / 365;\n\n      const receivablesChange = currentReceivables - previousReceivables;\n      const inventoryChange = currentInventory - previousInventory;\n      const payablesChange = currentPayables - previousPayables;\n\n      // Working capital change (increase is negative for cash flow)\n      yearData.workingCapitalChange = -(receivablesChange + inventoryChange - payablesChange);\n\n      // Capex calculation\n      yearData.capex = -(currentRevenue * capexAssumptions.capexAsPercentOfRevenue / 100);\n\n      // Depreciation (simplified - based on capex and depreciation rate)\n      yearData.depreciation = Math.abs(yearData.capex) / capexAssumptions.depreciationRate;\n\n      // Free Cash Flow = NOPAT + Depreciation - Capex - Change in Working Capital\n      yearData.freeCashFlow = yearData.nopat + yearData.depreciation + yearData.capex + yearData.workingCapitalChange;\n\n      // Present Value\n      const discountFactor = Math.pow(1 + discountRate / 100, year);\n      yearData.presentValue = yearData.freeCashFlow / discountFactor;\n\n      results.years.push(yearData);\n      results.freeCashFlows.push(yearData.freeCashFlow);\n      results.presentValues.push(yearData.presentValue);\n      results.workingCapitalChanges.push(yearData.workingCapitalChange);\n      results.capexAmounts.push(yearData.capex);\n      results.unleveredFreeCashFlow.push(yearData.freeCashFlow);\n      results.cumulativePV += yearData.presentValue;\n    }\n\n    // Terminal Value calculation\n    const finalYearFCF = results.years[results.years.length - 1]?.freeCashFlow || 0;\n    const terminalFCF = finalYearFCF * (1 + terminalGrowthRate / 100);\n    results.terminalValue = terminalFCF / ((discountRate - terminalGrowthRate) / 100);\n\n    const terminalDiscountFactor = Math.pow(1 + discountRate / 100, projectionYears);\n    results.presentValueTerminal = results.terminalValue / terminalDiscountFactor;\n\n    // Enterprise Value\n    results.enterpriseValue = results.cumulativePV + results.presentValueTerminal;\n\n    // Simplified equity value (would subtract net debt in reality)\n    const netDebt = 0; // Could be calculated from balance sheet\n    results.equityValue = results.enterpriseValue - netDebt;\n\n    // Implied share price (assuming shares outstanding)\n    const sharesOutstanding = modelInputs.dcf.sharesOutstanding || 1000; // thousands\n    results.impliedShare = results.equityValue / sharesOutstanding;\n\n    return results;\n  }, [data, modelInputs]);\n\n  const updateDCFAssumption = (category, field, value) => {\n    const updatedDCF = {\n      ...modelInputs.dcf,\n      [category]: {\n        ...modelInputs.dcf[category],\n        [field]: parseFloat(value) || 0\n      }\n    };\n    onModelInputChange('dcf', category, updatedDCF[category]);\n  };\n\n  const updateBasicAssumption = (field, value) => {\n    onModelInputChange('dcf', field, parseFloat(value) || 0);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Calculator size={20} />\n            Advanced DCF Valuation\n          </h3>\n          <p className=\"text-gray-600\">\n            Professional-grade DCF with working capital analysis, capex modeling, and detailed cash flow projections.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          {['results', 'charts', 'wacc', 'assumptions'].map((tab) => (\n            <button\n              key={tab}\n              onClick={() => setActiveTab(tab)}\n              className={`px-3 py-2 rounded-lg text-sm transition-colors flex items-center gap-1 ${\n                activeTab === tab ? 'bg-blue-100 text-blue-700' : 'bg-gray-100 text-gray-700'\n              }`}\n            >\n              {tab === 'results' && <DollarSign size={14} />}\n              {tab === 'charts' && <BarChart3 size={14} />}\n              {tab === 'wacc' && <Calculator size={14} />}\n              {tab === 'assumptions' && <Settings size={14} />}\n              {tab.charAt(0).toUpperCase() + tab.slice(1)}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Tab Content */}\n      {activeTab === 'results' && (\n        <>\n          {/* Key Results */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <motion.div\n              className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <DollarSign size={20} className=\"text-green-600\" />\n                <span className=\"text-xs text-green-600 font-medium\">ENTERPRISE VALUE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-green-800\">\n                {formatCurrency(advancedDCFResults.enterpriseValue)}\n              </div>\n              <div className=\"text-sm text-green-600 mt-1\">\n                PV Operations: {formatCurrency(advancedDCFResults.cumulativePV)}\n              </div>\n            </motion.div>\n\n            <motion.div\n              className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <TrendingUp size={20} className=\"text-blue-600\" />\n                <span className=\"text-xs text-blue-600 font-medium\">EQUITY VALUE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-blue-800\">\n                {formatCurrency(advancedDCFResults.equityValue)}\n              </div>\n              <div className=\"text-sm text-blue-600 mt-1\">\n                Per Share: {formatCurrency(advancedDCFResults.impliedShare)}\n              </div>\n            </motion.div>\n\n            <motion.div\n              className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <BarChart3 size={20} className=\"text-purple-600\" />\n                <span className=\"text-xs text-purple-600 font-medium\">TERMINAL VALUE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-purple-800\">\n                {formatCurrency(advancedDCFResults.terminalValue)}\n              </div>\n              <div className=\"text-sm text-purple-600 mt-1\">\n                PV: {formatCurrency(advancedDCFResults.presentValueTerminal)}\n              </div>\n            </motion.div>\n\n            <motion.div\n              className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <Info size={20} className=\"text-orange-600\" />\n                <span className=\"text-xs text-orange-600 font-medium\">IMPLIED MULTIPLE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-orange-800\">\n                {(advancedDCFResults.enterpriseValue / (data.statements.incomeStatement.totalRevenue?.[1] || 1)).toFixed(1)}x\n              </div>\n              <div className=\"text-sm text-orange-600 mt-1\">\n                EV/Revenue (Year 1)\n              </div>\n            </motion.div>\n          </div>\n\n          {/* Detailed Cash Flow Analysis */}\n          <div className=\"bg-white rounded-lg border p-6\">\n            <h4 className=\"font-semibold text-lg mb-4\">Detailed Cash Flow Analysis</h4>\n\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full text-sm\">\n                <thead>\n                  <tr className=\"border-b bg-gray-50\">\n                    <th className=\"text-left p-3 font-medium\">Year</th>\n                    <th className=\"text-right p-3 font-medium\">Revenue</th>\n                    <th className=\"text-right p-3 font-medium\">Operating Income</th>\n                    <th className=\"text-right p-3 font-medium\">NOPAT</th>\n                    <th className=\"text-right p-3 font-medium\">Depreciation</th>\n                    <th className=\"text-right p-3 font-medium\">Capex</th>\n                    <th className=\"text-right p-3 font-medium\">ΔWorking Capital</th>\n                    <th className=\"text-right p-3 font-medium\">Free Cash Flow</th>\n                    <th className=\"text-right p-3 font-medium\">Present Value</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {advancedDCFResults.years.map((yearData, index) => (\n                    <tr key={index} className=\"border-b hover:bg-gray-50\">\n                      <td className=\"p-3 font-medium\">{yearData.year}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(yearData.revenue)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(yearData.operatingIncome)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(yearData.nopat)}</td>\n                      <td className=\"p-3 text-right text-green-600\">+{formatCurrency(yearData.depreciation)}</td>\n                      <td className=\"p-3 text-right text-red-600\">{formatCurrency(yearData.capex)}</td>\n                      <td className={`p-3 text-right ${yearData.workingCapitalChange >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {yearData.workingCapitalChange >= 0 ? '+' : ''}{formatCurrency(yearData.workingCapitalChange)}\n                      </td>\n                      <td className=\"p-3 text-right font-medium\">{formatCurrency(yearData.freeCashFlow)}</td>\n                      <td className=\"p-3 text-right font-medium\">{formatCurrency(yearData.presentValue)}</td>\n                    </tr>\n                  ))}\n\n                  {/* Terminal Value Row */}\n                  <tr className=\"border-b-2 border-gray-300 bg-blue-50\">\n                    <td className=\"p-3 font-bold\">Terminal</td>\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3 text-right font-bold\">{formatCurrency(advancedDCFResults.terminalValue)}</td>\n                    <td className=\"p-3 text-right font-bold\">{formatCurrency(advancedDCFResults.presentValueTerminal)}</td>\n                  </tr>\n\n                  {/* Total Row */}\n                  <tr className=\"bg-gray-100 font-bold\">\n                    <td className=\"p-3\">TOTAL</td>\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3 text-right text-lg\">{formatCurrency(advancedDCFResults.enterpriseValue)}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </>\n      )}\n\n      {/* Charts Tab */}\n      {activeTab === 'charts' && (\n        <DataVisualization\n          dcfData={advancedDCFResults}\n          sensitivityData={null}\n          scenarioData={null}\n          formatCurrency={formatCurrency}\n          formatPercent={formatPercent}\n        />\n      )}\n\n      {/* WACC Calculator Tab */}\n      {activeTab === 'wacc' && (\n        <WACCCalculator\n          modelInputs={modelInputs}\n          onModelInputChange={onModelInputChange}\n          formatPercent={formatPercent}\n        />\n      )}\n\n      {/* Assumptions Tab */}\n      {activeTab === 'assumptions' && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">Model Assumptions</h4>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Basic DCF Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Core Assumptions</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Discount Rate (WACC) %\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.discountRate}\n                    onChange={(e) => updateBasicAssumption('discountRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Terminal Growth Rate %\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.terminalGrowthRate}\n                    onChange={(e) => updateBasicAssumption('terminalGrowthRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Tax Rate %\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.taxRate}\n                    onChange={(e) => updateBasicAssumption('taxRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Working Capital Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Working Capital</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Receivables (Days)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.receivablesDays || 45}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'receivablesDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Inventory (Days)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.inventoryDays || 60}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'inventoryDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Payables (Days)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.payablesDays || 30}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'payablesDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Capex Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Capital Expenditure</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Capex (% of Revenue)\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.capex?.capexAsPercentOfRevenue || 3.5}\n                    onChange={(e) => updateDCFAssumption('capex', 'capexAsPercentOfRevenue', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Depreciation Period (Years)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.capex?.depreciationRate || 7}\n                    onChange={(e) => updateDCFAssumption('capex', 'depreciationRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Shares Outstanding (000s)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.sharesOutstanding || 1000}\n                    onChange={(e) => updateBasicAssumption('sharesOutstanding', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdvancedDCF;\n","import { motion } from 'framer-motion';\nimport { Users, TrendingUp, BarChart3, Plus, Search, DollarSign, Target, Filter } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst ComparableAnalysis = ({ data, formatCurrency, formatPercent: _formatPercent }) => {\n  const [activeTab, setActiveTab] = useState('multiples');\n  const [selectedMultiple, setSelectedMultiple] = useState('ev_revenue');\n  const [showAddComp, setShowAddComp] = useState(false);\n\n  // Sample comparable companies data (in practice, this would come from external API)\n  const [comparableCompanies, setComparableCompanies] = useState([\n    {\n      id: 1,\n      name: 'MedSpa Corp',\n      ticker: 'MSPA',\n      marketCap: 450000, // $450M\n      enterpriseValue: 520000, // $520M\n      revenue: 180000, // $180M\n      ebitda: 45000, // $45M\n      netIncome: 28000, // $28M\n      employees: 1200,\n      founded: 2015,\n      geography: 'US',\n      businessModel: 'B2C Medical Spa Chain'\n    },\n    {\n      id: 2,\n      name: 'Wellness Holdings',\n      ticker: 'WELL',\n      marketCap: 680000,\n      enterpriseValue: 750000,\n      revenue: 220000,\n      ebitda: 55000,\n      netIncome: 35000,\n      employees: 1800,\n      founded: 2012,\n      geography: 'US',\n      businessModel: 'Integrated Wellness Platform'\n    },\n    {\n      id: 3,\n      name: 'Aesthetic Solutions Inc',\n      ticker: 'AEST',\n      marketCap: 320000,\n      enterpriseValue: 380000,\n      revenue: 125000,\n      ebitda: 32000,\n      netIncome: 18000,\n      employees: 850,\n      founded: 2018,\n      geography: 'US',\n      businessModel: 'Medical Device & Services'\n    },\n    {\n      id: 4,\n      name: 'Premium Health Group',\n      ticker: 'PHG',\n      marketCap: 920000,\n      enterpriseValue: 1050000,\n      revenue: 310000,\n      ebitda: 78000,\n      netIncome: 48000,\n      employees: 2500,\n      founded: 2010,\n      geography: 'US',\n      businessModel: 'Premium Healthcare Services'\n    }\n  ]);\n\n  // Calculate multiples for comparable companies\n  const comparableMultiples = useMemo(() => {\n    return comparableCompanies.map(comp => ({\n      ...comp,\n      multiples: {\n        ev_revenue: comp.enterpriseValue / comp.revenue,\n        ev_ebitda: comp.enterpriseValue / comp.ebitda,\n        pe_ratio: comp.marketCap / comp.netIncome,\n        revenue_per_employee: comp.revenue / comp.employees,\n        market_cap_revenue: comp.marketCap / comp.revenue\n      }\n    }));\n  }, [comparableCompanies]);\n\n  // Calculate market statistics\n  const marketStats = useMemo(() => {\n    const multiples = comparableMultiples.map(c => c.multiples);\n\n    const calculateStats = (values) => ({\n      mean: values.reduce((a, b) => a + b, 0) / values.length,\n      median: values.sort((a, b) => a - b)[Math.floor(values.length / 2)],\n      min: Math.min(...values),\n      max: Math.max(...values),\n      p25: values.sort((a, b) => a - b)[Math.floor(values.length * 0.25)],\n      p75: values.sort((a, b) => a - b)[Math.floor(values.length * 0.75)]\n    });\n\n    return {\n      ev_revenue: calculateStats(multiples.map(m => m.ev_revenue)),\n      ev_ebitda: calculateStats(multiples.map(m => m.ev_ebitda)),\n      pe_ratio: calculateStats(multiples.map(m => m.pe_ratio)),\n      revenue_per_employee: calculateStats(multiples.map(m => m.revenue_per_employee)),\n      market_cap_revenue: calculateStats(multiples.map(m => m.market_cap_revenue))\n    };\n  }, [comparableMultiples]);\n\n  // Calculate implied valuation for target company\n  const impliedValuation = useMemo(() => {\n    const targetRevenue = data.statements.incomeStatement.totalRevenue?.[1] || 100000; // Year 1 revenue\n    const targetEBITDA = (data.statements.incomeStatement.operatingIncome?.[1] || 50000) * 1.15; // Approx EBITDA\n    const targetNetIncome = (data.statements.incomeStatement.operatingIncome?.[1] || 50000) * 0.7; // Approx net income\n\n    return {\n      ev_revenue: {\n        mean: targetRevenue * marketStats.ev_revenue.mean,\n        median: targetRevenue * marketStats.ev_revenue.median,\n        p25: targetRevenue * marketStats.ev_revenue.p25,\n        p75: targetRevenue * marketStats.ev_revenue.p75\n      },\n      ev_ebitda: {\n        mean: targetEBITDA * marketStats.ev_ebitda.mean,\n        median: targetEBITDA * marketStats.ev_ebitda.median,\n        p25: targetEBITDA * marketStats.ev_ebitda.p25,\n        p75: targetEBITDA * marketStats.ev_ebitda.p75\n      },\n      pe_ratio: {\n        mean: targetNetIncome * marketStats.pe_ratio.mean,\n        median: targetNetIncome * marketStats.pe_ratio.median,\n        p25: targetNetIncome * marketStats.pe_ratio.p25,\n        p75: targetNetIncome * marketStats.pe_ratio.p75\n      }\n    };\n  }, [data, marketStats]);\n\n  const multipleDefinitions = {\n    ev_revenue: { name: 'EV/Revenue', description: 'Enterprise Value / Annual Revenue' },\n    ev_ebitda: { name: 'EV/EBITDA', description: 'Enterprise Value / EBITDA' },\n    pe_ratio: { name: 'P/E Ratio', description: 'Market Cap / Net Income' },\n    revenue_per_employee: { name: 'Revenue/Employee', description: 'Revenue per Employee' },\n    market_cap_revenue: { name: 'Market Cap/Revenue', description: 'Market Cap / Revenue' }\n  };\n\n  const addComparableCompany = (companyData) => {\n    const newCompany = {\n      id: Date.now(),\n      ...companyData,\n      marketCap: parseFloat(companyData.marketCap) || 0,\n      enterpriseValue: parseFloat(companyData.enterpriseValue) || 0,\n      revenue: parseFloat(companyData.revenue) || 0,\n      ebitda: parseFloat(companyData.ebitda) || 0,\n      netIncome: parseFloat(companyData.netIncome) || 0,\n      employees: parseInt(companyData.employees) || 0,\n      founded: parseInt(companyData.founded) || new Date().getFullYear()\n    };\n    setComparableCompanies([...comparableCompanies, newCompany]);\n    setShowAddComp(false);\n  };\n\n  const removeComparable = (id) => {\n    setComparableCompanies(comparableCompanies.filter(comp => comp.id !== id));\n  };\n\n  const tabs = [\n    { id: 'multiples', label: 'Trading Multiples', icon: BarChart3 },\n    { id: 'analysis', label: 'Valuation Analysis', icon: Target },\n    { id: 'companies', label: 'Comparable Set', icon: Users }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Users size={20} />\n            Comparable Company Analysis\n          </h3>\n          <p className=\"text-gray-600\">\n            Market-based valuation using trading multiples from similar public companies.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => setShowAddComp(true)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2 text-sm\"\n          >\n            <Plus size={16} />\n            Add Comparable\n          </button>\n        </div>\n      </div>\n\n      {/* Key Results Summary */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <motion.div\n          className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <BarChart3 size={20} className=\"text-blue-600\" />\n            <span className=\"text-xs text-blue-600 font-medium\">EV/REVENUE</span>\n          </div>\n          <div className=\"text-2xl font-bold text-blue-800\">\n            {marketStats.ev_revenue.median.toFixed(1)}x\n          </div>\n          <div className=\"text-sm text-blue-600 mt-1\">\n            Median multiple\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <TrendingUp size={20} className=\"text-green-600\" />\n            <span className=\"text-xs text-green-600 font-medium\">IMPLIED VALUE</span>\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {formatCurrency(impliedValuation.ev_revenue.median)}\n          </div>\n          <div className=\"text-sm text-green-600 mt-1\">\n            EV/Revenue basis\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <DollarSign size={20} className=\"text-purple-600\" />\n            <span className=\"text-xs text-purple-600 font-medium\">VALUATION RANGE</span>\n          </div>\n          <div className=\"text-lg font-bold text-purple-800\">\n            {formatCurrency(impliedValuation.ev_revenue.p25)} - {formatCurrency(impliedValuation.ev_revenue.p75)}\n          </div>\n          <div className=\"text-sm text-purple-600 mt-1\">\n            25th - 75th percentile\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Users size={20} className=\"text-orange-600\" />\n            <span className=\"text-xs text-orange-600 font-medium\">PEER COUNT</span>\n          </div>\n          <div className=\"text-2xl font-bold text-orange-800\">\n            {comparableCompanies.length}\n          </div>\n          <div className=\"text-sm text-orange-600 mt-1\">\n            Comparable companies\n          </div>\n        </motion.div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg\">\n        {tabs.map((tab) => {\n          const Icon = tab.icon;\n          return (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`flex-1 flex items-center justify-center gap-2 py-2 px-4 rounded-md transition-all ${\n                activeTab === tab.id\n                  ? 'bg-white text-blue-600 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <Icon size={16} />\n              {tab.label}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        {activeTab === 'multiples' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h4 className=\"font-semibold text-lg\">Trading Multiples Analysis</h4>\n              <select\n                value={selectedMultiple}\n                onChange={(e) => setSelectedMultiple(e.target.value)}\n                className=\"px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                {Object.entries(multipleDefinitions).map(([key, def]) => (\n                  <option key={key} value={key}>{def.name}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full text-sm\">\n                <thead>\n                  <tr className=\"border-b bg-gray-50\">\n                    <th className=\"text-left p-3 font-medium\">Company</th>\n                    <th className=\"text-right p-3 font-medium\">Market Cap</th>\n                    <th className=\"text-right p-3 font-medium\">Enterprise Value</th>\n                    <th className=\"text-right p-3 font-medium\">Revenue</th>\n                    <th className=\"text-right p-3 font-medium\">EV/Revenue</th>\n                    <th className=\"text-right p-3 font-medium\">EV/EBITDA</th>\n                    <th className=\"text-right p-3 font-medium\">P/E Ratio</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {comparableMultiples.map((comp, _index) => (\n                    <tr key={comp.id} className=\"border-b hover:bg-gray-50\">\n                      <td className=\"p-3\">\n                        <div>\n                          <div className=\"font-medium\">{comp.name}</div>\n                          <div className=\"text-xs text-gray-500\">{comp.ticker}</div>\n                        </div>\n                      </td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.marketCap)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.enterpriseValue)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.revenue)}</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.ev_revenue.toFixed(1)}x</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.ev_ebitda.toFixed(1)}x</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.pe_ratio.toFixed(1)}x</td>\n                    </tr>\n                  ))}\n\n                  {/* Summary Statistics */}\n                  <tr className=\"border-t-2 border-gray-300 bg-blue-50 font-semibold\">\n                    <td className=\"p-3\">Market Statistics</td>\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3 text-right\">{marketStats.ev_revenue.median.toFixed(1)}x</td>\n                    <td className=\"p-3 text-right\">{marketStats.ev_ebitda.median.toFixed(1)}x</td>\n                    <td className=\"p-3 text-right\">{marketStats.pe_ratio.median.toFixed(1)}x</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            {/* Multiple Distribution Chart */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <div className=\"p-4 bg-gray-50 rounded-lg\">\n                <h6 className=\"font-medium mb-3\">Multiple Distribution</h6>\n                <div className=\"space-y-3\">\n                  {Object.entries(marketStats).slice(0, 3).map(([key, stats]) => (\n                    <div key={key}>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>{multipleDefinitions[key].name}</span>\n                        <span className=\"font-medium\">{stats.median.toFixed(1)}x</span>\n                      </div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                        <div\n                          className=\"bg-blue-500 h-2 rounded-full\"\n                          style={{\n                            width: `${((stats.median - stats.min) / (stats.max - stats.min)) * 100}%`\n                          }}\n                        />\n                      </div>\n                      <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                        <span>{stats.min.toFixed(1)}x</span>\n                        <span>{stats.max.toFixed(1)}x</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"p-4 bg-gray-50 rounded-lg\">\n                <h6 className=\"font-medium mb-3\">Key Statistics</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Companies Analyzed:</span>\n                    <span className=\"font-medium\">{comparableCompanies.length}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Median Market Cap:</span>\n                    <span className=\"font-medium\">{formatCurrency(comparableCompanies.sort((a, b) => a.marketCap - b.marketCap)[Math.floor(comparableCompanies.length / 2)]?.marketCap || 0)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Median Revenue:</span>\n                    <span className=\"font-medium\">{formatCurrency(comparableCompanies.sort((a, b) => a.revenue - b.revenue)[Math.floor(comparableCompanies.length / 2)]?.revenue || 0)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Avg Founded Year:</span>\n                    <span className=\"font-medium\">{Math.round(comparableCompanies.reduce((sum, c) => sum + c.founded, 0) / comparableCompanies.length)}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'analysis' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">Valuation Analysis</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Implied Valuation */}\n              <div>\n                <h5 className=\"font-medium mb-4\">Implied Valuation by Multiple</h5>\n                <div className=\"space-y-4\">\n                  {Object.entries(impliedValuation).map(([multiple, values]) => (\n                    <div key={multiple} className=\"p-4 border rounded-lg\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"font-medium\">{multipleDefinitions[multiple].name}</span>\n                        <span className=\"text-sm text-gray-500\">\n                          {marketStats[multiple].median.toFixed(1)}x median\n                        </span>\n                      </div>\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span>25th Percentile:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.p25)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Median:</span>\n                          <span className=\"font-bold text-blue-600\">{formatCurrency(values.median)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>75th Percentile:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.p75)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Mean:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.mean)}</span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Valuation Summary */}\n              <div>\n                <h5 className=\"font-medium mb-4\">Valuation Summary</h5>\n                <div className=\"p-6 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-200\">\n                  <div className=\"space-y-4\">\n                    <div>\n                      <div className=\"text-sm text-blue-600 font-medium mb-1\">Recommended Range</div>\n                      <div className=\"text-2xl font-bold text-blue-800\">\n                        {formatCurrency((impliedValuation.ev_revenue.p25 + impliedValuation.ev_ebitda.p25) / 2)} -\n                        {formatCurrency((impliedValuation.ev_revenue.p75 + impliedValuation.ev_ebitda.p75) / 2)}\n                      </div>\n                      <div className=\"text-sm text-blue-600\">Blended 25th-75th percentile</div>\n                    </div>\n\n                    <div>\n                      <div className=\"text-sm text-blue-600 font-medium mb-1\">Midpoint Valuation</div>\n                      <div className=\"text-xl font-bold text-blue-800\">\n                        {formatCurrency((impliedValuation.ev_revenue.median + impliedValuation.ev_ebitda.median) / 2)}\n                      </div>\n                      <div className=\"text-sm text-blue-600\">Average of median multiples</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mt-4 p-4 bg-yellow-50 rounded-lg border border-yellow-200\">\n                  <div className=\"flex items-start gap-2\">\n                    <Target size={16} className=\"text-yellow-600 mt-0.5\" />\n                    <div>\n                      <h6 className=\"font-medium text-yellow-800 mb-1\">Valuation Considerations</h6>\n                      <ul className=\"text-sm text-yellow-700 space-y-1\">\n                        <li>• Consider company-specific growth and margin profiles</li>\n                        <li>• Adjust for differences in business model and scale</li>\n                        <li>• Factor in market conditions and sector trends</li>\n                        <li>• Apply appropriate discount for private company liquidity</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'companies' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h4 className=\"font-semibold text-lg\">Comparable Company Set</h4>\n              <div className=\"flex gap-2\">\n                <div className=\"relative\">\n                  <Search size={16} className=\"absolute left-3 top-3 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search companies...\"\n                    className=\"pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <button className=\"px-3 py-2 border rounded-lg hover:bg-gray-50 flex items-center gap-2\">\n                  <Filter size={16} />\n                  Filter\n                </button>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n              {comparableCompanies.map((comp) => (\n                <motion.div\n                  key={comp.id}\n                  className=\"border rounded-lg p-4 hover:shadow-lg transition-shadow\"\n                  whileHover={{ y: -2 }}\n                >\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <div>\n                      <h6 className=\"font-semibold text-gray-800\">{comp.name}</h6>\n                      <div className=\"text-sm text-gray-500\">{comp.ticker} • {comp.geography}</div>\n                    </div>\n                    <button\n                      onClick={() => removeComparable(comp.id)}\n                      className=\"text-red-500 hover:bg-red-50 p-1 rounded\"\n                    >\n                      ×\n                    </button>\n                  </div>\n\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span>Market Cap:</span>\n                      <span className=\"font-medium\">{formatCurrency(comp.marketCap)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Revenue:</span>\n                      <span className=\"font-medium\">{formatCurrency(comp.revenue)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>EV/Revenue:</span>\n                      <span className=\"font-medium\">{(comp.enterpriseValue / comp.revenue).toFixed(1)}x</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Founded:</span>\n                      <span className=\"font-medium\">{comp.founded}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"mt-3 pt-3 border-t\">\n                    <div className=\"text-xs text-gray-600\">{comp.businessModel}</div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Add Comparable Modal */}\n      {showAddComp && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h4 className=\"font-semibold text-lg mb-4\">Add Comparable Company</h4>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                const formData = new FormData(e.target);\n                addComparableCompany(Object.fromEntries(formData));\n              }}\n            >\n              <div className=\"space-y-4\">\n                <div>\n                  <label htmlFor=\"company-name\" className=\"block text-sm font-medium text-gray-700 mb-1\">Company Name</label>\n                  <input\n                    id=\"company-name\"\n                    name=\"name\" type=\"text\" required\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"ticker\" className=\"block text-sm font-medium text-gray-700 mb-1\">Ticker</label>\n                  <input\n                    id=\"ticker\"\n                    name=\"ticker\" type=\"text\" required\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Market Cap ($000s)</label>\n                    <input\n                      name=\"marketCap\" type=\"number\" required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Enterprise Value ($000s)</label>\n                    <input\n                      name=\"enterpriseValue\" type=\"number\" required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Revenue ($000s)</label>\n                    <input\n                      name=\"revenue\" type=\"number\" required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">EBITDA ($000s)</label>\n                    <input\n                      name=\"ebitda\" type=\"number\" required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Business Model</label>\n                  <input\n                    name=\"businessModel\" type=\"text\" required\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex gap-3 mt-6\">\n                <button type=\"submit\" className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\">\n                  Add Company\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => setShowAddComp(false)}\n                  className=\"flex-1 px-4 py-2 border rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ComparableAnalysis;\n","import { motion, AnimatePresence } from 'framer-motion';\nimport { BarChart3, TrendingUp, AlertTriangle, Play, Square, Settings, Download, FileText, Zap } from 'lucide-react';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { ComposedChart, Bar, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ScatterChart, Scatter, Cell, AreaChart, Area } from 'recharts';\n\nimport { monteCarloEngine } from '../../services/monteCarloEngine.js';\n\nconst MonteCarloSimulation = ({ data, onDataChange }) => {\n  const [activeTab, setActiveTab] = useState('setup');\n  const [simulationResults, setSimulationResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [simulationSettings, setSimulationSettings] = useState({\n    iterations: 10000,\n    confidenceLevel: 0.95,\n    randomSeed: null,\n    enableCorrelation: false\n  });\n\n  const [distributions, setDistributions] = useState({\n    revenueGrowthRate: {\n      type: 'normal',\n      parameters: { mean: 0.1, stdDev: 0.03 },\n      name: 'Revenue Growth Rate',\n      enabled: true\n    },\n    fcfMargin: {\n      type: 'triangular',\n      parameters: { min: 0.12, mode: 0.15, max: 0.18 },\n      name: 'FCF Margin',\n      enabled: true\n    },\n    wacc: {\n      type: 'normal',\n      parameters: { mean: 0.1, stdDev: 0.015 },\n      name: 'WACC',\n      enabled: true\n    },\n    terminalGrowthRate: {\n      type: 'uniform',\n      parameters: { min: 0.02, max: 0.03 },\n      name: 'Terminal Growth Rate',\n      enabled: true\n    }\n  });\n\n  const [correlationMatrix, setCorrelationMatrix] = useState([\n    [1.0, 0.3, -0.2, 0.1],\n    [0.3, 1.0, -0.4, 0.2],\n    [-0.2, -0.4, 1.0, -0.3],\n    [0.1, 0.2, -0.3, 1.0]\n  ]);\n\n  const distributionTypes = [\n    { value: 'normal', label: 'Normal', parameters: ['mean', 'stdDev'] },\n    { value: 'triangular', label: 'Triangular', parameters: ['min', 'mode', 'max'] },\n    { value: 'uniform', label: 'Uniform', parameters: ['min', 'max'] },\n    { value: 'lognormal', label: 'Log-Normal', parameters: ['mu', 'sigma'] },\n    { value: 'beta', label: 'Beta', parameters: ['alpha', 'beta'] }\n  ];\n\n  const runSimulation = useCallback(async() => {\n    try {\n      // Validate data and settings before starting simulation\n\n      setIsRunning(true);\n      setProgress(0);\n\n      const enabledDistributions = Object.fromEntries(\n        Object.entries(distributions).filter(([_, dist]) => dist.enabled)\n      );\n\n      if (Object.keys(enabledDistributions).length === 0) {\n        throw new Error('No distributions are enabled. Please enable at least one variable distribution to run the simulation.');\n      }\n\n      const options = {\n        iterations: simulationSettings.iterations,\n        confidenceLevel: simulationSettings.confidenceLevel,\n        randomSeed: simulationSettings.randomSeed,\n        correlationMatrix: simulationSettings.enableCorrelation ? correlationMatrix : null,\n        onProgress: setProgress\n      };\n\n      // Extract current revenue from actual data structure\n      const statements = data?.statements?.incomeStatement;\n      const latestIndex = data?.periods?.length - 1 || 2;\n      const currentRevenue = statements?.totalRevenue?.[latestIndex] || 1000000;\n      const currentOperatingIncome = statements?.operatingIncome?.[latestIndex] || 150000;\n\n      const baseInputs = {\n        currentRevenue: currentRevenue * 1000, // Convert from thousands to actual values\n        currentPrice: 100, // Default stock price for private company\n        sharesOutstanding: 1000000, // Default shares outstanding\n        currentOperatingIncome: currentOperatingIncome * 1000,\n        ...Object.fromEntries(\n          Object.entries(enabledDistributions).map(([key, dist]) => [\n            key,\n            dist.parameters.mean || dist.parameters.mode || (dist.parameters.min + dist.parameters.max) / 2\n          ])\n        )\n      };\n\n      const results = await monteCarloEngine.runDCFSimulation(\n        baseInputs,\n        enabledDistributions,\n        options\n      );\n\n      setSimulationResults(results);\n    } catch (error) {\n      console.error('Monte Carlo simulation failed:', error);\n      // Show error to user\n      alert(`Monte Carlo simulation failed: ${error.message}`);\n    } finally {\n      setIsRunning(false);\n      setProgress(0);\n    }\n  }, [distributions, simulationSettings, correlationMatrix, data]);\n\n  const stopSimulation = useCallback(() => {\n    monteCarloEngine.stopSimulation();\n    setIsRunning(false);\n  }, []);\n\n  const updateDistribution = useCallback((variable, updates) => {\n    setDistributions(prev => ({\n      ...prev,\n      [variable]: { ...prev[variable], ...updates }\n    }));\n  }, []);\n\n  const updateCorrelation = useCallback((i, j, value) => {\n    setCorrelationMatrix(prev => {\n      const newMatrix = prev.map(row => [...row]);\n      newMatrix[i][j] = value;\n      newMatrix[j][i] = value; // Keep matrix symmetric\n      return newMatrix;\n    });\n  }, []);\n\n  const generateHistogramData = useMemo(() => {\n    if (!simulationResults?.results) return [];\n\n    const values = simulationResults.results.map(r => r.pricePerShare);\n    const bins = 50;\n    const min = Math.min(...values);\n    const max = Math.max(...values);\n    const binWidth = (max - min) / bins;\n\n    const histogram = Array(bins).fill(0).map((_, i) => ({\n      bin: min + i * binWidth,\n      count: 0,\n      frequency: 0\n    }));\n\n    values.forEach(value => {\n      const binIndex = Math.min(Math.floor((value - min) / binWidth), bins - 1);\n      histogram[binIndex].count++;\n    });\n\n    histogram.forEach(bin => {\n      bin.frequency = bin.count / values.length;\n    });\n\n    return histogram;\n  }, [simulationResults]);\n\n  const generateScatterData = useMemo(() => {\n    if (!simulationResults?.results) return [];\n\n    return simulationResults.results.slice(0, 1000).map((result, i) => ({\n      x: result.inputs.revenueGrowthRate * 100,\n      y: result.pricePerShare,\n      upside: result.upside\n    }));\n  }, [simulationResults]);\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  const formatPercent = (value) => {\n    return `${(value * 100).toFixed(2)}%`;\n  };\n\n  const tabs = [\n    { id: 'setup', label: 'Setup', icon: Settings },\n    { id: 'run', label: 'Run Simulation', icon: Play },\n    { id: 'results', label: 'Results', icon: BarChart3 },\n    { id: 'analysis', label: 'Analysis', icon: TrendingUp }\n  ];\n\n  return (\n    <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n      <div className=\"mb-6\">\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <h2 className=\"text-2xl font-bold text-white mb-2 flex items-center\">\n            <Zap className=\"inline-block mr-2\" />\n            Monte Carlo Simulation\n          </h2>\n          <p className=\"text-gray-400 text-sm\">\n            Advanced risk analysis using probabilistic modeling • Generate thousands of scenarios • Measure uncertainty\n          </p>\n        </motion.div>\n      </div>\n\n      <div className=\"mb-6\">\n        <div className=\"flex space-x-2\">\n          {tabs.map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`px-4 py-2 rounded-lg font-medium transition-colors flex items-center gap-2 ${\n                  activeTab === tab.id\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                }`}\n              >\n                <Icon size={16} />\n                {tab.label}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"mt-6\">\n        <AnimatePresence mode=\"wait\">\n          {activeTab === 'setup' && (\n            <motion.div\n              key=\"setup\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"space-y-6\">\n                <div className=\"bg-gray-700 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n                    🎛️ Simulation Settings\n                  </h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <label className=\"block text-sm font-medium text-gray-200\">Iterations</label>\n                      <input\n                        type=\"number\"\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.iterations}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          iterations: parseInt(e.target.value)\n                        }))}\n                        min=\"1000\"\n                        max=\"100000\"\n                        step=\"1000\"\n                      />\n                      <small className=\"text-gray-400\">Leave empty for random</small>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label className=\"block text-sm font-medium text-gray-200\">Confidence Level</label>\n                      <select\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.confidenceLevel}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          confidenceLevel: parseFloat(e.target.value)\n                        }))}\n                      >\n                        <option value={0.90}>90%</option>\n                        <option value={0.95}>95%</option>\n                        <option value={0.99}>99%</option>\n                      </select>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label className=\"block text-sm font-medium text-gray-200\">Random Seed (Optional)</label>\n                      <input\n                        type=\"number\"\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.randomSeed || ''}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          randomSeed: e.target.value ? parseInt(e.target.value) : null\n                        }))}\n                        placeholder=\"Leave empty for random\"\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label className=\"flex items-center space-x-2 text-gray-200\">\n                        <input\n                          type=\"checkbox\"\n                          className=\"w-4 h-4 text-blue-600 bg-gray-800 border-gray-600 rounded focus:ring-blue-500\"\n                          checked={simulationSettings.enableCorrelation}\n                          onChange={(e) => setSimulationSettings(prev => ({\n                            ...prev,\n                            enableCorrelation: e.target.checked\n                          }))}\n                        />\n                        <span>Enable Variable Correlation</span>\n                      </label>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-700 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n                    📊 Variable Distributions\n                  </h3>\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                    {Object.entries(distributions).map(([variable, dist]) => (\n                      <div key={variable} className=\"bg-gray-800 border border-gray-600 rounded-lg p-4\">\n                        <div className=\"flex items-center justify-between mb-3\">\n                          <label className=\"flex items-center space-x-2 text-gray-200\">\n                            <input\n                              type=\"checkbox\"\n                              checked={dist.enabled}\n                              onChange={(e) => updateDistribution(variable, { enabled: e.target.checked })}\n                            />\n                            <span className=\"font-medium\">{dist.name}</span>\n                          </label>\n                        </div>\n\n                        {dist.enabled && (\n                          <div className=\"space-y-3\">\n                            <div className=\"space-y-2\">\n                              <label className=\"block text-sm font-medium text-gray-200\">Distribution Type</label>\n                              <select\n                                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                                value={dist.type}\n                                onChange={(e) => {\n                                  const newType = e.target.value;\n                                  const typeConfig = distributionTypes.find(t => t.value === newType);\n                                  const newParameters = {};\n\n                                  // Set default parameters for new type\n                                  if (newType === 'normal') {\n                                    newParameters.mean = 0.1;\n                                    newParameters.stdDev = 0.02;\n                                  } else if (newType === 'triangular') {\n                                    newParameters.min = 0.05;\n                                    newParameters.mode = 0.1;\n                                    newParameters.max = 0.15;\n                                  } else if (newType === 'uniform') {\n                                    newParameters.min = 0.05;\n                                    newParameters.max = 0.15;\n                                  }\n\n                                  updateDistribution(variable, { type: newType, parameters: newParameters });\n                                }}\n                              >\n                                {distributionTypes.map(type => (\n                                  <option key={type.value} value={type.value}>\n                                    {type.label}\n                                  </option>\n                                ))}\n                              </select>\n                            </div>\n\n                            <div className=\"grid grid-cols-2 gap-3\">\n                              {distributionTypes\n                                .find(t => t.value === dist.type)\n                                ?.parameters.map(param => (\n                                  <div key={param} className=\"space-y-1\">\n                                    <label className=\"block text-xs font-medium text-gray-300\">{param.charAt(0).toUpperCase() + param.slice(1)}</label>\n                                    <input\n                                      className=\"w-full px-2 py-1 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                                      type=\"number\"\n                                      value={dist.parameters[param] || ''}\n                                      onChange={(e) => updateDistribution(variable, {\n                                        parameters: {\n                                          ...dist.parameters,\n                                          [param]: parseFloat(e.target.value)\n                                        }\n                                      })}\n                                      step=\"0.001\"\n                                    />\n                                  </div>\n                                ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {simulationSettings.enableCorrelation && (\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">🔗 Correlation Matrix</h3>\n                    <div className=\"overflow-x-auto\">\n                      <table>\n                        <thead>\n                          <tr>\n                            <th />\n                            {Object.keys(distributions).map(variable => (\n                              <th key={variable}>{distributions[variable].name}</th>\n                            ))}\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.keys(distributions).map((variable, i) => (\n                            <tr key={variable}>\n                              <td className=\"font-medium text-gray-200 p-2 border border-gray-600\">\n                                {distributions[variable].name}\n                              </td>\n                              {Object.keys(distributions).map((_, j) => (\n                                <td key={j} className=\"p-2 border border-gray-600\">\n                                  <input\n                                    type=\"number\"\n                                    value={correlationMatrix[i][j]}\n                                    onChange={(e) => updateCorrelation(i, j, parseFloat(e.target.value))}\n                                    min=\"-1\"\n                                    max=\"1\"\n                                    step=\"0.1\"\n                                    disabled={i === j}\n                                    className=\"w-full px-2 py-1 bg-gray-800 border border-gray-600 rounded text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 disabled:bg-gray-700 disabled:text-gray-400\"\n                                  />\n                                </td>\n                              ))}\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'run' && (\n            <motion.div\n              key=\"run\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                  <h3>🚀 Simulation Control</h3>\n                  <div className=\"flex items-center space-x-2\">\n                    {!isRunning ? (\n                      <button\n                        onClick={runSimulation}\n                        className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\"\n                        disabled={Object.values(distributions).every(d => !d.enabled)}\n                      >\n                        <Play size={16} />\n                        <span>Run Simulation</span>\n                      </button>\n                    ) : (\n                      <button\n                        onClick={stopSimulation}\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\"\n                      >\n                        <Square size={16} />\n                        <span>Stop Simulation</span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n\n                {isRunning && (\n                  <div className=\"mt-4\">\n                    <div className=\"w-full bg-gray-700 rounded-full h-2 mb-2\">\n                      <div\n                        className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n                        style={{ width: `${progress}%` }}\n                      />\n                    </div>\n                    <div className=\"text-sm text-gray-400 text-center\">\n                      {progress.toFixed(1)}% Complete ({Math.floor(progress * simulationSettings.iterations / 100)} / {simulationSettings.iterations} iterations)\n                    </div>\n                  </div>\n                )}\n\n                <div className=\"bg-gray-800 rounded-lg p-4 mt-4\">\n                  <h4 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📋 Simulation Preview</h4>\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Iterations</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {simulationSettings.iterations.toLocaleString()}\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Variables</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {Object.values(distributions).filter(d => d.enabled).length}\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Confidence Level</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {(simulationSettings.confidenceLevel * 100).toFixed(0)}%\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Correlation</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {simulationSettings.enableCorrelation ? 'Enabled' : 'Disabled'}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'results' && (\n            <motion.div\n              key=\"results\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              {simulationResults ? (\n                <div className=\"space-y-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-xl font-semibold text-white flex items-center\">📊 Simulation Results</h3>\n                    <div className=\"flex items-center space-x-2\">\n                      <button className=\"bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\">\n                        <Download size={16} />\n                        Export Results\n                      </button>\n                      <button className=\"bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\">\n                        <FileText size={16} />\n                        Generate Report\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    {Object.entries(simulationResults.analysis.statistics).map(([metric, stats]) => (\n                      <div key={metric} className=\"bg-gray-700 rounded-lg p-4\">\n                        <h4 className=\"text-lg font-semibold text-white mb-3\">\n                          {metric === 'pricePerShare' ? '💰 Price per Share' :\n                            metric === 'enterpriseValue' ? '🏢 Enterprise Value' :\n                              '📈 Upside %'}\n                        </h4>\n                        <div className=\"text-2xl font-bold text-green-400 mb-2\">\n                          {metric === 'upside'\n                            ? `${stats.mean.toFixed(1)}%`\n                            : formatCurrency(stats.mean)\n                          }\n                        </div>\n                        <div className=\"space-y-1 text-sm text-gray-300\">\n                          <div>Median: {metric === 'upside' ? `${stats.median.toFixed(1)}%` : formatCurrency(stats.median)}</div>\n                          <div>Std Dev: {metric === 'upside' ? `${stats.stdDev.toFixed(1)}%` : formatCurrency(stats.stdDev)}</div>\n                          <div>Min: {metric === 'upside' ? `${stats.min.toFixed(1)}%` : formatCurrency(stats.min)}</div>\n                          <div>Max: {metric === 'upside' ? `${stats.max.toFixed(1)}%` : formatCurrency(stats.max)}</div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div className=\"bg-gray-700 rounded-lg p-4\">\n                      <h4>📊 Price Distribution</h4>\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <AreaChart data={generateHistogramData}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis\n                            dataKey=\"bin\"\n                            tickFormatter={formatCurrency}\n                          />\n                          <YAxis />\n                          <Tooltip\n                            formatter={(value, name) => [\n                              `${(value * 100).toFixed(2)}%`,\n                              'Frequency'\n                            ]}\n                            labelFormatter={(value) => `Price: ${formatCurrency(value)}`}\n                          />\n                          <Area\n                            type=\"monotone\"\n                            dataKey=\"frequency\"\n                            stroke=\"#3B82F6\"\n                            fill=\"#3B82F6\"\n                            fillOpacity={0.6}\n                          />\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </div>\n\n                    <div className=\"bg-gray-700 rounded-lg p-4\">\n                      <h4>🎯 Sensitivity Scatter Plot</h4>\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <ScatterChart data={generateScatterData}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis\n                            dataKey=\"x\"\n                            name=\"Revenue Growth Rate\"\n                            tickFormatter={(value) => `${value.toFixed(1)}%`}\n                          />\n                          <YAxis\n                            dataKey=\"y\"\n                            name=\"Price per Share\"\n                            tickFormatter={formatCurrency}\n                          />\n                          <Tooltip\n                            formatter={(value, name) => [\n                              name === 'Revenue Growth Rate' ? `${value.toFixed(2)}%` : formatCurrency(value),\n                              name\n                            ]}\n                          />\n                          <Scatter name=\"Scenarios\" fill=\"#10B981\">\n                            {generateScatterData.map((entry, index) => (\n                              <Cell\n                                key={`cell-${index}`}\n                                fill={entry.upside > 0 ? '#10B981' : '#EF4444'}\n                              />\n                            ))}\n                          </Scatter>\n                        </ScatterChart>\n                      </ResponsiveContainer>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n                  <AlertTriangle size={48} className=\"text-gray-400 mb-4\" />\n                  <h3 className=\"text-xl font-semibold text-white mb-2\">No Results Available</h3>\n                  <p className=\"text-gray-400\">Run a simulation to see results here.</p>\n                </div>\n              )}\n            </motion.div>\n          )}\n\n          {activeTab === 'analysis' && (\n            <motion.div\n              key=\"analysis\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              {simulationResults?.analysis ? (\n                <div className=\"space-y-6\">\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">⚠️ Risk Metrics</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                      {Object.entries(simulationResults.analysis.riskMetrics).map(([metric, value]) => (\n                        <div key={metric} className=\"bg-gray-800 rounded-lg p-4 border border-gray-600\">\n                          <h4 className=\"text-sm font-medium text-gray-300 mb-2\">{metric === 'var95' ? 'Value at Risk (95%)' :\n                            metric === 'cvar95' ? 'Conditional VaR (95%)' :\n                              metric === 'probabilityOfLoss' ? 'Probability of Loss' :\n                                'Sharpe Ratio'}\n                          </h4>\n                          <div className=\"text-xl font-bold text-red-400 mb-1\">\n                            {metric === 'probabilityOfLoss' ? `${(value * 100).toFixed(1)}%` : formatCurrency(value)}\n                          </div>\n                          <div className=\"text-xs text-gray-400\">\n                            Risk measure\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📊 Confidence Intervals ({(simulationResults.analysis.confidenceIntervals.pricePerShare?.level * 100).toFixed(0)}%)</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      {Object.entries(simulationResults.analysis.confidenceIntervals).map(([metric, interval]) => (\n                        <div key={metric} className=\"bg-gray-800 rounded-lg p-4 border border-gray-600\">\n                          <h4 className=\"text-lg font-semibold text-white mb-3\">{metric === 'pricePerShare' ? 'Price per Share' :\n                            metric === 'enterpriseValue' ? 'Enterprise Value' :\n                              'Upside %'}\n                          </h4>\n                          <div className=\"space-y-3\">\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Lower Bound:</span>\n                              <span className=\"font-medium text-white\">{metric === 'upside' ? `${interval.lowerBound.toFixed(1)}%` : formatCurrency(interval.lowerBound)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Upper Bound:</span>\n                              <span className=\"font-medium text-white\">{metric === 'upside' ? `${interval.upperBound.toFixed(1)}%` : formatCurrency(interval.upperBound)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Width:</span>\n                              <span className=\"font-medium text-blue-400\">{metric === 'upside' ? `${interval.width.toFixed(1)}%` : formatCurrency(interval.width)}</span>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📊 Percentile Analysis</h3>\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"w-full\">\n                        <thead>\n                          <tr className=\"border-b border-gray-600\">\n                            <th className=\"text-left p-3 text-sm font-medium text-gray-300\">Metric</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">5th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">25th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">50th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">75th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">95th %ile</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.entries(simulationResults.analysis.percentiles).map(([metric, percentiles]) => (\n                            <tr key={metric} className=\"border-b border-gray-600\">\n                              <td className=\"p-3 text-sm text-white\">{metric === 'pricePerShare' ? 'Price per Share' :\n                                metric === 'enterpriseValue' ? 'Enterprise Value' :\n                                  'Upside %'}\n                              </td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p5.toFixed(1)}%` : formatCurrency(percentiles.p5)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p25.toFixed(1)}%` : formatCurrency(percentiles.p25)}</td>\n                              <td className=\"p-3 text-sm text-right text-blue-400 font-medium\">{metric === 'upside' ? `${percentiles.p50.toFixed(1)}%` : formatCurrency(percentiles.p50)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p75.toFixed(1)}%` : formatCurrency(percentiles.p75)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p95.toFixed(1)}%` : formatCurrency(percentiles.p95)}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n                  <AlertTriangle size={48} className=\"text-gray-400 mb-4\" />\n                  <h3 className=\"text-xl font-semibold text-white mb-2\">No Analysis Available</h3>\n                  <p className=\"text-gray-400\">Run a simulation to see analysis here.</p>\n                </div>\n              )}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\nexport default MonteCarloSimulation;\n","import { motion } from 'framer-motion';\nimport {\n  DollarSign,\n  TrendingUp,\n  TrendingDown,\n  AlertCircle,\n  CheckCircle,\n  Calculator,\n  RefreshCw,\n  BarChart3,\n  Plus,\n  Minus\n} from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst ScenarioModeling = ({ data, modelInputs, onModelInputChange, calculateDCF, formatCurrency, formatPercent }) => {\n  const [showAddForm, setShowAddForm] = useState(false);\n\n  const scenarios = modelInputs.scenario?.scenarios || [];\n\n  // Calculate DCF for each scenario\n  const scenarioResults = useMemo(() => {\n    return scenarios.map(scenario => {\n      try {\n        // Apply scenario assumptions to base DCF calculation\n        const incomeStatement = { ...data.statements.incomeStatement };\n\n        // Apply revenue growth to revenue data (object format)\n        const baseRevenue = incomeStatement.totalRevenue || {};\n        const modifiedRevenue = {};\n        Object.keys(baseRevenue).forEach(periodIndex => {\n          const index = parseInt(periodIndex);\n          if (index === 0) {\n            modifiedRevenue[periodIndex] = baseRevenue[periodIndex]; // Base year unchanged\n          } else {\n            // Apply revenue growth for projection years\n            const growthRate = 1 + (scenario.revenueGrowth / 100);\n            modifiedRevenue[periodIndex] = baseRevenue[0] * Math.pow(growthRate, index);\n          }\n        });\n\n        // Apply margin improvement to operating income\n        const baseOperating = incomeStatement.operatingIncome || {};\n        const modifiedOperating = {};\n        Object.keys(baseOperating).forEach(periodIndex => {\n          const index = parseInt(periodIndex);\n          if (index === 0) {\n            modifiedOperating[periodIndex] = baseOperating[periodIndex]; // Base year unchanged\n          } else {\n            // Apply margin improvement\n            const baseRevenueValue = baseRevenue[periodIndex] || 0;\n            const scenarioRevenue = modifiedRevenue[periodIndex] || 0;\n            const baseIncome = baseOperating[periodIndex] || 0;\n\n            if (baseRevenueValue > 0) {\n              const baseMargin = baseIncome / baseRevenueValue;\n              const adjustedMargin = baseMargin + (scenario.marginImprovement / 100);\n              modifiedOperating[periodIndex] = scenarioRevenue * adjustedMargin;\n            } else {\n              modifiedOperating[periodIndex] = baseIncome;\n            }\n          }\n        });\n\n        const scenarioData = {\n          ...data,\n          statements: {\n            ...data.statements,\n            incomeStatement: {\n              ...incomeStatement,\n              totalRevenue: modifiedRevenue,\n              operatingIncome: modifiedOperating\n            }\n          }\n        };\n\n        // Calculate DCF with scenario data\n        const dcfResult = calculateDCF(scenarioData);\n\n        return {\n          ...scenario,\n          ...dcfResult,\n          weightedValue: dcfResult.enterpriseValue * (scenario.probability / 100)\n        };\n      } catch (error) {\n        console.error('Scenario calculation error:', error);\n        return {\n          ...scenario,\n          enterpriseValue: 0,\n          equityValue: 0,\n          weightedValue: 0\n        };\n      }\n    });\n  }, [scenarios, data, calculateDCF]);\n\n  // Calculate probability-weighted average\n  const weightedAverageValue = scenarioResults.reduce((sum, result) => sum + result.weightedValue, 0);\n\n  const addScenario = () => {\n    const newScenario = {\n      name: `Scenario ${scenarios.length + 1}`,\n      probability: Math.max(0, 100 - scenarios.reduce((sum, s) => sum + s.probability, 0)),\n      revenueGrowth: 10,\n      marginImprovement: 0\n    };\n\n    onModelInputChange('scenario', 'scenarios', [...scenarios, newScenario]);\n    setShowAddForm(false);\n  };\n\n  const updateScenario = (index, field, value) => {\n    const updatedScenarios = scenarios.map((scenario, i) =>\n      i === index ? { ...scenario, [field]: value } : scenario\n    );\n    onModelInputChange('scenario', 'scenarios', updatedScenarios);\n  };\n\n  const deleteScenario = (index) => {\n    const updatedScenarios = scenarios.filter((_, i) => i !== index);\n    onModelInputChange('scenario', 'scenarios', updatedScenarios);\n  };\n\n  const ScenarioForm = ({ scenario, index }) => (\n    <div className=\"border rounded-lg p-4 bg-white\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Scenario Name\n          </label>\n          <input\n            type=\"text\"\n            value={scenario.name}\n            onChange={(e) => updateScenario(index, 'name', e.target.value)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"Enter scenario name\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Probability (%)\n          </label>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            value={scenario.probability}\n            onChange={(e) => updateScenario(index, 'probability', parseInt(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Revenue Growth (%)\n          </label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            value={scenario.revenueGrowth}\n            onChange={(e) => updateScenario(index, 'revenueGrowth', parseFloat(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Margin Change (%)\n          </label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            value={scenario.marginImprovement}\n            onChange={(e) => updateScenario(index, 'marginImprovement', parseFloat(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n      </div>\n\n      <div className=\"flex justify-end mt-4 gap-2\">\n        <button\n          onClick={() => deleteScenario(index)}\n          className=\"px-3 py-1 text-red-600 hover:bg-red-50 rounded-lg transition-colors flex items-center gap-1\"\n        >\n          <Trash2 size={16} />\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with Add Button */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <p className=\"text-gray-600\">\n            Create and compare multiple financial scenarios with different assumptions and probabilities.\n          </p>\n        </div>\n        <button\n          onClick={() => setShowAddForm(true)}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n        >\n          <Plus size={16} />\n          Add Scenario\n        </button>\n      </div>\n\n      {/* Scenario Management */}\n      <div className=\"space-y-4\">\n        <h4 className=\"font-semibold text-lg\">Scenario Assumptions</h4>\n\n        {scenarios.map((scenario, index) => (\n          <ScenarioForm key={index} scenario={scenario} index={index} />\n        ))}\n\n        {showAddForm && (\n          <div className=\"border-2 border-dashed border-blue-300 rounded-lg p-4\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h5 className=\"font-medium\">Add New Scenario</h5>\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={addScenario}\n                  className=\"px-3 py-1 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n                >\n                  Add\n                </button>\n                <button\n                  onClick={() => setShowAddForm(false)}\n                  className=\"px-3 py-1 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Results Display */}\n      {scenarioResults.length > 0 && (\n        <div className=\"space-y-6\">\n          <h4 className=\"font-semibold text-lg\">Scenario Analysis Results</h4>\n\n          {/* Probability-Weighted Summary */}\n          <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6 border border-blue-200\">\n            <div className=\"flex items-center gap-2 mb-4\">\n              <BarChart3 size={20} className=\"text-blue-600\" />\n              <h5 className=\"font-semibold text-blue-800\">Probability-Weighted Valuation</h5>\n            </div>\n            <div className=\"text-3xl font-bold text-blue-800\">\n              {formatCurrency(weightedAverageValue)}\n            </div>\n            <p className=\"text-sm text-blue-600 mt-2\">\n              Expected value based on scenario probabilities\n            </p>\n          </div>\n\n          {/* Individual Scenario Results */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">\n            {scenarioResults.map((result, index) => (\n              <motion.div\n                key={index}\n                className=\"bg-white rounded-lg border p-4 hover:shadow-lg transition-shadow\"\n                whileHover={{ y: -2 }}\n              >\n                <div className=\"flex items-start justify-between mb-3\">\n                  <div>\n                    <h6 className=\"font-semibold text-gray-800\">{result.name}</h6>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span>{result.probability}% probability</span>\n                      {result.revenueGrowth > 15 ?\n                        <TrendingUp size={14} className=\"text-green-500\" /> :\n                        result.revenueGrowth < 5 ?\n                          <TrendingDown size={14} className=\"text-red-500\" /> :\n                          <Minus size={14} className=\"text-gray-500\" />\n                      }\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"space-y-3\">\n                  <div className=\"p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Enterprise Value</div>\n                    <div className=\"text-xl font-bold text-gray-800\">\n                      {formatCurrency(result.enterpriseValue)}\n                    </div>\n                  </div>\n\n                  <div className=\"text-xs space-y-1 text-gray-600\">\n                    <div className=\"flex justify-between\">\n                      <span>Revenue Growth:</span>\n                      <span className=\"font-medium\">{formatPercent(result.revenueGrowth)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Margin Change:</span>\n                      <span className={`font-medium ${result.marginImprovement >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {result.marginImprovement >= 0 ? '+' : ''}{formatPercent(result.marginImprovement)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Weighted Value:</span>\n                      <span className=\"font-medium\">{formatCurrency(result.weightedValue)}</span>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n\n          {/* Summary Statistics */}\n          <div className=\"bg-white rounded-lg border p-6\">\n            <h5 className=\"font-semibold mb-4\">Scenario Statistics</h5>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {formatCurrency(Math.max(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Best Case</div>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-red-600\">\n                  {formatCurrency(Math.min(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Worst Case</div>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  {formatCurrency(weightedAverageValue)}\n                </div>\n                <div className=\"text-sm text-gray-600\">Expected Value</div>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-gray-800\">\n                  {formatCurrency(Math.max(...scenarioResults.map(r => r.enterpriseValue)) - Math.min(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Value Range</div>\n              </div>\n            </div>\n\n            <div className=\"mt-4 pt-4 border-t\">\n              <div className=\"text-sm text-gray-600\">\n                <strong>Total Probability:</strong> {scenarios.reduce((sum, s) => sum + s.probability, 0)}%\n                {scenarios.reduce((sum, s) => sum + s.probability, 0) !== 100 && (\n                  <span className=\"text-orange-600 ml-2\">⚠ Probabilities should sum to 100%</span>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {scenarios.length === 0 && (\n        <div className=\"text-center py-12 text-gray-500\">\n          <BarChart3 size={48} className=\"mx-auto mb-4 opacity-50\" />\n          <p>No scenarios created yet.</p>\n          <p className=\"text-sm mt-2\">Click \"Add Scenario\" to get started with scenario modeling.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScenarioModeling;\n","import { motion } from 'framer-motion';\nimport { Activity, TrendingUp, TrendingDown, Settings, BarChart3, Plus, Minus } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst SensitivityAnalysis = ({ data, modelInputs, onModelInputChange, calculateDCF, formatCurrency, formatPercent }) => {\n  const [selectedVariable, setSelectedVariable] = useState(null);\n\n  const sensitivityConfig = modelInputs.sensitivity || {\n    variables: ['revenue', 'grossMargin', 'discountRate'],\n    ranges: {\n      revenue: { min: -20, max: 20 },\n      grossMargin: { min: -5, max: 5 },\n      discountRate: { min: 8, max: 15 }\n    }\n  };\n\n  // Variable definitions with display names and units\n  const variableDefinitions = {\n    revenue: {\n      name: 'Revenue Growth',\n      unit: '%',\n      description: 'Annual revenue growth rate',\n      baseValue: 15,\n      isPercentage: true\n    },\n    grossMargin: {\n      name: 'Gross Margin',\n      unit: '%',\n      description: 'Gross profit margin improvement',\n      baseValue: 45,\n      isPercentage: true\n    },\n    discountRate: {\n      name: 'Discount Rate (WACC)',\n      unit: '%',\n      description: 'Weighted average cost of capital',\n      baseValue: modelInputs.dcf?.discountRate || 10,\n      isPercentage: true\n    },\n    terminalGrowthRate: {\n      name: 'Terminal Growth Rate',\n      unit: '%',\n      description: 'Long-term growth rate assumption',\n      baseValue: modelInputs.dcf?.terminalGrowthRate || 2.5,\n      isPercentage: true\n    },\n    taxRate: {\n      name: 'Tax Rate',\n      unit: '%',\n      description: 'Corporate tax rate',\n      baseValue: modelInputs.dcf?.taxRate || 25,\n      isPercentage: true\n    }\n  };\n\n  // Calculate base case valuation\n  const baseValuation = useMemo(() => {\n    return calculateDCF();\n  }, [data, modelInputs, calculateDCF]);\n\n  // Generate sensitivity analysis data\n  const sensitivityResults = useMemo(() => {\n    const results = {};\n\n    sensitivityConfig.variables.forEach(variable => {\n      const range = sensitivityConfig.ranges[variable];\n      const variableDef = variableDefinitions[variable];\n\n      if (!range || !variableDef) return;\n\n      const steps = 9; // Number of data points\n      const stepSize = (range.max - range.min) / (steps - 1);\n      const dataPoints = [];\n\n      for (let i = 0; i < steps; i++) {\n        const value = range.min + (stepSize * i);\n\n        // Create modified DCF inputs based on variable type\n        let modifiedData = { ...data };\n        const dcfInputs = {\n          ...modelInputs.dcf,\n          [variable]: variableDef.isPercentage ? value : value\n        };\n\n        // For revenue and margin variables, we need to simulate the impact\n        if (variable === 'revenue' || variable === 'grossMargin') {\n          // Create a copy of the income statement with modified values\n          const incomeStatement = { ...data.statements.incomeStatement };\n\n          if (variable === 'revenue') {\n            // Apply revenue growth change across periods\n            const baseRevenue = incomeStatement.totalRevenue || {};\n            const modifiedRevenue = {};\n\n            Object.keys(baseRevenue).forEach(periodIndex => {\n              const index = parseInt(periodIndex);\n              if (index === 0) {\n                modifiedRevenue[periodIndex] = baseRevenue[periodIndex];\n              } else {\n                const growthRate = 1 + (value / 100);\n                modifiedRevenue[periodIndex] = baseRevenue[0] * Math.pow(growthRate, index);\n              }\n            });\n\n            incomeStatement.totalRevenue = modifiedRevenue;\n          }\n\n          if (variable === 'grossMargin') {\n            // Apply margin change to operating income\n            const baseOperating = incomeStatement.operatingIncome || {};\n            const baseRevenue = incomeStatement.totalRevenue || {};\n            const modifiedOperating = {};\n\n            Object.keys(baseOperating).forEach(periodIndex => {\n              const revenue = baseRevenue[periodIndex] || 0;\n              const originalIncome = baseOperating[periodIndex] || 0;\n              if (revenue > 0) {\n                const baseMargin = originalIncome / revenue;\n                const adjustedMargin = baseMargin + (value / 100);\n                modifiedOperating[periodIndex] = revenue * adjustedMargin;\n              } else {\n                modifiedOperating[periodIndex] = originalIncome;\n              }\n            });\n\n            incomeStatement.operatingIncome = modifiedOperating;\n          }\n\n          modifiedData = {\n            ...data,\n            statements: {\n              ...data.statements,\n              incomeStatement\n            }\n          };\n        }\n\n        // Use a temporary calculateDCF with modified inputs\n        const tempCalculateDCF = () => {\n          try {\n            const dcfParams = {\n              discountRate: dcfInputs.discountRate || 10,\n              terminalGrowthRate: dcfInputs.terminalGrowthRate || 2.5,\n              projectionYears: dcfInputs.projectionYears || 5,\n              taxRate: dcfInputs.taxRate || 25\n            };\n\n            const sourceData = modifiedData;\n            const operatingIncomeData = sourceData.statements.incomeStatement.operatingIncome || {};\n\n            // Extract operating incomes from object structure\n            const operatingIncomes = [];\n            Object.keys(operatingIncomeData).forEach(periodKey => {\n              const index = parseInt(periodKey);\n              if (index >= 0) {\n                operatingIncomes.push(operatingIncomeData[periodKey] || 0);\n              }\n            });\n\n            if (operatingIncomes.length === 0) return { enterpriseValue: 0, equityValue: 0 };\n\n            let presentValue = 0;\n            const discountFactor = 1 + (dcfParams.discountRate / 100);\n\n            // Use available periods for projections\n            operatingIncomes.forEach((income, index) => {\n              if (index > 0 && index <= dcfParams.projectionYears) {\n                const afterTaxIncome = income * (1 - dcfParams.taxRate / 100);\n                const pv = afterTaxIncome / Math.pow(discountFactor, index);\n                presentValue += pv;\n              }\n            });\n\n            const lastYearIncome = operatingIncomes[operatingIncomes.length - 1] || 0;\n            const terminalCashFlow = lastYearIncome * (1 + dcfParams.terminalGrowthRate / 100) * (1 - dcfParams.taxRate / 100);\n            const terminalValue = terminalCashFlow / ((dcfParams.discountRate - dcfParams.terminalGrowthRate) / 100);\n            const presentTerminalValue = terminalValue / Math.pow(discountFactor, dcfParams.projectionYears);\n\n            const enterpriseValue = presentValue + presentTerminalValue;\n\n            return {\n              enterpriseValue,\n              equityValue: enterpriseValue,\n              presentValueOperations: presentValue,\n              presentValueTerminal: presentTerminalValue,\n              terminalValue\n            };\n          } catch (error) {\n            console.error('DCF calculation error:', error);\n            return { enterpriseValue: 0, equityValue: 0 };\n          }\n        };\n\n        const result = tempCalculateDCF();\n\n        dataPoints.push({\n          variable: value,\n          valuation: result.enterpriseValue,\n          changeFromBase: ((result.enterpriseValue - baseValuation.enterpriseValue) / baseValuation.enterpriseValue) * 100\n        });\n      }\n\n      results[variable] = {\n        definition: variableDef,\n        range,\n        dataPoints\n      };\n    });\n\n    return results;\n  }, [data, modelInputs, sensitivityConfig, baseValuation, calculateDCF]);\n\n  // Tornado chart data (impact ranking)\n  const tornadoData = useMemo(() => {\n    return Object.entries(sensitivityResults).map(([variable, result]) => {\n      const maxImpact = Math.max(...result.dataPoints.map(d => Math.abs(d.changeFromBase)));\n      return {\n        variable,\n        definition: result.definition,\n        maxImpact,\n        positiveImpact: Math.max(...result.dataPoints.map(d => d.changeFromBase)),\n        negativeImpact: Math.min(...result.dataPoints.map(d => d.changeFromBase))\n      };\n    }).sort((a, b) => b.maxImpact - a.maxImpact);\n  }, [sensitivityResults]);\n\n  const updateSensitivityRange = (variable, field, value) => {\n    const updatedRanges = {\n      ...sensitivityConfig.ranges,\n      [variable]: {\n        ...sensitivityConfig.ranges[variable],\n        [field]: parseFloat(value)\n      }\n    };\n    onModelInputChange('sensitivity', 'ranges', updatedRanges);\n  };\n\n  const addVariable = (variableName) => {\n    if (!sensitivityConfig.variables.includes(variableName) && variableDefinitions[variableName]) {\n      const updatedVariables = [...sensitivityConfig.variables, variableName];\n      const updatedRanges = {\n        ...sensitivityConfig.ranges,\n        [variableName]: { min: -10, max: 10 }\n      };\n      onModelInputChange('sensitivity', 'variables', updatedVariables);\n      onModelInputChange('sensitivity', 'ranges', updatedRanges);\n    }\n  };\n\n  const removeVariable = (variableName) => {\n    const updatedVariables = sensitivityConfig.variables.filter(v => v !== variableName);\n    const { [variableName]: removed, ...updatedRanges } = sensitivityConfig.ranges;\n    onModelInputChange('sensitivity', 'variables', updatedVariables);\n    onModelInputChange('sensitivity', 'ranges', updatedRanges);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <p className=\"text-gray-600 mb-4\">\n            Analyze how changes in key variables impact enterprise valuation.\n            Higher sensitivity indicates greater risk and importance for due diligence.\n          </p>\n          <div className=\"flex items-center gap-4 text-sm\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 bg-blue-500 rounded\" />\n              <span>Base Case: {formatCurrency(baseValuation.enterpriseValue)}</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Activity size={14} />\n              <span>{sensitivityConfig.variables.length} variables analyzed</span>\n            </div>\n          </div>\n        </div>\n        <button\n          className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors flex items-center gap-2\"\n        >\n          <Settings size={16} />\n          Configure\n        </button>\n      </div>\n\n      {/* Tornado Chart */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <h4 className=\"font-semibold text-lg mb-4 flex items-center gap-2\">\n          <BarChart3 size={20} />\n          Impact Ranking (Tornado Chart)\n        </h4>\n\n        <div className=\"space-y-3\">\n          {tornadoData.map((item, index) => (\n            <div key={item.variable} className=\"relative\">\n              <div className=\"flex items-center justify-between mb-1\">\n                <span className=\"text-sm font-medium\">{index + 1}. {item.definition.name}</span>\n                <span className=\"text-xs text-gray-500\">±{item.maxImpact.toFixed(1)}%</span>\n              </div>\n\n              <div className=\"relative h-8 bg-gray-100 rounded\">\n                {/* Negative impact bar */}\n                <div\n                  className=\"absolute left-1/2 h-full bg-red-400 rounded-l\"\n                  style={{\n                    width: `${Math.abs(item.negativeImpact) / Math.max(Math.abs(item.negativeImpact), item.positiveImpact) * 50}%`,\n                    transform: 'translateX(-100%)'\n                  }}\n                />\n\n                {/* Positive impact bar */}\n                <div\n                  className=\"absolute left-1/2 h-full bg-green-400 rounded-r\"\n                  style={{\n                    width: `${item.positiveImpact / Math.max(Math.abs(item.negativeImpact), item.positiveImpact) * 50}%`\n                  }}\n                />\n\n                {/* Center line */}\n                <div className=\"absolute left-1/2 top-0 bottom-0 w-0.5 bg-gray-400 transform -translate-x-0.5\" />\n\n                {/* Labels */}\n                <div className=\"absolute inset-0 flex items-center justify-between px-2 text-xs font-medium text-white\">\n                  <span>{item.negativeImpact.toFixed(1)}%</span>\n                  <span>+{item.positiveImpact.toFixed(1)}%</span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Variable Configuration */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <h4 className=\"font-semibold text-lg mb-4\">Variable Configuration</h4>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {sensitivityConfig.variables.map(variable => {\n            const result = sensitivityResults[variable];\n            if (!result) return null;\n\n            return (\n              <div key={variable} className=\"border rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div>\n                    <h6 className=\"font-medium\">{result.definition.name}</h6>\n                    <p className=\"text-xs text-gray-500\">{result.definition.description}</p>\n                  </div>\n                  <button\n                    onClick={() => removeVariable(variable)}\n                    className=\"text-red-500 hover:bg-red-50 p-1 rounded\"\n                  >\n                    <Minus size={16} />\n                  </button>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-3 mb-3\">\n                  <div>\n                    <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                      Min Value ({result.definition.unit})\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={result.range.min}\n                      onChange={(e) => updateSensitivityRange(variable, 'min', e.target.value)}\n                      className=\"w-full px-2 py-1 border rounded text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                      Max Value ({result.definition.unit})\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={result.range.max}\n                      onChange={(e) => updateSensitivityRange(variable, 'max', e.target.value)}\n                      className=\"w-full px-2 py-1 border rounded text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n\n                {/* Mini chart */}\n                <div className=\"h-16 bg-gray-50 rounded p-2\">\n                  <div className=\"text-xs text-gray-500 mb-1\">Valuation Sensitivity</div>\n                  <div className=\"flex items-end justify-between h-8\">\n                    {result.dataPoints.map((point, index) => (\n                      <div\n                        key={index}\n                        className={`w-1 rounded-t ${\n                          point.changeFromBase > 0 ? 'bg-green-400' :\n                            point.changeFromBase < 0 ? 'bg-red-400' : 'bg-blue-400'\n                        }`}\n                        style={{\n                          height: `${Math.abs(point.changeFromBase) / 50 * 100}%`,\n                          minHeight: '2px'\n                        }}\n                        title={`${point.variable}${result.definition.unit}: ${formatCurrency(point.valuation)}`}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n\n          {/* Add Variable */}\n          <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 flex items-center justify-center\">\n            <div className=\"text-center\">\n              <Plus size={24} className=\"mx-auto mb-2 text-gray-400\" />\n              <p className=\"text-sm text-gray-500 mb-3\">Add Variable</p>\n              <div className=\"space-y-2\">\n                {Object.keys(variableDefinitions)\n                  .filter(v => !sensitivityConfig.variables.includes(v))\n                  .map(variable => (\n                    <button\n                      key={variable}\n                      onClick={() => addVariable(variable)}\n                      className=\"block w-full px-3 py-1 text-xs bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors\"\n                    >\n                      {variableDefinitions[variable].name}\n                    </button>\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Detailed Analysis */}\n      {selectedVariable && sensitivityResults[selectedVariable] && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">\n            Detailed Analysis: {sensitivityResults[selectedVariable].definition.name}\n          </h4>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <div>\n              <h6 className=\"font-medium mb-3\">Data Points</h6>\n              <div className=\"space-y-2 max-h-64 overflow-y-auto\">\n                {sensitivityResults[selectedVariable].dataPoints.map((point, index) => (\n                  <div key={index} className=\"flex justify-between items-center text-sm p-2 bg-gray-50 rounded\">\n                    <span>{point.variable}{sensitivityResults[selectedVariable].definition.unit}</span>\n                    <span className=\"font-medium\">{formatCurrency(point.valuation)}</span>\n                    <span\n                      className={`font-medium ${\n                        point.changeFromBase > 0 ? 'text-green-600' :\n                          point.changeFromBase < 0 ? 'text-red-600' : 'text-gray-600'\n                      }`}\n                    >\n                      {point.changeFromBase > 0 ? '+' : ''}{point.changeFromBase.toFixed(1)}%\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div>\n              <h6 className=\"font-medium mb-3\">Key Statistics</h6>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Range Impact:</span>\n                  <span className=\"font-medium\">\n                    ±{Math.max(...sensitivityResults[selectedVariable].dataPoints.map(d => Math.abs(d.changeFromBase))).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Max Upside:</span>\n                  <span className=\"font-medium text-green-600\">\n                    +{Math.max(...sensitivityResults[selectedVariable].dataPoints.map(d => d.changeFromBase)).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Max Downside:</span>\n                  <span className=\"font-medium text-red-600\">\n                    {Math.min(...sensitivityResults[selectedVariable].dataPoints.map(d => d.changeFromBase)).toFixed(1)}%\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SensitivityAnalysis;\n","import {\n  DollarSign,\n  TrendingUp,\n  TrendingDown,\n  Calculator,\n  Settings,\n  AlertTriangle,\n  CheckCircle,\n  Target,\n  PieChart,\n  Activity,\n  RefreshCw,\n  BarChart3\n} from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nimport AdvancedDCF from './AdvancedDCF.jsx';\nimport ComparableAnalysis from './ComparableAnalysis.jsx';\nimport MonteCarloSimulation from './MonteCarloSimulation.jsx';\nimport ScenarioModeling from './ScenarioModeling.jsx';\nimport SensitivityAnalysis from './SensitivityAnalysis.jsx';\n\nconst ModelingTools = ({ data, adjustedValues, onDataChange }) => {\n  const [activeModel, setActiveModel] = useState('dcf');\n  const [modelInputs, setModelInputs] = useState({\n    dcf: {\n      discountRate: 10,\n      terminalGrowthRate: 2.5,\n      projectionYears: 5,\n      terminalValueMultiple: 10,\n      taxRate: 25,\n      sharesOutstanding: 1000,\n      workingCapital: {\n        receivablesDays: 45,\n        inventoryDays: 60,\n        payablesDays: 30,\n        receivablesGrowth: 2,\n        inventoryGrowth: 1.5,\n        payablesGrowth: 1.8\n      },\n      capex: {\n        capexAsPercentOfRevenue: 3.5,\n        depreciationRate: 7,\n        maintenanceCapex: 2.0\n      }\n    },\n    ratios: {\n      compareToIndustry: true,\n      industryAverages: {\n        grossMargin: 45,\n        operatingMargin: 15,\n        netMargin: 8,\n        currentRatio: 2.1,\n        debtToEquity: 0.5\n      }\n    },\n    sensitivity: {\n      variables: ['revenue', 'grossMargin', 'discountRate'],\n      ranges: {\n        revenue: { min: -20, max: 20 },\n        grossMargin: { min: -5, max: 5 },\n        discountRate: { min: 8, max: 15 }\n      }\n    },\n    scenario: {\n      scenarios: [\n        { name: 'Base Case', probability: 50, revenueGrowth: 15, marginImprovement: 0 },\n        { name: 'Bull Case', probability: 25, revenueGrowth: 25, marginImprovement: 2 },\n        { name: 'Bear Case', probability: 25, revenueGrowth: 5, marginImprovement: -2 }\n      ]\n    }\n  });\n\n  // Calculate financial metrics from the spreadsheet data\n  const calculatedMetrics = useMemo(() => {\n    const statements = data.statements.incomeStatement;\n    const periods = data.periods;\n\n    const metrics = {\n      revenue: [],\n      grossProfit: [],\n      operatingIncome: [],\n      margins: {\n        gross: [],\n        operating: [],\n        net: []\n      },\n      growth: {\n        revenue: [],\n        operating: []\n      }\n    };\n\n    periods.forEach((_, index) => {\n      // Revenue metrics - Use adjusted values for latest period when available\n      const isLatestPeriod = index === periods.length - 1;\n      const revenue = isLatestPeriod && adjustedValues?.totalRevenue\n        ? adjustedValues.totalRevenue\n        : statements.totalRevenue?.[index] || 0;\n      const totalCOGS = isLatestPeriod && adjustedValues?.totalCostOfGoodsSold\n        ? adjustedValues.totalCostOfGoodsSold\n        : statements.totalCostOfGoodsSold?.[index] || 0;\n      const grossProfit = isLatestPeriod && adjustedValues?.grossProfit\n        ? adjustedValues.grossProfit\n        : statements.grossProfit?.[index] || (revenue - totalCOGS);\n      const operatingIncome = isLatestPeriod && adjustedValues?.operatingIncome\n        ? adjustedValues.operatingIncome\n        : statements.operatingIncome?.[index] || 0;\n\n      metrics.revenue.push(revenue);\n      metrics.grossProfit.push(grossProfit);\n      metrics.operatingIncome.push(operatingIncome);\n\n      // Margin calculations\n      metrics.margins.gross.push(revenue ? (grossProfit / revenue) * 100 : 0);\n      metrics.margins.operating.push(revenue ? (operatingIncome / revenue) * 100 : 0);\n\n      // Growth calculations\n      if (index > 0) {\n        const prevRevenue = statements.totalRevenue?.[index - 1] || 0;\n        const prevOperating = statements.operatingIncome?.[index - 1] || 0;\n\n        metrics.growth.revenue.push(prevRevenue ? ((revenue - prevRevenue) / prevRevenue) * 100 : 0);\n        metrics.growth.operating.push(prevOperating ? ((operatingIncome - prevOperating) / prevOperating) * 100 : 0);\n      }\n    });\n\n    return metrics;\n  }, [data]);\n\n  // DCF Calculation - Enhanced to work with scenario data\n  const calculateDCF = (inputData = null) => {\n    const { discountRate, terminalGrowthRate, projectionYears, taxRate } = modelInputs.dcf;\n    const sourceData = inputData || data;\n\n    // Use either scenario data or calculated metrics\n    let operatingIncomes;\n    if (inputData) {\n      // For scenario data, extract operating incomes directly\n      operatingIncomes = [];\n      sourceData.periods.forEach((_, index) => {\n        if (index > 0 && index <= projectionYears) {\n          operatingIncomes.push(sourceData.statements.incomeStatement.operatingIncome?.[index] || 0);\n        }\n      });\n    } else {\n      // For regular calculation, use calculated metrics\n      operatingIncomes = calculatedMetrics.operatingIncome.slice(1, projectionYears + 1);\n    }\n\n    if (operatingIncomes.length === 0) return { enterpriseValue: 0, equityValue: 0, sharePrice: 0 };\n\n    let presentValue = 0;\n    const discountFactor = 1 + (discountRate / 100);\n\n    // Calculate present value of cash flows\n    operatingIncomes.forEach((income, index) => {\n      const afterTaxIncome = income * (1 - taxRate / 100);\n      const pv = afterTaxIncome / Math.pow(discountFactor, index + 1);\n      presentValue += pv;\n    });\n\n    // Terminal value\n    const lastYearIncome = operatingIncomes[operatingIncomes.length - 1] || 0;\n    const terminalCashFlow = lastYearIncome * (1 + terminalGrowthRate / 100) * (1 - taxRate / 100);\n    const terminalValue = terminalCashFlow / ((discountRate - terminalGrowthRate) / 100);\n    const presentTerminalValue = terminalValue / Math.pow(discountFactor, projectionYears);\n\n    const enterpriseValue = presentValue + presentTerminalValue;\n\n    return {\n      enterpriseValue,\n      equityValue: enterpriseValue, // Simplified - would subtract net debt\n      presentValueOperations: presentValue,\n      presentValueTerminal: presentTerminalValue,\n      terminalValue\n    };\n  };\n\n  const dcfResults = calculateDCF();\n\n  const modelTypes = [\n    { id: 'dcf', label: 'DCF Valuation', icon: DollarSign, description: 'Discounted Cash Flow analysis' },\n    { id: 'ratios', label: 'Ratio Analysis', icon: BarChart3, description: 'Financial ratio comparison' },\n    { id: 'sensitivity', label: 'Sensitivity Analysis', icon: Activity, description: 'Variable impact analysis' },\n    { id: 'scenario', label: 'Scenario Modeling', icon: Target, description: 'Multi-scenario projections' },\n    { id: 'comparable', label: 'Comparable Analysis', icon: Users, description: 'Market-based valuation' },\n    { id: 'montecarlo', label: 'Monte Carlo', icon: Zap, description: 'Probabilistic risk analysis' }\n  ];\n\n  const updateModelInput = (modelType, field, value) => {\n    setModelInputs(prev => ({\n      ...prev,\n      [modelType]: {\n        ...prev[modelType],\n        [field]: value\n      }\n    }));\n  };\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value * 1000); // Convert from thousands\n  };\n\n  const formatPercent = (value) => {\n    return `${value.toFixed(1)}%`;\n  };\n\n  return (\n    <div className=\"h-full bg-gray-900 text-white p-6\">\n      {/* Streamlined Model Selection */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div>\n            <h2 className=\"text-xl font-semibold text-white\">Financial Modeling</h2>\n            <p className=\"text-gray-400 text-sm mt-1\">Select a modeling approach to analyze your financial data</p>\n          </div>\n        </div>\n\n        <div className=\"flex flex-wrap gap-2 mb-6\">\n          {modelTypes.map((type) => {\n            const Icon = type.icon;\n            return (\n              <button\n                key={type.id}\n                onClick={() => setActiveModel(type.id)}\n                className={`${\n                  activeModel === type.id\n                    ? 'bg-blue-600 text-white border-blue-500 shadow-lg'\n                    : 'bg-gray-800 text-gray-300 border-gray-700 hover:bg-gray-700 hover:text-white hover:border-gray-600'\n                } flex items-center gap-3 px-4 py-3 rounded-lg border transition-all duration-200`}\n              >\n                <Icon size={18} className={activeModel === type.id ? 'text-white' : 'text-blue-400'} />\n                <span className=\"font-medium\">{type.label}</span>\n              </button>\n            );\n          })}\n        </div>\n\n        {/* Active Model Description */}\n        <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\n          <div className=\"flex items-center gap-3\">\n            {React.createElement(modelTypes.find(t => t.id === activeModel)?.icon, {\n              size: 20,\n              className: 'text-blue-400'\n            })}\n            <div>\n              <h3 className=\"font-medium text-white\">\n                {modelTypes.find(t => t.id === activeModel)?.label}\n              </h3>\n              <p className=\"text-gray-400 text-sm\">\n                {modelTypes.find(t => t.id === activeModel)?.description}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Model Content */}\n      <div>\n        {activeModel === 'dcf' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <DollarSign size={20} className=\"text-blue-400\" />\n              DCF Valuation Model\n            </h3>\n\n            <AdvancedDCF\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'ratios' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <BarChart3 size={20} />\n              Financial Ratio Analysis\n            </h3>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {/* Profitability Ratios */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Profitability Ratios</h4>\n                <div className=\"space-y-3\">\n                  {calculatedMetrics.margins.gross.map((margin, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Gross Margin:</span>\n                      <span className=\"font-medium\">{formatPercent(margin)}</span>\n                    </div>\n                  ))}\n                  {calculatedMetrics.margins.operating.map((margin, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Operating Margin:</span>\n                      <span className=\"font-medium\">{formatPercent(margin)}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Growth Ratios */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Growth Rates</h4>\n                <div className=\"space-y-3\">\n                  {calculatedMetrics.growth.revenue.map((growth, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Revenue Growth:</span>\n                      <span className={`font-medium ${growth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {formatPercent(growth)}\n                      </span>\n                    </div>\n                  ))}\n                  {calculatedMetrics.growth.operating.map((growth, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Operating Growth:</span>\n                      <span className={`font-medium ${growth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {formatPercent(growth)}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Industry Comparison */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Industry Comparison</h4>\n                <div className=\"space-y-3\">\n                  <div className=\"p-3 bg-gray-700 rounded-lg\">\n                    <div className=\"text-xs text-gray-400 uppercase tracking-wide\">Industry Avg</div>\n                    <div className=\"text-sm\">Gross Margin: {formatPercent(modelInputs.ratios.industryAverages.grossMargin)}</div>\n                    <div className=\"text-sm\">Operating Margin: {formatPercent(modelInputs.ratios.industryAverages.operatingMargin)}</div>\n                    <div className=\"text-sm\">Net Margin: {formatPercent(modelInputs.ratios.industryAverages.netMargin)}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeModel === 'sensitivity' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <Activity size={20} />\n              Sensitivity Analysis\n            </h3>\n\n            <SensitivityAnalysis\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              calculateDCF={calculateDCF}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'scenario' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <Target size={20} />\n              Scenario Modeling\n            </h3>\n\n            <ScenarioModeling\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              calculateDCF={calculateDCF}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'comparable' && (\n          <div className=\"p-6\">\n            <ComparableAnalysis\n              data={data}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'montecarlo' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2\">\n              <Zap size={20} />\n              Monte Carlo Simulation\n            </h3>\n\n            <MonteCarloSimulation\n              data={data}\n              onDataChange={onDataChange}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ModelingTools;\n","import { motion } from 'framer-motion';\nimport {\n  Zap, BarChart3, TrendingUp, Target, Settings,\n  Play, Download, RefreshCw, AlertTriangle, CheckCircle,\n  Activity, DollarSign, Percent, Calculator\n} from 'lucide-react';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { ComposedChart, Bar, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ScatterChart, Scatter } from 'recharts';\n\nimport { monteCarloEngine } from '../../services/monteCarloEngine.js';\n\nconst MonteCarloIntegrationHub = ({\n  data,\n  dcfResults,\n  lboResults,\n  financialModel,\n  scenarioResults,\n  onDataChange\n}) => {\n  const [activeAnalysis, setActiveAnalysis] = useState('unified');\n  const [simulationSettings, setSimulationSettings] = useState({\n    iterations: 10000,\n    confidenceLevel: 0.95,\n    correlationsEnabled: true,\n    crossModelAnalysis: true,\n    riskMetrics: ['var', 'cvar', 'downside']\n  });\n\n  const [integratedResults, setIntegratedResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  const formatCurrency = useCallback((value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    return `${(value * 100).toFixed(1)}%`;\n  }, []);\n\n  // Cross-model Monte Carlo analysis\n  const runIntegratedSimulation = useCallback(async() => {\n    setIsRunning(true);\n    setProgress(0);\n\n    try {\n      const results = {\n        dcf: null,\n        lbo: null,\n        correlation: null,\n        portfolio: null,\n        riskMetrics: null\n      };\n\n      // DCF Monte Carlo (if DCF results available)\n      if (dcfResults && simulationSettings.crossModelAnalysis) {\n        const dcfDistributions = {\n          revenueGrowthRate: {\n            type: 'normal',\n            parameters: { mean: 0.05, stdDev: 0.02 },\n            enabled: true\n          },\n          fcfMargin: {\n            type: 'triangular',\n            parameters: { min: 0.10, mode: 0.15, max: 0.20 },\n            enabled: true\n          },\n          wacc: {\n            type: 'normal',\n            parameters: { mean: 0.10, stdDev: 0.015 },\n            enabled: true\n          },\n          terminalGrowthRate: {\n            type: 'uniform',\n            parameters: { min: 0.02, max: 0.03 },\n            enabled: true\n          }\n        };\n\n        const dcfInputs = {\n          currentRevenue: data?.statements?.incomeStatement?.totalRevenue?.[0] * 1000 || 1000000,\n          currentPrice: 100,\n          sharesOutstanding: 1000000,\n          ...dcfResults\n        };\n\n        setProgress(25);\n        results.dcf = await monteCarloEngine.runDCFSimulation(\n          dcfInputs,\n          dcfDistributions,\n          {\n            iterations: simulationSettings.iterations,\n            confidenceLevel: simulationSettings.confidenceLevel,\n            onProgress: (p) => setProgress(25 + p * 0.25)\n          }\n        );\n      }\n\n      // LBO Monte Carlo (if LBO results available)\n      if (lboResults && simulationSettings.crossModelAnalysis) {\n        const lboDistributions = {\n          ebitdaGrowthRate: {\n            type: 'normal',\n            parameters: { mean: 0.06, stdDev: 0.02 },\n            enabled: true\n          },\n          exitMultiple: {\n            type: 'triangular',\n            parameters: { min: 8.0, mode: 10.0, max: 12.0 },\n            enabled: true\n          },\n          leverageRatio: {\n            type: 'normal',\n            parameters: { mean: 5.5, stdDev: 0.5 },\n            enabled: true\n          }\n        };\n\n        setProgress(50);\n        results.lbo = await monteCarloEngine.runLBOSimulation(\n          lboResults.inputs || {},\n          lboDistributions,\n          {\n            iterations: simulationSettings.iterations,\n            confidenceLevel: simulationSettings.confidenceLevel,\n            onProgress: (p) => setProgress(50 + p * 0.25)\n          }\n        );\n      }\n\n      // Cross-model correlation analysis\n      if (results.dcf && results.lbo && simulationSettings.correlationsEnabled) {\n        setProgress(75);\n        results.correlation = calculateCrossModelCorrelations(results.dcf, results.lbo);\n      }\n\n      // Portfolio-level risk metrics\n      setProgress(90);\n      results.riskMetrics = calculateIntegratedRiskMetrics(results);\n\n      // Generate scenario-weighted results\n      if (scenarioResults && scenarioResults.scenarios) {\n        results.portfolio = generatePortfolioAnalysis(results, scenarioResults);\n      }\n\n      setProgress(100);\n      setIntegratedResults(results);\n\n      // Save results\n      if (onDataChange) {\n        onDataChange({\n          monteCarloIntegrated: {\n            settings: simulationSettings,\n            results,\n            timestamp: new Date().toISOString()\n          }\n        });\n      }\n\n    } catch (error) {\n      console.error('Integrated Monte Carlo simulation error:', error);\n      alert(`Simulation error: ${error.message}`);\n    } finally {\n      setIsRunning(false);\n      setProgress(0);\n    }\n  }, [dcfResults, lboResults, scenarioResults, simulationSettings, data, onDataChange]);\n\n  const calculateCrossModelCorrelations = useCallback((dcfResults, lboResults) => {\n    // Calculate correlations between DCF and LBO outcomes\n    const dcfValues = dcfResults.simulations?.map(s => s.pricePerShare) || [];\n    const lboValues = lboResults.simulations?.map(s => s.irr) || [];\n\n    if (dcfValues.length === 0 || lboValues.length === 0) return null;\n\n    const correlation = pearsonCorrelation(dcfValues, lboValues);\n\n    return {\n      dcfLboCorrelation: correlation,\n      interpretation: Math.abs(correlation) > 0.7 ? 'Strong' :\n        Math.abs(correlation) > 0.4 ? 'Moderate' : 'Weak',\n      riskImplication: correlation > 0 ? 'Aligned Risk' : 'Hedged Risk'\n    };\n  }, []);\n\n  const pearsonCorrelation = (x, y) => {\n    const n = Math.min(x.length, y.length);\n    if (n === 0) return 0;\n\n    const sumX = x.slice(0, n).reduce((a, b) => a + b, 0);\n    const sumY = y.slice(0, n).reduce((a, b) => a + b, 0);\n    const sumXY = x.slice(0, n).reduce((sum, xi, i) => sum + xi * y[i], 0);\n    const sumXX = x.slice(0, n).reduce((sum, xi) => sum + xi * xi, 0);\n    const sumYY = y.slice(0, n).reduce((sum, yi) => sum + yi * yi, 0);\n\n    const numerator = n * sumXY - sumX * sumY;\n    const denominator = Math.sqrt((n * sumXX - sumX * sumX) * (n * sumYY - sumY * sumY));\n\n    return denominator === 0 ? 0 : numerator / denominator;\n  };\n\n  const calculateIntegratedRiskMetrics = useCallback((results) => {\n    const metrics = {};\n\n    if (results.dcf?.analysis) {\n      metrics.dcf = {\n        var95: results.dcf.analysis.percentiles?.pricePerShare?.p5 || 0,\n        expectedValue: results.dcf.analysis.summary?.mean || 0,\n        volatility: results.dcf.analysis.summary?.standardDeviation || 0\n      };\n    }\n\n    if (results.lbo?.analysis) {\n      metrics.lbo = {\n        var95: results.lbo.analysis.percentiles?.irr?.p5 || 0,\n        expectedValue: results.lbo.analysis.summary?.mean || 0,\n        volatility: results.lbo.analysis.summary?.standardDeviation || 0\n      };\n    }\n\n    return metrics;\n  }, []);\n\n  const generatePortfolioAnalysis = useCallback((results, scenarios) => {\n    // Weight Monte Carlo results by scenario probabilities\n    const weightedMetrics = scenarios.scenarios.reduce((acc, scenario) => {\n      const weight = scenario.probability / 100;\n\n      if (results.dcf) {\n        acc.dcfWeighted = (acc.dcfWeighted || 0) +\n          (results.dcf.analysis?.summary?.mean || 0) * weight;\n      }\n\n      if (results.lbo) {\n        acc.lboWeighted = (acc.lboWeighted || 0) +\n          (results.lbo.analysis?.summary?.mean || 0) * weight;\n      }\n\n      return acc;\n    }, {});\n\n    return weightedMetrics;\n  }, []);\n\n  const analysisOptions = [\n    { id: 'unified', label: 'Unified Analysis', icon: Zap },\n    { id: 'dcf', label: 'DCF Monte Carlo', icon: TrendingUp },\n    { id: 'lbo', label: 'LBO Monte Carlo', icon: Target },\n    { id: 'correlation', label: 'Cross-Model Risk', icon: Activity }\n  ];\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Zap className=\"text-purple-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Monte Carlo Integration Hub</h2>\n            <p className=\"text-gray-600\">Cross-model risk analysis & unified simulations</p>\n          </div>\n        </div>\n\n        <div className=\"flex space-x-3\">\n          <motion.button\n            onClick={runIntegratedSimulation}\n            disabled={isRunning}\n            className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n              isRunning\n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                : 'bg-purple-600 hover:bg-purple-700 text-white'\n            }`}\n            whileHover={!isRunning ? { scale: 1.02 } : {}}\n            whileTap={!isRunning ? { scale: 0.98 } : {}}\n          >\n            <Play size={18} />\n            <span>{isRunning ? 'Running...' : 'Run Integrated Simulation'}</span>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Progress Bar */}\n      {isRunning && (\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-medium text-gray-700\">Simulation Progress</span>\n            <span className=\"text-sm text-gray-500\">{progress.toFixed(0)}%</span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div\n              className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${progress}%` }}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Simulation Settings */}\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n        <h3 className=\"font-semibold mb-3\">Simulation Settings</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Iterations</label>\n            <input\n              type=\"number\"\n              value={simulationSettings.iterations}\n              onChange={(e) => setSimulationSettings(prev => ({\n                ...prev,\n                iterations: parseInt(e.target.value) || 10000\n              }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Confidence Level</label>\n            <select\n              value={simulationSettings.confidenceLevel}\n              onChange={(e) => setSimulationSettings(prev => ({\n                ...prev,\n                confidenceLevel: parseFloat(e.target.value)\n              }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            >\n              <option value={0.90}>90%</option>\n              <option value={0.95}>95%</option>\n              <option value={0.99}>99%</option>\n            </select>\n          </div>\n\n          <div className=\"flex items-end\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={simulationSettings.correlationsEnabled}\n                onChange={(e) => setSimulationSettings(prev => ({\n                  ...prev,\n                  correlationsEnabled: e.target.checked\n                }))}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Cross-Model Correlations</span>\n            </label>\n          </div>\n\n          <div className=\"flex items-end\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={simulationSettings.crossModelAnalysis}\n                onChange={(e) => setSimulationSettings(prev => ({\n                  ...prev,\n                  crossModelAnalysis: e.target.checked\n                }))}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Cross-Model Analysis</span>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Analysis Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {analysisOptions.map((option) => {\n            const Icon = option.icon;\n            return (\n              <button\n                key={option.id}\n                onClick={() => setActiveAnalysis(option.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeAnalysis === option.id\n                    ? 'border-purple-500 text-purple-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{option.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Results Display */}\n      {integratedResults ? (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"space-y-6\"\n        >\n          {/* Unified Analysis */}\n          {activeAnalysis === 'unified' && (\n            <div className=\"space-y-6\">\n              {/* Key Metrics Summary */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                {integratedResults.dcf && (\n                  <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-blue-600\">\n                      {formatCurrency(integratedResults.dcf.analysis?.summary?.mean || 0)}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">DCF Expected Value</div>\n                  </div>\n                )}\n\n                {integratedResults.lbo && (\n                  <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-green-600\">\n                      {formatPercent(integratedResults.lbo.analysis?.summary?.mean || 0)}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">LBO Expected IRR</div>\n                  </div>\n                )}\n\n                {integratedResults.correlation && (\n                  <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-purple-600\">\n                      {(integratedResults.correlation.dcfLboCorrelation || 0).toFixed(2)}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">DCF-LBO Correlation</div>\n                  </div>\n                )}\n\n                <div className=\"bg-orange-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-orange-600\">\n                    {simulationSettings.iterations.toLocaleString()}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Simulations Run</div>\n                </div>\n              </div>\n\n              {/* Risk Correlation Matrix */}\n              {integratedResults.correlation && (\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Cross-Model Risk Analysis</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Correlation Strength</div>\n                      <div className=\"text-2xl font-bold text-purple-600\">\n                        {integratedResults.correlation.interpretation}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">\n                        {integratedResults.correlation.riskImplication}\n                      </div>\n                    </div>\n\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Risk Diversification</div>\n                      <div className=\"text-2xl font-bold text-blue-600\">\n                        {Math.abs(integratedResults.correlation.dcfLboCorrelation) < 0.5 ? 'High' : 'Low'}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">Portfolio benefit</div>\n                    </div>\n\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Confidence Level</div>\n                      <div className=\"text-2xl font-bold text-green-600\">\n                        {formatPercent(simulationSettings.confidenceLevel)}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">Statistical confidence</div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Portfolio-Level Insights */}\n              {integratedResults.portfolio && (\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Portfolio-Weighted Analysis</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Scenario-Weighted DCF</div>\n                      <div className=\"text-xl font-bold text-blue-600\">\n                        {formatCurrency(integratedResults.portfolio.dcfWeighted || 0)}\n                      </div>\n                    </div>\n\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Scenario-Weighted LBO IRR</div>\n                      <div className=\"text-xl font-bold text-green-600\">\n                        {formatPercent(integratedResults.portfolio.lboWeighted || 0)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Individual Analysis Views */}\n          {activeAnalysis === 'dcf' && integratedResults.dcf && (\n            <div className=\"bg-gray-50 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">DCF Monte Carlo Results</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-blue-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.summary?.mean || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Mean Value</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-green-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.percentiles?.pricePerShare?.p95 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">95th Percentile</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-red-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.percentiles?.pricePerShare?.p5 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">5th Percentile</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-purple-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.summary?.standardDeviation || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Std Deviation</div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeAnalysis === 'lbo' && integratedResults.lbo && (\n            <div className=\"bg-gray-50 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">LBO Monte Carlo Results</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-green-600\">\n                    {formatPercent(integratedResults.lbo.analysis?.summary?.mean || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Mean IRR</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-blue-600\">\n                    {formatPercent(integratedResults.lbo.analysis?.percentiles?.irr?.p95 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">95th Percentile IRR</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-red-600\">\n                    {formatPercent(integratedResults.lbo.analysis?.percentiles?.irr?.p5 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">5th Percentile IRR</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-purple-600\">\n                    {((integratedResults.lbo.analysis?.percentiles?.moic?.p95 || 0) +\n                      (integratedResults.lbo.analysis?.percentiles?.moic?.p5 || 0)) / 2}x\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Avg MOIC</div>\n                </div>\n              </div>\n            </div>\n          )}\n        </motion.div>\n      ) : (\n        <div className=\"text-center py-12 text-gray-500\">\n          <Zap size={48} className=\"mx-auto mb-4 opacity-50\" />\n          <p>Configure settings and run integrated simulation to see cross-model analysis</p>\n          <p className=\"text-sm mt-2\">\n            {!dcfResults && !lboResults ? 'Run DCF and/or LBO analysis first to enable Monte Carlo integration' :\n              'Ready to run comprehensive Monte Carlo analysis'}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MonteCarloIntegrationHub;\n","import { motion, AnimatePresence } from 'framer-motion';\nimport {\n  Save,\n  Upload,\n  Download,\n  CheckCircle,\n  Activity,\n  FileText,\n  AlertCircle,\n  Clock,\n  Database,\n  Sidebar\n} from 'lucide-react';\nimport React, { useState, useEffect } from 'react';\n\nimport DataExportImport from '../components/DataExportImport';\nimport AdvancedLBOTool from '../components/PrivateAnalysis/AdvancedLBOTool';\nimport AnalysisResults from '../components/PrivateAnalysis/AnalysisResults';\nimport ContextualInsightsSidebar from '../components/PrivateAnalysis/ContextualInsightsSidebar';\nimport EnhancedMarketDataDashboard from '../components/PrivateAnalysis/EnhancedMarketDataDashboard';\nimport EnhancedScenarioAnalysis from '../components/PrivateAnalysis/EnhancedScenarioAnalysis';\nimport FinancialModelWorkspace from '../components/PrivateAnalysis/FinancialModelWorkspace';\nimport FinancialSpreadsheet from '../components/PrivateAnalysis/FinancialSpreadsheet';\nimport ModelingTools from '../components/PrivateAnalysis/ModelingTools';\nimport MonteCarloIntegrationHub from '../components/PrivateAnalysis/MonteCarloIntegrationHub';\nimport WorkflowNavigation from '../components/PrivateAnalysis/WorkflowNavigation';\nimport SEOHead from '../components/SEO/SEOHead';\nimport Button from '../components/ui/Button';\nimport Header from '../components/ui/Header';\nimport defaultFinancialData from '../data/defaultFinancialData';\nimport { formatCurrency, formatPercentage } from '../utils/dataTransformation';\nimport { calculateDCF } from '../utils/dcfCalculations';\n\n// Simple Error Boundary component\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Component error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return this.props.fallback || (\n        <div className=\"p-8 text-center text-red-400\">\n          Something went wrong. Please refresh the page.\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst PrivateAnalysis = () => {\n  const [activeTab, setActiveTab] = useState('spreadsheet');\n  const [advancedResults, setAdvancedResults] = useState({\n    lbo: null,\n    threeStatement: null,\n    scenarios: null,\n    marketData: null,\n    monteCarlo: null\n  });\n  const [financialData, setFinancialData] = useState(defaultFinancialData);\n  const [adjustedValues, setAdjustedValues] = useState({});\n  const [modelInputs, setModelInputs] = useState({\n    dcf: {\n      discountRate: 10,\n      terminalGrowthRate: 2.5,\n      projectionYears: 5,\n      taxRate: 25\n    },\n    scenario: {\n      scenarios: []\n    }\n  });\n\n  // Insights sidebar state\n  const [insightsSidebarVisible, setInsightsSidebarVisible] = useState(false);\n  const [currentMetricFocus, setCurrentMetricFocus] = useState(null);\n\n  const [savedAnalyses, setSavedAnalyses] = useState(() => {\n    try {\n      const saved = localStorage.getItem('privateAnalyses');\n      return saved ? JSON.parse(saved) : [];\n    } catch (error) {\n      console.error('Error loading saved analyses:', error);\n      return [];\n    }\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [dataStatus, setDataStatus] = useState('ready');\n  const [lastSaved, setLastSaved] = useState(null);\n\n  // Enhanced data completeness tracking\n  const getDataCompleteness = () => {\n    if (!financialData?.statements) return 0;\n\n    const coreIncomeFields = ['totalRevenue', 'totalCostOfGoodsSold', 'operatingIncome', 'netIncome'];\n    const optionalBalanceFields = ['totalAssets', 'totalLiabilities', 'totalEquity'];\n    const optionalCashFlowFields = ['operatingCashFlow', 'investingCashFlow', 'financingCashFlow'];\n\n    let completedFields = 0;\n    let totalWeightedFields = 0;\n\n    // Check core income statement fields (weighted more heavily)\n    coreIncomeFields.forEach(field => {\n      totalWeightedFields += 3; // Core fields worth 3 points each\n      if (financialData.statements.incomeStatement?.[field]?.[2] !== undefined) {\n        completedFields += 3;\n      }\n    });\n\n    // Check optional balance sheet fields\n    optionalBalanceFields.forEach(field => {\n      totalWeightedFields += 2; // Optional fields worth 2 points each\n      if (financialData.statements.balanceSheet?.[field]?.[2] !== undefined) {\n        completedFields += 2;\n      }\n    });\n\n    // Check cash flow fields\n    optionalCashFlowFields.forEach(field => {\n      totalWeightedFields += 2;\n      if (financialData.statements.cashFlow?.[field]?.[2] !== undefined) {\n        completedFields += 2;\n      }\n    });\n\n    const completionPercentage = Math.round((completedFields / totalWeightedFields) * 100);\n\n    // If we have core income statement data, ensure minimum 80% completion\n    const hasBasicIncomeData = financialData?.statements?.incomeStatement?.totalRevenue?.[2] !== undefined &&\n                              financialData?.statements?.incomeStatement?.operatingIncome?.[2] !== undefined;\n\n    return hasBasicIncomeData ? Math.max(completionPercentage, 80) : completionPercentage;\n  };\n\n  const calculateModelingProgress = () => {\n    let progress = 0;\n\n    // DCF Model completion\n    if (modelInputs?.dcf?.discountRate && modelInputs?.dcf?.terminalGrowthRate) {\n      progress += 40;\n    }\n\n    // Enhanced data completeness boost\n    const dataCompleteness = getDataCompleteness();\n    if (dataCompleteness >= 80) {\n      progress += 20; // Comprehensive data gets boost\n    }\n\n    // Scenario analysis completion\n    if (modelInputs?.scenario?.scenarios && modelInputs.scenario.scenarios.length > 0) {\n      progress += 20;\n    }\n\n    // Advanced tools usage\n    if (advancedResults.lbo || advancedResults.threeStatement || advancedResults.monteCarlo) {\n      progress += 20;\n    }\n\n    return Math.min(progress, 100);\n  };\n\n  const calculateAnalysisProgress = () => {\n    let progress = 0;\n\n    // Basic DCF analysis\n    if (financialData?.statements?.incomeStatement) {\n      progress += 30;\n    }\n\n    // Advanced modeling results\n    if (advancedResults.lbo) progress += 20;\n    if (advancedResults.threeStatement) progress += 20;\n    if (advancedResults.scenarios) progress += 15;\n    if (advancedResults.monteCarlo) progress += 15;\n\n    return Math.min(progress, 100);\n  };\n\n  const saveAnalysis = async(name) => {\n    try {\n      setIsLoading(true);\n      setDataStatus('saving');\n\n      const analysis = {\n        id: Date.now().toString(),\n        name: name || `Analysis ${new Date().toLocaleDateString()}`,\n        timestamp: new Date().toISOString(),\n        financialData,\n        adjustedValues,\n        modelInputs,\n        advancedResults,\n        dataCompleteness: getDataCompleteness(),\n        modelingProgress: calculateModelingProgress(),\n        analysisProgress: calculateAnalysisProgress()\n      };\n\n      const updated = [...savedAnalyses, analysis];\n      setSavedAnalyses(updated);\n\n      try {\n        localStorage.setItem('privateAnalyses', JSON.stringify(updated));\n      } catch (error) {\n        console.error('Error saving analysis:', error);\n        throw new Error('Failed to save analysis to localStorage');\n      }\n\n      setDataStatus('ready');\n      setLastSaved(new Date());\n\n    } catch (error) {\n      console.error('Save failed:', error);\n      setDataStatus('error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const loadAnalysis = (analysisId) => {\n    const analysis = savedAnalyses.find(a => a.id === analysisId);\n    if (analysis) {\n      setFinancialData(analysis.financialData);\n      setAdjustedValues(analysis.adjustedValues);\n      setModelInputs(analysis.modelInputs);\n      setAdvancedResults(analysis.advancedResults || {\n        lbo: null, threeStatement: null, scenarios: null, marketData: null, monteCarlo: null\n      });\n    }\n  };\n\n  const deleteAnalysis = (analysisId) => {\n    try {\n      const updated = savedAnalyses.filter(a => a.id !== analysisId);\n      setSavedAnalyses(updated);\n      localStorage.setItem('privateAnalyses', JSON.stringify(updated));\n    } catch (error) {\n      console.error('Error deleting analysis:', error);\n    }\n  };\n\n  const handleInsightClick = (insight) => {\n    setCurrentMetricFocus(insight.metric);\n  };\n\n  const toggleInsightsSidebar = () => {\n    setInsightsSidebarVisible(!insightsSidebarVisible);\n  };\n\n  // Auto-show insights sidebar when analysis becomes available\n  useEffect(() => {\n    if (calculateAnalysisProgress() > 60 && !insightsSidebarVisible) {\n      setInsightsSidebarVisible(true);\n    }\n  }, [financialData, advancedResults, insightsSidebarVisible]);\n\n  // Status indicator component\n  const StatusIndicator = ({ status, label }) => {\n    const getStatusColor = () => {\n      switch (status) {\n        case 'ready': return 'text-green-400';\n        case 'modified': return 'text-yellow-400';\n        case 'saving': return 'text-blue-400';\n        case 'error': return 'text-red-400';\n        default: return 'text-gray-400';\n      }\n    };\n\n    return (\n      <div className={`flex items-center gap-2 ${getStatusColor()}`}>\n        <div className=\"w-2 h-2 rounded-full bg-current animate-pulse\" />\n        <span className=\"text-sm\">{label}</span>\n      </div>\n    );\n  };\n\n  const tabs = [\n    { id: 'spreadsheet', label: 'Financial Spreadsheet', icon: Database },\n    { id: 'modeling', label: 'Financial Modeling', icon: Activity },\n    { id: 'analysis', label: 'Analysis & Results', icon: FileText },\n    { id: 'lbo', label: 'Advanced LBO', icon: Activity },\n    { id: 'threestatement', label: '3-Statement Model', icon: Database },\n    { id: 'scenarios', label: 'Scenario Analysis', icon: Activity },\n    { id: 'marketdata', label: 'Market Data', icon: Activity },\n    { id: 'montecarlo', label: 'Monte Carlo', icon: Activity },\n    { id: 'import-export', label: 'Import/Export', icon: Upload }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-slate-900 relative\">\n      <SEOHead\n        title=\"Private Analysis Suite | FinanceAnalyst Pro\"\n        description=\"Comprehensive financial analysis platform with advanced modeling tools, scenario analysis, Monte Carlo simulation, and private equity workflows.\"\n        canonical=\"/private-analysis\"\n        keywords=\"private analysis, financial modeling, scenario analysis, Monte Carlo simulation, LBO analysis, private equity tools\"\n      />\n      <Header />\n\n      <main id=\"main-content\" className=\"container mx-auto px-4 py-8\" role=\"main\">\n        {/* Header Section */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h1 className=\"text-3xl font-bold text-white\">Private Analysis</h1>\n\n            <div className=\"flex items-center gap-4\">\n              <StatusIndicator\n                status={dataStatus}\n                label={dataStatus === 'ready' ? 'Ready' : dataStatus === 'saving' ? 'Saving...' : 'Modified'}\n              />\n\n              {lastSaved && (\n                <div className=\"flex items-center gap-2 text-gray-400\">\n                  <Clock className=\"w-4 h-4\" />\n                  <span className=\"text-sm\">Saved {lastSaved.toLocaleTimeString()}</span>\n                </div>\n              )}\n\n              <Button\n                onClick={() => saveAnalysis()}\n                disabled={isLoading}\n                className=\"flex items-center gap-2\"\n                variant=\"primary\"\n              >\n                <Save className=\"w-4 h-4\" />\n                {isLoading ? 'Saving...' : 'Save'}\n              </Button>\n            </div>\n          </div>\n\n          {/* Progress Indicators */}\n          <div className=\"grid grid-cols-2 gap-4 mb-6\">\n            <div className=\"bg-slate-800 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-gray-400\">Data Completeness</span>\n                <span className=\"text-white font-semibold\">{getDataCompleteness()}%</span>\n              </div>\n              <div className=\"w-full bg-slate-700 rounded-full h-2\">\n                <div\n                  className=\"bg-blue-500 h-2 rounded-full transition-all duration-500\"\n                  style={{ width: `${getDataCompleteness()}%` }}\n                />\n              </div>\n            </div>\n\n            <div className=\"bg-slate-800 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-gray-400\">Analysis Progress</span>\n                <span className=\"text-white font-semibold\">{calculateAnalysisProgress()}%</span>\n              </div>\n              <div className=\"w-full bg-slate-700 rounded-full h-2\">\n                <div\n                  className=\"bg-green-500 h-2 rounded-full transition-all duration-500\"\n                  style={{ width: `${calculateAnalysisProgress()}%` }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"mb-6\">\n          <div className=\"flex flex-wrap gap-2 p-1 bg-slate-800 rounded-lg\">\n            {tabs.map(tab => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`\n                    flex items-center gap-2 px-4 py-2 rounded-md transition-all duration-200\n                    ${\n                activeTab === tab.id\n                  ? 'bg-blue-600 text-white shadow-lg'\n                  : 'text-gray-300 hover:text-white hover:bg-slate-700'\n                }\n                  `}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span className=\"text-sm font-medium\">{tab.label}</span>\n                </button>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Main Content Area */}\n        <div className=\"relative\">\n          <motion.div\n            key={activeTab}\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -10 }}\n            transition={{ duration: 0.2 }}\n          >\n            {activeTab === 'spreadsheet' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading spreadsheet. Please refresh the page.</div>}>\n                <FinancialSpreadsheet\n                  data={financialData}\n                  onDataChange={setFinancialData}\n                  onAdjustedValuesChange={setAdjustedValues}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'modeling' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading modeling tools. Please refresh the page.</div>}>\n                <ModelingTools\n                  data={financialData}\n                  adjustedValues={adjustedValues}\n                  onDataChange={setFinancialData}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'analysis' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading analysis results. Please check your data and refresh.</div>}>\n                <AnalysisResults\n                  data={financialData}\n                  adjustedValues={adjustedValues}\n                  modelInputs={modelInputs}\n                  calculateDCF={(data) => calculateDCF(data, modelInputs)}\n                  formatCurrency={formatCurrency}\n                  formatPercentage={formatPercentage}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'lbo' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading LBO tool. Please check your data.</div>}>\n                <AdvancedLBOTool\n                  data={financialData}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, lbo: results }))}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'threestatement' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading financial model workspace.</div>}>\n                <FinancialModelWorkspace\n                  data={financialData}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, threeStatement: results }))}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'scenarios' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading scenario analysis.</div>}>\n                <EnhancedScenarioAnalysis\n                  data={financialData}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, scenarios: results }))}\n                  calculateDCF={(data) => calculateDCF(data, modelInputs)}\n                  lboModelingEngine={null}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'marketdata' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading market data dashboard.</div>}>\n                <EnhancedMarketDataDashboard\n                  data={financialData}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, marketData: results }))}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'montecarlo' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading Monte Carlo integration.</div>}>\n                <MonteCarloIntegrationHub\n                  data={financialData}\n                  dcfResults={advancedResults.dcf}\n                  lboResults={advancedResults.lbo}\n                  financialModel={advancedResults.threeStatement}\n                  scenarioResults={advancedResults.scenarios}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, monteCarlo: results }))}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'import-export' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading import/export tools.</div>}>\n                <DataExportImport\n                  data={financialData}\n                  onDataChange={setFinancialData}\n                  savedAnalyses={savedAnalyses}\n                  onAnalysesChange={setSavedAnalyses}\n                />\n              </ErrorBoundary>\n            )}\n          </motion.div>\n        </div>\n\n        {/* Contextual Insights Sidebar */}\n        <ContextualInsightsSidebar\n          financialData={financialData}\n          currentMetric={currentMetricFocus}\n          analysisContext={activeTab === 'analysis' ? 'dcf' : activeTab}\n          onInsightClick={handleInsightClick}\n          isVisible={insightsSidebarVisible}\n          onToggle={toggleInsightsSidebar}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default PrivateAnalysis;\n"],"names":["monteCarloEngine","constructor","this","workers","isRunning","currentSimulation","runDCFSimulation","baseInputs","distributions","options","iterations","confidenceLevel","correlationMatrix","randomSeed","apiLogger","log","variables","Object","keys","length","startTime","Date","now","setSeed","samples","generateCorrelatedSamples","results","progressCallback","onProgress","i","Error","scenarioInputs","createScenarioInputs","dcfResult","calculateDCFScenario","push","iteration","pricePerShare","enterpriseValue","upside","inputs","Math","floor","analysis","analyzeResults","endTime","duration","meanPrice","statistics","mean","type","timestamp","toISOString","parameters","error","message","runLBOSimulation","lboResult","calculateLBOScenario","irr","moic","totalReturn","meanIRR","numVars","independentSamples","sample","forEach","variable","dist","sampleFromDistribution","choleskyMatrix","choleskyDecomposition","correlatedSample","independentValues","map","v","correlatedValues","applyCorrelation","index","distribution","normalRandom","stdDev","normalSample","mu","sigma","exp","min","random","max","triangularRandom","mode","betaRandom","alpha","beta","exponentialRandom","lambda","weibullRandom","shape","scale","paretoRandom","studentTRandom","df","chiSquaredRandom","u","pow","normal","chiSq","sqrt","gammaRandom","undefined","spareNormal","spare","u1","u2","z0","cos","PI","z1","sin","x","d","c","matrix","n","L","Array","fill","j","sum","k","entries","applyTo","currentRevenue","revenueGrowthRate","fcfMargin","wacc","terminalGrowthRate","sharesOutstanding","currentPrice","totalPV","revenue","year","ebitda","ebitdaGrowthRate","exitMultiple","debtMultiple","holdingPeriod","debt","equity","exitProceeds","metrics","percentiles","confidenceIntervals","riskMetrics","distributionTests","correlations","metric","values","r","filter","isNaN","sort","a","b","reduce","variance","sampleStdDev","median","percentile","calculateMode","range","count","trimmedMean","calculateTrimmedMean","mad","calculateMAD","iqr","p1","p5","p10","p25","p50","p75","p90","p95","p99","lowerBound","upperBound","level","width","bootstrapCI","calculateBootstrapCI","var95","var99","cvar95","slice","cvar99","skewness","calculateSkewness","kurtosis","calculateKurtosis","excessKurtosis","expectedShortfall","maxDrawdown","calculateMaxDrawdown","sharpeRatio","calculateSharpeRatio","sortinoRatio","calculateSortinoRatio","jarqueBera","jarqueBeraTest","kolmogorovSmirnov","ksTestNormality","shapiroWilk","shapiroWilkTest","calculateCorrelationMatrix","frequency","rounded","round","maxFreq","modes","parseFloat","sortedValues","trimProportion","trimCount","trimmedValues","deviations","abs","bootstrapSamples","bootstrapMeans","peak","value","drawdown","riskFreeRate","targetReturn","excessReturns","negativeReturns","Infinity","downsideDeviation","meanExcessReturn","jb","pValue","chiSquaredCDF","statistic","isNormal","incompleteGamma","term","logGamma","h","an","del","coef","ser","xx","y","tmp","maxD","empirical","theoretical","normalCDF","critical","erf","sign","t","denominator","w","valuesI","valuesJ","calculateCorrelation","meanX","meanY","numerator","sumXX","sumYY","dx","dy","p","lower","upper","ceil","weight","seed","stopSimulation","isSimulationRunning","STORAGE_CONFIG","enabled","threshold","maxSize","cleanupThreshold","DATA_SCHEMAS","dcfModel","version","required","structure","symbol","assumptions","projections","valuation","metadata","lboModel","transaction","financing","returns","monteCarloResults","modelType","userPreferences","theme","layout","notifications","privacy","marketData","data","source","storageService","isAvailable","checkStorageAvailability","compressionWorker","initializeCompression","setupQuotaMonitoring","test","localStorage","setItem","removeItem","e","window","compressionAvailable","navigator","storage","monitorQuota","estimate","usageRatio","usage","quota","ratio","performCleanup","generateKey","identifier","validateData","schemaType","schema","field","expectedType","actualType","isArray","compressData","jsonString","JSON","stringify","compressed","simpleCompress","btoa","encodeURIComponent","decompressData","compressedData","isCompressed","decodeURIComponent","atob","storageObject","schemaVersion","size","processedData","finalObject","key","getItem","stored","parsedStored","parse","decompressedData","current","age","listItems","prefix","items","startsWith","replace","cutoffTime","cleanedCount","_error","getStorageStats","totalSize","itemCount","typeStats","split","getQuotaInfo","clearAll","clearedCount","financialDataStorage","saveDCFModel","modelData","dcfData","toUpperCase","createdAt","lastModified","intrinsicValue","getDCFModel","listDCFModels","deleteDCFModel","saveLBOModel","lboData","getLBOModel","listLBOModels","deleteLBOModel","saveMonteCarloResults","modelId","resultsData","mcData","getMonteCarloResults","listMonteCarloResults","deleteMonteCarloResults","saveMarketData","ttlMinutes","expiresAt","getMarketData","deleteMarketData","saveUserPreferences","preferences","prefData","lastUpdated","getUserPreferences","saveWatchlist","name","symbols","watchlistData","s","symbolCount","getWatchlist","listWatchlists","deleteWatchlist","exportAllData","exportData","dcfModels","lboModels","watchlists","mcResults","dcfCount","lboCount","mcCount","watchlistCount","importData","importCount","getFinancialDataStats","financialData","cleanupExpiredMarketData","marketDataKeys","defaultTemplates","id","category","lastUsed","uses","DataExportImport","_data","onDataChange","_onDataChange","savedAnalyses","_savedAnalyses","onAnalysesChange","_onAnalysesChange","onClose","className","_className","activeTab","setActiveTab","useState","isExporting","setIsExporting","isImporting","setIsImporting","exportStatus","setExportStatus","importStatus","setImportStatus","stats","setStats","templates","_setTemplates","collaborators","_setCollaborators","email","role","lastActive","avatar","React","useEffect","loadStats","async","storageStats","handleExport","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","details","totalItems","children","jsxs","jsx","onClick","label","icon","FileSpreadsheet","Bookmark","Users","Download","Upload","Database","tab","Icon","Info","disabled","Fragment","Loader2","CheckCircle","AlertCircle","template","collaborator","FileText","accept","onChange","event","file","target","files","text","toLocaleString","bytes","toFixed","formatBytes","AdvancedLBOTool","lboResults","setLBOResults","isCalculating","setIsCalculating","lboInputs","setLBOInputs","companyName","purchasePrice","equityContribution","seniorDebtMultiple","subordinatedDebtMultiple","seniorInterestRate","subordinatedInterestRate","capexAsPercentOfRevenue","nwcAsPercentOfRevenue","transactionFees","managementFees","taxRate","formatCurrency","useCallback","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercent","calculateLBO","modelInputs","operating","exit","lboModelingEngine","buildLBOModel","alert","handleInputChange","prev","Building2","motion","button","Calculator","DollarSign","BarChart3","div","initial","opacity","animate","htmlFor","step","baseCase","returnsAnalysis","transactionStructure","debtToEbitda","exitAnalysis","equityProceeds","totalDebt","entryMultiple","equityPercentage","scenarios","scenario","AnalysisResults","adjustedValues","calculateDCF","formatPercentage","useMemo","statements","incomeStatement","income","periods","totalRevenue","parseInt","latest","previous","earliest","revenueLatest","revenuePrevious","revenueEarliest","grossProfitLatest","grossProfit","grossProfitPrevious","operatingIncomeLatest","operatingIncome","operatingIncomePrevious","revenueGrowthYoY","totalCostOfGoodsSold","revenueCAGR","operatingIncomeGrowth","grossMarginLatest","grossMarginPrevious","operatingMarginLatest","operatingMarginPrevious","marginImprovement","isFinite","operatingMarginChange","dcfResults","revenueBreakdown","Number","energyDevices","injectables","wellness","weightloss","retailSales","surgery","item","totalAssets","totalEquity","currentAssets","currentLiabilities","inventory","accountsReceivable","cashAndEquivalents","returnOnAssets","returnOnEquity","debtToEquity","currentRatio","quickRatio","assetTurnover","inventoryTurnover","receivablesTurnover","cashRatio","workingCapital","workingCapitalRatio","operatingCycle","cashConversionCycle","operatingLeverage","profitabilityTrend","financialLeverage","interestCoverage","interestExpense","debtServiceCoverage","debtService","revenuePerEmployee","employeeCount","revenuePerShare","bookValuePerShare","industryBenchmarks","grossMargin","operatingMargin","revenueGrowth","benchmarkComparison","kpis","title","trend","description","TrendingUp","benchmark","performance","Percent","Target","Award","Shield","Zap","CreditCard","liquidityMetrics","formatted","status","efficiencyMetrics","growth","cagr","profitability","grossMarginChange","financial","liquidity","efficiency","risk","market","benchmarks","industry","comparison","dcf","AlertTriangle","MetricCard","TrendingDown","includes","kpi","Eye","Timer","Gauge","Activity","sharePrice","terminalValue","PieChart","unit","percentage","ContextualInsightsSidebar","currentMetric","analysisContext","onInsightClick","isVisible","onToggle","expandedSections","setExpandedSections","insights","suggestions","healthcare","ebitdaMargin","roe","technology","manufacturing","contextualInsights","content","action","latestRevenue","latestOperatingIncome","generateContextualInsights","toggleSection","section","renderBenchmarkBar","currentPos","benchmarkPos","left","X","ChevronDown","ChevronRight","AnimatePresence","height","insight","colors","info","assumption","Lightbulb","colorClass","transition","delay","suggestion","idx","renderInsightItem","EnhancedMarketDataDashboard","activeView","setActiveView","watchlist","setWatchlist","price","change","changePercent","setMarketData","indices","NASDAQ","DOW","sectors","economicIndicators","Unemployment","alerts","setAlerts","condition","active","newSymbol","setNewSymbol","isLoading","setIsLoading","getChangeColor","getChangeIcon","Minus","interval","setInterval","clearInterval","addToWatchlist","trim","Promise","resolve","setTimeout","newItem","removeFromWatchlist","chartData","from","_","time","getTime","toLocaleDateString","SPY","QQQ","VIX","pair","correlation","strength","whileHover","RefreshCw","Settings","Globe","LineChart","Bell","ChangeIcon","sector","placeholder","onKeyPress","Plus","ResponsiveContainer","RechartsLineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","strokeWidth","corr","EnhancedScenarioAnalysis","setScenarios","probability","marginExpansion","capexIntensity","isBase","analysisSettings","setAnalysisSettings","outputMetric","includeCorrelations","numSimulations","setResults","runScenarioAnalysis","scenarioResults","result","scenarioData","rev","equityValue","weightedValue","valueRange","standardDeviation","deviation","summary","coefficientOfVariation","probabilityOfPositiveReturn","currentMarketCap","addScenario","newScenario","updateScenario","deleteScenario","totalProbability","Play","checked","Trash2","BarChart","tickFormatter","formatter","Bar","FinancialModelWorkspace","activeStatement","setActiveStatement","setModelData","costOfGoodsSold","operatingExpenses","depreciation","ebit","ebt","taxes","netIncome","cash","totalCurrentAssets","ppe","accountsPayable","shortTermDebt","totalCurrentLiabilities","longTermDebt","totalLiabilities","shareholderEquity","totalLiabilitiesEquity","operatingCashFlow","capex","investingCashFlow","debtRepayment","financingCashFlow","netCashFlow","endingCash","setAssumptions","cogsPercentOfRevenue","opexGrowthRate","depreciationRate","capexPercentOfRevenue","debtPaydown","validationErrors","setValidationErrors","recalculateModel","newData","wcChange","errors","handleAssumptionChange","Building","statement","period","periodIdx","colSpan","isPercent","FinancialSpreadsheet","onAdjustedValuesChange","setAdjustedValues","useFinancialAccessibility","salariesBenefits","incomeBeforeTax","otherIncomeExpense","nonCurrentAssets","nonCurrentLiabilities","operatingActivities","investingActivities","financingActivities","editingCell","setEditingCell","cellValue","setCellValue","inputRef","useRef","newAdjustedValues","incomeStatementTemplate","color","headerBg","textColor","bold","formula","balanceSheetTemplate","cashFlowTemplate","currentTemplate","getCurrentTemplate","handleCellClick","rowKey","periodIndex","isAdjusted","currentValue","toString","handleCellBlur","newValue","handleKeyPress","preventDefault","validateNumericInput","formatNumber","numValue","absValue","formattedValue","focus","select","newPeriodLabel","prompt","sectionKey","stopPropagation","addNewRow","indentClass","textWeight","rowBg","borderColor","Edit2","ref","onBlur","onKeyDown","renderRow","DataVisualization","sensitivityData","activeChart","setActiveChart","showDetails","setShowDetails","chartTypes","PieChartIcon","dcfWaterfallData","years","cumulativeValue","startValue","presentValue","cumulative","start","freeCashFlow","terminalStart","presentValueTerminal","cashFlowTrendData","workingCapitalChange","sensitivityTornadoData","maxUpside","dataPoints","changeFromBase","maxDownside","definition","downside","scenarioDistributionData","CustomTooltip","payload","chartType","entry","DCFWaterfallChart","margin","top","right","bottom","CashFlowTrendChart","Legend","SensitivityTornadoChart","labelFormatter","ScenarioDistributionChart","Pie","cx","cy","outerRadius","Cell","ValuationBridgeChart","bridgeData","cumulativePV","EyeOff","chart","whileTap","find","freeCashFlows","join","WACCCalculator","onModelInputChange","waccInputs","marketRiskPremium","smallCompanyPremium","companySpecificRisk","debtInterestRate","marketValueEquity","marketValueDebt","buildUpMethod","equityRiskPremium","sizeRiskPremium","industryRiskPremium","industryWACC","industryBeta","industryDebtEquityRatio","waccCalculation","costOfEquityCAPM","costOfEquityBuildUp","costOfDebtAfterTax","totalCapital","equityWeight","debtWeight","waccCAPM","waccBuildUp","finalWACC","debtToEquityRatio","updateWACCInput","updatedWACC","tabs","applyWACCToDCF","waccValue","BookOpen","AdvancedDCF","_showDetails","_setShowDetails","_showAssumptions","_setShowAssumptions","advancedDCFResults","discountRate","projectionYears","workingCapitalAssumptions","receivablesDays","inventoryDays","payablesDays","capexAssumptions","presentValues","workingCapitalChanges","capexAmounts","unleveredFreeCashFlow","impliedShare","baseRevenue","yearData","nopat","previousRevenue","currentReceivables","currentInventory","currentPayables","receivablesChange","inventoryChange","payablesChange","discountFactor","terminalFCF","terminalDiscountFactor","updateDCFAssumption","updatedDCF","updateBasicAssumption","charAt","ComparableAnalysis","_formatPercent","selectedMultiple","setSelectedMultiple","showAddComp","setShowAddComp","comparableCompanies","setComparableCompanies","ticker","marketCap","employees","founded","geography","businessModel","comparableMultiples","comp","multiples","ev_revenue","ev_ebitda","pe_ratio","revenue_per_employee","market_cap_revenue","marketStats","calculateStats","m","impliedValuation","targetRevenue","targetEBITDA","targetNetIncome","multipleDefinitions","def","_index","multiple","Search","Filter","removeComparable","onSubmit","formData","FormData","companyData","newCompany","getFullYear","addComparableCompany","fromEntries","MonteCarloSimulation","simulationResults","setSimulationResults","setIsRunning","progress","setProgress","simulationSettings","setSimulationSettings","enableCorrelation","setDistributions","setCorrelationMatrix","distributionTypes","runSimulation","enabledDistributions","latestIndex","currentOperatingIncome","updateDistribution","updates","updateCorrelation","newMatrix","row","generateHistogramData","binWidth","histogram","bin","binIndex","bins","generateScatterData","newType","newParameters","param","Square","every","AreaChart","Area","fillOpacity","ScatterChart","Scatter","ScenarioModeling","showAddForm","setShowAddForm","modifiedRevenue","growthRate","baseOperating","modifiedOperating","baseRevenueValue","scenarioRevenue","baseIncome","adjustedMargin","weightedAverageValue","updatedScenarios","ScenarioForm","SensitivityAnalysis","selectedVariable","setSelectedVariable","sensitivityConfig","sensitivity","ranges","variableDefinitions","baseValue","isPercentage","baseValuation","sensitivityResults","variableDef","stepSize","modifiedData","dcfInputs","originalIncome","dcfParams","operatingIncomeData","operatingIncomes","periodKey","pv","lastYearIncome","presentTerminalValue","presentValueOperations","tempCalculateDCF","tornadoData","maxImpact","positiveImpact","negativeImpact","updateSensitivityRange","updatedRanges","transform","variableName","updatedVariables","removed","removeVariable","point","minHeight","addVariable","ModelingTools","activeModel","setActiveModel","setModelInputs","terminalValueMultiple","receivablesGrowth","inventoryGrowth","payablesGrowth","maintenanceCapex","ratios","compareToIndustry","industryAverages","netMargin","calculatedMetrics","margins","gross","net","isLatestPeriod","totalCOGS","prevRevenue","prevOperating","inputData","sourceData","modelTypes","updateModelInput","MonteCarloIntegrationHub","financialModel","activeAnalysis","setActiveAnalysis","correlationsEnabled","crossModelAnalysis","integratedResults","setIntegratedResults","runIntegratedSimulation","lbo","portfolio","dcfDistributions","lboDistributions","leverageRatio","calculateCrossModelCorrelations","calculateIntegratedRiskMetrics","generatePortfolioAnalysis","monteCarloIntegrated","settings","dcfValues","simulations","lboValues","pearsonCorrelation","dcfLboCorrelation","interpretation","riskImplication","sumX","sumY","sumXY","xi","yi","expectedValue","volatility","acc","dcfWeighted","lboWeighted","analysisOptions","option","ErrorBoundary","Component","props","super","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","fallback","PrivateAnalysis","advancedResults","setAdvancedResults","threeStatement","monteCarlo","setFinancialData","defaultFinancialData","insightsSidebarVisible","setInsightsSidebarVisible","currentMetricFocus","setCurrentMetricFocus","setSavedAnalyses","saved","dataStatus","setDataStatus","lastSaved","setLastSaved","getDataCompleteness","completedFields","totalWeightedFields","balanceSheet","cashFlow","completionPercentage","calculateModelingProgress","calculateAnalysisProgress","StatusIndicator","getStatusColor","SEOHead","canonical","keywords","Header","Clock","toLocaleTimeString","Button","dataCompleteness","modelingProgress","analysisProgress","updated","saveAnalysis","variant","Save"],"mappings":"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"}