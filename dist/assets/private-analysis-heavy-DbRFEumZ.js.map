{"version":3,"file":"private-analysis-heavy-DbRFEumZ.js","sources":["../../src/components/PrivateAnalysis/AdvancedDCF.jsx","../../src/components/PrivateAnalysis/MonteCarloSimulation.jsx","../../src/components/PrivateAnalysis/AdvancedLBOTool.jsx","../../src/components/PrivateAnalysis/EnhancedScenarioAnalysis.jsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { Calculator, TrendingUp, DollarSign, BarChart3, Info, Settings, PieChart } from 'lucide-react';\nimport DataVisualization from './DataVisualization';\nimport WACCCalculator from './WACCCalculator';\n\nconst AdvancedDCF = ({ data, modelInputs, onModelInputChange, formatCurrency, formatPercent }) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const [showAssumptions, setShowAssumptions] = useState(true);\n  const [activeTab, setActiveTab] = useState('results');\n\n  // Enhanced DCF calculation with working capital\n  const advancedDCFResults = useMemo(() => {\n    const { discountRate, terminalGrowthRate, projectionYears, taxRate } = modelInputs.dcf;\n    const statements = data.statements;\n    \n    // Working capital assumptions (if not provided, use defaults)\n    const workingCapitalAssumptions = modelInputs.dcf.workingCapital || {\n      receivablesDays: 45,\n      inventoryDays: 60,\n      payablesDays: 30,\n      receivablesGrowth: 2, // % of revenue\n      inventoryGrowth: 1.5, // % of revenue\n      payablesGrowth: 1.8 // % of revenue\n    };\n\n    // Capex assumptions\n    const capexAssumptions = modelInputs.dcf.capex || {\n      capexAsPercentOfRevenue: 3.5,\n      depreciationRate: 7, // years\n      maintenanceCapex: 2.0 // % of revenue\n    };\n\n    const results = {\n      years: [],\n      freeCashFlows: [],\n      presentValues: [],\n      workingCapitalChanges: [],\n      capexAmounts: [],\n      unleveredFreeCashFlow: [],\n      cumulativePV: 0,\n      terminalValue: 0,\n      presentValueTerminal: 0,\n      enterpriseValue: 0,\n      equityValue: 0,\n      impliedShare: 0\n    };\n\n    // Base year revenue for calculations\n    const baseRevenue = statements.incomeStatement.totalRevenue?.[0] || 100000;\n\n    for (let year = 1; year <= projectionYears; year++) {\n      const yearData = {\n        year,\n        revenue: statements.incomeStatement.totalRevenue?.[year] || 0,\n        operatingIncome: statements.incomeStatement.operatingIncome?.[year] || 0,\n        nopat: 0, // Net Operating Profit After Tax\n        workingCapitalChange: 0,\n        capex: 0,\n        depreciation: 0,\n        freeCashFlow: 0,\n        presentValue: 0\n      };\n\n      // NOPAT calculation\n      yearData.nopat = yearData.operatingIncome * (1 - taxRate / 100);\n\n      // Working capital calculation\n      const currentRevenue = yearData.revenue;\n      const previousRevenue = year > 1 ? (statements.incomeStatement.totalRevenue?.[year - 1] || 0) : baseRevenue;\n      \n      // Calculate working capital components\n      const currentReceivables = (currentRevenue * workingCapitalAssumptions.receivablesDays) / 365;\n      const currentInventory = (currentRevenue * workingCapitalAssumptions.inventoryDays) / 365;\n      const currentPayables = (currentRevenue * workingCapitalAssumptions.payablesDays) / 365;\n      \n      const previousReceivables = (previousRevenue * workingCapitalAssumptions.receivablesDays) / 365;\n      const previousInventory = (previousRevenue * workingCapitalAssumptions.inventoryDays) / 365;\n      const previousPayables = (previousRevenue * workingCapitalAssumptions.payablesDays) / 365;\n\n      const receivablesChange = currentReceivables - previousReceivables;\n      const inventoryChange = currentInventory - previousInventory;\n      const payablesChange = currentPayables - previousPayables;\n\n      // Working capital change (increase is negative for cash flow)\n      yearData.workingCapitalChange = -(receivablesChange + inventoryChange - payablesChange);\n\n      // Capex calculation\n      yearData.capex = -(currentRevenue * capexAssumptions.capexAsPercentOfRevenue / 100);\n      \n      // Depreciation (simplified - based on capex and depreciation rate)\n      yearData.depreciation = Math.abs(yearData.capex) / capexAssumptions.depreciationRate;\n\n      // Free Cash Flow = NOPAT + Depreciation - Capex - Change in Working Capital\n      yearData.freeCashFlow = yearData.nopat + yearData.depreciation + yearData.capex + yearData.workingCapitalChange;\n\n      // Present Value\n      const discountFactor = Math.pow(1 + discountRate / 100, year);\n      yearData.presentValue = yearData.freeCashFlow / discountFactor;\n\n      results.years.push(yearData);\n      results.freeCashFlows.push(yearData.freeCashFlow);\n      results.presentValues.push(yearData.presentValue);\n      results.workingCapitalChanges.push(yearData.workingCapitalChange);\n      results.capexAmounts.push(yearData.capex);\n      results.unleveredFreeCashFlow.push(yearData.freeCashFlow);\n      results.cumulativePV += yearData.presentValue;\n    }\n\n    // Terminal Value calculation\n    const finalYearFCF = results.years[results.years.length - 1]?.freeCashFlow || 0;\n    const terminalFCF = finalYearFCF * (1 + terminalGrowthRate / 100);\n    results.terminalValue = terminalFCF / ((discountRate - terminalGrowthRate) / 100);\n    \n    const terminalDiscountFactor = Math.pow(1 + discountRate / 100, projectionYears);\n    results.presentValueTerminal = results.terminalValue / terminalDiscountFactor;\n\n    // Enterprise Value\n    results.enterpriseValue = results.cumulativePV + results.presentValueTerminal;\n\n    // Simplified equity value (would subtract net debt in reality)\n    const netDebt = 0; // Could be calculated from balance sheet\n    results.equityValue = results.enterpriseValue - netDebt;\n\n    // Implied share price (assuming shares outstanding)\n    const sharesOutstanding = modelInputs.dcf.sharesOutstanding || 1000; // thousands\n    results.impliedShare = results.equityValue / sharesOutstanding;\n\n    return results;\n  }, [data, modelInputs]);\n\n  const updateDCFAssumption = (category, field, value) => {\n    const updatedDCF = {\n      ...modelInputs.dcf,\n      [category]: {\n        ...modelInputs.dcf[category],\n        [field]: parseFloat(value) || 0\n      }\n    };\n    onModelInputChange('dcf', category, updatedDCF[category]);\n  };\n\n  const updateBasicAssumption = (field, value) => {\n    onModelInputChange('dcf', field, parseFloat(value) || 0);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Calculator size={20} />\n            Advanced DCF Valuation\n          </h3>\n          <p className=\"text-gray-600\">\n            Professional-grade DCF with working capital analysis, capex modeling, and detailed cash flow projections.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          {['results', 'charts', 'wacc', 'assumptions'].map((tab) => (\n            <button\n              key={tab}\n              onClick={() => setActiveTab(tab)}\n              className={`px-3 py-2 rounded-lg text-sm transition-colors flex items-center gap-1 ${\n                activeTab === tab ? 'bg-blue-100 text-blue-700' : 'bg-gray-100 text-gray-700'\n              }`}\n            >\n              {tab === 'results' && <DollarSign size={14} />}\n              {tab === 'charts' && <BarChart3 size={14} />}\n              {tab === 'wacc' && <Calculator size={14} />}\n              {tab === 'assumptions' && <Settings size={14} />}\n              {tab.charAt(0).toUpperCase() + tab.slice(1)}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Tab Content */}\n      {activeTab === 'results' && (\n        <>\n          {/* Key Results */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <motion.div \n          className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <DollarSign size={20} className=\"text-green-600\" />\n            <span className=\"text-xs text-green-600 font-medium\">ENTERPRISE VALUE</span>\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {formatCurrency(advancedDCFResults.enterpriseValue)}\n          </div>\n          <div className=\"text-sm text-green-600 mt-1\">\n            PV Operations: {formatCurrency(advancedDCFResults.cumulativePV)}\n          </div>\n        </motion.div>\n\n        <motion.div \n          className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <TrendingUp size={20} className=\"text-blue-600\" />\n            <span className=\"text-xs text-blue-600 font-medium\">EQUITY VALUE</span>\n          </div>\n          <div className=\"text-2xl font-bold text-blue-800\">\n            {formatCurrency(advancedDCFResults.equityValue)}\n          </div>\n          <div className=\"text-sm text-blue-600 mt-1\">\n            Per Share: {formatCurrency(advancedDCFResults.impliedShare)}\n          </div>\n        </motion.div>\n\n        <motion.div \n          className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <BarChart3 size={20} className=\"text-purple-600\" />\n            <span className=\"text-xs text-purple-600 font-medium\">TERMINAL VALUE</span>\n          </div>\n          <div className=\"text-2xl font-bold text-purple-800\">\n            {formatCurrency(advancedDCFResults.terminalValue)}\n          </div>\n          <div className=\"text-sm text-purple-600 mt-1\">\n            PV: {formatCurrency(advancedDCFResults.presentValueTerminal)}\n          </div>\n        </motion.div>\n\n        <motion.div \n          className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Info size={20} className=\"text-orange-600\" />\n            <span className=\"text-xs text-orange-600 font-medium\">IMPLIED MULTIPLE</span>\n          </div>\n          <div className=\"text-2xl font-bold text-orange-800\">\n            {(advancedDCFResults.enterpriseValue / (data.statements.incomeStatement.totalRevenue?.[1] || 1)).toFixed(1)}x\n          </div>\n          <div className=\"text-sm text-orange-600 mt-1\">\n            EV/Revenue (Year 1)\n          </div>\n        </motion.div>\n      </div>\n\n          {/* Detailed Cash Flow Analysis */}\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">Detailed Cash Flow Analysis</h4>\n          \n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full text-sm\">\n              <thead>\n                <tr className=\"border-b bg-gray-50\">\n                  <th className=\"text-left p-3 font-medium\">Year</th>\n                  <th className=\"text-right p-3 font-medium\">Revenue</th>\n                  <th className=\"text-right p-3 font-medium\">Operating Income</th>\n                  <th className=\"text-right p-3 font-medium\">NOPAT</th>\n                  <th className=\"text-right p-3 font-medium\">Depreciation</th>\n                  <th className=\"text-right p-3 font-medium\">Capex</th>\n                  <th className=\"text-right p-3 font-medium\">ΔWorking Capital</th>\n                  <th className=\"text-right p-3 font-medium\">Free Cash Flow</th>\n                  <th className=\"text-right p-3 font-medium\">Present Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                {advancedDCFResults.years.map((yearData, index) => (\n                  <tr key={index} className=\"border-b hover:bg-gray-50\">\n                    <td className=\"p-3 font-medium\">{yearData.year}</td>\n                    <td className=\"p-3 text-right\">{formatCurrency(yearData.revenue)}</td>\n                    <td className=\"p-3 text-right\">{formatCurrency(yearData.operatingIncome)}</td>\n                    <td className=\"p-3 text-right\">{formatCurrency(yearData.nopat)}</td>\n                    <td className=\"p-3 text-right text-green-600\">+{formatCurrency(yearData.depreciation)}</td>\n                    <td className=\"p-3 text-right text-red-600\">{formatCurrency(yearData.capex)}</td>\n                    <td className={`p-3 text-right ${yearData.workingCapitalChange >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                      {yearData.workingCapitalChange >= 0 ? '+' : ''}{formatCurrency(yearData.workingCapitalChange)}\n                    </td>\n                    <td className=\"p-3 text-right font-medium\">{formatCurrency(yearData.freeCashFlow)}</td>\n                    <td className=\"p-3 text-right font-medium\">{formatCurrency(yearData.presentValue)}</td>\n                  </tr>\n                ))}\n                \n                {/* Terminal Value Row */}\n                <tr className=\"border-b-2 border-gray-300 bg-blue-50\">\n                  <td className=\"p-3 font-bold\">Terminal</td>\n                  <td className=\"p-3\"></td>\n                  <td className=\"p-3\"></td>\n                  <td className=\"p-3\"></td>\n                  <td className=\"p-3\"></td>\n                  <td className=\"p-3\"></td>\n                  <td className=\"p-3\"></td>\n                  <td className=\"p-3 text-right font-bold\">{formatCurrency(advancedDCFResults.terminalValue)}</td>\n                  <td className=\"p-3 text-right font-bold\">{formatCurrency(advancedDCFResults.presentValueTerminal)}</td>\n                </tr>\n                \n                {/* Total Row */}\n                <tr className=\"bg-gray-100 font-bold\">\n                  <td className=\"p-3\">TOTAL</td>\n                  <td className=\"p-3\"></td>\n                  <td className=\"p-3\"></td>\n                  <td className=\"p-3\"></td>\n                  <td className=\"p-3\"></td>\n                  <td className=\"p-3\"></td>\n                  <td className=\"p-3\"></td>\n                  <td className=\"p-3\"></td>\n                  <td className=\"p-3 text-right text-lg\">{formatCurrency(advancedDCFResults.enterpriseValue)}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        </>\n      )}\n      \n      {/* Charts Tab */}\n      {activeTab === 'charts' && (\n        <DataVisualization\n          dcfData={advancedDCFResults}\n          sensitivityData={null}\n          scenarioData={null}\n          formatCurrency={formatCurrency}\n          formatPercent={formatPercent}\n        />\n      )}\n      \n      {/* WACC Calculator Tab */}\n      {activeTab === 'wacc' && (\n        <WACCCalculator\n          modelInputs={modelInputs}\n          onModelInputChange={onModelInputChange}\n          formatPercent={formatPercent}\n        />\n      )}\n      \n      {/* Assumptions Tab */}\n      {activeTab === 'assumptions' && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">Model Assumptions</h4>\n          \n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Basic DCF Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Core Assumptions</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Discount Rate (WACC) %\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.discountRate}\n                    onChange={(e) => updateBasicAssumption('discountRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Terminal Growth Rate %\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.terminalGrowthRate}\n                    onChange={(e) => updateBasicAssumption('terminalGrowthRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Tax Rate %\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.taxRate}\n                    onChange={(e) => updateBasicAssumption('taxRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Working Capital Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Working Capital</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Receivables (Days)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.receivablesDays || 45}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'receivablesDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Inventory (Days)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.inventoryDays || 60}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'inventoryDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Payables (Days)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.payablesDays || 30}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'payablesDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Capex Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Capital Expenditure</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Capex (% of Revenue)\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.capex?.capexAsPercentOfRevenue || 3.5}\n                    onChange={(e) => updateDCFAssumption('capex', 'capexAsPercentOfRevenue', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Depreciation Period (Years)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.capex?.depreciationRate || 7}\n                    onChange={(e) => updateDCFAssumption('capex', 'depreciationRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Shares Outstanding (000s)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.sharesOutstanding || 1000}\n                    onChange={(e) => updateBasicAssumption('sharesOutstanding', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdvancedDCF;","import React, { useState, useMemo, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { BarChart3, TrendingUp, AlertTriangle, Play, Square, Settings, Download, FileText, Zap } from 'lucide-react';\nimport { ComposedChart, Bar, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ScatterChart, Scatter, Cell, AreaChart, Area } from 'recharts';\nimport { monteCarloEngine } from '../../services/monteCarloEngine.js';\n\nconst MonteCarloSimulation = ({ data, onDataChange }) => {\n  const [activeTab, setActiveTab] = useState('setup');\n  const [simulationResults, setSimulationResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [simulationSettings, setSimulationSettings] = useState({\n    iterations: 10000,\n    confidenceLevel: 0.95,\n    randomSeed: null,\n    enableCorrelation: false\n  });\n\n  const [distributions, setDistributions] = useState({\n    revenueGrowthRate: {\n      type: 'normal',\n      parameters: { mean: 0.1, stdDev: 0.03 },\n      name: 'Revenue Growth Rate',\n      enabled: true\n    },\n    fcfMargin: {\n      type: 'triangular',\n      parameters: { min: 0.12, mode: 0.15, max: 0.18 },\n      name: 'FCF Margin',\n      enabled: true\n    },\n    wacc: {\n      type: 'normal',\n      parameters: { mean: 0.1, stdDev: 0.015 },\n      name: 'WACC',\n      enabled: true\n    },\n    terminalGrowthRate: {\n      type: 'uniform',\n      parameters: { min: 0.02, max: 0.03 },\n      name: 'Terminal Growth Rate',\n      enabled: true\n    }\n  });\n\n  const [correlationMatrix, setCorrelationMatrix] = useState([\n    [1.0, 0.3, -0.2, 0.1],\n    [0.3, 1.0, -0.4, 0.2],\n    [-0.2, -0.4, 1.0, -0.3],\n    [0.1, 0.2, -0.3, 1.0]\n  ]);\n\n  const distributionTypes = [\n    { value: 'normal', label: 'Normal', parameters: ['mean', 'stdDev'] },\n    { value: 'triangular', label: 'Triangular', parameters: ['min', 'mode', 'max'] },\n    { value: 'uniform', label: 'Uniform', parameters: ['min', 'max'] },\n    { value: 'lognormal', label: 'Log-Normal', parameters: ['mu', 'sigma'] },\n    { value: 'beta', label: 'Beta', parameters: ['alpha', 'beta'] }\n  ];\n\n  const runSimulation = useCallback(async () => {\n    try {\n      // Validate data and settings before starting simulation\n      \n      setIsRunning(true);\n      setProgress(0);\n\n      const enabledDistributions = Object.fromEntries(\n        Object.entries(distributions).filter(([_, dist]) => dist.enabled)\n      );\n      \n      if (Object.keys(enabledDistributions).length === 0) {\n        throw new Error('No distributions are enabled. Please enable at least one variable distribution to run the simulation.');\n      }\n\n      const options = {\n        iterations: simulationSettings.iterations,\n        confidenceLevel: simulationSettings.confidenceLevel,\n        randomSeed: simulationSettings.randomSeed,\n        correlationMatrix: simulationSettings.enableCorrelation ? correlationMatrix : null,\n        onProgress: setProgress\n      };\n\n      // Extract current revenue from actual data structure\n      const statements = data?.statements?.incomeStatement;\n      const latestIndex = data?.periods?.length - 1 || 2;\n      const currentRevenue = statements?.totalRevenue?.[latestIndex] || 1000000;\n      const currentOperatingIncome = statements?.operatingIncome?.[latestIndex] || 150000;\n      \n      const baseInputs = {\n        currentRevenue: currentRevenue * 1000, // Convert from thousands to actual values\n        currentPrice: 100, // Default stock price for private company\n        sharesOutstanding: 1000000, // Default shares outstanding\n        currentOperatingIncome: currentOperatingIncome * 1000,\n        ...Object.fromEntries(\n          Object.entries(enabledDistributions).map(([key, dist]) => [\n            key,\n            dist.parameters.mean || dist.parameters.mode || (dist.parameters.min + dist.parameters.max) / 2\n          ])\n        )\n      };\n\n      const results = await monteCarloEngine.runDCFSimulation(\n        baseInputs,\n        enabledDistributions,\n        options\n      );\n\n      setSimulationResults(results);\n    } catch (error) {\n      console.error('Monte Carlo simulation failed:', error);\n      // Show error to user\n      alert(`Monte Carlo simulation failed: ${error.message}`);\n    } finally {\n      setIsRunning(false);\n      setProgress(0);\n    }\n  }, [distributions, simulationSettings, correlationMatrix, data]);\n\n  const stopSimulation = useCallback(() => {\n    monteCarloEngine.stopSimulation();\n    setIsRunning(false);\n  }, []);\n\n  const updateDistribution = useCallback((variable, updates) => {\n    setDistributions(prev => ({\n      ...prev,\n      [variable]: { ...prev[variable], ...updates }\n    }));\n  }, []);\n\n  const updateCorrelation = useCallback((i, j, value) => {\n    setCorrelationMatrix(prev => {\n      const newMatrix = prev.map(row => [...row]);\n      newMatrix[i][j] = value;\n      newMatrix[j][i] = value; // Keep matrix symmetric\n      return newMatrix;\n    });\n  }, []);\n\n  const generateHistogramData = useMemo(() => {\n    if (!simulationResults?.results) return [];\n\n    const values = simulationResults.results.map(r => r.pricePerShare);\n    const bins = 50;\n    const min = Math.min(...values);\n    const max = Math.max(...values);\n    const binWidth = (max - min) / bins;\n\n    const histogram = Array(bins).fill(0).map((_, i) => ({\n      bin: min + i * binWidth,\n      count: 0,\n      frequency: 0\n    }));\n\n    values.forEach(value => {\n      const binIndex = Math.min(Math.floor((value - min) / binWidth), bins - 1);\n      histogram[binIndex].count++;\n    });\n\n    histogram.forEach(bin => {\n      bin.frequency = bin.count / values.length;\n    });\n\n    return histogram;\n  }, [simulationResults]);\n\n  const generateScatterData = useMemo(() => {\n    if (!simulationResults?.results) return [];\n\n    return simulationResults.results.slice(0, 1000).map((result, i) => ({\n      x: result.inputs.revenueGrowthRate * 100,\n      y: result.pricePerShare,\n      upside: result.upside\n    }));\n  }, [simulationResults]);\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  const formatPercent = (value) => {\n    return `${(value * 100).toFixed(2)}%`;\n  };\n\n  const tabs = [\n    { id: 'setup', label: 'Setup', icon: Settings },\n    { id: 'run', label: 'Run Simulation', icon: Play },\n    { id: 'results', label: 'Results', icon: BarChart3 },\n    { id: 'analysis', label: 'Analysis', icon: TrendingUp }\n  ];\n\n  return (\n    <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n      <div className=\"mb-6\">\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <h2 className=\"text-2xl font-bold text-white mb-2 flex items-center\">\n            <Zap className=\"inline-block mr-2\" />\n            Monte Carlo Simulation\n          </h2>\n          <p className=\"text-gray-400 text-sm\">\n            Advanced risk analysis using probabilistic modeling • Generate thousands of scenarios • Measure uncertainty\n          </p>\n        </motion.div>\n      </div>\n\n      <div className=\"mb-6\">\n        <div className=\"flex space-x-2\">\n          {tabs.map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`px-4 py-2 rounded-lg font-medium transition-colors flex items-center gap-2 ${\n                  activeTab === tab.id \n                    ? 'bg-blue-600 text-white' \n                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                }`}\n              >\n                <Icon size={16} />\n                {tab.label}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"mt-6\">\n        <AnimatePresence mode=\"wait\">\n          {activeTab === 'setup' && (\n            <motion.div\n              key=\"setup\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"space-y-6\">\n                <div className=\"bg-gray-700 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n                    🎛️ Simulation Settings\n                  </h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <label className=\"block text-sm font-medium text-gray-200\">Iterations</label>\n                      <input\n                        type=\"number\"\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.iterations}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          iterations: parseInt(e.target.value)\n                        }))}\n                        min=\"1000\"\n                        max=\"100000\"\n                        step=\"1000\"\n                      />\n                      <small className=\"text-gray-400\">Leave empty for random</small>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label className=\"block text-sm font-medium text-gray-200\">Confidence Level</label>\n                      <select\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.confidenceLevel}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          confidenceLevel: parseFloat(e.target.value)\n                        }))}\n                      >\n                        <option value={0.90}>90%</option>\n                        <option value={0.95}>95%</option>\n                        <option value={0.99}>99%</option>\n                      </select>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label className=\"block text-sm font-medium text-gray-200\">Random Seed (Optional)</label>\n                      <input\n                        type=\"number\"\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.randomSeed || ''}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          randomSeed: e.target.value ? parseInt(e.target.value) : null\n                        }))}\n                        placeholder=\"Leave empty for random\"\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label className=\"flex items-center space-x-2 text-gray-200\">\n                        <input\n                          type=\"checkbox\"\n                          className=\"w-4 h-4 text-blue-600 bg-gray-800 border-gray-600 rounded focus:ring-blue-500\"\n                          checked={simulationSettings.enableCorrelation}\n                          onChange={(e) => setSimulationSettings(prev => ({\n                            ...prev,\n                            enableCorrelation: e.target.checked\n                          }))}\n                        />\n                        <span>Enable Variable Correlation</span>\n                      </label>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-700 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n                    📊 Variable Distributions\n                  </h3>\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                    {Object.entries(distributions).map(([variable, dist]) => (\n                      <div key={variable} className=\"bg-gray-800 border border-gray-600 rounded-lg p-4\">\n                        <div className=\"flex items-center justify-between mb-3\">\n                          <label className=\"flex items-center space-x-2 text-gray-200\">\n                            <input\n                              type=\"checkbox\"\n                              checked={dist.enabled}\n                              onChange={(e) => updateDistribution(variable, { enabled: e.target.checked })}\n                            />\n                            <span className=\"font-medium\">{dist.name}</span>\n                          </label>\n                        </div>\n                        \n                        {dist.enabled && (\n                          <div className=\"space-y-3\">\n                            <div className=\"space-y-2\">\n                              <label className=\"block text-sm font-medium text-gray-200\">Distribution Type</label>\n                              <select\n                                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                                value={dist.type}\n                                onChange={(e) => {\n                                  const newType = e.target.value;\n                                  const typeConfig = distributionTypes.find(t => t.value === newType);\n                                  const newParameters = {};\n                                  \n                                  // Set default parameters for new type\n                                  if (newType === 'normal') {\n                                    newParameters.mean = 0.1;\n                                    newParameters.stdDev = 0.02;\n                                  } else if (newType === 'triangular') {\n                                    newParameters.min = 0.05;\n                                    newParameters.mode = 0.1;\n                                    newParameters.max = 0.15;\n                                  } else if (newType === 'uniform') {\n                                    newParameters.min = 0.05;\n                                    newParameters.max = 0.15;\n                                  }\n                                  \n                                  updateDistribution(variable, { type: newType, parameters: newParameters });\n                                }}\n                              >\n                                {distributionTypes.map(type => (\n                                  <option key={type.value} value={type.value}>\n                                    {type.label}\n                                  </option>\n                                ))}\n                              </select>\n                            </div>\n                            \n                            <div className=\"grid grid-cols-2 gap-3\">\n                              {distributionTypes\n                                .find(t => t.value === dist.type)\n                                ?.parameters.map(param => (\n                                  <div key={param} className=\"space-y-1\">\n                                    <label className=\"block text-xs font-medium text-gray-300\">{param.charAt(0).toUpperCase() + param.slice(1)}</label>\n                                    <input\n                                      className=\"w-full px-2 py-1 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                                      type=\"number\"\n                                      value={dist.parameters[param] || ''}\n                                      onChange={(e) => updateDistribution(variable, {\n                                        parameters: {\n                                          ...dist.parameters,\n                                          [param]: parseFloat(e.target.value)\n                                        }\n                                      })}\n                                      step=\"0.001\"\n                                    />\n                                  </div>\n                                ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {simulationSettings.enableCorrelation && (\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">🔗 Correlation Matrix</h3>\n                    <div className=\"overflow-x-auto\">\n                      <table>\n                        <thead>\n                          <tr>\n                            <th></th>\n                            {Object.keys(distributions).map(variable => (\n                              <th key={variable}>{distributions[variable].name}</th>\n                            ))}\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.keys(distributions).map((variable, i) => (\n                            <tr key={variable}>\n                              <td className=\"font-medium text-gray-200 p-2 border border-gray-600\">\n                                {distributions[variable].name}\n                              </td>\n                              {Object.keys(distributions).map((_, j) => (\n                                <td key={j} className=\"p-2 border border-gray-600\">\n                                  <input\n                                    type=\"number\"\n                                    value={correlationMatrix[i][j]}\n                                    onChange={(e) => updateCorrelation(i, j, parseFloat(e.target.value))}\n                                    min=\"-1\"\n                                    max=\"1\"\n                                    step=\"0.1\"\n                                    disabled={i === j}\n                                    className=\"w-full px-2 py-1 bg-gray-800 border border-gray-600 rounded text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 disabled:bg-gray-700 disabled:text-gray-400\"\n                                  />\n                                </td>\n                              ))}\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'run' && (\n            <motion.div\n              key=\"run\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                  <h3>🚀 Simulation Control</h3>\n                  <div className=\"flex items-center space-x-2\">\n                    {!isRunning ? (\n                      <button\n                        onClick={runSimulation}\n                        className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\"\n                        disabled={Object.values(distributions).every(d => !d.enabled)}\n                      >\n                        <Play size={16} />\n                        <span>Run Simulation</span>\n                      </button>\n                    ) : (\n                      <button\n                        onClick={stopSimulation}\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\"\n                      >\n                        <Square size={16} />\n                        <span>Stop Simulation</span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n\n                {isRunning && (\n                  <div className=\"mt-4\">\n                    <div className=\"w-full bg-gray-700 rounded-full h-2 mb-2\">\n                      <div\n                        className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n                        style={{ width: `${progress}%` }}\n                      />\n                    </div>\n                    <div className=\"text-sm text-gray-400 text-center\">\n                      {progress.toFixed(1)}% Complete ({Math.floor(progress * simulationSettings.iterations / 100)} / {simulationSettings.iterations} iterations)\n                    </div>\n                  </div>\n                )}\n\n                <div className=\"bg-gray-800 rounded-lg p-4 mt-4\">\n                  <h4 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📋 Simulation Preview</h4>\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Iterations</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {simulationSettings.iterations.toLocaleString()}\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Variables</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {Object.values(distributions).filter(d => d.enabled).length}\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Confidence Level</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {(simulationSettings.confidenceLevel * 100).toFixed(0)}%\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Correlation</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {simulationSettings.enableCorrelation ? 'Enabled' : 'Disabled'}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'results' && (\n            <motion.div\n              key=\"results\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              {simulationResults ? (\n                <div className=\"space-y-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-xl font-semibold text-white flex items-center\">📊 Simulation Results</h3>\n                    <div className=\"flex items-center space-x-2\">\n                      <button className=\"bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\">\n                        <Download size={16} />\n                        Export Results\n                      </button>\n                      <button className=\"bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\">\n                        <FileText size={16} />\n                        Generate Report\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    {Object.entries(simulationResults.analysis.statistics).map(([metric, stats]) => (\n                      <div key={metric} className=\"bg-gray-700 rounded-lg p-4\">\n                        <h4 className=\"text-lg font-semibold text-white mb-3\">\n                          {metric === 'pricePerShare' ? '💰 Price per Share' : \n                           metric === 'enterpriseValue' ? '🏢 Enterprise Value' : \n                           '📈 Upside %'}\n                        </h4>\n                        <div className=\"text-2xl font-bold text-green-400 mb-2\">\n                          {metric === 'upside' \n                            ? `${stats.mean.toFixed(1)}%` \n                            : formatCurrency(stats.mean)\n                          }\n                        </div>\n                        <div className=\"space-y-1 text-sm text-gray-300\">\n                          <div>Median: {metric === 'upside' ? `${stats.median.toFixed(1)}%` : formatCurrency(stats.median)}</div>\n                          <div>Std Dev: {metric === 'upside' ? `${stats.stdDev.toFixed(1)}%` : formatCurrency(stats.stdDev)}</div>\n                          <div>Min: {metric === 'upside' ? `${stats.min.toFixed(1)}%` : formatCurrency(stats.min)}</div>\n                          <div>Max: {metric === 'upside' ? `${stats.max.toFixed(1)}%` : formatCurrency(stats.max)}</div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div className=\"bg-gray-700 rounded-lg p-4\">\n                      <h4>📊 Price Distribution</h4>\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <AreaChart data={generateHistogramData}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis \n                            dataKey=\"bin\" \n                            tickFormatter={formatCurrency}\n                          />\n                          <YAxis />\n                          <Tooltip \n                            formatter={(value, name) => [\n                              `${(value * 100).toFixed(2)}%`, \n                              'Frequency'\n                            ]}\n                            labelFormatter={(value) => `Price: ${formatCurrency(value)}`}\n                          />\n                          <Area \n                            type=\"monotone\" \n                            dataKey=\"frequency\" \n                            stroke=\"#3B82F6\" \n                            fill=\"#3B82F6\" \n                            fillOpacity={0.6}\n                          />\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </div>\n\n                    <div className=\"bg-gray-700 rounded-lg p-4\">\n                      <h4>🎯 Sensitivity Scatter Plot</h4>\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <ScatterChart data={generateScatterData}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis \n                            dataKey=\"x\" \n                            name=\"Revenue Growth Rate\"\n                            tickFormatter={(value) => `${value.toFixed(1)}%`}\n                          />\n                          <YAxis \n                            dataKey=\"y\" \n                            name=\"Price per Share\"\n                            tickFormatter={formatCurrency}\n                          />\n                          <Tooltip \n                            formatter={(value, name) => [\n                              name === 'Revenue Growth Rate' ? `${value.toFixed(2)}%` : formatCurrency(value),\n                              name\n                            ]}\n                          />\n                          <Scatter name=\"Scenarios\" fill=\"#10B981\">\n                            {generateScatterData.map((entry, index) => (\n                              <Cell \n                                key={`cell-${index}`}\n                                fill={entry.upside > 0 ? '#10B981' : '#EF4444'}\n                              />\n                            ))}\n                          </Scatter>\n                        </ScatterChart>\n                      </ResponsiveContainer>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n                  <AlertTriangle size={48} className=\"text-gray-400 mb-4\" />\n                  <h3 className=\"text-xl font-semibold text-white mb-2\">No Results Available</h3>\n                  <p className=\"text-gray-400\">Run a simulation to see results here.</p>\n                </div>\n              )}\n            </motion.div>\n          )}\n\n          {activeTab === 'analysis' && (\n            <motion.div\n              key=\"analysis\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              {simulationResults?.analysis ? (\n                <div className=\"space-y-6\">\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">⚠️ Risk Metrics</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                      {Object.entries(simulationResults.analysis.riskMetrics).map(([metric, value]) => (\n                        <div key={metric} className=\"bg-gray-800 rounded-lg p-4 border border-gray-600\">\n                          <h4 className=\"text-sm font-medium text-gray-300 mb-2\">{metric === 'var95' ? 'Value at Risk (95%)' : \n                               metric === 'cvar95' ? 'Conditional VaR (95%)' : \n                               metric === 'probabilityOfLoss' ? 'Probability of Loss' : \n                               'Sharpe Ratio'}</h4>\n                          <div className=\"text-xl font-bold text-red-400 mb-1\">\n                            {metric === 'probabilityOfLoss' ? `${(value * 100).toFixed(1)}%` : formatCurrency(value)}\n                          </div>\n                          <div className=\"text-xs text-gray-400\">\n                            Risk measure\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📊 Confidence Intervals ({(simulationResults.analysis.confidenceIntervals.pricePerShare?.level * 100).toFixed(0)}%)</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      {Object.entries(simulationResults.analysis.confidenceIntervals).map(([metric, interval]) => (\n                        <div key={metric} className=\"bg-gray-800 rounded-lg p-4 border border-gray-600\">\n                          <h4 className=\"text-lg font-semibold text-white mb-3\">{metric === 'pricePerShare' ? 'Price per Share' : \n                               metric === 'enterpriseValue' ? 'Enterprise Value' : \n                               'Upside %'}</h4>\n                          <div className=\"space-y-3\">\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Lower Bound:</span>\n                              <span className=\"font-medium text-white\">{metric === 'upside' ? `${interval.lowerBound.toFixed(1)}%` : formatCurrency(interval.lowerBound)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Upper Bound:</span>\n                              <span className=\"font-medium text-white\">{metric === 'upside' ? `${interval.upperBound.toFixed(1)}%` : formatCurrency(interval.upperBound)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Width:</span>\n                              <span className=\"font-medium text-blue-400\">{metric === 'upside' ? `${interval.width.toFixed(1)}%` : formatCurrency(interval.width)}</span>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📊 Percentile Analysis</h3>\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"w-full\">\n                        <thead>\n                          <tr className=\"border-b border-gray-600\">\n                            <th className=\"text-left p-3 text-sm font-medium text-gray-300\">Metric</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">5th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">25th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">50th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">75th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">95th %ile</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.entries(simulationResults.analysis.percentiles).map(([metric, percentiles]) => (\n                            <tr key={metric} className=\"border-b border-gray-600\">\n                              <td className=\"p-3 text-sm text-white\">{metric === 'pricePerShare' ? 'Price per Share' : \n                                   metric === 'enterpriseValue' ? 'Enterprise Value' : \n                                   'Upside %'}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p5.toFixed(1)}%` : formatCurrency(percentiles.p5)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p25.toFixed(1)}%` : formatCurrency(percentiles.p25)}</td>\n                              <td className=\"p-3 text-sm text-right text-blue-400 font-medium\">{metric === 'upside' ? `${percentiles.p50.toFixed(1)}%` : formatCurrency(percentiles.p50)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p75.toFixed(1)}%` : formatCurrency(percentiles.p75)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p95.toFixed(1)}%` : formatCurrency(percentiles.p95)}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n                  <AlertTriangle size={48} className=\"text-gray-400 mb-4\" />\n                  <h3 className=\"text-xl font-semibold text-white mb-2\">No Analysis Available</h3>\n                  <p className=\"text-gray-400\">Run a simulation to see analysis here.</p>\n                </div>\n              )}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\nexport default MonteCarloSimulation;","import React, { useState, useMemo, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Building2, Calculator, TrendingUp, DollarSign, BarChart3, Target } from 'lucide-react';\nimport { lboModelingEngine } from '../../services/lboModelingEngine.js';\n\nconst AdvancedLBOTool = ({ data, onDataChange }) => {\n  const [activeTab, setActiveTab] = useState('inputs');\n  const [lboResults, setLBOResults] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n  \n  const [lboInputs, setLBOInputs] = useState({\n    symbol: 'COMPANY',\n    companyName: 'Target Company',\n    purchasePrice: 500000000,\n    ebitda: 75000000,\n    revenue: 500000000,\n    equityContribution: 0.35,\n    seniorDebtMultiple: 4.0,\n    subordinatedDebtMultiple: 1.5,\n    seniorInterestRate: 0.055,\n    subordinatedInterestRate: 0.095,\n    ebitdaGrowthRate: 0.06,\n    capexAsPercentOfRevenue: 0.03,\n    nwcAsPercentOfRevenue: 0.02,\n    holdingPeriod: 5,\n    exitMultiple: 10.0,\n    transactionFees: 0.02,\n    managementFees: 0.02,\n    taxRate: 0.21\n  });\n\n  const formatCurrency = useCallback((value) => {\n    if (!value) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    return `${(value * 100).toFixed(1)}%`;\n  }, []);\n\n  const calculateLBO = useCallback(async () => {\n    try {\n      setIsCalculating(true);\n      const modelInputs = {\n        symbol: lboInputs.symbol,\n        companyName: lboInputs.companyName,\n        purchasePrice: lboInputs.purchasePrice,\n        ebitda: lboInputs.ebitda,\n        revenue: lboInputs.revenue,\n        assumptions: {\n          debt: {\n            seniorDebtMultiple: lboInputs.seniorDebtMultiple,\n            subordinatedDebtMultiple: lboInputs.subordinatedDebtMultiple,\n            seniorInterestRate: lboInputs.seniorInterestRate,\n            subordinatedInterestRate: lboInputs.subordinatedInterestRate\n          },\n          operating: {\n            ebitdaGrowthRate: lboInputs.ebitdaGrowthRate,\n            capexAsPercentOfRevenue: lboInputs.capexAsPercentOfRevenue,\n            nwcAsPercentOfRevenue: lboInputs.nwcAsPercentOfRevenue,\n            taxRate: lboInputs.taxRate\n          },\n          exit: {\n            exitMultiple: lboInputs.exitMultiple\n          },\n          transaction: {\n            holdingPeriod: lboInputs.holdingPeriod,\n            transactionFees: lboInputs.transactionFees\n          }\n        }\n      };\n      \n      const results = lboModelingEngine.buildLBOModel(modelInputs);\n      setLBOResults(results);\n      \n      if (onDataChange) {\n        onDataChange({\n          lboModel: { inputs: lboInputs, results, timestamp: new Date().toISOString() }\n        });\n      }\n    } catch (error) {\n      console.error('LBO calculation error:', error);\n      alert(`Error: ${error.message}`);\n    } finally {\n      setIsCalculating(false);\n    }\n  }, [lboInputs, onDataChange]);\n\n  const handleInputChange = useCallback((field, value) => {\n    setLBOInputs(prev => ({\n      ...prev,\n      [field]: typeof value === 'string' ? parseFloat(value) || 0 : value\n    }));\n  }, []);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Building2 className=\"text-blue-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Advanced LBO Modeling</h2>\n            <p className=\"text-gray-600\">Professional leveraged buyout analysis</p>\n          </div>\n        </div>\n        \n        <motion.button\n          onClick={calculateLBO}\n          disabled={isCalculating}\n          className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n            isCalculating \n              ? 'bg-gray-300 text-gray-500' \n              : 'bg-blue-600 hover:bg-blue-700 text-white'\n          }`}\n        >\n          <Calculator size={18} />\n          <span>{isCalculating ? 'Calculating...' : 'Calculate LBO'}</span>\n        </motion.button>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {[\n            { id: 'inputs', label: 'Model Inputs', icon: DollarSign },\n            { id: 'results', label: 'Results & Analysis', icon: BarChart3 }\n          ].map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{tab.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Inputs Tab */}\n      {activeTab === 'inputs' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {/* Transaction */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-3\">Transaction</h3>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Purchase Price</label>\n                  <input\n                    type=\"number\"\n                    value={lboInputs.purchasePrice}\n                    onChange={(e) => handleInputChange('purchasePrice', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                  <p className=\"text-xs text-gray-500\">{formatCurrency(lboInputs.purchasePrice)}</p>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Current EBITDA</label>\n                  <input\n                    type=\"number\"\n                    value={lboInputs.ebitda}\n                    onChange={(e) => handleInputChange('ebitda', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Holding Period</label>\n                  <input\n                    type=\"number\"\n                    value={lboInputs.holdingPeriod}\n                    onChange={(e) => handleInputChange('holdingPeriod', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Financing */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-3\">Financing</h3>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Senior Debt Multiple</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={lboInputs.seniorDebtMultiple}\n                    onChange={(e) => handleInputChange('seniorDebtMultiple', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Sub Debt Multiple</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={lboInputs.subordinatedDebtMultiple}\n                    onChange={(e) => handleInputChange('subordinatedDebtMultiple', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Senior Rate (%)</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.001\"\n                    value={lboInputs.seniorInterestRate * 100}\n                    onChange={(e) => handleInputChange('seniorInterestRate', (e.target.value || 0) / 100)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Operating */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-3\">Operating</h3>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">EBITDA Growth (%)</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={lboInputs.ebitdaGrowthRate * 100}\n                    onChange={(e) => handleInputChange('ebitdaGrowthRate', (e.target.value || 0) / 100)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Exit Multiple</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={lboInputs.exitMultiple}\n                    onChange={(e) => handleInputChange('exitMultiple', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Tax Rate (%)</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={lboInputs.taxRate * 100}\n                    onChange={(e) => handleInputChange('taxRate', (e.target.value || 0) / 100)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Results Tab */}\n      {activeTab === 'results' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          {lboResults ? (\n            <div className=\"space-y-6\">\n              {/* Key Metrics */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-blue-600\">\n                    {formatPercent(lboResults.baseCase?.returnsAnalysis?.irr || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">IRR</div>\n                </div>\n                <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-green-600\">\n                    {(lboResults.baseCase?.returnsAnalysis?.moic || 0).toFixed(1)}x\n                  </div>\n                  <div className=\"text-sm text-gray-600\">MOIC</div>\n                </div>\n                <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-purple-600\">\n                    {(lboResults.transactionStructure?.debtToEbitda || 0).toFixed(1)}x\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Leverage</div>\n                </div>\n                <div className=\"bg-orange-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-orange-600\">\n                    {formatCurrency(lboResults.baseCase?.exitAnalysis?.equityProceeds || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Exit Value</div>\n                </div>\n              </div>\n\n              {/* Transaction Structure */}\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <h3 className=\"text-lg font-semibold mb-4\">Transaction Structure</h3>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Purchase Price:</span>\n                      <span className=\"font-medium\">{formatCurrency(lboResults.transactionStructure?.purchasePrice)}</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Total Debt:</span>\n                      <span className=\"font-medium\">{formatCurrency(lboResults.transactionStructure?.totalDebt)}</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Equity Investment:</span>\n                      <span className=\"font-medium\">{formatCurrency(lboResults.transactionStructure?.equityContribution)}</span>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Entry Multiple:</span>\n                      <span className=\"font-medium\">{(lboResults.transactionStructure?.entryMultiple || 0).toFixed(1)}x</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Debt/EBITDA:</span>\n                      <span className=\"font-medium\">{(lboResults.transactionStructure?.debtToEbitda || 0).toFixed(1)}x</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Equity %:</span>\n                      <span className=\"font-medium\">{formatPercent(lboResults.transactionStructure?.equityPercentage || 0)}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Scenarios */}\n              {lboResults.scenarios && Object.keys(lboResults.scenarios).length > 0 && (\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Scenario Analysis</h3>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full\">\n                      <thead>\n                        <tr className=\"border-b border-gray-300\">\n                          <th className=\"text-left py-2\">Scenario</th>\n                          <th className=\"text-right py-2\">IRR</th>\n                          <th className=\"text-right py-2\">MOIC</th>\n                          <th className=\"text-right py-2\">Exit Value</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr className=\"border-b border-gray-200\">\n                          <td className=\"py-2 font-medium\">Base Case</td>\n                          <td className=\"text-right py-2\">{formatPercent(lboResults.baseCase?.returnsAnalysis?.irr || 0)}</td>\n                          <td className=\"text-right py-2\">{(lboResults.baseCase?.returnsAnalysis?.moic || 0).toFixed(1)}x</td>\n                          <td className=\"text-right py-2\">{formatCurrency(lboResults.baseCase?.exitAnalysis?.equityProceeds || 0)}</td>\n                        </tr>\n                        {Object.entries(lboResults.scenarios).map(([name, scenario]) => (\n                          <tr key={name} className=\"border-b border-gray-200\">\n                            <td className=\"py-2\">{name}</td>\n                            <td className=\"text-right py-2\">{formatPercent(scenario.returnsAnalysis?.irr || 0)}</td>\n                            <td className=\"text-right py-2\">{(scenario.returnsAnalysis?.moic || 0).toFixed(1)}x</td>\n                            <td className=\"text-right py-2\">{formatCurrency(scenario.exitAnalysis?.equityProceeds || 0)}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"text-center py-12 text-gray-500\">\n              <BarChart3 size={48} className=\"mx-auto mb-4 opacity-50\" />\n              <p>Run LBO calculation to see results</p>\n            </div>\n          )}\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default AdvancedLBOTool;\n","import React, { useState, useMemo, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  BarChart3, TrendingUp, TrendingDown, Target, Plus, Trash2, \n  Play, Download, Settings, RefreshCw, AlertTriangle, CheckCircle\n} from 'lucide-react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar, LineChart, Line } from 'recharts';\n\nconst EnhancedScenarioAnalysis = ({ data, onDataChange, calculateDCF, lboModelingEngine }) => {\n  const [activeView, setActiveView] = useState('scenarios');\n  const [scenarios, setScenarios] = useState([\n    {\n      id: 1,\n      name: 'Base Case',\n      probability: 40,\n      revenueGrowth: 5.0,\n      marginExpansion: 0.5,\n      exitMultiple: 10.0,\n      capexIntensity: 3.0,\n      isBase: true\n    },\n    {\n      id: 2,\n      name: 'Bull Case',\n      probability: 30,\n      revenueGrowth: 8.0,\n      marginExpansion: 1.5,\n      exitMultiple: 12.0,\n      capexIntensity: 2.5,\n      isBase: false\n    },\n    {\n      id: 3,\n      name: 'Bear Case',\n      probability: 30,\n      revenueGrowth: 2.0,\n      marginExpansion: -0.5,\n      exitMultiple: 8.0,\n      capexIntensity: 4.0,\n      isBase: false\n    }\n  ]);\n\n  const [analysisSettings, setAnalysisSettings] = useState({\n    modelType: 'dcf', // 'dcf', 'lbo', '3statement'\n    outputMetric: 'enterpriseValue',\n    includeCorrelations: false,\n    numSimulations: 1000\n  });\n\n  const [results, setResults] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n\n  const formatCurrency = useCallback((value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    return `${(value || 0).toFixed(1)}%`;\n  }, []);\n\n  const runScenarioAnalysis = useCallback(async () => {\n    setIsCalculating(true);\n    \n    try {\n      const scenarioResults = [];\n      \n      for (const scenario of scenarios) {\n        let result = null;\n        \n        if (analysisSettings.modelType === 'dcf') {\n          // Run DCF analysis for each scenario\n          const scenarioData = {\n            ...data,\n            statements: {\n              ...data.statements,\n              incomeStatement: {\n                ...data.statements.incomeStatement,\n                // Apply scenario assumptions to modify data\n                totalRevenue: data.statements.incomeStatement.totalRevenue?.map((rev, idx) => {\n                  if (idx === 0) return rev; // Base year unchanged\n                  return rev * Math.pow(1 + scenario.revenueGrowth / 100, idx);\n                })\n              }\n            }\n          };\n          \n          result = calculateDCF ? calculateDCF(scenarioData) : null;\n        } \n        else if (analysisSettings.modelType === 'lbo' && lboModelingEngine) {\n          // Run LBO analysis for each scenario\n          const lboInputs = {\n            symbol: data.symbol || 'COMPANY',\n            companyName: data.companyName || 'Target Company',\n            purchasePrice: 500000000,\n            ebitda: 75000000,\n            revenue: 500000000,\n            assumptions: {\n              operating: {\n                ebitdaGrowthRate: scenario.revenueGrowth / 100,\n                capexAsPercentOfRevenue: scenario.capexIntensity / 100\n              },\n              exit: {\n                exitMultiple: scenario.exitMultiple\n              }\n            }\n          };\n          \n          result = lboModelingEngine.buildLBOModel(lboInputs);\n        }\n        \n        scenarioResults.push({\n          ...scenario,\n          result: result,\n          enterpriseValue: result?.enterpriseValue || result?.baseCase?.exitAnalysis?.enterpriseValue || 0,\n          equityValue: result?.equityValue || result?.baseCase?.exitAnalysis?.equityProceeds || 0,\n          irr: result?.irr || result?.baseCase?.returnsAnalysis?.irr || 0,\n          moic: result?.moic || result?.baseCase?.returnsAnalysis?.moic || 0\n        });\n      }\n      \n      // Calculate probability-weighted metrics\n      const weightedValue = scenarioResults.reduce((sum, s) => \n        sum + (s.enterpriseValue * s.probability / 100), 0\n      );\n      \n      const valueRange = {\n        min: Math.min(...scenarioResults.map(s => s.enterpriseValue)),\n        max: Math.max(...scenarioResults.map(s => s.enterpriseValue)),\n        range: Math.max(...scenarioResults.map(s => s.enterpriseValue)) - \n               Math.min(...scenarioResults.map(s => s.enterpriseValue))\n      };\n      \n      // Risk metrics\n      const standardDeviation = Math.sqrt(\n        scenarioResults.reduce((sum, s) => {\n          const deviation = s.enterpriseValue - weightedValue;\n          return sum + (deviation * deviation * s.probability / 100);\n        }, 0)\n      );\n      \n      const coefficientOfVariation = standardDeviation / weightedValue;\n      \n      setResults({\n        scenarios: scenarioResults,\n        summary: {\n          weightedValue,\n          valueRange,\n          standardDeviation,\n          coefficientOfVariation,\n          probabilityOfPositiveReturn: scenarioResults\n            .filter(s => s.enterpriseValue > (data.currentMarketCap || 1000000000))\n            .reduce((sum, s) => sum + s.probability, 0)\n        },\n        chartData: scenarioResults.map(s => ({\n          name: s.name,\n          value: s.enterpriseValue,\n          probability: s.probability,\n          irr: s.irr * 100,\n          moic: s.moic\n        }))\n      });\n      \n    } catch (error) {\n      console.error('Scenario analysis error:', error);\n      alert(`Error running scenario analysis: ${error.message}`);\n    } finally {\n      setIsCalculating(false);\n    }\n  }, [scenarios, analysisSettings, data, calculateDCF, lboModelingEngine]);\n\n  const addScenario = useCallback(() => {\n    const newScenario = {\n      id: Date.now(),\n      name: `Scenario ${scenarios.length + 1}`,\n      probability: Math.max(0, 100 - scenarios.reduce((sum, s) => sum + s.probability, 0)),\n      revenueGrowth: 5.0,\n      marginExpansion: 0.0,\n      exitMultiple: 10.0,\n      capexIntensity: 3.0,\n      isBase: false\n    };\n    setScenarios(prev => [...prev, newScenario]);\n  }, [scenarios]);\n\n  const updateScenario = useCallback((id, field, value) => {\n    setScenarios(prev => prev.map(scenario => \n      scenario.id === id ? { ...scenario, [field]: parseFloat(value) || value } : scenario\n    ));\n  }, []);\n\n  const deleteScenario = useCallback((id) => {\n    setScenarios(prev => prev.filter(scenario => scenario.id !== id && !scenario.isBase));\n  }, []);\n\n  const totalProbability = useMemo(() => \n    scenarios.reduce((sum, s) => sum + s.probability, 0), [scenarios]\n  );\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <BarChart3 className=\"text-purple-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Enhanced Scenario Analysis</h2>\n            <p className=\"text-gray-600\">Cross-model scenario planning & risk assessment</p>\n          </div>\n        </div>\n        \n        <div className=\"flex space-x-3\">\n          <motion.button\n            onClick={runScenarioAnalysis}\n            disabled={isCalculating || totalProbability !== 100}\n            className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n              isCalculating || totalProbability !== 100\n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed' \n                : 'bg-purple-600 hover:bg-purple-700 text-white'\n            }`}\n            whileHover={!isCalculating && totalProbability === 100 ? { scale: 1.02 } : {}}\n          >\n            <Play size={18} />\n            <span>{isCalculating ? 'Running...' : 'Run Analysis'}</span>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Model Selection & Settings */}\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Model Type</label>\n            <select\n              value={analysisSettings.modelType}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, modelType: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            >\n              <option value=\"dcf\">DCF Valuation</option>\n              <option value=\"lbo\">LBO Analysis</option>\n              <option value=\"3statement\">3-Statement Model</option>\n            </select>\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Output Metric</label>\n            <select\n              value={analysisSettings.outputMetric}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, outputMetric: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            >\n              <option value=\"enterpriseValue\">Enterprise Value</option>\n              <option value=\"equityValue\">Equity Value</option>\n              <option value=\"irr\">IRR</option>\n              <option value=\"moic\">MOIC</option>\n            </select>\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Simulations</label>\n            <input\n              type=\"number\"\n              value={analysisSettings.numSimulations}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, numSimulations: parseInt(e.target.value) || 1000 }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            />\n          </div>\n          \n          <div className=\"flex items-end\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={analysisSettings.includeCorrelations}\n                onChange={(e) => setAnalysisSettings(prev => ({ ...prev, includeCorrelations: e.target.checked }))}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Include Correlations</span>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Probability Warning */}\n      {totalProbability !== 100 && (\n        <div className=\"mb-6 p-3 bg-amber-50 border border-amber-200 rounded-lg flex items-center\">\n          <AlertTriangle className=\"text-amber-500 mr-2\" size={20} />\n          <span className=\"text-amber-800\">\n            Total probability is {totalProbability}%. Adjust scenarios to sum to 100%.\n          </span>\n        </div>\n      )}\n\n      {/* Scenarios Table */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold\">Scenarios</h3>\n          <motion.button\n            onClick={addScenario}\n            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <Plus size={16} />\n            <span>Add Scenario</span>\n          </motion.button>\n        </div>\n        \n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead>\n              <tr className=\"border-b-2 border-gray-300\">\n                <th className=\"text-left py-3 px-4\">Scenario</th>\n                <th className=\"text-right py-3 px-4\">Probability (%)</th>\n                <th className=\"text-right py-3 px-4\">Revenue Growth (%)</th>\n                <th className=\"text-right py-3 px-4\">Margin Expansion (bps)</th>\n                <th className=\"text-right py-3 px-4\">Exit Multiple</th>\n                <th className=\"text-right py-3 px-4\">CapEx Intensity (%)</th>\n                <th className=\"text-center py-3 px-4\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {scenarios.map((scenario) => (\n                <tr key={scenario.id} className={`border-b border-gray-200 ${scenario.isBase ? 'bg-blue-50' : ''}`}>\n                  <td className=\"py-3 px-4\">\n                    <input\n                      type=\"text\"\n                      value={scenario.name}\n                      onChange={(e) => updateScenario(scenario.id, 'name', e.target.value)}\n                      disabled={scenario.isBase}\n                      className={`border border-gray-300 rounded px-2 py-1 ${scenario.isBase ? 'bg-gray-100' : ''}`}\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"1\"\n                      value={scenario.probability}\n                      onChange={(e) => updateScenario(scenario.id, 'probability', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.revenueGrowth}\n                      onChange={(e) => updateScenario(scenario.id, 'revenueGrowth', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.marginExpansion}\n                      onChange={(e) => updateScenario(scenario.id, 'marginExpansion', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.exitMultiple}\n                      onChange={(e) => updateScenario(scenario.id, 'exitMultiple', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.capexIntensity}\n                      onChange={(e) => updateScenario(scenario.id, 'capexIntensity', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-center py-3 px-4\">\n                    {!scenario.isBase && (\n                      <button\n                        onClick={() => deleteScenario(scenario.id)}\n                        className=\"text-red-600 hover:text-red-800\"\n                      >\n                        <Trash2 size={16} />\n                      </button>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Results */}\n      {results && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"space-y-6\"\n        >\n          {/* Summary Metrics */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {formatCurrency(results.summary.weightedValue)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Expected Value</div>\n            </div>\n            <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {formatCurrency(results.summary.valueRange.max)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Best Case</div>\n            </div>\n            <div className=\"bg-red-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-red-600\">\n                {formatCurrency(results.summary.valueRange.min)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Worst Case</div>\n            </div>\n            <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {formatPercent(results.summary.probabilityOfPositiveReturn)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Success Probability</div>\n            </div>\n          </div>\n\n          {/* Scenario Results Chart */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Scenario Results</h3>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={results.chartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis tickFormatter={(value) => formatCurrency(value)} />\n                  <Tooltip formatter={(value) => [formatCurrency(value), 'Enterprise Value']} />\n                  <Bar dataKey=\"value\" fill=\"#8884d8\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Risk Analysis */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h4 className=\"font-semibold mb-3\">Risk Metrics</h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span>Standard Deviation:</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.standardDeviation)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Coefficient of Variation:</span>\n                  <span className=\"font-medium\">{(results.summary.coefficientOfVariation * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Value at Risk (5%):</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.valueRange.min)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Upside Potential:</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.valueRange.range)}</span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h4 className=\"font-semibold mb-3\">Scenario Returns</h4>\n              <div className=\"space-y-2 text-sm\">\n                {results.scenarios.map((scenario) => (\n                  <div key={scenario.id} className=\"flex justify-between\">\n                    <span>{scenario.name}:</span>\n                    <span className=\"font-medium\">\n                      {analysisSettings.outputMetric === 'irr' ? formatPercent(scenario.irr) : \n                       analysisSettings.outputMetric === 'moic' ? `${scenario.moic.toFixed(1)}x` :\n                       formatCurrency(scenario[analysisSettings.outputMetric])}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {!results && (\n        <div className=\"text-center py-12 text-gray-500\">\n          <BarChart3 size={48} className=\"mx-auto mb-4 opacity-50\" />\n          <p>Configure scenarios and run analysis to see results</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EnhancedScenarioAnalysis;\n"],"names":["AdvancedDCF","data","modelInputs","onModelInputChange","formatCurrency","formatPercent","showDetails","setShowDetails","useState","showAssumptions","setShowAssumptions","activeTab","setActiveTab","advancedDCFResults","useMemo","discountRate","terminalGrowthRate","projectionYears","taxRate","dcf","statements","workingCapitalAssumptions","workingCapital","receivablesDays","inventoryDays","payablesDays","capexAssumptions","capex","capexAsPercentOfRevenue","depreciationRate","results","years","freeCashFlows","presentValues","workingCapitalChanges","capexAmounts","unleveredFreeCashFlow","cumulativePV","terminalValue","presentValueTerminal","enterpriseValue","equityValue","impliedShare","baseRevenue","incomeStatement","totalRevenue","year","yearData","revenue","operatingIncome","nopat","workingCapitalChange","depreciation","freeCashFlow","presentValue","currentRevenue","previousRevenue","currentReceivables","currentInventory","currentPayables","receivablesChange","inventoryChange","payablesChange","Math","abs","discountFactor","pow","push","terminalFCF","length","terminalDiscountFactor","sharesOutstanding","updateDCFAssumption","category","field","value","updatedDCF","parseFloat","updateBasicAssumption","jsxs","className","children","jsx","Calculator","size","map","tab","onClick","DollarSign","BarChart3","Settings","charAt","toUpperCase","slice","Fragment","motion","div","whileHover","y","TrendingUp","Info","toFixed","index","DataVisualization","dcfData","sensitivityData","scenarioData","WACCCalculator","type","step","onChange","e","target","MonteCarloSimulation","onDataChange","simulationResults","setSimulationResults","isRunning","setIsRunning","progress","setProgress","simulationSettings","setSimulationSettings","iterations","confidenceLevel","randomSeed","enableCorrelation","distributions","setDistributions","revenueGrowthRate","parameters","mean","stdDev","name","enabled","fcfMargin","min","mode","max","wacc","correlationMatrix","setCorrelationMatrix","distributionTypes","label","runSimulation","useCallback","async","enabledDistributions","Object","fromEntries","entries","filter","_","dist","keys","Error","options","onProgress","latestIndex","periods","baseInputs","currentPrice","currentOperatingIncome","key","monteCarloEngine","runDCFSimulation","error","alert","message","stopSimulation","updateDistribution","variable","updates","prev","updateCorrelation","i","j","newMatrix","row","generateHistogramData","values","r","pricePerShare","binWidth","histogram","Array","fill","bin","count","frequency","forEach","binIndex","floor","bins","generateScatterData","result","x","inputs","upside","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","tabs","id","icon","Play","initial","opacity","animate","Zap","Icon","AnimatePresence","exit","transition","duration","parseInt","placeholder","checked","newType","find","t","newParameters","param","disabled","Square","every","d","width","toLocaleString","Download","FileText","analysis","statistics","metric","stats","median","ResponsiveContainer","height","AreaChart","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","YAxis","Tooltip","formatter","labelFormatter","Area","stroke","fillOpacity","ScatterChart","Scatter","entry","Cell","AlertTriangle","riskMetrics","confidenceIntervals","level","interval","lowerBound","upperBound","percentiles","p5","p25","p50","p75","p95","AdvancedLBOTool","lboResults","setLBOResults","isCalculating","setIsCalculating","lboInputs","setLBOInputs","symbol","companyName","purchasePrice","ebitda","equityContribution","seniorDebtMultiple","subordinatedDebtMultiple","seniorInterestRate","subordinatedInterestRate","ebitdaGrowthRate","nwcAsPercentOfRevenue","holdingPeriod","exitMultiple","transactionFees","managementFees","calculateLBO","assumptions","debt","operating","transaction","lboModelingEngine","buildLBOModel","lboModel","timestamp","Date","toISOString","handleInputChange","Building2","button","baseCase","returnsAnalysis","irr","moic","transactionStructure","debtToEbitda","exitAnalysis","equityProceeds","totalDebt","entryMultiple","equityPercentage","scenarios","scenario","EnhancedScenarioAnalysis","calculateDCF","activeView","setActiveView","setScenarios","probability","revenueGrowth","marginExpansion","capexIntensity","isBase","analysisSettings","setAnalysisSettings","modelType","outputMetric","includeCorrelations","numSimulations","setResults","runScenarioAnalysis","scenarioResults","rev","idx","weightedValue","reduce","sum","s","valueRange","range","standardDeviation","sqrt","deviation","summary","coefficientOfVariation","probabilityOfPositiveReturn","currentMarketCap","chartData","addScenario","newScenario","now","updateScenario","deleteScenario","totalProbability","scale","Plus","Trash2","BarChart","Bar"],"mappings":"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"}