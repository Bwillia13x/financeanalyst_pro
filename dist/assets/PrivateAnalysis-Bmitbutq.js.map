{"version":3,"mappings":"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","names":["formatCurrency","value","currency","compact","isNaN","Intl","NumberFormat","style","notation","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","decimals","toFixed","defaultFinancialData","periods","operationalMetrics","squareFootage","providers","scheduledHours","availableHours","utilization","customerMetrics","avgSpend","treatmentsPerYear","retentionRate","newCustomers","totalActiveCustomers","statements","incomeStatement","energyDevices","injectables","wellness","weightloss","retailSales","surgery","totalRevenue","energyDeviceSupplies","injectablesCogs","wellnessCogs","weightlossCogs","retailProducts","surgicalSupplies","totalCostOfGoodsSold","grossProfit","employeeBenefits","payroll","payrollTaxes","totalSalariesBenefits","marketing","automobile","creditCardBankCharges","donations","computerTelephoneUtilities","depreciation","duesSubscriptions","education","equipmentRental","insurance","interestExpense","travelMealsEntertainment","rent","officeExpenses","professionalFees","repairsMaintenance","localTax","stateTax","totalOperatingExpense","operatingIncome","gainOnAssetSale","interestIncome","otherExpenses","totalOtherIncomeExpense","incomeBeforeTax","netIncome","balanceSheet","assets","liabilities","equity","cashFlow","operating","investing","financing","assumptions","marketingTarget","ownerCompensationAddback","industryBenchmarks","revenuePerSqFt","min","target","current","revenuePerProvider","injectableMargin","ebitdaMargin","customerRetention","riskFactors","regulatoryRisk","keyPersonDependency","competitionDensity","technologyObsolescence","reimbursementRisk","models","dcf","discountRate","terminalGrowthRate","projectionYears","taxRate","adjustments","ownerAddback","adjustedOperatingIncome","adjustedEbitda","adjustmentRationale","STORAGE_CONFIG","DATA_SCHEMAS","dcfModel","version","required","structure","symbol","projections","valuation","metadata","lboModel","transaction","returns","monteCarloResults","modelType","iterations","results","statistics","userPreferences","theme","layout","notifications","privacy","marketData","data","timestamp","source","storageService","constructor","this","isAvailable","checkStorageAvailability","compressionWorker","initializeCompression","setupQuotaMonitoring","test","localStorage","setItem","removeItem","e","apiLogger","log","error","message","window","compressionAvailable","navigator","storage","monitorQuota","estimate","usageRatio","usage","quota","ratio","performCleanup","generateKey","type","identifier","validateData","schemaType","schema","Error","field","expectedType","Object","entries","actualType","Array","isArray","compressData","jsonString","JSON","stringify","length","compressed","simpleCompress","btoa","encodeURIComponent","decompressData","compressedData","isCompressed","decodeURIComponent","atob","options","storageObject","schemaVersion","Date","now","size","processedData","finalObject","key","getItem","stored","parsedStored","parse","decompressedData","age","listItems","prefix","items","i","startsWith","replace","push","cutoffTime","cleanedCount","getStorageStats","totalSize","itemCount","typeStats","split","getQuotaInfo","clearAll","keys","forEach","clearedCount","financialDataStorage","saveDCFModel","modelData","dcfData","toUpperCase","createdAt","lastModified","intrinsicValue","getDCFModel","listDCFModels","deleteDCFModel","saveLBOModel","lboData","irr","moic","getLBOModel","listLBOModels","deleteLBOModel","saveMonteCarloResults","modelId","resultsData","mcData","mean","getMonteCarloResults","listMonteCarloResults","deleteMonteCarloResults","saveMarketData","ttlMinutes","expiresAt","getMarketData","deleteMarketData","saveUserPreferences","preferences","prefData","lastUpdated","getUserPreferences","saveWatchlist","name","symbols","watchlistData","map","s","symbolCount","getWatchlist","listWatchlists","deleteWatchlist","exportAllData","exportData","dcfModels","lboModels","watchlists","mcResults","dcfCount","lboCount","mcCount","watchlistCount","importData","importCount","getFinancialDataStats","financialData","cleanupExpiredMarketData","marketDataKeys","DataExportImport","onDataChange","savedAnalyses","onAnalysesChange","activeTab","setActiveTab","useState","isExporting","setIsExporting","isImporting","setIsImporting","exportStatus","setExportStatus","importStatus","setImportStatus","stats","setStats","templates","setTemplates","id","category","lastUsed","uses","collaborators","setCollaborators","email","role","lastActive","avatar","React","useEffect","loadStats","async","storageStats","handleExport","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","toISOString","body","appendChild","click","removeChild","revokeObjectURL","details","totalItems","className","children","jsxs","jsx","onClick","onClose","label","icon","FileSpreadsheet","Bookmark","Users","Download","Upload","Database","tab","Icon","Info","disabled","Fragment","Loader2","CheckCircle","AlertCircle","template","collaborator","FileText","accept","onChange","event","file","files","text","toLocaleString","bytes","Math","floor","parseFloat","pow","formatBytes","AdvancedLBOTool","lazy","__vitePreload","import","then","n","a","__VITE_PRELOAD__","AnalysisResults","A","ContextualInsightsSidebar","C","EnhancedMarketDataDashboard","E","EnhancedScenarioAnalysis","FinancialModelWorkspace","F","FinancialSpreadsheet","b","ModelingTools","M","MonteCarloIntegrationHub","c","ErrorBoundary","Component","props","super","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","fallback","PrivateAnalysis","advancedResults","setAdvancedResults","lbo","threeStatement","scenarios","monteCarlo","setFinancialData","adjustedValues","setAdjustedValues","modelInputs","setModelInputs","scenario","insightsSidebarVisible","setInsightsSidebarVisible","currentMetricFocus","setCurrentMetricFocus","setSavedAnalyses","saved","isLoading","setIsLoading","dataStatus","setDataStatus","lastSaved","setLastSaved","getDataCompleteness","completedFields","totalWeightedFields","completionPercentage","round","max","calculateModelingProgress","progress","calculateAnalysisProgress","StatusIndicator","status","getStatusColor","tabs","Activity","SEOHead","title","description","canonical","keywords","Header","Clock","toLocaleTimeString","Button","analysis","toString","toLocaleDateString","dataCompleteness","modelingProgress","analysisProgress","updated","saveAnalysis","variant","Save","width","motion","div","initial","opacity","y","animate","exit","transition","duration","onAdjustedValuesChange","calculateDCF","Suspense","prev","lboModelingEngine","dcfResults","lboResults","financialModel","scenarioResults","currentMetric","analysisContext","onInsightClick","insight","metric","isVisible","onToggle"],"ignoreList":[],"sources":["../../src/utils/dataTransformation.js","../../src/data/defaultFinancialData.js","../../src/services/storageService.js","../../src/services/financialDataStorage.js","../../src/components/DataExportImport.jsx","../../src/pages/PrivateAnalysis.jsx"],"sourcesContent":["// Data transformation utilities for financial calculations\n\nexport const formatCurrency = (value, currency = 'USD', compact = false) => {\n  if (value === null || value === undefined || isNaN(value)) return 'N/A';\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n    notation: compact ? 'compact' : 'standard',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2\n  });\n\n  return formatter.format(value);\n};\n\nexport const formatPercentage = (value, decimals = 1) => {\n  if (value === null || value === undefined || isNaN(value)) return 'N/A';\n  return `${(value * 100).toFixed(decimals)}%`;\n};\n\nexport const formatNumber = (value, decimals = 2, compact = false) => {\n  if (value === null || value === undefined || isNaN(value)) return 'N/A';\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    notation: compact ? 'compact' : 'standard',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: decimals\n  });\n\n  return formatter.format(value);\n};\n\nexport const calculateCAGR = (beginningValue, endingValue, years) => {\n  if (beginningValue <= 0 || endingValue <= 0 || years <= 0) return 0;\n  return Math.pow(endingValue / beginningValue, 1 / years) - 1;\n};\n\nexport const calculateNPV = (cashFlows, discountRate) => {\n  return cashFlows.reduce((npv, cashFlow, index) => {\n    return npv + cashFlow / Math.pow(1 + discountRate, index + 1);\n  }, 0);\n};\n\nexport const calculateIRR = (cashFlows, guess = 0.1) => {\n  // Handle edge cases\n  if (!cashFlows || cashFlows.length === 0 || cashFlows.length === 1) {\n    return 0;\n  }\n\n  const maxIterations = 100;\n  const tolerance = 1e-6;\n\n  let rate = guess;\n\n  for (let i = 0; i < maxIterations; i++) {\n    let npv = cashFlows[0]; // Initial investment (negative)\n    let derivative = 0;\n\n    for (let j = 1; j < cashFlows.length; j++) {\n      const factor = Math.pow(1 + rate, j);\n      npv += cashFlows[j] / factor;\n      derivative -= (j * cashFlows[j]) / (factor * (1 + rate));\n    }\n\n    if (Math.abs(npv) < tolerance) {\n      return rate;\n    }\n\n    if (Math.abs(derivative) < tolerance) {\n      break; // Avoid division by zero\n    }\n\n    rate = rate - npv / derivative;\n  }\n\n  return rate;\n};\n\nexport const calculateWACC = (costOfEquity, costOfDebt, taxRate, debtRatio) => {\n  const equityWeight = 1 - debtRatio;\n  return costOfEquity * equityWeight + costOfDebt * debtRatio * (1 - taxRate);\n};\n\nexport const calculateTerminalValue = (finalCashFlow, terminalGrowthRate, discountRate) => {\n  return (finalCashFlow * (1 + terminalGrowthRate)) / (discountRate - terminalGrowthRate);\n};\n\nexport const projectCashFlows = (baseCashFlow, growthRates, years = 5) => {\n  const cashFlows = [];\n  let currentCashFlow = baseCashFlow;\n\n  for (let i = 0; i < years; i++) {\n    const growthRate = Array.isArray(growthRates)\n      ? growthRates[i] || growthRates[growthRates.length - 1]\n      : growthRates;\n    currentCashFlow *= 1 + growthRate;\n    cashFlows.push(currentCashFlow);\n  }\n\n  return cashFlows;\n};\n\nexport const calculateDCFValuation = inputs => {\n  const {\n    currentRevenue,\n    revenueGrowthRate,\n    fcfMargin,\n    wacc,\n    terminalGrowthRate,\n    sharesOutstanding,\n    totalDebt,\n    cash,\n    projectionYears = 5\n  } = inputs;\n\n  // Project revenues\n  const projectedRevenues = projectCashFlows(currentRevenue, revenueGrowthRate, projectionYears);\n\n  // Calculate free cash flows\n  const projectedFCFs = projectedRevenues.map(revenue => revenue * fcfMargin);\n\n  // Calculate terminal value\n  const terminalValue = calculateTerminalValue(\n    projectedFCFs[projectedFCFs.length - 1],\n    terminalGrowthRate,\n    wacc\n  );\n\n  // Calculate present values\n  const pvOfCashFlows = calculateNPV(projectedFCFs, wacc);\n  const pvOfTerminalValue = terminalValue / Math.pow(1 + wacc, projectionYears);\n\n  // Calculate enterprise and equity value\n  const enterpriseValue = pvOfCashFlows + pvOfTerminalValue;\n  const equityValue = enterpriseValue - totalDebt + cash;\n  const pricePerShare = equityValue / sharesOutstanding;\n\n  return {\n    enterpriseValue,\n    equityValue,\n    pricePerShare,\n    pvOfCashFlows,\n    pvOfTerminalValue,\n    terminalValue,\n    projectedRevenues,\n    projectedFCFs,\n    wacc,\n    terminalGrowthRate\n  };\n};\n\nexport const calculateLBOReturns = inputs => {\n  const {\n    purchasePrice,\n    ebitda,\n    debtMultiple = 5,\n    exitMultiple,\n    exitYear = 5,\n    managementFeeRate = 0.02,\n    carriedInterestRate = 0.2\n  } = inputs;\n\n  // Calculate purchase structure\n  const totalDebt = ebitda * debtMultiple;\n  const equityInvestment = purchasePrice - totalDebt;\n\n  // Project EBITDA growth (simplified)\n  const ebitdaGrowthRate = 0.05; // 5% annual growth assumption\n  const exitEbitda = ebitda * Math.pow(1 + ebitdaGrowthRate, exitYear);\n\n  // Calculate exit value\n  const exitEnterpriseValue = exitEbitda * exitMultiple;\n  const remainingDebt = totalDebt * 0.5; // Assume 50% debt paydown\n  const exitEquityValue = exitEnterpriseValue - remainingDebt;\n\n  // Calculate returns\n  const totalReturn = exitEquityValue / equityInvestment;\n  const irr = Math.pow(totalReturn, 1 / exitYear) - 1;\n  const moic = totalReturn; // Multiple of Invested Capital\n\n  // Calculate fees (simplified)\n  const totalManagementFees = equityInvestment * managementFeeRate * exitYear;\n  const carriedInterest = Math.max(0, (exitEquityValue - equityInvestment) * carriedInterestRate);\n\n  return {\n    equityInvestment,\n    totalDebt,\n    exitEquityValue,\n    totalReturn,\n    irr,\n    moic,\n    exitEbitda,\n    exitEnterpriseValue,\n    managementFees: totalManagementFees,\n    carriedInterest,\n    netReturn: exitEquityValue - totalManagementFees - carriedInterest\n  };\n};\n\nexport const calculateComparableMetrics = (companyData, peerData) => {\n  const calculateStatistics = values => {\n    const validValues = values.filter(v => v !== null && v !== undefined && !isNaN(v));\n    if (validValues.length === 0) return { median: null, mean: null, min: null, max: null };\n\n    validValues.sort((a, b) => a - b);\n    const median =\n      validValues.length % 2 === 0\n        ? (validValues[validValues.length / 2 - 1] + validValues[validValues.length / 2]) / 2\n        : validValues[Math.floor(validValues.length / 2)];\n\n    const mean = validValues.reduce((sum, v) => sum + v, 0) / validValues.length;\n\n    return {\n      median,\n      mean,\n      min: Math.min(...validValues),\n      max: Math.max(...validValues),\n      count: validValues.length\n    };\n  };\n\n  const metrics = ['marketCap', 'peRatio', 'evToEbitda', 'priceToBook', 'debtToEquity'];\n  const peerStats = {};\n\n  metrics.forEach(metric => {\n    const peerValues = peerData.map(peer => peer[metric]);\n    peerStats[metric] = calculateStatistics(peerValues);\n  });\n\n  return {\n    company: companyData,\n    peerStatistics: peerStats,\n    relativeValuation: {\n      marketCapPercentile: calculatePercentile(\n        companyData.marketCap,\n        peerData.map(p => p.marketCap)\n      ),\n      peRatioRelative: companyData.peRatio / peerStats.peRatio.median,\n      evEbitdaRelative: companyData.evToEbitda / peerStats.evToEbitda.median,\n      priceToBookRelative: companyData.priceToBook / peerStats.priceToBook.median\n    }\n  };\n};\n\nexport const calculatePercentile = (value, dataset) => {\n  const validDataset = dataset.filter(v => v !== null && v !== undefined && !isNaN(v));\n  if (validDataset.length === 0 || value === null || value === undefined || isNaN(value))\n    return null;\n\n  validDataset.sort((a, b) => a - b);\n  const belowCount = validDataset.filter(v => v < value).length;\n  return belowCount / validDataset.length;\n};\n\nexport const generateMonteCarloScenarios = (baseInputs, variableRanges, iterations = 1000) => {\n  const scenarios = [];\n\n  for (let i = 0; i < iterations; i++) {\n    const scenario = { ...baseInputs };\n\n    Object.keys(variableRanges).forEach(variable => {\n      const range = variableRanges[variable];\n      const randomValue = range.min + Math.random() * (range.max - range.min);\n      scenario[variable] = randomValue;\n    });\n\n    scenarios.push(scenario);\n  }\n\n  return scenarios;\n};\n\nexport const calculateSensitivityAnalysis = (\n  baseInputs,\n  sensitivityVariable,\n  range,\n  steps = 10\n) => {\n  const results = [];\n  const stepSize = (range.max - range.min) / (steps - 1);\n\n  for (let i = 0; i < steps; i++) {\n    const variableValue = range.min + stepSize * i;\n    const inputs = { ...baseInputs, [sensitivityVariable]: variableValue };\n\n    results.push({\n      [sensitivityVariable]: variableValue,\n      inputs\n    });\n  }\n\n  return results;\n};\n","// Auto-generated default financial data derived from spreadsheet_data.md\n// Periods represent December fiscal year-end values.\n// Values are in thousands of dollars (matching \"$ 000s\" from the spreadsheet).\n// Only Income Statement data is populated for now – other statements can be filled in later.\n\nconst defaultFinancialData = {\n  periods: ['Dec-22', 'Dec-23', 'Dec-24'],\n\n  // Enhanced medispa operational metrics for advanced analysis\n  operationalMetrics: {\n    squareFootage: 2500,\n    providers: 3,\n    scheduledHours: { 0: 6240, 1: 6240, 2: 6240 },\n    availableHours: { 0: 7800, 1: 7800, 2: 7800 },\n    utilization: { 0: 0.80, 1: 0.80, 2: 0.80 }\n  },\n\n  // Customer and treatment metrics for CLV analysis\n  customerMetrics: {\n    avgSpend: { 0: 625, 1: 640, 2: 650 },\n    treatmentsPerYear: { 0: 3.2, 1: 3.4, 2: 3.5 },\n    retentionRate: { 0: 0.68, 1: 0.70, 2: 0.72 },\n    newCustomers: { 0: 420, 1: 435, 2: 450 },\n    totalActiveCustomers: { 0: 5700, 1: 5650, 2: 5730 }\n  },\n\n  statements: {\n    incomeStatement: {\n      // ---- Revenue ----\n      energyDevices: { 0: 317.82, 1: 270.15, 2: 245.84 },\n      injectables: { 0: 1123.65, 1: 1044.99, 2: 930.04 },\n      wellness: { 0: 567.67, 1: 652.82, 2: 763.79 },\n      weightloss: { 0: 617.21, 1: 635.73, 2: 718.37 },\n      retailSales: { 0: 322.79, 1: 331.66, 2: 334.98 },\n      surgery: { 0: 617.23, 1: 685.12, 2: 733.08 },\n      totalRevenue: { 0: 3566.37, 1: 3620.47, 2: 3726.10 },\n\n      // ---- Cost of Goods Sold ----\n      energyDeviceSupplies: { 0: 22.25, 1: 14.14, 2: 23.73 },\n      injectablesCogs: { 0: 370.80, 1: 326.59, 2: 277.83 },\n      wellnessCogs: { 0: 188.24, 1: 204.20, 2: 268.78 },\n      weightlossCogs: { 0: 261.33, 1: 253.45, 2: 266.70 },\n      retailProducts: { 0: 157.91, 1: 169.91, 2: 129.70 },\n      surgicalSupplies: { 0: 77.15, 1: 103.45, 2: 136.35 },\n      totalCostOfGoodsSold: { 0: 1077.68, 1: 1071.74, 2: 1103.10 },\n\n      // ---- Gross Profit ----\n      grossProfit: { 0: 2488.69, 1: 2548.72, 2: 2623.00 },\n\n      // ---- Salaries & Benefits ----\n      employeeBenefits: { 0: 39.55, 1: 36.14, 2: 31.43 },\n      payroll: { 0: 1217.00, 1: 1112.00, 2: 967.00 },\n      payrollTaxes: { 0: 51.84, 1: 47.37, 2: 41.19 },\n      totalSalariesBenefits: { 0: 1308.40, 1: 1195.51, 2: 1039.62 },\n\n      // ---- Operating Expenses ----\n      marketing: { 0: 499.29, 1: 253.43, 2: 37.26 },\n      automobile: { 0: 21.25, 1: 21.50, 2: 21.76 },\n      creditCardBankCharges: { 0: 111.27, 1: 96.67, 2: 92.78 },\n      donations: { 0: 1.25, 1: 1.25, 2: 1.25 },\n      computerTelephoneUtilities: { 0: 92.73, 1: 78.93, 2: 92.41 },\n      depreciation: { 0: 167.14, 1: 150.43, 2: 135.38 },\n      duesSubscriptions: { 0: 39.94, 1: 40.55, 2: 41.73 },\n      education: { 0: 23.00, 1: 26.18, 2: 24.63 },\n      equipmentRental: { 0: 17.62, 1: 0, 2: 0 },\n      insurance: { 0: 44.22, 1: 44.89, 2: 46.20 },\n      interestExpense: { 0: 220.14, 1: 212.17, 2: 194.81 },\n      travelMealsEntertainment: { 0: 12.66, 1: 15.45, 2: 11.67 },\n      rent: { 0: 199.13, 1: 205.10, 2: 211.25 },\n      officeExpenses: { 0: 74.89, 1: 76.03, 2: 78.25 },\n      professionalFees: { 0: 35.66, 1: 36.20, 2: 37.26 },\n      repairsMaintenance: { 0: 164.05, 1: 43.45, 2: 44.71 },\n      localTax: { 0: 35.66, 1: 36.20, 2: 37.26 },\n      stateTax: { 0: 78.46, 1: 79.65, 2: 81.97 },\n      totalOperatingExpense: { 0: 1838.38, 1: 1418.07, 2: 1190.60 },\n\n      // ---- Operating Income ----\n      operatingIncome: { 0: -658.09, 1: -64.86, 2: 392.78 },\n\n      // ---- Other Income / Expense ----\n      gainOnAssetSale: { 0: 0, 1: 0, 2: 42.20 },\n      interestIncome: { 0: 4.89, 1: 0, 2: 9.46 },\n      otherExpenses: { 0: 0, 1: 6.13, 2: 5.33 },\n      totalOtherIncomeExpense: { 0: 4.89, 1: 6.13, 2: 56.99 },\n\n      // ---- Income Before Tax ----\n      incomeBeforeTax: { 0: -653.21, 1: -58.73, 2: 449.77 },\n\n      // ---- Net Income ----\n      netIncome: { 0: -653.21, 1: -58.73, 2: 449.77 }\n\n    },\n\n    // Placeholders for future Balance Sheet & Cash Flow data\n    balanceSheet: {\n      assets: {},\n      liabilities: {},\n      equity: {}\n    },\n    cashFlow: {\n      operating: {},\n      investing: {},\n      financing: {}\n    }\n  },\n\n  // Medispa-specific assumptions and adjustment factors\n  assumptions: {\n    marketingTarget: 0.10, // 10% of revenue for sustainable marketing\n    ownerCompensationAddback: 300.0, // $300K owner compensation normalization\n    industryBenchmarks: {\n      revenuePerSqFt: { min: 800, target: 1200, current: 1490.44 }, // $3.726M / 2500 sqft\n      revenuePerProvider: { min: 300, target: 400, current: 1242.03 }, // $3.726M / 3 providers\n      injectableMargin: { min: 0.75, target: 0.80, current: 0.70 }, // 70% vs 80% target\n      ebitdaMargin: { min: 0.20, target: 0.25, current: 0.185 }, // 18.5% vs 25% target\n      customerRetention: { min: 0.65, target: 0.75, current: 0.72 }\n    },\n    riskFactors: {\n      regulatoryRisk: 'Medium',\n      keyPersonDependency: 'High',\n      competitionDensity: 'Medium',\n      technologyObsolescence: 'Medium',\n      reimbursementRisk: 'Low'\n    }\n  },\n\n  // Financial modeling parameters\n  models: {\n    dcf: {\n      discountRate: 0.12, // 12% WACC for medispa business\n      terminalGrowthRate: 0.025, // 2.5% terminal growth\n      projectionYears: 5,\n      taxRate: 0.25\n    },\n    adjustments: {\n      2024: {\n        marketing: 372.61, // Normalized to 10% of revenue\n        ownerAddback: 300.0, // Replace owner draws with market compensation\n        adjustedOperatingIncome: 357.43,\n        adjustedEbitda: 687.63, // Operating Income + Depreciation + Interest\n        adjustmentRationale: [\n          'Marketing normalized to sustainable 10% of revenue',\n          'Owner compensation replaced with market-rate management',\n          'EBITDA calculation includes depreciation and interest add-backs',\n          'One-time gains excluded from operating performance'\n        ]\n      }\n    }\n  }\n};\n\nexport default defaultFinancialData;\n","/**\n * Enhanced Local Storage Service for Finance Analyst Pro\n * Provides comprehensive data persistence with compression, encryption, and versioning\n */\n\nimport { apiLogger } from '../utils/apiLogger.js';\n\n// Storage configuration\nconst STORAGE_CONFIG = {\n  version: '1.0.0',\n  prefix: 'financeanalyst_',\n  compression: {\n    enabled: true,\n    threshold: 1024 // Compress data larger than 1KB\n  },\n  encryption: {\n    enabled: false, // Will be enabled when auth is implemented\n    algorithm: 'AES-GCM'\n  },\n  quotaManagement: {\n    maxSize: 50 * 1024 * 1024, // 50MB limit\n    cleanupThreshold: 0.8 // Clean up when 80% full\n  }\n};\n\n// Data schemas for validation\nconst DATA_SCHEMAS = {\n  dcfModel: {\n    version: '1.0',\n    required: ['symbol', 'assumptions', 'projections', 'valuation'],\n    structure: {\n      symbol: 'string',\n      assumptions: 'object',\n      projections: 'object',\n      valuation: 'object',\n      metadata: 'object'\n    }\n  },\n  lboModel: {\n    version: '1.0',\n    required: ['symbol', 'transaction', 'financing', 'returns'],\n    structure: {\n      symbol: 'string',\n      transaction: 'object',\n      financing: 'object',\n      returns: 'object',\n      metadata: 'object'\n    }\n  },\n  monteCarloResults: {\n    version: '1.0',\n    required: ['modelType', 'iterations', 'results', 'statistics'],\n    structure: {\n      modelType: 'string',\n      iterations: 'number',\n      results: 'array',\n      statistics: 'object',\n      metadata: 'object'\n    }\n  },\n  userPreferences: {\n    version: '1.0',\n    required: ['theme', 'layout'],\n    structure: {\n      theme: 'string',\n      layout: 'object',\n      notifications: 'object',\n      privacy: 'object'\n    }\n  },\n  marketData: {\n    version: '1.0',\n    required: ['symbol', 'data', 'timestamp'],\n    structure: {\n      symbol: 'string',\n      data: 'object',\n      timestamp: 'number',\n      source: 'string'\n    }\n  }\n};\n\n/**\n * Enhanced Storage Service Class\n */\nclass StorageService {\n  constructor() {\n    this.isAvailable = this.checkStorageAvailability();\n    this.compressionWorker = null;\n    this.initializeCompression();\n    this.setupQuotaMonitoring();\n  }\n\n  /**\n   * Check if localStorage is available\n   */\n  checkStorageAvailability() {\n    try {\n      const test = '__storage_test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      apiLogger.log('ERROR', 'localStorage not available', { error: e.message });\n      return false;\n    }\n  }\n\n  /**\n   * Initialize compression capabilities\n   */\n  initializeCompression() {\n    if (STORAGE_CONFIG.compression.enabled && 'CompressionStream' in window) {\n      // Modern browsers with compression support\n      this.compressionAvailable = true;\n    } else {\n      // Fallback to simple JSON stringification\n      this.compressionAvailable = false;\n    }\n  }\n\n  /**\n   * Setup quota monitoring\n   */\n  setupQuotaMonitoring() {\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      this.monitorQuota();\n    }\n  }\n\n  /**\n   * Monitor storage quota usage\n   */\n  async monitorQuota() {\n    try {\n      const estimate = await navigator.storage.estimate();\n      const usageRatio = estimate.usage / estimate.quota;\n\n      if (usageRatio > STORAGE_CONFIG.quotaManagement.cleanupThreshold) {\n        apiLogger.log('WARN', 'Storage quota threshold exceeded', {\n          usage: estimate.usage,\n          quota: estimate.quota,\n          ratio: usageRatio\n        });\n        await this.performCleanup();\n      }\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to monitor storage quota', { error: error.message });\n    }\n  }\n\n  /**\n   * Generate storage key with prefix\n   */\n  generateKey(type, identifier) {\n    return `${STORAGE_CONFIG.prefix}${type}_${identifier}`;\n  }\n\n  /**\n   * Validate data against schema\n   */\n  validateData(data, schemaType) {\n    const schema = DATA_SCHEMAS[schemaType];\n    if (!schema) {\n      throw new Error(`Unknown schema type: ${schemaType}`);\n    }\n\n    // Check required fields\n    for (const field of schema.required) {\n      if (!(field in data)) {\n        throw new Error(`Missing required field: ${field}`);\n      }\n    }\n\n    // Validate data types\n    for (const [field, expectedType] of Object.entries(schema.structure)) {\n      if (field in data) {\n        const actualType = Array.isArray(data[field]) ? 'array' : typeof data[field];\n        if (actualType !== expectedType) {\n          throw new Error(`Invalid type for ${field}: expected ${expectedType}, got ${actualType}`);\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Compress data if enabled and beneficial\n   */\n  async compressData(data) {\n    const jsonString = JSON.stringify(data);\n\n    if (!STORAGE_CONFIG.compression.enabled ||\n        jsonString.length < STORAGE_CONFIG.compression.threshold ||\n        !this.compressionAvailable) {\n      return { data: jsonString, compressed: false };\n    }\n\n    try {\n      // Simple compression using built-in methods\n      const compressed = await this.simpleCompress(jsonString);\n      return { data: compressed, compressed: true };\n    } catch (error) {\n      apiLogger.log('WARN', 'Compression failed, storing uncompressed', { error: error.message });\n      return { data: jsonString, compressed: false };\n    }\n  }\n\n  /**\n   * Simple compression implementation\n   */\n  async simpleCompress(data) {\n    // For now, use a simple encoding - can be enhanced with actual compression\n    return btoa(encodeURIComponent(data));\n  }\n\n  /**\n   * Decompress data\n   */\n  async decompressData(compressedData, isCompressed) {\n    if (!isCompressed) {\n      return compressedData;\n    }\n\n    try {\n      return decodeURIComponent(atob(compressedData));\n    } catch (error) {\n      apiLogger.log('ERROR', 'Decompression failed', { error: error.message });\n      throw new Error('Failed to decompress data');\n    }\n  }\n\n  /**\n   * Store data with metadata\n   */\n  async setItem(type, identifier, data, options = {}) {\n    if (!this.isAvailable) {\n      throw new Error('Storage not available');\n    }\n\n    try {\n      // Validate data if schema exists\n      if (DATA_SCHEMAS[type]) {\n        this.validateData(data, type);\n      }\n\n      // Prepare storage object\n      const storageObject = {\n        version: STORAGE_CONFIG.version,\n        schemaVersion: DATA_SCHEMAS[type]?.version || '1.0',\n        timestamp: Date.now(),\n        data,\n        metadata: {\n          type,\n          identifier,\n          size: JSON.stringify(data).length,\n          ...options.metadata\n        }\n      };\n\n      // Compress if needed\n      const { data: processedData, compressed } = await this.compressData(storageObject);\n\n      // Add compression flag\n      const finalObject = {\n        compressed,\n        data: processedData\n      };\n\n      const key = this.generateKey(type, identifier);\n      localStorage.setItem(key, JSON.stringify(finalObject));\n\n      apiLogger.log('DEBUG', 'Data stored successfully', {\n        key,\n        type,\n        identifier,\n        compressed,\n        size: processedData.length\n      });\n\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to store data', {\n        type,\n        identifier,\n        error: error.message\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Retrieve data with decompression\n   */\n  async getItem(type, identifier) {\n    if (!this.isAvailable) {\n      return null;\n    }\n\n    try {\n      const key = this.generateKey(type, identifier);\n      const stored = localStorage.getItem(key);\n\n      if (!stored) {\n        return null;\n      }\n\n      const parsedStored = JSON.parse(stored);\n      const decompressedData = await this.decompressData(\n        parsedStored.data,\n        parsedStored.compressed\n      );\n\n      const storageObject = JSON.parse(decompressedData);\n\n      // Check version compatibility\n      if (storageObject.version !== STORAGE_CONFIG.version) {\n        apiLogger.log('WARN', 'Version mismatch detected', {\n          stored: storageObject.version,\n          current: STORAGE_CONFIG.version\n        });\n        // Could trigger migration here\n      }\n\n      apiLogger.log('DEBUG', 'Data retrieved successfully', {\n        key,\n        type,\n        identifier,\n        age: Date.now() - storageObject.timestamp\n      });\n\n      return storageObject.data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve data', {\n        type,\n        identifier,\n        error: error.message\n      });\n      return null;\n    }\n  }\n\n  /**\n   * Remove specific item\n   */\n  removeItem(type, identifier) {\n    if (!this.isAvailable) {\n      return false;\n    }\n\n    try {\n      const key = this.generateKey(type, identifier);\n      localStorage.removeItem(key);\n\n      apiLogger.log('DEBUG', 'Data removed successfully', { key, type, identifier });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to remove data', {\n        type,\n        identifier,\n        error: error.message\n      });\n      return false;\n    }\n  }\n\n  /**\n   * List all items of a specific type\n   */\n  listItems(type) {\n    if (!this.isAvailable) {\n      return [];\n    }\n\n    const prefix = this.generateKey(type, '');\n    const items = [];\n\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(prefix)) {\n        const identifier = key.replace(prefix, '');\n        items.push(identifier);\n      }\n    }\n\n    return items;\n  }\n\n  /**\n   * Perform cleanup of old data\n   */\n  async performCleanup() {\n    const cutoffTime = Date.now() - (30 * 24 * 60 * 60 * 1000); // 30 days\n    let cleanedCount = 0;\n\n    for (let i = localStorage.length - 1; i >= 0; i--) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(STORAGE_CONFIG.prefix)) {\n        try {\n          const stored = localStorage.getItem(key);\n          const parsedStored = JSON.parse(stored);\n          const decompressedData = await this.decompressData(\n            parsedStored.data,\n            parsedStored.compressed\n          );\n          const storageObject = JSON.parse(decompressedData);\n\n          if (storageObject.timestamp < cutoffTime) {\n            localStorage.removeItem(key);\n            cleanedCount++;\n          }\n        } catch (error) {\n          // Remove corrupted data\n          localStorage.removeItem(key);\n          cleanedCount++;\n        }\n      }\n    }\n\n    apiLogger.log('INFO', 'Storage cleanup completed', { cleanedCount });\n    return cleanedCount;\n  }\n\n  /**\n   * Get storage statistics\n   */\n  async getStorageStats() {\n    let totalSize = 0;\n    let itemCount = 0;\n    const typeStats = {};\n\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(STORAGE_CONFIG.prefix)) {\n        const value = localStorage.getItem(key);\n        totalSize += value.length;\n        itemCount++;\n\n        // Extract type from key\n        const type = key.split('_')[1];\n        if (type) {\n          typeStats[type] = (typeStats[type] || 0) + 1;\n        }\n      }\n    }\n\n    const quota = await this.getQuotaInfo();\n\n    return {\n      totalSize,\n      itemCount,\n      typeStats,\n      quota,\n      usageRatio: quota ? totalSize / quota.quota : 0\n    };\n  }\n\n  /**\n   * Get quota information\n   */\n  async getQuotaInfo() {\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      try {\n        return await navigator.storage.estimate();\n      } catch (error) {\n        apiLogger.log('ERROR', 'Failed to get quota info', { error: error.message });\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Clear all application data\n   */\n  clearAll() {\n    if (!this.isAvailable) {\n      return false;\n    }\n\n    const keys = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(STORAGE_CONFIG.prefix)) {\n        keys.push(key);\n      }\n    }\n\n    keys.forEach(key => localStorage.removeItem(key));\n\n    apiLogger.log('INFO', 'All application data cleared', { clearedCount: keys.length });\n    return true;\n  }\n}\n\n// Create and export singleton instance\nexport const storageService = new StorageService();\nexport default storageService;\n","/**\n * Financial Data Storage Service\n * Specialized storage utilities for financial models and market data\n */\n\nimport { apiLogger } from '../utils/apiLogger.js';\n\nimport { storageService } from './storageService.js';\n\n/**\n * Financial Data Storage Manager\n */\nclass FinancialDataStorage {\n  constructor() {\n    this.storage = storageService;\n  }\n\n  /**\n   * DCF Model Storage\n   */\n  async saveDCFModel(symbol, modelData) {\n    try {\n      const dcfData = {\n        symbol: symbol.toUpperCase(),\n        assumptions: modelData.assumptions || {},\n        projections: modelData.projections || {},\n        valuation: modelData.valuation || {},\n        metadata: {\n          createdAt: Date.now(),\n          lastModified: Date.now(),\n          version: '1.0',\n          modelType: 'DCF',\n          ...modelData.metadata\n        }\n      };\n\n      await this.storage.setItem('dcfModel', symbol.toUpperCase(), dcfData);\n\n      apiLogger.log('INFO', 'DCF model saved', { symbol, valuation: dcfData.valuation.intrinsicValue });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save DCF model', { symbol, error: error.message });\n      throw error;\n    }\n  }\n\n  async getDCFModel(symbol) {\n    try {\n      const data = await this.storage.getItem('dcfModel', symbol.toUpperCase());\n      if (data) {\n        apiLogger.log('DEBUG', 'DCF model retrieved', { symbol });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve DCF model', { symbol, error: error.message });\n      return null;\n    }\n  }\n\n  async listDCFModels() {\n    return this.storage.listItems('dcfModel');\n  }\n\n  async deleteDCFModel(symbol) {\n    return this.storage.removeItem('dcfModel', symbol.toUpperCase());\n  }\n\n  /**\n   * LBO Model Storage\n   */\n  async saveLBOModel(symbol, modelData) {\n    try {\n      const lboData = {\n        symbol: symbol.toUpperCase(),\n        transaction: modelData.transaction || {},\n        financing: modelData.financing || {},\n        returns: modelData.returns || {},\n        metadata: {\n          createdAt: Date.now(),\n          lastModified: Date.now(),\n          version: '1.0',\n          modelType: 'LBO',\n          ...modelData.metadata\n        }\n      };\n\n      await this.storage.setItem('lboModel', symbol.toUpperCase(), lboData);\n\n      apiLogger.log('INFO', 'LBO model saved', {\n        symbol,\n        irr: lboData.returns.irr,\n        moic: lboData.returns.moic\n      });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save LBO model', { symbol, error: error.message });\n      throw error;\n    }\n  }\n\n  async getLBOModel(symbol) {\n    try {\n      const data = await this.storage.getItem('lboModel', symbol.toUpperCase());\n      if (data) {\n        apiLogger.log('DEBUG', 'LBO model retrieved', { symbol });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve LBO model', { symbol, error: error.message });\n      return null;\n    }\n  }\n\n  async listLBOModels() {\n    return this.storage.listItems('lboModel');\n  }\n\n  async deleteLBOModel(symbol) {\n    return this.storage.removeItem('lboModel', symbol.toUpperCase());\n  }\n\n  /**\n   * Monte Carlo Results Storage\n   */\n  async saveMonteCarloResults(modelId, resultsData) {\n    try {\n      const mcData = {\n        modelType: resultsData.modelType || 'DCF',\n        iterations: resultsData.iterations || 10000,\n        results: resultsData.results || [],\n        statistics: resultsData.statistics || {},\n        metadata: {\n          createdAt: Date.now(),\n          modelId,\n          symbol: resultsData.symbol,\n          version: '1.0',\n          ...resultsData.metadata\n        }\n      };\n\n      await this.storage.setItem('monteCarloResults', modelId, mcData);\n\n      apiLogger.log('INFO', 'Monte Carlo results saved', {\n        modelId,\n        iterations: mcData.iterations,\n        mean: mcData.statistics.mean\n      });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save Monte Carlo results', { modelId, error: error.message });\n      throw error;\n    }\n  }\n\n  async getMonteCarloResults(modelId) {\n    try {\n      const data = await this.storage.getItem('monteCarloResults', modelId);\n      if (data) {\n        apiLogger.log('DEBUG', 'Monte Carlo results retrieved', { modelId });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve Monte Carlo results', { modelId, error: error.message });\n      return null;\n    }\n  }\n\n  async listMonteCarloResults() {\n    return this.storage.listItems('monteCarloResults');\n  }\n\n  async deleteMonteCarloResults(modelId) {\n    return this.storage.removeItem('monteCarloResults', modelId);\n  }\n\n  /**\n   * Market Data Storage with TTL\n   */\n  async saveMarketData(symbol, marketData, ttlMinutes = 15) {\n    try {\n      const data = {\n        symbol: symbol.toUpperCase(),\n        data: marketData,\n        timestamp: Date.now(),\n        source: marketData.source || 'unknown',\n        expiresAt: Date.now() + (ttlMinutes * 60 * 1000)\n      };\n\n      await this.storage.setItem('marketData', symbol.toUpperCase(), data);\n\n      apiLogger.log('DEBUG', 'Market data cached', {\n        symbol,\n        source: data.source,\n        ttlMinutes\n      });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to cache market data', { symbol, error: error.message });\n      throw error;\n    }\n  }\n\n  async getMarketData(symbol) {\n    try {\n      const data = await this.storage.getItem('marketData', symbol.toUpperCase());\n\n      if (data && data.expiresAt > Date.now()) {\n        apiLogger.log('DEBUG', 'Market data cache hit', { symbol });\n        return data.data;\n      } else if (data) {\n        // Data expired, remove it\n        await this.deleteMarketData(symbol);\n        apiLogger.log('DEBUG', 'Market data cache expired', { symbol });\n      }\n\n      return null;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve market data', { symbol, error: error.message });\n      return null;\n    }\n  }\n\n  async deleteMarketData(symbol) {\n    return this.storage.removeItem('marketData', symbol.toUpperCase());\n  }\n\n  /**\n   * User Preferences Storage\n   */\n  async saveUserPreferences(preferences) {\n    try {\n      const prefData = {\n        theme: preferences.theme || 'light',\n        layout: preferences.layout || {},\n        notifications: preferences.notifications || {},\n        privacy: preferences.privacy || {},\n        metadata: {\n          lastUpdated: Date.now(),\n          version: '1.0'\n        }\n      };\n\n      await this.storage.setItem('userPreferences', 'default', prefData);\n\n      apiLogger.log('INFO', 'User preferences saved', { theme: prefData.theme });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save user preferences', { error: error.message });\n      throw error;\n    }\n  }\n\n  async getUserPreferences() {\n    try {\n      const data = await this.storage.getItem('userPreferences', 'default');\n      if (data) {\n        apiLogger.log('DEBUG', 'User preferences retrieved');\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve user preferences', { error: error.message });\n      return null;\n    }\n  }\n\n  /**\n   * Watchlist Storage\n   */\n  async saveWatchlist(name, symbols) {\n    try {\n      const watchlistData = {\n        name,\n        symbols: symbols.map(s => s.toUpperCase()),\n        metadata: {\n          createdAt: Date.now(),\n          lastModified: Date.now(),\n          symbolCount: symbols.length\n        }\n      };\n\n      await this.storage.setItem('watchlist', name, watchlistData);\n\n      apiLogger.log('INFO', 'Watchlist saved', { name, symbolCount: symbols.length });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save watchlist', { name, error: error.message });\n      throw error;\n    }\n  }\n\n  async getWatchlist(name) {\n    try {\n      const data = await this.storage.getItem('watchlist', name);\n      if (data) {\n        apiLogger.log('DEBUG', 'Watchlist retrieved', { name });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve watchlist', { name, error: error.message });\n      return null;\n    }\n  }\n\n  async listWatchlists() {\n    return this.storage.listItems('watchlist');\n  }\n\n  async deleteWatchlist(name) {\n    return this.storage.removeItem('watchlist', name);\n  }\n\n  /**\n   * Export all financial data\n   */\n  async exportAllData() {\n    try {\n      const exportData = {\n        timestamp: Date.now(),\n        version: '1.0',\n        data: {\n          dcfModels: {},\n          lboModels: {},\n          monteCarloResults: {},\n          watchlists: {},\n          userPreferences: null\n        }\n      };\n\n      // Export DCF models\n      const dcfModels = await this.listDCFModels();\n      for (const symbol of dcfModels) {\n        exportData.data.dcfModels[symbol] = await this.getDCFModel(symbol);\n      }\n\n      // Export LBO models\n      const lboModels = await this.listLBOModels();\n      for (const symbol of lboModels) {\n        exportData.data.lboModels[symbol] = await this.getLBOModel(symbol);\n      }\n\n      // Export Monte Carlo results\n      const mcResults = await this.listMonteCarloResults();\n      for (const modelId of mcResults) {\n        exportData.data.monteCarloResults[modelId] = await this.getMonteCarloResults(modelId);\n      }\n\n      // Export watchlists\n      const watchlists = await this.listWatchlists();\n      for (const name of watchlists) {\n        exportData.data.watchlists[name] = await this.getWatchlist(name);\n      }\n\n      // Export user preferences\n      exportData.data.userPreferences = await this.getUserPreferences();\n\n      apiLogger.log('INFO', 'Data export completed', {\n        dcfCount: dcfModels.length,\n        lboCount: lboModels.length,\n        mcCount: mcResults.length,\n        watchlistCount: watchlists.length\n      });\n\n      return exportData;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to export data', { error: error.message });\n      throw error;\n    }\n  }\n\n  /**\n   * Import financial data\n   */\n  async importData(importData) {\n    try {\n      let importCount = 0;\n\n      // Import DCF models\n      if (importData.data.dcfModels) {\n        for (const [symbol, data] of Object.entries(importData.data.dcfModels)) {\n          await this.saveDCFModel(symbol, data);\n          importCount++;\n        }\n      }\n\n      // Import LBO models\n      if (importData.data.lboModels) {\n        for (const [symbol, data] of Object.entries(importData.data.lboModels)) {\n          await this.saveLBOModel(symbol, data);\n          importCount++;\n        }\n      }\n\n      // Import Monte Carlo results\n      if (importData.data.monteCarloResults) {\n        for (const [modelId, data] of Object.entries(importData.data.monteCarloResults)) {\n          await this.saveMonteCarloResults(modelId, data);\n          importCount++;\n        }\n      }\n\n      // Import watchlists\n      if (importData.data.watchlists) {\n        for (const [name, data] of Object.entries(importData.data.watchlists)) {\n          await this.saveWatchlist(name, data.symbols);\n          importCount++;\n        }\n      }\n\n      // Import user preferences\n      if (importData.data.userPreferences) {\n        await this.saveUserPreferences(importData.data.userPreferences);\n        importCount++;\n      }\n\n      apiLogger.log('INFO', 'Data import completed', { importCount });\n      return importCount;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to import data', { error: error.message });\n      throw error;\n    }\n  }\n\n  /**\n   * Get storage statistics for financial data\n   */\n  async getFinancialDataStats() {\n    const stats = await this.storage.getStorageStats();\n\n    return {\n      ...stats,\n      financialData: {\n        dcfModels: (await this.listDCFModels()).length,\n        lboModels: (await this.listLBOModels()).length,\n        monteCarloResults: (await this.listMonteCarloResults()).length,\n        watchlists: (await this.listWatchlists()).length\n      }\n    };\n  }\n\n  /**\n   * Clean up expired market data\n   */\n  async cleanupExpiredMarketData() {\n    const marketDataKeys = this.storage.listItems('marketData');\n    let cleanedCount = 0;\n\n    for (const symbol of marketDataKeys) {\n      const data = await this.storage.getItem('marketData', symbol);\n      if (data && data.expiresAt <= Date.now()) {\n        await this.deleteMarketData(symbol);\n        cleanedCount++;\n      }\n    }\n\n    apiLogger.log('INFO', 'Expired market data cleaned', { cleanedCount });\n    return cleanedCount;\n  }\n}\n\n// Create and export singleton instance\nexport const financialDataStorage = new FinancialDataStorage();\nexport default financialDataStorage;\n","/**\n * Data Export/Import Component\n * Provides UI for exporting and importing financial data\n */\n\nimport {\n  Download,\n  Upload,\n  FileText,\n  Database,\n  AlertCircle,\n  CheckCircle,\n  Loader2,\n  Info,\n  FileSpreadsheet,\n  Bookmark,\n  Users,\n  Clock,\n  Eye,\n  Edit3,\n  Share,\n  Save\n} from 'lucide-react';\nimport React, { useState, useCallback } from 'react';\n\nimport { financialDataStorage } from '../services/financialDataStorage.js';\nimport { apiLogger } from '../utils/apiLogger.js';\n\nconst DataExportImport = ({ data, onDataChange, savedAnalyses, onAnalysesChange }) => {\n  const [activeTab, setActiveTab] = useState('excel');\n  const [isExporting, setIsExporting] = useState(false);\n  const [isImporting, setIsImporting] = useState(false);\n  const [exportStatus, setExportStatus] = useState(null);\n  const [importStatus, setImportStatus] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [templates, setTemplates] = useState([\n    { id: 1, name: 'Standard 3-Statement Model', category: 'General', lastUsed: '2024-01-15', uses: 42 },\n    { id: 2, name: 'SaaS DCF Template', category: 'Technology', lastUsed: '2024-01-10', uses: 28 },\n    { id: 3, name: 'LBO Analysis Template', category: 'Private Equity', lastUsed: '2024-01-05', uses: 35 }\n  ]);\n  const [collaborators, setCollaborators] = useState([\n    { id: 1, name: 'John Smith', email: 'john@company.com', role: 'Analyst', lastActive: '2 min ago', avatar: 'JS' },\n    { id: 2, name: 'Sarah Johnson', email: 'sarah@company.com', role: 'VP', lastActive: '1 hour ago', avatar: 'SJ' }\n  ]);\n\n  // Load storage statistics on component mount\n  React.useEffect(() => {\n    loadStats();\n  }, []);\n\n  const loadStats = async() => {\n    try {\n      const storageStats = await financialDataStorage.getFinancialDataStats();\n      setStats(storageStats);\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to load storage stats', { error: error.message });\n    }\n  };\n\n  const handleExport = async() => {\n    setIsExporting(true);\n    setExportStatus(null);\n\n    try {\n      const exportData = await financialDataStorage.exportAllData();\n\n      // Create downloadable file\n      const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n        type: 'application/json'\n      });\n\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `financeanalyst_backup_${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n\n      setExportStatus({\n        type: 'success',\n        message: 'Data exported successfully',\n        details: {\n          dcfModels: Object.keys(exportData.data.dcfModels).length,\n          lboModels: Object.keys(exportData.data.lboModels).length,\n          monteCarloResults: Object.keys(exportData.data.monteCarloResults).length,\n          watchlists: Object.keys(exportData.data.watchlists).length\n        }\n      });\n\n      apiLogger.log('INFO', 'Data export completed', {\n        totalItems: Object.keys(exportData.data.dcfModels).length +\n                   Object.keys(exportData.data.lboModels).length +\n                   Object.keys(exportData.data.monteCarloResults).length +\n                   Object.keys(exportData.data.watchlists).length\n      });\n    } catch (error) {\n      setExportStatus({\n        type: 'error',\n        message: 'Export failed',\n        details: error.message\n      });\n      apiLogger.log('ERROR', 'Data export failed', { error: error.message });\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  const handleImport = async(event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    setIsImporting(true);\n    setImportStatus(null);\n\n    try {\n      const text = await file.text();\n      const importData = JSON.parse(text);\n\n      // Validate import data structure\n      if (!importData.data || !importData.version) {\n        throw new Error('Invalid backup file format');\n      }\n\n      const importCount = await financialDataStorage.importData(importData);\n\n      setImportStatus({\n        type: 'success',\n        message: 'Data imported successfully',\n        details: {\n          importCount,\n          timestamp: new Date(importData.timestamp).toLocaleString()\n        }\n      });\n\n      // Refresh stats\n      await loadStats();\n\n      apiLogger.log('INFO', 'Data import completed', { importCount });\n    } catch (error) {\n      setImportStatus({\n        type: 'error',\n        message: 'Import failed',\n        details: error.message\n      });\n      apiLogger.log('ERROR', 'Data import failed', { error: error.message });\n    } finally {\n      setIsImporting(false);\n      // Clear file input\n      event.target.value = '';\n    }\n  };\n\n  const formatBytes = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Data Management</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            ×\n          </button>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8\">\n            {[\n              { id: 'excel', label: 'Excel Integration', icon: FileSpreadsheet },\n              { id: 'templates', label: 'Templates', icon: Bookmark },\n              { id: 'collaboration', label: 'Collaboration', icon: Users },\n              { id: 'export', label: 'Export', icon: Download },\n              { id: 'import', label: 'Import', icon: Upload },\n              { id: 'stats', label: 'Statistics', icon: Database }\n            ].map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span>{tab.label}</span>\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n\n          {activeTab === 'excel' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-start\">\n                  <Info className=\"w-5 h-5 text-blue-600 mt-0.5 mr-3\" />\n                  <div>\n                    <h3 className=\"font-medium text-blue-900\">Excel Integration</h3>\n                    <p className=\"text-sm text-blue-700 mt-1\">\n                      Connect your Excel spreadsheets to FinanceAnalyst for seamless data synchronization.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <button\n                onClick={handleExport}\n                disabled={isExporting}\n                className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center\"\n              >\n                {isExporting ? (\n                  <>\n                    <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                    Exporting...\n                  </>\n                ) : (\n                  <>\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Export All Data\n                  </>\n                )}\n              </button>\n\n              {exportStatus && (\n                <div\n                  className={`border rounded-lg p-4 ${\n                    exportStatus.type === 'success'\n                      ? 'bg-green-50 border-green-200'\n                      : 'bg-red-50 border-red-200'\n                  }`}\n                >\n                  <div className=\"flex items-start\">\n                    {exportStatus.type === 'success' ? (\n                      <CheckCircle className=\"w-5 h-5 text-green-600 mt-0.5 mr-3\" />\n                    ) : (\n                      <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5 mr-3\" />\n                    )}\n                    <div>\n                      <h4\n                        className={`font-medium ${\n                          exportStatus.type === 'success' ? 'text-green-900' : 'text-red-900'\n                        }`}\n                      >\n                        {exportStatus.message}\n                      </h4>\n                      {exportStatus.type === 'success' && exportStatus.details && (\n                        <div className=\"text-sm text-green-700 mt-2\">\n                          <p>Exported items:</p>\n                          <ul className=\"list-disc list-inside ml-4\">\n                            <li>{exportStatus.details.dcfModels} DCF Models</li>\n                            <li>{exportStatus.details.lboModels} LBO Models</li>\n                            <li>{exportStatus.details.monteCarloResults} Monte Carlo Results</li>\n                            <li>{exportStatus.details.watchlists} Watchlists</li>\n                          </ul>\n                        </div>\n                      )}\n                      {exportStatus.type === 'error' && (\n                        <p className=\"text-sm text-red-700 mt-1\">{exportStatus.details}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'templates' && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Templates</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {templates.map((template) => (\n                  <div key={template.id} className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">{template.name}</h4>\n                    <p className=\"text-sm text-gray-600\">{template.category}</p>\n                    <p className=\"text-sm text-gray-600\">Last used: {template.lastUsed}</p>\n                    <p className=\"text-sm text-gray-600\">Uses: {template.uses}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'collaboration' && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Collaboration</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {collaborators.map((collaborator) => (\n                  <div key={collaborator.id} className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">{collaborator.name}</h4>\n                    <p className=\"text-sm text-gray-600\">{collaborator.email}</p>\n                    <p className=\"text-sm text-gray-600\">Role: {collaborator.role}</p>\n                    <p className=\"text-sm text-gray-600\">Last active: {collaborator.lastActive}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'export' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-start\">\n                  <Info className=\"w-5 h-5 text-blue-600 mt-0.5 mr-3\" />\n                  <div>\n                    <h3 className=\"font-medium text-blue-900\">Export Your Data</h3>\n                    <p className=\"text-sm text-blue-700 mt-1\">\n                      Download all your financial models, analysis results, and preferences as a backup file.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <button\n                onClick={handleExport}\n                disabled={isExporting}\n                className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center\"\n              >\n                {isExporting ? (\n                  <>\n                    <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                    Exporting...\n                  </>\n                ) : (\n                  <>\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Export All Data\n                  </>\n                )}\n              </button>\n\n              {exportStatus && (\n                <div\n                  className={`border rounded-lg p-4 ${\n                    exportStatus.type === 'success'\n                      ? 'bg-green-50 border-green-200'\n                      : 'bg-red-50 border-red-200'\n                  }`}\n                >\n                  <div className=\"flex items-start\">\n                    {exportStatus.type === 'success' ? (\n                      <CheckCircle className=\"w-5 h-5 text-green-600 mt-0.5 mr-3\" />\n                    ) : (\n                      <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5 mr-3\" />\n                    )}\n                    <div>\n                      <h4\n                        className={`font-medium ${\n                          exportStatus.type === 'success' ? 'text-green-900' : 'text-red-900'\n                        }`}\n                      >\n                        {exportStatus.message}\n                      </h4>\n                      {exportStatus.type === 'success' && exportStatus.details && (\n                        <div className=\"text-sm text-green-700 mt-2\">\n                          <p>Exported items:</p>\n                          <ul className=\"list-disc list-inside ml-4\">\n                            <li>{exportStatus.details.dcfModels} DCF Models</li>\n                            <li>{exportStatus.details.lboModels} LBO Models</li>\n                            <li>{exportStatus.details.monteCarloResults} Monte Carlo Results</li>\n                            <li>{exportStatus.details.watchlists} Watchlists</li>\n                          </ul>\n                        </div>\n                      )}\n                      {exportStatus.type === 'error' && (\n                        <p className=\"text-sm text-red-700 mt-1\">{exportStatus.details}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n\n          {activeTab === 'import' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4\">\n                <div className=\"flex items-start\">\n                  <AlertCircle className=\"w-5 h-5 text-amber-600 mt-0.5 mr-3\" />\n                  <div>\n                    <h3 className=\"font-medium text-amber-900\">Import Data</h3>\n                    <p className=\"text-sm text-amber-700 mt-1\">\n                      Import data from a backup file. This will add to your existing data.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\n                <FileText className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n                <label className=\"cursor-pointer\">\n                  <span className=\"text-lg font-medium text-gray-900\">\n                    Choose backup file\n                  </span>\n                  <p className=\"text-sm text-gray-500 mt-1\">\n                    Select a JSON backup file to import\n                  </p>\n                  <input\n                    type=\"file\"\n                    accept=\".json\"\n                    onChange={handleImport}\n                    disabled={isImporting}\n                    className=\"hidden\"\n                  />\n                </label>\n              </div>\n\n              {isImporting && (\n                <div className=\"flex items-center justify-center py-4\">\n                  <Loader2 className=\"w-6 h-6 animate-spin text-blue-600 mr-2\" />\n                  <span className=\"text-gray-600\">Importing data...</span>\n                </div>\n              )}\n\n              {importStatus && (\n                <div\n                  className={`border rounded-lg p-4 ${\n                    importStatus.type === 'success'\n                      ? 'bg-green-50 border-green-200'\n                      : 'bg-red-50 border-red-200'\n                  }`}\n                >\n                  <div className=\"flex items-start\">\n                    {importStatus.type === 'success' ? (\n                      <CheckCircle className=\"w-5 h-5 text-green-600 mt-0.5 mr-3\" />\n                    ) : (\n                      <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5 mr-3\" />\n                    )}\n                    <div>\n                      <h4\n                        className={`font-medium ${\n                          importStatus.type === 'success' ? 'text-green-900' : 'text-red-900'\n                        }`}\n                      >\n                        {importStatus.message}\n                      </h4>\n                      {importStatus.type === 'success' && importStatus.details && (\n                        <div className=\"text-sm text-green-700 mt-2\">\n                          <p>Imported {importStatus.details.importCount} items</p>\n                          <p>Backup created: {importStatus.details.timestamp}</p>\n                        </div>\n                      )}\n                      {importStatus.type === 'error' && (\n                        <p className=\"text-sm text-red-700 mt-1\">{importStatus.details}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n\n          {activeTab === 'stats' && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Storage Statistics</h3>\n\n              {stats ? (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Storage Usage</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Total Size:</span>\n                        <span className=\"font-medium\">{formatBytes(stats.totalSize)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Total Items:</span>\n                        <span className=\"font-medium\">{stats.itemCount}</span>\n                      </div>\n                      {stats.quota && (\n                        <div className=\"flex justify-between\">\n                          <span>Usage:</span>\n                          <span className=\"font-medium\">\n                            {(stats.usageRatio * 100).toFixed(1)}%\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Financial Data</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>DCF Models:</span>\n                        <span className=\"font-medium\">{stats.financialData.dcfModels}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>LBO Models:</span>\n                        <span className=\"font-medium\">{stats.financialData.lboModels}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Monte Carlo Results:</span>\n                        <span className=\"font-medium\">{stats.financialData.monteCarloResults}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Watchlists:</span>\n                        <span className=\"font-medium\">{stats.financialData.watchlists}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex items-center justify-center py-8\">\n                  <Loader2 className=\"w-6 h-6 animate-spin text-blue-600 mr-2\" />\n                  <span className=\"text-gray-600\">Loading statistics...</span>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DataExportImport;\n","import { motion, AnimatePresence } from 'framer-motion';\nimport {\n  Save,\n  Upload,\n  Download,\n  CheckCircle,\n  Activity,\n  FileText,\n  AlertCircle,\n  Clock,\n  Database,\n  Sidebar\n} from 'lucide-react';\nimport React, { useState, useEffect } from 'react';\n\nimport DataExportImport from '../components/DataExportImport';\nimport WorkflowNavigation from '../components/PrivateAnalysis/WorkflowNavigation';\nimport SEOHead from '../components/SEO/SEOHead';\nimport Button from '../components/ui/Button';\nimport Header from '../components/ui/Header';\n\n// Lazy load heavy financial components\nconst AdvancedLBOTool = React.lazy(() => import('../components/PrivateAnalysis/AdvancedLBOTool'));\nconst AnalysisResults = React.lazy(() => import('../components/PrivateAnalysis/AnalysisResults'));\nconst ContextualInsightsSidebar = React.lazy(() => import('../components/PrivateAnalysis/ContextualInsightsSidebar'));\nconst EnhancedMarketDataDashboard = React.lazy(() => import('../components/PrivateAnalysis/EnhancedMarketDataDashboard'));\nconst EnhancedScenarioAnalysis = React.lazy(() => import('../components/PrivateAnalysis/EnhancedScenarioAnalysis'));\nconst FinancialModelWorkspace = React.lazy(() => import('../components/PrivateAnalysis/FinancialModelWorkspace'));\nconst FinancialSpreadsheet = React.lazy(() => import('../components/PrivateAnalysis/FinancialSpreadsheet'));\nconst ModelingTools = React.lazy(() => import('../components/PrivateAnalysis/ModelingTools'));\nconst MonteCarloIntegrationHub = React.lazy(() => import('../components/PrivateAnalysis/MonteCarloIntegrationHub'));\n\nimport defaultFinancialData from '../data/defaultFinancialData';\nimport { formatCurrency, formatPercentage } from '../utils/dataTransformation';\nimport { calculateDCF } from '../utils/dcfCalculations';\n\n// Simple Error Boundary component\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Component error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return this.props.fallback || (\n        <div className=\"p-8 text-center text-red-400\">\n          Something went wrong. Please refresh the page.\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst PrivateAnalysis = () => {\n  const [activeTab, setActiveTab] = useState('spreadsheet');\n  const [advancedResults, setAdvancedResults] = useState({\n    lbo: null,\n    threeStatement: null,\n    scenarios: null,\n    marketData: null,\n    monteCarlo: null\n  });\n  const [financialData, setFinancialData] = useState(defaultFinancialData);\n  const [adjustedValues, setAdjustedValues] = useState({});\n  const [modelInputs, setModelInputs] = useState({\n    dcf: {\n      discountRate: 10,\n      terminalGrowthRate: 2.5,\n      projectionYears: 5,\n      taxRate: 25\n    },\n    scenario: {\n      scenarios: []\n    }\n  });\n\n  // Insights sidebar state\n  const [insightsSidebarVisible, setInsightsSidebarVisible] = useState(false);\n  const [currentMetricFocus, setCurrentMetricFocus] = useState(null);\n\n  const [savedAnalyses, setSavedAnalyses] = useState(() => {\n    try {\n      const saved = localStorage.getItem('privateAnalyses');\n      return saved ? JSON.parse(saved) : [];\n    } catch (error) {\n      console.error('Error loading saved analyses:', error);\n      return [];\n    }\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [dataStatus, setDataStatus] = useState('ready');\n  const [lastSaved, setLastSaved] = useState(null);\n\n  // Enhanced data completeness tracking\n  const getDataCompleteness = () => {\n    if (!financialData?.statements) return 0;\n\n    const coreIncomeFields = ['totalRevenue', 'totalCostOfGoodsSold', 'operatingIncome', 'netIncome'];\n    const optionalBalanceFields = ['totalAssets', 'totalLiabilities', 'totalEquity'];\n    const optionalCashFlowFields = ['operatingCashFlow', 'investingCashFlow', 'financingCashFlow'];\n\n    let completedFields = 0;\n    let totalWeightedFields = 0;\n\n    // Check core income statement fields (weighted more heavily)\n    coreIncomeFields.forEach(field => {\n      totalWeightedFields += 3; // Core fields worth 3 points each\n      if (financialData.statements.incomeStatement?.[field]?.[2] !== undefined) {\n        completedFields += 3;\n      }\n    });\n\n    // Check optional balance sheet fields\n    optionalBalanceFields.forEach(field => {\n      totalWeightedFields += 2; // Optional fields worth 2 points each\n      if (financialData.statements.balanceSheet?.[field]?.[2] !== undefined) {\n        completedFields += 2;\n      }\n    });\n\n    // Check cash flow fields\n    optionalCashFlowFields.forEach(field => {\n      totalWeightedFields += 2;\n      if (financialData.statements.cashFlow?.[field]?.[2] !== undefined) {\n        completedFields += 2;\n      }\n    });\n\n    const completionPercentage = Math.round((completedFields / totalWeightedFields) * 100);\n\n    // If we have core income statement data, ensure minimum 80% completion\n    const hasBasicIncomeData = financialData?.statements?.incomeStatement?.totalRevenue?.[2] !== undefined &&\n                              financialData?.statements?.incomeStatement?.operatingIncome?.[2] !== undefined;\n\n    return hasBasicIncomeData ? Math.max(completionPercentage, 80) : completionPercentage;\n  };\n\n  const calculateModelingProgress = () => {\n    let progress = 0;\n\n    // DCF Model completion\n    if (modelInputs?.dcf?.discountRate && modelInputs?.dcf?.terminalGrowthRate) {\n      progress += 40;\n    }\n\n    // Enhanced data completeness boost\n    const dataCompleteness = getDataCompleteness();\n    if (dataCompleteness >= 80) {\n      progress += 20; // Comprehensive data gets boost\n    }\n\n    // Scenario analysis completion\n    if (modelInputs?.scenario?.scenarios && modelInputs.scenario.scenarios.length > 0) {\n      progress += 20;\n    }\n\n    // Advanced tools usage\n    if (advancedResults.lbo || advancedResults.threeStatement || advancedResults.monteCarlo) {\n      progress += 20;\n    }\n\n    return Math.min(progress, 100);\n  };\n\n  const calculateAnalysisProgress = () => {\n    let progress = 0;\n\n    // Basic DCF analysis\n    if (financialData?.statements?.incomeStatement) {\n      progress += 30;\n    }\n\n    // Advanced modeling results\n    if (advancedResults.lbo) progress += 20;\n    if (advancedResults.threeStatement) progress += 20;\n    if (advancedResults.scenarios) progress += 15;\n    if (advancedResults.monteCarlo) progress += 15;\n\n    return Math.min(progress, 100);\n  };\n\n  const saveAnalysis = async(name) => {\n    try {\n      setIsLoading(true);\n      setDataStatus('saving');\n\n      const analysis = {\n        id: Date.now().toString(),\n        name: name || `Analysis ${new Date().toLocaleDateString()}`,\n        timestamp: new Date().toISOString(),\n        financialData,\n        adjustedValues,\n        modelInputs,\n        advancedResults,\n        dataCompleteness: getDataCompleteness(),\n        modelingProgress: calculateModelingProgress(),\n        analysisProgress: calculateAnalysisProgress()\n      };\n\n      const updated = [...savedAnalyses, analysis];\n      setSavedAnalyses(updated);\n\n      try {\n        localStorage.setItem('privateAnalyses', JSON.stringify(updated));\n      } catch (error) {\n        console.error('Error saving analysis:', error);\n        throw new Error('Failed to save analysis to localStorage');\n      }\n\n      setDataStatus('ready');\n      setLastSaved(new Date());\n\n    } catch (error) {\n      console.error('Save failed:', error);\n      setDataStatus('error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const loadAnalysis = (analysisId) => {\n    const analysis = savedAnalyses.find(a => a.id === analysisId);\n    if (analysis) {\n      setFinancialData(analysis.financialData);\n      setAdjustedValues(analysis.adjustedValues);\n      setModelInputs(analysis.modelInputs);\n      setAdvancedResults(analysis.advancedResults || {\n        lbo: null, threeStatement: null, scenarios: null, marketData: null, monteCarlo: null\n      });\n    }\n  };\n\n  const deleteAnalysis = (analysisId) => {\n    try {\n      const updated = savedAnalyses.filter(a => a.id !== analysisId);\n      setSavedAnalyses(updated);\n      localStorage.setItem('privateAnalyses', JSON.stringify(updated));\n    } catch (error) {\n      console.error('Error deleting analysis:', error);\n    }\n  };\n\n  const handleInsightClick = (insight) => {\n    setCurrentMetricFocus(insight.metric);\n  };\n\n  const toggleInsightsSidebar = () => {\n    setInsightsSidebarVisible(!insightsSidebarVisible);\n  };\n\n  // Auto-show insights sidebar when analysis becomes available\n  useEffect(() => {\n    if (calculateAnalysisProgress() > 60 && !insightsSidebarVisible) {\n      setInsightsSidebarVisible(true);\n    }\n  }, [financialData, advancedResults, insightsSidebarVisible]);\n\n  // Status indicator component\n  const StatusIndicator = ({ status, label }) => {\n    const getStatusColor = () => {\n      switch (status) {\n        case 'ready': return 'text-green-400';\n        case 'modified': return 'text-yellow-400';\n        case 'saving': return 'text-blue-400';\n        case 'error': return 'text-red-400';\n        default: return 'text-gray-400';\n      }\n    };\n\n    return (\n      <div className={`flex items-center gap-2 ${getStatusColor()}`}>\n        <div className=\"w-2 h-2 rounded-full bg-current animate-pulse\" />\n        <span className=\"text-sm\">{label}</span>\n      </div>\n    );\n  };\n\n  const tabs = [\n    { id: 'spreadsheet', label: 'Financial Spreadsheet', icon: Database },\n    { id: 'modeling', label: 'Financial Modeling', icon: Activity },\n    { id: 'analysis', label: 'Analysis & Results', icon: FileText },\n    { id: 'lbo', label: 'Advanced LBO', icon: Activity },\n    { id: 'threestatement', label: '3-Statement Model', icon: Database },\n    { id: 'scenarios', label: 'Scenario Analysis', icon: Activity },\n    { id: 'marketdata', label: 'Market Data', icon: Activity },\n    { id: 'montecarlo', label: 'Monte Carlo', icon: Activity },\n    { id: 'import-export', label: 'Import/Export', icon: Upload }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-slate-900 relative\">\n      <SEOHead\n        title=\"Private Analysis Suite | FinanceAnalyst Pro\"\n        description=\"Comprehensive financial analysis platform with advanced modeling tools, scenario analysis, Monte Carlo simulation, and private equity workflows.\"\n        canonical=\"/private-analysis\"\n        keywords=\"private analysis, financial modeling, scenario analysis, Monte Carlo simulation, LBO analysis, private equity tools\"\n      />\n      <Header />\n\n      <main id=\"main-content\" className=\"container mx-auto px-4 py-8\" role=\"main\">\n        {/* Header Section */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h1 className=\"text-3xl font-bold text-white\">Private Analysis</h1>\n\n            <div className=\"flex items-center gap-4\">\n              <StatusIndicator\n                status={dataStatus}\n                label={dataStatus === 'ready' ? 'Ready' : dataStatus === 'saving' ? 'Saving...' : 'Modified'}\n              />\n\n              {lastSaved && (\n                <div className=\"flex items-center gap-2 text-gray-400\">\n                  <Clock className=\"w-4 h-4\" />\n                  <span className=\"text-sm\">Saved {lastSaved.toLocaleTimeString()}</span>\n                </div>\n              )}\n\n              <Button\n                onClick={() => saveAnalysis()}\n                disabled={isLoading}\n                className=\"flex items-center gap-2\"\n                variant=\"primary\"\n              >\n                <Save className=\"w-4 h-4\" />\n                {isLoading ? 'Saving...' : 'Save'}\n              </Button>\n            </div>\n          </div>\n\n          {/* Progress Indicators */}\n          <div className=\"grid grid-cols-2 gap-4 mb-6\">\n            <div className=\"bg-slate-800 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-gray-400\">Data Completeness</span>\n                <span className=\"text-white font-semibold\">{getDataCompleteness()}%</span>\n              </div>\n              <div className=\"w-full bg-slate-700 rounded-full h-2\">\n                <div\n                  className=\"bg-blue-500 h-2 rounded-full transition-all duration-500\"\n                  style={{ width: `${getDataCompleteness()}%` }}\n                />\n              </div>\n            </div>\n\n            <div className=\"bg-slate-800 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-gray-400\">Analysis Progress</span>\n                <span className=\"text-white font-semibold\">{calculateAnalysisProgress()}%</span>\n              </div>\n              <div className=\"w-full bg-slate-700 rounded-full h-2\">\n                <div\n                  className=\"bg-green-500 h-2 rounded-full transition-all duration-500\"\n                  style={{ width: `${calculateAnalysisProgress()}%` }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"mb-6\">\n          <div className=\"flex flex-wrap gap-2 p-1 bg-slate-800 rounded-lg\">\n            {tabs.map(tab => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`\n                    flex items-center gap-2 px-4 py-2 rounded-md transition-all duration-200\n                    ${\n                activeTab === tab.id\n                  ? 'bg-blue-600 text-white shadow-lg'\n                  : 'text-gray-300 hover:text-white hover:bg-slate-700'\n                }\n                  `}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span className=\"text-sm font-medium\">{tab.label}</span>\n                </button>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Main Content Area */}\n        <div className=\"relative\">\n          <motion.div\n            key={activeTab}\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -10 }}\n            transition={{ duration: 0.2 }}\n          >\n            {activeTab === 'spreadsheet' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading spreadsheet. Please refresh the page.</div>}>\n                <FinancialSpreadsheet\n                  data={financialData}\n                  onDataChange={setFinancialData}\n                  onAdjustedValuesChange={setAdjustedValues}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'modeling' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading modeling tools. Please refresh the page.</div>}>\n                <ModelingTools\n                  data={financialData}\n                  adjustedValues={adjustedValues}\n                  onDataChange={setFinancialData}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'analysis' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading analysis results. Please check your data and refresh.</div>}>\n                <AnalysisResults\n                  data={financialData}\n                  adjustedValues={adjustedValues}\n                  modelInputs={modelInputs}\n                  calculateDCF={(data) => calculateDCF(data, modelInputs)}\n                  formatCurrency={formatCurrency}\n                  formatPercentage={formatPercentage}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'lbo' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading LBO tool. Please check your data.</div>}>\n                <React.Suspense fallback={<div className=\"p-8 text-center text-blue-400\">Loading LBO Tool...</div>}>\n                  <AdvancedLBOTool\n                    data={financialData}\n                    onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, lbo: results }))}\n                  />\n                </React.Suspense>\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'threestatement' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading financial model workspace.</div>}>\n                <React.Suspense fallback={<div className=\"p-8 text-center text-blue-400\">Loading Financial Model Workspace...</div>}>\n                  <FinancialModelWorkspace\n                    data={financialData}\n                    onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, threeStatement: results }))}\n                  />\n                </React.Suspense>\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'scenarios' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading scenario analysis.</div>}>\n                <React.Suspense fallback={<div className=\"p-8 text-center text-blue-400\">Loading Scenario Analysis...</div>}>\n                  <EnhancedScenarioAnalysis\n                    data={financialData}\n                    onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, scenarios: results }))}\n                    calculateDCF={(data) => calculateDCF(data, modelInputs)}\n                    lboModelingEngine={null}\n                  />\n                </React.Suspense>\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'marketdata' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading market data dashboard.</div>}>\n                <React.Suspense fallback={<div className=\"p-8 text-center text-blue-400\">Loading Market Data Dashboard...</div>}>\n                  <EnhancedMarketDataDashboard\n                    data={financialData}\n                    onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, marketData: results }))}\n                  />\n                </React.Suspense>\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'montecarlo' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading Monte Carlo integration.</div>}>\n                <React.Suspense fallback={<div className=\"p-8 text-center text-blue-400\">Loading Monte Carlo Analysis...</div>}>\n                  <MonteCarloIntegrationHub\n                    data={financialData}\n                    dcfResults={advancedResults.dcf}\n                    lboResults={advancedResults.lbo}\n                    financialModel={advancedResults.threeStatement}\n                    scenarioResults={advancedResults.scenarios}\n                    onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, monteCarlo: results }))}\n                  />\n                </React.Suspense>\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'import-export' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading import/export tools.</div>}>\n                <DataExportImport\n                  data={financialData}\n                  onDataChange={setFinancialData}\n                  savedAnalyses={savedAnalyses}\n                  onAnalysesChange={setSavedAnalyses}\n                />\n              </ErrorBoundary>\n            )}\n          </motion.div>\n        </div>\n\n        {/* Contextual Insights Sidebar */}\n        <ContextualInsightsSidebar\n          financialData={financialData}\n          currentMetric={currentMetricFocus}\n          analysisContext={activeTab === 'analysis' ? 'dcf' : activeTab}\n          onInsightClick={handleInsightClick}\n          isVisible={insightsSidebarVisible}\n          onToggle={toggleInsightsSidebar}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default PrivateAnalysis;\n"],"file":"assets/PrivateAnalysis-Bmitbutq.js"}