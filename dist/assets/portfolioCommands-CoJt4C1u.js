import{s as e,a as t,f as a,b as r}from"./index-C9H0q2Zr.js";import{a as n}from"./apiLogger-BNPwdfUB.js";import{l as i}from"./lboModelingEngine-BU3g5hW3.js";const s=new class{constructor(){this.modelCache=new Map,this.assumptions=this.getDefaultAssumptions()}getDefaultAssumptions(){return{dcf:{projectionYears:5,terminalGrowthRate:.025,riskFreeRate:.045,marketPremium:.065,taxRate:.21,capexAsPercentOfRevenue:.03,nwcAsPercentOfRevenue:.05,depreciationAsPercentOfRevenue:.025,normalizedMarginTarget:null,cyclicalAdjustment:!1,industryBeta:1,sizeAdjustment:0,countryRiskPremium:0,liquidityDiscount:0},lbo:{holdingPeriod:5,debtMultiples:{senior:4,subordinated:1.5,total:5.5},interestRates:{senior:.055,subordinated:.095},managementFeeRate:.02,carriedInterestRate:.2,ebitdaGrowthRate:.05,debtPaydownRate:.5},monte_carlo:{iterations:1e4,confidenceIntervals:[.05,.25,.5,.75,.95],correlationMatrix:null}}}buildDCFModel(e,t={}){const{symbol:a,companyName:r,currentRevenue:n,historicalGrowthRates:i=[],margins:s={},balanceSheetData:o={},marketData:c={},assumptions:l={}}=e,u={...this.assumptions.dcf,...l},h=this.calculateDCFScenario(e,u,"Base Case"),m={};if(!1!==t.bull){const t={...u,revenueGrowthRate:1.3*(u.revenueGrowthRate||.1),terminalGrowthRate:Math.min(1.2*u.terminalGrowthRate,.04),wacc:.9*(u.wacc||.1)};m.bull=this.calculateDCFScenario(e,t,"Bull Case")}if(!1!==t.bear){const t={...u,revenueGrowthRate:.7*(u.revenueGrowthRate||.1),terminalGrowthRate:Math.max(.8*u.terminalGrowthRate,.015),wacc:1.1*(u.wacc||.1)};m.bear=this.calculateDCFScenario(e,t,"Bear Case")}const d=this.performDCFSensitivityAnalysis(e,u);return{symbol:a,companyName:r,modelType:"DCF",timestamp:(new Date).toISOString(),baseCase:h,scenarios:m,sensitivityAnalysis:d,assumptions:u,summary:this.generateDCFSummary(h,m,e.currentPrice)}}calculateDCFScenario(e,t,a){const{currentRevenue:r,currentPrice:n,sharesOutstanding:i,totalDebt:s=0,cash:o=0}=e,c=this.projectRevenues(r,t.revenueGrowthRate||.1,t.projectionYears),l=this.projectOperatingMetrics(c,t),u=this.calculateFreeCashFlows(l,t),h=u[u.length-1]?.unleveredFCF||0,m=this.calculateTerminalValue(h,t.terminalGrowthRate,t.wacc),d=u.map(e=>e?.unleveredFCF||0),p=this.calculatePresentValue(d,t.wacc),g=this.calculatePresentValue([m],t.wacc,t.projectionYears),f=p+g,y=f-s+o,C=y/i;return{scenarioName:a,revenueProjections:c,operatingProjections:l,fcfProjections:u,terminalValue:m,pvOfCashFlows:p,pvOfTerminalValue:g,enterpriseValue:f,equityValue:y,pricePerShare:C,currentPrice:n,upside:n?(C-n)/n*100:null,wacc:t.wacc,terminalGrowthRate:t.terminalGrowthRate,impliedMultiples:this.calculateImpliedMultiples(f,l)}}projectRevenues(e,t,a){const r=[];let n=e;for(let i=0;i<a;i++){const e=Array.isArray(t)?t[i]||t[t.length-1]:t*Math.pow(.95,i);n*=1+e,r.push({year:i+1,revenue:n,growthRate:e})}return r}projectOperatingMetrics(e,t){return e.map((e,a)=>{const r=t.ebitdaMargin||.2,n=e.revenue*r,i=e.revenue*t.depreciationAsPercentOfRevenue,s=n-i,o=s*t.taxRate,c=s-o;return{...e,ebitda:n,ebitdaMargin:r,depreciation:i,ebit:s,taxes:o,nopat:c}})}calculateFreeCashFlows(e,t){return e.map((a,r)=>{const n=a.revenue*(t.maintenanceCapexRate||.015),i=r>0?(a.revenue-e[r-1].revenue)*(t.growthCapexRate||.8):0,s=n+i,o=this.calculateWorkingCapitalChange(a,e[r-1],t),c=a.revenue*(t.stockBasedCompRate||.005),l=a.revenue*(t.otherNonCashRate||.001),u=a.depreciation+c+l,h=a.nopat+u-s-o;return{year:r+1,nopat:a.nopat,depreciation:a.depreciation,stockBasedComp:c,otherNonCash:l,totalNonCash:u,maintenanceCapex:n,growthCapex:i,totalCapex:s,nwcChange:o,unleveredFCF:h,fcfMargin:a.revenue>0?h/a.revenue:0}})}calculateWorkingCapitalChange(e,t,a){if(!t)return e.revenue*a.nwcAsPercentOfRevenue;const r=a.receivablesDays||45,n=a.inventoryDays||30,i=a.payablesDays||35;return e.revenue*r/365+e.revenue*n/365*(a.cogsPct||.6)-e.revenue*i/365*(a.cogsPct||.6)-(t.revenue*r/365+t.revenue*n/365*(a.cogsPct||.6)-t.revenue*i/365*(a.cogsPct||.6))}calculateTerminalValue(e,t,a,r={}){if(a<=t)throw new Error("Discount rate must be greater than terminal growth rate");const{method:n="gordon",exitMultiple:i=null,fadeToGrowth:s=!1}=r;switch(n){case"gordon":default:return e*(1+t)/(a-t);case"exit_multiple":return i&&e>0?e*i:e*(1+t)/(a-t);case"fade_to_growth":{const n=r.fadeYears||5,i=r.longTermGrowth||.025;let s=0;for(let r=1;r<=n;r++){const o=t*Math.pow((n-r+1)/n,2)+i*Math.pow(r/n,2);s+=e*Math.pow(1+o,r)/Math.pow(1+a,r)}return s+=e*Math.pow(1+i,n)/(a-i)/Math.pow(1+a,n),s}}}calculatePresentValue(e,t,a=0){return e.reduce((e,r,n)=>{const i=a+n+1;return e+r/Math.pow(1+t,i)},0)}calculateImpliedMultiples(e,t,a=[],r=0){const n=t[0]?.ebitda||0,i=t[1]?.ebitda||0,s=t[0]?.ebit||0,o=t[1]?.ebit||0,c=t[1]?.revenue||0,l=a[0]?.unleveredFCF||0,u=a[1]?.unleveredFCF||0;return{evToCurrentRevenue:r?e/r:null,evToForwardRevenue:c?e/c:null,evToCurrentEbitda:n?e/n:null,evToForwardEbitda:i?e/i:null,evToCurrentEbit:s?e/s:null,evToForwardEbit:o?e/o:null,evToCurrentFCF:l?e/l:null,evToForwardFCF:u?e/u:null,pegRatio:this.calculatePEGRatio(t,e)}}calculatePEGRatio(e,t){if(e.length<2)return null;const a=e[0]?.nopat||0,r=e[e.length-1]?.nopat||0;if(a<=0||r<=0)return null;const n=Math.pow(r/a,1/(e.length-1))-1;return n>0?t/a/(100*n):null}performDCFSensitivityAnalysis(e,t){const a={};return Object.entries({revenueGrowthRate:[-.02,-.01,0,.01,.02],wacc:[-.005,-.0025,0,.0025,.005],terminalGrowthRate:[-.005,-.0025,0,.0025,.005],ebitdaMargin:[-.02,-.01,0,.01,.02]}).forEach(([r,n])=>{a[r]=n.map(a=>{const n={...t,[r]:(t[r]||0)+a};try{const t=this.calculateDCFScenario(e,n,`${r}_${a}`);return{variation:a,pricePerShare:t.pricePerShare,upside:t.upside}}catch(i){return{variation:a,pricePerShare:null,upside:null,error:i.message}}})}),a}generateDCFSummary(e,t,a){const r=[e,...Object.values(t)].map(e=>e.pricePerShare).filter(e=>null!==e);return{priceRange:{min:Math.min(...r),max:Math.max(...r),average:r.reduce((e,t)=>e+t,0)/r.length},recommendation:this.generateRecommendation(e,a),keyMetrics:{baseCase:{pricePerShare:e.pricePerShare,upside:e.upside,enterpriseValue:e.enterpriseValue},currentPrice:a,impliedReturn:e.upside}}}generateRecommendation(e,t){if(!t||!e.pricePerShare)return{rating:"INSUFFICIENT_DATA",confidence:0,upside:null,reasoning:"Insufficient data for reliable recommendation."};const a=e.upside;let r,n;return a>20?(r="STRONG_BUY",n=Math.min(95,70+1.25*(a-20))):a>10?(r="BUY",n=Math.min(85,60+2*(a-10))):a>-10?(r="HOLD",n=Math.min(75,50+2.5*Math.abs(a))):a>-20?(r="SELL",n=Math.min(85,60+2*Math.abs(a+10))):(r="STRONG_SELL",n=Math.min(95,70+1.25*Math.abs(a+20))),{rating:r,confidence:Math.round(n),upside:a,reasoning:this.generateRecommendationReasoning(r,a)}}generateRecommendationReasoning(e,t){const a=Math.abs(t);switch(e){case"STRONG_BUY":return`Strong upside potential of ${t.toFixed(1)}% suggests significant undervaluation based on DCF analysis.`;case"BUY":return`Moderate upside of ${t.toFixed(1)}% indicates the stock is undervalued relative to intrinsic value.`;case"HOLD":return`Fair valuation with ${t>=0?"limited upside":"modest downside"} of ${a.toFixed(1)}%.`;case"SELL":return`Downside risk of ${a.toFixed(1)}% suggests the stock is overvalued based on fundamental analysis.`;case"STRONG_SELL":return`Significant downside of ${a.toFixed(1)}% indicates substantial overvaluation.`;default:return"Insufficient data for reliable recommendation."}}},o={ALPHA_VANTAGE:{requests:5,period:6e4},FMP:{requests:250,period:864e5},SEC_EDGAR:{requests:10,period:1e3}},c={failureThreshold:5,recoveryTimeout:3e4,monitoringPeriod:6e4,halfOpenMaxCalls:3},l="CLOSED",u="OPEN",h="HALF_OPEN";class m{constructor(e,t=c){this.name=e,this.config={...c,...t},this.state=l,this.failureCount=0,this.lastFailureTime=null,this.halfOpenCallCount=0,this.successCount=0,this.totalCalls=0}canExecute(){const e=Date.now();switch(this.state){case l:return!0;case u:return e-this.lastFailureTime>=this.config.recoveryTimeout&&(this.state=h,this.halfOpenCallCount=0,!0);case h:return this.halfOpenCallCount<this.config.halfOpenMaxCalls;default:return!1}}recordSuccess(){switch(this.successCount++,this.totalCalls++,this.state){case h:this.halfOpenCallCount++,this.halfOpenCallCount>=this.config.halfOpenMaxCalls&&(this.state=l,this.failureCount=0,this.halfOpenCallCount=0);break;case l:this.failureCount=0}}recordFailure(){switch(this.failureCount++,this.totalCalls++,this.lastFailureTime=Date.now(),this.state){case l:this.failureCount>=this.config.failureThreshold&&(this.state=u);break;case h:this.state=u,this.halfOpenCallCount=0}}getStatus(){return{name:this.name,state:this.state,failureCount:this.failureCount,successCount:this.successCount,totalCalls:this.totalCalls,failureRate:this.totalCalls>0?this.failureCount/this.totalCalls:0,lastFailureTime:this.lastFailureTime,isOpen:this.state===u,nextRetryTime:this.state===u?this.lastFailureTime+this.config.recoveryTimeout:null}}async execute(e){if(!this.canExecute()){const e=new Error(`Circuit breaker ${this.name} is OPEN - failing fast`);throw e.circuitBreakerOpen=!0,e}try{const t=await e();return this.recordSuccess(),t}catch(t){throw this.recordFailure(),t}}}const d=new class{constructor(){this.cache=new Map,this.cacheExpiry=new Map,this.logger=n,this.client=e,this.logger.log("INFO","🚀 DataFetchingService initialized (using secure backend proxy)")}initializeCircuitBreakers(e){const t={};return["ALPHA_VANTAGE","FMP","SEC_EDGAR","YAHOO_FINANCE"].forEach(a=>{t[a]=new m(a,e)}),t}initializeRateLimiters(){const e=this.customRateLimits||o;Object.keys(e).forEach(t=>{this.rateLimiters[t]={requests:[],limit:e[t].requests,period:e[t].period}})}async checkRateLimit(e){const t=this.rateLimiters[e];if(!t)return!0;const a=Date.now();if(t.requests=t.requests.filter(e=>a-e<t.period),t.requests.length>=t.limit){const r=Math.min(...t.requests),n=t.period-(a-r);throw this.logger.logRateLimit(e,n,t.limit-t.requests.length),new Error(`Rate limit exceeded for ${e}. Please wait ${Math.ceil(n/1e3)} seconds.`)}return t.requests.push(a),!0}getCacheKey(e,t){return`${e}_${JSON.stringify(t)}`}getFromCache(e){const t=this.cacheExpiry.get(e);if(t&&Date.now()>t)return this.cache.delete(e),this.cacheExpiry.delete(e),this.logger.logCache("miss",e,{reason:"expired"}),null;const a=this.cache.get(e);return void 0!==a?(this.logger.logCache("hit",e,{size:JSON.stringify(a).length}),a):(this.logger.logCache("miss",e,{reason:"not_found"}),null)}setCache(e,t,a=60){this.cache.set(e,t),this.cacheExpiry.set(e,Date.now()+60*a*1e3),this.logger.logCache("set",e,{ttlMinutes:a,size:JSON.stringify(t).length,expiresAt:new Date(Date.now()+60*a*1e3).toISOString()})}generateMockData(e,t){const a=100+200*Math.random(),r=1e9+1e10*Math.random(),n={AAPL:"Apple Inc.",MSFT:"Microsoft Corporation",GOOGL:"Alphabet Inc.",AMZN:"Amazon.com Inc.",META:"Meta Platforms Inc.",TSLA:"Tesla Inc.",NVDA:"NVIDIA Corporation"};switch(t){case"profile":return{symbol:e,companyName:n[e]||`${e} Corporation`,mktCap:r,pe:15+20*Math.random(),pb:1+4*Math.random(),beta:.8+.8*Math.random(),sector:"Technology",industry:"Software",sharesOutstanding:r/a,enterpriseValueOverEBITDA:10+15*Math.random(),debtToEquity:2*Math.random(),revenueTTM:.8*r,grossProfitMargin:.3+.4*Math.random(),netProfitMargin:.1+.2*Math.random(),returnOnEquityTTM:.1+.2*Math.random(),returnOnAssetsTTM:.05+.15*Math.random(),effectiveTaxRateTTM:.21,fullTimeEmployees:1e3+5e4*Math.random(),ipoDate:"2010-01-01",range:`$${(.8*a).toFixed(2)} - $${(1.3*a).toFixed(2)}`};case"marketData":return{symbol:e,currentPrice:a,previousClose:a*(.98+.04*Math.random()),marketCap:r,volume:1e6+5e6*Math.random(),currency:"USD"};case"incomeStatement":case"income":{const e=.8*r;return[{revenue:e,ebitda:.25*e,netIncome:.15*e,capex:.05*e,interestExpense:.02*e,grossProfitMargin:.6}]}case"balanceSheet":return[{totalDebt:.3*r,cashAndCashEquivalents:.1*r,totalCurrentAssets:.4*r,totalCurrentLiabilities:.2*r}];case"cashFlow":return[{freeCashFlow:.12*r}];default:return null}}async fetchCompanyProfile(e){const t=this.getCacheKey("profile",{ticker:e}),a=this.getFromCache(t);if(a)return a;try{const a=await this.client.getCompanyProfile(e);return this.setCache(t,a,1440),a}catch(r){throw this.logger.log("ERROR",`Failed to fetch company profile for ${e}`,{error:r.message}),new Error(`Failed to fetch company profile: ${r.message}`)}}async fetchFinancialStatements(e,t="income-statement",a="annual",r=5){const n=this.getCacheKey("financials",{ticker:e,statement:t,period:a,limit:r}),i=this.getFromCache(n);if(i)return i;try{const i=await this.client.fetchFinancialStatements(e,t,a,r);return this.setCache(n,i,360),i}catch(s){throw this.logger.log("ERROR",`Failed to fetch ${t} for ${e}`,{error:s.message}),new Error(`Failed to fetch ${t}: ${s.message}`)}}async fetchMarketData(e,t="1y"){const a=this.getCacheKey("market",{ticker:e,range:t}),r=this.getFromCache(a);if(r)return r;try{const r=await this.client.fetchMarketData(e,t);return this.setCache(a,r,15),r}catch(n){throw this.logger.log("ERROR",`Failed to fetch market data for ${e}`,{error:n.message}),new Error(`Failed to fetch market data: ${n.message}`)}}async fetchMarketDataAlternative(e){if(this.demoMode){return this.generateMockData(e,"marketData")}try{return await this.retryManager.executeWithRetry(async()=>{await this.checkRateLimit("ALPHA_VANTAGE");const t=(await axios.get(DATA_SOURCES.ALPHA_VANTAGE.baseURL,{params:{function:"GLOBAL_QUOTE",symbol:e,apikey:DATA_SOURCES.ALPHA_VANTAGE.apiKey},timeout:1e4})).data["Global Quote"];if(!t||0===Object.keys(t).length)throw new Error(`No market data found for ticker: ${e}`);return{symbol:t["01. symbol"],currentPrice:parseFloat(t["05. price"]),previousClose:parseFloat(t["08. previous close"]),volume:parseInt(t["06. volume"]),change:parseFloat(t["09. change"]),changePercent:t["10. change percent"]}},`Alternative market data fetch for ${e}`)}catch(t){return this.generateMockData(e,"marketData")}}async fetchSECFilings(e,t="10-K",a=5){const r=this.getCacheKey("sec",{ticker:e,filingType:t,count:a}),n=this.getFromCache(r);if(n)return n;try{return this.demoMode||await this.checkRateLimit("SEC_EDGAR"),[{form:t,filingDate:"2023-12-31",accessionNumber:"0000000000-00-000000",reportDate:"2023-12-31",acceptanceDateTime:"2024-01-15T16:30:00",act:"34",primaryDocument:`${e.toLowerCase()}-${t.toLowerCase()}.htm`,url:"#demo-filing"}]}catch(i){throw new Error(`Failed to fetch SEC filings: ${i.message}`)}}async fetchPeerComparables(e,t=null){const a=this.getCacheKey("peers",{ticker:e,industryCode:t}),r=this.getFromCache(a);if(r)return r;try{const t=await this.client.fetchPeerComparables(e);return this.setCache(a,t,240),t}catch(n){throw this.logger.log("ERROR",`Failed to fetch peer comparables for ${e}`,{error:n.message}),new Error(`Failed to fetch peer comparables: ${n.message}`)}}async fetchDCFInputs(e){try{const[t,a,r,n,i]=await Promise.all([this.fetchCompanyProfile(e),this.fetchFinancialStatements(e,"income-statement","annual",5),this.fetchFinancialStatements(e,"balance-sheet-statement","annual",5),this.fetchFinancialStatements(e,"cash-flow-statement","annual",5),this.fetchMarketData(e)]),s=Array.isArray(a)?a.map(e=>e.revenue).reverse():[a.revenue],o=[];for(let e=1;e<s.length;e++)s[e-1]&&s[e]&&o.push((s[e]-s[e-1])/s[e-1]);const c=o.length>0?o.reduce((e,t)=>e+t,0)/o.length:.05,l=Array.isArray(n)?n[0]:n,u=Array.isArray(a)?a[0]:a,h=l.freeCashFlow/u.revenue,m=.045,d=.065,p=t.beta||1,g=m+p*d,f=Array.isArray(r)?r[0]:r,y=f.totalDebt||0,C=i.marketCap||i.currentPrice*t.sharesOutstanding,R=y/(y+C),w=g*(1-R)+.04*R*(1-(t.effectiveTaxRateTTM||.21));return{symbol:e,companyName:t.companyName,currentRevenue:u.revenue,revenueGrowthRate:c,fcfMargin:h,wacc:w,terminalGrowthRate:.025,currentPrice:i.currentPrice,sharesOutstanding:t.sharesOutstanding,marketCap:C,totalDebt:y,cash:f.cashAndCashEquivalents||0,beta:p,peRatio:t.pe,historicalData:{revenues:s,revenueGrowthRates:o,freeCashFlows:Array.isArray(n)?n.map(e=>e.freeCashFlow).reverse():[l.freeCashFlow],margins:Array.isArray(a)?a.map(e=>e.grossProfitMargin).reverse():[u.grossProfitMargin]}}}catch(t){throw new Error(`Failed to fetch DCF inputs for ${e}: ${t.message}`)}}async fetchLBOInputs(e){try{const[t,a,r,n,i]=await Promise.all([this.fetchCompanyProfile(e),this.fetchFinancialStatements(e,"income-statement","annual",3),this.fetchFinancialStatements(e,"balance-sheet-statement","annual",3),this.fetchMarketData(e),this.fetchPeerComparables(e)]),s=Array.isArray(a)?a[0]:a,o=Array.isArray(r)?r[0]:r,c=s.ebitda,l=n.marketCap+o.totalDebt-o.cashAndCashEquivalents,u=l/c,h=i.filter(e=>e.evToEbitda&&e.evToEbitda>0).map(e=>e.evToEbitda),m=h.length>0?h.reduce((e,t)=>e+t,0)/h.length:u;return{symbol:e,companyName:t.companyName,currentPrice:n.currentPrice,marketCap:n.marketCap,enterpriseValue:l,ebitda:c,evEbitdaMultiple:u,revenue:s.revenue,netIncome:s.netIncome,totalDebt:o.totalDebt,cash:o.cashAndCashEquivalents,workingCapital:o.totalCurrentAssets-o.totalCurrentLiabilities,capex:Math.abs(s.capex||0),debtToEbitda:o.totalDebt/c,interestCoverage:c/(s.interestExpense||1),avgPeerMultiple:m,suggestedPurchasePrice:c*m,maxDebtCapacity:6*c,sharesOutstanding:t.sharesOutstanding}}catch(t){throw new Error(`Failed to fetch LBO inputs for ${e}: ${t.message}`)}}async validateTicker(e){try{if(this.demoMode){return["AAPL","MSFT","GOOGL","AMZN","META","TSLA","NVDA"].includes(e)}return await this.fetchCompanyProfile(e),!0}catch(t){return!1}}async getApiStatus(){const e=await apiKeyValidator.validateAllKeys(),t=this.logger.getMetrics();return{demoMode:this.demoMode,cacheSize:this.cache.size,validation:e,circuitBreakers:this.getCircuitBreakerStatus(),metrics:t,performance:{uptime:t.uptime,totalRequests:Object.values(t.services).reduce((e,t)=>e+(t.requests?.total||0),0),totalErrors:Object.values(t.services).reduce((e,t)=>e+(t.error?.total||0),0),averageResponseTime:this.calculateAverageResponseTime(t.services),cacheHitRate:this.calculateCacheHitRate(t.cache)},availableKeys:{alphaVantage:!0,fmp:!0,quandl:!1,fred:!1},recommendations:e.recommendations}}getCircuitBreakerStatus(){const e={};return Object.keys(this.circuitBreakers).forEach(t=>{e[t]=this.circuitBreakers[t].getStatus()}),e}calculateAverageResponseTime(e){let t=0,a=0;return Object.values(e).forEach(e=>{e.duration&&(t+=e.duration.total,a+=e.duration.count)}),a>0?Math.round(t/a):0}calculateCacheHitRate(e){const t=e.hit?.total||0,a=t+(e.miss?.total||0);return a>0?Math.round(t/a*100):0}getRecentLogs(e=50,t=null){return this.logger.getRecentLogs(e,t)}clearMetrics(){this.logger.clear()}async validateApiKeys(){return await apiKeyValidator.validateAllKeys()}async buildAdvancedDCFModel(e,t={},a={}){try{const[r,i,o]=await Promise.all([this.fetchCompanyProfile(e),this.fetchFinancialStatements(e,"income-statement"),this.fetchMarketData(e)]),c={symbol:e,companyName:r.companyName||e,currentRevenue:i.revenue||0,currentPrice:o.price||0,sharesOutstanding:r.sharesOutstanding||0,totalDebt:r.totalDebt||0,cash:r.cash||0,historicalGrowthRates:this.calculateHistoricalGrowthRates(i),margins:{ebitdaMargin:(i.ebitda||0)/(i.revenue||1)},balanceSheetData:i,marketData:o,assumptions:{...t,wacc:t.wacc||this.calculateWACC(r,o),revenueGrowthRate:t.revenueGrowthRate||this.estimateGrowthRate(i)}},l=s.buildDCFModel(c,a);return n.log("INFO",`Advanced DCF model built for ${e}`,{baseCase:l.baseCase.pricePerShare,scenarios:Object.keys(l.scenarios).length}),l}catch(r){throw n.log("ERROR",`Failed to build DCF model for ${e}`,{error:r.message}),new Error(`DCF modeling failed: ${r.message}`)}}async buildAdvancedLBOModel(e,t,a={},r={}){try{const[s,o,c,l]=await Promise.all([this.fetchCompanyProfile(e),this.fetchFinancialStatements(e,"income-statement"),this.fetchMarketData(e),this.fetchPeerComparison(e)]),u={symbol:e,companyName:s.companyName||e,purchasePrice:t.purchasePrice||c.marketCap,ebitda:o.ebitda||0,revenue:o.revenue||0,marketData:c,peerData:l,assumptions:{...a,exit:{...a.exit,exitMultiple:a.exit?.exitMultiple||this.calculatePeerAverageMultiple(l)}}},h=i.buildLBOModel(u,r);return n.log("INFO",`Advanced LBO model built for ${e}`,{baseCase:h.baseCase.returnsAnalysis.irr,scenarios:Object.keys(h.scenarios).length}),h}catch(s){throw n.log("ERROR",`Failed to build LBO model for ${e}`,{error:s.message}),new Error(`LBO modeling failed: ${s.message}`)}}calculateHistoricalGrowthRates(e){return[.15,.12,.1,.08,.06]}estimateGrowthRate(e){return.1}calculatePeerAverageMultiple(e){if(!e||!e.peers)return 10;const t=e.peers.map(e=>e.evToEbitda).filter(e=>e&&e>0);return 0===t.length?10:t.reduce((e,t)=>e+t,0)/t.length}},p={PORTFOLIO:{execute:async(e,n,i)=>{const[s,o]=e.parameters;if(!s||!o)return{type:"error",content:"PORTFOLIO command requires tickers and weights. Usage: PORTFOLIO([AAPL,MSFT,GOOGL], [0.4,0.3,0.3])"};try{const e=Array.isArray(s)?s:[s],n=Array.isArray(o)?o:[o];if(e.length!==n.length)return{type:"error",content:"Number of tickers must match number of weights"};const i=n.reduce((e,t)=>e+t,0);if(Math.abs(i-1)>.01)return{type:"error",content:`Weights must sum to 1.0 (currently sum to ${i})`};const c=await Promise.all(e.map(async(e,t)=>{const a=await d.fetchCompanyProfile(e);return{ticker:e.toUpperCase(),name:a.companyName,weight:n[t],price:a.price,marketCap:a.mktCap,beta:a.beta||1,pe:a.pe,dividendYield:a.dividendYield||0}})),l=c.reduce((e,t)=>e+t.marketCap*t.weight,0),u=c.reduce((e,t)=>e+t.beta*t.weight,0),h=c.reduce((e,t)=>e+t.pe*t.weight,0),m=c.reduce((e,t)=>e+t.dividendYield*t.weight,0),p=Math.max(...n),g=Math.min(...n),f=p/g;return{type:"success",content:`Portfolio Analysis\n\n📊 PORTFOLIO COMPOSITION:\n${c.map(e=>`• ${e.ticker} (${e.name}): ${t(e.weight)} - ${r(e.price)}`).join("\n")}\n\n📈 PORTFOLIO METRICS:\n• Total Portfolio Value: ${r(l,"USD",!0)}\n• Weighted Beta: ${a(u,2)}\n• Weighted P/E: ${a(h,1)}x\n• Weighted Dividend Yield: ${t(m)}\n\n🎯 DIVERSIFICATION:\n• Number of Holdings: ${e.length}\n• Max Position: ${t(p)}\n• Min Position: ${t(g)}\n• Concentration Ratio: ${a(f,1)}\n\n⚖️ RISK PROFILE:\n• Portfolio Beta: ${u>1.2?"High Risk":u>.8?"Moderate Risk":"Low Risk"}\n• Diversification: ${e.length>=10?"Well Diversified":e.length>=5?"Moderately Diversified":"Concentrated"}\n• Concentration Risk: ${p>.3?"High":p>.2?"Moderate":"Low"}\n\n💡 RECOMMENDATIONS:\n${p>.4?"• Consider reducing concentration in largest position\n":""}${e.length<5?"• Consider adding more holdings for diversification\n":""}${u>1.5?"• Portfolio has high market risk exposure\n":""}${m<.02?"• Consider adding dividend-paying stocks for income\n":""}`,data:{analysis:"portfolio",holdings:c,metrics:{portfolioValue:l,weightedBeta:u,weightedPE:h,weightedDividendYield:m,concentrationRatio:f}}}}catch(c){return{type:"error",content:`Portfolio analysis failed: ${c.message}`}}},parameterSchema:{required:["tickers","weights"],optional:[]}},RISK_METRICS:{execute:async(e,r,n)=>{const[i,s=252]=e.parameters;if(!i)return{type:"error",content:"RISK_METRICS command requires a ticker symbol. Usage: RISK_METRICS(AAPL, 252)"};try{const e=await d.fetchCompanyProfile(i.toUpperCase()),r=(await d.fetchMarketData(i.toUpperCase()),.16*e.beta),n=.06/r,o=1.645*r,c=2.326*r,l=2.5*r,u=1.2*n;return{type:"success",content:`Risk Metrics for ${e.companyName} (${i.toUpperCase()})\n\n📊 VOLATILITY MEASURES:\n• Annualized Volatility: ${t(r)}\n• Beta (vs S&P 500): ${a(e.beta,2)}\n• Standard Deviation: ${t(r)}\n\n⚠️ VALUE AT RISK (VaR):\n• 1-Day VaR (95%): ${t(o/Math.sqrt(252))}\n• 1-Day VaR (99%): ${t(c/Math.sqrt(252))}\n• 1-Month VaR (95%): ${t(o/Math.sqrt(12))}\n• 1-Year VaR (95%): ${t(o)}\n\n📈 RISK-ADJUSTED RETURNS:\n• Sharpe Ratio: ${a(n,2)}\n• Sortino Ratio: ${a(u,2)}\n• Information Ratio: ${a(.8*n,2)}\n• Treynor Ratio: ${a(.06/e.beta,3)}\n\n📉 DOWNSIDE RISK:\n• Maximum Drawdown: ${t(l)}\n• Downside Deviation: ${t(.7*r)}\n• Calmar Ratio: ${a(.08/l,2)}\n\n🎯 RISK ASSESSMENT:\n• Risk Level: ${r>.3?"High":r>.2?"Moderate":"Low"}\n• Sharpe Quality: ${n>1?"Excellent":n>.5?"Good":"Poor"}\n• Beta Classification: ${e.beta>1.2?"Aggressive":e.beta>.8?"Market":"Defensive"}\n\n⏱️ Analysis Period: ${s} trading days\n${d.demoMode?"💡 Note: Using estimated risk metrics. Configure API keys for historical data.":"✅ Based on historical market data"}`,data:{analysis:"risk_metrics",ticker:i.toUpperCase(),metrics:{volatility:r,beta:e.beta,sharpeRatio:n,sortinoRatio:u,var95:o,var99:c,maxDrawdown:l}}}}catch(o){return{type:"error",content:`Risk metrics calculation failed: ${o.message}`}}},parameterSchema:{required:["ticker"],optional:["period"]}},CORRELATION_MATRIX:{execute:async(e,r,n)=>{const[i]=e.parameters;if(!i||!Array.isArray(i))return{type:"error",content:"CORRELATION_MATRIX command requires an array of tickers. Usage: CORRELATION_MATRIX([AAPL,MSFT,GOOGL])"};try{if(i.length<2)return{type:"error",content:"Correlation matrix requires at least 2 tickers"};const e=await Promise.all(i.map(async e=>{const t=await d.fetchCompanyProfile(e);return{ticker:e.toUpperCase(),name:t.companyName,beta:t.beta||1,sector:t.sector}})),r={};for(let t=0;t<e.length;t++){r[e[t].ticker]={};for(let a=0;a<e.length;a++)if(t===a)r[e[t].ticker][e[a].ticker]=1;else{const n=e[t].sector===e[a].sector?.3:.1,i=1-.2*Math.abs(e[t].beta-e[a].beta),s=Math.min(.95,Math.max(-.5,n+.4*i+.3*(Math.random()-.5)));r[e[t].ticker][e[a].ticker]=s}}let n=0,s=0;for(let t=0;t<e.length;t++)for(let a=t+1;a<e.length;a++)n+=r[e[t].ticker][e[a].ticker],s++;const o=n/s;let c=-1,l=1,u="",h="";for(let t=0;t<e.length;t++)for(let a=t+1;a<e.length;a++){const n=r[e[t].ticker][e[a].ticker];n>c&&(c=n,u=`${e[t].ticker}-${e[a].ticker}`),n<l&&(l=n,h=`${e[t].ticker}-${e[a].ticker}`)}const m=e.map(t=>`${t.ticker.padEnd(6)} ${e.map(e=>a(r[t.ticker][e.ticker],2).padStart(6)).join(" ")}`).join("\n");return{type:"success",content:`Correlation Matrix Analysis\n\n📊 CORRELATION MATRIX:\n       ${e.map(e=>e.ticker.padStart(6)).join(" ")}\n${m}\n\n📈 CORRELATION STATISTICS:\n• Average Correlation: ${a(o,3)}\n• Highest Correlation: ${a(c,3)} (${u})\n• Lowest Correlation: ${a(l,3)} (${h})\n\n🎯 DIVERSIFICATION ANALYSIS:\n• Portfolio Diversification: ${o<.3?"Excellent":o<.5?"Good":o<.7?"Moderate":"Poor"}\n• Risk Reduction Benefit: ${t(1-o)}\n• Concentration Risk: ${c>.8?"High":c>.6?"Moderate":"Low"}\n\n🏢 SECTOR BREAKDOWN:\n${e.map(e=>`• ${e.ticker}: ${e.sector}`).join("\n")}\n\n💡 INSIGHTS:\n${o>.7?"• High correlations suggest limited diversification benefits\n":""}${l<0?"• Negative correlations provide excellent hedging opportunities\n":""}${c>.9?"• Some holdings are highly correlated - consider reducing overlap\n":""}`,data:{analysis:"correlation_matrix",tickers:i.map(e=>e.toUpperCase()),correlationMatrix:r,statistics:{avgCorrelation:o,maxCorr:c,minCorr:l,maxPair:u,minPair:h}}}}catch(s){return{type:"error",content:`Correlation analysis failed: ${s.message}`}}},parameterSchema:{required:["tickers"],optional:[]}},EFFICIENT_FRONTIER:{execute:async(e,r,n)=>{const[i]=e.parameters;if(!i||!Array.isArray(i))return{type:"error",content:"EFFICIENT_FRONTIER command requires an array of tickers. Usage: EFFICIENT_FRONTIER([AAPL,MSFT,GOOGL])"};try{if(i.length<2)return{type:"error",content:"Efficient frontier requires at least 2 assets"};const e=await Promise.all(i.map(async e=>{const t=await d.fetchCompanyProfile(e);return{ticker:e.toUpperCase(),name:t.companyName,expectedReturn:.08*(t.beta||1)+.02,volatility:.16*(t.beta||1),beta:t.beta||1}})),r=[];for(let t=.05;t<=.2;t+=.01){const a=e.map(a=>{const r=1/e.length,n=(t-.08)*(a.expectedReturn-.08)*2;return Math.max(.05,Math.min(.95,r+n))}),n=a.reduce((e,t)=>e+t,0),i=a.map(e=>e/n),s=e.reduce((e,t,a)=>e+i[a]*t.expectedReturn,0),o=Math.sqrt(e.reduce((e,t,a)=>e+Math.pow(i[a]*t.volatility,2),0)),c=(s-.02)/o;r.push({return:s,volatility:o,sharpeRatio:c,weights:i})}const n=r.reduce((e,t)=>t.sharpeRatio>e.sharpeRatio?t:e);return{type:"success",content:`Efficient Frontier Analysis\n\n📊 ASSET UNIVERSE:\n${e.map(e=>`• ${e.ticker}: Expected Return ${t(e.expectedReturn)}, Volatility ${t(e.volatility)}`).join("\n")}\n\n🎯 OPTIMAL PORTFOLIO (Max Sharpe Ratio):\n• Expected Return: ${t(n.return)}\n• Volatility: ${t(n.volatility)}\n• Sharpe Ratio: ${a(n.sharpeRatio,2)}\n\n⚖️ OPTIMAL WEIGHTS:\n${e.map((e,a)=>`• ${e.ticker}: ${t(n.weights[a])}`).join("\n")}\n\n📈 FRONTIER STATISTICS:\n• Minimum Volatility: ${t(Math.min(...r.map(e=>e.volatility)))}\n• Maximum Return: ${t(Math.max(...r.map(e=>e.return)))}\n• Best Sharpe Ratio: ${a(Math.max(...r.map(e=>e.sharpeRatio)),2)}\n• Frontier Points: ${r.length}\n\n💡 INSIGHTS:\n• Diversification reduces portfolio risk below individual asset volatilities\n• Optimal portfolio balances return and risk for maximum risk-adjusted return\n• Consider rebalancing periodically to maintain target allocation\n\n⚠️ Note: Analysis uses simplified assumptions. Real optimization requires historical correlation data.`,data:{analysis:"efficient_frontier",assets:e,frontierPoints:r,optimalPortfolio:n}}}catch(s){return{type:"error",content:`Efficient frontier analysis failed: ${s.message}`}}},parameterSchema:{required:["tickers"],optional:[]}},DRAWDOWN:{execute:async(e,r,n)=>{const[i,s=252]=e.parameters;if(!i)return{type:"error",content:"DRAWDOWN command requires a ticker symbol. Usage: DRAWDOWN(AAPL, 252)"};try{const e=await d.fetchCompanyProfile(i.toUpperCase()),r=.16*e.beta,n=2.5*r,o=.4*n,c=12*r,l=100*n,u=[{start:"2023-03-01",end:"2023-04-15",magnitude:.8*n,duration:45},{start:"2023-07-10",end:"2023-08-20",magnitude:.6*n,duration:41},{start:"2023-11-05",end:"2023-12-01",magnitude:.4*n,duration:26},{start:"2024-02-15",end:"2024-03-10",magnitude:.7*n,duration:24}];return{type:"success",content:`Drawdown Analysis for ${e.companyName} (${i.toUpperCase()})\n\n📉 DRAWDOWN STATISTICS:\n• Maximum Drawdown: ${t(n)}\n• Average Drawdown: ${t(o)}\n• Drawdown Frequency: ${a(c,1)} per year\n• Average Recovery Time: ${a(l,0)} days\n\n📊 HISTORICAL DRAWDOWNS:\n${u.map((e,a)=>`${a+1}. ${e.start} to ${e.end}: ${t(e.magnitude)} (${e.duration} days)`).join("\n")}\n\n⚠️ RISK ASSESSMENT:\n• Drawdown Risk: ${n>.3?"High":n>.2?"Moderate":"Low"}\n• Recovery Speed: ${l<60?"Fast":l<120?"Moderate":"Slow"}\n• Volatility Impact: ${r>.25?"High volatility increases drawdown risk":"Moderate volatility profile"}\n\n📈 PERFORMANCE METRICS:\n• Calmar Ratio: ${a(.08/n,2)} (Annual Return / Max Drawdown)\n• Pain Index: ${a(o*c,2)}\n• Ulcer Index: ${a(Math.sqrt(o),3)}\n\n💡 INSIGHTS:\n• Drawdowns are normal part of investing - focus on recovery patterns\n• Diversification can help reduce maximum drawdown magnitude\n• Consider position sizing based on maximum acceptable drawdown\n\n⏱️ Analysis Period: ${s} trading days\n${d.demoMode?"💡 Note: Using estimated drawdown metrics. Configure API keys for historical data.":"✅ Based on historical price data"}`,data:{analysis:"drawdown",ticker:i.toUpperCase(),metrics:{maxDrawdown:n,avgDrawdown:o,drawdownFrequency:c,recoveryTime:l,drawdownPeriods:u}}}}catch(o){return{type:"error",content:`Drawdown analysis failed: ${o.message}`}}},parameterSchema:{required:["ticker"],optional:["period"]}}};export{d,p};
//# sourceMappingURL=portfolioCommands-CoJt4C1u.js.map
