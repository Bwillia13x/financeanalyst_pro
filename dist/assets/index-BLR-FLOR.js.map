{"version":3,"file":"index-BLR-FLOR.js","sources":["../../src/pages/financial-model-workspace/components/AuditTrail.jsx","../../src/pages/financial-model-workspace/components/CalculationResults.jsx","../../src/pages/financial-model-workspace/components/FormulaBuilder.jsx","../../src/pages/financial-model-workspace/components/ModelTemplates.jsx","../../src/services/commandRegistry.js","../../src/services/commandProcessor.js","../../src/pages/financial-model-workspace/components/TerminalInterface.jsx","../../src/pages/financial-model-workspace/components/VariableInputs.jsx","../../src/pages/financial-model-workspace/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst AuditTrail = ({ calculations, errors, warnings }) => {\n  const [activeTab, setActiveTab] = useState('calculations');\n  const [expandedItems, setExpandedItems] = useState(new Set());\n  const [filterLevel, setFilterLevel] = useState('all');\n\n  const mockAuditData = {\n    calculations: [\n      {\n        id: 1,\n        timestamp: new Date(Date.now() - 300000),\n        type: 'calculation',\n        operation: 'DCF Valuation',\n        formula: 'NPV(FCFF_2024:2028, WACC)',\n        result: 2547.5,\n        inputs: {\n          FCFF_2024: 187.5,\n          FCFF_2025: 206.3,\n          FCFF_2026: 226.9,\n          FCFF_2027: 249.6,\n          FCFF_2028: 274.6,\n          WACC: 0.098\n        },\n        executionTime: 0.045,\n        status: 'success'\n      },\n      {\n        id: 2,\n        timestamp: new Date(Date.now() - 600000),\n        type: 'calculation',\n        operation: 'WACC Calculation',\n        formula: 'WACC(cost_equity, cost_debt, tax_rate, debt_ratio)',\n        result: 0.098,\n        inputs: {\n          cost_equity: 0.123,\n          cost_debt: 0.045,\n          tax_rate: 0.25,\n          debt_ratio: 0.4\n        },\n        executionTime: 0.012,\n        status: 'success'\n      },\n      {\n        id: 3,\n        timestamp: new Date(Date.now() - 900000),\n        type: 'calculation',\n        operation: 'Terminal Value',\n        formula: 'TERMINAL_VALUE(FCF_final, terminal_growth, WACC)',\n        result: 1247.3,\n        inputs: {\n          FCF_final: 274.6,\n          terminal_growth: 0.025,\n          WACC: 0.098\n        },\n        executionTime: 0.008,\n        status: 'success'\n      }\n    ],\n    errors: [\n      {\n        id: 1,\n        timestamp: new Date(Date.now() - 1200000),\n        type: 'error',\n        severity: 'high',\n        message: 'Division by zero in WACC calculation',\n        formula: 'WACC(cost_equity, cost_debt, tax_rate, debt_ratio)',\n        location: 'Cell B15',\n        suggestion: 'Ensure debt_ratio is not equal to 1.0',\n        resolved: true\n      }\n    ],\n    warnings: [\n      {\n        id: 1,\n        timestamp: new Date(Date.now() - 180000),\n        type: 'warning',\n        severity: 'medium',\n        message: 'Beta coefficient (1.15) is above industry average (0.95)',\n        formula: 'CAPM(risk_free, beta, market_premium)',\n        location: 'Assumptions',\n        suggestion: 'Consider reviewing beta calculation or using industry average',\n        acknowledged: false\n      },\n      {\n        id: 2,\n        timestamp: new Date(Date.now() - 420000),\n        type: 'warning',\n        severity: 'low',\n        message: 'Terminal growth rate (2.5%) close to discount rate component',\n        formula: 'TERMINAL_VALUE(FCF_final, terminal_growth, WACC)',\n        location: 'Terminal Value',\n        suggestion: 'Ensure terminal growth rate is reasonable for long-term GDP growth',\n        acknowledged: true\n      }\n    ],\n    validations: [\n      {\n        id: 1,\n        timestamp: new Date(Date.now() - 60000),\n        type: 'validation',\n        check: 'Circular Reference Check',\n        status: 'passed',\n        details: 'No circular references detected in model'\n      },\n      {\n        id: 2,\n        timestamp: new Date(Date.now() - 120000),\n        type: 'validation',\n        check: 'Balance Sheet Check',\n        status: 'passed',\n        details: 'Assets = Liabilities + Equity for all projection years'\n      },\n      {\n        id: 3,\n        timestamp: new Date(Date.now() - 240000),\n        type: 'validation',\n        check: 'Cash Flow Consistency',\n        status: 'warning',\n        details: 'Minor rounding differences in cash flow statements (<$0.1M)'\n      }\n    ]\n  };\n\n  const tabs = [\n    {\n      id: 'calculations',\n      label: 'Calculations',\n      icon: 'Calculator',\n      count: mockAuditData.calculations.length\n    },\n    { id: 'errors', label: 'Errors', icon: 'XCircle', count: mockAuditData.errors.length },\n    {\n      id: 'warnings',\n      label: 'Warnings',\n      icon: 'AlertTriangle',\n      count: mockAuditData.warnings.length\n    },\n    {\n      id: 'validations',\n      label: 'Validations',\n      icon: 'CheckCircle',\n      count: mockAuditData.validations.length\n    }\n  ];\n\n  const toggleExpanded = id => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(id)) {\n      newExpanded.delete(id);\n    } else {\n      newExpanded.add(id);\n    }\n    setExpandedItems(newExpanded);\n  };\n\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'success':\n        return { icon: 'CheckCircle', color: 'text-success' };\n      case 'error':\n        return { icon: 'XCircle', color: 'text-destructive' };\n      case 'warning':\n        return { icon: 'AlertTriangle', color: 'text-warning' };\n      case 'passed':\n        return { icon: 'CheckCircle', color: 'text-success' };\n      default:\n        return { icon: 'Info', color: 'text-muted-foreground' };\n    }\n  };\n\n  const getSeverityColor = severity => {\n    switch (severity) {\n      case 'high':\n        return 'text-destructive bg-destructive/10';\n      case 'medium':\n        return 'text-warning bg-warning/10';\n      case 'low':\n        return 'text-muted-foreground bg-muted';\n      default:\n        return 'text-muted-foreground bg-muted';\n    }\n  };\n\n  const formatExecutionTime = time => {\n    if (time < 0.001) return '<1ms';\n    if (time < 1) return `${(time * 1000).toFixed(0)}ms`;\n    return `${time.toFixed(2)}s`;\n  };\n\n  const renderCalculations = () => (\n    <div className=\"space-y-3\">\n      {mockAuditData.calculations.map(calc => (\n        <div key={calc.id} className=\"p-4 bg-background border border-border rounded-lg\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <Icon name=\"Calculator\" size={16} className=\"text-primary\" />\n                <span className=\"font-medium text-foreground\">{calc.operation}</span>\n                <span\n                  className={`px-2 py-1 rounded-full text-xs ${getStatusIcon(calc.status).color} bg-current/10`}\n                >\n                  {calc.status}\n                </span>\n              </div>\n              <code className=\"text-sm bg-muted px-2 py-1 rounded font-mono text-foreground block mb-2\">\n                {calc.formula}\n              </code>\n              <div className=\"flex items-center space-x-4 text-xs text-muted-foreground\">\n                <span>{calc.timestamp.toLocaleTimeString()}</span>\n                <span>Execution: {formatExecutionTime(calc.executionTime)}</span>\n                <span>Result: ${calc.result.toFixed(2)}M</span>\n              </div>\n            </div>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              iconName={expandedItems.has(calc.id) ? 'ChevronUp' : 'ChevronDown'}\n              onClick={() => toggleExpanded(calc.id)}\n            />\n          </div>\n\n          {expandedItems.has(calc.id) && (\n            <div className=\"mt-4 pt-4 border-t border-border\">\n              <h5 className=\"text-sm font-medium text-foreground mb-2\">Input Values</h5>\n              <div className=\"grid grid-cols-2 gap-2\">\n                {Object.entries(calc.inputs).map(([key, value]) => (\n                  <div key={key} className=\"flex justify-between text-sm\">\n                    <span className=\"text-muted-foreground\">{key}:</span>\n                    <span className=\"text-foreground font-mono\">\n                      {typeof value === 'number' ? value.toFixed(3) : value}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderErrors = () => (\n    <div className=\"space-y-3\">\n      {mockAuditData.errors.map(error => (\n        <div key={error.id} className=\"p-4 bg-background border border-destructive/20 rounded-lg\">\n          <div className=\"flex items-start space-x-3\">\n            <Icon name=\"XCircle\" size={16} className=\"text-destructive mt-0.5\" />\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <span className=\"font-medium text-foreground\">{error.message}</span>\n                <span\n                  className={`px-2 py-1 rounded-full text-xs ${getSeverityColor(error.severity)}`}\n                >\n                  {error.severity}\n                </span>\n                {error.resolved && (\n                  <span className=\"px-2 py-1 rounded-full text-xs text-success bg-success/10\">\n                    Resolved\n                  </span>\n                )}\n              </div>\n              <code className=\"text-sm bg-muted px-2 py-1 rounded font-mono text-foreground block mb-2\">\n                {error.formula}\n              </code>\n              <div className=\"text-sm text-muted-foreground mb-2\">Location: {error.location}</div>\n              <div className=\"text-sm text-foreground bg-muted/50 p-2 rounded\">\n                <strong>Suggestion:</strong> {error.suggestion}\n              </div>\n              <div className=\"text-xs text-muted-foreground mt-2\">\n                {error.timestamp.toLocaleString()}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderWarnings = () => (\n    <div className=\"space-y-3\">\n      {mockAuditData.warnings.map(warning => (\n        <div key={warning.id} className=\"p-4 bg-background border border-warning/20 rounded-lg\">\n          <div className=\"flex items-start space-x-3\">\n            <Icon name=\"AlertTriangle\" size={16} className=\"text-warning mt-0.5\" />\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <span className=\"font-medium text-foreground\">{warning.message}</span>\n                <span\n                  className={`px-2 py-1 rounded-full text-xs ${getSeverityColor(warning.severity)}`}\n                >\n                  {warning.severity}\n                </span>\n                {warning.acknowledged && (\n                  <span className=\"px-2 py-1 rounded-full text-xs text-muted-foreground bg-muted\">\n                    Acknowledged\n                  </span>\n                )}\n              </div>\n              <code className=\"text-sm bg-muted px-2 py-1 rounded font-mono text-foreground block mb-2\">\n                {warning.formula}\n              </code>\n              <div className=\"text-sm text-muted-foreground mb-2\">Location: {warning.location}</div>\n              <div className=\"text-sm text-foreground bg-muted/50 p-2 rounded\">\n                <strong>Suggestion:</strong> {warning.suggestion}\n              </div>\n              <div className=\"flex items-center justify-between mt-3\">\n                <div className=\"text-xs text-muted-foreground\">\n                  {warning.timestamp.toLocaleString()}\n                </div>\n                {!warning.acknowledged && (\n                  <Button variant=\"outline\" size=\"sm\">\n                    Acknowledge\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderValidations = () => (\n    <div className=\"space-y-3\">\n      {mockAuditData.validations.map(validation => (\n        <div key={validation.id} className=\"p-4 bg-background border border-border rounded-lg\">\n          <div className=\"flex items-start space-x-3\">\n            <Icon\n              name={getStatusIcon(validation.status).icon}\n              size={16}\n              className={`${getStatusIcon(validation.status).color} mt-0.5`}\n            />\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <span className=\"font-medium text-foreground\">{validation.check}</span>\n                <span\n                  className={`px-2 py-1 rounded-full text-xs ${getStatusIcon(validation.status).color} bg-current/10`}\n                >\n                  {validation.status}\n                </span>\n              </div>\n              <div className=\"text-sm text-muted-foreground mb-2\">{validation.details}</div>\n              <div className=\"text-xs text-muted-foreground\">\n                {validation.timestamp.toLocaleString()}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'calculations':\n        return renderCalculations();\n      case 'errors':\n        return renderErrors();\n      case 'warnings':\n        return renderWarnings();\n      case 'validations':\n        return renderValidations();\n      default:\n        return renderCalculations();\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-card\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-border\">\n        <div className=\"flex items-center space-x-2\">\n          <Icon name=\"FileText\" size={20} className=\"text-primary\" />\n          <h3 className=\"text-lg font-semibold text-foreground\">Audit Trail</h3>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button variant=\"outline\" size=\"sm\" iconName=\"Download\">\n            Export Log\n          </Button>\n          <Button variant=\"outline\" size=\"sm\" iconName=\"RefreshCw\">\n            Refresh\n          </Button>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"flex border-b border-border overflow-x-auto\">\n        {tabs.map(tab => (\n          <button\n            key={tab.id}\n            onClick={() => setActiveTab(tab.id)}\n            className={`flex items-center space-x-2 px-4 py-3 text-sm font-medium whitespace-nowrap transition-smooth ${\n              activeTab === tab.id\n                ? 'bg-primary text-primary-foreground border-b-2 border-primary'\n                : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n            }`}\n          >\n            <Icon name={tab.icon} size={16} />\n            <span>{tab.label}</span>\n            {tab.count > 0 && (\n              <span className=\"px-2 py-1 bg-current/20 rounded-full text-xs\">{tab.count}</span>\n            )}\n          </button>\n        ))}\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-y-auto p-4\">{renderTabContent()}</div>\n\n      {/* Footer */}\n      <div className=\"p-4 border-t border-border bg-muted/50\">\n        <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n          <div className=\"flex items-center space-x-4\">\n            <span>Last updated: {new Date().toLocaleTimeString()}</span>\n            <span>•</span>\n            <span>Auto-refresh: ON</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-2 h-2 bg-success rounded-full\" />\n            <span>Audit logging active</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuditTrail;\n","import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst CalculationResults = ({ results, onExport }) => {\n  const [activeTab, setActiveTab] = useState('summary');\n  const [expandedSections, setExpandedSections] = useState(new Set(['valuation']));\n\n  const mockResults = {\n    summary: {\n      enterpriseValue: 2847.5,\n      equityValue: 2547.5,\n      sharePrice: 127.38,\n      impliedReturn: 0.156,\n      confidence: 0.87\n    },\n    cashFlows: [\n      { year: 2024, revenue: 1250, ebitda: 312.5, fcf: 187.5, pv: 170.5 },\n      { year: 2025, revenue: 1375, ebitda: 343.8, fcf: 206.3, pv: 172.8 },\n      { year: 2026, revenue: 1513, ebitda: 378.2, fcf: 226.9, pv: 175.2 },\n      { year: 2027, revenue: 1664, ebitda: 416.0, fcf: 249.6, pv: 177.7 },\n      { year: 2028, revenue: 1830, ebitda: 457.6, fcf: 274.6, pv: 180.3 }\n    ],\n    sensitivity: {\n      wacc: [0.08, 0.09, 0.1, 0.11, 0.12],\n      growth: [0.015, 0.02, 0.025, 0.03, 0.035],\n      matrix: [\n        [145.2, 138.7, 132.8, 127.4, 122.5],\n        [152.1, 144.9, 138.2, 132.1, 126.4],\n        [159.8, 151.9, 144.6, 137.8, 131.6],\n        [168.4, 159.7, 151.8, 144.4, 137.6],\n        [178.1, 168.4, 159.7, 151.8, 144.4]\n      ]\n    },\n    scenarios: [\n      { name: 'Base Case', probability: 0.6, sharePrice: 127.38, irr: 0.156 },\n      { name: 'Bull Case', probability: 0.25, sharePrice: 145.67, irr: 0.189 },\n      { name: 'Bear Case', probability: 0.15, sharePrice: 98.42, irr: 0.087 }\n    ],\n    multiples: [\n      { metric: 'EV/Revenue', current: 2.3, peer_avg: 2.8, premium: -17.9 },\n      { metric: 'EV/EBITDA', current: 9.1, peer_avg: 11.2, premium: -18.8 },\n      { metric: 'P/E Ratio', current: 18.5, peer_avg: 22.1, premium: -16.3 },\n      { metric: 'P/B Ratio', current: 2.1, peer_avg: 2.6, premium: -19.2 }\n    ]\n  };\n\n  const tabs = [\n    { id: 'summary', label: 'Summary', icon: 'BarChart3' },\n    { id: 'cashflows', label: 'Cash Flows', icon: 'TrendingUp' },\n    { id: 'sensitivity', label: 'Sensitivity', icon: 'Target' },\n    { id: 'scenarios', label: 'Scenarios', icon: 'GitBranch' },\n    { id: 'multiples', label: 'Multiples', icon: 'Layers' }\n  ];\n\n  const toggleSection = section => {\n    const newExpanded = new Set(expandedSections);\n    if (newExpanded.has(section)) {\n      newExpanded.delete(section);\n    } else {\n      newExpanded.add(section);\n    }\n    setExpandedSections(newExpanded);\n  };\n\n  const formatCurrency = (value, decimals = 2) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    }).format(value);\n  };\n\n  const formatPercent = (value, decimals = 1) => {\n    return `${(value * 100).toFixed(decimals)}%`;\n  };\n\n  const renderSummary = () => (\n    <div className=\"space-y-6\">\n      {/* Key Metrics */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"p-4 bg-muted rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-muted-foreground\">Enterprise Value</span>\n            <Icon name=\"Building\" size={16} className=\"text-muted-foreground\" />\n          </div>\n          <div className=\"mt-2\">\n            <span className=\"text-2xl font-bold text-foreground\">\n              {formatCurrency(mockResults.summary.enterpriseValue, 1)}M\n            </span>\n          </div>\n        </div>\n\n        <div className=\"p-4 bg-muted rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-muted-foreground\">Equity Value</span>\n            <Icon name=\"PieChart\" size={16} className=\"text-muted-foreground\" />\n          </div>\n          <div className=\"mt-2\">\n            <span className=\"text-2xl font-bold text-foreground\">\n              {formatCurrency(mockResults.summary.equityValue, 1)}M\n            </span>\n          </div>\n        </div>\n\n        <div className=\"p-4 bg-muted rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-muted-foreground\">Share Price</span>\n            <Icon name=\"DollarSign\" size={16} className=\"text-muted-foreground\" />\n          </div>\n          <div className=\"mt-2\">\n            <span className=\"text-2xl font-bold text-foreground\">\n              {formatCurrency(mockResults.summary.sharePrice)}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"p-4 bg-muted rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-muted-foreground\">Implied Return</span>\n            <Icon name=\"TrendingUp\" size={16} className=\"text-success\" />\n          </div>\n          <div className=\"mt-2\">\n            <span className=\"text-2xl font-bold text-success\">\n              {formatPercent(mockResults.summary.impliedReturn)}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Confidence Indicator */}\n      <div className=\"p-4 bg-background border border-border rounded-lg\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <span className=\"text-sm font-medium text-foreground\">Model Confidence</span>\n          <span className=\"text-sm text-muted-foreground\">\n            {formatPercent(mockResults.summary.confidence)}\n          </span>\n        </div>\n        <div className=\"w-full bg-muted rounded-full h-2\">\n          <div\n            className=\"bg-success h-2 rounded-full transition-all duration-300\"\n            style={{ width: `${mockResults.summary.confidence * 100}%` }}\n          />\n        </div>\n        <p className=\"text-xs text-muted-foreground mt-2\">\n          Based on data quality, assumption validity, and sensitivity analysis\n        </p>\n      </div>\n    </div>\n  );\n\n  const renderCashFlows = () => (\n    <div className=\"space-y-4\">\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full text-sm\">\n          <thead>\n            <tr className=\"border-b border-border\">\n              <th className=\"text-left py-2 text-muted-foreground font-medium\">Year</th>\n              <th className=\"text-right py-2 text-muted-foreground font-medium\">Revenue</th>\n              <th className=\"text-right py-2 text-muted-foreground font-medium\">EBITDA</th>\n              <th className=\"text-right py-2 text-muted-foreground font-medium\">FCF</th>\n              <th className=\"text-right py-2 text-muted-foreground font-medium\">Present Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {mockResults.cashFlows.map((cf, index) => (\n              <tr key={index} className=\"border-b border-border/50\">\n                <td className=\"py-3 text-foreground font-medium\">{cf.year}</td>\n                <td className=\"py-3 text-right text-foreground\">\n                  {formatCurrency(cf.revenue, 0)}M\n                </td>\n                <td className=\"py-3 text-right text-foreground\">{formatCurrency(cf.ebitda, 1)}M</td>\n                <td className=\"py-3 text-right text-foreground\">{formatCurrency(cf.fcf, 1)}M</td>\n                <td className=\"py-3 text-right text-success font-medium\">\n                  {formatCurrency(cf.pv, 1)}M\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"p-4 bg-muted rounded-lg\">\n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-sm font-medium text-foreground\">Terminal Value</span>\n          <span className=\"text-lg font-bold text-foreground\">{formatCurrency(1247.3, 1)}M</span>\n        </div>\n        <p className=\"text-xs text-muted-foreground mt-1\">\n          2.5% perpetual growth rate applied to 2028 FCF\n        </p>\n      </div>\n    </div>\n  );\n\n  const renderSensitivity = () => (\n    <div className=\"space-y-4\">\n      <div className=\"text-center\">\n        <h4 className=\"text-sm font-medium text-foreground mb-2\">\n          Share Price Sensitivity Analysis\n        </h4>\n        <p className=\"text-xs text-muted-foreground\">WACC vs Terminal Growth Rate</p>\n      </div>\n\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full text-xs\">\n          <thead>\n            <tr>\n              <th className=\"p-2 text-left text-muted-foreground\">WACC \\ Growth</th>\n              {mockResults.sensitivity.growth.map((growth, index) => (\n                <th key={index} className=\"p-2 text-center text-muted-foreground\">\n                  {formatPercent(growth)}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {mockResults.sensitivity.wacc.map((wacc, rowIndex) => (\n              <tr key={rowIndex} className=\"border-t border-border/50\">\n                <td className=\"p-2 text-muted-foreground font-medium\">{formatPercent(wacc)}</td>\n                {mockResults.sensitivity.matrix[rowIndex].map((value, colIndex) => (\n                  <td\n                    key={colIndex}\n                    className={`p-2 text-center font-medium ${\n                      Math.abs(value - 127.38) < 5\n                        ? 'bg-primary/20 text-primary'\n                        : 'text-foreground'\n                    }`}\n                  >\n                    {formatCurrency(value)}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n\n  const renderScenarios = () => (\n    <div className=\"space-y-4\">\n      {mockResults.scenarios.map((scenario, index) => (\n        <div key={index} className=\"p-4 bg-muted rounded-lg\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"font-medium text-foreground\">{scenario.name}</span>\n              <span className=\"text-xs bg-background px-2 py-1 rounded text-muted-foreground\">\n                {formatPercent(scenario.probability)} probability\n              </span>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"text-lg font-bold text-foreground\">\n                {formatCurrency(scenario.sharePrice)}\n              </div>\n              <div className=\"text-sm text-muted-foreground\">{formatPercent(scenario.irr)} IRR</div>\n            </div>\n          </div>\n          <div className=\"w-full bg-background rounded-full h-1\">\n            <div\n              className=\"bg-primary h-1 rounded-full\"\n              style={{ width: `${scenario.probability * 100}%` }}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderMultiples = () => (\n    <div className=\"space-y-4\">\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full text-sm\">\n          <thead>\n            <tr className=\"border-b border-border\">\n              <th className=\"text-left py-2 text-muted-foreground font-medium\">Multiple</th>\n              <th className=\"text-right py-2 text-muted-foreground font-medium\">Current</th>\n              <th className=\"text-right py-2 text-muted-foreground font-medium\">Peer Avg</th>\n              <th className=\"text-right py-2 text-muted-foreground font-medium\">\n                Premium/Discount\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {mockResults.multiples.map((multiple, index) => (\n              <tr key={index} className=\"border-b border-border/50\">\n                <td className=\"py-3 text-foreground font-medium\">{multiple.metric}</td>\n                <td className=\"py-3 text-right text-foreground\">{multiple.current}x</td>\n                <td className=\"py-3 text-right text-foreground\">{multiple.peer_avg}x</td>\n                <td\n                  className={`py-3 text-right font-medium ${\n                    multiple.premium > 0 ? 'text-success' : 'text-destructive'\n                  }`}\n                >\n                  {multiple.premium > 0 ? '+' : ''}\n                  {multiple.premium.toFixed(1)}%\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'summary':\n        return renderSummary();\n      case 'cashflows':\n        return renderCashFlows();\n      case 'sensitivity':\n        return renderSensitivity();\n      case 'scenarios':\n        return renderScenarios();\n      case 'multiples':\n        return renderMultiples();\n      default:\n        return renderSummary();\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-card\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-border\">\n        <div className=\"flex items-center space-x-2\">\n          <Icon name=\"Calculator\" size={20} className=\"text-primary\" />\n          <h3 className=\"text-lg font-semibold text-foreground\">Calculation Results</h3>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            iconName=\"Download\"\n            onClick={() => onExport && onExport('excel')}\n          >\n            Export\n          </Button>\n          <Button variant=\"outline\" size=\"sm\" iconName=\"Share2\">\n            Share\n          </Button>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"flex border-b border-border overflow-x-auto\">\n        {tabs.map(tab => (\n          <button\n            key={tab.id}\n            onClick={() => setActiveTab(tab.id)}\n            className={`flex items-center space-x-2 px-4 py-3 text-sm font-medium whitespace-nowrap transition-smooth ${\n              activeTab === tab.id\n                ? 'bg-primary text-primary-foreground border-b-2 border-primary'\n                : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n            }`}\n          >\n            <Icon name={tab.icon} size={16} />\n            <span>{tab.label}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-y-auto p-4\">{renderTabContent()}</div>\n\n      {/* Footer */}\n      <div className=\"p-4 border-t border-border bg-muted/50\">\n        <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n          <div className=\"flex items-center space-x-4\">\n            <span>Last Updated: {new Date().toLocaleTimeString()}</span>\n            <span>•</span>\n            <span>Auto-refresh: ON</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-2 h-2 bg-success rounded-full\" />\n            <span>Calculations current</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CalculationResults;\n","import React, { useState, useRef } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst FormulaBuilder = ({ onFormulaCreate, variables }) => {\n  const [selectedCategory, setSelectedCategory] = useState('valuation');\n  const [draggedFunction, setDraggedFunction] = useState(null);\n  const [currentFormula, setCurrentFormula] = useState('');\n  const [formulaName, setFormulaName] = useState('');\n  const [isBuilding, setIsBuilding] = useState(false);\n  const dropZoneRef = useRef(null);\n\n  const functionCategories = {\n    valuation: {\n      name: 'Valuation',\n      icon: 'TrendingUp',\n      functions: [\n        {\n          name: 'DCF',\n          syntax: 'DCF(fcf_array, discount_rate, terminal_growth)',\n          description: 'Discounted Cash Flow valuation'\n        },\n        {\n          name: 'NPV',\n          syntax: 'NPV(cash_flows, discount_rate)',\n          description: 'Net Present Value calculation'\n        },\n        { name: 'IRR', syntax: 'IRR(cash_flows)', description: 'Internal Rate of Return' },\n        {\n          name: 'TERMINAL_VALUE',\n          syntax: 'TERMINAL_VALUE(final_fcf, growth_rate, discount_rate)',\n          description: 'Terminal value calculation'\n        },\n        {\n          name: 'WACC',\n          syntax: 'WACC(cost_equity, cost_debt, tax_rate, debt_ratio)',\n          description: 'Weighted Average Cost of Capital'\n        }\n      ]\n    },\n    financial: {\n      name: 'Financial Ratios',\n      icon: 'Calculator',\n      functions: [\n        {\n          name: 'ROE',\n          syntax: 'ROE(net_income, shareholders_equity)',\n          description: 'Return on Equity'\n        },\n        { name: 'ROA', syntax: 'ROA(net_income, total_assets)', description: 'Return on Assets' },\n        {\n          name: 'DEBT_TO_EQUITY',\n          syntax: 'DEBT_TO_EQUITY(total_debt, total_equity)',\n          description: 'Debt to Equity ratio'\n        },\n        {\n          name: 'CURRENT_RATIO',\n          syntax: 'CURRENT_RATIO(current_assets, current_liabilities)',\n          description: 'Current ratio calculation'\n        },\n        {\n          name: 'QUICK_RATIO',\n          syntax: 'QUICK_RATIO(quick_assets, current_liabilities)',\n          description: 'Quick ratio calculation'\n        }\n      ]\n    },\n    statistical: {\n      name: 'Statistical',\n      icon: 'BarChart3',\n      functions: [\n        {\n          name: 'CORRELATION',\n          syntax: 'CORRELATION(dataset1, dataset2)',\n          description: 'Correlation coefficient'\n        },\n        {\n          name: 'REGRESSION',\n          syntax: 'REGRESSION(dependent_var, independent_var)',\n          description: 'Linear regression analysis'\n        },\n        {\n          name: 'VOLATILITY',\n          syntax: 'VOLATILITY(returns, period)',\n          description: 'Historical volatility'\n        },\n        {\n          name: 'BETA',\n          syntax: 'BETA(stock_returns, market_returns)',\n          description: 'Beta coefficient calculation'\n        },\n        {\n          name: 'SHARPE_RATIO',\n          syntax: 'SHARPE_RATIO(returns, risk_free_rate)',\n          description: 'Risk-adjusted return metric'\n        }\n      ]\n    },\n    mathematical: {\n      name: 'Mathematical',\n      icon: 'Sigma',\n      functions: [\n        { name: 'SUM', syntax: 'SUM(range)', description: 'Sum of values' },\n        { name: 'AVERAGE', syntax: 'AVERAGE(range)', description: 'Average of values' },\n        { name: 'MEDIAN', syntax: 'MEDIAN(range)', description: 'Median value' },\n        { name: 'STDEV', syntax: 'STDEV(range)', description: 'Standard deviation' },\n        {\n          name: 'PERCENTILE',\n          syntax: 'PERCENTILE(range, percentile)',\n          description: 'Percentile calculation'\n        }\n      ]\n    }\n  };\n\n  const savedFormulas = [\n    {\n      name: 'Custom_DCF_Tech',\n      formula: 'DCF(FCFF_PROJECTIONS, WACC(0.12, 0.04, 0.25, 0.3), 0.025)',\n      category: 'Custom'\n    },\n    {\n      name: 'LBO_Returns',\n      formula: 'IRR([INITIAL_INVESTMENT * -1, EXIT_VALUE])',\n      category: 'Custom'\n    },\n    {\n      name: 'Comp_Multiple',\n      formula: 'AVERAGE(PEER_EV_REVENUE) * TARGET_REVENUE',\n      category: 'Custom'\n    }\n  ];\n\n  const handleDragStart = (e, func) => {\n    setDraggedFunction(func);\n    e.dataTransfer.effectAllowed = 'copy';\n  };\n\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'copy';\n  };\n\n  const handleDrop = e => {\n    e.preventDefault();\n    if (draggedFunction) {\n      const newFormula = currentFormula + (currentFormula ? ' + ' : '') + draggedFunction.syntax;\n      setCurrentFormula(newFormula);\n      setDraggedFunction(null);\n    }\n  };\n\n  const addFunction = func => {\n    const newFormula = currentFormula + (currentFormula ? ' + ' : '') + func.syntax;\n    setCurrentFormula(newFormula);\n  };\n\n  const clearFormula = () => {\n    setCurrentFormula('');\n    setFormulaName('');\n  };\n\n  const saveFormula = () => {\n    if (formulaName && currentFormula) {\n      if (onFormulaCreate) {\n        onFormulaCreate({\n          name: formulaName,\n          formula: currentFormula,\n          timestamp: new Date()\n        });\n      }\n      setFormulaName('');\n      setCurrentFormula('');\n      setIsBuilding(false);\n    }\n  };\n\n  const validateFormula = () => {\n    // Simple validation - check for balanced parentheses\n    const openParens = (currentFormula.match(/\\(/g) || []).length;\n    const closeParens = (currentFormula.match(/\\)/g) || []).length;\n    return openParens === closeParens;\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-card\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-border\">\n        <div className=\"flex items-center space-x-2\">\n          <Icon name=\"Wrench\" size={20} className=\"text-primary\" />\n          <h3 className=\"text-lg font-semibold text-foreground\">Formula Builder</h3>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            iconName=\"Plus\"\n            onClick={() => setIsBuilding(!isBuilding)}\n          >\n            New Formula\n          </Button>\n        </div>\n      </div>\n\n      {/* Function Categories */}\n      <div className=\"flex border-b border-border\">\n        {Object.entries(functionCategories).map(([key, category]) => (\n          <button\n            key={key}\n            onClick={() => setSelectedCategory(key)}\n            className={`flex items-center space-x-2 px-4 py-3 text-sm font-medium transition-smooth ${\n              selectedCategory === key\n                ? 'bg-primary text-primary-foreground border-b-2 border-primary'\n                : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n            }`}\n          >\n            <Icon name={category.icon} size={16} />\n            <span>{category.name}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* Function Library */}\n      <div className=\"flex-1 overflow-y-auto\">\n        <div className=\"p-4 space-y-3\">\n          {functionCategories[selectedCategory].functions.map((func, index) => (\n            <div\n              key={index}\n              draggable\n              onDragStart={e => handleDragStart(e, func)}\n              className=\"p-3 bg-muted rounded-lg border border-border cursor-move hover:bg-muted/80 transition-smooth group\"\n            >\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Icon\n                      name=\"Move\"\n                      size={14}\n                      className=\"text-muted-foreground group-hover:text-foreground\"\n                    />\n                    <span className=\"font-medium text-foreground\">{func.name}</span>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground mt-1\">{func.description}</p>\n                  <code className=\"text-xs bg-background px-2 py-1 rounded mt-2 block font-mono text-foreground\">\n                    {func.syntax}\n                  </code>\n                </div>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  iconName=\"Plus\"\n                  onClick={() => addFunction(func)}\n                  className=\"opacity-0 group-hover:opacity-100 transition-opacity\"\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Saved Formulas */}\n        <div className=\"border-t border-border p-4\">\n          <h4 className=\"text-sm font-medium text-foreground mb-3 flex items-center space-x-2\">\n            <Icon name=\"BookOpen\" size={16} />\n            <span>Saved Formulas</span>\n          </h4>\n          <div className=\"space-y-2\">\n            {savedFormulas.map((formula, index) => (\n              <div\n                key={index}\n                className=\"p-3 bg-background rounded-lg border border-border hover:bg-muted/50 transition-smooth cursor-pointer\"\n                onClick={() => setCurrentFormula(formula.formula)}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"font-medium text-foreground\">{formula.name}</span>\n                  <span className=\"text-xs text-muted-foreground bg-muted px-2 py-1 rounded\">\n                    {formula.category}\n                  </span>\n                </div>\n                <code className=\"text-xs text-muted-foreground mt-1 block font-mono\">\n                  {formula.formula}\n                </code>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Formula Builder Panel */}\n      {isBuilding && (\n        <div className=\"border-t border-border bg-background\">\n          <div className=\"p-4 space-y-4\">\n            <div>\n              <label className=\"text-sm font-medium text-foreground mb-2 block\">Formula Name</label>\n              <input\n                type=\"text\"\n                value={formulaName}\n                onChange={e => setFormulaName(e.target.value)}\n                placeholder=\"Enter formula name...\"\n                className=\"w-full px-3 py-2 bg-input border border-border rounded-lg text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring\"\n              />\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium text-foreground mb-2 block\">\n                Formula Expression\n              </label>\n              <div\n                ref={dropZoneRef}\n                onDragOver={handleDragOver}\n                onDrop={handleDrop}\n                className=\"min-h-[100px] p-3 bg-input border-2 border-dashed border-border rounded-lg focus-within:border-ring transition-colors\"\n              >\n                <textarea\n                  value={currentFormula}\n                  onChange={e => setCurrentFormula(e.target.value)}\n                  placeholder=\"Drag functions here or type formula manually...\"\n                  className=\"w-full h-20 bg-transparent text-foreground placeholder-muted-foreground resize-none outline-none font-mono text-sm\"\n                />\n              </div>\n              <div className=\"flex items-center justify-between mt-2\">\n                <div className=\"flex items-center space-x-2\">\n                  {validateFormula() ? (\n                    <div className=\"flex items-center space-x-1 text-success\">\n                      <Icon name=\"CheckCircle\" size={14} />\n                      <span className=\"text-xs\">Valid syntax</span>\n                    </div>\n                  ) : (\n                    <div className=\"flex items-center space-x-1 text-destructive\">\n                      <Icon name=\"XCircle\" size={14} />\n                      <span className=\"text-xs\">Invalid syntax</span>\n                    </div>\n                  )}\n                </div>\n                <span className=\"text-xs text-muted-foreground\">\n                  {currentFormula.length} characters\n                </span>\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <Button\n                variant=\"outline\" size=\"sm\" iconName=\"Trash2\"\n                onClick={clearFormula}\n              >\n                Clear\n              </Button>\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\" size=\"sm\" iconName=\"Eye\"\n                  disabled={!validateFormula()}\n                >\n                  Preview\n                </Button>\n                <Button\n                  variant=\"default\"\n                  size=\"sm\"\n                  iconName=\"Save\"\n                  onClick={saveFormula}\n                  disabled={!formulaName || !currentFormula || !validateFormula()}\n                >\n                  Save Formula\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FormulaBuilder;\n","import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst ModelTemplates = ({ onTemplateSelect, onTemplateCreate }) => {\n  const [selectedCategory, setSelectedCategory] = useState('valuation');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showCreateModal, setShowCreateModal] = useState(false);\n\n  const templateCategories = {\n    valuation: {\n      name: 'Valuation Models',\n      icon: 'TrendingUp',\n      templates: [\n        {\n          id: 'dcf_standard',\n          name: 'DCF - Standard',\n          description:\n            'Traditional discounted cash flow model with 5-year projections and terminal value',\n          complexity: 'Intermediate',\n          timeToComplete: '45 min',\n          lastUsed: '2024-07-10',\n          popularity: 95,\n          features: [\n            '5-year projections',\n            'Terminal value',\n            'Sensitivity analysis',\n            'WACC calculation'\n          ]\n        },\n        {\n          id: 'dcf_tech',\n          name: 'DCF - Technology',\n          description: 'Specialized DCF for high-growth technology companies with adjusted metrics',\n          complexity: 'Advanced',\n          timeToComplete: '60 min',\n          lastUsed: '2024-07-08',\n          popularity: 87,\n          features: ['SaaS metrics', 'User-based projections', 'Churn analysis', 'Rule of 40']\n        },\n        {\n          id: 'sum_of_parts',\n          name: 'Sum-of-the-Parts',\n          description: 'Multi-business valuation with segment-specific assumptions and multiples',\n          complexity: 'Advanced',\n          timeToComplete: '90 min',\n          lastUsed: '2024-07-05',\n          popularity: 73,\n          features: [\n            'Segment analysis',\n            'Multiple approaches',\n            'Holding company discount',\n            'Synergy modeling'\n          ]\n        }\n      ]\n    },\n    lbo: {\n      name: 'LBO Models',\n      icon: 'Layers',\n      templates: [\n        {\n          id: 'lbo_standard',\n          name: 'LBO - Standard',\n          description: 'Complete leveraged buyout model with debt sizing and returns analysis',\n          complexity: 'Advanced',\n          timeToComplete: '120 min',\n          lastUsed: '2024-07-09',\n          popularity: 91,\n          features: ['Debt capacity', 'Returns waterfall', 'Management rollover', 'Exit scenarios']\n        },\n        {\n          id: 'lbo_growth',\n          name: 'LBO - Growth Equity',\n          description: 'Growth-focused LBO with minority investment and expansion capital',\n          complexity: 'Advanced',\n          timeToComplete: '100 min',\n          lastUsed: '2024-07-06',\n          popularity: 68,\n          features: [\n            'Growth capital',\n            'Minority stake',\n            'Management incentives',\n            'Expansion modeling'\n          ]\n        }\n      ]\n    },\n    comps: {\n      name: 'Comparable Analysis',\n      icon: 'BarChart3',\n      templates: [\n        {\n          id: 'trading_comps',\n          name: 'Trading Comparables',\n          description: 'Public company multiple analysis with statistical benchmarking',\n          complexity: 'Beginner',\n          timeToComplete: '30 min',\n          lastUsed: '2024-07-11',\n          popularity: 98,\n          features: [\n            'Multiple analysis',\n            'Statistical metrics',\n            'Peer screening',\n            'Premium/discount analysis'\n          ]\n        },\n        {\n          id: 'transaction_comps',\n          name: 'Transaction Comparables',\n          description: 'M&A transaction analysis with control premiums and synergies',\n          complexity: 'Intermediate',\n          timeToComplete: '45 min',\n          lastUsed: '2024-07-07',\n          popularity: 82,\n          features: [\n            'M&A multiples',\n            'Control premiums',\n            'Synergy analysis',\n            'Transaction screening'\n          ]\n        }\n      ]\n    },\n    merger: {\n      name: 'M&A Models',\n      icon: 'GitMerge',\n      templates: [\n        {\n          id: 'merger_model',\n          name: 'Merger Model',\n          description:\n            'Comprehensive merger analysis with accretion/dilution and pro forma statements',\n          complexity: 'Expert',\n          timeToComplete: '180 min',\n          lastUsed: '2024-07-04',\n          popularity: 76,\n          features: [\n            'Accretion/dilution',\n            'Pro forma statements',\n            'Synergy modeling',\n            'Financing structure'\n          ]\n        },\n        {\n          id: 'acquisition_model',\n          name: 'Acquisition Model',\n          description: 'Strategic acquisition analysis with integration costs and value creation',\n          complexity: 'Expert',\n          timeToComplete: '150 min',\n          lastUsed: '2024-07-03',\n          popularity: 71,\n          features: ['Integration costs', 'Value creation', 'Financing options', 'Risk analysis']\n        }\n      ]\n    }\n  };\n\n  const recentTemplates = [\n    { id: 'dcf_standard', name: 'DCF - Standard', lastUsed: '2024-07-11 14:30' },\n    { id: 'trading_comps', name: 'Trading Comparables', lastUsed: '2024-07-11 09:15' },\n    { id: 'lbo_standard', name: 'LBO - Standard', lastUsed: '2024-07-10 16:45' }\n  ];\n\n  const getComplexityColor = complexity => {\n    switch (complexity) {\n      case 'Beginner':\n        return 'text-success bg-success/10';\n      case 'Intermediate':\n        return 'text-warning bg-warning/10';\n      case 'Advanced':\n        return 'text-accent bg-accent/10';\n      case 'Expert':\n        return 'text-destructive bg-destructive/10';\n      default:\n        return 'text-muted-foreground bg-muted';\n    }\n  };\n\n  const filteredTemplates = () => {\n    const templates = templateCategories[selectedCategory]?.templates || [];\n    if (!searchTerm) return templates;\n\n    return templates.filter(\n      template =>\n        template.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        template.description.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  };\n\n  const handleTemplateSelect = template => {\n    if (onTemplateSelect) {\n      onTemplateSelect(template);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-card\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-border\">\n        <div className=\"flex items-center space-x-2\">\n          <Icon name=\"FileTemplate\" size={20} className=\"text-primary\" />\n          <h3 className=\"text-lg font-semibold text-foreground\">Model Templates</h3>\n        </div>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          iconName=\"Plus\"\n          onClick={() => setShowCreateModal(true)}\n        >\n          Create Template\n        </Button>\n      </div>\n\n      {/* Search */}\n      <div className=\"p-4 border-b border-border\">\n        <div className=\"relative\">\n          <Icon\n            name=\"Search\"\n            size={16}\n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\"\n          />\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={e => setSearchTerm(e.target.value)}\n            placeholder=\"Search templates...\"\n            className=\"w-full pl-10 pr-4 py-2 bg-input border border-border rounded-lg text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring\"\n          />\n        </div>\n      </div>\n\n      {/* Categories */}\n      <div className=\"flex border-b border-border overflow-x-auto\">\n        {Object.entries(templateCategories).map(([key, category]) => (\n          <button\n            key={key}\n            onClick={() => setSelectedCategory(key)}\n            className={`flex items-center space-x-2 px-4 py-3 text-sm font-medium whitespace-nowrap transition-smooth ${\n              selectedCategory === key\n                ? 'bg-primary text-primary-foreground border-b-2 border-primary'\n                : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n            }`}\n          >\n            <Icon name={category.icon} size={16} />\n            <span>{category.name}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* Templates Grid */}\n      <div className=\"flex-1 overflow-y-auto p-4\">\n        {/* Recent Templates */}\n        {!searchTerm && (\n          <div className=\"mb-6\">\n            <h4 className=\"text-sm font-medium text-foreground mb-3 flex items-center space-x-2\">\n              <Icon name=\"Clock\" size={16} />\n              <span>Recently Used</span>\n            </h4>\n            <div className=\"grid grid-cols-1 gap-2\">\n              {recentTemplates.map(template => (\n                <div\n                  key={template.id}\n                  className=\"flex items-center justify-between p-3 bg-muted rounded-lg hover:bg-muted/80 transition-smooth cursor-pointer\"\n                  onClick={() => handleTemplateSelect(template)}\n                >\n                  <div>\n                    <span className=\"font-medium text-foreground\">{template.name}</span>\n                    <p className=\"text-xs text-muted-foreground\">Last used: {template.lastUsed}</p>\n                  </div>\n                  <Icon name=\"ChevronRight\" size={16} className=\"text-muted-foreground\" />\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Template Cards */}\n        <div className=\"space-y-4\">\n          {filteredTemplates().map(template => (\n            <div\n              key={template.id}\n              className=\"p-4 bg-background border border-border rounded-lg hover:border-primary/50 transition-smooth cursor-pointer group\"\n              onClick={() => handleTemplateSelect(template)}\n            >\n              <div className=\"flex items-start justify-between mb-3\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2 mb-1\">\n                    <h5 className=\"font-semibold text-foreground group-hover:text-primary transition-colors\">\n                      {template.name}\n                    </h5>\n                    <span\n                      className={`px-2 py-1 rounded-full text-xs font-medium ${getComplexityColor(template.complexity)}`}\n                    >\n                      {template.complexity}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground\">{template.description}</p>\n                </div>\n                <div className=\"flex items-center space-x-2 ml-4\">\n                  <div className=\"flex items-center space-x-1 text-xs text-muted-foreground\">\n                    <Icon name=\"Star\" size={12} />\n                    <span>{template.popularity}%</span>\n                  </div>\n                  <Icon\n                    name=\"ChevronRight\"\n                    size={16}\n                    className=\"text-muted-foreground group-hover:text-primary transition-colors\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex items-center justify-between mb-3\">\n                <div className=\"flex items-center space-x-4 text-xs text-muted-foreground\">\n                  <div className=\"flex items-center space-x-1\">\n                    <Icon name=\"Clock\" size={12} />\n                    <span>{template.timeToComplete}</span>\n                  </div>\n                  <div className=\"flex items-center space-x-1\">\n                    <Icon name=\"Calendar\" size={12} />\n                    <span>Last used: {template.lastUsed}</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex flex-wrap gap-2\">\n                {template.features.map((feature, index) => (\n                  <span\n                    key={index}\n                    className=\"px-2 py-1 bg-muted text-xs text-muted-foreground rounded\"\n                  >\n                    {feature}\n                  </span>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {filteredTemplates().length === 0 && (\n          <div className=\"text-center py-12\">\n            <Icon name=\"FileX\" size={48} className=\"text-muted-foreground mx-auto mb-4\" />\n            <h4 className=\"text-lg font-medium text-foreground mb-2\">No templates found</h4>\n            <p className=\"text-muted-foreground\">\n              {searchTerm\n                ? 'Try adjusting your search terms'\n                : 'No templates available in this category'}\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Create Template Modal */}\n      {showCreateModal && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n          <div className=\"bg-card border border-border rounded-lg shadow-elevation-2 w-full max-w-md mx-4\">\n            <div className=\"flex items-center justify-between p-4 border-b border-border\">\n              <h3 className=\"text-lg font-semibold text-foreground\">Create New Template</h3>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                iconName=\"X\"\n                onClick={() => setShowCreateModal(false)}\n              />\n            </div>\n            <div className=\"p-4 space-y-4\">\n              <div>\n                <label className=\"text-sm font-medium text-foreground mb-2 block\">\n                  Template Name\n                </label>\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter template name...\"\n                  className=\"w-full px-3 py-2 bg-input border border-border rounded-lg text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring\"\n                />\n              </div>\n              <div>\n                <label className=\"text-sm font-medium text-foreground mb-2 block\">\n                  Description\n                </label>\n                <textarea\n                  placeholder=\"Describe your template...\"\n                  rows={3}\n                  className=\"w-full px-3 py-2 bg-input border border-border rounded-lg text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring resize-none\"\n                />\n              </div>\n              <div>\n                <label className=\"text-sm font-medium text-foreground mb-2 block\">Category</label>\n                <select className=\"w-full px-3 py-2 bg-input border border-border rounded-lg text-foreground focus:outline-none focus:ring-2 focus:ring-ring\">\n                  <option value=\"valuation\">Valuation Models</option>\n                  <option value=\"lbo\">LBO Models</option>\n                  <option value=\"comps\">Comparable Analysis</option>\n                  <option value=\"merger\">M&A Models</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"flex items-center justify-end space-x-2 p-4 border-t border-border\">\n              <Button variant=\"outline\" size=\"sm\" onClick={() => setShowCreateModal(false)}>\n                Cancel\n              </Button>\n              <Button\n                variant=\"default\"\n                size=\"sm\"\n                onClick={() => {\n                  setShowCreateModal(false);\n                  if (onTemplateCreate) onTemplateCreate();\n                }}\n              >\n                Create Template\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ModelTemplates;\n","/**\n * Command Registry for FinanceAnalyst Pro Terminal\n * Manages all available commands with categorization and metadata\n */\n\nexport class CommandRegistry {\n  constructor() {\n    this.commands = new Map();\n    this.categories = new Map();\n    this.aliases = new Map();\n    this.initializeCategories();\n  }\n\n  /**\n   * Initialize command categories\n   */\n  initializeCategories() {\n    this.categories.set('CORE', {\n      name: 'Core Analysis',\n      description: 'Fundamental financial analysis commands',\n      icon: '📊',\n      commands: []\n    });\n\n    this.categories.set('PORTFOLIO', {\n      name: 'Portfolio & Risk',\n      description: 'Portfolio analysis and risk management',\n      icon: '🎯',\n      commands: []\n    });\n\n    this.categories.set('VALUATION', {\n      name: 'Advanced Valuation',\n      description: 'Sophisticated valuation models',\n      icon: '📈',\n      commands: []\n    });\n\n    this.categories.set('TECHNICAL', {\n      name: 'Technical Analysis',\n      description: 'Technical analysis and market intelligence',\n      icon: '📊',\n      commands: []\n    });\n\n    this.categories.set('FIXED_INCOME', {\n      name: 'Fixed Income & Derivatives',\n      description: 'Bond analysis and derivatives pricing',\n      icon: '🏦',\n      commands: []\n    });\n\n    this.categories.set('ESG', {\n      name: 'ESG & Alternative Data',\n      description: 'Environmental, social, governance metrics',\n      icon: '🌱',\n      commands: []\n    });\n\n    this.categories.set('AUTOMATION', {\n      name: 'Automation & Workflows',\n      description: 'Automated analysis and workflows',\n      icon: '🤖',\n      commands: []\n    });\n\n    this.categories.set('DATA', {\n      name: 'Data Management',\n      description: 'Data import, export, and management',\n      icon: '💾',\n      commands: []\n    });\n\n    this.categories.set('REPORTING', {\n      name: 'Reporting & Visualization',\n      description: 'Reports, charts, and visualizations',\n      icon: '📋',\n      commands: []\n    });\n\n    this.categories.set('SYSTEM', {\n      name: 'System & Performance',\n      description: 'System monitoring and configuration',\n      icon: '🔧',\n      commands: []\n    });\n\n    this.categories.set('ANALYTICS', {\n      name: 'Advanced Analytics',\n      description: 'Machine learning and advanced analytics',\n      icon: '💡',\n      commands: []\n    });\n\n    this.categories.set('MARKET_DATA', {\n      name: 'Market Data Extensions',\n      description: 'Extended market data and economic indicators',\n      icon: '🌐',\n      commands: []\n    });\n\n    this.categories.set('UTILITY', {\n      name: 'Utility Commands',\n      description: 'General utility and helper commands',\n      icon: '🛠️',\n      commands: []\n    });\n  }\n\n  /**\n   * Register a command\n   * @param {string} name - Command name\n   * @param {Object} handler - Command handler\n   * @param {Object} metadata - Command metadata\n   */\n  register(name, handler, metadata = {}) {\n    const commandName = name.toUpperCase();\n\n    const commandInfo = {\n      name: commandName,\n      handler,\n      category: metadata.category || 'UTILITY',\n      description: metadata.description || 'No description available',\n      usage: metadata.usage || `${commandName}()`,\n      examples: metadata.examples || [],\n      parameterSchema: metadata.parameterSchema || null,\n      aliases: metadata.aliases || [],\n      tags: metadata.tags || [],\n      version: metadata.version || '1.0.0',\n      deprecated: metadata.deprecated || false,\n      experimental: metadata.experimental || false\n    };\n\n    // Register main command\n    this.commands.set(commandName, commandInfo);\n\n    // Register aliases\n    if (metadata.aliases) {\n      metadata.aliases.forEach(alias => {\n        this.aliases.set(alias.toUpperCase(), commandName);\n      });\n    }\n\n    // Add to category\n    const category = this.categories.get(commandInfo.category);\n    if (category) {\n      category.commands.push(commandName);\n    }\n\n    return this;\n  }\n\n  /**\n   * Get command handler\n   * @param {string} name - Command name or alias\n   * @returns {Object|null} Command handler\n   */\n  getHandler(name) {\n    const commandName = name.toUpperCase();\n\n    // Check direct command\n    const command = this.commands.get(commandName);\n    if (command) {\n      return command.handler;\n    }\n\n    // Check aliases\n    const aliasTarget = this.aliases.get(commandName);\n    if (aliasTarget) {\n      const aliasCommand = this.commands.get(aliasTarget);\n      return aliasCommand ? aliasCommand.handler : null;\n    }\n\n    return null;\n  }\n\n  /**\n   * Get command info\n   * @param {string} name - Command name\n   * @returns {Object|null} Command information\n   */\n  getCommandInfo(name) {\n    const commandName = name.toUpperCase();\n\n    // Check direct command\n    const command = this.commands.get(commandName);\n    if (command) {\n      return command;\n    }\n\n    // Check aliases\n    const aliasTarget = this.aliases.get(commandName);\n    if (aliasTarget) {\n      return this.commands.get(aliasTarget);\n    }\n\n    return null;\n  }\n\n  /**\n   * Get all commands in a category\n   * @param {string} category - Category name\n   * @returns {Array} Commands in category\n   */\n  getCommandsByCategory(category) {\n    const categoryInfo = this.categories.get(category.toUpperCase());\n    if (!categoryInfo) return [];\n\n    return categoryInfo.commands.map(cmdName => this.commands.get(cmdName));\n  }\n\n  /**\n   * Get all command names\n   * @returns {Array} All command names\n   */\n  getAllCommands() {\n    return Array.from(this.commands.keys());\n  }\n\n  /**\n   * Get all categories\n   * @returns {Array} All categories\n   */\n  getAllCategories() {\n    return Array.from(this.categories.entries()).map(([key, value]) => ({\n      key,\n      ...value\n    }));\n  }\n\n  /**\n   * Search commands\n   * @param {string} query - Search query\n   * @returns {Array} Matching commands\n   */\n  searchCommands(query) {\n    const searchTerm = query.toLowerCase();\n    const results = [];\n\n    for (const [name, command] of this.commands) {\n      const score = this.calculateSearchScore(command, searchTerm);\n      if (score > 0) {\n        results.push({ ...command, score });\n      }\n    }\n\n    return results.sort((a, b) => b.score - a.score);\n  }\n\n  /**\n   * Calculate search relevance score\n   * @param {Object} command - Command object\n   * @param {string} searchTerm - Search term\n   * @returns {number} Relevance score\n   */\n  calculateSearchScore(command, searchTerm) {\n    let score = 0;\n\n    // Exact name match\n    if (command.name.toLowerCase() === searchTerm) {\n      score += 100;\n    }\n\n    // Name contains search term\n    if (command.name.toLowerCase().includes(searchTerm)) {\n      score += 50;\n    }\n\n    // Description contains search term\n    if (command.description.toLowerCase().includes(searchTerm)) {\n      score += 25;\n    }\n\n    // Tags contain search term\n    if (command.tags.some(tag => tag.toLowerCase().includes(searchTerm))) {\n      score += 15;\n    }\n\n    // Aliases contain search term\n    if (command.aliases.some(alias => alias.toLowerCase().includes(searchTerm))) {\n      score += 10;\n    }\n\n    return score;\n  }\n\n  /**\n   * Get command suggestions based on partial input\n   * @param {string} partial - Partial command input\n   * @returns {Array} Suggested commands\n   */\n  getSuggestions(partial) {\n    const partialLower = partial.toLowerCase();\n    const suggestions = [];\n\n    for (const [name, command] of this.commands) {\n      if (name.toLowerCase().startsWith(partialLower)) {\n        suggestions.push({\n          name: command.name,\n          description: command.description,\n          usage: command.usage,\n          category: command.category\n        });\n      }\n    }\n\n    return suggestions.sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  /**\n   * Validate command exists\n   * @param {string} name - Command name\n   * @returns {boolean} Whether command exists\n   */\n  hasCommand(name) {\n    const commandName = name.toUpperCase();\n    return this.commands.has(commandName) || this.aliases.has(commandName);\n  }\n\n  /**\n   * Get command count by category\n   * @returns {Object} Command counts by category\n   */\n  getCommandStats() {\n    const stats = {};\n\n    for (const [categoryKey, category] of this.categories) {\n      stats[categoryKey] = {\n        name: category.name,\n        count: category.commands.length,\n        icon: category.icon\n      };\n    }\n\n    return stats;\n  }\n}\n\n// Export singleton instance\nexport const commandRegistry = new CommandRegistry();\n","/**\n * Enhanced Command Processor for FinanceAnalyst Pro Terminal\n * Provides modular, extensible command processing with categorization\n */\n\nimport { commandRegistry } from './commandRegistry';\nimport { dataFetchingService } from './dataFetching';\nimport { persistenceManager } from './persistence/PersistenceManager';\n\nexport class CommandProcessor {\n  constructor() {\n    this.commandHistory = [];\n    this.variables = new Map();\n    this.settings = {\n      currency: 'USD',\n      precision: 2,\n      dateFormat: 'YYYY-MM-DD'\n    };\n    this.persistenceInitialized = false;\n    this.maxHistorySize = 1000;\n  }\n\n  /**\n   * Initialize persistence layer\n   */\n  async initializePersistence() {\n    if (this.persistenceInitialized) return;\n\n    try {\n      await persistenceManager.initialize();\n\n      // Load persisted data\n      await this.loadPersistedData();\n\n      this.persistenceInitialized = true;\n      console.log('✅ Command processor persistence initialized');\n    } catch (error) {\n      console.error('❌ Failed to initialize persistence:', error);\n      // Continue without persistence\n    }\n  }\n\n  /**\n   * Load persisted data\n   */\n  async loadPersistedData() {\n    try {\n      // Load command history\n      const history = await persistenceManager.retrieve('command_history');\n      if (history && Array.isArray(history)) {\n        this.commandHistory = history.slice(-this.maxHistorySize);\n      }\n\n      // Load variables\n      const variables = await persistenceManager.retrieve('user_variables');\n      if (variables && typeof variables === 'object') {\n        this.variables = new Map(Object.entries(variables));\n      }\n\n      // Load settings\n      const settings = await persistenceManager.retrieve('user_preferences');\n      if (settings && typeof settings === 'object') {\n        this.settings = { ...this.settings, ...settings };\n      }\n\n    } catch (error) {\n      console.error('Failed to load persisted data:', error);\n    }\n  }\n\n  /**\n   * Save data to persistence layer\n   */\n  async saveData() {\n    if (!this.persistenceInitialized) return;\n\n    try {\n      // Save command history\n      await persistenceManager.store('command_history', this.commandHistory, {\n        storage: 'indexedDB'\n      });\n\n      // Save variables\n      const variablesObj = Object.fromEntries(this.variables);\n      await persistenceManager.store('user_variables', variablesObj, {\n        storage: 'localStorage'\n      });\n\n      // Save settings\n      await persistenceManager.store('user_preferences', this.settings, {\n        storage: 'localStorage'\n      });\n\n    } catch (error) {\n      console.error('Failed to save data:', error);\n    }\n  }\n\n  /**\n   * Process a command input and return structured response\n   * @param {string} input - Raw command input\n   * @param {Object} context - Execution context\n   * @returns {Promise<Object>} Command response\n   */\n  async processCommand(input, context = {}) {\n    const startTime = Date.now();\n\n    try {\n      // Initialize persistence if not already done\n      if (!this.persistenceInitialized) {\n        await this.initializePersistence();\n      }\n\n      // Parse command\n      const parsedCommand = this.parseCommand(input);\n\n      // Add to history\n      const historyEntry = {\n        input,\n        timestamp: new Date(),\n        success: false,\n        ...parsedCommand\n      };\n      this.commandHistory.push(historyEntry);\n\n      // Trim history if too long\n      if (this.commandHistory.length > this.maxHistorySize) {\n        this.commandHistory = this.commandHistory.slice(-this.maxHistorySize);\n      }\n\n      // Get command handler\n      const handler = commandRegistry.getHandler(parsedCommand.command);\n\n      if (!handler) {\n        return this.createErrorResponse(`Unknown command: \"${parsedCommand.command}\"`, input);\n      }\n\n      // Validate parameters\n      const validationResult = this.validateParameters(handler, parsedCommand);\n      if (!validationResult.valid) {\n        return this.createErrorResponse(validationResult.error, input);\n      }\n\n      // Execute command\n      const result = await handler.execute(parsedCommand, context, this);\n\n      // Mark command as successful in history\n      historyEntry.success = result.type !== 'error';\n      historyEntry.executionTime = Date.now() - startTime;\n\n      // Add execution metadata\n      result.executionTime = Date.now() - startTime;\n      result.timestamp = new Date();\n\n      // Save data asynchronously (don't wait)\n      this.saveData().catch(error => {\n        console.error('Failed to save command processor data:', error);\n      });\n\n      return result;\n\n    } catch (error) {\n      return this.createErrorResponse(`Command execution failed: ${error.message}`, input);\n    }\n  }\n\n  /**\n   * Parse command input into structured format\n   * @param {string} input - Raw command input\n   * @returns {Object} Parsed command object\n   */\n  parseCommand(input) {\n    const trimmed = input.trim();\n\n    // Handle function-style commands: COMMAND(param1, param2)\n    const functionMatch = trimmed.match(/^([A-Z_]+)\\s*\\(\\s*([^)]*)\\s*\\)$/i);\n    if (functionMatch) {\n      const [, command, paramString] = functionMatch;\n      const parameters = this.parseParameters(paramString);\n      return {\n        command: command.toUpperCase(),\n        parameters,\n        rawInput: trimmed,\n        style: 'function'\n      };\n    }\n\n    // Handle space-separated commands: COMMAND param1 param2\n    const parts = trimmed.split(/\\s+/);\n    const command = parts[0].toUpperCase();\n    const parameters = parts.slice(1);\n\n    return {\n      command,\n      parameters,\n      rawInput: trimmed,\n      style: 'space-separated'\n    };\n  }\n\n  /**\n   * Parse function parameters from string\n   * @param {string} paramString - Parameter string\n   * @returns {Array} Parsed parameters\n   */\n  parseParameters(paramString) {\n    if (!paramString.trim()) return [];\n\n    const params = [];\n    let current = '';\n    let inQuotes = false;\n    let inBrackets = 0;\n    let quoteChar = '';\n\n    for (let i = 0; i < paramString.length; i++) {\n      const char = paramString[i];\n\n      if ((char === '\"' || char === \"'\") && !inQuotes) {\n        inQuotes = true;\n        quoteChar = char;\n      } else if (char === quoteChar && inQuotes) {\n        inQuotes = false;\n        quoteChar = '';\n      } else if (char === '[' && !inQuotes) {\n        inBrackets++;\n        current += char;\n      } else if (char === ']' && !inQuotes) {\n        inBrackets--;\n        current += char;\n      } else if (char === ',' && !inQuotes && inBrackets === 0) {\n        params.push(this.parseParameterValue(current.trim()));\n        current = '';\n        continue;\n      } else {\n        current += char;\n      }\n    }\n\n    if (current.trim()) {\n      params.push(this.parseParameterValue(current.trim()));\n    }\n\n    return params;\n  }\n\n  /**\n   * Parse individual parameter value\n   * @param {string} value - Parameter value string\n   * @returns {*} Parsed value\n   */\n  parseParameterValue(value) {\n    // Remove quotes\n    if ((value.startsWith('\"') && value.endsWith('\"')) ||\n        (value.startsWith(\"'\") && value.endsWith(\"'\"))) {\n      return value.slice(1, -1);\n    }\n\n    // Parse arrays\n    if (value.startsWith('[') && value.endsWith(']')) {\n      const arrayContent = value.slice(1, -1);\n      if (!arrayContent.trim()) return [];\n      return arrayContent.split(',').map(item => this.parseParameterValue(item.trim()));\n    }\n\n    // Parse numbers\n    if (/^-?\\d+\\.?\\d*$/.test(value)) {\n      return parseFloat(value);\n    }\n\n    // Parse booleans\n    if (value.toLowerCase() === 'true') return true;\n    if (value.toLowerCase() === 'false') return false;\n\n    // Return as string\n    return value;\n  }\n\n  /**\n   * Validate command parameters\n   * @param {Object} handler - Command handler\n   * @param {Object} parsedCommand - Parsed command\n   * @returns {Object} Validation result\n   */\n  validateParameters(handler, parsedCommand) {\n    if (!handler.parameterSchema) {\n      return { valid: true };\n    }\n\n    const { required = [], optional = [] } = handler.parameterSchema;\n    const { parameters } = parsedCommand;\n\n    // Check required parameters\n    if (parameters.length < required.length) {\n      return {\n        valid: false,\n        error: `Missing required parameters. Expected: ${required.join(', ')}`\n      };\n    }\n\n    // Check maximum parameters\n    const maxParams = required.length + optional.length;\n    if (parameters.length > maxParams) {\n      return {\n        valid: false,\n        error: `Too many parameters. Maximum: ${maxParams}`\n      };\n    }\n\n    return { valid: true };\n  }\n\n  /**\n   * Create error response\n   * @param {string} message - Error message\n   * @param {string} input - Original input\n   * @returns {Object} Error response\n   */\n  createErrorResponse(message, input) {\n    return {\n      type: 'error',\n      content: message,\n      suggestions: this.getSuggestions(input),\n      timestamp: new Date()\n    };\n  }\n\n  /**\n   * Get command suggestions for invalid input\n   * @param {string} input - Original input\n   * @returns {Array} Suggested commands\n   */\n  getSuggestions(input) {\n    const command = input.split(/[\\s(]/)[0].toUpperCase();\n    const allCommands = commandRegistry.getAllCommands();\n\n    return allCommands\n      .filter(cmd => cmd.includes(command.substring(0, 3)) ||\n                     cmd.toLowerCase().includes(command.toLowerCase()))\n      .slice(0, 5);\n  }\n\n  /**\n   * Get command history\n   * @param {number} limit - Number of recent commands\n   * @returns {Array} Command history\n   */\n  getHistory(limit = 10) {\n    return this.commandHistory.slice(-limit);\n  }\n\n  /**\n   * Clear command history\n   */\n  clearHistory() {\n    this.commandHistory = [];\n  }\n\n  /**\n   * Set variable value\n   * @param {string} name - Variable name\n   * @param {*} value - Variable value\n   */\n  setVariable(name, value) {\n    this.variables.set(name, value);\n\n    // Save variables asynchronously\n    if (this.persistenceInitialized) {\n      this.saveData().catch(error => {\n        console.error('Failed to save variables:', error);\n      });\n    }\n  }\n\n  /**\n   * Get variable value\n   * @param {string} name - Variable name\n   * @returns {*} Variable value\n   */\n  getVariable(name) {\n    return this.variables.get(name);\n  }\n\n  /**\n   * Get all variables\n   * @returns {Object} All variables\n   */\n  getAllVariables() {\n    return Object.fromEntries(this.variables);\n  }\n\n  /**\n   * Update settings\n   * @param {string} key - Setting key\n   * @param {*} value - Setting value\n   */\n  updateSetting(key, value) {\n    this.settings[key] = value;\n\n    // Save settings asynchronously\n    if (this.persistenceInitialized) {\n      this.saveData().catch(error => {\n        console.error('Failed to save settings:', error);\n      });\n    }\n  }\n\n  /**\n   * Get setting value\n   * @param {string} key - Setting key\n   * @returns {*} Setting value\n   */\n  getSetting(key) {\n    return this.settings[key];\n  }\n\n  /**\n   * Get all settings\n   * @returns {Object} All settings\n   */\n  getAllSettings() {\n    return { ...this.settings };\n  }\n}\n\n// Export singleton instance\nexport const commandProcessor = new CommandProcessor();\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport { commandProcessor } from '../../../services/commandProcessor';\nimport { commandRegistry } from '../../../services/commandRegistry';\nimport { dataFetchingService } from '../../../services/dataFetching';\nimport { persistenceManager } from '../../../services/persistence/PersistenceManager';\nimport {\n  calculateDCFValuation,\n  calculateLBOReturns,\n  calculateComparableMetrics,\n  formatCurrency,\n  formatPercentage,\n  formatNumber\n} from '../../../utils/dataTransformation';\n// Import command initializer to ensure commands are registered\nimport '../../../services/commandInitializer';\n\nconst TerminalInterface = ({ onCommandExecute, calculationResults }) => {\n  const [commands, setCommands] = useState([\n    {\n      id: 1,\n      type: 'system',\n      content: 'FinanceAnalyst Pro Terminal v2.4.0 - Enhanced Command Suite Ready',\n      timestamp: new Date()\n    },\n    {\n      id: 2,\n      type: 'system',\n      content:\n        'Type \"HELP()\" for available commands or start with DCF(AAPL), PORTFOLIO([AAPL,MSFT], [0.5,0.5])',\n      timestamp: new Date()\n    }\n  ]);\n  const [currentInput, setCurrentInput] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [selectedSuggestion, setSelectedSuggestion] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const terminalRef = useRef(null);\n  const inputRef = useRef(null);\n  const commandProcessorRef = useRef(commandProcessor);\n\n  // Get available commands from registry for suggestions\n  const getAvailableCommands = () => {\n    const allCommands = commandRegistry.getAllCommands();\n    const commandInfos = allCommands.map(cmdName => {\n      const info = commandRegistry.getCommandInfo(cmdName);\n      return info ? info.usage : cmdName;\n    });\n    return commandInfos;\n  };\n\n  useEffect(() => {\n    if (terminalRef.current) {\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n    }\n  }, [commands]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n\n    // Initialize persistence layer\n    const initializePersistence = async() => {\n      try {\n        await persistenceManager.initialize();\n        console.log('✅ Persistence layer initialized in terminal');\n      } catch (error) {\n        console.error('❌ Failed to initialize persistence in terminal:', error);\n      }\n    };\n\n    initializePersistence();\n  }, []);\n\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setCurrentInput(value);\n\n    if (value.length > 0) {\n      const availableCommands = getAvailableCommands();\n      const suggestions = commandRegistry.getSuggestions(value);\n      const commandSuggestions = suggestions.map(s => s.usage);\n\n      // Also include partial matches from available commands\n      const partialMatches = availableCommands.filter(cmd =>\n        cmd.toLowerCase().includes(value.toLowerCase()) &&\n        !commandSuggestions.includes(cmd)\n      );\n\n      const allSuggestions = [...commandSuggestions, ...partialMatches];\n      setSuggestions(allSuggestions.slice(0, 8));\n      setShowSuggestions(allSuggestions.length > 0);\n      setSelectedSuggestion(0);\n    } else {\n      setShowSuggestions(false);\n    }\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      executeCommand();\n    } else if (e.key === 'ArrowUp' && showSuggestions) {\n      e.preventDefault();\n      setSelectedSuggestion(prev => Math.max(0, prev - 1));\n    } else if (e.key === 'ArrowDown' && showSuggestions) {\n      e.preventDefault();\n      setSelectedSuggestion(prev => Math.min(suggestions.length - 1, prev + 1));\n    } else if (e.key === 'Tab' && showSuggestions) {\n      e.preventDefault();\n      setCurrentInput(suggestions[selectedSuggestion]);\n      setShowSuggestions(false);\n    } else if (e.key === 'Escape') {\n      setShowSuggestions(false);\n    }\n  };\n\n  const executeCommand = async() => {\n    if (!currentInput.trim()) return;\n\n    const newCommand = {\n      id: commands.length + 1,\n      type: 'user',\n      content: currentInput,\n      timestamp: new Date()\n    };\n\n    setCommands(prev => [...prev, newCommand]);\n    setIsLoading(true);\n    setCurrentInput('');\n    setShowSuggestions(false);\n\n    try {\n      // Use the new command processor\n      const context = {\n        demoMode: dataFetchingService.demoMode,\n        showLoading: (message) => {\n          const loadingCommand = {\n            id: commands.length + 2,\n            type: 'info',\n            content: message,\n            timestamp: new Date()\n          };\n          setCommands(prev => [...prev, loadingCommand]);\n        }\n      };\n\n      const response = await commandProcessorRef.current.processCommand(currentInput, context);\n\n      // Handle special actions\n      if (response.action === 'clear') {\n        setCommands([\n          {\n            id: 1,\n            type: 'system',\n            content: 'Terminal cleared',\n            timestamp: new Date()\n          }\n        ]);\n        return;\n      }\n\n      const responseCommand = {\n        id: commands.length + 2,\n        type: response.type,\n        content: response.content,\n        timestamp: new Date(),\n        data: response.data\n      };\n\n      setCommands(prev => [...prev, responseCommand]);\n\n      if (onCommandExecute) {\n        onCommandExecute(currentInput, response);\n      }\n    } catch (error) {\n      const errorCommand = {\n        id: commands.length + 2,\n        type: 'error',\n        content: `Error: ${error.message}`,\n        timestamp: new Date()\n      };\n      setCommands(prev => [...prev, errorCommand]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectSuggestion = suggestion => {\n    setCurrentInput(suggestion);\n    setShowSuggestions(false);\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-gray-900 text-green-400 font-mono text-sm\">\n      {/* Terminal Header */}\n      <div className=\"flex items-center justify-between px-4 py-2 bg-gray-800 border-b border-gray-700\">\n        <div className=\"flex items-center space-x-2\">\n          <Icon name=\"Terminal\" size={16} className=\"text-green-400\" />\n          <span className=\"text-green-400 font-medium\">Financial Terminal</span>\n          <span className=\"text-xs text-blue-400\">• Enhanced Command Suite</span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div\n            className={`w-2 h-2 rounded-full ${isLoading ? 'bg-yellow-400 animate-pulse' : 'bg-green-400'}`}\n          />\n          <span className=\"text-xs text-gray-400\">{isLoading ? 'Processing...' : 'Connected'}</span>\n        </div>\n      </div>\n\n      {/* Terminal Content */}\n      <div\n        ref={terminalRef}\n        className=\"flex-1 overflow-y-auto p-4 space-y-2\"\n        onClick={() => inputRef.current?.focus()}\n      >\n        {commands.map(command => (\n          <div key={command.id} className=\"space-y-1\">\n            <div className=\"flex items-start space-x-2\">\n              {command.type === 'user' && (\n                <span className=\"text-blue-400 shrink-0\">analyst@finpro:~$</span>\n              )}\n              {command.type === 'system' && (\n                <Icon name=\"Info\" size={14} className=\"text-yellow-400 mt-0.5 shrink-0\" />\n              )}\n              {command.type === 'success' && (\n                <Icon name=\"CheckCircle\" size={14} className=\"text-green-400 mt-0.5 shrink-0\" />\n              )}\n              {command.type === 'error' && (\n                <Icon name=\"XCircle\" size={14} className=\"text-red-400 mt-0.5 shrink-0\" />\n              )}\n              {command.type === 'warning' && (\n                <Icon name=\"AlertTriangle\" size={14} className=\"text-yellow-400 mt-0.5 shrink-0\" />\n              )}\n              {command.type === 'info' && (\n                <Icon name=\"Info\" size={14} className=\"text-blue-400 mt-0.5 shrink-0\" />\n              )}\n              <div className=\"flex-1\">\n                <pre className=\"whitespace-pre-wrap break-words\">{command.content}</pre>\n                {command.data && (\n                  <div className=\"mt-2 p-2 bg-gray-800 rounded border border-gray-700\">\n                    <div className=\"text-xs text-gray-400\">\n                      Real-time calculation data available • Analysis:{' '}\n                      {command.data.analysis || 'financial'}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n\n        {/* Loading indicator */}\n        {isLoading && (\n          <div className=\"flex items-center space-x-2 text-yellow-400\">\n            <div className=\"animate-spin w-4 h-4 border-2 border-yellow-400 border-t-transparent rounded-full\" />\n            <span>Processing command...</span>\n          </div>\n        )}\n\n        {/* Input Line */}\n        <div className=\"flex items-center space-x-2 relative\">\n          <span className=\"text-blue-400 shrink-0\">analyst@finpro:~$</span>\n          <div className=\"flex-1 relative\">\n            <input\n              ref={inputRef}\n              type=\"text\"\n              value={currentInput}\n              onChange={handleInputChange}\n              onKeyDown={handleKeyDown}\n              className=\"w-full bg-transparent text-green-400 outline-none border-none\"\n              placeholder=\"Enter command (e.g., DCF(AAPL), PORTFOLIO([AAPL,MSFT], [0.5,0.5]))...\"\n              autoComplete=\"off\"\n              disabled={isLoading}\n            />\n\n            {/* Suggestions Dropdown */}\n            {showSuggestions && (\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-gray-800 border border-gray-600 rounded-md shadow-lg z-10 max-h-48 overflow-y-auto\">\n                {suggestions.map((suggestion, index) => (\n                  <div\n                    key={index}\n                    className={`px-3 py-2 cursor-pointer text-sm ${\n                      index === selectedSuggestion\n                        ? 'bg-gray-700 text-green-400'\n                        : 'text-gray-300 hover:bg-gray-700'\n                    }`}\n                    onClick={() => selectSuggestion(suggestion)}\n                  >\n                    {suggestion}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TerminalInterface;\n","import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst VariableInputs = ({ onVariableChange, onBulkEdit }) => {\n  const [activeSection, setActiveSection] = useState('assumptions');\n  const [editMode, setEditMode] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const [variables, setVariables] = useState({\n    assumptions: {\n      revenue_growth: {\n        value: 0.052,\n        unit: '%',\n        description: 'Annual revenue growth rate',\n        category: 'Growth'\n      },\n      ebitda_margin: {\n        value: 0.235,\n        unit: '%',\n        description: 'EBITDA as % of revenue',\n        category: 'Profitability'\n      },\n      tax_rate: { value: 0.25, unit: '%', description: 'Corporate tax rate', category: 'Tax' },\n      capex_revenue: {\n        value: 0.035,\n        unit: '%',\n        description: 'CapEx as % of revenue',\n        category: 'Investment'\n      },\n      working_capital_revenue: {\n        value: 0.02,\n        unit: '%',\n        description: 'Working capital as % of revenue',\n        category: 'Working Capital'\n      },\n      terminal_growth: {\n        value: 0.025,\n        unit: '%',\n        description: 'Long-term growth rate',\n        category: 'Terminal'\n      }\n    },\n    cost_of_capital: {\n      risk_free_rate: {\n        value: 0.032,\n        unit: '%',\n        description: 'Risk-free rate (10Y Treasury)',\n        category: 'Market'\n      },\n      market_premium: {\n        value: 0.065,\n        unit: '%',\n        description: 'Equity risk premium',\n        category: 'Market'\n      },\n      beta: { value: 1.15, unit: 'x', description: 'Asset beta coefficient', category: 'Risk' },\n      cost_of_debt: {\n        value: 0.045,\n        unit: '%',\n        description: 'Pre-tax cost of debt',\n        category: 'Debt'\n      },\n      debt_equity_ratio: {\n        value: 0.4,\n        unit: 'x',\n        description: 'Target debt-to-equity ratio',\n        category: 'Capital Structure'\n      }\n    },\n    market_data: {\n      current_share_price: {\n        value: 125.5,\n        unit: '$',\n        description: 'Current trading price',\n        category: 'Market'\n      },\n      shares_outstanding: {\n        value: 20.0,\n        unit: 'M',\n        description: 'Shares outstanding',\n        category: 'Equity'\n      },\n      market_cap: {\n        value: 2510,\n        unit: '$M',\n        description: 'Current market capitalization',\n        category: 'Valuation'\n      },\n      enterprise_value: {\n        value: 2810,\n        unit: '$M',\n        description: 'Current enterprise value',\n        category: 'Valuation'\n      },\n      net_debt: { value: 300, unit: '$M', description: 'Net debt position', category: 'Debt' }\n    }\n  });\n\n  const sections = [\n    { id: 'assumptions', label: 'Key Assumptions', icon: 'Settings' },\n    { id: 'cost_of_capital', label: 'Cost of Capital', icon: 'Percent' },\n    { id: 'market_data', label: 'Market Data', icon: 'TrendingUp' }\n  ];\n\n  const handleVariableChange = (section, key, newValue) => {\n    const updatedVariables = {\n      ...variables,\n      [section]: {\n        ...variables[section],\n        [key]: {\n          ...variables[section][key],\n          value: parseFloat(newValue) || 0\n        }\n      }\n    };\n    setVariables(updatedVariables);\n\n    if (onVariableChange) {\n      onVariableChange(section, key, newValue);\n    }\n  };\n\n  const formatValue = (value, unit) => {\n    if (unit === '%') {\n      return (value * 100).toFixed(1);\n    } else if (unit === '$' || unit === '$M') {\n      return value.toFixed(2);\n    } else {\n      return value.toFixed(3);\n    }\n  };\n\n  const getVariablesByCategory = sectionData => {\n    const categories = {};\n    Object.entries(sectionData).forEach(([key, variable]) => {\n      const category = variable.category || 'Other';\n      if (!categories[category]) {\n        categories[category] = [];\n      }\n      categories[category].push({ key, ...variable });\n    });\n    return categories;\n  };\n\n  const filteredVariables = sectionData => {\n    if (!searchTerm) return sectionData;\n\n    const filtered = {};\n    Object.entries(sectionData).forEach(([key, variable]) => {\n      if (\n        key.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        variable.description.toLowerCase().includes(searchTerm.toLowerCase())\n      ) {\n        filtered[key] = variable;\n      }\n    });\n    return filtered;\n  };\n\n  const resetToDefaults = () => {\n    // Reset to default values\n    const defaultVariables = { ...variables };\n    // This would typically reset to saved defaults\n    setVariables(defaultVariables);\n  };\n\n  const exportVariables = () => {\n    const exportData = JSON.stringify(variables, null, 2);\n    const blob = new Blob([exportData], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'model_variables.json';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-card\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-border\">\n        <div className=\"flex items-center space-x-2\">\n          <Icon name=\"Sliders\" size={20} className=\"text-primary\" />\n          <h3 className=\"text-lg font-semibold text-foreground\">Variable Inputs</h3>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            iconName={editMode ? 'Check' : 'Edit'}\n            onClick={() => setEditMode(!editMode)}\n          >\n            {editMode ? 'Done' : 'Edit'}\n          </Button>\n          <Button\n            variant=\"outline\" size=\"sm\" iconName=\"Download\"\n            onClick={exportVariables}\n          >\n            Export\n          </Button>\n        </div>\n      </div>\n\n      {/* Search */}\n      <div className=\"p-4 border-b border-border\">\n        <div className=\"relative\">\n          <Icon\n            name=\"Search\"\n            size={16}\n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\"\n          />\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={e => setSearchTerm(e.target.value)}\n            placeholder=\"Search variables...\"\n            className=\"w-full pl-10 pr-4 py-2 bg-input border border-border rounded-lg text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring\"\n          />\n        </div>\n      </div>\n\n      {/* Section Tabs */}\n      <div className=\"flex border-b border-border overflow-x-auto\">\n        {sections.map(section => (\n          <button\n            key={section.id}\n            onClick={() => setActiveSection(section.id)}\n            className={`flex items-center space-x-2 px-4 py-3 text-sm font-medium whitespace-nowrap transition-smooth ${\n              activeSection === section.id\n                ? 'bg-primary text-primary-foreground border-b-2 border-primary'\n                : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n            }`}\n          >\n            <Icon name={section.icon} size={16} />\n            <span>{section.label}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* Variables Content */}\n      <div className=\"flex-1 overflow-y-auto p-4\">\n        {Object.entries(getVariablesByCategory(filteredVariables(variables[activeSection]))).map(\n          ([category, categoryVariables]) => (\n            <div key={category} className=\"mb-6\">\n              <h4 className=\"text-sm font-medium text-foreground mb-3 flex items-center space-x-2\">\n                <Icon name=\"Folder\" size={16} />\n                <span>{category}</span>\n              </h4>\n              <div className=\"space-y-3\">\n                {categoryVariables.map(variable => (\n                  <div\n                    key={variable.key}\n                    className=\"p-3 bg-background border border-border rounded-lg\"\n                  >\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className=\"flex-1\">\n                        <label className=\"text-sm font-medium text-foreground capitalize\">\n                          {variable.key.replace(/_/g, ' ')}\n                        </label>\n                        <p className=\"text-xs text-muted-foreground\">{variable.description}</p>\n                      </div>\n                      <div className=\"flex items-center space-x-2 ml-4\">\n                        {editMode ? (\n                          <div className=\"flex items-center space-x-1\">\n                            <input\n                              type=\"number\"\n                              value={formatValue(variable.value, variable.unit)}\n                              onChange={e =>\n                                handleVariableChange(activeSection, variable.key, e.target.value)\n                              }\n                              step={variable.unit === '%' ? '0.1' : '0.01'}\n                              className=\"w-20 px-2 py-1 text-sm bg-input border border-border rounded text-foreground focus:outline-none focus:ring-1 focus:ring-ring\"\n                            />\n                            <span className=\"text-sm text-muted-foreground\">{variable.unit}</span>\n                          </div>\n                        ) : (\n                          <div className=\"text-right\">\n                            <span className=\"text-lg font-semibold text-foreground\">\n                              {formatValue(variable.value, variable.unit)}\n                            </span>\n                            <span className=\"text-sm text-muted-foreground ml-1\">\n                              {variable.unit}\n                            </span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n\n                    {/* Variable Impact Indicator */}\n                    <div className=\"flex items-center justify-between text-xs\">\n                      <div className=\"flex items-center space-x-2\">\n                        <div className=\"w-2 h-2 bg-success rounded-full\" />\n                        <span className=\"text-muted-foreground\">Within range</span>\n                      </div>\n                      <div className=\"flex items-center space-x-1 text-muted-foreground\">\n                        <Icon name=\"TrendingUp\" size={12} />\n                        <span>High impact</span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )\n        )}\n\n        {Object.keys(filteredVariables(variables[activeSection])).length === 0 && (\n          <div className=\"text-center py-12\">\n            <Icon name=\"Search\" size={48} className=\"text-muted-foreground mx-auto mb-4\" />\n            <h4 className=\"text-lg font-medium text-foreground mb-2\">No variables found</h4>\n            <p className=\"text-muted-foreground\">Try adjusting your search terms</p>\n          </div>\n        )}\n      </div>\n\n      {/* Footer Actions */}\n      <div className=\"p-4 border-t border-border bg-muted/50\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\n            <Icon name=\"Info\" size={12} />\n            <span>Changes auto-save every 30 seconds</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              variant=\"outline\" size=\"sm\" iconName=\"RotateCcw\"\n              onClick={resetToDefaults}\n            >\n              Reset\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              iconName=\"Grid\"\n              onClick={() => onBulkEdit && onBulkEdit()}\n            >\n              Bulk Edit\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VariableInputs;\n","import { useCallback, useEffect, useRef, useState } from 'react';\n\nimport Icon from '../../components/AppIcon';\nimport SEOHead from '../../components/SEO/SEOHead';\nimport Breadcrumbs from '../../components/ui/Breadcrumbs';\nimport Button from '../../components/ui/Button';\nimport Header from '../../components/ui/Header';\nimport { persistenceManager } from '../../services/persistence/PersistenceManager';\n\nimport AuditTrail from './components/AuditTrail';\nimport CalculationResults from './components/CalculationResults';\nimport FormulaBuilder from './components/FormulaBuilder';\nimport ModelTemplates from './components/ModelTemplates';\nimport TerminalInterface from './components/TerminalInterface';\nimport VariableInputs from './components/VariableInputs';\n\nconst FinancialModelWorkspace = () => {\n  const [activeLayout, setActiveLayout] = useState('dual-pane');\n  const [leftPanelContent, setLeftPanelContent] = useState('terminal');\n  const [rightPanelContent, setRightPanelContent] = useState('results');\n  const [leftWidthPct, setLeftWidthPct] = useState(50);\n  const [isDragging, setIsDragging] = useState(false);\n  const containerRef = useRef(null);\n  const gutterRef = useRef(null);\n\n  const [modelState] = useState({\n    name: 'DCF_Analysis_v2.3',\n    saved: true,\n    calculating: false,\n    lastSaved: new Date()\n  });\n\n  const [calculationResults, setCalculationResults] = useState(null);\n\n  const handleCommandExecute = (command, result) => {\n    setCalculationResults(result);\n  };\n\n  const renderLeftPanel = () => {\n    switch (leftPanelContent) {\n      case 'terminal':\n        return (\n          <TerminalInterface\n            onCommandExecute={handleCommandExecute}\n            calculationResults={calculationResults}\n          />\n        );\n      case 'variables':\n        return <VariableInputs />;\n      case 'formulas':\n        return <FormulaBuilder />;\n      case 'templates':\n        return <ModelTemplates />;\n      default:\n        return (\n          <TerminalInterface\n            onCommandExecute={handleCommandExecute}\n            calculationResults={calculationResults}\n          />\n        );\n    }\n  };\n\n  const renderRightPanel = () => {\n    switch (rightPanelContent) {\n      case 'results':\n        return <CalculationResults results={calculationResults} />;\n      case 'audit':\n        return <AuditTrail />;\n      default:\n        return <CalculationResults results={calculationResults} />;\n    }\n  };\n\n  // --- Persistence: hydrate on mount ---\n  useEffect(() => {\n    let mounted = true;\n\n    async function hydrate() {\n      try {\n        const ui = await persistenceManager.retrieve('ui_state', { storage: 'localStorage' });\n        if (mounted && ui) {\n          if (ui.workspace?.layout) setActiveLayout(ui.workspace.layout);\n          if (typeof ui.workspace?.leftWidthPct === 'number') setLeftWidthPct(ui.workspace.leftWidthPct);\n          if (ui.workspace?.leftPanelContent) setLeftPanelContent(ui.workspace.leftPanelContent);\n          if (ui.workspace?.rightPanelContent) setRightPanelContent(ui.workspace.rightPanelContent);\n        }\n      } catch (e) {\n        console.warn('UI state hydrate skipped:', e);\n      }\n    }\n\n    hydrate();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  // --- Persistence: store when relevant state changes (debounced) ---\n  useEffect(() => {\n    const id = setTimeout(() => {\n      const ui = {\n        workspace: {\n          layout: activeLayout,\n          leftWidthPct,\n          leftPanelContent,\n          rightPanelContent\n        }\n      };\n      persistenceManager.store('ui_state', ui, { storage: 'localStorage' });\n    }, 250);\n    return () => clearTimeout(id);\n  }, [activeLayout, leftPanelContent, rightPanelContent, leftWidthPct]);\n\n  // --- Drag handlers for resizable split ---\n  const onMouseMove = useCallback((e) => {\n    if (!isDragging || !containerRef.current) return;\n    const rect = containerRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left; // px from left inside container\n    const pct = Math.max(20, Math.min(80, (x / rect.width) * 100));\n    setLeftWidthPct(pct);\n  }, [isDragging]);\n\n  const snap = (pct) => {\n    const points = [30, 50, 70];\n    let closest = points[0];\n    let minDiff = Math.abs(pct - points[0]);\n    for (let i = 1; i < points.length; i++) {\n      const d = Math.abs(pct - points[i]);\n      if (d < minDiff) {\n        minDiff = d;\n        closest = points[i];\n      }\n    }\n    return closest;\n  };\n\n  const onMouseUp = useCallback((e) => {\n    if (!isDragging) return;\n    setIsDragging(false);\n    // Snap unless Alt is held for fine control\n    setLeftWidthPct(prev => (e.altKey ? prev : snap(prev)));\n    window.removeEventListener('mousemove', onMouseMove);\n    window.removeEventListener('mouseup', onMouseUp);\n  }, [isDragging, onMouseMove]);\n\n  const onMouseDown = useCallback(() => {\n    setIsDragging(true);\n    window.addEventListener('mousemove', onMouseMove);\n    window.addEventListener('mouseup', onMouseUp);\n  }, [onMouseMove, onMouseUp]);\n\n  const onGutterDoubleClick = useCallback(() => {\n    setLeftWidthPct(50);\n  }, []);\n\n  // Keyboard shortcuts: resize and toggle layout\n  useEffect(() => {\n    const handler = (e) => {\n      // Alt+Arrow to resize\n      if (e.altKey && (e.key === 'ArrowLeft' || e.key === 'ArrowRight')) {\n        e.preventDefault();\n        const delta = e.shiftKey ? 10 : 2;\n        setLeftWidthPct(prev => {\n          const next = e.key === 'ArrowLeft' ? prev - delta : prev + delta;\n          return Math.max(20, Math.min(80, next));\n        });\n      }\n      // Ctrl+Shift+D toggles single/dual\n      if ((e.ctrlKey || e.metaKey) && e.shiftKey && (e.key.toLowerCase() === 'd')) {\n        e.preventDefault();\n        setActiveLayout(prev => prev === 'dual-pane' ? 'single-pane' : 'dual-pane');\n      }\n      // Ctrl+1 / Ctrl+2 focus left/right pane\n      if ((e.ctrlKey || e.metaKey) && !e.shiftKey && (e.key === '1' || e.key === '2')) {\n        e.preventDefault();\n        if (e.key === '1') {\n          containerRef.current?.querySelector('[data-pane=\"left\"]').focus();\n        } else if (e.key === '2') {\n          containerRef.current?.querySelector('[data-pane=\"right\"]').focus();\n        }\n      }\n    };\n    window.addEventListener('keydown', handler);\n    return () => window.removeEventListener('keydown', handler);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white\">\n      <SEOHead\n        title=\"Financial Model Workspace | Valor-IVX\"\n        description=\"Professional financial modeling workspace with advanced DCF analysis, LBO tools, and real-time collaboration features for finance professionals.\"\n        canonical=\"/\"\n        keywords=\"financial modeling, DCF analysis, LBO modeling, financial workspace, valuation tools, Excel alternative\"\n      />\n      <Header />\n\n      {/* Main Workspace */}\n      <main id=\"main-content\" className=\"flex flex-col h-screen pt-16\" role=\"main\">\n        {/* Breadcrumbs and accessible page heading */}\n        <div className=\"px-4 py-2 bg-gray-900 border-b border-gray-800\">\n          <h1 className=\"sr-only\">Financial Model Workspace</h1>\n          <Breadcrumbs />\n        </div>\n        {/* Toolbar */}\n        <div className=\"bg-gray-800 border-b border-gray-700 px-4 py-2 flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Icon name=\"FileText\" className=\"w-5 h-5 text-blue-400\" />\n              <span className=\"font-medium\">{modelState.name}</span>\n              <span\n                className={`text-xs px-2 py-1 rounded ${\n                  modelState.saved ? 'bg-green-900 text-green-300' : 'bg-yellow-900 text-yellow-300'\n                }`}\n              >\n                {modelState.saved ? 'Saved' : 'Unsaved'}\n              </span>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            {/* Layout Controls */}\n            <div className=\"flex items-center space-x-1 bg-gray-700 rounded-lg p-1\">\n              <Button\n                variant={activeLayout === 'single-pane' ? 'primary' : 'ghost'}\n                size=\"sm\"\n                onClick={() => setActiveLayout('single-pane')}\n                aria-label=\"Single-pane layout\"\n              >\n                <Icon name=\"Square\" className=\"w-4 h-4\" />\n              </Button>\n              <Button\n                variant={activeLayout === 'dual-pane' ? 'primary' : 'ghost'}\n                size=\"sm\"\n                onClick={() => setActiveLayout('dual-pane')}\n                aria-label=\"Dual-pane layout\"\n              >\n                <Icon name=\"Columns\" className=\"w-4 h-4\" />\n              </Button>\n            </div>\n\n            {/* Panel Controls */}\n            <div className=\"flex items-center space-x-1\">\n              <select\n                value={leftPanelContent}\n                onChange={(e) => setLeftPanelContent(e.target.value)}\n                className=\"bg-gray-700 border border-gray-600 rounded px-2 py-1 text-sm\"\n                aria-label=\"Select left panel content\"\n              >\n                <option value=\"terminal\">Terminal</option>\n                <option value=\"variables\">Variables</option>\n                <option value=\"formulas\">Formulas</option>\n                <option value=\"templates\">Templates</option>\n              </select>\n\n              {activeLayout === 'dual-pane' && (\n                <select\n                  value={rightPanelContent}\n                  onChange={(e) => setRightPanelContent(e.target.value)}\n                  className=\"bg-gray-700 border border-gray-600 rounded px-2 py-1 text-sm\"\n                  aria-label=\"Select right panel content\"\n                >\n                  <option value=\"results\">Results</option>\n                  <option value=\"audit\">Audit Trail</option>\n                </select>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Content Area */}\n        <div\n          ref={containerRef}\n          className={`flex-1 flex overflow-hidden ${isDragging ? 'select-none' : ''}`}\n        >\n          {/* Left Panel */}\n          <div\n            data-pane=\"left\"\n            tabIndex={0}\n            className=\"border-r border-gray-700 overflow-hidden focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            style={{ flexBasis: activeLayout === 'dual-pane' ? `${leftWidthPct}%` : '100%' }}\n            aria-label=\"Left panel\"\n          >\n            {renderLeftPanel()}\n          </div>\n\n          {/* Gutter (only in dual-pane) */}\n          {activeLayout === 'dual-pane' && (\n            <div\n              ref={gutterRef}\n              role=\"separator\"\n              aria-orientation=\"vertical\"\n              aria-valuemin={20}\n              aria-valuemax={80}\n              aria-valuenow={Math.round(leftWidthPct)}\n              tabIndex={0}\n              onMouseDown={onMouseDown}\n              onDoubleClick={onGutterDoubleClick}\n              className={`w-1.5 bg-gray-800 hover:bg-gray-700 cursor-col-resize ${isDragging ? 'bg-blue-700' : ''}`}\n              title=\"Drag to resize • Double‑click to reset • Alt+←/→ fine resize • Shift accelerates\"\n            />\n          )}\n\n          {/* Right Panel */}\n          {activeLayout === 'dual-pane' && (\n            <div\n              data-pane=\"right\"\n              tabIndex={0}\n              className=\"overflow-hidden focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              style={{ flexBasis: `${100 - leftWidthPct}%` }}\n              aria-label=\"Right panel\"\n            >\n              {renderRightPanel()}\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default FinancialModelWorkspace;\n"],"names":["AuditTrail","calculations","errors","warnings","activeTab","setActiveTab","useState","expandedItems","setExpandedItems","Set","mockAuditData","id","timestamp","Date","now","type","operation","formula","result","inputs","FCFF_2024","FCFF_2025","FCFF_2026","FCFF_2027","FCFF_2028","WACC","executionTime","status","cost_equity","cost_debt","tax_rate","debt_ratio","FCF_final","terminal_growth","severity","message","location","suggestion","resolved","acknowledged","validations","check","details","tabs","label","icon","count","length","getStatusIcon","color","getSeverityColor","jsxs","className","children","jsx","Icon","name","size","Button","variant","iconName","map","tab","onClick","calc","toLocaleTimeString","time","toFixed","has","newExpanded","delete","add","toggleExpanded","Object","entries","key","value","error","toLocaleString","warning","validation","CalculationResults","results","onExport","mockResults","summary","enterpriseValue","equityValue","sharePrice","impliedReturn","confidence","cashFlows","year","revenue","ebitda","fcf","pv","sensitivity","wacc","growth","matrix","scenarios","probability","irr","multiples","metric","current","peer_avg","premium","formatCurrency","decimals","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercent","width","cf","index","rowIndex","colIndex","Math","abs","scenario","multiple","FormulaBuilder","onFormulaCreate","variables","selectedCategory","setSelectedCategory","draggedFunction","setDraggedFunction","currentFormula","setCurrentFormula","formulaName","setFormulaName","isBuilding","setIsBuilding","dropZoneRef","useRef","functionCategories","valuation","functions","syntax","description","financial","statistical","mathematical","validateFormula","match","category","func","draggable","onDragStart","e","dataTransfer","effectAllowed","handleDragStart","newFormula","addFunction","onChange","target","placeholder","ref","onDragOver","preventDefault","dropEffect","onDrop","disabled","ModelTemplates","onTemplateSelect","onTemplateCreate","searchTerm","setSearchTerm","showCreateModal","setShowCreateModal","templateCategories","templates","complexity","timeToComplete","lastUsed","popularity","features","lbo","comps","merger","getComplexityColor","filteredTemplates","filter","template","toLowerCase","includes","handleTemplateSelect","feature","rows","commandRegistry","constructor","this","commands","Map","categories","aliases","initializeCategories","set","register","handler","metadata","commandName","toUpperCase","commandInfo","usage","examples","parameterSchema","tags","version","deprecated","experimental","forEach","alias","get","push","getHandler","command","aliasTarget","aliasCommand","getCommandInfo","getCommandsByCategory","categoryInfo","cmdName","getAllCommands","Array","from","keys","getAllCategories","searchCommands","query","score","calculateSearchScore","sort","a","b","some","tag","getSuggestions","partial","partialLower","suggestions","startsWith","localeCompare","hasCommand","getCommandStats","stats","categoryKey","commandProcessor","commandHistory","settings","precision","dateFormat","persistenceInitialized","maxHistorySize","initializePersistence","persistenceManager","initialize","loadPersistedData","history","retrieve","isArray","slice","saveData","store","storage","variablesObj","fromEntries","processCommand","input","context","startTime","parsedCommand","parseCommand","historyEntry","success","createErrorResponse","validationResult","validateParameters","valid","execute","catch","trimmed","trim","functionMatch","paramString","parameters","parseParameters","rawInput","parts","split","params","inQuotes","inBrackets","quoteChar","i","char","parseParameterValue","endsWith","arrayContent","item","test","parseFloat","required","optional","join","maxParams","content","cmd","substring","getHistory","limit","clearHistory","setVariable","getVariable","getAllVariables","updateSetting","getSetting","getAllSettings","TerminalInterface","onCommandExecute","calculationResults","setCommands","currentInput","setCurrentInput","setSuggestions","showSuggestions","setShowSuggestions","selectedSuggestion","setSelectedSuggestion","isLoading","setIsLoading","terminalRef","inputRef","commandProcessorRef","useEffect","scrollTop","scrollHeight","focus","async","data","analysis","availableCommands","info","commandSuggestions","s","partialMatches","allSuggestions","onKeyDown","newCommand","prev","demoMode","dataFetchingService","showLoading","loadingCommand","response","action","responseCommand","errorCommand","executeCommand","max","min","autoComplete","selectSuggestion","VariableInputs","onVariableChange","onBulkEdit","activeSection","setActiveSection","editMode","setEditMode","setVariables","assumptions","revenue_growth","unit","ebitda_margin","capex_revenue","working_capital_revenue","cost_of_capital","risk_free_rate","market_premium","beta","cost_of_debt","debt_equity_ratio","market_data","current_share_price","shares_outstanding","market_cap","enterprise_value","net_debt","formatValue","filteredVariables","sectionData","filtered","variable","exportData","JSON","stringify","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","section","getVariablesByCategory","categoryVariables","replace","newValue","updatedVariables","handleVariableChange","step","defaultVariables","FinancialModelWorkspace","activeLayout","setActiveLayout","leftPanelContent","setLeftPanelContent","rightPanelContent","setRightPanelContent","leftWidthPct","setLeftWidthPct","isDragging","setIsDragging","containerRef","gutterRef","modelState","saved","calculating","lastSaved","setCalculationResults","handleCommandExecute","mounted","ui","workspace","layout","hydrate","setTimeout","clearTimeout","onMouseMove","useCallback","rect","getBoundingClientRect","x","clientX","left","pct","onMouseUp","altKey","points","closest","minDiff","d","snap","window","removeEventListener","onMouseDown","addEventListener","onGutterDoubleClick","delta","shiftKey","next","ctrlKey","metaKey","querySelector","SEOHead","title","canonical","keywords","Header","role","Breadcrumbs","tabIndex","flexBasis","renderLeftPanel","round","onDoubleClick","renderRightPanel"],"mappings":"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"}