{"version":3,"file":"index-BTAImts-.js","sources":["../../src/services/dataValidationService.js","../../src/services/apiConfig.js","../../src/services/enhancedApiService.js","../../src/pages/real-time-market-data-center/components/ApiStatusPanel.jsx","../../src/pages/real-time-market-data-center/components/BulkOperationsPanel.jsx","../../src/pages/real-time-market-data-center/components/ConnectionStatus.jsx","../../src/pages/real-time-market-data-center/components/DataSourceToggle.jsx","../../src/pages/real-time-market-data-center/components/MarketDataWidget.jsx","../../src/pages/real-time-market-data-center/components/SymbolSearch.jsx","../../src/pages/real-time-market-data-center/components/WatchlistPanel.jsx","../../src/pages/real-time-market-data-center/index.jsx"],"sourcesContent":["import { apiLogger } from '../utils/apiLogger.js';\n\n/**\n * Data validation and quality assurance service\n * Ensures data integrity and consistency across different sources\n */\nclass DataValidationService {\n  constructor() {\n    this.validationRules = this.initializeValidationRules();\n    this.qualityMetrics = new Map();\n    this.anomalyDetection = new Map();\n  }\n\n  /**\n   * Initialize validation rules for different data types\n   */\n  initializeValidationRules() {\n    return {\n      marketData: {\n        required: ['symbol', 'currentPrice', 'volume'],\n        numeric: ['currentPrice', 'previousClose', 'change', 'changePercent', 'volume', 'marketCap'],\n        ranges: {\n          currentPrice: { min: 0, max: 100000 },\n          volume: { min: 0, max: 1e12 },\n          changePercent: { min: -50, max: 50 }\n        },\n        formats: {\n          symbol: /^[A-Z]{1,5}$/,\n          timestamp: /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/\n        }\n      },\n      financialStatements: {\n        required: ['revenue', 'netIncome'],\n        numeric: ['revenue', 'netIncome', 'totalDebt', 'cashAndCashEquivalents'],\n        ranges: {\n          revenue: { min: 0, max: 1e12 },\n          netIncome: { min: -1e11, max: 1e11 }\n        }\n      },\n      companyProfile: {\n        required: ['symbol', 'companyName', 'sector'],\n        numeric: ['mktCap', 'pe', 'pb', 'beta'],\n        ranges: {\n          pe: { min: 0, max: 1000 },\n          pb: { min: 0, max: 100 },\n          beta: { min: -5, max: 5 }\n        }\n      },\n      dcfModel: {\n        required: ['cashFlows', 'discountRate'],\n        numeric: ['discountRate', 'terminalGrowthRate', 'years'],\n        custom: (data) => {\n          const errors = [];\n          if (!Array.isArray(data.cashFlows) || data.cashFlows.length === 0) {\n            errors.push('Cash flows must be a non-empty array');\n          }\n          if (data.discountRate < 0) {\n            errors.push('Discount rate must be non-negative');\n          }\n          return { errors, warnings: [] };\n        }\n      },\n      lboModel: {\n        required: ['purchasePrice', 'debtFinancing', 'equityFinancing'],\n        numeric: ['purchasePrice', 'debtFinancing', 'equityFinancing', 'exitMultiple', 'holdingPeriod'],\n        custom: (data) => {\n          const errors = [];\n          const warnings = [];\n          if (data.debtFinancing && data.equityFinancing && data.purchasePrice) {\n            const total = data.debtFinancing + data.equityFinancing;\n            if (Math.abs(total - data.purchasePrice) > 0.01) {\n              errors.push('Debt + Equity must equal purchase price');\n            }\n            const debtRatio = data.debtFinancing / data.purchasePrice;\n            if (debtRatio > 0.9) {\n              warnings.push('High leverage ratio detected');\n            }\n          }\n          return { errors, warnings };\n        }\n      },\n      stockData: {\n        required: ['symbol', 'price'],\n        numeric: ['price', 'volume', 'change', 'changePercent'],\n        custom: (data) => {\n          const errors = [];\n          if (!data.symbol || typeof data.symbol !== 'string' || data.symbol.trim() === '') {\n            errors.push('Symbol is required and must be a non-empty string');\n          }\n          if (typeof data.price !== 'number' || data.price < 0) {\n            errors.push('Price must be a positive number');\n          }\n          return { errors, warnings: [] };\n        }\n      }\n    };\n  }\n\n  /**\n   * Validate data against defined rules\n   * @param {Object} data - Data to validate\n   * @param {string} dataType - Type of data\n   * @returns {Object} Validation result\n   */\n  validateData(data, dataType) {\n    try {\n      const rules = this.validationRules[dataType];\n      if (!rules) {\n        return { isValid: false, errors: [`Unknown data type: ${dataType}`] };\n      }\n\n      const errors = [];\n      const warnings = [];\n\n      // Check required fields\n      for (const field of rules.required || []) {\n        if (data[field] === undefined || data[field] === null) {\n          errors.push(`Missing required field: ${field}`);\n        }\n      }\n\n      // Validate numeric fields\n      for (const field of rules.numeric || []) {\n        if (data[field] !== undefined && data[field] !== null) {\n          const value = parseFloat(data[field]);\n          if (isNaN(value)) {\n            errors.push(`Field ${field} must be numeric, got: ${data[field]}`);\n          } else {\n          // Check ranges\n            const range = rules.ranges?.[field];\n            if (range) {\n              if (value < range.min || value > range.max) {\n                warnings.push(`Field ${field} value ${value} outside expected range [${range.min}, ${range.max}]`);\n              }\n            }\n          }\n        }\n      }\n\n      // Validate formats\n      for (const [field, pattern] of Object.entries(rules.formats || {})) {\n        if (data[field] && !pattern.test(data[field])) {\n          errors.push(`Field ${field} format invalid: ${data[field]}`);\n        }\n      }\n\n      // Additional business logic validations\n      const businessValidation = this.validateBusinessLogic(data, dataType);\n      errors.push(...businessValidation.errors);\n      warnings.push(...businessValidation.warnings);\n\n      // Custom validation function\n      if (rules.custom) {\n        const customValidation = rules.custom(data);\n        errors.push(...(customValidation.errors || []));\n        warnings.push(...(customValidation.warnings || []));\n      }\n\n      const isValid = errors.length === 0;\n\n      // Log validation results\n      if (!isValid) {\n        apiLogger.log('ERROR', `Data validation failed for ${dataType}`, { errors, warnings });\n      } else if (warnings.length > 0) {\n        apiLogger.log('WARN', `Data validation warnings for ${dataType}`, { warnings });\n      }\n\n      return {\n        isValid,\n        errors,\n        warnings,\n        qualityScore: this.calculateQualityScore(errors, warnings)\n      };\n    } catch (error) {\n      return { isValid: false, errors: ['An unexpected error occurred during validation.'], warnings: [] };\n    }\n  }\n\n  /**\n   * Validate business logic rules\n   * @param {Object} data - Data to validate\n   * @param {string} dataType - Type of data\n   * @returns {Object} Business validation result\n   */\n  validateBusinessLogic(data, dataType) {\n    const errors = [];\n    const warnings = [];\n\n    switch (dataType) {\n      case 'marketData':\n        // Price consistency checks\n        if (data.currentPrice && data.previousClose) {\n          const calculatedChange = data.currentPrice - data.previousClose;\n          const calculatedChangePercent = (calculatedChange / data.previousClose) * 100;\n\n          if (data.change && Math.abs(data.change - calculatedChange) > 0.01) {\n            warnings.push(`Price change inconsistency: reported ${data.change}, calculated ${calculatedChange.toFixed(2)}`);\n          }\n\n          if (data.changePercent && Math.abs(data.changePercent - calculatedChangePercent) > 0.1) {\n            warnings.push(`Change percent inconsistency: reported ${data.changePercent}%, calculated ${calculatedChangePercent.toFixed(2)}%`);\n          }\n        }\n\n        // Day range validation\n        if (data.currentPrice && data.dayHigh && data.dayLow) {\n          if (data.currentPrice > data.dayHigh) {\n            warnings.push(`Current price ${data.currentPrice} exceeds day high ${data.dayHigh}`);\n          }\n          if (data.currentPrice < data.dayLow) {\n            warnings.push(`Current price ${data.currentPrice} below day low ${data.dayLow}`);\n          }\n          if (data.dayLow > data.dayHigh) {\n            errors.push(`Day low ${data.dayLow} greater than day high ${data.dayHigh}`);\n          }\n        }\n        break;\n\n      case 'financialStatements':\n        // Financial ratio validations\n        if (data.revenue && data.netIncome) {\n          const netMargin = (data.netIncome / data.revenue) * 100;\n          if (netMargin < -100 || netMargin > 100) {\n            warnings.push(`Unusual net profit margin: ${netMargin.toFixed(2)}%`);\n          }\n        }\n\n        // Balance sheet validations\n        if (data.totalCurrentAssets && data.totalCurrentLiabilities) {\n          const currentRatio = data.totalCurrentAssets / data.totalCurrentLiabilities;\n          if (currentRatio < 0.1 || currentRatio > 20) {\n            warnings.push(`Unusual current ratio: ${currentRatio.toFixed(2)}`);\n          }\n        }\n        break;\n\n      case 'companyProfile':\n        // Valuation metric validations\n        if (data.pe && (data.pe < 0 || data.pe > 500)) {\n          warnings.push(`Unusual P/E ratio: ${data.pe}`);\n        }\n\n        if (data.pb && (data.pb < 0 || data.pb > 50)) {\n          warnings.push(`Unusual P/B ratio: ${data.pb}`);\n        }\n        break;\n    }\n\n    return { errors, warnings };\n  }\n\n  /**\n   * Calculate data quality score\n   * @param {Array} errors - Validation errors\n   * @param {Array} warnings - Validation warnings\n   * @returns {number} Quality score (0-100)\n   */\n  calculateQualityScore(errors, warnings) {\n    if (errors.length > 0) {\n      return Math.max(0, 50 - (errors.length * 10));\n    }\n\n    return Math.max(70, 100 - (warnings.length * 5));\n  }\n\n  /**\n   * Cross-validate data from multiple sources\n   * @param {Array} dataSources - Array of data objects from different sources\n   * @param {string} dataType - Type of data\n   * @returns {Object} Cross-validation result\n   */\n  crossValidateData(dataSources, dataType) {\n    if (dataSources.length < 2) {\n      return { isConsistent: true, discrepancies: [], recommendedSource: dataSources[0]?.source };\n    }\n\n    const discrepancies = [];\n    const numericFields = this.validationRules[dataType]?.numeric || [];\n\n    // Compare numeric fields across sources\n    for (const field of numericFields) {\n      const values = dataSources\n        .filter(data => data[field] !== undefined && data[field] !== null)\n        .map(data => ({ value: parseFloat(data[field]), source: data.source }));\n\n      if (values.length > 1) {\n        const mean = values.reduce((sum, item) => sum + item.value, 0) / values.length;\n        const maxDeviation = Math.max(...values.map(item => Math.abs(item.value - mean)));\n        const threshold = mean * 0.05; // 5% threshold\n\n        if (maxDeviation > threshold) {\n          discrepancies.push({\n            field,\n            values,\n            mean,\n            maxDeviation,\n            threshold\n          });\n        }\n      }\n    }\n\n    // Determine recommended source based on quality scores\n    const sourceQuality = dataSources.map(data => {\n      const validation = this.validateData(data, dataType);\n      return {\n        source: data.source,\n        qualityScore: validation.qualityScore,\n        errorCount: validation.errors.length,\n        warningCount: validation.warnings.length\n      };\n    });\n\n    const recommendedSource = sourceQuality\n      .sort((a, b) => b.qualityScore - a.qualityScore)[0]?.source;\n\n    return {\n      isConsistent: discrepancies.length === 0,\n      discrepancies,\n      sourceQuality,\n      recommendedSource\n    };\n  }\n\n  /**\n   * Detect anomalies in time series data\n   * @param {Array} timeSeries - Array of data points with timestamps\n   * @param {string} field - Field to analyze\n   * @returns {Array} Detected anomalies\n   */\n  detectAnomalies(timeSeries, field) {\n    if (timeSeries.length < 10) {\n      return []; // Need sufficient data for anomaly detection\n    }\n\n    const values = timeSeries.map(point => parseFloat(point[field])).filter(v => !isNaN(v));\n    const mean = values.reduce((sum, val) => sum + val, 0) / values.length;\n    const variance = values.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / values.length;\n    const stdDev = Math.sqrt(variance);\n\n    const anomalies = [];\n    const threshold = 2.5; // 2.5 standard deviations\n\n    timeSeries.forEach((point, index) => {\n      const value = parseFloat(point[field]);\n      if (!isNaN(value)) {\n        const zScore = Math.abs((value - mean) / stdDev);\n        if (zScore > threshold) {\n          anomalies.push({\n            index,\n            timestamp: point.timestamp,\n            value,\n            zScore,\n            deviation: value - mean,\n            severity: zScore > 3 ? 'high' : 'medium'\n          });\n        }\n      }\n    });\n\n    return anomalies;\n  }\n\n  /**\n   * Get validation summary for a dataset\n   * @param {Object} data - Data to summarize\n   * @param {string} dataType - Type of data\n   * @returns {Object} Validation summary\n   */\n  getValidationSummary(data, dataType) {\n    const validation = this.validateData(data, dataType);\n\n    return {\n      dataType,\n      timestamp: new Date().toISOString(),\n      isValid: validation.isValid,\n      qualityScore: validation.qualityScore,\n      errorCount: validation.errors.length,\n      warningCount: validation.warnings.length,\n      completeness: this.calculateCompleteness(data, dataType),\n      freshness: this.calculateFreshness(data),\n      source: data.source || 'unknown'\n    };\n  }\n\n  /**\n   * Calculate data completeness percentage\n   * @param {Object} data - Data to analyze\n   * @param {string} dataType - Type of data\n   * @returns {number} Completeness percentage\n   */\n  calculateCompleteness(data, dataType) {\n    const rules = this.validationRules[dataType];\n    if (!rules) return 0;\n\n    const allFields = [\n      ...(rules.required || []),\n      ...(rules.numeric || []),\n      ...Object.keys(rules.formats || {})\n    ];\n\n    const uniqueFields = [...new Set(allFields)];\n    const presentFields = uniqueFields.filter(field =>\n      data[field] !== undefined && data[field] !== null && data[field] !== ''\n    );\n\n    return (presentFields.length / uniqueFields.length) * 100;\n  }\n\n  /**\n   * Calculate data freshness score\n   * @param {Object} data - Data to analyze\n   * @returns {number} Freshness score (0-100)\n   */\n  calculateFreshness(data) {\n    if (!data.timestamp) return 50; // Unknown freshness\n\n    const dataTime = new Date(data.timestamp);\n    const now = new Date();\n    const ageMinutes = (now - dataTime) / (1000 * 60);\n\n    // Score based on age (fresher = higher score)\n    if (ageMinutes < 5) return 100;\n    if (ageMinutes < 15) return 90;\n    if (ageMinutes < 60) return 80;\n    if (ageMinutes < 240) return 70;\n    if (ageMinutes < 1440) return 60;\n    return 40;\n  }\n\n\n  /**\n   * Sanitize input string\n   * @param {any} input - Input to sanitize\n   * @returns {string} Sanitized string\n   */\n  sanitizeInput(input) {\n    if (input === null || input === undefined) {\n      return '';\n    }\n\n    const str = String(input);\n    return str\n      .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n      .replace(/<[^>]*>/g, '')\n      .replace(/javascript:/gi, '')\n      .replace(/on\\w+\\s*=/gi, '');\n  }\n\n  /**\n   * Check if number is in range\n   * @param {number} value - Value to check\n   * @param {number} min - Minimum value\n   * @param {number} max - Maximum value\n   * @returns {boolean} True if in range\n   */\n  isInRange(value, min, max) {\n    return typeof value === 'number' && value >= min && value <= max;\n  }\n\n  /**\n   * Check if value is valid percentage (0-1)\n   * @param {number} value - Value to check\n   * @returns {boolean} True if valid percentage\n   */\n  isValidPercentage(value) {\n    return typeof value === 'number' && value >= 0 && value <= 1;\n  }\n\n  /**\n   * Check if value is a valid number\n   * @param {any} value - Value to check\n   * @returns {boolean} True if valid number\n   */\n  isValidNumber(value) {\n    return typeof value === 'number' && !isNaN(value) && isFinite(value);\n  }\n\n  /**\n   * Check if value is a valid array\n   * @param {any} value - Value to check\n   * @returns {boolean} True if valid array\n   */\n  isValidArray(value) {\n    return Array.isArray(value);\n  }\n\n  /**\n   * Check if value is a valid object\n   * @param {any} value - Value to check\n   * @returns {boolean} True if valid object\n   */\n  isValidObject(value) {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n  }\n\n  /**\n   * Validate financial ratios\n   * @param {Object} ratios - Financial ratios to validate\n   * @returns {Object} Validation result\n   */\n  validateFinancialRatios(ratios) {\n    const errors = [];\n    const warnings = [];\n\n    // Check for concerning ratios\n    if (ratios.currentRatio < 1.0) {\n      warnings.push('Current ratio below 1.0 indicates potential liquidity issues');\n    }\n\n    if (ratios.debtToEquity > 2.0) {\n      warnings.push('High debt-to-equity ratio indicates high leverage');\n    }\n\n    if (ratios.returnOnEquity < 0) {\n      warnings.push('Negative return on equity indicates poor performance');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings\n    };\n  }\n}\n\n// Export singleton instance\nexport const dataValidationService = new DataValidationService();\nexport default DataValidationService;\n","// API configuration and environment setup for data fetching services\n\nexport const API_CONFIG = {\n  // Alpha Vantage (Real-time market data, technical indicators)\n  ALPHA_VANTAGE: {\n    baseURL: 'https://www.alphavantage.co/query',\n    apiKey: import.meta.env.VITE_ALPHA_VANTAGE_API_KEY || 'demo', // Fixed for Vite\n    rateLimit: {\n      requests: 5,\n      period: 60000 // 5 requests per minute for free tier\n    },\n    endpoints: {\n      quote: 'GLOBAL_QUOTE',\n      dailyAdjusted: 'TIME_SERIES_DAILY_ADJUSTED',\n      company: 'OVERVIEW',\n      earnings: 'EARNINGS',\n      fundamentals: 'INCOME_STATEMENT'\n    }\n  },\n\n  // Financial Modeling Prep (Comprehensive financial data)\n  FMP: {\n    baseURL: 'https://financialmodelingprep.com/api/v3',\n    apiKey: import.meta.env.VITE_FMP_API_KEY || 'demo', // Fixed for Vite\n    rateLimit: {\n      requests: 250,\n      period: 86400000 // 250 requests per day for free tier\n    },\n    endpoints: {\n      profile: '/profile/',\n      incomeStatement: '/income-statement/',\n      balanceSheet: '/balance-sheet-statement/',\n      cashFlow: '/cash-flow-statement/',\n      ratios: '/ratios/',\n      peers: '/stock_peers',\n      dcf: '/discounted-cash-flow/',\n      enterprise: '/enterprise-values/'\n    }\n  },\n\n  // SEC EDGAR (Regulatory filings)\n  SEC_EDGAR: {\n    baseURL: 'https://data.sec.gov',\n    headers: {\n      'User-Agent': 'FinanceAnalyst-Pro contact@financeanalyst.com'\n    },\n    rateLimit: {\n      requests: 10,\n      period: 1000 // 10 requests per second\n    },\n    endpoints: {\n      submissions: '/submissions/CIK',\n      filings: '/Archives/edgar/data/'\n    }\n  },\n\n  // Yahoo Finance (Real-time quotes and market data)\n  YAHOO_FINANCE: {\n    baseURL: 'https://query1.finance.yahoo.com/v8/finance/chart',\n    fallbackURL: 'https://query2.finance.yahoo.com/v8/finance/chart',\n    rateLimit: {\n      requests: 100,\n      period: 60000 // Conservative limit\n    }\n  },\n\n  // Quandl/NASDAQ Data Link (Economic and financial datasets)\n  QUANDL: {\n    baseURL: 'https://data.nasdaq.com/api/v3',\n    apiKey: import.meta.env.VITE_QUANDL_API_KEY || 'demo', // Fixed for Vite\n    rateLimit: {\n      requests: 50,\n      period: 86400000 // 50 requests per day for free tier\n    }\n  },\n\n  // Federal Reserve Economic Data (FRED)\n  FRED: {\n    baseURL: 'https://api.stlouisfed.org/fred',\n    apiKey: import.meta.env.VITE_FRED_API_KEY || 'demo', // Fixed for Vite\n    rateLimit: {\n      requests: 120,\n      period: 60000 // 120 requests per minute\n    }\n  }\n};\n\n// Data source priority configuration\nexport const DATA_SOURCE_PRIORITY = {\n  marketData: ['YAHOO_FINANCE', 'ALPHA_VANTAGE'],\n  financialStatements: ['FMP', 'ALPHA_VANTAGE'],\n  companyProfile: ['FMP', 'ALPHA_VANTAGE'],\n  secFilings: ['SEC_EDGAR'],\n  economicData: ['FRED', 'QUANDL'],\n  peers: ['FMP']\n};\n\n// Cache configuration\nexport const CACHE_CONFIG = {\n  marketData: {\n    ttl: 15 * 60 * 1000, // 15 minutes\n    maxSize: 1000\n  },\n  financialStatements: {\n    ttl: 6 * 60 * 60 * 1000, // 6 hours\n    maxSize: 500\n  },\n  companyProfile: {\n    ttl: 24 * 60 * 60 * 1000, // 24 hours\n    maxSize: 200\n  },\n  secFilings: {\n    ttl: 12 * 60 * 60 * 1000, // 12 hours\n    maxSize: 100\n  },\n  peers: {\n    ttl: 4 * 60 * 60 * 1000, // 4 hours\n    maxSize: 100\n  }\n};\n\n// Error handling configuration\nexport const ERROR_CONFIG = {\n  retries: {\n    max: 3,\n    delay: 1000, // Initial delay in ms\n    factor: 2 // Exponential backoff factor\n  },\n  timeouts: {\n    default: 10000, // 10 seconds\n    sec: 15000, // 15 seconds for SEC filings\n    bulk: 30000 // 30 seconds for bulk operations\n  }\n};\n\n// Validation patterns\nexport const VALIDATION_PATTERNS = {\n  ticker: /^[A-Z]{1,5}$/,\n  cusip: /^[0-9]{8}[0-9A-Z]$/,\n  cik: /^[0-9]{1,10}$/,\n  email: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n};\n\n// API response status codes\nexport const API_STATUS = {\n  SUCCESS: 200,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  RATE_LIMITED: 429,\n  SERVER_ERROR: 500,\n  SERVICE_UNAVAILABLE: 503\n};\n\n// Default financial assumptions\nexport const FINANCIAL_DEFAULTS = {\n  dcf: {\n    projectionYears: 5,\n    terminalGrowthRate: 0.025, // 2.5%\n    riskFreeRate: 0.045, // 4.5%\n    marketPremium: 0.065, // 6.5%\n    taxRate: 0.21 // 21%\n  },\n  lbo: {\n    holdingPeriod: 5,\n    debtMultiple: 5,\n    managementFeeRate: 0.02, // 2%\n    carriedInterestRate: 0.2, // 20%\n    exitMultiple: null // Will use peer average\n  },\n  comparable: {\n    maxPeers: 10,\n    minMarketCap: 100000000, // $100M\n    sectorMatch: true\n  }\n};\n\n// Environment-specific configurations\nexport const getEnvironmentConfig = () => {\n  const env = import.meta.env.MODE || 'development'; // Fixed for Vite\n\n  const configs = {\n    development: {\n      debug: true,\n      logLevel: 'verbose',\n      cacheEnabled: true,\n      rateLimitingEnabled: false // Disable for development\n    },\n    production: {\n      debug: false,\n      logLevel: 'error',\n      cacheEnabled: true,\n      rateLimitingEnabled: true\n    },\n    test: {\n      debug: false,\n      logLevel: 'silent',\n      cacheEnabled: false,\n      rateLimitingEnabled: false\n    }\n  };\n\n  return configs[env] || configs.development;\n};\n\n// Helper function to get API key for a service\nexport const getApiKey = service => {\n  const keyMap = {\n    ALPHA_VANTAGE: import.meta.env.VITE_ALPHA_VANTAGE_API_KEY, // Fixed for Vite\n    FMP: import.meta.env.VITE_FMP_API_KEY, // Fixed for Vite\n    QUANDL: import.meta.env.VITE_QUANDL_API_KEY, // Fixed for Vite\n    FRED: import.meta.env.VITE_FRED_API_KEY // Fixed for Vite\n  };\n\n  return keyMap[service] || 'demo';\n};\n\n// Helper function to build request headers\nexport const buildHeaders = (service, customHeaders = {}) => {\n  const baseHeaders = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  };\n\n  const serviceHeaders = {\n    SEC_EDGAR: {\n      'User-Agent': API_CONFIG.SEC_EDGAR.headers['User-Agent']\n    }\n  };\n\n  return {\n    ...baseHeaders,\n    ...serviceHeaders[service],\n    ...customHeaders\n  };\n};\n\nexport default API_CONFIG;\n","import { apiLogger } from '../utils/apiLogger.js';\n\nimport { API_CONFIG, DATA_SOURCE_PRIORITY } from './apiConfig.js';\nimport { dataFetchingService } from './dataFetching.js';\n\nclass RateLimiter {\n  constructor(requestsPerInterval, interval) {\n    this.requestsPerInterval = requestsPerInterval;\n    this.interval = interval;\n    this.requestTimestamps = [];\n  }\n\n  async acquire() {\n    const now = Date.now();\n\n    this.requestTimestamps = this.requestTimestamps.filter(\n      (timestamp) => now - timestamp < this.interval\n    );\n\n    if (this.requestTimestamps.length >= this.requestsPerInterval) {\n      const timeToWait = this.interval - (now - this.requestTimestamps[0]);\n      await new Promise(resolve => setTimeout(resolve, timeToWait));\n      return this.acquire();\n    }\n\n    this.requestTimestamps.push(now);\n  }\n}\n\n/**\n * Enhanced API service with intelligent data source selection and fallbacks\n * Provides real data integration with multiple providers\n */\nclass EnhancedApiService {\n  constructor() {\n    this.rateLimiters = new Map();\n    this.sourceHealth = new Map();\n    this.lastRequests = new Map();\n    this.apiKeys = this.loadApiKeys();\n    this.cache = new Map();\n    this.rateLimitInfo = { remaining: null, reset: null };\n\n    // Initialize source health tracking\n    this.initializeSourceHealth();\n    this.rateLimiters.set('default', new RateLimiter(5, 1000));\n  }\n\n  /**\n   * Load and validate API keys from environment\n   */\n  loadApiKeys() {\n    const keys = {\n      ALPHA_VANTAGE: import.meta.env.VITE_ALPHA_VANTAGE_API_KEY,\n      FMP: import.meta.env.VITE_FMP_API_KEY,\n      QUANDL: import.meta.env.VITE_QUANDL_API_KEY,\n      FRED: import.meta.env.VITE_FRED_API_KEY\n    };\n\n    // Log available keys (without exposing actual values)\n    const availableKeys = Object.entries(keys)\n      .filter(([_, value]) => value && value !== 'demo')\n      .map(([key, _]) => key);\n\n    apiLogger.log('INFO', 'API keys loaded', {\n      availableKeys,\n      totalKeys: availableKeys.length\n    });\n\n    return keys;\n  }\n\n  /**\n   * Initialize health tracking for all data sources\n   */\n  initializeSourceHealth() {\n    const sources = ['ALPHA_VANTAGE', 'FMP', 'YAHOO_FINANCE', 'SEC_EDGAR', 'QUANDL', 'FRED'];\n\n    sources.forEach(source => {\n      this.sourceHealth.set(source, {\n        status: 'unknown',\n        successRate: 1.0,\n        avgResponseTime: 0,\n        lastError: null,\n        requestCount: 0,\n        errorCount: 0,\n        lastHealthCheck: null\n      });\n    });\n  }\n\n  /**\n   * Check if we have valid API key for a source\n   * @param {string} source - Data source name\n   * @returns {boolean}\n   */\n  hasValidApiKey(source) {\n    const key = this.apiKeys[source];\n    return key && key !== 'demo' && key.length > 5;\n  }\n\n  /**\n   * Get the best available data source for a data type\n   * @param {string} dataType - Type of data needed\n   * @returns {string} Best available source\n   */\n  getBestSource(dataType) {\n    const priorityList = DATA_SOURCE_PRIORITY[dataType] || [];\n\n    for (const source of priorityList) {\n      const health = this.sourceHealth.get(source);\n\n      // Check if source is healthy and has valid API key (if required)\n      if (health && health.status !== 'error') {\n        if (this.requiresApiKey(source)) {\n          if (this.hasValidApiKey(source)) {\n            return source;\n          }\n        } else {\n          return source;\n        }\n      }\n    }\n\n    // Fallback to first available source\n    return priorityList[0] || 'YAHOO_FINANCE';\n  }\n\n  /**\n   * Check if source requires API key\n   * @param {string} source - Data source name\n   * @returns {boolean}\n   */\n  requiresApiKey(source) {\n    return ['ALPHA_VANTAGE', 'FMP', 'QUANDL', 'FRED'].includes(source);\n  }\n\n  /**\n   * Fetch real-time market data with intelligent source selection\n   * @param {string} symbol - Stock symbol\n   * @param {Object} options - Additional options\n   * @returns {Promise<Object>} Market data\n   */\n  async fetchRealTimeMarketData(symbol, options = {}) {\n    const source = this.getBestSource('marketData');\n\n    try {\n      let data;\n\n      switch (source) {\n        case 'YAHOO_FINANCE':\n          data = await this.fetchFromYahooFinance(symbol, options);\n          break;\n        case 'ALPHA_VANTAGE':\n          data = await this.fetchFromAlphaVantage(symbol, 'GLOBAL_QUOTE', options);\n          break;\n        default:\n          throw new Error(`Unsupported source for market data: ${source}`);\n      }\n\n      this.updateSourceHealth(source, true, Date.now());\n      return this.normalizeMarketData(data, source);\n\n    } catch (error) {\n      this.updateSourceHealth(source, false, Date.now(), error);\n\n      // Try fallback source\n      const fallbackSources = DATA_SOURCE_PRIORITY.marketData.filter(s => s !== source);\n      if (fallbackSources.length > 0) {\n        apiLogger.log('WARN', `Primary source ${source} failed, trying fallback`, { error: error.message });\n        return this.fetchRealTimeMarketData(symbol, { ...options, excludeSource: source });\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * Fetch from Yahoo Finance API\n   * @param {string} symbol - Stock symbol\n   * @param {Object} options - Request options\n   * @returns {Promise<Object>} Raw data from Yahoo Finance\n   */\n  async fetchFromYahooFinance(symbol, options = {}) {\n    const url = `/v8/finance/chart/${symbol}`;\n\n    const params = {\n      range: options.range || '1d',\n      interval: options.interval || '1m',\n      includePrePost: true,\n      events: 'div,splits'\n    };\n\n    const fullUrl = new URL(url, 'http://localhost:3000');\n    fullUrl.search = new URLSearchParams(params).toString();\n\n    const response = await fetch(fullUrl.pathname + fullUrl.search, {\n      signal: AbortSignal.timeout(10000),\n      headers: {\n        'User-Agent': 'FinanceAnalyst-Pro/1.0'\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Yahoo Finance API request failed with status ${response.status}`);\n    }\n\n    const responseData = await response.json();\n\n    if (!responseData?.chart?.result?.[0]) {\n      throw new Error(`No data found for symbol: ${symbol}`);\n    }\n\n    return responseData.chart.result[0];\n  }\n\n  /**\n   * Fetch from Alpha Vantage API\n   * @param {string} symbol - Stock symbol\n   * @param {string} function_name - Alpha Vantage function\n   * @param {Object} options - Request options\n   * @returns {Promise<Object>} Raw data from Alpha Vantage\n   */\n  async fetchFromAlphaVantage(symbol, function_name, options = {}) {\n    if (!this.hasValidApiKey('ALPHA_VANTAGE')) {\n      throw new Error('Alpha Vantage API key not available');\n    }\n\n    const config = API_CONFIG.ALPHA_VANTAGE;\n\n    const params = {\n      function: function_name,\n      symbol,\n      apikey: this.apiKeys.ALPHA_VANTAGE,\n      ...options.params\n    };\n\n    const fullUrl = new URL(config.baseURL);\n    fullUrl.search = new URLSearchParams(params).toString();\n\n    const response = await fetch(fullUrl, {\n      signal: AbortSignal.timeout(15000)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Alpha Vantage API request failed with status ${response.status}`);\n    }\n\n    const responseData = await response.json();\n\n    // Check for API errors\n    if (responseData['Error Message']) {\n      throw new Error(`Alpha Vantage error: ${responseData['Error Message']}`);\n    }\n\n    if (responseData['Note']) {\n      throw new Error(`Alpha Vantage rate limit: ${responseData['Note']}`);\n    }\n\n    return responseData;\n  }\n\n  /**\n   * Fetch comprehensive financial data\n   * @param {string} symbol - Stock symbol\n   * @returns {Promise<Object>} Comprehensive financial data\n   */\n  async fetchComprehensiveData(symbol) {\n    const results = {};\n    const errors = {};\n\n    // Fetch multiple data types in parallel\n    const dataTypes = [\n      { key: 'marketData', method: 'fetchRealTimeMarketData' },\n      { key: 'profile', method: 'fetchCompanyProfile' },\n      { key: 'financials', method: 'fetchFinancialStatements' },\n      { key: 'peers', method: 'fetchPeerComparison' }\n    ];\n\n    const promises = dataTypes.map(async({ key, method }) => {\n      try {\n        if (method === 'fetchFinancialStatements') {\n          results[key] = await dataFetchingService[method](symbol, 'income-statement');\n        } else if (method === 'fetchPeerComparison') {\n          results[key] = await dataFetchingService[method](symbol);\n        } else {\n          results[key] = await this[method](symbol);\n        }\n      } catch (error) {\n        errors[key] = error.message;\n        apiLogger.log('ERROR', `Failed to fetch ${key} for ${symbol}`, { error: error.message });\n      }\n    });\n\n    await Promise.allSettled(promises);\n\n    return {\n      symbol,\n      timestamp: new Date().toISOString(),\n      data: results,\n      errors: Object.keys(errors).length > 0 ? errors : null,\n      sources: this.getSourcesUsed(results)\n    };\n  }\n\n  /**\n   * Normalize market data from different sources\n   * @param {Object} rawData - Raw data from API\n   * @param {string} source - Data source\n   * @returns {Object} Normalized market data\n   */\n  normalizeMarketData(rawData, source) {\n    switch (source) {\n      case 'YAHOO_FINANCE':\n        return this.normalizeYahooData(rawData);\n      case 'ALPHA_VANTAGE':\n        return this.normalizeAlphaVantageData(rawData);\n      default:\n        return rawData;\n    }\n  }\n\n  /**\n   * Normalize Yahoo Finance data\n   * @param {Object} data - Raw Yahoo Finance data\n   * @returns {Object} Normalized data\n   */\n  normalizeYahooData(data) {\n    const meta = data.meta;\n    const quote = data.indicators?.quote?.[0];\n    const latest = quote ? {\n      open: quote.open[quote.open.length - 1],\n      high: quote.high[quote.high.length - 1],\n      low: quote.low[quote.low.length - 1],\n      close: quote.close[quote.close.length - 1],\n      volume: quote.volume[quote.volume.length - 1]\n    } : {};\n\n    return {\n      symbol: meta.symbol,\n      currentPrice: meta.regularMarketPrice || latest.close,\n      previousClose: meta.previousClose,\n      change: meta.regularMarketPrice - meta.previousClose,\n      changePercent: ((meta.regularMarketPrice - meta.previousClose) / meta.previousClose) * 100,\n      dayHigh: meta.regularMarketDayHigh || latest.high,\n      dayLow: meta.regularMarketDayLow || latest.low,\n      volume: meta.regularMarketVolume || latest.volume,\n      marketCap: meta.marketCap,\n      currency: meta.currency,\n      exchangeName: meta.exchangeName,\n      timestamp: new Date(meta.regularMarketTime * 1000).toISOString(),\n      source: 'YAHOO_FINANCE'\n    };\n  }\n\n  /**\n   * Normalize Alpha Vantage data\n   * @param {Object} data - Raw Alpha Vantage data\n   * @returns {Object} Normalized data\n   */\n  normalizeAlphaVantageData(data) {\n    const globalQuote = data['Global Quote'];\n    if (!globalQuote) {\n      throw new Error('Invalid Alpha Vantage response format');\n    }\n\n    return {\n      symbol: globalQuote['01. symbol'],\n      currentPrice: parseFloat(globalQuote['05. price']),\n      previousClose: parseFloat(globalQuote['08. previous close']),\n      change: parseFloat(globalQuote['09. change']),\n      changePercent: parseFloat(globalQuote['10. change percent'].replace('%', '')),\n      dayHigh: parseFloat(globalQuote['03. high']),\n      dayLow: parseFloat(globalQuote['04. low']),\n      volume: parseInt(globalQuote['06. volume']),\n      timestamp: globalQuote['07. latest trading day'],\n      source: 'ALPHA_VANTAGE'\n    };\n  }\n\n  /**\n   * Update source health metrics\n   * @param {string} source - Data source\n   * @param {boolean} success - Whether request was successful\n   * @param {number} responseTime - Response time in ms\n   * @param {Error} error - Error object if failed\n   */\n  updateSourceHealth(source, success, responseTime, error = null) {\n    const health = this.sourceHealth.get(source);\n    if (!health) return;\n\n    health.requestCount++;\n    if (!success) {\n      health.errorCount++;\n      health.lastError = error?.message || 'Unknown error';\n      health.status = 'error';\n    } else {\n      health.status = 'healthy';\n      health.lastError = null;\n    }\n\n    health.successRate = (health.requestCount - health.errorCount) / health.requestCount;\n    health.avgResponseTime = (health.avgResponseTime + responseTime) / 2;\n    health.lastHealthCheck = new Date().toISOString();\n\n    this.sourceHealth.set(source, health);\n  }\n\n  /**\n   * Get health status for all sources\n   * @returns {Object} Health status map\n   */\n  getSourceHealthStatus() {\n    const status = {};\n    for (const [source, health] of this.sourceHealth.entries()) {\n      status[source] = {\n        ...health,\n        hasValidApiKey: this.hasValidApiKey(source),\n        requiresApiKey: this.requiresApiKey(source)\n      };\n    }\n    return status;\n  }\n\n  /**\n   * Get sources used in a data fetch result\n   * @param {Object} results - Fetch results\n   * @returns {Array} List of sources used\n   */\n  getSourcesUsed(results) {\n    const sources = new Set();\n    Object.values(results).forEach(data => {\n      if (data?.source) {\n        sources.add(data.source);\n      }\n    });\n    return Array.from(sources);\n  }\n\n  // Additional API methods expected by tests\n\n  /**\n   * Configuration properties\n   */\n  baseUrl = 'https://api.example.com';\n  defaultHeaders = {};\n  timeout = 10000;\n  authToken = null;\n  cacheTTL = 300000; // 5 minutes\n  requestInterceptors = [];\n  responseInterceptors = [];\n  metrics = {\n    totalRequests: 0,\n    successfulRequests: 0,\n    failedRequests: 0,\n    avgResponseTime: 0\n  };\n\n  /**\n   * Make a generic API request\n   * @param {string} url - Request URL\n   * @param {Object} options - Request options\n   * @returns {Promise<Object>} Response data\n   */\n  async request(url, options = {}) {\n    const startTime = Date.now();\n    this.metrics.totalRequests++;\n\n    const limiter = this.rateLimiters.get('default');\n    await limiter.acquire();\n\n    const fullUrl = url.startsWith('http') ? url : `${this.baseUrl}${url}`;\n\n    const cacheKey = fullUrl;\n    if (this.cache.has(cacheKey)) {\n      const cached = this.cache.get(cacheKey);\n      if (Date.now() - cached.timestamp < this.cacheTTL) {\n        this.metrics.successfulRequests++;\n        return cached.data;\n      }\n    }\n\n    try {\n      let config = {\n        method: 'GET',\n        headers: { ...this.defaultHeaders },\n        ...options\n      };\n\n      if (this.authToken) {\n        config.headers.Authorization = `Bearer ${this.authToken}`;\n      }\n\n      for (const interceptor of this.requestInterceptors) {\n        config = await interceptor(config);\n      }\n\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), this.timeout);\n      config.signal = controller.signal;\n\n      const response = await fetch(fullUrl, config);\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorData = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, body: ${errorData}`);\n      }\n\n      this.rateLimitInfo.remaining = parseInt(response.headers.get('X-RateLimit-Remaining'), 10);\n      this.rateLimitInfo.reset = parseInt(response.headers.get('X-RateLimit-Reset'), 10);\n\n      let responseData = await response.json();\n\n      for (const interceptor of this.responseInterceptors) {\n        responseData = await interceptor(responseData, response);\n      }\n\n      this.cache.set(cacheKey, { data: responseData, timestamp: Date.now() });\n\n      const responseTime = Date.now() - startTime;\n      this.metrics.successfulRequests++;\n      this.metrics.avgResponseTime = (this.metrics.avgResponseTime + responseTime) / 2;\n\n      return responseData;\n    } catch (error) {\n      this.metrics.failedRequests++;\n      throw error;\n    }\n  }\n\n  /**\n   * Set authentication token\n   * @param {string} token - Auth token\n   */\n  setAuthToken(token) {\n    this.authToken = token;\n  }\n\n  /**\n   * Set cache TTL\n   * @param {number} ttl - Time to live in milliseconds\n   */\n  setCacheTTL(ttl) {\n    this.cacheTTL = ttl;\n  }\n\n  /**\n   * Batch multiple requests\n   * @param {Array} requests - Array of request configs or URLs\n   * @returns {Promise<Array>} Array of responses\n   */\n  async batchRequests(requests) {\n    const promises = requests.map(req => {\n      if (typeof req === 'string') {\n        return this.request(req);\n      }\n      return this.request(req.url, req.options);\n    });\n\n    const results = await Promise.allSettled(promises);\n\n    return results.map(result => {\n      if (result.status === 'fulfilled') {\n        return result.value;\n      }\n      return result.reason;\n    });\n  }\n\n  /**\n   * Add request interceptor\n   * @param {Function} interceptor - Interceptor function\n   */\n  addRequestInterceptor(interceptor) {\n    this.requestInterceptors.push(interceptor);\n  }\n\n  /**\n   * Add response interceptor\n   * @param {Function} interceptor - Interceptor function\n   */\n  addResponseInterceptor(interceptor) {\n    this.responseInterceptors.push(interceptor);\n  }\n\n  /**\n   * Make request with retry logic\n   * @param {string} url - Request URL\n   * @param {Object} options - Request options\n   * @param {number} retries - Number of retries\n   * @returns {Promise<Object>} Response data\n   */\n  async requestWithRetry(url, options = {}, retries = 3) {\n    let lastError;\n\n    for (let i = 0; i <= retries; i++) {\n      try {\n        return await this.request(url, options);\n      } catch (error) {\n        lastError = error;\n        if (i < retries) {\n          const delay = Math.pow(2, i) * 100; // Exponential backoff\n          await new Promise(resolve => setTimeout(resolve, delay));\n        }\n      }\n    }\n\n    throw lastError;\n  }\n\n  /**\n   * Set base URL\n   * @param {string} url - Base URL\n   */\n  setBaseUrl(url) {\n    this.baseUrl = url;\n  }\n\n  /**\n   * Get base URL\n   * @returns {string} Base URL\n   */\n  getBaseUrl() {\n    return this.baseUrl;\n  }\n\n  /**\n   * Set default headers\n   * @param {Object} headers - Default headers\n   */\n  setDefaultHeaders(headers) {\n    this.defaultHeaders = { ...headers };\n  }\n\n  /**\n   * Get default headers\n   * @returns {Object} Default headers\n   */\n  getDefaultHeaders() {\n    return { ...this.defaultHeaders };\n  }\n\n  /**\n   * Set timeout\n   * @param {number} timeout - Timeout in milliseconds\n   */\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Get timeout\n   * @returns {number} Timeout in milliseconds\n   */\n  getTimeout() {\n    return this.timeout;\n  }\n\n  /**\n   * Get metrics\n   * @returns {Object} Request metrics\n   */\n  getMetrics() {\n    return { ...this.metrics };\n  }\n\n  /**\n   * Reset metrics\n   */\n  resetMetrics() {\n    this.metrics = {\n      totalRequests: 0,\n      successfulRequests: 0,\n      failedRequests: 0,\n      avgResponseTime: 0\n    };\n  }\n\n  getRateLimitInfo() {\n    return this.rateLimitInfo;\n  }\n\n  clearCache() {\n    this.cache.clear();\n  }\n}\n\n// Export singleton instance\nexport const enhancedApiService = new EnhancedApiService();\nexport default EnhancedApiService;\n","import { CheckCircle, XCircle, AlertTriangle, Key, Wifi } from 'lucide-react';\nimport React from 'react';\n\nimport { Alert, AlertDescription } from '../../../components/ui/Alert';\nimport { Badge } from '../../../components/ui/Badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../components/ui/Card';\nimport { Progress } from '../../../components/ui/Progress';\n\nconst ApiStatusPanel = ({\n  apiHealthStatus = {},\n  realDataEnabled = false,\n  dataSources = [],\n  dataQuality = {}\n}) => {\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'healthy':\n      case 'connected':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 'error':\n      case 'disconnected':\n        return <XCircle className=\"h-4 w-4 text-red-500\" />;\n      case 'warning':\n        return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\n      default:\n        return <AlertTriangle className=\"h-4 w-4 text-gray-400\" />;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'healthy':\n      case 'connected':\n        return 'bg-green-100 text-green-800';\n      case 'error':\n      case 'disconnected':\n        return 'bg-red-100 text-red-800';\n      case 'warning':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const connectedSources = dataSources.filter(source => source.status === 'connected').length;\n  const totalSources = dataSources.length;\n  const connectionPercentage = totalSources > 0 ? (connectedSources / totalSources) * 100 : 0;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Wifi className=\"h-5 w-5\" />\n          API Status & Data Quality\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Overall Status */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            {getStatusIcon(realDataEnabled ? 'connected' : 'disconnected')}\n            <span className=\"font-medium\">\n              Real Data: {realDataEnabled ? 'Enabled' : 'Disabled'}\n            </span>\n          </div>\n          <Badge className={getStatusColor(realDataEnabled ? 'connected' : 'disconnected')}>\n            {realDataEnabled ? 'Live' : 'Demo Mode'}\n          </Badge>\n        </div>\n\n        {/* Connection Health */}\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center justify-between text-sm\">\n            <span>Connection Health</span>\n            <span>{connectedSources}/{totalSources} sources</span>\n          </div>\n          <Progress value={connectionPercentage} className=\"h-2\" />\n        </div>\n\n        {/* Data Sources Status */}\n        <div className=\"space-y-2\">\n          <h4 className=\"text-sm font-medium\">Data Sources</h4>\n          <div className=\"space-y-2\">\n            {dataSources.map((source) => (\n              <div key={source.id} className=\"flex items-center justify-between text-sm\">\n                <div className=\"flex items-center gap-2\">\n                  {getStatusIcon(source.status)}\n                  <span>{source.name}</span>\n                  {source.requiresKey && (\n                    <Key className=\"h-3 w-3 text-gray-400\" title=\"Requires API Key\" />\n                  )}\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Badge\n                    variant=\"outline\"\n                    className={`text-xs ${getStatusColor(source.status)}`}\n                  >\n                    {source.status}\n                  </Badge>\n                  {source.status === 'connected' && (\n                    <span className=\"text-xs text-gray-500\">{source.latency}ms</span>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* API Health Details */}\n        {Object.keys(apiHealthStatus).length > 0 && (\n          <div className=\"space-y-2\">\n            <h4 className=\"text-sm font-medium\">API Health Details</h4>\n            <div className=\"space-y-1 text-xs\">\n              {Object.entries(apiHealthStatus).map(([source, health]) => (\n                <div key={source} className=\"flex items-center justify-between\">\n                  <span className=\"capitalize\">{source.toLowerCase().replace('_', ' ')}</span>\n                  <div className=\"flex items-center gap-2\">\n                    <span>Success: {(health.successRate * 100).toFixed(1)}%</span>\n                    <span>Avg: {health.avgResponseTime.toFixed(0)}ms</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Data Quality Metrics */}\n        {Object.keys(dataQuality).length > 0 && (\n          <div className=\"space-y-2\">\n            <h4 className=\"text-sm font-medium\">Data Quality</h4>\n            <div className=\"space-y-1\">\n              {Object.entries(dataQuality).map(([symbol, quality]) => (\n                <div key={symbol} className=\"flex items-center justify-between text-sm\">\n                  <span>{symbol}</span>\n                  <div className=\"flex items-center gap-2\">\n                    <Progress value={quality} className=\"h-1 w-16\" />\n                    <span className=\"text-xs\">{quality}%</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Alerts */}\n        {!realDataEnabled && (\n          <Alert>\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription className=\"text-sm\">\n              Running in demo mode. Add API keys to enable real-time data.\n              <br />\n              <span className=\"text-xs text-gray-600\">\n                Set VITE_ALPHA_VANTAGE_API_KEY or VITE_FMP_API_KEY in your .env file\n              </span>\n            </AlertDescription>\n          </Alert>\n        )}\n\n        {realDataEnabled && connectedSources < totalSources && (\n          <Alert>\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription className=\"text-sm\">\n              Some data sources are unavailable. Check your API keys and network connection.\n            </AlertDescription>\n          </Alert>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ApiStatusPanel;\n","import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\nimport Input from '../../../components/ui/Input';\n\nconst BulkOperationsPanel = ({ selectedSymbols, onBulkExport, onBulkAlert, onBulkHistorical }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [exportFormat, setExportFormat] = useState('csv');\n  const [alertThreshold, setAlertThreshold] = useState('');\n  const [historicalPeriod, setHistoricalPeriod] = useState('1y');\n\n  const handleBulkExport = () => {\n    onBulkExport({\n      symbols: selectedSymbols,\n      format: exportFormat,\n      timestamp: new Date().toISOString()\n    });\n  };\n\n  const handleBulkAlert = () => {\n    if (!alertThreshold) return;\n    onBulkAlert({\n      symbols: selectedSymbols,\n      threshold: parseFloat(alertThreshold),\n      type: 'price_change'\n    });\n    setAlertThreshold('');\n  };\n\n  const handleBulkHistorical = () => {\n    onBulkHistorical({\n      symbols: selectedSymbols,\n      period: historicalPeriod\n    });\n  };\n\n  if (selectedSymbols.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"bg-card border border-border rounded-lg shadow-elevation-1\">\n      {/* Header */}\n      <div\n        className=\"flex items-center justify-between p-4 cursor-pointer\"\n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-8 h-8 bg-primary rounded-lg flex items-center justify-center\">\n            <Icon name=\"Layers\" size={16} color=\"white\" />\n          </div>\n          <div>\n            <h3 className=\"font-semibold text-foreground\">Bulk Operations</h3>\n            <p className=\"text-sm text-muted-foreground\">\n              {selectedSymbols.length} symbol{selectedSymbols.length !== 1 ? 's' : ''} selected\n            </p>\n          </div>\n        </div>\n        <Icon\n          name={isExpanded ? 'ChevronUp' : 'ChevronDown'}\n          size={20}\n          className=\"text-muted-foreground\"\n        />\n      </div>\n\n      {/* Expanded Content */}\n      {isExpanded && (\n        <div className=\"border-t border-border\">\n          {/* Selected Symbols */}\n          <div className=\"p-4 border-b border-border\">\n            <h4 className=\"text-sm font-medium text-foreground mb-2\">Selected Symbols:</h4>\n            <div className=\"flex flex-wrap gap-2\">\n              {selectedSymbols.slice(0, 10).map(symbol => (\n                <span\n                  key={symbol}\n                  className=\"px-2 py-1 bg-muted text-muted-foreground text-xs rounded\"\n                >\n                  {symbol}\n                </span>\n              ))}\n              {selectedSymbols.length > 10 && (\n                <span className=\"px-2 py-1 bg-muted text-muted-foreground text-xs rounded\">\n                  +{selectedSymbols.length - 10} more\n                </span>\n              )}\n            </div>\n          </div>\n\n          {/* Operations */}\n          <div className=\"p-4 space-y-4\">\n            {/* Export Operation */}\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-foreground\">Data Export</h4>\n              <div className=\"flex items-center space-x-2\">\n                <select\n                  value={exportFormat}\n                  onChange={e => setExportFormat(e.target.value)}\n                  className=\"px-3 py-2 border border-border rounded-lg text-sm bg-input text-foreground\"\n                >\n                  <option value=\"csv\">CSV Format</option>\n                  <option value=\"xlsx\">Excel Format</option>\n                  <option value=\"json\">JSON Format</option>\n                  <option value=\"pdf\">PDF Report</option>\n                </select>\n                <Button\n                  variant=\"outline\" size=\"sm\" iconName=\"Download\"\n                  onClick={handleBulkExport}\n                >\n                  Export Data\n                </Button>\n              </div>\n            </div>\n\n            {/* Alert Setup */}\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-foreground\">Price Alerts</h4>\n              <div className=\"flex items-center space-x-2\">\n                <Input\n                  type=\"number\"\n                  placeholder=\"Threshold %\"\n                  value={alertThreshold}\n                  onChange={e => setAlertThreshold(e.target.value)}\n                  className=\"flex-1\"\n                />\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  iconName=\"Bell\"\n                  onClick={handleBulkAlert}\n                  disabled={!alertThreshold}\n                >\n                  Set Alerts\n                </Button>\n              </div>\n            </div>\n\n            {/* Historical Data */}\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-foreground\">Historical Data</h4>\n              <div className=\"flex items-center space-x-2\">\n                <select\n                  value={historicalPeriod}\n                  onChange={e => setHistoricalPeriod(e.target.value)}\n                  className=\"px-3 py-2 border border-border rounded-lg text-sm bg-input text-foreground\"\n                >\n                  <option value=\"1d\">1 Day</option>\n                  <option value=\"1w\">1 Week</option>\n                  <option value=\"1m\">1 Month</option>\n                  <option value=\"3m\">3 Months</option>\n                  <option value=\"6m\">6 Months</option>\n                  <option value=\"1y\">1 Year</option>\n                  <option value=\"5y\">5 Years</option>\n                </select>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  iconName=\"BarChart3\"\n                  onClick={handleBulkHistorical}\n                >\n                  Get Historical\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* Quick Stats */}\n          <div className=\"p-4 border-t border-border bg-muted/30\">\n            <div className=\"grid grid-cols-3 gap-4 text-center\">\n              <div>\n                <div className=\"text-lg font-semibold text-foreground\">\n                  {selectedSymbols.length}\n                </div>\n                <div className=\"text-xs text-muted-foreground\">Symbols</div>\n              </div>\n              <div>\n                <div className=\"text-lg font-semibold text-foreground\">\n                  {Math.min(selectedSymbols.length * 50, 1000)}\n                </div>\n                <div className=\"text-xs text-muted-foreground\">Data Points</div>\n              </div>\n              <div>\n                <div className=\"text-lg font-semibold text-foreground\">\n                  ~{Math.ceil(selectedSymbols.length / 10)}s\n                </div>\n                <div className=\"text-xs text-muted-foreground\">Est. Time</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BulkOperationsPanel;\n","\nimport Icon from '../../../components/AppIcon';\n\nconst ConnectionStatus = ({ connectionHealth, lastUpdate }) => {\n  const getStatusColor = status => {\n    switch (status) {\n      case 'excellent':\n        return 'text-success';\n      case 'good':\n        return 'text-primary';\n      case 'warning':\n        return 'text-warning';\n      case 'error':\n        return 'text-error';\n      default:\n        return 'text-muted-foreground';\n    }\n  };\n\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'excellent':\n        return 'Wifi';\n      case 'good':\n        return 'Wifi';\n      case 'warning':\n        return 'WifiOff';\n      case 'error':\n        return 'AlertTriangle';\n      default:\n        return 'Wifi';\n    }\n  };\n\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <div className=\"flex items-center space-x-2\">\n        <Icon\n          name={getStatusIcon(connectionHealth.overall)}\n          size={16}\n          className={getStatusColor(connectionHealth.overall)}\n        />\n        <span className=\"text-sm font-medium text-foreground\">\n          Connection: {connectionHealth.overall}\n        </span>\n      </div>\n\n      <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n        <Icon name=\"Clock\" size={14} />\n        <span>Last update: {lastUpdate}</span>\n      </div>\n\n      <div className=\"flex items-center space-x-1\">\n        {Object.entries(connectionHealth.sources).map(([source, status]) => (\n          <div\n            key={source}\n            className={`w-3 h-3 rounded-full ${\n              status === 'connected'\n                ? 'bg-success'\n                : status === 'warning'\n                  ? 'bg-warning'\n                  : 'bg-error'\n            }`}\n            title={`${source}: ${status}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectionStatus;\n","\nconst DataSourceToggle = ({ dataSources, onToggle }) => {\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <span className=\"text-sm font-medium text-foreground\">Data Sources:</span>\n      <div className=\"flex items-center space-x-2\">\n        {dataSources.map(source => (\n          <button\n            key={source.id}\n            onClick={() => onToggle(source.id)}\n            className={`\n              flex items-center space-x-2 px-3 py-2 rounded-lg text-sm font-medium transition-smooth\n              ${\n          source.enabled\n            ? 'bg-primary text-primary-foreground'\n            : 'bg-muted text-muted-foreground hover:bg-muted/80'\n          }\n            `}\n          >\n            <div\n              className={`w-2 h-2 rounded-full ${\n                source.status === 'connected'\n                  ? 'bg-success'\n                  : source.status === 'warning'\n                    ? 'bg-warning'\n                    : 'bg-error'\n              }`}\n            />\n            <span>{source.name}</span>\n            <span className=\"text-xs opacity-75\">{source.latency}ms</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DataSourceToggle;\n","\nimport Icon from '../../../components/AppIcon';\n\nconst MarketDataWidget = ({ widget, onResize, onRemove }) => {\n  const getChangeColor = change => {\n    if (change > 0) return 'text-success';\n    if (change < 0) return 'text-error';\n    return 'text-muted-foreground';\n  };\n\n  const getChangeIcon = change => {\n    if (change > 0) return 'TrendingUp';\n    if (change < 0) return 'TrendingDown';\n    return 'Minus';\n  };\n\n  const formatValue = (value, type) => {\n    switch (type) {\n      case 'currency':\n        return `$${value.toLocaleString('en-US', { minimumFractionDigits: 2 })}`;\n      case 'percentage':\n        return `${value.toFixed(2)}%`;\n      case 'number':\n        return value.toLocaleString('en-US', { minimumFractionDigits: 2 });\n      default:\n        return value;\n    }\n  };\n\n  const getFreshnessColor = timestamp => {\n    const now = new Date();\n    const updateTime = new Date(timestamp);\n    const diffSeconds = (now - updateTime) / 1000;\n\n    if (diffSeconds < 5) return 'bg-success';\n    if (diffSeconds < 30) return 'bg-warning';\n    return 'bg-error';\n  };\n\n  return (\n    <div className=\"bg-card border border-border rounded-lg p-4 shadow-elevation-1 hover:shadow-elevation-2 transition-smooth\">\n      {/* Widget Header */}\n      <div className=\"flex items-center justify-between mb-3\">\n        <div className=\"flex items-center space-x-2\">\n          <h3 className=\"font-semibold text-foreground\">{widget.symbol}</h3>\n          <span className=\"text-sm text-muted-foreground\">{widget.name}</span>\n          <div\n            className={`w-2 h-2 rounded-full ${getFreshnessColor(widget.lastUpdate)}`}\n            title={`Last updated: ${new Date(widget.lastUpdate).toLocaleTimeString()}`}\n          />\n        </div>\n        <div className=\"flex items-center space-x-1\">\n          <button\n            onClick={() => onResize(widget.id)}\n            className=\"p-1 text-muted-foreground hover:text-foreground transition-smooth\"\n            title=\"Resize widget\"\n          >\n            <Icon name=\"Maximize2\" size={14} />\n          </button>\n          <button\n            onClick={() => onRemove(widget.id)}\n            className=\"p-1 text-muted-foreground hover:text-error transition-smooth\"\n            title=\"Remove widget\"\n          >\n            <Icon name=\"X\" size={14} />\n          </button>\n        </div>\n      </div>\n\n      {/* Current Value */}\n      <div className=\"mb-3\">\n        <div className=\"text-2xl font-bold text-foreground\">\n          {formatValue(widget.currentValue, widget.valueType)}\n        </div>\n        <div className={`flex items-center space-x-1 text-sm ${getChangeColor(widget.change)}`}>\n          <Icon name={getChangeIcon(widget.change)} size={14} />\n          <span>{formatValue(Math.abs(widget.change), widget.valueType)}</span>\n          <span>\n            ({widget.changePercent > 0 ? '+' : ''}\n            {widget.changePercent.toFixed(2)}%)\n          </span>\n        </div>\n      </div>\n\n      {/* Sparkline Chart */}\n      <div className=\"mb-3\">\n        <div className=\"h-16 bg-muted rounded flex items-end space-x-1 p-2\">\n          {widget.sparklineData.map((point, index) => (\n            <div\n              key={index}\n              className={`flex-1 rounded-sm ${\n                point > widget.sparklineData[0] ? 'bg-success' : 'bg-error'\n              }`}\n              style={{\n                height: `${(point / Math.max(...widget.sparklineData)) * 100}%`,\n                minHeight: '2px'\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Additional Metrics */}\n      <div className=\"grid grid-cols-2 gap-2 text-xs\">\n        <div>\n          <span className=\"text-muted-foreground\">High:</span>\n          <span className=\"ml-1 font-medium text-foreground\">\n            {formatValue(widget.dayHigh, widget.valueType)}\n          </span>\n        </div>\n        <div>\n          <span className=\"text-muted-foreground\">Low:</span>\n          <span className=\"ml-1 font-medium text-foreground\">\n            {formatValue(widget.dayLow, widget.valueType)}\n          </span>\n        </div>\n        <div>\n          <span className=\"text-muted-foreground\">Volume:</span>\n          <span className=\"ml-1 font-medium text-foreground\">\n            {widget.volume ? widget.volume.toLocaleString() : 'N/A'}\n          </span>\n        </div>\n        <div>\n          <span className=\"text-muted-foreground\">Source:</span>\n          <span className=\"ml-1 font-medium text-foreground\">{widget.source}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MarketDataWidget;\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Input from '../../../components/ui/Input';\n\nconst SymbolSearch = ({ onSymbolSelect, watchlist, onAddToWatchlist }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const searchRef = useRef(null);\n\n  // Mock symbol data\n  const symbolDatabase = [\n    { symbol: 'AAPL', name: 'Apple Inc.', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'MSFT', name: 'Microsoft Corporation', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'GOOGL', name: 'Alphabet Inc.', exchange: 'NASDAQ', sector: 'Technology' },\n    {\n      symbol: 'AMZN',\n      name: 'Amazon.com Inc.',\n      exchange: 'NASDAQ',\n      sector: 'Consumer Discretionary'\n    },\n    { symbol: 'TSLA', name: 'Tesla Inc.', exchange: 'NASDAQ', sector: 'Consumer Discretionary' },\n    { symbol: 'META', name: 'Meta Platforms Inc.', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'NVDA', name: 'NVIDIA Corporation', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'JPM', name: 'JPMorgan Chase & Co.', exchange: 'NYSE', sector: 'Financial Services' },\n    { symbol: 'JNJ', name: 'Johnson & Johnson', exchange: 'NYSE', sector: 'Healthcare' },\n    { symbol: 'V', name: 'Visa Inc.', exchange: 'NYSE', sector: 'Financial Services' }\n  ];\n\n  useEffect(() => {\n    if (searchTerm.length > 0) {\n      const filtered = symbolDatabase\n        .filter(\n          item =>\n            item.symbol.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            item.name.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n        .slice(0, 8);\n      setSuggestions(filtered);\n      setIsOpen(true);\n      setSelectedIndex(-1);\n    } else {\n      setSuggestions([]);\n      setIsOpen(false);\n    }\n  }, [searchTerm]);\n\n  const handleKeyDown = e => {\n    if (!isOpen) return;\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setSelectedIndex(prev => (prev < suggestions.length - 1 ? prev + 1 : prev));\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        setSelectedIndex(prev => (prev > 0 ? prev - 1 : -1));\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (selectedIndex >= 0) {\n          handleSymbolSelect(suggestions[selectedIndex]);\n        }\n        break;\n      case 'Escape':\n        setIsOpen(false);\n        setSelectedIndex(-1);\n        break;\n    }\n  };\n\n  const handleSymbolSelect = symbol => {\n    onSymbolSelect(symbol);\n    setSearchTerm('');\n    setIsOpen(false);\n    setSelectedIndex(-1);\n  };\n\n  const isInWatchlist = symbol => {\n    return watchlist.some(item => item.symbol === symbol);\n  };\n\n  return (\n    <div className=\"relative\" ref={searchRef}>\n      <div className=\"relative\">\n        <Input\n          type=\"text\"\n          placeholder=\"Search symbols (e.g., AAPL, Apple)...\"\n          value={searchTerm}\n          onChange={e => setSearchTerm(e.target.value)}\n          onKeyDown={handleKeyDown}\n          className=\"pl-10 pr-4\"\n        />\n        <Icon\n          name=\"Search\"\n          size={18}\n          className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\"\n        />\n      </div>\n\n      {/* Search Suggestions */}\n      {isOpen && suggestions.length > 0 && (\n        <div className=\"absolute top-full left-0 right-0 mt-1 bg-popover border border-border rounded-lg shadow-elevation-2 z-50 max-h-64 overflow-y-auto\">\n          {suggestions.map((item, index) => (\n            <div\n              key={item.symbol}\n              className={`\n                flex items-center justify-between p-3 cursor-pointer transition-smooth\n                ${index === selectedIndex ? 'bg-muted' : 'hover:bg-muted'}\n              `}\n              onClick={() => handleSymbolSelect(item)}\n            >\n              <div className=\"flex-1\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"font-semibold text-foreground\">{item.symbol}</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded text-muted-foreground\">\n                    {item.exchange}\n                  </span>\n                </div>\n                <div className=\"text-sm text-muted-foreground\">{item.name}</div>\n                <div className=\"text-xs text-muted-foreground\">{item.sector}</div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                {!isInWatchlist(item.symbol) && (\n                  <button\n                    onClick={e => {\n                      e.stopPropagation();\n                      onAddToWatchlist(item);\n                    }}\n                    className=\"p-1 text-muted-foreground hover:text-primary transition-smooth\"\n                    title=\"Add to watchlist\"\n                  >\n                    <Icon name=\"Star\" size={16} />\n                  </button>\n                )}\n                <Icon name=\"Plus\" size={16} className=\"text-muted-foreground\" />\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* No Results */}\n      {isOpen && searchTerm.length > 0 && suggestions.length === 0 && (\n        <div className=\"absolute top-full left-0 right-0 mt-1 bg-popover border border-border rounded-lg shadow-elevation-2 z-50 p-4 text-center\">\n          <div className=\"text-muted-foreground\">\n            <Icon name=\"Search\" size={24} className=\"mx-auto mb-2\" />\n            <p>No symbols found for \"{searchTerm}\"</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SymbolSearch;\n","import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst WatchlistPanel = ({ watchlist, onRemoveFromWatchlist, onSelectSymbol }) => {\n  const [sortBy, setSortBy] = useState('symbol');\n  const [sortOrder, setSortOrder] = useState('asc');\n\n  const sortedWatchlist = [...watchlist].sort((a, b) => {\n    let aValue = a[sortBy];\n    let bValue = b[sortBy];\n\n    if (typeof aValue === 'string') {\n      aValue = aValue.toLowerCase();\n      bValue = bValue.toLowerCase();\n    }\n\n    if (sortOrder === 'asc') {\n      return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n    } else {\n      return aValue > bValue ? -1 : aValue < bValue ? 1 : 0;\n    }\n  });\n\n  const handleSort = field => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('asc');\n    }\n  };\n\n  const getChangeColor = change => {\n    if (change > 0) return 'text-success';\n    if (change < 0) return 'text-error';\n    return 'text-muted-foreground';\n  };\n\n  const formatValue = (value, type) => {\n    switch (type) {\n      case 'currency':\n        return `$${value.toLocaleString('en-US', { minimumFractionDigits: 2 })}`;\n      case 'percentage':\n        return `${value.toFixed(2)}%`;\n      default:\n        return value;\n    }\n  };\n\n  return (\n    <div className=\"bg-card border border-border rounded-lg shadow-elevation-1\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-border\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"font-semibold text-foreground\">Watchlist</h3>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-muted-foreground\">{watchlist.length} symbols</span>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              iconName=\"MoreVertical\"\n              aria-label=\"Watchlist options\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Sort Controls */}\n      <div className=\"p-3 border-b border-border bg-muted/30\">\n        <div className=\"flex items-center space-x-2 text-xs\">\n          <span className=\"text-muted-foreground\">Sort by:</span>\n          {['symbol', 'name', 'price', 'change'].map(field => (\n            <button\n              key={field}\n              onClick={() => handleSort(field)}\n              className={`\n                flex items-center space-x-1 px-2 py-1 rounded transition-smooth\n                ${\n            sortBy === field\n              ? 'bg-primary text-primary-foreground'\n              : 'text-muted-foreground hover:text-foreground'\n            }\n              `}\n            >\n              <span className=\"capitalize\">{field}</span>\n              {sortBy === field && (\n                <Icon name={sortOrder === 'asc' ? 'ChevronUp' : 'ChevronDown'} size={12} />\n              )}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Watchlist Items */}\n      <div className=\"max-h-96 overflow-y-auto\">\n        {sortedWatchlist.length === 0 ? (\n          <div className=\"p-8 text-center\">\n            <Icon name=\"Star\" size={32} className=\"mx-auto mb-3 text-muted-foreground\" />\n            <p className=\"text-muted-foreground\">No symbols in watchlist</p>\n            <p className=\"text-sm text-muted-foreground mt-1\">\n              Search and add symbols to track them here\n            </p>\n          </div>\n        ) : (\n          sortedWatchlist.map(item => (\n            <div\n              key={item.symbol}\n              className=\"flex items-center justify-between p-3 border-b border-border last:border-b-0 hover:bg-muted/50 cursor-pointer transition-smooth\"\n              onClick={() => onSelectSymbol(item)}\n            >\n              <div className=\"flex-1\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"font-semibold text-foreground\">{item.symbol}</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded text-muted-foreground\">\n                    {item.exchange}\n                  </span>\n                </div>\n                <div className=\"text-sm text-muted-foreground truncate\">{item.name}</div>\n              </div>\n\n              <div className=\"text-right mr-3\">\n                <div className=\"font-semibold text-foreground\">\n                  {formatValue(item.price || 150.25, 'currency')}\n                </div>\n                <div className={`text-sm ${getChangeColor(item.change || 2.15)}`}>\n                  {item.change > 0 ? '+' : ''}\n                  {formatValue(Math.abs(item.change || 2.15), 'currency')}(\n                  {item.changePercent > 0 ? '+' : ''}\n                  {(item.changePercent || 1.45).toFixed(2)}%)\n                </div>\n              </div>\n\n              <button\n                onClick={e => {\n                  e.stopPropagation();\n                  onRemoveFromWatchlist(item.symbol);\n                }}\n                className=\"p-1 text-muted-foreground hover:text-error transition-smooth\"\n                title=\"Remove from watchlist\"\n              >\n                <Icon name=\"X\" size={16} />\n              </button>\n            </div>\n          ))\n        )}\n      </div>\n\n      {/* Footer Actions */}\n      {watchlist.length > 0 && (\n        <div className=\"p-3 border-t border-border bg-muted/30\">\n          <div className=\"flex items-center justify-between\">\n            <Button variant=\"ghost\" size=\"sm\" iconName=\"Download\">\n              Export\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\" iconName=\"Bell\">\n              Set Alerts\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WatchlistPanel;\n","import React, { useState, useEffect } from 'react';\n\nimport Icon from '../../components/AppIcon';\nimport Button from '../../components/ui/Button';\nimport Header from '../../components/ui/Header';\nimport SEOHead from '../../components/SEO/SEOHead';\nimport Breadcrumbs from '../../components/ui/Breadcrumbs';\nimport { useFinancialAccessibility } from '../../hooks/useAccessibility';\nimport { trackFinancialComponentPerformance } from '../../utils/performanceMonitoring';\nimport { dataValidationService } from '../../services/dataValidationService';\nimport { enhancedApiService } from '../../services/enhancedApiService';\nimport realTimeDataService from '../../services/realTimeDataService';\n\nimport ApiStatusPanel from './components/ApiStatusPanel';\nimport BulkOperationsPanel from './components/BulkOperationsPanel';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport DataSourceToggle from './components/DataSourceToggle';\nimport MarketDataWidget from './components/MarketDataWidget';\nimport SymbolSearch from './components/SymbolSearch';\nimport WatchlistPanel from './components/WatchlistPanel';\n\n// Import real data services\n\nconst RealTimeMarketDataCenter = () => {\n  // Add accessibility and performance monitoring\n  const { elementRef, testFinancialFeatures } = useFinancialAccessibility('market-data-center');\n\n  const [dataSources, setDataSources] = useState([\n    { id: 'yahoo', name: 'Yahoo Finance', enabled: true, status: 'connected', latency: 12, requiresKey: false },\n    { id: 'alpha_vantage', name: 'Alpha Vantage', enabled: false, status: 'disconnected', latency: 25, requiresKey: true },\n    { id: 'fmp', name: 'Financial Modeling Prep', enabled: false, status: 'disconnected', latency: 18, requiresKey: true },\n    { id: 'sec_edgar', name: 'SEC EDGAR', enabled: true, status: 'connected', latency: 45, requiresKey: false }\n  ]);\n\n  const [connectionHealth, setConnectionHealth] = useState({\n    overall: 'good',\n    sources: {\n      yahoo: 'connected',\n      alpha_vantage: 'disconnected',\n      fmp: 'disconnected',\n      sec_edgar: 'connected'\n    }\n  });\n\n  const [realDataEnabled, setRealDataEnabled] = useState(false);\n  const [apiHealthStatus, setApiHealthStatus] = useState({});\n  const [dataQuality, setDataQuality] = useState({});\n\n  const [widgets, setWidgets] = useState([\n    {\n      id: 'widget-1',\n      symbol: 'AAPL',\n      name: 'Apple Inc.',\n      currentValue: 182.52,\n      change: 2.15,\n      changePercent: 1.19,\n      valueType: 'currency',\n      dayHigh: 184.3,\n      dayLow: 180.15,\n      volume: 52847392,\n      source: 'Bloomberg',\n      lastUpdate: new Date(Date.now() - 2000),\n      sparklineData: [180.25, 181.15, 180.95, 182.1, 181.85, 182.52]\n    },\n    {\n      id: 'widget-2',\n      symbol: 'MSFT',\n      name: 'Microsoft Corporation',\n      currentValue: 378.85,\n      change: -1.25,\n      changePercent: -0.33,\n      valueType: 'currency',\n      dayHigh: 381.2,\n      dayLow: 377.5,\n      volume: 28394751,\n      source: 'FactSet',\n      lastUpdate: new Date(Date.now() - 1500),\n      sparklineData: [380.15, 379.85, 378.95, 379.4, 378.2, 378.85]\n    },\n    {\n      id: 'widget-3',\n      symbol: 'GOOGL',\n      name: 'Alphabet Inc.',\n      currentValue: 2847.35,\n      change: 15.8,\n      changePercent: 0.56,\n      valueType: 'currency',\n      dayHigh: 2855.0,\n      dayLow: 2830.15,\n      volume: 1847392,\n      source: 'Bloomberg',\n      lastUpdate: new Date(Date.now() - 3000),\n      sparklineData: [2835.25, 2841.15, 2838.95, 2845.1, 2843.85, 2847.35]\n    },\n    {\n      id: 'widget-4',\n      symbol: 'US10Y',\n      name: 'US 10-Year Treasury',\n      currentValue: 4.285,\n      change: 0.025,\n      changePercent: 0.59,\n      valueType: 'percentage',\n      dayHigh: 4.295,\n      dayLow: 4.26,\n      volume: null,\n      source: 'Refinitiv',\n      lastUpdate: new Date(Date.now() - 5000),\n      sparklineData: [4.26, 4.27, 4.275, 4.28, 4.285, 4.285]\n    }\n  ]);\n\n  const [watchlist, setWatchlist] = useState([\n    {\n      symbol: 'AAPL',\n      name: 'Apple Inc.',\n      exchange: 'NASDAQ',\n      sector: 'Technology',\n      price: 182.52,\n      change: 2.15,\n      changePercent: 1.19\n    },\n    {\n      symbol: 'MSFT',\n      name: 'Microsoft Corporation',\n      exchange: 'NASDAQ',\n      sector: 'Technology',\n      price: 378.85,\n      change: -1.25,\n      changePercent: -0.33\n    },\n    {\n      symbol: 'TSLA',\n      name: 'Tesla Inc.',\n      exchange: 'NASDAQ',\n      sector: 'Consumer Discretionary',\n      price: 248.42,\n      change: 5.67,\n      changePercent: 2.34\n    }\n  ]);\n\n  const [selectedSymbols, setSelectedSymbols] = useState([]);\n  const [lastUpdate, setLastUpdate] = useState('2 min ago');\n  const [refreshInterval, setRefreshInterval] = useState(5000);\n  const [isAutoRefresh, setIsAutoRefresh] = useState(true);\n\n  // Initialize real data services and check API health\n  useEffect(() => {\n    const initializeRealData = async() => {\n      try {\n        // Check API health status\n        const healthStatus = enhancedApiService.getSourceHealthStatus();\n        setApiHealthStatus(healthStatus);\n\n        // Update data sources based on API availability\n        setDataSources(prevSources =>\n          prevSources.map(source => {\n            const health = healthStatus[source.id.toUpperCase()];\n            if (health) {\n              return {\n                ...source,\n                enabled: health.hasValidApiKey || !health.requiresApiKey,\n                status: health.hasValidApiKey || !health.requiresApiKey ? 'connected' : 'disconnected'\n              };\n            }\n            return source;\n          })\n        );\n\n        // Enable real data if we have at least one working API\n        const hasWorkingApi = Object.values(healthStatus).some(\n          health => health.hasValidApiKey || !health.requiresApiKey\n        );\n        setRealDataEnabled(hasWorkingApi);\n\n      } catch (error) {\n        console.error('Failed to initialize real data services:', error);\n      }\n    };\n\n    initializeRealData();\n  }, []);\n\n  // Real-time updates with actual data or simulation\n  useEffect(() => {\n    if (!isAutoRefresh) return;\n\n    const interval = setInterval(async() => {\n      if (realDataEnabled) {\n        // Fetch real data for each widget\n        const updatedWidgets = await Promise.all(\n          widgets.map(async(widget) => {\n            try {\n              const marketData = await enhancedApiService.fetchRealTimeMarketData(widget.symbol);\n              const validation = dataValidationService.validateData(marketData, 'marketData');\n\n              return {\n                ...widget,\n                currentValue: marketData.currentPrice,\n                change: marketData.change,\n                changePercent: marketData.changePercent,\n                dayHigh: marketData.dayHigh,\n                dayLow: marketData.dayLow,\n                volume: marketData.volume,\n                lastUpdate: new Date(),\n                source: marketData.source,\n                dataQuality: validation.qualityScore,\n                sparklineData: [\n                  ...widget.sparklineData.slice(1),\n                  marketData.currentPrice\n                ]\n              };\n            } catch (error) {\n              console.warn(`Failed to fetch real data for ${widget.symbol}, using simulation:`, error);\n              // Fallback to simulation\n              return {\n                ...widget,\n                currentValue: widget.currentValue + (Math.random() - 0.5) * 2,\n                change: (Math.random() - 0.5) * 5,\n                changePercent: (Math.random() - 0.5) * 2,\n                lastUpdate: new Date(),\n                source: 'Simulation',\n                sparklineData: [\n                  ...widget.sparklineData.slice(1),\n                  widget.currentValue + (Math.random() - 0.5) * 2\n                ]\n              };\n            }\n          })\n        );\n        setWidgets(updatedWidgets);\n      } else {\n        // Fallback to simulation\n        setWidgets(prevWidgets =>\n          prevWidgets.map(widget => ({\n            ...widget,\n            currentValue: widget.currentValue + (Math.random() - 0.5) * 2,\n            change: (Math.random() - 0.5) * 5,\n            changePercent: (Math.random() - 0.5) * 2,\n            lastUpdate: new Date(),\n            source: 'Simulation',\n            sparklineData: [\n              ...widget.sparklineData.slice(1),\n              widget.currentValue + (Math.random() - 0.5) * 2\n            ]\n          }))\n        );\n      }\n      setLastUpdate('Just now');\n    }, refreshInterval);\n\n    return () => clearInterval(interval);\n  }, [refreshInterval, isAutoRefresh, realDataEnabled, widgets]);\n\n  const handleDataSourceToggle = sourceId => {\n    setDataSources(prev =>\n      prev.map(source =>\n        source.id === sourceId ? { ...source, enabled: !source.enabled } : source\n      )\n    );\n  };\n\n  const handleSymbolSelect = async(symbol) => {\n    try {\n      let marketData;\n      let source = 'Simulation';\n      let dataQuality = 75;\n\n      if (realDataEnabled) {\n        try {\n          marketData = await enhancedApiService.fetchRealTimeMarketData(symbol.symbol);\n          const validation = dataValidationService.validateData(marketData, 'marketData');\n          source = marketData.source;\n          dataQuality = validation.qualityScore;\n        } catch (error) {\n          console.warn(`Failed to fetch real data for ${symbol.symbol}, using simulation:`, error);\n          marketData = null;\n        }\n      }\n\n      const newWidget = {\n        id: `widget-${Date.now()}`,\n        symbol: symbol.symbol,\n        name: symbol.name,\n        currentValue: marketData?.currentPrice || Math.random() * 1000 + 50,\n        change: marketData?.change || (Math.random() - 0.5) * 10,\n        changePercent: marketData?.changePercent || (Math.random() - 0.5) * 5,\n        valueType: 'currency',\n        dayHigh: marketData?.dayHigh || Math.random() * 1000 + 60,\n        dayLow: marketData?.dayLow || Math.random() * 1000 + 40,\n        volume: marketData?.volume || Math.floor(Math.random() * 100000000),\n        source,\n        dataQuality,\n        lastUpdate: new Date(),\n        sparklineData: Array.from({ length: 6 }, () =>\n          marketData?.currentPrice || Math.random() * 1000 + 50\n        )\n      };\n\n      setWidgets(prev => [...prev, newWidget]);\n\n      // Subscribe to real-time updates for this symbol\n      if (realDataEnabled) {\n        realTimeDataService.subscribe(symbol.symbol, 'marketData', (data) => {\n          setWidgets(prevWidgets =>\n            prevWidgets.map(widget =>\n              widget.symbol === symbol.symbol\n                ? {\n                  ...widget,\n                  currentValue: data.currentPrice,\n                  change: data.change,\n                  changePercent: data.changePercent,\n                  lastUpdate: new Date(data.timestamp),\n                  source: data.source\n                }\n                : widget\n            )\n          );\n        });\n      }\n    } catch (error) {\n      console.error('Error adding symbol:', error);\n    }\n  };\n\n  const handleAddToWatchlist = symbol => {\n    if (!watchlist.some(item => item.symbol === symbol.symbol)) {\n      setWatchlist(prev => [\n        ...prev,\n        {\n          ...symbol,\n          price: Math.random() * 1000 + 50,\n          change: (Math.random() - 0.5) * 10,\n          changePercent: (Math.random() - 0.5) * 5\n        }\n      ]);\n    }\n  };\n\n  const handleRemoveFromWatchlist = symbol => {\n    setWatchlist(prev => prev.filter(item => item.symbol !== symbol));\n  };\n\n  const handleWidgetResize = widgetId => {\n    console.log('Resize widget:', widgetId);\n  };\n\n  const handleWidgetRemove = widgetId => {\n    setWidgets(prev => prev.filter(widget => widget.id !== widgetId));\n  };\n\n  const handleBulkExport = config => {\n    console.log('Bulk export:', config);\n    alert(`Exporting ${config.symbols.length} symbols in ${config.format.toUpperCase()} format`);\n  };\n\n  const handleBulkAlert = config => {\n    console.log('Bulk alert setup:', config);\n    alert(`Setting ${config.threshold}% alerts for ${config.symbols.length} symbols`);\n  };\n\n  const handleBulkHistorical = config => {\n    console.log('Bulk historical data:', config);\n    alert(`Fetching ${config.period} historical data for ${config.symbols.length} symbols`);\n  };\n\n  const handleRefresh = () => {\n    setLastUpdate('Just now');\n    // Trigger data refresh\n  };\n\n  const handleKeyboardShortcut = e => {\n    if (e.ctrlKey && e.key === 'f') {\n      e.preventDefault();\n      document.querySelector('input[placeholder*=\"Search symbols\"]')?.focus();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyboardShortcut);\n    return () => document.removeEventListener('keydown', handleKeyboardShortcut);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <SEOHead\n        title=\"Real-Time Market Data Center | Valor-IVX\"\n        description=\"Monitor real-time market data, track watchlists, and manage data sources across providers with alerts and exports.\"\n        canonical=\"/real-time-market-data-center\"\n      />\n      <Header />\n\n      <div className=\"pt-[60px]\">\n        {/* Breadcrumbs and accessible page heading */}\n        <div className=\"px-6 py-2 bg-background border-b border-border\">\n          <h1 className=\"sr-only\">Real-Time Market Data Center</h1>\n          <Breadcrumbs />\n        </div>\n        {/* Top Toolbar */}\n        <div className=\"bg-card border-b border-border p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-6\">\n              <DataSourceToggle dataSources={dataSources} onToggle={handleDataSourceToggle} />\n\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  iconName=\"RefreshCw\"\n                  onClick={handleRefresh}\n                  className={isAutoRefresh ? 'animate-spin' : ''}\n                >\n                  Refresh\n                </Button>\n                <Button\n                  variant={isAutoRefresh ? 'default' : 'outline'}\n                  size=\"sm\"\n                  iconName={isAutoRefresh ? 'Pause' : 'Play'}\n                  onClick={() => setIsAutoRefresh(!isAutoRefresh)}\n                >\n                  {isAutoRefresh ? 'Pause' : 'Resume'}\n                </Button>\n              </div>\n            </div>\n\n            <ConnectionStatus connectionHealth={connectionHealth} lastUpdate={lastUpdate} />\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"p-6\">\n          <div className=\"grid grid-cols-12 gap-6\">\n            {/* Left Sidebar */}\n            <div className=\"col-span-3 space-y-6\">\n              {/* Symbol Search */}\n              <div className=\"bg-card border border-border rounded-lg p-4 shadow-elevation-1\">\n                <h3 className=\"font-semibold text-foreground mb-4\">Add Symbols</h3>\n                <SymbolSearch\n                  onSymbolSelect={handleSymbolSelect}\n                  watchlist={watchlist}\n                  onAddToWatchlist={handleAddToWatchlist}\n                />\n                <div className=\"mt-3 text-xs text-muted-foreground\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Icon name=\"Keyboard\" size={12} />\n                    <span>Ctrl+F to focus search</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Watchlist */}\n              <WatchlistPanel\n                watchlist={watchlist}\n                onRemoveFromWatchlist={handleRemoveFromWatchlist}\n                onSelectSymbol={handleSymbolSelect}\n              />\n\n              {/* Bulk Operations */}\n              <BulkOperationsPanel\n                selectedSymbols={selectedSymbols}\n                onBulkExport={handleBulkExport}\n                onBulkAlert={handleBulkAlert}\n                onBulkHistorical={handleBulkHistorical}\n              />\n\n              {/* API Status & Data Quality */}\n              <ApiStatusPanel\n                apiHealthStatus={apiHealthStatus}\n                realDataEnabled={realDataEnabled}\n                dataSources={dataSources}\n                dataQuality={dataQuality}\n              />\n            </div>\n\n            {/* Main Data Grid */}\n            <div className=\"col-span-9\">\n              <div className=\"mb-4 flex items-center justify-between\">\n                <h2 className=\"text-xl font-semibold text-foreground\">\n                  Market Data Widgets ({widgets.length})\n                </h2>\n                <div className=\"flex items-center space-x-2\">\n                  <Button variant=\"outline\" size=\"sm\" iconName=\"Settings\">\n                    Layout\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" iconName=\"Save\">\n                    Save Dashboard\n                  </Button>\n                </div>\n              </div>\n\n              {/* Widgets Grid */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">\n                {widgets.map(widget => (\n                  <MarketDataWidget\n                    key={widget.id}\n                    widget={widget}\n                    onResize={handleWidgetResize}\n                    onRemove={handleWidgetRemove}\n                  />\n                ))}\n              </div>\n\n              {/* Empty State */}\n              {widgets.length === 0 && (\n                <div className=\"text-center py-12\">\n                  <Icon name=\"BarChart3\" size={48} className=\"mx-auto mb-4 text-muted-foreground\" />\n                  <h3 className=\"text-lg font-semibold text-foreground mb-2\">No Data Widgets</h3>\n                  <p className=\"text-muted-foreground mb-4\">\n                    Search and add symbols to start monitoring market data\n                  </p>\n                  <Button variant=\"outline\" iconName=\"Plus\">\n                    Add Your First Widget\n                  </Button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Status Bar */}\n        <div className=\"fixed bottom-0 left-0 right-0 bg-card border-t border-border p-2\">\n          <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n            <div className=\"flex items-center space-x-4\">\n              <span>Active Widgets: {widgets.length}</span>\n              <span>Watchlist: {watchlist.length}</span>\n              <span>Auto-refresh: {isAutoRefresh ? 'ON' : 'OFF'}</span>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <span>Market Hours: OPEN</span>\n              <span>Last Update: {lastUpdate}</span>\n              <div className=\"flex items-center space-x-1\">\n                <div className=\"w-2 h-2 bg-success rounded-full\" />\n                <span>All systems operational</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RealTimeMarketDataCenter;\n"],"names":["dataValidationService","constructor","this","validationRules","initializeValidationRules","qualityMetrics","Map","anomalyDetection","marketData","required","numeric","ranges","currentPrice","min","max","volume","changePercent","formats","symbol","timestamp","financialStatements","revenue","netIncome","companyProfile","pe","pb","beta","dcfModel","custom","data","errors","Array","isArray","cashFlows","length","push","discountRate","warnings","lboModel","debtFinancing","equityFinancing","purchasePrice","total","Math","abs","stockData","trim","price","validateData","dataType","rules","isValid","field","undefined","value","parseFloat","isNaN","range","pattern","Object","entries","test","businessValidation","validateBusinessLogic","customValidation","apiLogger","log","qualityScore","calculateQualityScore","error","previousClose","calculatedChange","calculatedChangePercent","change","toFixed","dayHigh","dayLow","netMargin","totalCurrentAssets","totalCurrentLiabilities","currentRatio","crossValidateData","dataSources","isConsistent","discrepancies","recommendedSource","source","numericFields","values","filter","map","mean","reduce","sum","item","maxDeviation","threshold","sourceQuality","validation","errorCount","warningCount","sort","a","b","detectAnomalies","timeSeries","point","v","val","variance","pow","stdDev","sqrt","anomalies","forEach","index","zScore","deviation","severity","getValidationSummary","Date","toISOString","completeness","calculateCompleteness","freshness","calculateFreshness","allFields","keys","uniqueFields","Set","dataTime","ageMinutes","sanitizeInput","input","String","replace","isInRange","isValidPercentage","isValidNumber","isFinite","isValidArray","isValidObject","validateFinancialRatios","ratios","debtToEquity","returnOnEquity","API_CONFIG","baseURL","DATA_SOURCE_PRIORITY","secFilings","economicData","peers","RateLimiter","requestsPerInterval","interval","requestTimestamps","acquire","now","timeToWait","Promise","resolve","setTimeout","enhancedApiService","rateLimiters","sourceHealth","lastRequests","apiKeys","loadApiKeys","cache","rateLimitInfo","remaining","reset","initializeSourceHealth","set","ALPHA_VANTAGE","FMP","QUANDL","FRED","availableKeys","_","key","totalKeys","status","successRate","avgResponseTime","lastError","requestCount","lastHealthCheck","hasValidApiKey","getBestSource","priorityList","health","get","requiresApiKey","includes","fetchRealTimeMarketData","options","fetchFromYahooFinance","fetchFromAlphaVantage","Error","updateSourceHealth","normalizeMarketData","s","message","excludeSource","url","params","includePrePost","events","fullUrl","URL","search","URLSearchParams","toString","response","fetch","pathname","signal","AbortSignal","timeout","headers","ok","responseData","json","chart","result","function_name","config","function","apikey","fetchComprehensiveData","results","promises","method","async","dataFetchingService","allSettled","sources","getSourcesUsed","rawData","normalizeYahooData","normalizeAlphaVantageData","meta","quote","indicators","latest","open","high","low","close","regularMarketPrice","regularMarketDayHigh","regularMarketDayLow","regularMarketVolume","marketCap","currency","exchangeName","regularMarketTime","globalQuote","parseInt","success","responseTime","getSourceHealthStatus","add","from","baseUrl","defaultHeaders","authToken","cacheTTL","requestInterceptors","responseInterceptors","metrics","totalRequests","successfulRequests","failedRequests","request","startTime","limiter","startsWith","cacheKey","has","cached","Authorization","interceptor","controller","AbortController","timeoutId","abort","clearTimeout","errorData","text","setAuthToken","token","setCacheTTL","ttl","batchRequests","requests","req","reason","addRequestInterceptor","addResponseInterceptor","requestWithRetry","retries","i","delay","setBaseUrl","getBaseUrl","setDefaultHeaders","getDefaultHeaders","getTimeout","getMetrics","resetMetrics","getRateLimitInfo","clearCache","clear","ApiStatusPanel","apiHealthStatus","realDataEnabled","dataQuality","getStatusIcon","jsx","CheckCircle","className","XCircle","AlertTriangle","getStatusColor","connectedSources","totalSources","connectionPercentage","Card","children","CardHeader","jsxs","CardTitle","Wifi","CardContent","Badge","Progress","name","requiresKey","Key","title","variant","latency","id","toLowerCase","quality","Alert","AlertDescription","BulkOperationsPanel","selectedSymbols","onBulkExport","onBulkAlert","onBulkHistorical","isExpanded","setIsExpanded","useState","exportFormat","setExportFormat","alertThreshold","setAlertThreshold","historicalPeriod","setHistoricalPeriod","onClick","Icon","size","color","slice","onChange","e","target","Button","iconName","symbols","format","Input","type","placeholder","disabled","period","ceil","ConnectionStatus","connectionHealth","lastUpdate","overall","DataSourceToggle","onToggle","enabled","MarketDataWidget","widget","onResize","onRemove","formatValue","toLocaleString","minimumFractionDigits","diffSeconds","getFreshnessColor","toLocaleTimeString","currentValue","valueType","getChangeIcon","sparklineData","style","height","minHeight","SymbolSearch","onSymbolSelect","watchlist","onAddToWatchlist","searchTerm","setSearchTerm","suggestions","setSuggestions","isOpen","setIsOpen","selectedIndex","setSelectedIndex","searchRef","useRef","symbolDatabase","exchange","sector","useEffect","filtered","handleSymbolSelect","ref","onKeyDown","preventDefault","prev","some","stopPropagation","WatchlistPanel","onRemoveFromWatchlist","onSelectSymbol","sortBy","setSortBy","sortOrder","setSortOrder","sortedWatchlist","aValue","bValue","handleSort","RealTimeMarketDataCenter","useFinancialAccessibility","setDataSources","setConnectionHealth","yahoo","alpha_vantage","fmp","sec_edgar","setRealDataEnabled","setApiHealthStatus","setDataQuality","widgets","setWidgets","setWatchlist","setSelectedSymbols","setLastUpdate","refreshInterval","setRefreshInterval","isAutoRefresh","setIsAutoRefresh","healthStatus","prevSources","toUpperCase","hasWorkingApi","initializeRealData","setInterval","updatedWidgets","all","random","prevWidgets","clearInterval","newWidget","floor","realTimeDataService","subscribe","handleWidgetResize","widgetId","handleWidgetRemove","handleKeyboardShortcut","ctrlKey","document","querySelector","focus","addEventListener","removeEventListener","SEOHead","description","canonical","Header","Breadcrumbs","sourceId","alert"],"mappings":"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"}