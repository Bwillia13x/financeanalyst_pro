{"version":3,"mappings":"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","names":["Icon","name","size","color","className","strokeWidth","props","IconComponent","LucideIcons","jsx","HelpCircle","propTypes","PropTypes","string","isRequired","number","LoadingSpinner","text","showText","variant","variantClasses","primary","secondary","muted","white","cn","children","sm","default","lg","xl","LABELS","Breadcrumbs","segments","useLocation","pathname","split","filter","Boolean","items","map","seg","idx","path","slice","join","label","replace","c","toUpperCase","jsxs","Link","to","item","length","buttonVariants","cva","variants","destructive","outline","ghost","link","success","warning","danger","icon","xs","defaultVariants","Button","React","forwardRef","asChild","loading","iconName","iconPosition","iconSize","fullWidth","disabled","ref","Comp","Slot","calculatedIconSize","fill","viewBox","cx","cy","r","stroke","d","renderIcon","displayName","SkipLink","href","Header","location","isUserMenuOpen","setIsUserMenuOpen","useState","navigationTabs","id","tooltip","modelState","find","tab","Fragment","role","title","action","onClick","Alert","AlertDescription","Badge","variantClass","Card","CardHeader","CardTitle","CardContent","Progress","value","clamped","Math","min","max","style","width","Input","type","description","error","required","inputId","random","toString","substr","htmlFor","Select","options","defaultValue","placeholder","multiple","searchable","clearable","onChange","onOpenChange","isOpen","setIsOpen","searchTerm","setSearchTerm","selectId","filteredOptions","option","toLowerCase","includes","isSelected","optionValue","hasValue","newIsOpen","selectedOptions","opt","selectedOption","getSelectedDisplay","e","stopPropagation","X","ChevronDown","tabIndex","Search","target","newValue","updatedValue","v","handleOptionSelect","Check","checked","indeterminate","checkboxId","Minus","lazy","__vitePreload","import","__VITE_PRELOAD__","then","module","data","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","height","strokeDasharray","fontSize","contentStyle","backgroundColor","border","borderRadius","dataKey","radius","ScatterChart","Scatter","AreaChart","Area","FinancialInput","onBlur","prefix","suffix","locale","currency","decimals","allowNegative","autoFocus","onValidation","displayValue","setDisplayValue","isFocused","setIsFocused","isValid","setIsValid","inputRef","useRef","componentRef","formatValue","val","numValue","parseFloat","isNaN","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","parseValue","cleanValue","useEffect","current","focus","DollarSign","Percent","Calculator","getIcon","test","onFocus","rawValue","setTimeout","select","valid","errorMessage","validateInput","onKeyPress","key","preventDefault","blur","AlertCircle","EditableCell","onSave","onCancel","isFormula","isEditing","onEdit","showEditIcon","editingValue","setEditingValue","localError","setLocalError","isHovered","setIsHovered","formatted","absValue","abs","handleSave","finalValue","handleCancel","styles","container","hover","input","editIcon","getVariantStyles","onKeyDown","onMouseEnter","onMouseLeave","Edit2","CURRENCY_CONFIG","USD","symbol","code","EUR","GBP","JPY","CAD","AUD","CHF","CNY","CurrencyInput","showCurrency","showTrend","previousValue","step","abbreviateDisplay","precision","validationMessage","setValidationMessage","currencyConfig","effectiveDecimals","effectivePlaceholder","useMemo","formatCurrency","forDisplay","abbreviated","sign","toFixed","parseCurrency","str","multiplier","endsWith","trend","previous","getTrend","message","filled","minimal","TrendingUp","TrendingDown","LoadingState","showIcon","config","spinner","gap","padding","variantStyles","subtle","pulsing","displayMessage","calculation","financial","percentage","LoadingSkeleton","LoadingDots","sizeClasses","i","animationDelay","animationDuration","ValidationFeedback","dismissible","onDismiss","position","AlertTriangle","CheckCircle","info","Info","bg","getVariantClasses","FieldValidation","ValidationList","showNumbers","index","ValidationSummary","errors","warnings","collapsible","isCollapsed","setIsCollapsed","totalIssues","allItems"],"ignoreList":[],"sources":["../../src/components/AppIcon.jsx","../../src/components/ui/LoadingSpinner.jsx","../../src/components/ui/Breadcrumbs.jsx","../../src/components/ui/Button.jsx","../../src/components/ui/SkipLink.jsx","../../src/components/ui/Header.jsx","../../src/components/ui/Alert.jsx","../../src/components/ui/Badge.jsx","../../src/components/ui/Card.jsx","../../src/components/ui/Progress.jsx","../../src/components/ui/Input.jsx","../../src/components/ui/Select.jsx","../../src/components/ui/Checkbox.jsx","../../src/components/ui/LazyChart.jsx","../../src/components/ui/FinancialInput.jsx","../../src/components/ui/EditableCell.jsx","../../src/components/ui/CurrencyInput.jsx","../../src/components/ui/LoadingState.jsx","../../src/components/ui/ValidationFeedback.jsx"],"sourcesContent":["import * as LucideIcons from 'lucide-react';\nimport { HelpCircle } from 'lucide-react';\nimport PropTypes from 'prop-types';\n\nfunction Icon({\n  name,\n  size = 24,\n  color = 'currentColor',\n  className = '',\n  strokeWidth = 2,\n  ...props\n}) {\n  const IconComponent = LucideIcons[name];\n\n  if (!IconComponent) {\n    return (\n      <HelpCircle\n        size={size}\n        color=\"gray\"\n        strokeWidth={strokeWidth}\n        className={className}\n        {...props}\n      />\n    );\n  }\n\n  return (\n    <IconComponent\n      size={size}\n      color={color}\n      strokeWidth={strokeWidth}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  strokeWidth: PropTypes.number\n};\n\nexport default Icon;\n","import { cn } from '../../utils/cn';\n\nconst LoadingSpinner = ({\n  size = 'default',\n  className = '',\n  text = 'Loading...',\n  showText = true,\n  variant = 'primary'\n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    default: 'w-8 h-8',\n    lg: 'w-12 h-12',\n    xl: 'w-16 h-16'\n  };\n\n  const variantClasses = {\n    primary: 'text-primary',\n    secondary: 'text-secondary',\n    muted: 'text-muted-foreground',\n    white: 'text-white'\n  };\n\n  const textSizeClasses = {\n    sm: 'text-xs',\n    default: 'text-sm',\n    lg: 'text-base',\n    xl: 'text-lg'\n  };\n\n  return (\n    <div className={cn('flex flex-col items-center justify-center space-y-2', className)}>\n      <div\n        className={cn(\n          'animate-spin rounded-full border-2 border-current border-t-transparent',\n          sizeClasses[size],\n          variantClasses[variant]\n        )}\n      />\n      {showText && (\n        <p className={cn('font-medium', textSizeClasses[size], variantClasses[variant])}>{text}</p>\n      )}\n    </div>\n  );\n};\n\n// Full page loading spinner\nexport const FullPageLoader = ({ text = 'Loading Valor-IVX...' }) => {\n  return (\n    <div className=\"fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center\">\n      <div className=\"bg-card border border-border rounded-lg p-8 shadow-elevation-2\">\n        <LoadingSpinner size=\"lg\" text={text} variant=\"primary\" />\n      </div>\n    </div>\n  );\n};\n\n// Inline loading spinner for buttons\nexport const ButtonSpinner = ({ className = '' }) => {\n  return (\n    <div\n      className={cn(\n        'animate-spin rounded-full border-2 border-current border-t-transparent w-4 h-4',\n        className\n      )}\n    />\n  );\n};\n\n// Skeleton loader for content\nexport const SkeletonLoader = ({ lines = 3, className = '', animated = true }) => {\n  return (\n    <div className={cn('space-y-2', className)}>\n      {Array.from({ length: lines }).map((_, index) => (\n        <div\n          key={index}\n          className={cn(\n            'h-4 bg-muted rounded',\n            animated && 'animate-pulse',\n            index === lines - 1 && 'w-3/4' // Last line shorter\n          )}\n        />\n      ))}\n    </div>\n  );\n};\n\n// Chart loading placeholder\nexport const ChartLoader = ({ className = '' }) => {\n  return (\n    <div\n      className={cn(\n        'flex items-center justify-center h-64 bg-muted/20 rounded-lg border-2 border-dashed border-muted',\n        className\n      )}\n    >\n      <div className=\"text-center space-y-2\">\n        <LoadingSpinner size=\"lg\" variant=\"muted\" showText={false} />\n        <p className=\"text-sm text-muted-foreground\">Loading chart data...</p>\n      </div>\n    </div>\n  );\n};\n\n// Table loading placeholder\nexport const TableLoader = ({ rows = 5, columns = 4, className = '' }) => {\n  return (\n    <div className={cn('space-y-2', className)}>\n      {/* Header */}\n      <div className=\"grid gap-4\" style={{ gridTemplateColumns: `repeat(${columns}, 1fr)` }}>\n        {Array.from({ length: columns }).map((_, index) => (\n          <div key={`header-${index}`} className=\"h-6 bg-muted rounded animate-pulse\" />\n        ))}\n      </div>\n\n      {/* Rows */}\n      {Array.from({ length: rows }).map((_, rowIndex) => (\n        <div\n          key={`row-${rowIndex}`}\n          className=\"grid gap-4\"\n          style={{ gridTemplateColumns: `repeat(${columns}, 1fr)` }}\n        >\n          {Array.from({ length: columns }).map((_, colIndex) => (\n            <div\n              key={`cell-${rowIndex}-${colIndex}`}\n              className=\"h-4 bg-muted/60 rounded animate-pulse\"\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst LABELS = {\n  'financial-model-workspace': 'Workspace',\n  'real-time-market-data-center': 'Market Data',\n  'scenario-analysis-sensitivity-tools': 'Analysis',\n  'private-analysis': 'Private Analysis',\n};\n\nconst Breadcrumbs = () => {\n  const location = useLocation();\n  const segments = location.pathname.split('/').filter(Boolean);\n\n  const items = segments.map((seg, idx) => {\n    const path = `/${segments.slice(0, idx + 1).join('/')}`;\n    return {\n      label: LABELS[seg] || seg.replace(/-/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase()),\n      path,\n    };\n  });\n\n  return (\n    <nav aria-label=\"Breadcrumb\">\n      <ol className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n        <li>\n          <Link to=\"/\" className=\"hover:text-foreground\">Home</Link>\n        </li>\n        {items.map((item, idx) => (\n          <li key={item.path} className=\"flex items-center gap-2\">\n            <span aria-hidden=\"true\" className=\"text-muted-foreground\">/</span>\n            {idx < items.length - 1 ? (\n              <Link to={item.path} className=\"hover:text-foreground\">{item.label}</Link>\n            ) : (\n              <span className=\"text-foreground\" aria-current=\"page\">{item.label}</span>\n            )}\n          </li>\n        ))}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumbs;\n","import { Slot } from '@radix-ui/react-slot';\nimport { cva } from 'class-variance-authority';\nimport React from 'react';\n\nimport { cn } from '../../utils/cn';\nimport Icon from '../AppIcon';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n        success: 'bg-success text-success-foreground hover:bg-success/90',\n        warning: 'bg-warning text-warning-foreground hover:bg-warning/90',\n        danger: 'bg-error text-error-foreground hover:bg-error/90'\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n        xs: 'h-8 rounded-md px-2 text-xs',\n        xl: 'h-12 rounded-md px-10 text-base'\n      }\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default'\n    }\n  }\n);\n\nconst Button = React.forwardRef(\n  (\n    {\n      className,\n      variant,\n      size,\n      asChild = false,\n      children,\n      loading = false,\n      iconName = null,\n      iconPosition = 'left',\n      iconSize = null,\n      fullWidth = false,\n      disabled = false,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : 'button';\n\n    // Icon size mapping based on button size\n    const iconSizeMap = {\n      xs: 12,\n      sm: 14,\n      default: 16,\n      lg: 18,\n      xl: 20,\n      icon: 16\n    };\n\n    const calculatedIconSize = iconSize || iconSizeMap[size] || 16;\n\n    // Loading spinner\n    const LoadingSpinner = () => (\n      <svg\n        className=\"animate-spin -ml-1 mr-2 h-4 w-4\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        data-loading=\"true\"\n      >\n        <circle\n          className=\"opacity-25\"\n          cx=\"12\"\n          cy=\"12\"\n          r=\"10\"\n          stroke=\"currentColor\"\n          strokeWidth=\"4\"\n        />\n        <path\n          className=\"opacity-75\"\n          fill=\"currentColor\"\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        />\n      </svg>\n    );\n\n    // Icon rendering\n    const renderIcon = () => {\n      if (!iconName) return null;\n\n      return (\n        <Icon\n          name={iconName}\n          size={calculatedIconSize}\n          className={cn(\n            children && iconPosition === 'left' && 'mr-2',\n            children && iconPosition === 'right' && 'ml-2'\n          )}\n        />\n      );\n    };\n\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }), fullWidth && 'w-full')}\n        ref={ref}\n        disabled={disabled || loading}\n        {...props}\n      >\n        {loading && <LoadingSpinner />}\n        {iconName && iconPosition === 'left' && renderIcon()}\n        {children}\n        {iconName && iconPosition === 'right' && renderIcon()}\n      </Comp>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n\nexport default Button;\n","import React from 'react';\n\nconst SkipLink = ({ href = \"#main-content\", children = \"Skip to main content\" }) => {\n  return (\n    <a\n      href={href}\n      className=\"\n        sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 \n        bg-primary text-primary-foreground px-4 py-2 rounded-md z-[9999]\n        font-medium shadow-lg transition-all duration-200\n        focus:outline-2 focus:outline-blue-500 focus:outline-offset-2\n      \"\n    >\n      {children}\n    </a>\n  );\n};\n\nexport default SkipLink;","import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Icon from '../AppIcon';\n\nimport Button from './Button';\nimport SkipLink from './SkipLink';\n\nconst Header = () => {\n  const location = useLocation();\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n\n  const navigationTabs = [\n    {\n      id: 'workspace',\n      label: 'Workspace',\n      path: '/financial-model-workspace',\n      tooltip: 'Primary financial modeling environment with terminal interface and formula builder'\n    },\n    {\n      id: 'market-data',\n      label: 'Market Data',\n      path: '/real-time-market-data-center',\n      tooltip: 'Real-time data aggregation from Bloomberg, FactSet, and Refinitiv feeds'\n    },\n    {\n      id: 'analysis',\n      label: 'Analysis',\n      path: '/scenario-analysis-sensitivity-tools',\n      tooltip: 'Scenario modeling and Monte Carlo simulation tools with sensitivity analysis'\n    },\n    {\n      id: 'private-analysis',\n      label: 'Private Analysis',\n      path: '/private-analysis',\n      tooltip: 'Manual financial data input and sophisticated modeling with spreadsheet-style interface'\n    }\n  ];\n\n  const quickActions = [\n    { id: 'export', icon: 'Download', label: 'Export' },\n    { id: 'share', icon: 'Share2', label: 'Share' },\n    { id: 'template', icon: 'FileTemplate', label: 'Template' }\n  ];\n\n  const getActiveTab = () => {\n    return navigationTabs.find(tab => location.pathname === tab.path);\n  };\n\n  const getDataSyncStatus = () => {\n    return {\n      status: 'connected',\n      lastUpdate: '2 min ago',\n      sources: {\n        bloomberg: 'connected',\n        factset: 'connected',\n        refinitiv: 'warning'\n      }\n    };\n  };\n\n  const getModelState = () => {\n    return {\n      name: 'DCF_Analysis_v2.3',\n      saved: true,\n      calculating: false,\n      version: '2.3'\n    };\n  };\n\n  const dataSyncStatus = getDataSyncStatus();\n  const modelState = getModelState();\n  const activeTab = getActiveTab();\n\n  return (\n    <>\n      <SkipLink />\n      <header className=\"fixed top-0 left-0 right-0 z-[1000] bg-card border-b border-border h-[60px]\" role=\"banner\">\n        <div className=\"flex items-center h-full px-6\">\n        {/* Logo */}\n        <div className=\"flex items-center\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-8 h-8 bg-primary rounded-lg flex items-center justify-center\">\n              <Icon name=\"TrendingUp\" size={20} color=\"white\" />\n            </div>\n            <span className=\"text-xl font-semibold text-foreground\">Valor-IVX</span>\n          </div>\n        </div>\n\n        {/* Navigation Tabs */}\n        <nav className=\"flex items-center ml-8 space-x-1\" role=\"navigation\" aria-label=\"Main navigation\">\n          {navigationTabs.map(tab => (\n            <Link\n              key={tab.id}\n              to={tab.path}\n              className={`\n                relative px-6 py-3 text-sm font-medium transition-smooth rounded-lg\n                ${\n            location.pathname === tab.path\n              ? 'bg-primary text-primary-foreground'\n              : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n            }\n              `}\n              title={tab.tooltip}\n            >\n              {tab.label}\n              {location.pathname === tab.path && (\n                <div className=\"absolute bottom-0 left-1/2 transform -translate-x-1/2 w-1 h-1 bg-primary-foreground rounded-full\" />\n              )}\n            </Link>\n          ))}\n        </nav>\n\n        {/* Model State Indicator */}\n        <div className=\"flex items-center ml-6 px-3 py-1 bg-muted rounded-lg\">\n          <div className=\"flex items-center space-x-2\">\n            <div\n              className={`w-2 h-2 rounded-full ${modelState.saved ? 'bg-success' : 'bg-warning'}`}\n            />\n            <span className=\"text-sm font-mono text-muted-foreground\">{modelState.name}</span>\n            <span className=\"text-xs text-muted-foreground\">v{modelState.version}</span>\n          </div>\n        </div>\n\n        {/* Right Side */}\n        <div className=\"flex items-center ml-auto space-x-4\">\n          {/* Data Sync Status */}\n          <div className=\"flex items-center space-x-2 px-3 py-1 bg-muted rounded-lg\">\n            <div\n              className={`w-2 h-2 rounded-full ${\n                dataSyncStatus.status === 'connected'\n                  ? 'bg-success'\n                  : dataSyncStatus.status === 'warning'\n                    ? 'bg-warning'\n                    : 'bg-error'\n              }`}\n            />\n            <span className=\"text-xs text-muted-foreground\">Data: {dataSyncStatus.lastUpdate}</span>\n            <Icon name=\"Wifi\" size={14} className=\"text-muted-foreground\" />\n          </div>\n\n          {/* Quick Actions */}\n          <div className=\"flex items-center space-x-1\">\n            {quickActions.map(action => (\n              <Button\n                key={action.id}\n                variant=\"ghost\"\n                size=\"sm\"\n                iconName={action.icon}\n                className=\"text-muted-foreground hover:text-foreground\"\n                title={action.label}\n              >\n                <span className=\"sr-only\">{action.label}</span>\n              </Button>\n            ))}\n          </div>\n\n          {/* User Context Panel */}\n          <div className=\"relative\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setIsUserMenuOpen(!isUserMenuOpen)}\n              className=\"flex items-center space-x-2 text-muted-foreground hover:text-foreground\"\n            >\n              <div className=\"w-8 h-8 bg-secondary rounded-full flex items-center justify-center\">\n                <Icon name=\"User\" size={16} color=\"white\" />\n              </div>\n              <div className=\"hidden md:flex flex-col items-start\">\n                <span className=\"text-sm font-medium\">Senior Analyst</span>\n                <span className=\"text-xs text-muted-foreground\">Active Session</span>\n              </div>\n              <Icon name=\"ChevronDown\" size={16} />\n            </Button>\n\n            {/* User Dropdown */}\n            {isUserMenuOpen && (\n              <div className=\"absolute right-0 top-full mt-2 w-64 bg-popover border border-border rounded-lg shadow-elevation-2 z-[1100]\">\n                <div className=\"p-4 border-b border-border\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-10 h-10 bg-secondary rounded-full flex items-center justify-center\">\n                      <Icon name=\"User\" size={20} color=\"white\" />\n                    </div>\n                    <div>\n                      <p className=\"font-medium text-popover-foreground\">John Anderson</p>\n                      <p className=\"text-sm text-muted-foreground\">Senior Investment Analyst</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"p-2\">\n                  <div className=\"space-y-1\">\n                    <button className=\"w-full text-left px-3 py-2 text-sm text-popover-foreground hover:bg-muted rounded-md transition-smooth\">\n                      Profile Settings\n                    </button>\n                    <button className=\"w-full text-left px-3 py-2 text-sm text-popover-foreground hover:bg-muted rounded-md transition-smooth\">\n                      Permissions\n                    </button>\n                    <button className=\"w-full text-left px-3 py-2 text-sm text-popover-foreground hover:bg-muted rounded-md transition-smooth\">\n                      Active Collaborators (3)\n                    </button>\n                    <div className=\"border-t border-border my-1\" />\n                    <button className=\"w-full text-left px-3 py-2 text-sm text-destructive hover:bg-muted rounded-md transition-smooth\">\n                      Sign Out\n                    </button>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </header>\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport { cn } from '../../utils/cn';\n\n/**\n * Minimal alert component group with shadcn-like API used only in a few internal pages.\n * Allows import { Alert, AlertDescription } from \"components/ui/Alert\".\n */\nconst Alert = React.forwardRef(({ className = 'relative w-full rounded-lg border p-4', ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    {...props}\n    className={cn('bg-card text-card-foreground', className)}\n  />\n));\nAlert.displayName = 'Alert';\n\nconst AlertDescription = React.forwardRef(({ className = 'text-sm [&_p]:leading-relaxed', ...props }, ref) => (\n  <div ref={ref} className={cn(className)} {...props} />\n));\nAlertDescription.displayName = 'AlertDescription';\n\nexport { Alert, AlertDescription };\nexport default Alert;\n","import React from 'react';\n\nimport { cn } from '../../utils/cn';\n\n/**\n * Minimal Badge component used only for tests / non-critical UI.\n * Provides a semantic <span> element with utility classes similar to shadcn/ui.\n */\nconst Badge = React.forwardRef(\n  (\n    {\n      className = 'inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium bg-muted text-foreground',\n      variant = 'default', // 'default' | 'outline'\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const variantClass =\n      variant === 'outline'\n        ? 'border border-input bg-transparent'\n        : 'bg-primary text-primary-foreground';\n\n    return (\n      <span ref={ref} className={cn(className, variantClass)} {...props}>\n        {children}\n      </span>\n    );\n  }\n);\nBadge.displayName = 'Badge';\n\nexport { Badge };\nexport default Badge;\n","import React from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('rounded-lg border bg-card text-card-foreground shadow-sm', className)}\n    {...props}\n  />\n));\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('flex flex-col space-y-1.5 p-6', className)} {...props} />\n));\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3 ref={ref} className={cn('text-2xl font-semibold leading-none tracking-tight', className)} {...props} />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p ref={ref} className={cn('text-sm text-muted-foreground', className)} {...props} />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('flex items-center p-6 pt-0', className)} {...props} />\n));\nCardFooter.displayName = 'CardFooter';\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };\n","import React from 'react';\n\nimport { cn } from '../../utils/cn';\n\n/**\n * Simple progress bar component.\n * Accepts `value` (0-100) and optional className.\n */\nconst Progress = React.forwardRef(({ value = 0, className = 'h-1 bg-muted', ...props }, ref) => {\n  const clamped = Math.min(100, Math.max(0, value));\n  return (\n    <div ref={ref} className={cn('w-full rounded bg-muted/50', className)} {...props}>\n      <div\n        className=\"h-full rounded bg-primary transition-all\"\n        style={{ width: `${clamped}%` }}\n      />\n    </div>\n  );\n});\n\nProgress.displayName = 'Progress';\n\nexport { Progress };\nexport default Progress;\n","import React from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst Input = React.forwardRef(\n  (\n    { className, type = 'text', label, description, error, required = false, id, ...props },\n    ref\n  ) => {\n    // Generate unique ID if not provided\n    const inputId = id || `input-${Math.random().toString(36).substr(2, 9)}`;\n\n    // Base input classes\n    const baseInputClasses =\n      'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50';\n\n    // Checkbox-specific styles\n    if (type === 'checkbox') {\n      return (\n        <input\n          type=\"checkbox\"\n          className={cn(\n            'h-4 w-4 rounded border border-input bg-background text-primary focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n            className\n          )}\n          ref={ref}\n          id={inputId}\n          {...props}\n        />\n      );\n    }\n\n    // Radio button-specific styles\n    if (type === 'radio') {\n      return (\n        <input\n          type=\"radio\"\n          className={cn(\n            'h-4 w-4 rounded-full border border-input bg-background text-primary focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n            className\n          )}\n          ref={ref}\n          id={inputId}\n          {...props}\n        />\n      );\n    }\n\n    // For regular inputs with wrapper structure\n    return (\n      <div className=\"space-y-2\">\n        {label && (\n          <label\n            htmlFor={inputId}\n            className={cn(\n              'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n              error ? 'text-destructive' : 'text-foreground'\n            )}\n          >\n            {label}\n            {required && <span className=\"text-destructive ml-1\">*</span>}\n          </label>\n        )}\n\n        <input\n          type={type}\n          className={cn(\n            baseInputClasses,\n            error && 'border-destructive focus-visible:ring-destructive',\n            className\n          )}\n          ref={ref}\n          id={inputId}\n          {...props}\n        />\n\n        {description && !error && <p className=\"text-sm text-muted-foreground\">{description}</p>}\n\n        {error && <p className=\"text-sm text-destructive\">{error}</p>}\n      </div>\n    );\n  }\n);\n\nInput.displayName = 'Input';\n\nexport default Input;\n","// components/ui/Select.jsx - Shadcn style Select\nimport { ChevronDown, Check, Search, X } from 'lucide-react';\nimport React, { useState } from 'react';\n\nimport { cn } from '../../utils/cn';\n\nimport Button from './Button';\nimport Input from './Input';\n\nconst Select = React.forwardRef(\n  (\n    {\n      className,\n      options = [],\n      value,\n      defaultValue,\n      placeholder = 'Select an option',\n      multiple = false,\n      disabled = false,\n      required = false,\n      label,\n      description,\n      error,\n      searchable = false,\n      clearable = false,\n      loading = false,\n      id,\n      name,\n      onChange,\n      onOpenChange,\n      ...props\n    },\n    ref\n  ) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    // Generate unique ID if not provided\n    const selectId = id || `select-${Math.random().toString(36).substr(2, 9)}`;\n\n    // Filter options based on search\n    const filteredOptions =\n      searchable && searchTerm\n        ? options.filter(\n          option =>\n            option.label.toLowerCase().includes(searchTerm.toLowerCase()) ||\n              (option.value &&\n                option.value.toString().toLowerCase().includes(searchTerm.toLowerCase()))\n        )\n        : options;\n\n    // Get selected option(s) for display\n    const getSelectedDisplay = () => {\n      if (!value) return placeholder;\n\n      if (multiple) {\n        const selectedOptions = options.filter(opt => value.includes(opt.value));\n        if (selectedOptions.length === 0) return placeholder;\n        if (selectedOptions.length === 1) return selectedOptions[0].label;\n        return `${selectedOptions.length} items selected`;\n      }\n\n      const selectedOption = options.find(opt => opt.value === value);\n      return selectedOption ? selectedOption.label : placeholder;\n    };\n\n    const handleToggle = () => {\n      if (!disabled) {\n        const newIsOpen = !isOpen;\n        setIsOpen(newIsOpen);\n        onOpenChange?.(newIsOpen);\n        if (!newIsOpen) {\n          setSearchTerm('');\n        }\n      }\n    };\n\n    const handleOptionSelect = option => {\n      if (multiple) {\n        const newValue = value || [];\n        const updatedValue = newValue.includes(option.value)\n          ? newValue.filter(v => v !== option.value)\n          : [...newValue, option.value];\n        onChange?.(updatedValue);\n      } else {\n        onChange?.(option.value);\n        setIsOpen(false);\n        onOpenChange?.(false);\n      }\n    };\n\n    const handleClear = e => {\n      e.stopPropagation();\n      onChange?.(multiple ? [] : '');\n    };\n\n    const handleSearchChange = e => {\n      setSearchTerm(e.target.value);\n    };\n\n    const isSelected = optionValue => {\n      if (multiple) {\n        return value?.includes(optionValue) || false;\n      }\n      return value === optionValue;\n    };\n\n    const hasValue = multiple ? value?.length > 0 : value !== undefined && value !== '';\n\n    return (\n      <div className={cn('relative', className)}>\n        {label && (\n          <label\n            htmlFor={selectId}\n            className={cn(\n              'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 mb-2 block',\n              error ? 'text-destructive' : 'text-foreground'\n            )}\n          >\n            {label}\n            {required && <span className=\"text-destructive ml-1\">*</span>}\n          </label>\n        )}\n\n        <div className=\"relative\">\n          <button\n            ref={ref}\n            id={selectId}\n            type=\"button\"\n            className={cn(\n              'flex h-10 w-full items-center justify-between rounded-md border border-input bg-white text-black px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n              error && 'border-destructive focus:ring-destructive',\n              !hasValue && 'text-muted-foreground'\n            )}\n            onClick={handleToggle}\n            disabled={disabled}\n            aria-expanded={isOpen}\n            aria-haspopup=\"listbox\"\n            {...props}\n          >\n            <span className=\"truncate\">{getSelectedDisplay()}</span>\n\n            <div className=\"flex items-center gap-1\">\n              {loading && (\n                <svg className=\"animate-spin h-4 w-4\" viewBox=\"0 0 24 24\">\n                  <circle\n                    className=\"opacity-25\"\n                    cx=\"12\"\n                    cy=\"12\"\n                    r=\"10\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"4\"\n                    fill=\"none\"\n                  />\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  />\n                </svg>\n              )}\n\n              {clearable && hasValue && !loading && (\n                <Button\n                  variant=\"ghost\" size=\"icon\" className=\"h-4 w-4\"\n                  onClick={handleClear}\n                >\n                  <X className=\"h-3 w-3\" />\n                </Button>\n              )}\n\n              <ChevronDown className={cn('h-4 w-4 transition-transform', isOpen && 'rotate-180')} />\n            </div>\n          </button>\n\n          {/* Hidden native select for form submission */}\n          <select\n            name={name}\n            value={value || ''}\n            onChange={() => {}} // Controlled by our custom logic\n            className=\"sr-only\"\n            tabIndex={-1}\n            multiple={multiple}\n            required={required}\n          >\n            <option value=\"\">Select...</option>\n            {options.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n\n          {/* Dropdown */}\n          {isOpen && (\n            <div className=\"absolute z-50 w-full mt-1 bg-white text-black border border-border rounded-md shadow-md\">\n              {searchable && (\n                <div className=\"p-2 border-b\">\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                    <Input\n                      placeholder=\"Search options...\"\n                      value={searchTerm}\n                      onChange={handleSearchChange}\n                      className=\"pl-8\"\n                    />\n                  </div>\n                </div>\n              )}\n\n              <div className=\"py-1 max-h-60 overflow-auto\">\n                {filteredOptions.length === 0 ? (\n                  <div className=\"px-3 py-2 text-sm text-muted-foreground\">\n                    {searchTerm ? 'No options found' : 'No options available'}\n                  </div>\n                ) : (\n                  filteredOptions.map(option => (\n                    <div\n                      key={option.value}\n                      className={cn(\n                        'relative flex cursor-pointer select-none items-center rounded-sm px-3 py-2 text-sm outline-none hover:bg-accent hover:text-accent-foreground',\n                        isSelected(option.value) && 'bg-primary text-primary-foreground',\n                        option.disabled && 'pointer-events-none opacity-50'\n                      )}\n                      onClick={() => !option.disabled && handleOptionSelect(option)}\n                    >\n                      <span className=\"flex-1\">{option.label}</span>\n                      {multiple && isSelected(option.value) && <Check className=\"h-4 w-4\" />}\n                      {option.description && (\n                        <span className=\"text-xs text-muted-foreground ml-2\">\n                          {option.description}\n                        </span>\n                      )}\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {description && !error && (\n          <p className=\"text-sm text-muted-foreground mt-1\">{description}</p>\n        )}\n\n        {error && <p className=\"text-sm text-destructive mt-1\">{error}</p>}\n      </div>\n    );\n  }\n);\n\nSelect.displayName = 'Select';\n\nexport default Select;\n","import { Check, Minus } from 'lucide-react';\nimport React from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst Checkbox = React.forwardRef(\n  (\n    {\n      className,\n      id,\n      checked,\n      indeterminate = false,\n      disabled = false,\n      required = false,\n      label,\n      description,\n      error,\n      size = 'default',\n      ...props\n    },\n    ref\n  ) => {\n    // Generate unique ID if not provided\n    const checkboxId = id || `checkbox-${Math.random().toString(36).substr(2, 9)}`;\n\n    // Size variants\n    const sizeClasses = {\n      sm: 'h-4 w-4',\n      default: 'h-4 w-4',\n      lg: 'h-5 w-5'\n    };\n\n    return (\n      <div className={cn('flex items-start space-x-2', className)}>\n        <div className=\"relative flex items-center\">\n          <input\n            type=\"checkbox\"\n            ref={ref}\n            id={checkboxId}\n            checked={checked}\n            disabled={disabled}\n            required={required}\n            className=\"sr-only\"\n            {...props}\n          />\n\n          <label\n            htmlFor={checkboxId}\n            className={cn(\n              'peer shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground cursor-pointer transition-colors',\n              sizeClasses[size],\n              checked && 'bg-primary text-primary-foreground border-primary',\n              indeterminate && 'bg-primary text-primary-foreground border-primary',\n              error && 'border-destructive',\n              disabled && 'cursor-not-allowed opacity-50'\n            )}\n          >\n            {checked && !indeterminate && (\n              <Check className=\"h-3 w-3 text-current flex items-center justify-center\" />\n            )}\n            {indeterminate && (\n              <Minus className=\"h-3 w-3 text-current flex items-center justify-center\" />\n            )}\n          </label>\n        </div>\n\n        {(label || description || error) && (\n          <div className=\"flex-1 space-y-1\">\n            {label && (\n              <label\n                htmlFor={checkboxId}\n                className={cn(\n                  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 cursor-pointer',\n                  error ? 'text-destructive' : 'text-foreground'\n                )}\n              >\n                {label}\n                {required && <span className=\"text-destructive ml-1\">*</span>}\n              </label>\n            )}\n\n            {description && !error && (\n              <p className=\"text-sm text-muted-foreground\">{description}</p>\n            )}\n\n            {error && <p className=\"text-sm text-destructive\">{error}</p>}\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nCheckbox.displayName = 'Checkbox';\n\n// Checkbox Group component\nconst CheckboxGroup = React.forwardRef(\n  (\n    {\n      className,\n      children,\n      label,\n      description,\n      error,\n      required = false,\n      disabled = false,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <fieldset\n        ref={ref} disabled={disabled} className={cn('space-y-3', className)}\n        {...props}\n      >\n        {label && (\n          <legend\n            className={cn('text-sm font-medium', error ? 'text-destructive' : 'text-foreground')}\n          >\n            {label}\n            {required && <span className=\"text-destructive ml-1\">*</span>}\n          </legend>\n        )}\n\n        {description && !error && <p className=\"text-sm text-muted-foreground\">{description}</p>}\n\n        <div className=\"space-y-2\">{children}</div>\n\n        {error && <p className=\"text-sm text-destructive\">{error}</p>}\n      </fieldset>\n    );\n  }\n);\n\nCheckboxGroup.displayName = 'CheckboxGroup';\n\nexport { Checkbox, CheckboxGroup };\n","import React, { Suspense, lazy } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\n// Lazy load the chart components to reduce initial bundle size\nconst LazyBarChart = lazy(() =>\n  import('recharts').then(module => ({\n    default: ({ data, ...props }) => {\n      const { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } = module;\n      return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart data={data} {...props}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--color-border)\" />\n            <XAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <YAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'var(--color-popover)',\n                border: '1px solid var(--color-border)',\n                borderRadius: '8px'\n              }}\n            />\n            <Bar dataKey=\"value\" fill=\"var(--color-primary)\" radius={[2, 2, 0, 0]} />\n          </BarChart>\n        </ResponsiveContainer>\n      );\n    }\n  }))\n);\n\nconst LazyScatterChart = lazy(() =>\n  import('recharts').then(module => ({\n    default: ({ data, ...props }) => {\n      const { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } =\n        module;\n      return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <ScatterChart data={data} {...props}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--color-border)\" />\n            <XAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <YAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'var(--color-popover)',\n                border: '1px solid var(--color-border)',\n                borderRadius: '8px'\n              }}\n            />\n            <Scatter dataKey=\"value\" fill=\"var(--color-primary)\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n      );\n    }\n  }))\n);\n\nconst LazyAreaChart = lazy(() =>\n  import('recharts').then(module => ({\n    default: ({ data, ...props }) => {\n      const { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } = module;\n      return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <AreaChart data={data} {...props}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--color-border)\" />\n            <XAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <YAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'var(--color-popover)',\n                border: '1px solid var(--color-border)',\n                borderRadius: '8px'\n              }}\n            />\n            <Area dataKey=\"value\" fill=\"var(--color-primary)\" stroke=\"var(--color-primary)\" />\n          </AreaChart>\n        </ResponsiveContainer>\n      );\n    }\n  }))\n);\n\n// Chart wrapper component with loading state\nconst ChartWrapper = ({ children, loading = false }) => {\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  return (\n    <Suspense\n      fallback={\n        <div className=\"flex items-center justify-center h-full\">\n          <LoadingSpinner size=\"lg\" />\n        </div>\n      }\n    >\n      {children}\n    </Suspense>\n  );\n};\n\n// Export chart components\nexport const BarChart = props => (\n  <ChartWrapper>\n    <LazyBarChart {...props} />\n  </ChartWrapper>\n);\n\nexport const ScatterChart = props => (\n  <ChartWrapper>\n    <LazyScatterChart {...props} />\n  </ChartWrapper>\n);\n\nexport const AreaChart = props => (\n  <ChartWrapper>\n    <LazyAreaChart {...props} />\n  </ChartWrapper>\n);\n\nexport default ChartWrapper;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { AlertCircle, Calculator, DollarSign, Percent } from 'lucide-react';\nimport { cn } from '../../utils/cn';\n\nconst FinancialInput = React.forwardRef(({\n  className,\n  label,\n  value,\n  onChange,\n  onBlur,\n  placeholder = '0.00',\n  type = 'currency', // 'currency', 'percentage', 'number'\n  prefix,\n  suffix,\n  locale = 'en-US',\n  currency = 'USD',\n  error,\n  description,\n  required = false,\n  disabled = false,\n  loading = false,\n  decimals = 2,\n  allowNegative = true,\n  id,\n  autoFocus = false,\n  onValidation,\n  min,\n  max,\n  ...props\n}, ref) => {\n  const [displayValue, setDisplayValue] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const inputRef = useRef(null);\n  const componentRef = ref || inputRef;\n\n  // Generate unique ID if not provided\n  const inputId = id || `financial-input-${Math.random().toString(36).substr(2, 9)}`;\n\n  // Format value for display\n  const formatValue = (val) => {\n    if (!val && val !== 0) return '';\n    \n    const numValue = typeof val === 'string' ? parseFloat(val) : val;\n    if (isNaN(numValue)) return '';\n\n    switch (type) {\n      case 'currency':\n        return new Intl.NumberFormat(locale, {\n          style: 'currency',\n          currency: currency,\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(numValue);\n      \n      case 'percentage':\n        return new Intl.NumberFormat(locale, {\n          style: 'percent',\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(numValue / 100);\n      \n      default:\n        return new Intl.NumberFormat(locale, {\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(numValue);\n    }\n  };\n\n  // Parse display value to raw number\n  const parseValue = (val) => {\n    if (!val) return 0;\n    \n    // Remove currency symbols, commas, and spaces\n    const cleanValue = val\n      .replace(/[^\\d.-]/g, '')\n      .replace(/,/g, '');\n    \n    const numValue = parseFloat(cleanValue);\n    return isNaN(numValue) ? 0 : numValue;\n  };\n\n  // Validate input\n  const validateInput = (val) => {\n    const numValue = typeof val === 'string' ? parseValue(val) : val;\n    \n    let valid = true;\n    let errorMessage = '';\n\n    if (required && (!numValue && numValue !== 0)) {\n      valid = false;\n      errorMessage = 'This field is required';\n    } else if (!allowNegative && numValue < 0) {\n      valid = false;\n      errorMessage = 'Negative values are not allowed';\n    } else if (min !== undefined && numValue < min) {\n      valid = false;\n      errorMessage = `Value must be at least ${formatValue(min)}`;\n    } else if (max !== undefined && numValue > max) {\n      valid = false;\n      errorMessage = `Value must not exceed ${formatValue(max)}`;\n    }\n\n    setIsValid(valid);\n    \n    if (onValidation) {\n      onValidation(valid, errorMessage);\n    }\n\n    return valid;\n  };\n\n  // Update display value when prop value changes\n  useEffect(() => {\n    if (!isFocused) {\n      setDisplayValue(formatValue(value));\n    }\n  }, [value, type, currency, locale, decimals, isFocused]);\n\n  // Handle focus\n  const handleFocus = (e) => {\n    setIsFocused(true);\n    // Show raw number for editing\n    const rawValue = value ? value.toString() : '';\n    setDisplayValue(rawValue);\n    \n    // Select all text for easy replacement\n    setTimeout(() => {\n      if (componentRef.current) {\n        componentRef.current.select();\n      }\n    }, 0);\n  };\n\n  // Handle blur\n  const handleBlur = (e) => {\n    setIsFocused(false);\n    const rawValue = parseValue(displayValue);\n    \n    validateInput(rawValue);\n    \n    // Format for display\n    setDisplayValue(formatValue(rawValue));\n    \n    // Call onChange with parsed value\n    if (onChange) {\n      onChange(rawValue);\n    }\n    \n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  // Handle input change\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n    \n    // Basic validation for numeric input\n    const numericRegex = allowNegative ? /^-?\\d*\\.?\\d*$/ : /^\\d*\\.?\\d*$/;\n    \n    if (numericRegex.test(newValue) || newValue === '') {\n      setDisplayValue(newValue);\n    }\n  };\n\n  // Handle key press\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      componentRef.current?.blur();\n    }\n  };\n\n  // Get icon based on type\n  const getIcon = () => {\n    switch (type) {\n      case 'currency':\n        return <DollarSign size={16} className=\"text-muted-foreground\" />;\n      case 'percentage':\n        return <Percent size={16} className=\"text-muted-foreground\" />;\n      default:\n        return <Calculator size={16} className=\"text-muted-foreground\" />;\n    }\n  };\n\n  // Auto-focus if specified\n  useEffect(() => {\n    if (autoFocus && componentRef.current) {\n      componentRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  return (\n    <div className=\"space-y-2\">\n      {label && (\n        <label\n          htmlFor={inputId}\n          className={cn(\n            'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n            error && !isValid ? 'text-destructive' : 'text-foreground'\n          )}\n        >\n          {label}\n          {required && <span className=\"text-destructive ml-1\">*</span>}\n        </label>\n      )}\n\n      <div className=\"relative\">\n        {/* Left icon/prefix */}\n        <div className=\"absolute left-3 top-1/2 -translate-y-1/2 flex items-center gap-2 pointer-events-none z-10\">\n          {getIcon()}\n          {prefix && (\n            <span className=\"text-sm text-muted-foreground font-medium\">\n              {prefix}\n            </span>\n          )}\n        </div>\n\n        <input\n          ref={componentRef}\n          id={inputId}\n          type=\"text\"\n          value={displayValue}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyPress={handleKeyPress}\n          placeholder={placeholder}\n          disabled={disabled || loading}\n          className={cn(\n            // Base styles\n            'flex h-11 w-full rounded-lg border bg-background text-sm ring-offset-background',\n            'file:border-0 file:bg-transparent file:text-sm file:font-medium',\n            'placeholder:text-muted-foreground',\n            'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n            'disabled:cursor-not-allowed disabled:opacity-50',\n            'transition-all duration-200',\n            \n            // Padding adjustments for icons\n            'pl-10 pr-4',\n            suffix && 'pr-16',\n            \n            // Financial styling\n            'font-mono text-right',\n            'border-input hover:border-ring/50',\n            \n            // States\n            isFocused && 'ring-2 ring-ring ring-offset-2 border-ring',\n            error && !isValid && 'border-destructive focus-visible:ring-destructive',\n            loading && 'animate-pulse',\n            \n            className\n          )}\n          {...props}\n        />\n\n        {/* Right suffix */}\n        {suffix && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2 pointer-events-none\">\n            <span className=\"text-sm text-muted-foreground font-medium\">\n              {suffix}\n            </span>\n          </div>\n        )}\n\n        {/* Loading indicator */}\n        {loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <div className=\"w-4 h-4 border-2 border-muted-foreground border-t-transparent rounded-full animate-spin\" />\n          </div>\n        )}\n\n        {/* Error icon */}\n        {error && !isValid && !loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <AlertCircle size={16} className=\"text-destructive\" />\n          </div>\n        )}\n      </div>\n\n      {/* Description */}\n      {description && !error && !isValid && (\n        <p className=\"text-sm text-muted-foreground\">\n          {description}\n        </p>\n      )}\n\n      {/* Error message */}\n      {(error || !isValid) && (\n        <p className=\"text-sm text-destructive flex items-center gap-1\">\n          <AlertCircle size={14} />\n          {error || 'Invalid input'}\n        </p>\n      )}\n    </div>\n  );\n});\n\nFinancialInput.displayName = 'FinancialInput';\n\nexport default FinancialInput;","import React, { useState, useEffect, useRef } from 'react';\nimport { Check, X, Edit2, Calculator, AlertCircle } from 'lucide-react';\nimport { cn } from '../../utils/cn';\n\nconst EditableCell = ({\n  value,\n  onChange,\n  onSave,\n  onCancel,\n  className,\n  type = 'currency', // 'currency', 'percentage', 'number', 'text'\n  placeholder = '0.00',\n  isFormula = false,\n  isEditing = false,\n  onEdit,\n  disabled = false,\n  loading = false,\n  error,\n  locale = 'en-US',\n  currency = 'USD',\n  decimals = 2,\n  allowNegative = true,\n  min,\n  max,\n  autoFocus = true,\n  showEditIcon = true,\n  variant = 'default', // 'default', 'adjusted', 'formula'\n  ...props\n}) => {\n  const [editingValue, setEditingValue] = useState('');\n  const [localError, setLocalError] = useState('');\n  const [isHovered, setIsHovered] = useState(false);\n  const inputRef = useRef(null);\n\n  // Format value for display\n  const formatValue = (val) => {\n    if (!val && val !== 0) return '—';\n    \n    const numValue = typeof val === 'string' ? parseFloat(val) : val;\n    if (isNaN(numValue)) return '—';\n\n    switch (type) {\n      case 'currency':\n        const formatted = new Intl.NumberFormat(locale, {\n          style: 'currency',\n          currency: currency,\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(numValue);\n        \n        // For large numbers, add suffix\n        const absValue = Math.abs(numValue);\n        if (absValue >= 1000000) {\n          return new Intl.NumberFormat(locale, {\n            minimumFractionDigits: 1,\n            maximumFractionDigits: 1\n          }).format(numValue / 1000000) + 'M';\n        } else if (absValue >= 1000) {\n          return new Intl.NumberFormat(locale, {\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n          }).format(numValue);\n        }\n        return formatted.replace(/\\.00$/, '');\n      \n      case 'percentage':\n        return new Intl.NumberFormat(locale, {\n          style: 'percent',\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(numValue / 100);\n      \n      case 'number':\n        return new Intl.NumberFormat(locale, {\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals,\n        }).format(numValue);\n      \n      default:\n        return val?.toString() || '';\n    }\n  };\n\n  // Parse display value to raw number\n  const parseValue = (val) => {\n    if (!val) return 0;\n    \n    // Remove currency symbols, commas, and spaces\n    const cleanValue = val\n      .replace(/[^\\d.-]/g, '')\n      .replace(/,/g, '');\n    \n    const numValue = parseFloat(cleanValue);\n    return isNaN(numValue) ? 0 : numValue;\n  };\n\n  // Validate input\n  const validateInput = (val) => {\n    const numValue = type === 'text' ? val : parseValue(val);\n    \n    if (type === 'text') return true;\n    \n    if (!allowNegative && numValue < 0) {\n      setLocalError('Negative values are not allowed');\n      return false;\n    }\n    \n    if (min !== undefined && numValue < min) {\n      setLocalError(`Value must be at least ${formatValue(min)}`);\n      return false;\n    }\n    \n    if (max !== undefined && numValue > max) {\n      setLocalError(`Value must not exceed ${formatValue(max)}`);\n      return false;\n    }\n    \n    setLocalError('');\n    return true;\n  };\n\n  // Handle edit start\n  const handleEdit = () => {\n    if (disabled || isFormula) return;\n    \n    setEditingValue(value ? value.toString() : '');\n    setLocalError('');\n    \n    if (onEdit) {\n      onEdit(true);\n    }\n  };\n\n  // Handle save\n  const handleSave = () => {\n    const finalValue = type === 'text' ? editingValue : parseValue(editingValue);\n    \n    if (!validateInput(editingValue)) {\n      return;\n    }\n    \n    if (onChange) {\n      onChange(finalValue);\n    }\n    \n    if (onSave) {\n      onSave(finalValue);\n    }\n    \n    if (onEdit) {\n      onEdit(false);\n    }\n  };\n\n  // Handle cancel\n  const handleCancel = () => {\n    setEditingValue('');\n    setLocalError('');\n    \n    if (onCancel) {\n      onCancel();\n    }\n    \n    if (onEdit) {\n      onEdit(false);\n    }\n  };\n\n  // Handle input change\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n    \n    if (type !== 'text') {\n      const numericRegex = allowNegative ? /^-?\\d*\\.?\\d*$/ : /^\\d*\\.?\\d*$/;\n      if (numericRegex.test(newValue) || newValue === '') {\n        setEditingValue(newValue);\n      }\n    } else {\n      setEditingValue(newValue);\n    }\n  };\n\n  // Handle key press\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSave();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      handleCancel();\n    } else if (e.key === 'Tab') {\n      e.preventDefault();\n      handleSave();\n    }\n  };\n\n  // Auto-focus input when editing starts\n  useEffect(() => {\n    if (isEditing && inputRef.current && autoFocus) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, [isEditing, autoFocus]);\n\n  // Get variant styles\n  const getVariantStyles = () => {\n    switch (variant) {\n      case 'adjusted':\n        return {\n          container: 'bg-gradient-to-r from-amber-50 to-yellow-50 border-amber-200',\n          text: isFormula ? 'text-amber-900' : 'text-slate-700',\n          hover: 'hover:bg-amber-100 hover:border-amber-300',\n          input: 'border-amber-400 focus:ring-amber-100 focus:border-amber-500',\n          editIcon: 'text-amber-500'\n        };\n      case 'formula':\n        return {\n          container: 'bg-gradient-to-r from-blue-50 to-blue-100 border-blue-200',\n          text: 'text-blue-900',\n          hover: 'cursor-not-allowed',\n          input: 'border-blue-400 focus:ring-blue-100 focus:border-blue-500',\n          editIcon: 'text-blue-500'\n        };\n      default:\n        return {\n          container: 'bg-background border-transparent',\n          text: isFormula ? 'text-blue-900' : 'text-slate-700',\n          hover: 'hover:bg-slate-50 hover:border-slate-200',\n          input: 'border-input focus:ring-ring focus:border-ring',\n          editIcon: 'text-slate-400'\n        };\n    }\n  };\n\n  const styles = getVariantStyles();\n\n  if (isEditing) {\n    return (\n      <div className=\"relative\">\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={editingValue}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          placeholder={placeholder}\n          disabled={loading}\n          className={cn(\n            'w-full px-3 py-2.5 bg-white border-2 rounded-lg text-slate-900 text-right font-mono text-sm',\n            'focus:outline-none focus:ring-4 shadow-lg transition-all duration-200',\n            styles.input,\n            loading && 'animate-pulse',\n            localError && 'border-destructive focus:ring-destructive/20',\n            className\n          )}\n        />\n        \n        {/* Action buttons */}\n        <div className=\"absolute -top-2 -right-2 flex gap-1\">\n          <button\n            onClick={handleSave}\n            disabled={loading || !!localError}\n            className={cn(\n              'w-5 h-5 bg-success hover:bg-success/90 text-white rounded-full',\n              'flex items-center justify-center text-xs transition-colors',\n              'disabled:opacity-50 disabled:cursor-not-allowed'\n            )}\n            title=\"Save changes\"\n          >\n            <Check size={12} />\n          </button>\n          <button\n            onClick={handleCancel}\n            disabled={loading}\n            className={cn(\n              'w-5 h-5 bg-destructive hover:bg-destructive/90 text-white rounded-full',\n              'flex items-center justify-center text-xs transition-colors',\n              'disabled:opacity-50 disabled:cursor-not-allowed'\n            )}\n            title=\"Cancel changes\"\n          >\n            <X size={12} />\n          </button>\n        </div>\n\n        {/* Loading indicator */}\n        {loading && (\n          <div className=\"absolute left-2 top-1/2 -translate-y-1/2\">\n            <div className=\"w-3 h-3 border-2 border-muted-foreground border-t-transparent rounded-full animate-spin\" />\n          </div>\n        )}\n\n        {/* Local error */}\n        {localError && (\n          <div className=\"absolute -bottom-6 left-0 right-0 text-xs text-destructive flex items-center gap-1\">\n            <AlertCircle size={10} />\n            {localError}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      onClick={handleEdit}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      className={cn(\n        'px-3 py-2.5 rounded-lg font-mono text-sm transition-all duration-200',\n        'min-h-[40px] flex items-center justify-end relative group',\n        styles.container,\n        !disabled && !isFormula && styles.hover,\n        !disabled && !isFormula && 'cursor-pointer',\n        isFormula && 'font-semibold shadow-sm',\n        disabled && 'opacity-50 cursor-not-allowed',\n        error && 'border-destructive',\n        className\n      )}\n    >\n      <span className={styles.text}>\n        {formatValue(value)}\n      </span>\n\n      {/* Formula indicator */}\n      {isFormula && (\n        <Calculator size={12} className=\"ml-2 text-blue-500/80\" />\n      )}\n\n      {/* Edit icon */}\n      {!isFormula && !disabled && showEditIcon && (\n        <Edit2 \n          size={12} \n          className={cn(\n            'ml-2 transition-opacity',\n            isHovered ? 'opacity-60' : 'opacity-0',\n            styles.editIcon\n          )} \n        />\n      )}\n\n      {/* Error indicator */}\n      {error && (\n        <AlertCircle size={12} className=\"ml-2 text-destructive\" />\n      )}\n\n      {/* Loading indicator */}\n      {loading && (\n        <div className=\"ml-2\">\n          <div className=\"w-3 h-3 border-2 border-current border-t-transparent rounded-full animate-spin opacity-50\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditableCell;","import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { DollarSign, AlertCircle, TrendingUp, TrendingDown } from 'lucide-react';\nimport { cn } from '../../utils/cn';\n\n// Currency configurations\nconst CURRENCY_CONFIG = {\n  USD: { symbol: '$', code: 'USD', decimals: 2, name: 'US Dollar' },\n  EUR: { symbol: '€', code: 'EUR', decimals: 2, name: 'Euro' },\n  GBP: { symbol: '£', code: 'GBP', decimals: 2, name: 'British Pound' },\n  JPY: { symbol: '¥', code: 'JPY', decimals: 0, name: 'Japanese Yen' },\n  CAD: { symbol: 'C$', code: 'CAD', decimals: 2, name: 'Canadian Dollar' },\n  AUD: { symbol: 'A$', code: 'AUD', decimals: 2, name: 'Australian Dollar' },\n  CHF: { symbol: 'CHF', code: 'CHF', decimals: 2, name: 'Swiss Franc' },\n  CNY: { symbol: '¥', code: 'CNY', decimals: 2, name: 'Chinese Yuan' }\n};\n\nconst CurrencyInput = React.forwardRef(({\n  className,\n  label,\n  value = 0,\n  onChange,\n  onBlur,\n  placeholder,\n  currency = 'USD',\n  locale = 'en-US',\n  error,\n  description,\n  required = false,\n  disabled = false,\n  loading = false,\n  allowNegative = true,\n  showCurrency = true,\n  showTrend = false,\n  previousValue,\n  size = 'default', // 'sm', 'default', 'lg'\n  variant = 'default', // 'default', 'filled', 'minimal'\n  id,\n  autoFocus = false,\n  onValidation,\n  min,\n  max,\n  step = 0.01,\n  abbreviateDisplay = false, // Show 1.2M instead of 1,200,000\n  precision, // Override default currency precision\n  ...props\n}, ref) => {\n  const [displayValue, setDisplayValue] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const [validationMessage, setValidationMessage] = useState('');\n  const inputRef = useRef(null);\n  const componentRef = ref || inputRef;\n\n  // Generate unique ID if not provided\n  const inputId = id || `currency-input-${Math.random().toString(36).substr(2, 9)}`;\n\n  // Get currency configuration\n  const currencyConfig = CURRENCY_CONFIG[currency] || CURRENCY_CONFIG.USD;\n  const effectiveDecimals = precision !== undefined ? precision : currencyConfig.decimals;\n\n  // Memoized placeholder\n  const effectivePlaceholder = useMemo(() => {\n    if (placeholder) return placeholder;\n    const sample = formatCurrency(0);\n    return sample;\n  }, [placeholder, currency, effectiveDecimals]);\n\n  // Format currency value\n  function formatCurrency(val, options = {}) {\n    if (!val && val !== 0) return '';\n    \n    const numValue = typeof val === 'string' ? parseFloat(val) : val;\n    if (isNaN(numValue)) return '';\n\n    const { forDisplay = false, abbreviated = false } = options;\n\n    // Handle abbreviation for large numbers\n    if (abbreviated && abbreviateDisplay && Math.abs(numValue) >= 1000) {\n      const absValue = Math.abs(numValue);\n      const sign = numValue < 0 ? '-' : '';\n      \n      if (absValue >= 1000000000) {\n        return `${sign}${currencyConfig.symbol}${(absValue / 1000000000).toFixed(1)}B`;\n      } else if (absValue >= 1000000) {\n        return `${sign}${currencyConfig.symbol}${(absValue / 1000000).toFixed(1)}M`;\n      } else if (absValue >= 1000) {\n        return `${sign}${currencyConfig.symbol}${(absValue / 1000).toFixed(0)}K`;\n      }\n    }\n\n    try {\n      return new Intl.NumberFormat(locale, {\n        style: 'currency',\n        currency: currency,\n        minimumFractionDigits: effectiveDecimals,\n        maximumFractionDigits: effectiveDecimals,\n      }).format(numValue);\n    } catch (error) {\n      // Fallback formatting\n      const formatted = numValue.toFixed(effectiveDecimals);\n      return `${currencyConfig.symbol}${formatted}`;\n    }\n  }\n\n  // Parse display value to number\n  function parseCurrency(val) {\n    if (!val) return 0;\n    \n    // Handle abbreviated values\n    const str = val.toString().toLowerCase();\n    let multiplier = 1;\n    \n    if (str.endsWith('k')) {\n      multiplier = 1000;\n    } else if (str.endsWith('m')) {\n      multiplier = 1000000;\n    } else if (str.endsWith('b')) {\n      multiplier = 1000000000;\n    }\n    \n    // Remove currency symbols, commas, spaces, and multiplier suffixes\n    const cleanValue = val\n      .toString()\n      .replace(/[^\\d.-]/g, '')\n      .replace(/,/g, '');\n    \n    const numValue = parseFloat(cleanValue) * multiplier;\n    return isNaN(numValue) ? 0 : numValue;\n  }\n\n  // Validate input\n  const validateInput = (val) => {\n    const numValue = typeof val === 'string' ? parseCurrency(val) : val;\n    \n    let valid = true;\n    let message = '';\n\n    if (required && (!numValue && numValue !== 0)) {\n      valid = false;\n      message = 'This field is required';\n    } else if (!allowNegative && numValue < 0) {\n      valid = false;\n      message = 'Negative values are not allowed';\n    } else if (min !== undefined && numValue < min) {\n      valid = false;\n      message = `Value must be at least ${formatCurrency(min)}`;\n    } else if (max !== undefined && numValue > max) {\n      valid = false;\n      message = `Value must not exceed ${formatCurrency(max)}`;\n    }\n\n    setIsValid(valid);\n    setValidationMessage(message);\n    \n    if (onValidation) {\n      onValidation(valid, message);\n    }\n\n    return valid;\n  };\n\n  // Calculate trend\n  const getTrend = () => {\n    if (!showTrend || previousValue === undefined) return null;\n    \n    const current = typeof value === 'string' ? parseCurrency(value) : (value || 0);\n    const previous = typeof previousValue === 'string' ? parseCurrency(previousValue) : (previousValue || 0);\n    \n    if (current > previous) return 'up';\n    if (current < previous) return 'down';\n    return 'neutral';\n  };\n\n  const trend = getTrend();\n\n  // Update display value when prop value changes\n  useEffect(() => {\n    if (!isFocused) {\n      setDisplayValue(formatCurrency(value, { abbreviated: abbreviateDisplay }));\n    }\n  }, [value, currency, locale, effectiveDecimals, isFocused, abbreviateDisplay]);\n\n  // Handle focus\n  const handleFocus = (e) => {\n    setIsFocused(true);\n    // Show raw number for editing\n    const rawValue = value ? value.toString() : '';\n    setDisplayValue(rawValue);\n    \n    // Select all text for easy replacement\n    setTimeout(() => {\n      if (componentRef.current) {\n        componentRef.current.select();\n      }\n    }, 0);\n  };\n\n  // Handle blur\n  const handleBlur = (e) => {\n    setIsFocused(false);\n    const rawValue = parseCurrency(displayValue);\n    \n    validateInput(rawValue);\n    \n    // Format for display\n    setDisplayValue(formatCurrency(rawValue, { abbreviated: abbreviateDisplay }));\n    \n    // Call onChange with parsed value\n    if (onChange) {\n      onChange(rawValue);\n    }\n    \n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  // Handle input change\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n    \n    // Allow numbers, decimals, negative signs, and K/M/B suffixes\n    const regex = allowNegative \n      ? /^-?\\d*\\.?\\d*[kmb]?$/i \n      : /^\\d*\\.?\\d*[kmb]?$/i;\n    \n    if (regex.test(newValue) || newValue === '') {\n      setDisplayValue(newValue);\n    }\n  };\n\n  // Handle key press\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      componentRef.current?.blur();\n    }\n  };\n\n  // Auto-focus if specified\n  useEffect(() => {\n    if (autoFocus && componentRef.current) {\n      componentRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  // Size variants\n  const sizeClasses = {\n    sm: 'h-9 px-3 text-sm',\n    default: 'h-11 px-4 text-sm',\n    lg: 'h-12 px-4 text-base'\n  };\n\n  // Variant styles\n  const variantClasses = {\n    default: 'border-input bg-background hover:border-ring/50',\n    filled: 'border-transparent bg-muted hover:bg-muted/80',\n    minimal: 'border-transparent bg-transparent hover:bg-muted/50'\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      {label && (\n        <label\n          htmlFor={inputId}\n          className={cn(\n            'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n            error || !isValid ? 'text-destructive' : 'text-foreground'\n          )}\n        >\n          {label}\n          {required && <span className=\"text-destructive ml-1\">*</span>}\n        </label>\n      )}\n\n      <div className=\"relative\">\n        {/* Currency symbol */}\n        {showCurrency && (\n          <div className=\"absolute left-3 top-1/2 -translate-y-1/2 flex items-center gap-1 pointer-events-none z-10\">\n            <DollarSign size={16} className=\"text-muted-foreground\" />\n            <span className=\"text-sm text-muted-foreground font-medium\">\n              {currencyConfig.code}\n            </span>\n          </div>\n        )}\n\n        <input\n          ref={componentRef}\n          id={inputId}\n          type=\"text\"\n          value={displayValue}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyPress={handleKeyPress}\n          placeholder={effectivePlaceholder}\n          disabled={disabled || loading}\n          step={step}\n          className={cn(\n            // Base styles\n            'flex w-full rounded-lg border ring-offset-background',\n            'file:border-0 file:bg-transparent file:text-sm file:font-medium',\n            'placeholder:text-muted-foreground',\n            'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n            'disabled:cursor-not-allowed disabled:opacity-50',\n            'transition-all duration-200',\n            \n            // Size\n            sizeClasses[size],\n            \n            // Variant\n            variantClasses[variant],\n            \n            // Financial styling\n            'font-mono text-right',\n            \n            // Padding adjustments\n            showCurrency ? 'pl-16' : 'pl-4',\n            'pr-4',\n            trend && 'pr-8',\n            \n            // States\n            isFocused && 'ring-2 ring-ring ring-offset-2 border-ring',\n            (error || !isValid) && 'border-destructive focus-visible:ring-destructive',\n            loading && 'animate-pulse',\n            \n            className\n          )}\n          {...props}\n        />\n\n        {/* Trend indicator */}\n        {trend && trend !== 'neutral' && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            {trend === 'up' ? (\n              <TrendingUp size={16} className=\"text-success\" />\n            ) : (\n              <TrendingDown size={16} className=\"text-destructive\" />\n            )}\n          </div>\n        )}\n\n        {/* Loading indicator */}\n        {loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <div className=\"w-4 h-4 border-2 border-muted-foreground border-t-transparent rounded-full animate-spin\" />\n          </div>\n        )}\n\n        {/* Error icon */}\n        {(error || !isValid) && !loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <AlertCircle size={16} className=\"text-destructive\" />\n          </div>\n        )}\n      </div>\n\n      {/* Description */}\n      {description && !error && isValid && (\n        <p className=\"text-sm text-muted-foreground\">\n          {description}\n        </p>\n      )}\n\n      {/* Error message */}\n      {(error || !isValid) && (\n        <p className=\"text-sm text-destructive flex items-center gap-1\">\n          <AlertCircle size={14} />\n          {error || validationMessage}\n        </p>\n      )}\n\n      {/* Trend information */}\n      {showTrend && previousValue !== undefined && trend !== 'neutral' && (\n        <p className=\"text-xs text-muted-foreground flex items-center gap-1\">\n          {trend === 'up' ? (\n            <TrendingUp size={12} className=\"text-success\" />\n          ) : (\n            <TrendingDown size={12} className=\"text-destructive\" />\n          )}\n          vs. previous: {formatCurrency(previousValue)}\n        </p>\n      )}\n    </div>\n  );\n});\n\nCurrencyInput.displayName = 'CurrencyInput';\n\nexport { CurrencyInput as default, CURRENCY_CONFIG };","import React from 'react';\nimport { Calculator, TrendingUp, DollarSign, Percent } from 'lucide-react';\nimport { cn } from '../../utils/cn';\n\nconst LoadingState = ({\n  type = 'default', // 'default', 'calculation', 'financial', 'inline'\n  size = 'default', // 'sm', 'default', 'lg'\n  message,\n  className,\n  showIcon = true,\n  variant = 'default', // 'default', 'subtle', 'pulsing'\n  ...props\n}) => {\n  // Get appropriate icon based on type\n  const getIcon = () => {\n    switch (type) {\n      case 'calculation':\n        return Calculator;\n      case 'financial':\n        return DollarSign;\n      case 'trend':\n        return TrendingUp;\n      case 'percentage':\n        return Percent;\n      default:\n        return Calculator;\n    }\n  };\n\n  const Icon = getIcon();\n\n  // Size configurations\n  const sizeConfig = {\n    sm: {\n      spinner: 'w-3 h-3 border',\n      icon: 12,\n      text: 'text-xs',\n      gap: 'gap-1',\n      padding: 'p-1'\n    },\n    default: {\n      spinner: 'w-4 h-4 border-2',\n      icon: 16,\n      text: 'text-sm',\n      gap: 'gap-2',\n      padding: 'p-2'\n    },\n    lg: {\n      spinner: 'w-6 h-6 border-2',\n      icon: 20,\n      text: 'text-base',\n      gap: 'gap-3',\n      padding: 'p-3'\n    }\n  };\n\n  const config = sizeConfig[size];\n\n  // Variant styles\n  const variantStyles = {\n    default: 'text-muted-foreground',\n    subtle: 'text-muted-foreground/70',\n    pulsing: 'text-muted-foreground animate-pulse'\n  };\n\n  // Inline variant for table cells and small spaces\n  if (type === 'inline') {\n    return (\n      <div className={cn('flex items-center justify-center', config.gap, className)} {...props}>\n        <div className={cn(\n          config.spinner,\n          'border-muted-foreground border-t-transparent rounded-full animate-spin',\n          variantStyles[variant]\n        )} />\n        {message && (\n          <span className={cn(config.text, variantStyles[variant])}>\n            {message}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  // Default card-style loading state\n  const defaultMessage = {\n    calculation: 'Calculating...',\n    financial: 'Processing financial data...',\n    trend: 'Analyzing trends...',\n    percentage: 'Computing percentages...',\n    default: 'Loading...'\n  };\n\n  const displayMessage = message || defaultMessage[type];\n\n  return (\n    <div className={cn(\n      'flex flex-col items-center justify-center',\n      config.padding,\n      config.gap,\n      'bg-muted/30 rounded-lg border border-dashed border-muted-foreground/30',\n      className\n    )} {...props}>\n      <div className=\"flex items-center gap-2\">\n        {/* Animated spinner */}\n        <div className={cn(\n          config.spinner,\n          'border-muted-foreground border-t-transparent rounded-full animate-spin',\n          variantStyles[variant]\n        )} />\n        \n        {/* Icon with subtle animation */}\n        {showIcon && (\n          <Icon \n            size={config.icon} \n            className={cn(\n              'animate-pulse',\n              variantStyles[variant]\n            )} \n          />\n        )}\n      </div>\n      \n      {/* Loading message */}\n      {displayMessage && (\n        <p className={cn(\n          config.text,\n          'font-medium text-center',\n          variantStyles[variant]\n        )}>\n          {displayMessage}\n        </p>\n      )}\n    </div>\n  );\n};\n\n// Skeleton component for table cells and consistent spacing\nconst LoadingSkeleton = ({\n  width = 'w-20',\n  height = 'h-6',\n  className,\n  variant = 'default', // 'default', 'currency', 'percentage'\n  ...props\n}) => {\n  const variantClasses = {\n    default: 'bg-muted',\n    currency: 'bg-emerald-100',\n    percentage: 'bg-blue-100'\n  };\n\n  return (\n    <div\n      className={cn(\n        'animate-pulse rounded-md',\n        width,\n        height,\n        variantClasses[variant],\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\n// Pulse component for subtle loading indicators\nconst LoadingPulse = ({\n  children,\n  className,\n  isLoading = false,\n  ...props\n}) => {\n  if (!isLoading) {\n    return children;\n  }\n\n  return (\n    <div className={cn('animate-pulse opacity-50', className)} {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Dots animation for minimal loading states\nconst LoadingDots = ({\n  size = 'default',\n  className,\n  variant = 'default',\n  ...props\n}) => {\n  const sizeClasses = {\n    sm: 'w-1 h-1',\n    default: 'w-1.5 h-1.5',\n    lg: 'w-2 h-2'\n  };\n\n  const variantClasses = {\n    default: 'bg-muted-foreground',\n    primary: 'bg-primary',\n    success: 'bg-success',\n    warning: 'bg-warning'\n  };\n\n  return (\n    <div \n      className={cn('flex items-center gap-1', className)} \n      {...props}\n    >\n      {[0, 1, 2].map((i) => (\n        <div\n          key={i}\n          className={cn(\n            'rounded-full animate-pulse',\n            sizeClasses[size],\n            variantClasses[variant]\n          )}\n          style={{\n            animationDelay: `${i * 0.2}s`,\n            animationDuration: '1.4s'\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\n// Export all components\nexport default LoadingState;\nexport { LoadingSkeleton, LoadingPulse, LoadingDots };","import React from 'react';\nimport { AlertCircle, CheckCircle, AlertTriangle, Info, X } from 'lucide-react';\nimport { cn } from '../../utils/cn';\n\nconst ValidationFeedback = ({\n  type = 'error', // 'error', 'warning', 'success', 'info'\n  message,\n  className,\n  size = 'default', // 'sm', 'default', 'lg'\n  variant = 'default', // 'default', 'inline', 'floating', 'subtle'\n  showIcon = true,\n  dismissible = false,\n  onDismiss,\n  position = 'bottom', // 'top', 'bottom', 'left', 'right' (for floating)\n  children,\n  ...props\n}) => {\n  // Icon mapping\n  const iconMap = {\n    error: AlertCircle,\n    warning: AlertTriangle,\n    success: CheckCircle,\n    info: Info\n  };\n\n  const Icon = iconMap[type];\n\n  // Size configurations\n  const sizeConfig = {\n    sm: {\n      text: 'text-xs',\n      icon: 12,\n      padding: 'p-2',\n      gap: 'gap-1'\n    },\n    default: {\n      text: 'text-sm',\n      icon: 14,\n      padding: 'p-3',\n      gap: 'gap-2'\n    },\n    lg: {\n      text: 'text-base',\n      icon: 16,\n      padding: 'p-4',\n      gap: 'gap-3'\n    }\n  };\n\n  const config = sizeConfig[size];\n\n  // Type-based styling\n  const typeStyles = {\n    error: {\n      bg: 'bg-destructive/10',\n      border: 'border-destructive/20',\n      text: 'text-destructive',\n      icon: 'text-destructive'\n    },\n    warning: {\n      bg: 'bg-warning/10',\n      border: 'border-warning/20',\n      text: 'text-warning-foreground',\n      icon: 'text-warning'\n    },\n    success: {\n      bg: 'bg-success/10',\n      border: 'border-success/20',\n      text: 'text-success-foreground',\n      icon: 'text-success'\n    },\n    info: {\n      bg: 'bg-blue-50',\n      border: 'border-blue-200',\n      text: 'text-blue-700',\n      icon: 'text-blue-500'\n    }\n  };\n\n  const styles = typeStyles[type];\n\n  // Variant-specific classes\n  const getVariantClasses = () => {\n    switch (variant) {\n      case 'inline':\n        return 'flex items-center';\n      case 'floating':\n        return cn(\n          'absolute z-50 shadow-lg rounded-lg',\n          position === 'top' && 'bottom-full mb-2',\n          position === 'bottom' && 'top-full mt-2',\n          position === 'left' && 'right-full mr-2',\n          position === 'right' && 'left-full ml-2'\n        );\n      case 'subtle':\n        return 'border-0 bg-transparent';\n      default:\n        return 'rounded-lg border';\n    }\n  };\n\n  // Don't render if no message and no children\n  if (!message && !children) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        'flex items-start',\n        config.gap,\n        config.padding,\n        styles.bg,\n        styles.border,\n        getVariantClasses(),\n        className\n      )}\n      {...props}\n    >\n      {/* Icon */}\n      {showIcon && Icon && (\n        <Icon\n          size={config.icon}\n          className={cn('flex-shrink-0 mt-0.5', styles.icon)}\n        />\n      )}\n\n      {/* Content */}\n      <div className=\"flex-1 min-w-0\">\n        {message && (\n          <p className={cn(config.text, styles.text, 'font-medium')}>\n            {message}\n          </p>\n        )}\n        {children && (\n          <div className={cn(config.text, styles.text)}>\n            {children}\n          </div>\n        )}\n      </div>\n\n      {/* Dismiss button */}\n      {dismissible && onDismiss && (\n        <button\n          onClick={onDismiss}\n          className={cn(\n            'flex-shrink-0 ml-2 p-1 rounded-full hover:bg-black/10 transition-colors',\n            styles.text\n          )}\n          aria-label=\"Dismiss\"\n        >\n          <X size={config.icon} />\n        </button>\n      )}\n    </div>\n  );\n};\n\n// Field-specific validation component\nconst FieldValidation = ({\n  error,\n  warning,\n  success,\n  info,\n  className,\n  ...props\n}) => {\n  // Determine the highest priority message\n  let type, message;\n  \n  if (error) {\n    type = 'error';\n    message = error;\n  } else if (warning) {\n    type = 'warning';\n    message = warning;\n  } else if (success) {\n    type = 'success';\n    message = success;\n  } else if (info) {\n    type = 'info';\n    message = info;\n  } else {\n    return null;\n  }\n\n  return (\n    <ValidationFeedback\n      type={type}\n      message={message}\n      size=\"sm\"\n      variant=\"inline\"\n      className={className}\n      {...props}\n    />\n  );\n};\n\n// List of validation errors/warnings\nconst ValidationList = ({\n  items = [],\n  className,\n  showNumbers = false,\n  ...props\n}) => {\n  if (!items.length) return null;\n\n  return (\n    <div className={cn('space-y-2', className)} {...props}>\n      {items.map((item, index) => (\n        <ValidationFeedback\n          key={index}\n          type={item.type || 'error'}\n          message={showNumbers ? `${index + 1}. ${item.message}` : item.message}\n          size=\"sm\"\n          variant=\"inline\"\n        />\n      ))}\n    </div>\n  );\n};\n\n// Summary validation component for forms\nconst ValidationSummary = ({\n  errors = [],\n  warnings = [],\n  className,\n  title = 'Please fix the following issues:',\n  collapsible = false,\n  ...props\n}) => {\n  const [isCollapsed, setIsCollapsed] = React.useState(collapsible);\n  \n  const totalIssues = errors.length + warnings.length;\n  \n  if (totalIssues === 0) return null;\n\n  const allItems = [\n    ...errors.map(error => ({ type: 'error', message: error })),\n    ...warnings.map(warning => ({ type: 'warning', message: warning }))\n  ];\n\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <h4 className=\"text-sm font-semibold text-foreground\">\n          {title}\n        </h4>\n        {collapsible && (\n          <button\n            onClick={() => setIsCollapsed(!isCollapsed)}\n            className=\"text-xs text-muted-foreground hover:text-foreground transition-colors\"\n          >\n            {isCollapsed ? `Show ${totalIssues} issues` : 'Hide'}\n          </button>\n        )}\n      </div>\n\n      {/* Issues list */}\n      {!isCollapsed && (\n        <ValidationList\n          items={allItems}\n          showNumbers\n        />\n      )}\n\n      {/* Collapsed summary */}\n      {isCollapsed && (\n        <p className=\"text-sm text-muted-foreground\">\n          {errors.length > 0 && `${errors.length} error${errors.length > 1 ? 's' : ''}`}\n          {errors.length > 0 && warnings.length > 0 && ', '}\n          {warnings.length > 0 && `${warnings.length} warning${warnings.length > 1 ? 's' : ''}`}\n        </p>\n      )}\n    </div>\n  );\n};\n\n// Real-time validation status indicator\nconst ValidationStatus = ({\n  isValidating = false,\n  isValid = true,\n  className,\n  size = 'default',\n  ...props\n}) => {\n  const sizeClasses = {\n    sm: 'w-3 h-3',\n    default: 'w-4 h-4',\n    lg: 'w-5 h-5'\n  };\n\n  if (isValidating) {\n    return (\n      <div\n        className={cn(\n          'border-2 border-blue-500 border-t-transparent rounded-full animate-spin',\n          sizeClasses[size],\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n\n  if (isValid) {\n    return (\n      <CheckCircle\n        className={cn('text-success', className)}\n        size={size === 'sm' ? 12 : size === 'lg' ? 20 : 16}\n        {...props}\n      />\n    );\n  }\n\n  return (\n    <AlertCircle\n      className={cn('text-destructive', className)}\n      size={size === 'sm' ? 12 : size === 'lg' ? 20 : 16}\n      {...props}\n    />\n  );\n};\n\nexport default ValidationFeedback;\nexport { FieldValidation, ValidationList, ValidationSummary, ValidationStatus };"],"file":"assets/ui-components-B6dtFGFZ.js"}