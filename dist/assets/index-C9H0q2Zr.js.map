{"version":3,"mappings":"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","names":["secureApiClient","constructor","this","baseURL","client","axios","create","timeout","headers","interceptors","response","use","error","Promise","reject","getQuote","symbol","get","toUpperCase","data","getHistoricalData","range","interval","params","getIntradayData","getBatchQuotes","symbols","post","map","s","getIncomeStatement","period","limit","getBalanceSheet","getCashFlowStatement","getFinancialRatios","getCompanyProfile","getPeerCompanies","getDCFValuation","getEarnings","getFREDData","seriesId","startDate","endDate","start_date","end_date","getEconomicIndicators","getTreasuryRates","getHealthStatus","getServiceHealth","getCacheStats","fetchMarketData","ticker","meta","timestamps","d","timestamp","prices","close","high","low","open","volume","source","fetchFinancialStatements","statement","Error","fetchPeerComparables","peers","AIFinancialAssistant","isOpen","onToggle","currentContext","portfolioData","marketData","messages","setMessages","useState","id","type","content","Date","suggestions","inputValue","setInputValue","isLoading","setIsLoading","isMinimized","setIsMinimized","messagesEndRef","useRef","inputRef","useEffect","current","scrollIntoView","behavior","handleSendMessage","async","message","trim","userMessage","now","toString","prev","context","previousMessages","slice","assistantMessage","charts","actions","fallbackMessage","quickActions","icon","PieChart","label","action","TrendingUp","AlertTriangle","Calculator","Target","BarChart3","jsx","className","children","jsxs","motion","div","initial","opacity","scale","y","animate","height","exit","Brain","onClick","Maximize2","Minimize2","X","Fragment","AnimatePresence","User","Bot","length","suggestion","index","handleSuggestionClick","toLocaleTimeString","style","animationDelay","ref","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","placeholder","rows","minHeight","maxHeight","disabled","Send","CLICommandProcessor","commandHistory","aliases","p","md","calc","nav","help","clear","ls","ll","cd","commands","initializeCommands","updateContext","newContext","description","usage","category","handler","handleHelp","bind","portfolio","handlePortfolio","handleMarketData","quote","handleQuote","calculate","handleCalculate","dcf","handleDCF","navigate","handleNavigate","list","handleList","search","handleSearch","analyze","handleAnalyze","risk","handleRisk","export","handleExport","import","handleImport","status","handleStatus","handleClear","version","handleVersion","processCommand","input","parts","parseCommand","commandName","resolveAlias","command","success","result","args","flags","push","split","remaining","i","part","startsWith","substring","getSuggestions","partial","toLowerCase","Object","keys","filter","cmd","concat","alias","sort","getCommandArgumentSuggestions","output","categories","entries","forEach","name","padEnd","join","format","calcType","growth","discount","terminal","navigation","page","routes","workspace","analysis","detailed","holdings","h","Symbol","Shares","shares","Value","Weight","weight","toFixed","query","encodeURIComponent","charAt","metric","dataType","toISOString","filePath","path","toLocaleString","formatCurrency","currency","compact","isNaN","Intl","NumberFormat","notation","minimumFractionDigits","maximumFractionDigits","formatPercentage","decimals","formatNumber","calculateDCFValuation","inputs","currentRevenue","revenueGrowthRate","fcfMargin","wacc","terminalGrowthRate","sharesOutstanding","totalDebt","cash","projectionYears","projectedRevenues","baseCashFlow","growthRates","years","cashFlows","currentCashFlow","Array","isArray","projectCashFlows","projectedFCFs","revenue","terminalValue","finalCashFlow","discountRate","calculateTerminalValue","pvOfCashFlows","reduce","npv","cashFlow","Math","pow","pvOfTerminalValue","enterpriseValue","equityValue","pricePerShare","calculateLBOReturns","purchasePrice","ebitda","debtMultiple","exitMultiple","exitYear","managementFeeRate","carriedInterestRate","equityInvestment","exitEbitda","exitEnterpriseValue","exitEquityValue","totalReturn","irr","moic","totalManagementFees","carriedInterest","max","managementFees","netReturn","calculateComparableMetrics","companyData","peerData","peerStats","peerValues","peer","values","validValues","v","median","mean","min","a","b","floor","sum","count","calculateStatistics","company","peerStatistics","relativeValuation","marketCapPercentile","calculatePercentile","marketCap","peRatioRelative","peRatio","evEbitdaRelative","evToEbitda","priceToBookRelative","priceToBook","dataset","validDataset","PersistentCLI","onNavigate","isExpanded","setIsExpanded","setInput","setOutput","setCommandHistory","historyIndex","setHistoryIndex","setSuggestions","showSuggestions","setShowSuggestions","isProcessing","setIsProcessing","outputRef","cliProcessor","scrollTop","scrollHeight","focus","addOutput","useCallback","newOutput","formatCommandOutput","formatTable","JSON","stringify","formatPortfolioData","formatMarketData","maxWidths","header","row","String","width","repeat","totalValue","holding","padStart","getOutputTypeColor","role","tabIndex","onKeyDown","Terminal","stopPropagation","title","exportText","item","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","exportOutput","Download","ChevronDown","ChevronUp","transition","duration","ease","newSuggestions","handleCommand","newIndex","Zap","Icon","size","color","strokeWidth","props","IconComponent","LucideIcons","HelpCircle","propTypes","PropTypes","string","isRequired","number","ErrorBoundary","React","Component","super","state","hasError","getDerivedStateFromError","_error","componentDidCatch","errorInfo","__ErrorBoundary","window","__COMPONENT_ERROR__","render","xmlns","viewBox","fill","stroke","strokeMiterlimit","strokeLinecap","strokeLinejoin","location","accessibilityTester","options","rules","enabled","tags","runOnly","reporter","violations","lastTestResults","runTests","element","testOptions","results","axeCore","run","logResults","storeResults","testFinancialComponent","selector","componentType","querySelector","config","spreadsheet","chart","calculator","modal","testKeyboardNavigation","focusableElements","getFocusableElements","tabOrderIssues","previousTabIndex","tagName","position","issue","focusVisibilityIssues","styles","getComputedStyle","hasOutline","outline","hasBoxShadow","boxShadow","hasBackground","backgroundColor","focusableElementsCount","passed","testColorContrast","textElements","querySelectorAll","contrastIssues","textColor","contrast","calculateContrastRatio","fontSize","parseInt","fontWeight","requiredRatio","required","text","textContent","totalElements","testFormAccessibility","forms","formIssues","form","formIndex","issues","hasAssociatedLabel","hasRequiredIndication","getAttribute","hasErrorMessage","isFinancialInput","autocomplete","inputType","inputId","inputName","totalForms","generateReport","passes","incomplete","inapplicable","summary","totalChecks","score","calculateAccessibilityScore","violation","impact","helpUrl","nodes","recommendations","generateRecommendations","financialSpecific","getFinancialAccessibilityInsights","totalTests","impactWeights","critical","serious","moderate","minor","violationScore","maxPossibleScore","priority","solution","financialContext","insights","component","recommendation","from","ariaLabel","ariaLabelledby","closest","ariaRequired","requiredAttr","hasAttribute","hasRequiredText","hasRequiredTextIndicator","getAssociatedLabel","includes","ariaDescribedby","errorElement","getElementById","some","color1","color2","rgb1","parseColor","rgb2","l1","getLuminance","l2","match","r","g","rs","gs","bs","c","reportViolations","node","reportData","existingReports","parse","localStorage","getItem","splice","setItem","webVitalsData","CLS","FID","FCP","LCP","TTFB","INP","initializePerformanceMonitoring","clsValue","clsEntries","PerformanceObserver","entryList","entry","getEntries","hadRecentInput","reportWebVital","observe","buffered","processingStart","startTime","interactionId","processingEnd","lastEntry","navigationEntry","performance","getEntriesByType","responseStart","requestStart","initializeWebVitals","mark","trackComponentRender","componentName","renderTime","measure","reportCustomMetric","trackCalculationPerformance","calculationType","complexity","addEventListener","setTimeout","timings","userAgent","navigator","connection","getConnectionInfo","sendToAnalytics","reportNavigationTiming","dns","domainLookupEnd","domainLookupStart","tcp","connectEnd","connectStart","ssl","secureConnectionStart","ttfb","responseEnd","domProcessing","domComplete","domLoading","totalLoadTime","loadEventEnd","fetchStart","initiatorType","resourceData","transferSize","encodedBodySize","cached","reportResourceTiming","entryTypes","interactionCount","totalInteractionTime","eventType","event","requestAnimationFrame","interactionTime","passive","setInterval","averageTime","trackUserInteractions","round","checkPerformanceBudgets","budget","overBy","effectiveType","downlink","rtt","analyticsData","sessionId","getSessionId","userId","getUserId","existingData","sendAnalyticsBatch","queuedData","gtag","custom_parameter","removeItem","sessionStorage","random","substr","reportPerformanceMetric","trackFinancialComponentPerformance","metrics","useFinancialAccessibility","accessibility","autoTest","testInterval","onViolations","onSuccess","setResults","setViolations","setScore","lastTestTime","setLastTestTime","elementRef","intervalRef","targetElement","testResults","navResults","contrastResults","formResults","report","runAutoTest","clearInterval","useAccessibility","testFinancialFeatures","keyboardNav","colorContrast","formAccessibility","PerformanceDashboard","isVisible","onClose","dashboardData","setDashboardData","refreshInterval","setRefreshInterval","isMonitoring","setIsMonitoring","alertThreshold","setAlertThreshold","alerts","startMonitoring","startAccessibilityMonitoring","stopMonitoring","stopAccessibilityMonitoring","clearAlerts","threshold","alertOnViolations","monitorInterval","setAlerts","monitor","alert","criticalViolations","useAccessibilityMonitor","refreshData","accessibilityHistory","analyticsQueue","recentAccessibility","avgScore","avgViolations","performanceMetrics","webVitalMetrics","webVitals","budgetViolations","currentScore","averageScore","averageViolations","history","trends","scoreImproving","recentMetrics","webVitalHistory","getPerformanceDashboardData","toggleMonitoring","formatMetric","unit","good","poor","getMetricStatus","statusColor","getStatusColor","fillRule","clipRule","htmlFor","SEOProvider","HelmetProvider","ScrollToTop","pathname","useLocation","scrollTo","cn","twMerge","clsx","LoadingSpinner","showText","variant","variantClasses","primary","secondary","muted","white","sm","default","lg","xl","FinancialModelWorkspace","lazy","__vitePreload","__VITE_PRELOAD__","RealTimeMarketDataCenter","ScenarioAnalysisSensitivityTools","ValuationTool","ValuationToolDocs","ValuationToolDemo","PrivateAnalysis","ValuationWorkbench","ModelLab","PortfolioManagement","FinancialInputsDemo","NotFound","Routes","BrowserRouter","Suspense","fallback","RouterRoutes","Route","App","hideDashboard","setIsVisible","toggleDashboard","showDashboard","handleKeyDown","ctrlKey","metaKey","removeEventListener","usePerformanceDashboard","isAIAssistantOpen","setIsAIAssistantOpen","setCurrentContext","_setPortfolioData","_setMarketData","handleKeyPress","route","userSlice","createSlice","initialState","isAuthenticated","reducers","login","payload","logout","store","configureStore","reducer","user","currentNonce","getCurrentNonce","crypto","array","Uint8Array","getRandomValues","btoa","fromCharCode","apply","generateNonce","validateCSPCompliance","inlineScripts","elements","inlineStyles","script","src","setupCSPReporting","fetch","method","catch","sendCSPViolation","blockedURI","violatedDirective","originalPolicy","disposition","isLocalhost","Boolean","hostname","registerSW","origin","swUrl","then","contentType","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","showInAppNotification","checkValidServiceWorker","register","installingWorker","installing","controller","Notification","permission","badge","tag","showUpdateAvailableNotification","notification","innerHTML","transform","parentElement","remove","deferredPrompt","installBanner","prompt","outcome","userChoice","showInstallPrompt","container","createRoot","Provider","nonce","setAttribute","applyCspNonce","initializeSecurity","URLSearchParams","webdriver","has","isAutomatedEnvironment","updateOnlineStatus","isOnline","onLine","setupNetworkHandling"],"ignoreList":[],"sources":["../../src/services/secureApiClient.js","../../src/components/AIAssistant/AIFinancialAssistant.jsx","../../src/services/cliCommandProcessor.js","../../src/utils/dataTransformation.js","../../src/components/CLI/PersistentCLI.jsx","../../src/components/AppIcon.jsx","../../src/components/ErrorBoundary.jsx","../../src/utils/accessibilityTesting.js","../../src/utils/performanceMonitoring.js","../../src/hooks/useAccessibility.js","../../src/components/PerformanceDashboard/PerformanceDashboard.jsx","../../src/components/SEO/SEOProvider.jsx","../../src/components/ScrollToTop.jsx","../../src/utils/cn.js","../../src/components/ui/LoadingSpinner.jsx","../../src/Routes.jsx","../../src/App.jsx","../../src/hooks/usePerformanceDashboard.js","../../src/store/slices/userSlice.js","../../src/store/store.js","../../src/utils/securityHeaders.js","../../src/utils/serviceWorker.js","../../src/index.jsx"],"sourcesContent":["import axios from 'axios';\n\n/**\n * Secure API Client for FinanceAnalyst Pro\n * This client communicates with our secure backend instead of making direct API calls\n * All API keys are now handled securely on the server side\n */\nclass SecureApiClient {\n  constructor() {\n    this.baseURL = import.meta.env.VITE_API_BASE_URL || 'http://localhost:3001/api';\n    this.client = axios.create({\n      baseURL: this.baseURL,\n      timeout: 15000,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Response interceptor for error handling\n    this.client.interceptors.response.use(\n      (response) => response,\n      (error) => {\n        console.error('API Error:', error.response?.data || error.message);\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  // =============================================================================\n  // MARKET DATA METHODS\n  // =============================================================================\n\n  /**\n   * Get real-time quote for a symbol\n   * @param {string} symbol - Stock symbol\n   * @returns {Promise<Object>} Quote data\n   */\n  async getQuote(symbol) {\n    const response = await this.client.get(`/market-data/quote/${symbol.toUpperCase()}`);\n    return response.data;\n  }\n\n  /**\n   * Get historical price data\n   * @param {string} symbol - Stock symbol\n   * @param {string} range - Time range (1d, 5d, 1mo, 3mo, 6mo, 1y, 2y, 5y)\n   * @param {string} interval - Data interval (1m, 5m, 15m, 30m, 60m, 1d, etc.)\n   * @returns {Promise<Object>} Historical data\n   */\n  async getHistoricalData(symbol, range = '1mo', interval = '1d') {\n    const response = await this.client.get(`/market-data/historical/${symbol.toUpperCase()}`, {\n      params: { range, interval }\n    });\n    return response.data;\n  }\n\n  /**\n   * Get intraday price data\n   * @param {string} symbol - Stock symbol\n   * @param {string} interval - Intraday interval (1min, 5min, 15min, 30min, 60min)\n   * @returns {Promise<Object>} Intraday data\n   */\n  async getIntradayData(symbol, interval = '5min') {\n    const response = await this.client.get(`/market-data/intraday/${symbol.toUpperCase()}`, {\n      params: { interval }\n    });\n    return response.data;\n  }\n\n  /**\n   * Get quotes for multiple symbols\n   * @param {string[]} symbols - Array of stock symbols\n   * @returns {Promise<Object>} Batch quote data\n   */\n  async getBatchQuotes(symbols) {\n    const response = await this.client.post('/market-data/batch', {\n      symbols: symbols.map(s => s.toUpperCase())\n    });\n    return response.data;\n  }\n\n  // =============================================================================\n  // FINANCIAL STATEMENTS METHODS\n  // =============================================================================\n\n  /**\n   * Get income statement\n   * @param {string} symbol - Stock symbol\n   * @param {string} period - 'annual' or 'quarter'\n   * @param {number} limit - Number of periods to retrieve\n   * @returns {Promise<Object>} Income statement data\n   */\n  async getIncomeStatement(symbol, period = 'annual', limit = 5) {\n    const response = await this.client.get(`/financial-statements/income/${symbol.toUpperCase()}`, {\n      params: { period, limit }\n    });\n    return response.data;\n  }\n\n  /**\n   * Get balance sheet\n   * @param {string} symbol - Stock symbol\n   * @param {string} period - 'annual' or 'quarter'\n   * @param {number} limit - Number of periods to retrieve\n   * @returns {Promise<Object>} Balance sheet data\n   */\n  async getBalanceSheet(symbol, period = 'annual', limit = 5) {\n    const response = await this.client.get(`/financial-statements/balance/${symbol.toUpperCase()}`, {\n      params: { period, limit }\n    });\n    return response.data;\n  }\n\n  /**\n   * Get cash flow statement\n   * @param {string} symbol - Stock symbol\n   * @param {string} period - 'annual' or 'quarter'\n   * @param {number} limit - Number of periods to retrieve\n   * @returns {Promise<Object>} Cash flow data\n   */\n  async getCashFlowStatement(symbol, period = 'annual', limit = 5) {\n    const response = await this.client.get(`/financial-statements/cash-flow/${symbol.toUpperCase()}`, {\n      params: { period, limit }\n    });\n    return response.data;\n  }\n\n  /**\n   * Get financial ratios\n   * @param {string} symbol - Stock symbol\n   * @param {string} period - 'annual' or 'quarter'\n   * @param {number} limit - Number of periods to retrieve\n   * @returns {Promise<Object>} Financial ratios data\n   */\n  async getFinancialRatios(symbol, period = 'annual', limit = 5) {\n    const response = await this.client.get(`/financial-statements/ratios/${symbol.toUpperCase()}`, {\n      params: { period, limit }\n    });\n    return response.data;\n  }\n\n  // =============================================================================\n  // COMPANY DATA METHODS\n  // =============================================================================\n\n  /**\n   * Get company profile and overview\n   * @param {string} symbol - Stock symbol\n   * @returns {Promise<Object>} Company profile data\n   */\n  async getCompanyProfile(symbol) {\n    const response = await this.client.get(`/company-data/profile/${symbol.toUpperCase()}`);\n    return response.data;\n  }\n\n  /**\n   * Get peer companies\n   * @param {string} symbol - Stock symbol\n   * @param {number} limit - Number of peers to retrieve\n   * @returns {Promise<Object>} Peer companies data\n   */\n  async getPeerCompanies(symbol, limit = 10) {\n    const response = await this.client.get(`/company-data/peers/${symbol.toUpperCase()}`, {\n      params: { limit }\n    });\n    return response.data;\n  }\n\n  /**\n   * Get DCF valuation\n   * @param {string} symbol - Stock symbol\n   * @returns {Promise<Object>} DCF valuation data\n   */\n  async getDCFValuation(symbol) {\n    const response = await this.client.get(`/company-data/dcf/${symbol.toUpperCase()}`);\n    return response.data;\n  }\n\n  /**\n   * Get earnings data\n   * @param {string} symbol - Stock symbol\n   * @param {number} limit - Number of earnings periods to retrieve\n   * @returns {Promise<Object>} Earnings data\n   */\n  async getEarnings(symbol, limit = 8) {\n    const response = await this.client.get(`/company-data/earnings/${symbol.toUpperCase()}`, {\n      params: { limit }\n    });\n    return response.data;\n  }\n\n  // =============================================================================\n  // ECONOMIC DATA METHODS\n  // =============================================================================\n\n  /**\n   * Get FRED economic data\n   * @param {string} seriesId - FRED series ID\n   * @param {number} limit - Number of observations to retrieve\n   * @param {string} startDate - Start date (ISO format)\n   * @param {string} endDate - End date (ISO format)\n   * @returns {Promise<Object>} Economic data\n   */\n  async getFREDData(seriesId, limit = 100, startDate = null, endDate = null) {\n    const params = { limit };\n    if (startDate) params.start_date = startDate;\n    if (endDate) params.end_date = endDate;\n\n    const response = await this.client.get(`/economic-data/fred/${seriesId.toUpperCase()}`, {\n      params\n    });\n    return response.data;\n  }\n\n  /**\n   * Get popular economic indicators\n   * @returns {Promise<Object>} Economic indicators data\n   */\n  async getEconomicIndicators() {\n    const response = await this.client.get('/economic-data/indicators');\n    return response.data;\n  }\n\n  /**\n   * Get treasury yield curve data\n   * @returns {Promise<Object>} Treasury rates data\n   */\n  async getTreasuryRates() {\n    const response = await this.client.get('/economic-data/treasury-rates');\n    return response.data;\n  }\n\n  // =============================================================================\n  // HEALTH AND STATUS METHODS\n  // =============================================================================\n\n  /**\n   * Check backend health\n   * @returns {Promise<Object>} Health status\n   */\n  async getHealthStatus() {\n    const response = await this.client.get('/health');\n    return response.data;\n  }\n\n  /**\n   * Check service health (API providers)\n   * @returns {Promise<Object>} Service health status\n   */\n  async getServiceHealth() {\n    const response = await this.client.get('/health/services');\n    return response.data;\n  }\n\n  /**\n   * Get cache statistics\n   * @returns {Promise<Object>} Cache statistics\n   */\n  async getCacheStats() {\n    const response = await this.client.get('/health/cache');\n    return response.data;\n  }\n\n  // =============================================================================\n  // COMPATIBILITY METHODS (for existing frontend code)\n  // =============================================================================\n\n  /**\n   * Fetch market data (compatibility method)\n   * @param {string} ticker - Stock symbol\n   * @param {string} range - Time range\n   * @returns {Promise<Object>} Market data in expected format\n   */\n  async fetchMarketData(ticker, range = '1y') {\n    try {\n      const data = await this.getHistoricalData(ticker, range);\n\n      // Transform to match expected format from old API service\n      return {\n        symbol: data.symbol,\n        range: data.range,\n        data: data.data,\n        meta: data.meta,\n        timestamps: data.data.map(d => d.timestamp),\n        prices: {\n          close: data.data.map(d => d.close),\n          high: data.data.map(d => d.high),\n          low: data.data.map(d => d.low),\n          open: data.data.map(d => d.open)\n        },\n        volume: data.data.map(d => d.volume),\n        source: data.source\n      };\n    } catch (error) {\n      console.error('Failed to fetch market data:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetch financial statements (compatibility method)\n   * @param {string} ticker - Stock symbol\n   * @param {string} statement - Statement type\n   * @param {string} period - 'annual' or 'quarter'\n   * @param {number} limit - Number of periods\n   * @returns {Promise<Object>} Financial statement data\n   */\n  async fetchFinancialStatements(ticker, statement = 'income-statement', period = 'annual', limit = 5) {\n    try {\n      let data;\n\n      switch (statement) {\n        case 'income-statement':\n          data = await this.getIncomeStatement(ticker, period, limit);\n          break;\n        case 'balance-sheet-statement':\n          data = await this.getBalanceSheet(ticker, period, limit);\n          break;\n        case 'cash-flow-statement':\n          data = await this.getCashFlowStatement(ticker, period, limit);\n          break;\n        default:\n          throw new Error(`Unsupported statement type: ${statement}`);\n      }\n\n      return data.data; // Return just the data array for compatibility\n    } catch (error) {\n      console.error('Failed to fetch financial statements:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetch peer comparables (compatibility method)\n   * @param {string} ticker - Stock symbol\n   * @returns {Promise<Array>} Peer companies array\n   */\n  async fetchPeerComparables(ticker) {\n    try {\n      const data = await this.getPeerCompanies(ticker);\n      return data.peers;\n    } catch (error) {\n      console.error('Failed to fetch peer comparables:', error);\n      throw error;\n    }\n  }\n}\n\n// Export singleton instance\nexport default new SecureApiClient();\n","/**\n * AI Financial Assistant Component\n * Conversational AI assistant for financial analysis and portfolio management\n */\n\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  Send,\n  Bot,\n  User,\n  TrendingUp,\n  AlertTriangle,\n  PieChart,\n  BarChart3,\n  Calculator,\n  Brain,\n  Target,\n  Minimize2,\n  Maximize2,\n  X\n} from 'lucide-react';\nimport React, { useState, useRef, useEffect } from 'react';\n\nimport secureApiClient from '../../services/secureApiClient';\n\nconst AIFinancialAssistant = ({\n  isOpen = false,\n  onToggle,\n  currentContext = {},\n  portfolioData = null,\n  marketData = null\n}) => {\n  const [messages, setMessages] = useState([\n    {\n      id: '1',\n      type: 'assistant',\n      content: \"Hi! I'm your AI Financial Assistant. I can help you with portfolio analysis, market insights, risk assessment, and financial planning. What would you like to explore today?\",\n      timestamp: new Date(),\n      suggestions: [\n        'Analyze my portfolio performance',\n        'What are the current market trends?',\n        'Calculate portfolio risk metrics',\n        'Suggest portfolio rebalancing'\n      ]\n    }\n  ]);\n  const [inputValue, setInputValue] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSendMessage = async(message = inputValue) => {\n    if (!message.trim()) return;\n\n    const userMessage = {\n      id: Date.now().toString(),\n      type: 'user',\n      content: message,\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsLoading(true);\n\n    try {\n      // Send message to AI assistant backend\n      const response = await secureApiClient.post('/ai-assistant/chat', {\n        message,\n        context: {\n          ...currentContext,\n          portfolioData,\n          marketData,\n          previousMessages: messages.slice(-5) // Send last 5 messages for context\n        }\n      });\n\n      const assistantMessage = {\n        id: (Date.now() + 1).toString(),\n        type: 'assistant',\n        content: response.data.response,\n        timestamp: new Date(),\n        suggestions: response.data.suggestions || [],\n        charts: response.data.charts || [],\n        actions: response.data.actions || []\n      };\n\n      setMessages(prev => [...prev, assistantMessage]);\n    } catch (error) {\n      console.error('AI Assistant error:', error);\n\n      // Fallback response\n      const fallbackMessage = {\n        id: (Date.now() + 1).toString(),\n        type: 'assistant',\n        content: \"I'm having trouble processing your request right now. This could be due to high demand or a temporary service issue. Please try again in a moment, or let me help you with basic portfolio analysis using the available data.\",\n        timestamp: new Date(),\n        suggestions: [\n          'Show portfolio overview',\n          'Calculate basic metrics',\n          'View market data',\n          'Help with analysis'\n        ]\n      };\n\n      setMessages(prev => [...prev, fallbackMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    handleSendMessage(suggestion);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const quickActions = [\n    { icon: PieChart, label: 'Portfolio Analysis', action: 'Analyze my current portfolio allocation and performance' },\n    { icon: TrendingUp, label: 'Market Insights', action: 'What are the current market trends and opportunities?' },\n    { icon: AlertTriangle, label: 'Risk Assessment', action: 'Assess the risk profile of my portfolio' },\n    { icon: Calculator, label: 'Financial Planning', action: 'Help me with financial planning and projections' },\n    { icon: Target, label: 'Goal Planning', action: 'Help me set and track financial goals' },\n    { icon: BarChart3, label: 'Performance Review', action: 'Review my portfolio performance over time' }\n  ];\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <motion.div\n        initial={{ opacity: 0, scale: 0.9, y: 20 }}\n        animate={{\n          opacity: 1,\n          scale: 1,\n          y: 0,\n          height: isMinimized ? 'auto' : '80vh'\n        }}\n        exit={{ opacity: 0, scale: 0.9, y: 20 }}\n        className=\"bg-white rounded-2xl shadow-2xl w-full max-w-4xl flex flex-col\"\n      >\n        {/* Header */}\n        <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white p-4 rounded-t-2xl flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"bg-white bg-opacity-20 p-2 rounded-lg\">\n              <Brain className=\"w-6 h-6\" />\n            </div>\n            <div>\n              <h2 className=\"text-xl font-bold\">AI Financial Assistant</h2>\n              <p className=\"text-blue-100 text-sm\">Powered by advanced financial AI</p>\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setIsMinimized(!isMinimized)}\n              className=\"p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors\"\n            >\n              {isMinimized ? <Maximize2 className=\"w-5 h-5\" /> : <Minimize2 className=\"w-5 h-5\" />}\n            </button>\n            <button\n              onClick={onToggle}\n              className=\"p-2 hover:bg-white hover:bg-opacity-20 rounded-lg transition-colors\"\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n        </div>\n\n        {!isMinimized && (\n          <>\n            {/* Messages Area */}\n            <div className=\"flex-1 overflow-y-auto p-6 space-y-4\">\n              <AnimatePresence>\n                {messages.map((message) => (\n                  <motion.div\n                    key={message.id}\n                    initial={{ opacity: 0, y: 10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    exit={{ opacity: 0, y: -10 }}\n                    className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n                  >\n                    <div className={`max-w-3xl flex ${message.type === 'user' ? 'flex-row-reverse' : 'flex-row'} items-start space-x-3`}>\n                      <div\n                        className={`p-2 rounded-lg ${\n                          message.type === 'user'\n                            ? 'bg-blue-100 text-blue-600'\n                            : 'bg-purple-100 text-purple-600'\n                        }`}\n                      >\n                        {message.type === 'user' ? <User className=\"w-5 h-5\" /> : <Bot className=\"w-5 h-5\" />}\n                      </div>\n                      <div\n                        className={`px-4 py-3 rounded-2xl ${\n                          message.type === 'user'\n                            ? 'bg-blue-600 text-white ml-3'\n                            : 'bg-gray-100 text-gray-800 mr-3'\n                        }`}\n                      >\n                        <p className=\"whitespace-pre-wrap\">{message.content}</p>\n\n                        {/* Suggestions */}\n                        {message.suggestions && message.suggestions.length > 0 && (\n                          <div className=\"mt-3 space-y-2\">\n                            <p className=\"text-sm font-medium opacity-75\">Suggestions:</p>\n                            <div className=\"flex flex-wrap gap-2\">\n                              {message.suggestions.map((suggestion, index) => (\n                                <button\n                                  key={index}\n                                  onClick={() => handleSuggestionClick(suggestion)}\n                                  className=\"text-xs px-3 py-1 bg-white bg-opacity-20 rounded-full hover:bg-opacity-30 transition-all\"\n                                >\n                                  {suggestion}\n                                </button>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n\n                        {/* Charts placeholder */}\n                        {message.charts && message.charts.length > 0 && (\n                          <div className=\"mt-3 p-3 bg-white bg-opacity-10 rounded-lg\">\n                            <p className=\"text-sm font-medium mb-2\">📊 Charts & Analysis</p>\n                            <div className=\"text-sm opacity-75\">\n                              Interactive charts would be rendered here based on the analysis\n                            </div>\n                          </div>\n                        )}\n\n                        <div className=\"text-xs opacity-50 mt-2\">\n                          {message.timestamp.toLocaleTimeString()}\n                        </div>\n                      </div>\n                    </div>\n                  </motion.div>\n                ))}\n              </AnimatePresence>\n\n              {isLoading && (\n                <motion.div\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  className=\"flex justify-start\"\n                >\n                  <div className=\"flex items-start space-x-3\">\n                    <div className=\"p-2 rounded-lg bg-purple-100 text-purple-600\">\n                      <Bot className=\"w-5 h-5\" />\n                    </div>\n                    <div className=\"px-4 py-3 rounded-2xl bg-gray-100\">\n                      <div className=\"flex space-x-1\">\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" />\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }} />\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }} />\n                      </div>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n              <div ref={messagesEndRef} />\n            </div>\n\n            {/* Quick Actions */}\n            {messages.length === 1 && (\n              <div className=\"px-6 py-4 border-t border-gray-200\">\n                <p className=\"text-sm font-medium text-gray-700 mb-3\">Quick Actions:</p>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\n                  {quickActions.map((action, index) => (\n                    <button\n                      key={index}\n                      onClick={() => handleSendMessage(action.action)}\n                      className=\"p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors flex items-center space-x-2 text-left\"\n                    >\n                      <action.icon className=\"w-5 h-5 text-gray-600\" />\n                      <span className=\"text-sm font-medium text-gray-700\">{action.label}</span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Input Area */}\n            <div className=\"p-6 border-t border-gray-200\">\n              <div className=\"flex space-x-3\">\n                <div className=\"flex-1 relative\">\n                  <textarea\n                    ref={inputRef}\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    onKeyPress={handleKeyPress}\n                    placeholder=\"Ask me anything about your portfolio, market analysis, or financial planning...\"\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n                    rows={1}\n                    style={{ minHeight: '48px', maxHeight: '120px' }}\n                  />\n                </div>\n                <button\n                  onClick={() => handleSendMessage()}\n                  disabled={!inputValue.trim() || isLoading}\n                  className=\"px-6 py-3 bg-blue-600 text-white rounded-xl hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center space-x-2\"\n                >\n                  <Send className=\"w-5 h-5\" />\n                  <span>Send</span>\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n\n        {isMinimized && (\n          <div className=\"p-4 border-t border-gray-200\">\n            <div className=\"flex items-center justify-between\">\n              <p className=\"text-sm text-gray-600\">AI Assistant is minimized</p>\n              <div className=\"flex space-x-2\">\n                <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\" />\n                <span className=\"text-xs text-gray-500\">Online</span>\n              </div>\n            </div>\n          </div>\n        )}\n      </motion.div>\n    </div>\n  );\n};\n\nexport default AIFinancialAssistant;\n","/**\n * CLI Command Processor\n * Core service for processing financial commands in the persistent CLI\n */\n\nimport secureApiClient from './secureApiClient';\n\nexport class CLICommandProcessor {\n  constructor() {\n    this.context = {};\n    this.commandHistory = [];\n    this.aliases = {\n      'p': 'portfolio',\n      'md': 'market-data',\n      'calc': 'calculate',\n      'nav': 'navigate',\n      'help': 'help',\n      'clear': 'clear',\n      'ls': 'list',\n      'll': 'list --detailed',\n      'cd': 'navigate'\n    };\n\n    this.commands = this.initializeCommands();\n  }\n\n  updateContext(newContext) {\n    this.context = { ...this.context, ...newContext };\n  }\n\n  initializeCommands() {\n    return {\n      // Help and Information\n      help: {\n        description: 'Show available commands and usage',\n        usage: 'help [command]',\n        category: 'system',\n        handler: this.handleHelp.bind(this)\n      },\n\n      // Portfolio Management\n      portfolio: {\n        description: 'Portfolio management operations',\n        usage: 'portfolio [show|analyze|rebalance|risk|holdings]',\n        category: 'portfolio',\n        handler: this.handlePortfolio.bind(this)\n      },\n\n      // Market Data\n      'market-data': {\n        description: 'Fetch market data and quotes',\n        usage: 'market-data [symbol] [--type=quote|chart|news]',\n        category: 'market',\n        handler: this.handleMarketData.bind(this)\n      },\n\n      quote: {\n        description: 'Get stock quote',\n        usage: 'quote <symbol>',\n        category: 'market',\n        handler: this.handleQuote.bind(this)\n      },\n\n      // Financial Calculations\n      calculate: {\n        description: 'Financial calculations',\n        usage: 'calculate [dcf|wacc|beta|sharpe] [parameters]',\n        category: 'calculations',\n        handler: this.handleCalculate.bind(this)\n      },\n\n      dcf: {\n        description: 'DCF valuation calculation',\n        usage: 'dcf <symbol> [--growth=5] [--discount=10] [--terminal=2]',\n        category: 'calculations',\n        handler: this.handleDCF.bind(this)\n      },\n\n      // Navigation\n      navigate: {\n        description: 'Navigate to different pages/sections',\n        usage: 'navigate <page> [workspace|market-data|portfolio|analysis|private-analysis]',\n        category: 'navigation',\n        handler: this.handleNavigate.bind(this)\n      },\n\n      // Data Management\n      list: {\n        description: 'List portfolio holdings, watchlist, or other data',\n        usage: 'list [holdings|watchlist|portfolios] [--detailed]',\n        category: 'data',\n        handler: this.handleList.bind(this)\n      },\n\n      search: {\n        description: 'Search stocks, funds, or financial instruments',\n        usage: 'search <query> [--type=stocks|etf|mutual-funds]',\n        category: 'data',\n        handler: this.handleSearch.bind(this)\n      },\n\n      // Analysis Tools\n      analyze: {\n        description: 'Perform financial analysis',\n        usage: 'analyze <symbol|portfolio> [--type=fundamental|technical|risk]',\n        category: 'analysis',\n        handler: this.handleAnalyze.bind(this)\n      },\n\n      risk: {\n        description: 'Risk analysis and metrics',\n        usage: 'risk [portfolio|symbol] [--metric=var|sharpe|beta|correlation]',\n        category: 'analysis',\n        handler: this.handleRisk.bind(this)\n      },\n\n      // Utility Commands\n      export: {\n        description: 'Export data to various formats',\n        usage: 'export <data-type> [--format=csv|json|xlsx] [--output=filename]',\n        category: 'utility',\n        handler: this.handleExport.bind(this)\n      },\n\n      import: {\n        description: 'Import portfolio or transaction data',\n        usage: 'import <file-path> [--type=portfolio|transactions]',\n        category: 'utility',\n        handler: this.handleImport.bind(this)\n      },\n\n      // System Commands\n      status: {\n        description: 'Show system and data connection status',\n        usage: 'status [--detailed]',\n        category: 'system',\n        handler: this.handleStatus.bind(this)\n      },\n\n      clear: {\n        description: 'Clear the terminal output',\n        usage: 'clear',\n        category: 'system',\n        handler: this.handleClear.bind(this)\n      },\n\n      version: {\n        description: 'Show application version and build info',\n        usage: 'version',\n        category: 'system',\n        handler: this.handleVersion.bind(this)\n      }\n    };\n  }\n\n  async processCommand(input) {\n    const parts = this.parseCommand(input);\n    const commandName = this.resolveAlias(parts.command);\n    const command = this.commands[commandName];\n\n    if (!command) {\n      return {\n        success: false,\n        error: `Command '${commandName}' not found. Type 'help' for available commands.`\n      };\n    }\n\n    try {\n      const result = await command.handler(parts.args, parts.flags);\n      this.commandHistory.push({ command: input, timestamp: new Date(), result });\n      return result;\n    } catch (error) {\n      return {\n        success: false,\n        error: `Error executing '${commandName}': ${error.message}`\n      };\n    }\n  }\n\n  parseCommand(input) {\n    const parts = input.trim().split(/\\s+/);\n    const command = parts[0];\n    const remaining = parts.slice(1);\n\n    const args = [];\n    const flags = {};\n\n    for (let i = 0; i < remaining.length; i++) {\n      const part = remaining[i];\n      if (part.startsWith('--')) {\n        const [key, value] = part.substring(2).split('=');\n        flags[key] = value || true;\n      } else if (part.startsWith('-')) {\n        flags[part.substring(1)] = true;\n      } else {\n        args.push(part);\n      }\n    }\n\n    return { command, args, flags };\n  }\n\n  resolveAlias(command) {\n    return this.aliases[command] || command;\n  }\n\n  getSuggestions(input) {\n    const parts = input.trim().split(/\\s+/);\n    const partial = parts[0].toLowerCase();\n\n    if (parts.length === 1) {\n      // Command suggestions\n      return Object.keys(this.commands)\n        .filter(cmd => cmd.startsWith(partial))\n        .concat(Object.keys(this.aliases).filter(alias => alias.startsWith(partial)))\n        .sort();\n    }\n\n    // Argument suggestions based on command\n    const command = this.resolveAlias(parts[0]);\n    return this.getCommandArgumentSuggestions(command, parts.slice(1));\n  }\n\n  getCommandArgumentSuggestions(command, args) {\n    const suggestions = [];\n\n    switch (command) {\n      case 'navigate':\n        suggestions.push('workspace', 'market-data', 'portfolio', 'analysis', 'private-analysis', 'valuation-workbench', 'model-lab');\n        break;\n      case 'portfolio':\n        suggestions.push('show', 'analyze', 'rebalance', 'risk', 'holdings', 'performance');\n        break;\n      case 'calculate':\n        suggestions.push('dcf', 'wacc', 'beta', 'sharpe', 'sortino', 'var');\n        break;\n      case 'list':\n        suggestions.push('holdings', 'watchlist', 'portfolios', 'transactions');\n        break;\n      case 'analyze':\n        suggestions.push('--type=fundamental', '--type=technical', '--type=risk');\n        break;\n      case 'export':\n        suggestions.push('--format=csv', '--format=json', '--format=xlsx');\n        break;\n    }\n\n    return suggestions;\n  }\n\n  // Command Handlers\n  async handleHelp(args, flags) {\n    if (args.length > 0) {\n      const commandName = this.resolveAlias(args[0]);\n      const command = this.commands[commandName];\n\n      if (command) {\n        return {\n          success: true,\n          output: `${commandName}: ${command.description}\\nUsage: ${command.usage}`,\n          type: 'info'\n        };\n      } else {\n        return {\n          success: false,\n          error: `Command '${commandName}' not found.`\n        };\n      }\n    }\n\n    const categories = {};\n    Object.entries(this.commands).forEach(([name, cmd]) => {\n      if (!categories[cmd.category]) categories[cmd.category] = [];\n      categories[cmd.category].push(`${name.padEnd(15)} ${cmd.description}`);\n    });\n\n    let output = 'FINANCEANALYST PRO CLI COMMANDS\\n';\n    output += '═══════════════════════════════════════════════════════════════\\n\\n';\n\n    Object.entries(categories).forEach(([category, commands]) => {\n      output += `${category.toUpperCase()}:\\n`;\n      output += commands.join('\\n') + '\\n\\n';\n    });\n\n    output += 'Use \"help <command>\" for detailed usage information.\\n';\n    output += 'Use Tab for autocompletion and ↑↓ for command history.';\n\n    return { success: true, output, type: 'info' };\n  }\n\n  async handlePortfolio(args, flags) {\n    const action = args[0] || 'show';\n\n    switch (action) {\n      case 'show':\n        if (this.context.portfolioData) {\n          return {\n            success: true,\n            data: this.context.portfolioData,\n            format: 'portfolio'\n          };\n        } else {\n          return {\n            success: false,\n            error: 'No portfolio data available. Please navigate to Portfolio Management page first.'\n          };\n        }\n\n      case 'analyze':\n        try {\n          const analysis = await secureApiClient.post('/portfolio/analyze', {\n            portfolio: this.context.portfolioData\n          });\n          return {\n            success: true,\n            output: 'Portfolio analysis completed. Check the Portfolio Management page for detailed results.',\n            type: 'success'\n          };\n        } catch (error) {\n          return {\n            success: false,\n            error: 'Failed to analyze portfolio. Please try again.'\n          };\n        }\n\n      case 'risk':\n        return {\n          success: true,\n          output: 'Risk metrics calculation initiated. Results will be displayed in the Portfolio Analytics section.',\n          type: 'info'\n        };\n\n      default:\n        return {\n          success: false,\n          error: `Unknown portfolio action: ${action}. Available: show, analyze, rebalance, risk, holdings`\n        };\n    }\n  }\n\n  async handleMarketData(args, flags) {\n    const symbol = args[0];\n    const type = flags.type || 'quote';\n\n    if (!symbol) {\n      return {\n        success: false,\n        error: 'Symbol required. Usage: market-data <symbol> [--type=quote|chart|news]'\n      };\n    }\n\n    try {\n      const response = await secureApiClient.get(`/market-data/quote/${symbol.toUpperCase()}`);\n      return {\n        success: true,\n        data: response.data,\n        format: 'market'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Failed to fetch market data for ${symbol.toUpperCase()}: ${error.message}`\n      };\n    }\n  }\n\n  async handleQuote(args, flags) {\n    return this.handleMarketData(args, { type: 'quote' });\n  }\n\n  async handleCalculate(args, flags) {\n    const calcType = args[0];\n\n    if (!calcType) {\n      return {\n        success: false,\n        error: 'Calculation type required. Available: dcf, wacc, beta, sharpe, sortino, var'\n      };\n    }\n\n    return {\n      success: true,\n      output: `${calcType.toUpperCase()} calculation initiated. Results will be displayed in the Analysis section.`,\n      type: 'info'\n    };\n  }\n\n  async handleDCF(args, flags) {\n    const symbol = args[0];\n    const growth = flags.growth || 5;\n    const discount = flags.discount || 10;\n    const terminal = flags.terminal || 2;\n\n    if (!symbol) {\n      return {\n        success: false,\n        error: 'Symbol required for DCF calculation. Usage: dcf <symbol> [--growth=5] [--discount=10] [--terminal=2]'\n      };\n    }\n\n    return {\n      success: true,\n      output: `DCF calculation for ${symbol.toUpperCase()} initiated with growth=${growth}%, discount=${discount}%, terminal=${terminal}%`,\n      navigation: '/valuation-workbench',\n      type: 'success'\n    };\n  }\n\n  async handleNavigate(args, flags) {\n    const page = args[0];\n\n    const routes = {\n      'workspace': '/financial-model-workspace',\n      'market-data': '/real-time-market-data-center',\n      'portfolio': '/portfolio-management',\n      'analysis': '/scenario-analysis-sensitivity-tools',\n      'private-analysis': '/private-analysis',\n      'valuation-workbench': '/valuation-workbench',\n      'model-lab': '/model-lab'\n    };\n\n    if (!page || !routes[page]) {\n      return {\n        success: false,\n        error: `Page not found. Available: ${Object.keys(routes).join(', ')}`\n      };\n    }\n\n    return {\n      success: true,\n      output: `Navigating to ${page}...`,\n      navigation: routes[page],\n      type: 'success'\n    };\n  }\n\n  async handleList(args, flags) {\n    const type = args[0] || 'holdings';\n    const detailed = flags.detailed || flags.d;\n\n    switch (type) {\n      case 'holdings':\n        if (this.context.portfolioData?.holdings) {\n          const holdings = this.context.portfolioData.holdings.map(h => ({\n            Symbol: h.symbol,\n            Shares: h.shares,\n            Value: h.value,\n            Weight: `${(h.weight * 100).toFixed(1)}%`\n          }));\n          return {\n            success: true,\n            data: holdings,\n            format: 'table'\n          };\n        } else {\n          return {\n            success: false,\n            error: 'No portfolio holdings available'\n          };\n        }\n\n      case 'portfolios':\n        return {\n          success: true,\n          output: 'Available portfolios:\\n• Main Portfolio (Active)\\n• Demo Portfolio\\n• Conservative Portfolio',\n          type: 'info'\n        };\n\n      default:\n        return {\n          success: false,\n          error: `Unknown list type: ${type}. Available: holdings, watchlist, portfolios`\n        };\n    }\n  }\n\n  async handleSearch(args, flags) {\n    const query = args.join(' ');\n\n    if (!query) {\n      return {\n        success: false,\n        error: 'Search query required. Usage: search <query> [--type=stocks|etf|mutual-funds]'\n      };\n    }\n\n    try {\n      const response = await secureApiClient.get(`/market-data/search/${encodeURIComponent(query)}`);\n      return {\n        success: true,\n        data: response.data,\n        format: 'table'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: `Search failed: ${error.message}`\n      };\n    }\n  }\n\n  async handleAnalyze(args, flags) {\n    const target = args[0];\n    const type = flags.type || 'fundamental';\n\n    if (!target) {\n      return {\n        success: false,\n        error: 'Analysis target required. Usage: analyze <symbol|portfolio> [--type=fundamental|technical|risk]'\n      };\n    }\n\n    return {\n      success: true,\n      output: `${type.charAt(0).toUpperCase() + type.slice(1)} analysis for ${target.toUpperCase()} initiated.`,\n      navigation: '/scenario-analysis-sensitivity-tools',\n      type: 'success'\n    };\n  }\n\n  async handleRisk(args, flags) {\n    const target = args[0] || 'portfolio';\n    const metric = flags.metric || 'var';\n\n    return {\n      success: true,\n      output: `Risk analysis (${metric.toUpperCase()}) for ${target} initiated. Results will be displayed in Portfolio Analytics.`,\n      type: 'info'\n    };\n  }\n\n  async handleExport(args, flags) {\n    const dataType = args[0];\n    const format = flags.format || 'csv';\n    const output = flags.output || `export_${new Date().toISOString().split('T')[0]}`;\n\n    return {\n      success: true,\n      output: `Export initiated: ${dataType} → ${output}.${format}`,\n      type: 'success'\n    };\n  }\n\n  async handleImport(args, flags) {\n    const filePath = args[0];\n    const type = flags.type || 'portfolio';\n\n    if (!filePath) {\n      return {\n        success: false,\n        error: 'File path required. Usage: import <file-path> [--type=portfolio|transactions]'\n      };\n    }\n\n    return {\n      success: true,\n      output: `Import initiated: ${filePath} (${type})`,\n      type: 'success'\n    };\n  }\n\n  async handleStatus(args, flags) {\n    const detailed = flags.detailed;\n\n    let output = '🟢 SYSTEM STATUS\\n';\n    output += '═══════════════════════════════════════\\n';\n    output += 'Backend API:       🟢 Connected\\n';\n    output += 'Market Data:       🟢 Live\\n';\n    output += 'Portfolio Data:    ' + (this.context.portfolioData ? '🟢 Loaded' : '🟡 Not loaded') + '\\n';\n    output += 'AI Assistant:      🟢 Online\\n';\n\n    if (detailed) {\n      output += '\\nDETAILED STATUS:\\n';\n      output += `Commands in history: ${this.commandHistory.length}\\n`;\n      output += `Current page: ${this.context.currentContext?.path || 'Unknown'}\\n`;\n      output += `Session start: ${new Date().toLocaleString()}\\n`;\n    }\n\n    return {\n      success: true,\n      output,\n      type: 'info'\n    };\n  }\n\n  async handleClear(args, flags) {\n    return {\n      success: true,\n      output: '',\n      type: 'clear'\n    };\n  }\n\n  async handleVersion(args, flags) {\n    return {\n      success: true,\n      output: 'FinanceAnalyst Pro v1.0.0\\nBuild: 2025.08.18\\nNode.js CLI Interface\\nSecure Backend API Integration',\n      type: 'info'\n    };\n  }\n}\n\nexport default CLICommandProcessor;\n","// Data transformation utilities for financial calculations\n\nexport const formatCurrency = (value, currency = 'USD', compact = false) => {\n  if (value === null || value === undefined || isNaN(value)) return 'N/A';\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n    notation: compact ? 'compact' : 'standard',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2\n  });\n\n  return formatter.format(value);\n};\n\nexport const formatPercentage = (value, decimals = 1) => {\n  if (value === null || value === undefined || isNaN(value)) return 'N/A';\n  return `${(value * 100).toFixed(decimals)}%`;\n};\n\nexport const formatNumber = (value, decimals = 2, compact = false) => {\n  if (value === null || value === undefined || isNaN(value)) return 'N/A';\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    notation: compact ? 'compact' : 'standard',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: decimals\n  });\n\n  return formatter.format(value);\n};\n\nexport const calculateCAGR = (beginningValue, endingValue, years) => {\n  if (beginningValue <= 0 || endingValue <= 0 || years <= 0) return 0;\n  return Math.pow(endingValue / beginningValue, 1 / years) - 1;\n};\n\nexport const calculateNPV = (cashFlows, discountRate) => {\n  return cashFlows.reduce((npv, cashFlow, index) => {\n    return npv + cashFlow / Math.pow(1 + discountRate, index + 1);\n  }, 0);\n};\n\nexport const calculateIRR = (cashFlows, guess = 0.1) => {\n  // Handle edge cases\n  if (!cashFlows || cashFlows.length === 0 || cashFlows.length === 1) {\n    return 0;\n  }\n\n  const maxIterations = 100;\n  const tolerance = 1e-6;\n\n  let rate = guess;\n\n  for (let i = 0; i < maxIterations; i++) {\n    let npv = cashFlows[0]; // Initial investment (negative)\n    let derivative = 0;\n\n    for (let j = 1; j < cashFlows.length; j++) {\n      const factor = Math.pow(1 + rate, j);\n      npv += cashFlows[j] / factor;\n      derivative -= (j * cashFlows[j]) / (factor * (1 + rate));\n    }\n\n    if (Math.abs(npv) < tolerance) {\n      return rate;\n    }\n\n    if (Math.abs(derivative) < tolerance) {\n      break; // Avoid division by zero\n    }\n\n    rate = rate - npv / derivative;\n  }\n\n  return rate;\n};\n\nexport const calculateWACC = (costOfEquity, costOfDebt, taxRate, debtRatio) => {\n  const equityWeight = 1 - debtRatio;\n  return costOfEquity * equityWeight + costOfDebt * debtRatio * (1 - taxRate);\n};\n\nexport const calculateTerminalValue = (finalCashFlow, terminalGrowthRate, discountRate) => {\n  return (finalCashFlow * (1 + terminalGrowthRate)) / (discountRate - terminalGrowthRate);\n};\n\nexport const projectCashFlows = (baseCashFlow, growthRates, years = 5) => {\n  const cashFlows = [];\n  let currentCashFlow = baseCashFlow;\n\n  for (let i = 0; i < years; i++) {\n    const growthRate = Array.isArray(growthRates)\n      ? growthRates[i] || growthRates[growthRates.length - 1]\n      : growthRates;\n    currentCashFlow *= 1 + growthRate;\n    cashFlows.push(currentCashFlow);\n  }\n\n  return cashFlows;\n};\n\nexport const calculateDCFValuation = inputs => {\n  const {\n    currentRevenue,\n    revenueGrowthRate,\n    fcfMargin,\n    wacc,\n    terminalGrowthRate,\n    sharesOutstanding,\n    totalDebt,\n    cash,\n    projectionYears = 5\n  } = inputs;\n\n  // Project revenues\n  const projectedRevenues = projectCashFlows(currentRevenue, revenueGrowthRate, projectionYears);\n\n  // Calculate free cash flows\n  const projectedFCFs = projectedRevenues.map(revenue => revenue * fcfMargin);\n\n  // Calculate terminal value\n  const terminalValue = calculateTerminalValue(\n    projectedFCFs[projectedFCFs.length - 1],\n    terminalGrowthRate,\n    wacc\n  );\n\n  // Calculate present values\n  const pvOfCashFlows = calculateNPV(projectedFCFs, wacc);\n  const pvOfTerminalValue = terminalValue / Math.pow(1 + wacc, projectionYears);\n\n  // Calculate enterprise and equity value\n  const enterpriseValue = pvOfCashFlows + pvOfTerminalValue;\n  const equityValue = enterpriseValue - totalDebt + cash;\n  const pricePerShare = equityValue / sharesOutstanding;\n\n  return {\n    enterpriseValue,\n    equityValue,\n    pricePerShare,\n    pvOfCashFlows,\n    pvOfTerminalValue,\n    terminalValue,\n    projectedRevenues,\n    projectedFCFs,\n    wacc,\n    terminalGrowthRate\n  };\n};\n\nexport const calculateLBOReturns = inputs => {\n  const {\n    purchasePrice,\n    ebitda,\n    debtMultiple = 5,\n    exitMultiple,\n    exitYear = 5,\n    managementFeeRate = 0.02,\n    carriedInterestRate = 0.2\n  } = inputs;\n\n  // Calculate purchase structure\n  const totalDebt = ebitda * debtMultiple;\n  const equityInvestment = purchasePrice - totalDebt;\n\n  // Project EBITDA growth (simplified)\n  const ebitdaGrowthRate = 0.05; // 5% annual growth assumption\n  const exitEbitda = ebitda * Math.pow(1 + ebitdaGrowthRate, exitYear);\n\n  // Calculate exit value\n  const exitEnterpriseValue = exitEbitda * exitMultiple;\n  const remainingDebt = totalDebt * 0.5; // Assume 50% debt paydown\n  const exitEquityValue = exitEnterpriseValue - remainingDebt;\n\n  // Calculate returns\n  const totalReturn = exitEquityValue / equityInvestment;\n  const irr = Math.pow(totalReturn, 1 / exitYear) - 1;\n  const moic = totalReturn; // Multiple of Invested Capital\n\n  // Calculate fees (simplified)\n  const totalManagementFees = equityInvestment * managementFeeRate * exitYear;\n  const carriedInterest = Math.max(0, (exitEquityValue - equityInvestment) * carriedInterestRate);\n\n  return {\n    equityInvestment,\n    totalDebt,\n    exitEquityValue,\n    totalReturn,\n    irr,\n    moic,\n    exitEbitda,\n    exitEnterpriseValue,\n    managementFees: totalManagementFees,\n    carriedInterest,\n    netReturn: exitEquityValue - totalManagementFees - carriedInterest\n  };\n};\n\nexport const calculateComparableMetrics = (companyData, peerData) => {\n  const calculateStatistics = values => {\n    const validValues = values.filter(v => v !== null && v !== undefined && !isNaN(v));\n    if (validValues.length === 0) return { median: null, mean: null, min: null, max: null };\n\n    validValues.sort((a, b) => a - b);\n    const median =\n      validValues.length % 2 === 0\n        ? (validValues[validValues.length / 2 - 1] + validValues[validValues.length / 2]) / 2\n        : validValues[Math.floor(validValues.length / 2)];\n\n    const mean = validValues.reduce((sum, v) => sum + v, 0) / validValues.length;\n\n    return {\n      median,\n      mean,\n      min: Math.min(...validValues),\n      max: Math.max(...validValues),\n      count: validValues.length\n    };\n  };\n\n  const metrics = ['marketCap', 'peRatio', 'evToEbitda', 'priceToBook', 'debtToEquity'];\n  const peerStats = {};\n\n  metrics.forEach(metric => {\n    const peerValues = peerData.map(peer => peer[metric]);\n    peerStats[metric] = calculateStatistics(peerValues);\n  });\n\n  return {\n    company: companyData,\n    peerStatistics: peerStats,\n    relativeValuation: {\n      marketCapPercentile: calculatePercentile(\n        companyData.marketCap,\n        peerData.map(p => p.marketCap)\n      ),\n      peRatioRelative: companyData.peRatio / peerStats.peRatio.median,\n      evEbitdaRelative: companyData.evToEbitda / peerStats.evToEbitda.median,\n      priceToBookRelative: companyData.priceToBook / peerStats.priceToBook.median\n    }\n  };\n};\n\nexport const calculatePercentile = (value, dataset) => {\n  const validDataset = dataset.filter(v => v !== null && v !== undefined && !isNaN(v));\n  if (validDataset.length === 0 || value === null || value === undefined || isNaN(value))\n    return null;\n\n  validDataset.sort((a, b) => a - b);\n  const belowCount = validDataset.filter(v => v < value).length;\n  return belowCount / validDataset.length;\n};\n\nexport const generateMonteCarloScenarios = (baseInputs, variableRanges, iterations = 1000) => {\n  const scenarios = [];\n\n  for (let i = 0; i < iterations; i++) {\n    const scenario = { ...baseInputs };\n\n    Object.keys(variableRanges).forEach(variable => {\n      const range = variableRanges[variable];\n      const randomValue = range.min + Math.random() * (range.max - range.min);\n      scenario[variable] = randomValue;\n    });\n\n    scenarios.push(scenario);\n  }\n\n  return scenarios;\n};\n\nexport const calculateSensitivityAnalysis = (\n  baseInputs,\n  sensitivityVariable,\n  range,\n  steps = 10\n) => {\n  const results = [];\n  const stepSize = (range.max - range.min) / (steps - 1);\n\n  for (let i = 0; i < steps; i++) {\n    const variableValue = range.min + stepSize * i;\n    const inputs = { ...baseInputs, [sensitivityVariable]: variableValue };\n\n    results.push({\n      [sensitivityVariable]: variableValue,\n      inputs\n    });\n  }\n\n  return results;\n};\n","/**\n * Persistent CLI Component\n * Professional financial terminal interface that stays visible across all pages\n */\n\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  Terminal,\n  ChevronUp,\n  ChevronDown,\n  Minimize2,\n  Maximize2,\n  X,\n  Download,\n  Zap\n} from 'lucide-react';\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\n\nimport { CLICommandProcessor } from '../../services/cliCommandProcessor';\nimport { formatCurrency, formatPercentage } from '../../utils/formatters';\n\nconst PersistentCLI = ({\n  currentContext = {},\n  portfolioData = null,\n  marketData = null,\n  onNavigate\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState([\n    {\n      id: 1,\n      type: 'system',\n      content: 'FinanceAnalyst Pro Terminal v1.0.0 - Type \"help\" for available commands',\n      timestamp: new Date()\n    },\n    {\n      id: 2,\n      type: 'info',\n      content: 'Connected to secure backend API • Market data live • Ready for commands',\n      timestamp: new Date()\n    }\n  ]);\n  const [commandHistory, setCommandHistory] = useState([]);\n  const [historyIndex, setHistoryIndex] = useState(-1);\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const inputRef = useRef(null);\n  const outputRef = useRef(null);\n  const cliProcessor = useRef(new CLICommandProcessor());\n\n  // Auto-scroll to bottom when output changes\n  useEffect(() => {\n    if (outputRef.current) {\n      outputRef.current.scrollTop = outputRef.current.scrollHeight;\n    }\n  }, [output]);\n\n  // Focus input when CLI is expanded\n  useEffect(() => {\n    if (isExpanded && !isMinimized && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isExpanded, isMinimized]);\n\n  // Initialize CLI processor with context\n  useEffect(() => {\n    cliProcessor.current.updateContext({\n      currentContext,\n      portfolioData,\n      marketData,\n      onNavigate\n    });\n  }, [currentContext, portfolioData, marketData, onNavigate]);\n\n  const addOutput = useCallback((content, type = 'output') => {\n    const newOutput = {\n      id: Date.now(),\n      type,\n      content,\n      timestamp: new Date()\n    };\n    setOutput(prev => [...prev, newOutput]);\n  }, []);\n\n  const handleCommand = async(command) => {\n    if (!command.trim()) return;\n\n    // Add command to history\n    setCommandHistory(prev => [...prev, command]);\n    setHistoryIndex(-1);\n\n    // Add command to output\n    addOutput(`$ ${command}`, 'command');\n    setIsProcessing(true);\n\n    try {\n      const result = await cliProcessor.current.processCommand(command);\n\n      if (result.success) {\n        if (result.output) {\n          addOutput(result.output, result.type || 'output');\n        }\n        if (result.data && result.format) {\n          // Handle formatted data output (tables, charts, etc.)\n          addOutput(formatCommandOutput(result.data, result.format), 'formatted');\n        }\n        if (result.navigation) {\n          onNavigate?.(result.navigation);\n        }\n      } else {\n        addOutput(result.error || 'Command failed', 'error');\n      }\n    } catch (error) {\n      addOutput(`Error: ${error.message}`, 'error');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const formatCommandOutput = (data, format) => {\n    switch (format) {\n      case 'table':\n        return formatTable(data);\n      case 'json':\n        return JSON.stringify(data, null, 2);\n      case 'portfolio':\n        return formatPortfolioData(data);\n      case 'market':\n        return formatMarketData(data);\n      default:\n        return data;\n    }\n  };\n\n  const formatTable = (data) => {\n    if (!Array.isArray(data) || data.length === 0) return 'No data';\n\n    const headers = Object.keys(data[0]);\n    const maxWidths = headers.map(header =>\n      Math.max(header.length, ...data.map(row => String(row[header] || '').length))\n    );\n\n    const headerRow = headers.map((header, i) => header.padEnd(maxWidths[i])).join(' | ');\n    const separator = maxWidths.map(width => '-'.repeat(width)).join('-|-');\n    const dataRows = data.map(row =>\n      headers.map((header, i) => String(row[header] || '').padEnd(maxWidths[i])).join(' | ')\n    );\n\n    return [headerRow, separator, ...dataRows].join('\\n');\n  };\n\n  const formatPortfolioData = (data) => {\n    if (!data) return 'No portfolio data available';\n\n    let output = '📊 PORTFOLIO OVERVIEW\\n';\n    output += '═══════════════════════════════════════\\n';\n    output += `Total Value: ${formatCurrency(data.totalValue || 0)}\\n`;\n    output += `Total Return: ${formatPercentage(data.totalReturn || 0)}\\n`;\n    output += `Holdings: ${data.holdings?.length || 0}\\n\\n`;\n\n    if (data.holdings && data.holdings.length > 0) {\n      output += 'HOLDINGS:\\n';\n      data.holdings.forEach(holding => {\n        output += `${holding.symbol.padEnd(6)} ${formatCurrency(holding.value || 0).padStart(12)} ${formatPercentage(holding.weight || 0).padStart(8)}\\n`;\n      });\n    }\n\n    return output;\n  };\n\n  const formatMarketData = (data) => {\n    if (!data) return 'No market data available';\n\n    let output = '📈 MARKET DATA\\n';\n    output += '═══════════════════════════════════════\\n';\n\n    Object.entries(data).forEach(([key, value]) => {\n      output += `${key.toUpperCase().padEnd(15)} ${String(value).padStart(12)}\\n`;\n    });\n\n    return output;\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleCommand(input);\n      setInput('');\n      setShowSuggestions(false);\n    } else if (e.key === 'ArrowUp') {\n      e.preventDefault();\n      if (historyIndex < commandHistory.length - 1) {\n        const newIndex = historyIndex + 1;\n        setHistoryIndex(newIndex);\n        setInput(commandHistory[commandHistory.length - 1 - newIndex]);\n      }\n    } else if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      if (historyIndex > 0) {\n        const newIndex = historyIndex - 1;\n        setHistoryIndex(newIndex);\n        setInput(commandHistory[commandHistory.length - 1 - newIndex]);\n      } else if (historyIndex === 0) {\n        setHistoryIndex(-1);\n        setInput('');\n      }\n    } else if (e.key === 'Tab') {\n      e.preventDefault();\n      if (suggestions.length > 0) {\n        setInput(suggestions[0]);\n        setShowSuggestions(false);\n      }\n    } else if (e.key === 'Escape') {\n      setShowSuggestions(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setInput(value);\n\n    // Generate suggestions\n    if (value.trim()) {\n      const newSuggestions = cliProcessor.current.getSuggestions(value);\n      setSuggestions(newSuggestions);\n      setShowSuggestions(newSuggestions.length > 0);\n    } else {\n      setShowSuggestions(false);\n    }\n  };\n\n  const clearOutput = () => {\n    setOutput([]);\n  };\n\n  const exportOutput = () => {\n    const exportText = output.map(item =>\n      `[${item.timestamp.toLocaleTimeString()}] ${item.content}`\n    ).join('\\n');\n\n    const blob = new Blob([exportText], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `financeanalyst-cli-${new Date().toISOString().split('T')[0]}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const getOutputTypeColor = (type) => {\n    switch (type) {\n      case 'command': return 'text-blue-400';\n      case 'error': return 'text-red-400';\n      case 'success': return 'text-green-400';\n      case 'warning': return 'text-yellow-400';\n      case 'info': return 'text-cyan-400';\n      case 'system': return 'text-gray-400';\n      case 'formatted': return 'text-purple-400';\n      default: return 'text-gray-300';\n    }\n  };\n\n  return (\n    <div className=\"fixed bottom-0 left-0 right-0 z-30\">\n      {/* CLI Header Bar */}\n      <div\n        className=\"bg-gray-900 border-t border-gray-700 px-4 py-2 flex items-center justify-between cursor-pointer select-none\"\n        onClick={() => setIsExpanded(!isExpanded)}\n        role=\"button\"\n        tabIndex={0}\n        aria-label={`${isExpanded ? 'Collapse' : 'Expand'} terminal`}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault();\n            setIsExpanded(!isExpanded);\n          }\n        }}\n      >\n        <div className=\"flex items-center space-x-3\">\n          <Terminal className=\"w-5 h-5 text-green-400\" />\n          <span className=\"text-sm font-mono text-gray-300\">\n            FinanceAnalyst Pro Terminal\n          </span>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\" />\n            <span className=\"text-xs text-gray-500\">Live</span>\n          </div>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          {!isMinimized && (\n            <>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  clearOutput();\n                }}\n                className=\"p-1 hover:bg-gray-800 rounded text-gray-400 hover:text-gray-300\"\n                title=\"Clear output\"\n              >\n                <X className=\"w-4 h-4\" />\n              </button>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  exportOutput();\n                }}\n                className=\"p-1 hover:bg-gray-800 rounded text-gray-400 hover:text-gray-300\"\n                title=\"Export output\"\n              >\n                <Download className=\"w-4 h-4\" />\n              </button>\n            </>\n          )}\n          <button\n            onClick={(e) => {\n              e.stopPropagation();\n              setIsMinimized(!isMinimized);\n            }}\n            className=\"p-1 hover:bg-gray-800 rounded text-gray-400 hover:text-gray-300\"\n          >\n            {isMinimized ? <Maximize2 className=\"w-4 h-4\" /> : <Minimize2 className=\"w-4 h-4\" />}\n          </button>\n          <button\n            className=\"p-1 hover:bg-gray-800 rounded text-gray-400 hover:text-gray-300\"\n            title={isExpanded ? 'Collapse' : 'Expand'}\n          >\n            {isExpanded ? <ChevronDown className=\"w-4 h-4\" /> : <ChevronUp className=\"w-4 h-4\" />}\n          </button>\n        </div>\n      </div>\n\n      {/* CLI Interface */}\n      <AnimatePresence>\n        {isExpanded && !isMinimized && (\n          <motion.div\n            initial={{ height: 0, opacity: 0 }}\n            animate={{ height: 400, opacity: 1 }}\n            exit={{ height: 0, opacity: 0 }}\n            transition={{ duration: 0.3, ease: 'easeInOut' }}\n            className=\"bg-gray-900 border-t border-gray-700 overflow-hidden\"\n          >\n            <div className=\"h-full flex flex-col\">\n              {/* Output Area */}\n              <div\n                ref={outputRef}\n                className=\"flex-1 overflow-y-auto p-4 font-mono text-sm space-y-1\"\n                style={{ maxHeight: '320px' }}\n              >\n                {output.map((item) => (\n                  <div key={item.id} className={`${getOutputTypeColor(item.type)} whitespace-pre-wrap`}>\n                    {item.type === 'formatted' ? (\n                      <div className=\"bg-gray-800 p-3 rounded border border-gray-700 overflow-x-auto\">\n                        <pre className=\"text-xs text-gray-300\">{item.content}</pre>\n                      </div>\n                    ) : (\n                      item.content\n                    )}\n                  </div>\n                ))}\n\n                {isProcessing && (\n                  <div className=\"text-yellow-400 flex items-center space-x-2\">\n                    <div className=\"animate-spin w-3 h-3 border border-yellow-400 border-t-transparent rounded-full\" />\n                    <span>Processing...</span>\n                  </div>\n                )}\n              </div>\n\n              {/* Suggestions */}\n              {showSuggestions && suggestions.length > 0 && (\n                <div className=\"border-t border-gray-700 bg-gray-800 p-2\">\n                  <div className=\"text-xs text-gray-400 mb-1\">Suggestions (Tab to complete):</div>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {suggestions.slice(0, 6).map((suggestion, index) => (\n                      <button\n                        key={index}\n                        onClick={() => {\n                          setInput(suggestion);\n                          setShowSuggestions(false);\n                          inputRef.current?.focus();\n                        }}\n                        className=\"px-2 py-1 bg-gray-700 text-gray-300 rounded text-xs hover:bg-gray-600 transition-colors\"\n                      >\n                        {suggestion}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Input Area */}\n              <div className=\"border-t border-gray-700 p-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"text-green-400 font-mono\">$</span>\n                  <input\n                    ref={inputRef}\n                    type=\"text\"\n                    value={input}\n                    onChange={handleInputChange}\n                    onKeyDown={handleKeyDown}\n                    placeholder=\"Enter financial command... (type 'help' for commands)\"\n                    className=\"flex-1 bg-transparent text-gray-300 font-mono outline-none placeholder-gray-500\"\n                    disabled={isProcessing}\n                  />\n                  {isProcessing && (\n                    <div className=\"text-yellow-400\">\n                      <Zap className=\"w-4 h-4 animate-pulse\" />\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"mt-2 text-xs text-gray-500 flex items-center justify-between\">\n                  <span>\n                    Use ↑↓ for history • Tab for autocomplete • Type &quot;help&quot; for commands\n                  </span>\n                  <span>\n                    {commandHistory.length} commands in history\n                  </span>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default PersistentCLI;\n","import * as LucideIcons from 'lucide-react';\nimport { HelpCircle } from 'lucide-react';\nimport PropTypes from 'prop-types';\n\nfunction Icon({\n  name,\n  size = 24,\n  color = 'currentColor',\n  className = '',\n  strokeWidth = 2,\n  ...props\n}) {\n  const IconComponent = LucideIcons[name];\n\n  if (!IconComponent) {\n    return (\n      <HelpCircle\n        size={size}\n        color=\"gray\"\n        strokeWidth={strokeWidth}\n        className={className}\n        {...props}\n      />\n    );\n  }\n\n  return (\n    <IconComponent\n      size={size}\n      color={color}\n      strokeWidth={strokeWidth}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  strokeWidth: PropTypes.number\n};\n\nexport default Icon;\n","import React from 'react';\n\nimport Icon from './AppIcon';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(_error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    error.__ErrorBoundary = true;\n    window.__COMPONENT_ERROR__?.(error, errorInfo);\n    // console.log(\"Error caught by ErrorBoundary:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"min-h-screen flex items-center justify-center bg-neutral-50\">\n          <div className=\"text-center p-8 max-w-md\">\n            <div className=\"flex justify-center items-center mb-2\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"42px\"\n                height=\"42px\"\n                viewBox=\"0 0 32 33\"\n                fill=\"none\"\n              >\n                <path\n                  d=\"M16 28.5C22.6274 28.5 28 23.1274 28 16.5C28 9.87258 22.6274 4.5 16 4.5C9.37258 4.5 4 9.87258 4 16.5C4 23.1274 9.37258 28.5 16 28.5Z\"\n                  stroke=\"#343330\"\n                  strokeWidth=\"2\"\n                  strokeMiterlimit=\"10\"\n                />\n                <path\n                  d=\"M11.5 15.5C12.3284 15.5 13 14.8284 13 14C13 13.1716 12.3284 12.5 11.5 12.5C10.6716 12.5 10 13.1716 10 14C10 14.8284 10.6716 15.5 11.5 15.5Z\"\n                  fill=\"#343330\"\n                />\n                <path\n                  d=\"M20.5 15.5C21.3284 15.5 22 14.8284 22 14C22 13.1716 21.3284 12.5 20.5 12.5C19.6716 12.5 19 13.1716 19 14C19 14.8284 19.6716 15.5 20.5 15.5Z\"\n                  fill=\"#343330\"\n                />\n                <path\n                  d=\"M21 22.5C19.9625 20.7062 18.2213 19.5 16 19.5C13.7787 19.5 12.0375 20.7062 11 22.5\"\n                  stroke=\"#343330\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </div>\n            <div className=\"flex flex-col gap-1 text-center\">\n              <h1 className=\"text-2xl font-medium text-neutral-800\">Something went wrong</h1>\n              <p className=\"text-neutral-600 text-base w w-8/12 mx-auto\">\n                We encountered an unexpected error while processing your request.\n              </p>\n            </div>\n            <div className=\"flex justify-center items-center mt-6\">\n              <button\n                onClick={() => {\n                  window.location.href = '/';\n                }}\n                className=\"bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded flex items-center gap-2 transition-colors duration-200 shadow-sm\"\n              >\n                <Icon name=\"ArrowLeft\" size={18} color=\"#fff\" />\n                Back\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","// Accessibility Testing Framework with axe-core\nimport axeCore from 'axe-core';\n\nclass AccessibilityTester {\n  constructor(options = {}) {\n    this.options = {\n      // Default axe configuration\n      rules: {\n        // Financial application specific rules\n        'color-contrast': { enabled: true },\n        'keyboard-navigation': { enabled: true },\n        'focus-management': { enabled: true },\n        'aria-labels': { enabled: true },\n        'heading-order': { enabled: true },\n        'landmark-one-main': { enabled: true },\n        'skip-link': { enabled: true },\n\n        // Disable rules that might conflict with financial widgets\n        'nested-interactive': { enabled: false }, // Some financial tables need nested controls\n\n        ...options.rules\n      },\n      tags: ['wcag2a', 'wcag2aa', 'wcag21aa', 'best-practice'],\n      runOnly: options.runOnly || null,\n      reporter: options.reporter || 'v2',\n      ...options\n    };\n\n    this.violations = [];\n    this.lastTestResults = null;\n  }\n\n  // Run accessibility tests on current page or specific element\n  async runTests(element = document, options = {}) {\n    const testOptions = {\n      ...this.options,\n      ...options\n    };\n\n    try {\n      console.log('🔍 Running accessibility tests...');\n      const results = await axeCore.run(element, testOptions);\n\n      this.lastTestResults = results;\n      this.violations = results.violations;\n\n      // Log results\n      this.logResults(results);\n\n      // Report violations in development\n      if (process.env.NODE_ENV === 'development') {\n        this.reportViolations(results.violations);\n      }\n\n      // Store results for analytics\n      this.storeResults(results);\n\n      return results;\n    } catch (error) {\n      console.error('Accessibility testing failed:', error);\n      throw error;\n    }\n  }\n\n  // Test specific financial components\n  async testFinancialComponent(selector, componentType = 'generic') {\n    const element = document.querySelector(selector);\n    if (!element) {\n      throw new Error(`Element not found: ${selector}`);\n    }\n\n    // Component-specific test configurations\n    const componentConfigs = {\n      'spreadsheet': {\n        rules: {\n          'table-header': { enabled: true },\n          'th-has-data-cells': { enabled: true },\n          'table-duplicate-name': { enabled: true },\n          'scope-attr-valid': { enabled: true }\n        },\n        tags: ['wcag2aa', 'section508']\n      },\n\n      'chart': {\n        rules: {\n          'image-alt': { enabled: true },\n          'svg-img-alt': { enabled: true },\n          'aria-hidden-focus': { enabled: true }\n        },\n        tags: ['wcag2aa']\n      },\n\n      'calculator': {\n        rules: {\n          'label': { enabled: true },\n          'form-field-multiple-labels': { enabled: true },\n          'duplicate-id': { enabled: true }\n        },\n        tags: ['wcag2aa', 'section508']\n      },\n\n      'modal': {\n        rules: {\n          'focus-trap': { enabled: true },\n          'aria-dialog-name': { enabled: true },\n          'keyboard-navigation': { enabled: true }\n        },\n        tags: ['wcag2aa', 'best-practice']\n      }\n    };\n\n    const config = componentConfigs[componentType] || {};\n    return await this.runTests(element, config);\n  }\n\n  // Test keyboard navigation\n  async testKeyboardNavigation() {\n    console.log('🎹 Testing keyboard navigation...');\n\n    const focusableElements = this.getFocusableElements();\n    const tabOrderIssues = [];\n\n    // Test tab order\n    let previousTabIndex = -1;\n    focusableElements.forEach((element, index) => {\n      const tabIndex = element.tabIndex || 0;\n\n      if (tabIndex > 0 && tabIndex <= previousTabIndex) {\n        tabOrderIssues.push({\n          element: element.tagName,\n          id: element.id,\n          tabIndex,\n          position: index,\n          issue: 'Tab order not sequential'\n        });\n      }\n\n      previousTabIndex = tabIndex;\n    });\n\n    // Test focus visibility\n    const focusVisibilityIssues = [];\n    focusableElements.forEach(element => {\n      const styles = window.getComputedStyle(element, ':focus');\n      const hasOutline = styles.outline !== 'none' && styles.outline !== '0px';\n      const hasBoxShadow = styles.boxShadow !== 'none';\n      const hasBackground = styles.backgroundColor !== 'transparent';\n\n      if (!hasOutline && !hasBoxShadow && !hasBackground) {\n        focusVisibilityIssues.push({\n          element: element.tagName,\n          id: element.id,\n          className: element.className,\n          issue: 'No visible focus indicator'\n        });\n      }\n    });\n\n    return {\n      focusableElementsCount: focusableElements.length,\n      tabOrderIssues,\n      focusVisibilityIssues,\n      passed: tabOrderIssues.length === 0 && focusVisibilityIssues.length === 0\n    };\n  }\n\n  // Test color contrast for financial data\n  async testColorContrast() {\n    console.log('🎨 Testing color contrast...');\n\n    const textElements = document.querySelectorAll('p, span, div, td, th, label, button, a, h1, h2, h3, h4, h5, h6');\n    const contrastIssues = [];\n\n    textElements.forEach(element => {\n      const styles = window.getComputedStyle(element);\n      const textColor = styles.color;\n      const backgroundColor = styles.backgroundColor;\n\n      // Skip if background is transparent\n      if (backgroundColor === 'transparent' || backgroundColor === 'rgba(0, 0, 0, 0)') {\n        return;\n      }\n\n      const contrast = this.calculateContrastRatio(textColor, backgroundColor);\n      const fontSize = parseInt(styles.fontSize);\n      const fontWeight = styles.fontWeight;\n\n      // WCAG AA requirements\n      const isLargeText = fontSize >= 18 || (fontSize >= 14 && (fontWeight === 'bold' || fontWeight >= 700));\n      const requiredRatio = isLargeText ? 3.0 : 4.5;\n\n      if (contrast < requiredRatio) {\n        contrastIssues.push({\n          element: element.tagName,\n          id: element.id,\n          className: element.className,\n          textColor,\n          backgroundColor,\n          contrast: contrast.toFixed(2),\n          required: requiredRatio,\n          fontSize,\n          fontWeight,\n          text: element.textContent?.substring(0, 50) + '...'\n        });\n      }\n    });\n\n    return {\n      totalElements: textElements.length,\n      contrastIssues,\n      passed: contrastIssues.length === 0\n    };\n  }\n\n  // Test financial forms accessibility\n  async testFormAccessibility() {\n    console.log('📝 Testing form accessibility...');\n\n    const forms = document.querySelectorAll('form');\n    const formIssues = [];\n\n    forms.forEach((form, formIndex) => {\n      const inputs = form.querySelectorAll('input, select, textarea');\n\n      inputs.forEach(input => {\n        const issues = [];\n\n        // Check for labels\n        const hasLabel = this.hasAssociatedLabel(input);\n        if (!hasLabel) {\n          issues.push('Missing label');\n        }\n\n        // Check for required field indication\n        if (input.required && !this.hasRequiredIndication(input)) {\n          issues.push('Required field not clearly indicated');\n        }\n\n        // Check for error states\n        if (input.getAttribute('aria-invalid') === 'true' && !this.hasErrorMessage(input)) {\n          issues.push('Error state without error message');\n        }\n\n        // Check for autocomplete on financial inputs\n        if (this.isFinancialInput(input) && !input.autocomplete) {\n          issues.push('Financial input missing autocomplete attribute');\n        }\n\n        if (issues.length > 0) {\n          formIssues.push({\n            formIndex,\n            inputType: input.type,\n            inputId: input.id,\n            inputName: input.name,\n            issues\n          });\n        }\n      });\n    });\n\n    return {\n      totalForms: forms.length,\n      formIssues,\n      passed: formIssues.length === 0\n    };\n  }\n\n  // Generate comprehensive accessibility report\n  generateReport() {\n    if (!this.lastTestResults) {\n      throw new Error('No test results available. Run tests first.');\n    }\n\n    const { violations, passes, incomplete, inapplicable } = this.lastTestResults;\n\n    return {\n      summary: {\n        timestamp: new Date().toISOString(),\n        totalChecks: violations.length + passes.length + incomplete.length + inapplicable.length,\n        violations: violations.length,\n        passes: passes.length,\n        incomplete: incomplete.length,\n        inapplicable: inapplicable.length,\n        score: this.calculateAccessibilityScore()\n      },\n      violations: violations.map(violation => ({\n        id: violation.id,\n        impact: violation.impact,\n        description: violation.description,\n        help: violation.help,\n        helpUrl: violation.helpUrl,\n        nodes: violation.nodes.length,\n        tags: violation.tags\n      })),\n      recommendations: this.generateRecommendations(violations),\n      financialSpecific: this.getFinancialAccessibilityInsights()\n    };\n  }\n\n  // Calculate accessibility score (0-100)\n  calculateAccessibilityScore() {\n    if (!this.lastTestResults) return 0;\n\n    const { violations, passes } = this.lastTestResults;\n    const totalTests = violations.length + passes.length;\n\n    if (totalTests === 0) return 100;\n\n    // Weight violations by impact\n    const impactWeights = { critical: 4, serious: 3, moderate: 2, minor: 1 };\n    const violationScore = violations.reduce((score, violation) => {\n      return score + (impactWeights[violation.impact] || 1);\n    }, 0);\n\n    const maxPossibleScore = totalTests * 4; // Assuming all could be critical\n    return Math.max(0, 100 - (violationScore / maxPossibleScore) * 100);\n  }\n\n  // Generate specific recommendations for financial applications\n  generateRecommendations(violations) {\n    const recommendations = [];\n\n    violations.forEach(violation => {\n      switch (violation.id) {\n        case 'color-contrast':\n          recommendations.push({\n            category: 'Visual Design',\n            priority: 'High',\n            issue: 'Insufficient color contrast',\n            solution: 'Ensure text colors meet WCAG AA standards (4.5:1 for normal text, 3:1 for large text)',\n            financialContext: 'Critical for reading financial data and avoiding misinterpretation of numbers'\n          });\n          break;\n\n        case 'keyboard-navigation':\n          recommendations.push({\n            category: 'Keyboard Access',\n            priority: 'High',\n            issue: 'Keyboard navigation issues',\n            solution: 'Ensure all interactive elements are keyboard accessible with visible focus indicators',\n            financialContext: 'Essential for users who rely on keyboard navigation to access financial tools'\n          });\n          break;\n\n        case 'label':\n          recommendations.push({\n            category: 'Form Controls',\n            priority: 'High',\n            issue: 'Missing form labels',\n            solution: 'Add proper labels to all form controls, especially financial input fields',\n            financialContext: 'Critical for screen readers to understand financial input requirements'\n          });\n          break;\n\n        case 'aria-hidden-focus':\n          recommendations.push({\n            category: 'ARIA Usage',\n            priority: 'Medium',\n            issue: 'Focusable elements hidden from screen readers',\n            solution: 'Review aria-hidden usage on interactive elements',\n            financialContext: 'May hide important financial controls from assistive technology users'\n          });\n          break;\n      }\n    });\n\n    return recommendations;\n  }\n\n  // Get financial application specific accessibility insights\n  getFinancialAccessibilityInsights() {\n    const insights = [];\n\n    // Check for financial data tables\n    const tables = document.querySelectorAll('table');\n    if (tables.length > 0) {\n      insights.push({\n        component: 'Data Tables',\n        recommendation: 'Ensure financial data tables have proper headers and scope attributes for screen reader navigation'\n      });\n    }\n\n    // Check for charts\n    const charts = document.querySelectorAll('[data-chart], .recharts-wrapper, canvas');\n    if (charts.length > 0) {\n      insights.push({\n        component: 'Charts and Graphs',\n        recommendation: 'Provide alternative text descriptions and data tables for financial charts'\n      });\n    }\n\n    // Check for calculators\n    const calculators = document.querySelectorAll('[data-calculator], .calculator');\n    if (calculators.length > 0) {\n      insights.push({\n        component: 'Financial Calculators',\n        recommendation: 'Ensure calculator inputs have clear labels and results are announced to screen readers'\n      });\n    }\n\n    return insights;\n  }\n\n  // Utility methods\n  getFocusableElements() {\n    const focusableSelectors = [\n      'a[href]',\n      'button:not([disabled])',\n      'input:not([disabled])',\n      'select:not([disabled])',\n      'textarea:not([disabled])',\n      '[tabindex]:not([tabindex=\"-1\"])'\n    ];\n\n    return Array.from(document.querySelectorAll(focusableSelectors.join(',')));\n  }\n\n  hasAssociatedLabel(input) {\n    const id = input.id;\n    const ariaLabel = input.getAttribute('aria-label');\n    const ariaLabelledby = input.getAttribute('aria-labelledby');\n\n    if (ariaLabel || ariaLabelledby) return true;\n    if (id && document.querySelector(`label[for=\"${id}\"]`)) return true;\n\n    // Check for wrapping label\n    const parentLabel = input.closest('label');\n    return !!parentLabel;\n  }\n\n  hasRequiredIndication(input) {\n    const ariaRequired = input.getAttribute('aria-required');\n    const requiredAttr = input.hasAttribute('required');\n    const hasRequiredText = this.hasRequiredTextIndicator(input);\n\n    return ariaRequired === 'true' || requiredAttr || hasRequiredText;\n  }\n\n  hasRequiredTextIndicator(input) {\n    const label = this.getAssociatedLabel(input);\n    if (!label) return false;\n\n    const text = label.textContent || '';\n    return text.includes('*') || text.toLowerCase().includes('required');\n  }\n\n  hasErrorMessage(input) {\n    const ariaDescribedby = input.getAttribute('aria-describedby');\n    if (ariaDescribedby) {\n      const errorElement = document.getElementById(ariaDescribedby);\n      return errorElement && errorElement.textContent;\n    }\n    return false;\n  }\n\n  isFinancialInput(input) {\n    const financialTypes = ['number', 'email', 'tel'];\n    const financialNames = ['amount', 'price', 'rate', 'percent', 'currency', 'value'];\n\n    return financialTypes.includes(input.type) ||\n           financialNames.some(name => input.name?.toLowerCase().includes(name));\n  }\n\n  getAssociatedLabel(input) {\n    const id = input.id;\n    if (id) {\n      const label = document.querySelector(`label[for=\"${id}\"]`);\n      if (label) return label;\n    }\n\n    return input.closest('label');\n  }\n\n  // Simplified contrast ratio calculation\n  calculateContrastRatio(color1, color2) {\n    // This is a simplified version - in production use a proper color contrast library\n    const rgb1 = this.parseColor(color1);\n    const rgb2 = this.parseColor(color2);\n\n    const l1 = this.getLuminance(rgb1);\n    const l2 = this.getLuminance(rgb2);\n\n    const lighter = Math.max(l1, l2);\n    const darker = Math.min(l1, l2);\n\n    return (lighter + 0.05) / (darker + 0.05);\n  }\n\n  parseColor(color) {\n    // Simple RGB parsing - expand for production use\n    const match = color.match(/rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\n    if (match) {\n      return [parseInt(match[1]), parseInt(match[2]), parseInt(match[3])];\n    }\n    return [0, 0, 0]; // Default to black\n  }\n\n  getLuminance([r, g, b]) {\n    const [rs, gs, bs] = [r, g, b].map(c => {\n      c = c / 255;\n      return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n    });\n    return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n  }\n\n  logResults(results) {\n    console.group('♿ Accessibility Test Results');\n    console.log(`✅ Passed: ${results.passes.length}`);\n    console.log(`❌ Violations: ${results.violations.length}`);\n    console.log(`⚠️  Incomplete: ${results.incomplete.length}`);\n    console.log(`➖ Not applicable: ${results.inapplicable.length}`);\n\n    if (results.violations.length > 0) {\n      console.warn('Violations found:');\n      results.violations.forEach(violation => {\n        console.warn(`- ${violation.id}: ${violation.description}`);\n      });\n    }\n    console.groupEnd();\n  }\n\n  reportViolations(violations) {\n    violations.forEach(violation => {\n      violation.nodes.forEach(node => {\n        console.error('Accessibility violation:', {\n          rule: violation.id,\n          impact: violation.impact,\n          element: node.target,\n          message: node.failureSummary\n        });\n      });\n    });\n  }\n\n  storeResults(results) {\n    try {\n      const reportData = {\n        timestamp: Date.now(),\n        url: window.location.href,\n        violations: results.violations.length,\n        passes: results.passes.length,\n        score: this.calculateAccessibilityScore()\n      };\n\n      const existingReports = JSON.parse(localStorage.getItem('accessibility-reports') || '[]');\n      existingReports.push(reportData);\n\n      // Keep only last 10 reports\n      if (existingReports.length > 10) {\n        existingReports.splice(0, existingReports.length - 10);\n      }\n\n      localStorage.setItem('accessibility-reports', JSON.stringify(existingReports));\n    } catch (error) {\n      console.error('Failed to store accessibility results:', error);\n    }\n  }\n}\n\n// Create singleton instance\nexport const accessibilityTester = new AccessibilityTester();\n\n// React hook for accessibility testing\nexport function useAccessibilityTester() {\n  return {\n    runTests: (element, options) => accessibilityTester.runTests(element, options),\n    testFinancialComponent: (selector, type) => accessibilityTester.testFinancialComponent(selector, type),\n    testKeyboardNavigation: () => accessibilityTester.testKeyboardNavigation(),\n    testColorContrast: () => accessibilityTester.testColorContrast(),\n    testFormAccessibility: () => accessibilityTester.testFormAccessibility(),\n    generateReport: () => accessibilityTester.generateReport(),\n    getScore: () => accessibilityTester.calculateAccessibilityScore()\n  };\n}\n\nexport default AccessibilityTester;\n","// Real User Monitoring and Web Vitals Tracking\n\n// Web Vitals metrics tracking\nconst webVitalsData = {\n  CLS: null,\n  FID: null,\n  FCP: null,\n  LCP: null,\n  TTFB: null,\n  INP: null\n};\n\n// Performance observer for tracking metrics\nconst _performanceEntries = [];\nlet _performanceObserver;\n\n// Initialize performance monitoring\nexport function initializePerformanceMonitoring() {\n  // Initialize Web Vitals tracking\n  initializeWebVitals();\n\n  // Initialize custom performance tracking\n  initializeCustomMetrics();\n\n  // Initialize navigation timing\n  trackNavigationTiming();\n\n  // Initialize resource timing\n  trackResourceTiming();\n\n  // Initialize user interactions\n  trackUserInteractions();\n\n  console.log('Performance monitoring initialized');\n}\n\n// Web Vitals implementation\nfunction initializeWebVitals() {\n  // Cumulative Layout Shift (CLS)\n  let clsValue = 0;\n  const clsEntries = [];\n\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (!entry.hadRecentInput) {\n        clsValue += entry.value;\n        clsEntries.push(entry);\n      }\n    }\n    webVitalsData.CLS = clsValue;\n    reportWebVital('CLS', clsValue, clsEntries);\n  }).observe({ type: 'layout-shift', buffered: true });\n\n  // First Input Delay (FID) / Interaction to Next Paint (INP)\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (entry.name === 'first-input-delay') {\n        webVitalsData.FID = entry.processingStart - entry.startTime;\n        reportWebVital('FID', webVitalsData.FID, [entry]);\n      }\n\n      // Track INP for better user interaction measurement\n      if (entry.interactionId) {\n        const duration = entry.processingEnd - entry.startTime;\n        if (!webVitalsData.INP || duration > webVitalsData.INP) {\n          webVitalsData.INP = duration;\n          reportWebVital('INP', duration, [entry]);\n        }\n      }\n    }\n  }).observe({ type: 'event', buffered: true });\n\n  // First Contentful Paint (FCP)\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (entry.name === 'first-contentful-paint') {\n        webVitalsData.FCP = entry.startTime;\n        reportWebVital('FCP', entry.startTime, [entry]);\n      }\n    }\n  }).observe({ type: 'paint', buffered: true });\n\n  // Largest Contentful Paint (LCP)\n  new PerformanceObserver((entryList) => {\n    const entries = entryList.getEntries();\n    const lastEntry = entries[entries.length - 1];\n    webVitalsData.LCP = lastEntry.startTime;\n    reportWebVital('LCP', lastEntry.startTime, [lastEntry]);\n  }).observe({ type: 'largest-contentful-paint', buffered: true });\n\n  // Time to First Byte (TTFB)\n  const navigationEntry = performance.getEntriesByType('navigation')[0];\n  if (navigationEntry) {\n    webVitalsData.TTFB = navigationEntry.responseStart - navigationEntry.requestStart;\n    reportWebVital('TTFB', webVitalsData.TTFB, [navigationEntry]);\n  }\n}\n\n// Custom metrics for financial application\nfunction initializeCustomMetrics() {\n  // Track when critical financial components load\n  const criticalComponents = [\n    'financial-spreadsheet',\n    'dcf-calculator',\n    'chart-rendering',\n    'market-data-fetch'\n  ];\n\n  criticalComponents.forEach(component => {\n    performance.mark(`${component}-start`);\n  });\n\n  // Track component rendering times\n  window.trackComponentRender = (componentName, renderTime) => {\n    performance.mark(`${componentName}-end`);\n    performance.measure(\n      `${componentName}-render`,\n      `${componentName}-start`,\n      `${componentName}-end`\n    );\n\n    reportCustomMetric('component-render', {\n      component: componentName,\n      renderTime,\n      timestamp: Date.now()\n    });\n  };\n\n  // Track financial calculation performance\n  window.trackCalculationPerformance = (calculationType, duration, complexity) => {\n    reportCustomMetric('financial-calculation', {\n      type: calculationType,\n      duration,\n      complexity,\n      timestamp: Date.now()\n    });\n  };\n}\n\n// Navigation timing tracking\nfunction trackNavigationTiming() {\n  window.addEventListener('load', () => {\n    setTimeout(() => {\n      const navigation = performance.getEntriesByType('navigation')[0];\n      if (navigation) {\n        const timings = {\n          dns: navigation.domainLookupEnd - navigation.domainLookupStart,\n          tcp: navigation.connectEnd - navigation.connectStart,\n          ssl: navigation.secureConnectionStart > 0 ? navigation.connectEnd - navigation.secureConnectionStart : 0,\n          ttfb: navigation.responseStart - navigation.requestStart,\n          download: navigation.responseEnd - navigation.responseStart,\n          domProcessing: navigation.domComplete - navigation.domLoading,\n          totalLoadTime: navigation.loadEventEnd - navigation.fetchStart\n        };\n\n        reportNavigationTiming(timings);\n      }\n    }, 0);\n  });\n}\n\n// Resource timing tracking\nfunction trackResourceTiming() {\n  new PerformanceObserver((list) => {\n    for (const entry of list.getEntries()) {\n      // Track important resource types\n      if (entry.initiatorType === 'script' ||\n          entry.initiatorType === 'css' ||\n          entry.initiatorType === 'img' ||\n          entry.initiatorType === 'fetch') {\n\n        const resourceData = {\n          name: entry.name,\n          type: entry.initiatorType,\n          size: entry.transferSize || entry.encodedBodySize,\n          duration: entry.duration,\n          cached: entry.transferSize === 0 && entry.encodedBodySize > 0,\n          timestamp: Date.now()\n        };\n\n        // Only report large resources or slow loads\n        if (resourceData.size > 50000 || resourceData.duration > 1000) {\n          reportResourceTiming(resourceData);\n        }\n      }\n    }\n  }).observe({ entryTypes: ['resource'] });\n}\n\n// User interaction tracking\nfunction trackUserInteractions() {\n  let interactionCount = 0;\n  let totalInteractionTime = 0;\n\n  const interactionEvents = ['click', 'keydown', 'touchstart'];\n\n  interactionEvents.forEach(eventType => {\n    document.addEventListener(eventType, (event) => {\n      const startTime = performance.now();\n\n      // Track interaction delay\n      requestAnimationFrame(() => {\n        const endTime = performance.now();\n        const interactionTime = endTime - startTime;\n\n        interactionCount++;\n        totalInteractionTime += interactionTime;\n\n        // Report slow interactions\n        if (interactionTime > 100) {\n          reportSlowInteraction({\n            type: eventType,\n            target: event.target.tagName,\n            duration: interactionTime,\n            timestamp: Date.now()\n          });\n        }\n      });\n    }, { passive: true });\n  });\n\n  // Report interaction summary periodically\n  setInterval(() => {\n    if (interactionCount > 0) {\n      reportInteractionSummary({\n        count: interactionCount,\n        averageTime: totalInteractionTime / interactionCount,\n        timestamp: Date.now()\n      });\n\n      // Reset counters\n      interactionCount = 0;\n      totalInteractionTime = 0;\n    }\n  }, 30000); // Every 30 seconds\n}\n\n// Reporting functions\nfunction reportWebVital(name, value, entries) {\n  const data = {\n    metric: name,\n    value: Math.round(value),\n    entries: entries.map(entry => ({\n      startTime: entry.startTime,\n      duration: entry.duration || 0\n    })),\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    connection: getConnectionInfo()\n  };\n\n  console.log(`Web Vital - ${name}:`, value);\n  sendToAnalytics('web-vital', data);\n}\n\nfunction reportCustomMetric(type, data) {\n  const metricData = {\n    type,\n    ...data,\n    url: window.location.href,\n    userAgent: navigator.userAgent\n  };\n\n  console.log(`Custom Metric - ${type}:`, data);\n  sendToAnalytics('custom-metric', metricData);\n}\n\nfunction reportNavigationTiming(timings) {\n  const data = {\n    ...timings,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    connection: getConnectionInfo()\n  };\n\n  console.log('Navigation Timing:', timings);\n  sendToAnalytics('navigation-timing', data);\n}\n\nfunction reportResourceTiming(resourceData) {\n  console.log('Resource Timing:', resourceData);\n  sendToAnalytics('resource-timing', resourceData);\n}\n\nfunction reportSlowInteraction(interactionData) {\n  console.log('Slow Interaction:', interactionData);\n  sendToAnalytics('slow-interaction', interactionData);\n}\n\nfunction reportInteractionSummary(summaryData) {\n  console.log('Interaction Summary:', summaryData);\n  sendToAnalytics('interaction-summary', summaryData);\n}\n\n// Error tracking\nexport function trackError(error, errorInfo) {\n  const errorData = {\n    message: error.message,\n    stack: error.stack,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    componentStack: errorInfo?.componentStack,\n    errorBoundary: errorInfo?.errorBoundary\n  };\n\n  console.error('Application Error:', errorData);\n  sendToAnalytics('error', errorData);\n}\n\n// Performance budget monitoring\nexport function checkPerformanceBudgets() {\n  const budgets = {\n    LCP: 2500,  // 2.5s\n    FID: 100,   // 100ms\n    CLS: 0.1,   // 0.1\n    FCP: 1800,  // 1.8s\n    TTFB: 800   // 800ms\n  };\n\n  const violations = [];\n\n  Object.entries(budgets).forEach(([metric, budget]) => {\n    const value = webVitalsData[metric];\n    if (value !== null && value > budget) {\n      violations.push({\n        metric,\n        value,\n        budget,\n        overBy: value - budget\n      });\n    }\n  });\n\n  if (violations.length > 0) {\n    console.warn('Performance Budget Violations:', violations);\n    sendToAnalytics('budget-violations', {\n      violations,\n      timestamp: Date.now(),\n      url: window.location.href\n    });\n  }\n\n  return violations;\n}\n\n// Utility functions\nfunction getConnectionInfo() {\n  if ('connection' in navigator) {\n    return {\n      effectiveType: navigator.connection.effectiveType,\n      downlink: navigator.connection.downlink,\n      rtt: navigator.connection.rtt\n    };\n  }\n  return null;\n}\n\nfunction sendToAnalytics(type, data) {\n  // In production, send to your analytics service\n  // For now, we'll store locally and batch send\n\n  try {\n    const analyticsData = {\n      type,\n      data,\n      sessionId: getSessionId(),\n      userId: getUserId()\n    };\n\n    // Store in localStorage for batching\n    const existingData = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n    existingData.push(analyticsData);\n\n    // Keep only last 100 entries to prevent storage overflow\n    if (existingData.length > 100) {\n      existingData.splice(0, existingData.length - 100);\n    }\n\n    localStorage.setItem('analytics-queue', JSON.stringify(existingData));\n\n    // Send batch if queue is full or on interval\n    if (existingData.length >= 10) {\n      sendAnalyticsBatch();\n    }\n\n  } catch (error) {\n    console.error('Failed to queue analytics data:', error);\n  }\n}\n\nfunction sendAnalyticsBatch() {\n  try {\n    const queuedData = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n    if (queuedData.length === 0) return;\n\n    // In production, replace with your analytics endpoint\n    console.log('Sending analytics batch:', queuedData.length, 'items');\n\n    // Simulate sending to analytics service\n    if (window.gtag) {\n      queuedData.forEach(item => {\n        window.gtag('event', item.type, {\n          custom_parameter: JSON.stringify(item.data)\n        });\n      });\n    }\n\n    // Clear queue after successful send\n    localStorage.removeItem('analytics-queue');\n\n  } catch (error) {\n    console.error('Failed to send analytics batch:', error);\n  }\n}\n\n// Session and user management\nfunction getSessionId() {\n  let sessionId = sessionStorage.getItem('session-id');\n  if (!sessionId) {\n    sessionId = Date.now() + '-' + Math.random().toString(36).substr(2, 9);\n    sessionStorage.setItem('session-id', sessionId);\n  }\n  return sessionId;\n}\n\nfunction getUserId() {\n  let userId = localStorage.getItem('user-id');\n  if (!userId) {\n    userId = 'anonymous-' + Date.now() + '-' + Math.random().toString(36).substr(2, 9);\n    localStorage.setItem('user-id', userId);\n  }\n  return userId;\n}\n\n// Initialize batch sending on interval\nsetInterval(sendAnalyticsBatch, 60000); // Every minute\n\n// Send batch before page unload\nwindow.addEventListener('beforeunload', () => {\n  sendAnalyticsBatch();\n});\n\n// Accessibility metrics reporting\nexport function reportPerformanceMetric(type, data) {\n  const metricData = {\n    type,\n    ...data,\n    url: window.location.href,\n    userAgent: navigator.userAgent,\n    timestamp: Date.now()\n  };\n\n  console.log(`Performance Metric - ${type}:`, data);\n  sendToAnalytics('performance-metric', metricData);\n}\n\n// Track accessibility test results\nexport function trackAccessibilityResults(results) {\n  const accessibilityData = {\n    violations: results.violations?.length || 0,\n    passes: results.passes?.length || 0,\n    incomplete: results.incomplete?.length || 0,\n    score: results.score || 0,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent\n  };\n\n  console.log('Accessibility Results:', accessibilityData);\n  sendToAnalytics('accessibility-results', accessibilityData);\n\n  // Store accessibility history\n  try {\n    const history = JSON.parse(localStorage.getItem('accessibility-history') || '[]');\n    history.push(accessibilityData);\n\n    // Keep only last 50 entries\n    if (history.length > 50) {\n      history.splice(0, history.length - 50);\n    }\n\n    localStorage.setItem('accessibility-history', JSON.stringify(history));\n  } catch (error) {\n    console.error('Failed to store accessibility history:', error);\n  }\n}\n\n// Track financial component performance\nexport function trackFinancialComponentPerformance(componentName, metrics) {\n  const performanceData = {\n    component: componentName,\n    ...metrics,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent\n  };\n\n  console.log(`Financial Component Performance - ${componentName}:`, metrics);\n  sendToAnalytics('financial-component-performance', performanceData);\n}\n\n// Get comprehensive performance dashboard data\nexport function getPerformanceDashboardData() {\n  const accessibilityHistory = JSON.parse(localStorage.getItem('accessibility-history') || '[]');\n  const analyticsQueue = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n\n  // Calculate trends\n  const recentAccessibility = accessibilityHistory.slice(-10);\n  const avgScore = recentAccessibility.reduce((sum, entry) => sum + entry.score, 0) / recentAccessibility.length || 0;\n  const avgViolations = recentAccessibility.reduce((sum, entry) => sum + entry.violations, 0) / recentAccessibility.length || 0;\n\n  // Get performance metrics from queue\n  const performanceMetrics = analyticsQueue\n    .filter(item => item.type === 'performance-metric')\n    .slice(-20)\n    .map(item => item.data);\n\n  const webVitalMetrics = analyticsQueue\n    .filter(item => item.type === 'web-vital')\n    .slice(-10)\n    .map(item => item.data);\n\n  return {\n    webVitals: webVitalsData,\n    budgetViolations: checkPerformanceBudgets(),\n    accessibility: {\n      currentScore: recentAccessibility[recentAccessibility.length - 1]?.score || 0,\n      averageScore: Math.round(avgScore),\n      averageViolations: Math.round(avgViolations),\n      history: recentAccessibility,\n      trends: {\n        scoreImproving: recentAccessibility.length >= 2 &&\n          recentAccessibility[recentAccessibility.length - 1].score >\n          recentAccessibility[recentAccessibility.length - 2].score\n      }\n    },\n    performance: {\n      recentMetrics: performanceMetrics,\n      webVitalHistory: webVitalMetrics\n    },\n    timestamp: Date.now()\n  };\n}\n\n// Export current performance data\nexport function getPerformanceData() {\n  return {\n    webVitals: webVitalsData,\n    budgetViolations: checkPerformanceBudgets(),\n    timestamp: Date.now()\n  };\n}\n","import { useState, useEffect, useCallback, useRef } from 'react';\n\nimport { accessibilityTester } from '../utils/accessibilityTesting';\nimport { reportPerformanceMetric } from '../utils/performanceMonitoring';\n\n// React hook for accessibility testing\nexport function useAccessibility(options = {}) {\n  const {\n    enabled = process.env.NODE_ENV === 'development',\n    autoTest = false,\n    testInterval = null,\n    componentType = 'generic',\n    onViolations = null,\n    onSuccess = null\n  } = options;\n\n  const [results, setResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [violations, setViolations] = useState([]);\n  const [score, setScore] = useState(null);\n  const [lastTestTime, setLastTestTime] = useState(null);\n\n  const elementRef = useRef(null);\n  const intervalRef = useRef(null);\n\n  // Run accessibility tests\n  const runTests = useCallback(async(element = null, testOptions = {}) => {\n    if (!enabled) return null;\n\n    const targetElement = element || elementRef.current || document;\n    setIsLoading(true);\n\n    try {\n      const testResults = await accessibilityTester.runTests(targetElement, testOptions);\n\n      setResults(testResults);\n      setViolations(testResults.violations || []);\n      setScore(accessibilityTester.calculateAccessibilityScore());\n      setLastTestTime(Date.now());\n\n      // Report to performance monitoring\n      reportPerformanceMetric('accessibility_test', {\n        violations: testResults.violations?.length || 0,\n        score: accessibilityTester.calculateAccessibilityScore(),\n        componentType,\n        timestamp: Date.now()\n      });\n\n      // Call callbacks\n      if (testResults.violations?.length > 0) {\n        onViolations?.(testResults.violations);\n      } else {\n        onSuccess?.(testResults);\n      }\n\n      return testResults;\n    } catch (error) {\n      console.error('Accessibility test failed:', error);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [enabled, componentType, onViolations, onSuccess]);\n\n  // Test specific financial component\n  const testFinancialComponent = useCallback(async(selector, type = componentType) => {\n    if (!enabled) return null;\n\n    setIsLoading(true);\n    try {\n      const testResults = await accessibilityTester.testFinancialComponent(selector, type);\n\n      setResults(testResults);\n      setViolations(testResults.violations || []);\n      setScore(accessibilityTester.calculateAccessibilityScore());\n      setLastTestTime(Date.now());\n\n      // Report specific component test\n      reportPerformanceMetric('financial_component_accessibility', {\n        componentType: type,\n        violations: testResults.violations?.length || 0,\n        score: accessibilityTester.calculateAccessibilityScore(),\n        timestamp: Date.now()\n      });\n\n      return testResults;\n    } catch (error) {\n      console.error('Financial component accessibility test failed:', error);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [enabled, componentType]);\n\n  // Test keyboard navigation\n  const testKeyboardNavigation = useCallback(async() => {\n    if (!enabled) return null;\n\n    try {\n      const navResults = await accessibilityTester.testKeyboardNavigation();\n\n      reportPerformanceMetric('keyboard_navigation_test', {\n        focusableElements: navResults.focusableElementsCount,\n        tabOrderIssues: navResults.tabOrderIssues?.length || 0,\n        focusVisibilityIssues: navResults.focusVisibilityIssues?.length || 0,\n        passed: navResults.passed,\n        timestamp: Date.now()\n      });\n\n      return navResults;\n    } catch (error) {\n      console.error('Keyboard navigation test failed:', error);\n      return null;\n    }\n  }, [enabled]);\n\n  // Test color contrast\n  const testColorContrast = useCallback(async() => {\n    if (!enabled) return null;\n\n    try {\n      const contrastResults = await accessibilityTester.testColorContrast();\n\n      reportPerformanceMetric('color_contrast_test', {\n        totalElements: contrastResults.totalElements,\n        contrastIssues: contrastResults.contrastIssues?.length || 0,\n        passed: contrastResults.passed,\n        timestamp: Date.now()\n      });\n\n      return contrastResults;\n    } catch (error) {\n      console.error('Color contrast test failed:', error);\n      return null;\n    }\n  }, [enabled]);\n\n  // Test form accessibility\n  const testFormAccessibility = useCallback(async() => {\n    if (!enabled) return null;\n\n    try {\n      const formResults = await accessibilityTester.testFormAccessibility();\n\n      reportPerformanceMetric('form_accessibility_test', {\n        totalForms: formResults.totalForms,\n        formIssues: formResults.formIssues?.length || 0,\n        passed: formResults.passed,\n        timestamp: Date.now()\n      });\n\n      return formResults;\n    } catch (error) {\n      console.error('Form accessibility test failed:', error);\n      return null;\n    }\n  }, [enabled]);\n\n  // Generate comprehensive report\n  const generateReport = useCallback(() => {\n    if (!results) return null;\n\n    try {\n      const report = accessibilityTester.generateReport();\n\n      // Store report data for performance monitoring\n      reportPerformanceMetric('accessibility_report_generated', {\n        score: report.summary.score,\n        violations: report.summary.violations,\n        totalChecks: report.summary.totalChecks,\n        timestamp: Date.now()\n      });\n\n      return report;\n    } catch (error) {\n      console.error('Failed to generate accessibility report:', error);\n      return null;\n    }\n  }, [results]);\n\n  // Set up automatic testing\n  useEffect(() => {\n    if (!enabled || !autoTest) return;\n\n    const runAutoTest = () => {\n      runTests();\n    };\n\n    // Run initial test\n    runAutoTest();\n\n    // Set up interval if specified\n    if (testInterval) {\n      intervalRef.current = setInterval(runAutoTest, testInterval);\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [enabled, autoTest, testInterval, runTests]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    // State\n    results,\n    violations,\n    score,\n    isLoading,\n    lastTestTime,\n\n    // Test functions\n    runTests,\n    testFinancialComponent,\n    testKeyboardNavigation,\n    testColorContrast,\n    testFormAccessibility,\n    generateReport,\n\n    // Element ref for targeting tests\n    elementRef\n  };\n}\n\n// Hook for monitoring accessibility across the entire app\nexport function useAppAccessibility() {\n  const [globalScore, setGlobalScore] = useState(null);\n  const [recentViolations, setRecentViolations] = useState([]);\n  const [testHistory, setTestHistory] = useState([]);\n\n  const runGlobalAccessibilityCheck = useCallback(async() => {\n    try {\n      // Run comprehensive tests on the entire document\n      const results = await accessibilityTester.runTests(document);\n      const score = accessibilityTester.calculateAccessibilityScore();\n\n      setGlobalScore(score);\n      setRecentViolations(results.violations || []);\n\n      // Update test history\n      const historyEntry = {\n        timestamp: Date.now(),\n        score,\n        violations: results.violations?.length || 0,\n        url: window.location.pathname\n      };\n\n      setTestHistory(prev => [...prev.slice(-9), historyEntry]); // Keep last 10 entries\n\n      // Report global metrics\n      reportPerformanceMetric('global_accessibility_check', {\n        score,\n        violations: results.violations?.length || 0,\n        url: window.location.pathname,\n        timestamp: Date.now()\n      });\n\n      return results;\n    } catch (error) {\n      console.error('Global accessibility check failed:', error);\n      return null;\n    }\n  }, []);\n\n  // Check accessibility when route changes\n  useEffect(() => {\n    const checkOnRouteChange = () => {\n      setTimeout(() => {\n        runGlobalAccessibilityCheck();\n      }, 1000); // Allow time for route to fully load\n    };\n\n    // Listen for navigation changes\n    window.addEventListener('popstate', checkOnRouteChange);\n\n    // Run initial check\n    checkOnRouteChange();\n\n    return () => {\n      window.removeEventListener('popstate', checkOnRouteChange);\n    };\n  }, [runGlobalAccessibilityCheck]);\n\n  return {\n    globalScore,\n    recentViolations,\n    testHistory,\n    runGlobalAccessibilityCheck\n  };\n}\n\n// Hook for accessibility testing in financial components\nexport function useFinancialAccessibility(componentType) {\n  const accessibility = useAccessibility({\n    componentType,\n    autoTest: true,\n    testInterval: 30000, // Test every 30 seconds in development\n    onViolations: (violations) => {\n      // Log financial component specific violations\n      console.warn(`Financial component (${componentType}) accessibility violations:`, violations);\n    }\n  });\n\n  // Enhanced testing for financial components\n  const testFinancialFeatures = useCallback(async() => {\n    const results = {};\n\n    try {\n      // Test keyboard navigation (critical for financial apps)\n      results.keyboardNav = await accessibility.testKeyboardNavigation();\n\n      // Test color contrast (important for reading financial data)\n      results.colorContrast = await accessibility.testColorContrast();\n\n      // Test forms if component contains them\n      results.formAccessibility = await accessibility.testFormAccessibility();\n\n      // Generate comprehensive report\n      results.report = accessibility.generateReport();\n\n      return results;\n    } catch (error) {\n      console.error('Financial accessibility testing failed:', error);\n      return null;\n    }\n  }, [accessibility, componentType]);\n\n  return {\n    ...accessibility,\n    testFinancialFeatures\n  };\n}\n\n// Hook for real-time accessibility monitoring\nexport function useAccessibilityMonitor(options = {}) {\n  const {\n    threshold = 80, // Minimum acceptable score\n    alertOnViolations = true,\n    monitorInterval = 60000 // Check every minute\n  } = options;\n\n  const [isMonitoring, setIsMonitoring] = useState(false);\n  const [alerts, setAlerts] = useState([]);\n  const intervalRef = useRef(null);\n\n  const startMonitoring = useCallback(() => {\n    if (isMonitoring) return;\n\n    setIsMonitoring(true);\n\n    const monitor = async() => {\n      try {\n        const results = await accessibilityTester.runTests(document);\n        const score = accessibilityTester.calculateAccessibilityScore();\n\n        // Check if score is below threshold\n        if (score < threshold) {\n          const alert = {\n            id: Date.now(),\n            type: 'low_score',\n            message: `Accessibility score (${score}) is below threshold (${threshold})`,\n            score,\n            violations: results.violations?.length || 0,\n            timestamp: Date.now()\n          };\n\n          setAlerts(prev => [...prev, alert]);\n\n          if (alertOnViolations) {\n            console.warn('Accessibility Alert:', alert.message);\n          }\n        }\n\n        // Check for critical violations\n        const criticalViolations = results.violations?.filter(v => v.impact === 'critical') || [];\n        if (criticalViolations.length > 0 && alertOnViolations) {\n          const alert = {\n            id: Date.now(),\n            type: 'critical_violations',\n            message: `${criticalViolations.length} critical accessibility violations found`,\n            violations: criticalViolations,\n            timestamp: Date.now()\n          };\n\n          setAlerts(prev => [...prev, alert]);\n          console.error('Critical Accessibility Violations:', criticalViolations);\n        }\n\n        // Report monitoring metrics\n        reportPerformanceMetric('accessibility_monitoring', {\n          score,\n          violations: results.violations?.length || 0,\n          criticalViolations: criticalViolations.length,\n          timestamp: Date.now()\n        });\n\n      } catch (error) {\n        console.error('Accessibility monitoring failed:', error);\n      }\n    };\n\n    // Run initial check\n    monitor();\n\n    // Set up interval\n    intervalRef.current = setInterval(monitor, monitorInterval);\n  }, [isMonitoring, threshold, alertOnViolations, monitorInterval]);\n\n  const stopMonitoring = useCallback(() => {\n    setIsMonitoring(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n\n  const clearAlerts = useCallback(() => {\n    setAlerts([]);\n  }, []);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    isMonitoring,\n    alerts,\n    startMonitoring,\n    stopMonitoring,\n    clearAlerts\n  };\n}\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport { useAccessibilityMonitor } from '../../hooks/useAccessibility';\nimport { getPerformanceDashboardData, initializePerformanceMonitoring } from '../../utils/performanceMonitoring';\n\nconst PerformanceDashboard = ({ isVisible = false, onClose }) => {\n  const [dashboardData, setDashboardData] = useState(null);\n  const [refreshInterval, setRefreshInterval] = useState(30000); // 30 seconds\n  const [isMonitoring, setIsMonitoring] = useState(false);\n  const [alertThreshold, setAlertThreshold] = useState(75);\n\n  const {\n    alerts,\n    startMonitoring: startAccessibilityMonitoring,\n    stopMonitoring: stopAccessibilityMonitoring,\n    clearAlerts\n  } = useAccessibilityMonitor({\n    threshold: alertThreshold,\n    monitorInterval: refreshInterval\n  });\n\n  // Refresh dashboard data\n  const refreshData = useCallback(() => {\n    try {\n      const data = getPerformanceDashboardData();\n      setDashboardData(data);\n    } catch (error) {\n      console.error('Failed to refresh performance dashboard:', error);\n    }\n  }, []);\n\n  // Toggle monitoring\n  const toggleMonitoring = useCallback(() => {\n    if (isMonitoring) {\n      stopAccessibilityMonitoring();\n      setIsMonitoring(false);\n    } else {\n      startAccessibilityMonitoring();\n      setIsMonitoring(true);\n    }\n  }, [isMonitoring, startAccessibilityMonitoring, stopAccessibilityMonitoring]);\n\n  // Initialize and set up refresh interval\n  useEffect(() => {\n    if (!isVisible) return;\n\n    // Initialize performance monitoring if not already done\n    initializePerformanceMonitoring();\n\n    // Initial data fetch\n    refreshData();\n\n    // Set up refresh interval\n    const interval = setInterval(refreshData, refreshInterval);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isVisible, refreshData, refreshInterval]);\n\n  // Format metric values for display\n  const formatMetric = (value, unit = 'ms') => {\n    if (value === null || value === undefined) return 'N/A';\n    if (typeof value === 'number') {\n      return `${Math.round(value)}${unit}`;\n    }\n    return value;\n  };\n\n  // Get metric status (good, needs improvement, poor)\n  const getMetricStatus = (metric, value) => {\n    const thresholds = {\n      LCP: { good: 2500, poor: 4000 },\n      FID: { good: 100, poor: 300 },\n      CLS: { good: 0.1, poor: 0.25 },\n      FCP: { good: 1800, poor: 3000 },\n      TTFB: { good: 800, poor: 1800 }\n    };\n\n    const threshold = thresholds[metric];\n    if (!threshold || value === null) return 'unknown';\n\n    if (value <= threshold.good) return 'good';\n    if (value <= threshold.poor) return 'needs-improvement';\n    return 'poor';\n  };\n\n  // Get status color\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'good': return 'text-green-600 bg-green-100';\n      case 'needs-improvement': return 'text-yellow-600 bg-yellow-100';\n      case 'poor': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  if (!isVisible || !dashboardData) {\n    return null;\n  }\n\n  const { webVitals, budgetViolations, accessibility, performance } = dashboardData;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-6xl max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">Performance Dashboard</h2>\n            <p className=\"text-sm text-gray-600 mt-1\">\n              Real-time monitoring for FinanceAnalyst Pro\n            </p>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={toggleMonitoring}\n              className={`px-4 py-2 rounded-md text-sm font-medium ${\n                isMonitoring\n                  ? 'bg-red-100 text-red-700 hover:bg-red-200'\n                  : 'bg-green-100 text-green-700 hover:bg-green-200'\n              }`}\n            >\n              {isMonitoring ? 'Stop Monitoring' : 'Start Monitoring'}\n            </button>\n            <button\n              onClick={refreshData}\n              className=\"px-4 py-2 bg-blue-100 text-blue-700 rounded-md text-sm font-medium hover:bg-blue-200\"\n            >\n              Refresh\n            </button>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-600\"\n            >\n              <span className=\"sr-only\">Close</span>\n              <svg\n                className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"p-6 space-y-8\">\n          {/* Web Vitals */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Core Web Vitals</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4\">\n              {Object.entries(webVitals).map(([metric, value]) => {\n                const status = getMetricStatus(metric, value);\n                const statusColor = getStatusColor(status);\n\n                return (\n                  <div key={metric} className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-600\">{metric}</span>\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${statusColor}`}>\n                        {status}\n                      </span>\n                    </div>\n                    <div className=\"mt-2\">\n                      <span className=\"text-2xl font-bold text-gray-900\">\n                        {formatMetric(value, metric === 'CLS' ? '' : 'ms')}\n                      </span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </section>\n\n          {/* Budget Violations */}\n          {budgetViolations.length > 0 && (\n            <section>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Performance Budget Violations</h3>\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n                <div className=\"space-y-2\">\n                  {budgetViolations.map((violation, index) => (\n                    <div key={index} className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-red-800\">\n                        {violation.metric}: {formatMetric(violation.value)}\n                      </span>\n                      <span className=\"text-sm text-red-600\">\n                        Over budget by {formatMetric(violation.overBy)}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </section>\n          )}\n\n          {/* Accessibility */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Accessibility</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                <h4 className=\"text-sm font-medium text-gray-600 mb-2\">Current Score</h4>\n                <div className=\"flex items-center\">\n                  <span className=\"text-3xl font-bold text-gray-900\">\n                    {accessibility.currentScore}\n                  </span>\n                  <span className=\"text-sm text-gray-500 ml-1\">/100</span>\n                  {accessibility.trends.scoreImproving && (\n                    <span className=\"ml-2 text-green-600\">\n                      <svg className=\"h-4 w-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M3.293 9.707a1 1 0 010-1.414l6-6a1 1 0 011.414 0l6 6a1 1 0 01-1.414 1.414L11 5.414V17a1 1 0 11-2 0V5.414L4.707 9.707a1 1 0 01-1.414 0z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </span>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                <h4 className=\"text-sm font-medium text-gray-600 mb-2\">Average Violations</h4>\n                <span className=\"text-3xl font-bold text-gray-900\">\n                  {accessibility.averageViolations}\n                </span>\n              </div>\n\n              <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                <h4 className=\"text-sm font-medium text-gray-600 mb-2\">Average Score</h4>\n                <span className=\"text-3xl font-bold text-gray-900\">\n                  {accessibility.averageScore}\n                </span>\n              </div>\n            </div>\n\n            {/* Accessibility Alerts */}\n            {alerts.length > 0 && (\n              <div className=\"mt-4 bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <h4 className=\"text-sm font-medium text-yellow-800\">Active Alerts</h4>\n                  <button\n                    onClick={clearAlerts}\n                    className=\"text-xs text-yellow-600 hover:text-yellow-800\"\n                  >\n                    Clear All\n                  </button>\n                </div>\n                <div className=\"space-y-2\">\n                  {alerts.slice(0, 5).map((alert) => (\n                    <div key={alert.id} className=\"text-sm text-yellow-700\">\n                      <span className=\"font-medium\">{alert.type}:</span> {alert.message}\n                    </div>\n                  ))}\n                  {alerts.length > 5 && (\n                    <div className=\"text-xs text-yellow-600\">\n                      And {alerts.length - 5} more alerts...\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </section>\n\n          {/* Recent Performance Metrics */}\n          {performance.recentMetrics.length > 0 && (\n            <section>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Recent Performance Events</h3>\n              <div className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\n                <div className=\"max-h-64 overflow-y-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Type\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Component\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Value\n                        </th>\n                        <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Time\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {performance.recentMetrics.slice(0, 10).map((metric, index) => (\n                        <tr key={index}>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                            {metric.type}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {metric.component || metric.componentType || 'N/A'}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {metric.violations !== undefined ? `${metric.violations} violations` :\n                              metric.score !== undefined ? `Score: ${metric.score}` :\n                                metric.duration !== undefined ? `${Math.round(metric.duration)}ms` : 'N/A'}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {new Date(metric.timestamp).toLocaleTimeString()}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </section>\n          )}\n\n          {/* Settings */}\n          <section>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Monitoring Settings</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                <label htmlFor=\"refresh-interval\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Refresh Interval (seconds)\n                </label>\n                <select\n                  id=\"refresh-interval\"\n                  value={refreshInterval / 1000}\n                  onChange={(e) => setRefreshInterval(parseInt(e.target.value) * 1000)}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm\"\n                >\n                  <option value={10}>10 seconds</option>\n                  <option value={30}>30 seconds</option>\n                  <option value={60}>1 minute</option>\n                  <option value={300}>5 minutes</option>\n                </select>\n              </div>\n\n              <div className=\"bg-white border border-gray-200 rounded-lg p-4\">\n                <label htmlFor=\"alert-threshold\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Accessibility Alert Threshold\n                </label>\n                <select\n                  id=\"alert-threshold\"\n                  value={alertThreshold}\n                  onChange={(e) => setAlertThreshold(parseInt(e.target.value))}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2 text-sm\"\n                >\n                  <option value={60}>60 (Strict)</option>\n                  <option value={75}>75 (Moderate)</option>\n                  <option value={85}>85 (Lenient)</option>\n                  <option value={95}>95 (Very Lenient)</option>\n                </select>\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PerformanceDashboard;\n","import { HelmetProvider } from 'react-helmet-async';\n\nconst SEOProvider = ({ children }) => {\n  return <HelmetProvider>{children}</HelmetProvider>;\n};\n\nexport default SEOProvider;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n\nexport default ScrollToTop;\n","import { clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n","import { cn } from '../../utils/cn';\n\nconst LoadingSpinner = ({\n  size = 'default',\n  className = '',\n  text = 'Loading...',\n  showText = true,\n  variant = 'primary'\n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    default: 'w-8 h-8',\n    lg: 'w-12 h-12',\n    xl: 'w-16 h-16'\n  };\n\n  const variantClasses = {\n    primary: 'text-primary',\n    secondary: 'text-secondary',\n    muted: 'text-muted-foreground',\n    white: 'text-white'\n  };\n\n  const textSizeClasses = {\n    sm: 'text-xs',\n    default: 'text-sm',\n    lg: 'text-base',\n    xl: 'text-lg'\n  };\n\n  return (\n    <div className={cn('flex flex-col items-center justify-center space-y-2', className)}>\n      <div\n        className={cn(\n          'animate-spin rounded-full border-2 border-current border-t-transparent',\n          sizeClasses[size],\n          variantClasses[variant]\n        )}\n      />\n      {showText && (\n        <p className={cn('font-medium', textSizeClasses[size], variantClasses[variant])}>{text}</p>\n      )}\n    </div>\n  );\n};\n\n// Full page loading spinner\nexport const FullPageLoader = ({ text = 'Loading FinanceAnalyst Pro...' }) => {\n  return (\n    <div className=\"fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center\">\n      <div className=\"bg-card border border-border rounded-lg p-8 shadow-elevation-2\">\n        <LoadingSpinner size=\"lg\" text={text} variant=\"primary\" />\n      </div>\n    </div>\n  );\n};\n\n// Inline loading spinner for buttons\nexport const ButtonSpinner = ({ className = '' }) => {\n  return (\n    <div\n      className={cn(\n        'animate-spin rounded-full border-2 border-current border-t-transparent w-4 h-4',\n        className\n      )}\n    />\n  );\n};\n\n// Skeleton loader for content\nexport const SkeletonLoader = ({ lines = 3, className = '', animated = true }) => {\n  return (\n    <div className={cn('space-y-2', className)}>\n      {Array.from({ length: lines }).map((_, index) => (\n        <div\n          key={index}\n          className={cn(\n            'h-4 bg-muted rounded',\n            animated && 'animate-pulse',\n            index === lines - 1 && 'w-3/4' // Last line shorter\n          )}\n        />\n      ))}\n    </div>\n  );\n};\n\n// Chart loading placeholder\nexport const ChartLoader = ({ className = '' }) => {\n  return (\n    <div\n      className={cn(\n        'flex items-center justify-center h-64 bg-muted/20 rounded-lg border-2 border-dashed border-muted',\n        className\n      )}\n    >\n      <div className=\"text-center space-y-2\">\n        <LoadingSpinner size=\"lg\" variant=\"muted\" showText={false} />\n        <p className=\"text-sm text-muted-foreground\">Loading chart data...</p>\n      </div>\n    </div>\n  );\n};\n\n// Table loading placeholder\nexport const TableLoader = ({ rows = 5, columns = 4, className = '' }) => {\n  return (\n    <div className={cn('space-y-2', className)}>\n      {/* Header */}\n      <div className=\"grid gap-4\" style={{ gridTemplateColumns: `repeat(${columns}, 1fr)` }}>\n        {Array.from({ length: columns }).map((_, index) => (\n          <div key={`header-${index}`} className=\"h-6 bg-muted rounded animate-pulse\" />\n        ))}\n      </div>\n\n      {/* Rows */}\n      {Array.from({ length: rows }).map((_, rowIndex) => (\n        <div\n          key={`row-${rowIndex}`}\n          className=\"grid gap-4\"\n          style={{ gridTemplateColumns: `repeat(${columns}, 1fr)` }}\n        >\n          {Array.from({ length: columns }).map((_, colIndex) => (\n            <div\n              key={`cell-${rowIndex}-${colIndex}`}\n              className=\"h-4 bg-muted/60 rounded animate-pulse\"\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { Suspense, lazy } from 'react';\nimport { BrowserRouter, Routes as RouterRoutes, Route } from 'react-router-dom';\n\nimport ErrorBoundary from './components/ErrorBoundary';\nimport ScrollToTop from './components/ScrollToTop';\nimport LoadingSpinner from './components/ui/LoadingSpinner';\n\n// Lazy load pages for code splitting and better performance\nconst FinancialModelWorkspace = lazy(() => import('./pages/financial-model-workspace'));\nconst RealTimeMarketDataCenter = lazy(() => import('./pages/real-time-market-data-center'));\nconst ScenarioAnalysisSensitivityTools = lazy(\n  () => import('./pages/scenario-analysis-sensitivity-tools')\n);\nconst ValuationTool = lazy(() => import('./components/ValuationTool/ValuationTool'));\nconst ValuationToolDocs = lazy(() => import('./components/ValuationTool/ValuationToolDocs'));\nconst ValuationToolDemo = lazy(() => import('./pages/valuation-tool-demo'));\nconst PrivateAnalysis = lazy(() => import('./pages/PrivateAnalysis'));\nconst ValuationWorkbench = lazy(() => import('./pages/ValuationWorkbench'));\nconst ModelLab = lazy(() => import('./pages/ModelLab'));\nconst PortfolioManagement = lazy(() => import('./pages/PortfolioManagement'));\nconst FinancialInputsDemo = lazy(() => import('./components/FinancialInputsDemo'));\nconst NotFound = lazy(() => import('./pages/NotFound'));\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <ErrorBoundary>\n        <ScrollToTop />\n        <Suspense fallback={<LoadingSpinner />}>\n          <RouterRoutes>\n            {/* Define your routes here */}\n            <Route path=\"/\" element={<FinancialModelWorkspace />} />\n            <Route path=\"/financial-model-workspace\" element={<FinancialModelWorkspace />} />\n            <Route path=\"/real-time-market-data-center\" element={<RealTimeMarketDataCenter />} />\n            <Route\n              path=\"/scenario-analysis-sensitivity-tools\"\n              element={<ScenarioAnalysisSensitivityTools />}\n            />\n            <Route path=\"/valuation-tool\" element={<ValuationTool />} />\n            <Route path=\"/valuation-tool/docs\" element={<ValuationToolDocs />} />\n            <Route path=\"/valuation-tool/demo\" element={<ValuationToolDemo />} />\n            <Route path=\"/valuation-workbench\" element={<ValuationWorkbench />} />\n            <Route path=\"/model-lab\" element={<ModelLab />} />\n            <Route path=\"/portfolio-management\" element={<PortfolioManagement />} />\n            <Route path=\"/private-analysis\" element={<PrivateAnalysis />} />\n            <Route path=\"/financial-inputs-demo\" element={<FinancialInputsDemo />} />\n            <Route path=\"*\" element={<NotFound />} />\n          </RouterRoutes>\n        </Suspense>\n      </ErrorBoundary>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import { useEffect, useState } from 'react';\n\nimport AIFinancialAssistant from './components/AIAssistant/AIFinancialAssistant';\nimport PersistentCLI from './components/CLI/PersistentCLI';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport PerformanceDashboard from './components/PerformanceDashboard';\nimport SEOProvider from './components/SEO/SEOProvider';\nimport { usePerformanceDashboard } from './hooks/usePerformanceDashboard';\nimport Routes from './Routes';\nimport { initializePerformanceMonitoring } from './utils/performanceMonitoring';\n\nfunction App() {\n  const { isVisible, hideDashboard } = usePerformanceDashboard();\n  const [isAIAssistantOpen, setIsAIAssistantOpen] = useState(false);\n  const [currentContext, setCurrentContext] = useState({\n    path: window.location.pathname,\n    timestamp: new Date().toISOString()\n  });\n  const [portfolioData, _setPortfolioData] = useState(null);\n  const [marketData, _setMarketData] = useState(null);\n\n  // Initialize performance monitoring on app start\n  useEffect(() => {\n    initializePerformanceMonitoring();\n  }, []);\n\n  // Update context when route changes\n  useEffect(() => {\n    setCurrentContext({\n      path: window.location.pathname,\n      timestamp: new Date().toISOString()\n    });\n  }, [window.location.pathname]);\n\n  // Global keyboard shortcut for AI Assistant (Cmd/Ctrl + K)\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if ((e.metaKey || e.ctrlKey) && e.key === 'k') {\n        e.preventDefault();\n        setIsAIAssistantOpen(prev => !prev);\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    return () => document.removeEventListener('keydown', handleKeyPress);\n  }, []);\n\n  const handleNavigation = (route) => {\n    window.location.href = route;\n  };\n\n  return (\n    <ErrorBoundary>\n      <SEOProvider>\n        <Routes />\n        <PerformanceDashboard\n          isVisible={isVisible}\n          onClose={hideDashboard}\n        />\n        <AIFinancialAssistant\n          isOpen={isAIAssistantOpen}\n          onToggle={() => setIsAIAssistantOpen(prev => !prev)}\n          currentContext={currentContext}\n          portfolioData={portfolioData}\n          marketData={marketData}\n        />\n        {/* Persistent CLI - Always visible at bottom */}\n        <PersistentCLI\n          currentContext={currentContext}\n          portfolioData={portfolioData}\n          marketData={marketData}\n          onNavigate={handleNavigation}\n        />\n        {/* Floating AI Assistant Button */}\n        {!isAIAssistantOpen && (\n          <button\n            onClick={() => setIsAIAssistantOpen(true)}\n            className=\"fixed bottom-20 right-6 bg-gradient-to-r from-blue-600 to-purple-600 text-white p-4 rounded-full shadow-2xl hover:shadow-3xl transform hover:scale-105 transition-all duration-200 z-40\"\n          >\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\"\n              />\n            </svg>\n          </button>\n        )}\n      </SEOProvider>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;\n","import { useState, useCallback, useEffect } from 'react';\n\n// Hook for managing performance dashboard visibility and hotkey\nexport function usePerformanceDashboard() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggleDashboard = useCallback(() => {\n    setIsVisible(prev => !prev);\n  }, []);\n\n  const showDashboard = useCallback(() => {\n    setIsVisible(true);\n  }, []);\n\n  const hideDashboard = useCallback(() => {\n    setIsVisible(false);\n  }, []);\n\n  // Keyboard shortcut for dashboard (Ctrl/Cmd + Shift + P)\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if ((event.ctrlKey || event.metaKey) && event.shiftKey && event.key === 'P') {\n        event.preventDefault();\n        toggleDashboard();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [toggleDashboard]);\n\n  // Show dashboard automatically in development if there are performance issues\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development') {\n      // Check for performance budget violations after page load\n      const checkPerformanceIssues = () => {\n        // This would integrate with your performance monitoring\n        const webVitals = window.webVitalsData;\n        if (webVitals) {\n          const hasIssues =\n            (webVitals.LCP && webVitals.LCP > 2500) ||\n            (webVitals.FID && webVitals.FID > 100) ||\n            (webVitals.CLS && webVitals.CLS > 0.1);\n\n          if (hasIssues) {\n            console.warn('Performance issues detected. Press Ctrl/Cmd + Shift + P to open dashboard.');\n          }\n        }\n      };\n\n      // Check after initial page load\n      setTimeout(checkPerformanceIssues, 3000);\n    }\n  }, []);\n\n  return {\n    isVisible,\n    toggleDashboard,\n    showDashboard,\n    hideDashboard\n  };\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  name: 'Guest',\n  isAuthenticated: false\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    login: (state, action) => {\n      state.name = action.payload.name;\n      state.isAuthenticated = true;\n    },\n    logout: (state) => {\n      state.name = 'Guest';\n      state.isAuthenticated = false;\n    }\n  }\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport userReducer from './slices/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer\n  }\n});\n","// Security Headers Management and CSP Nonce Generation\n\n// Generate secure nonce for CSP\nexport function generateNonce() {\n  if (typeof window !== 'undefined' && window.crypto) {\n    const array = new Uint8Array(16);\n    window.crypto.getRandomValues(array);\n    return btoa(String.fromCharCode.apply(null, array));\n  }\n\n  // Fallback for server-side or older browsers\n  return Math.random().toString(36).substring(2, 15) +\n         Math.random().toString(36).substring(2, 15);\n}\n\n// Store current nonce for the session\nlet currentNonce = null;\n\nexport function getCurrentNonce() {\n  if (!currentNonce) {\n    currentNonce = generateNonce();\n  }\n  return currentNonce;\n}\n\n// Refresh nonce (call on navigation or sensitive operations)\nexport function refreshNonce() {\n  currentNonce = generateNonce();\n  return currentNonce;\n}\n\n// CSP Policy Builder\nexport class CSPPolicyBuilder {\n  constructor() {\n    this.policies = {};\n  }\n\n  // Set default secure policies\n  setDefaults() {\n    this.policies = {\n      'default-src': [\"'self'\"],\n      'script-src': [\n        \"'self'\",\n        \"'unsafe-inline'\", // Will be replaced with nonces in production\n        \"'unsafe-eval'\", // Required for some financial calculations\n        'https://static.rocket.new' // Third-party service\n      ],\n      'style-src': [\n        \"'self'\",\n        \"'unsafe-inline'\", // Required for CSS-in-JS\n        'https://fonts.googleapis.com'\n      ],\n      'font-src': [\n        \"'self'\",\n        'https://fonts.gstatic.com'\n      ],\n      'img-src': [\n        \"'self'\",\n        'data:',\n        'blob:',\n        'https:'\n      ],\n      'connect-src': [\n        \"'self'\",\n        'https://www.alphavantage.co',\n        'https://financialmodelingprep.com',\n        'https://data.sec.gov',\n        'https://query1.finance.yahoo.com',\n        'https://query2.finance.yahoo.com',\n        'https://data.nasdaq.com',\n        'https://fred.stlouisfed.org'\n      ],\n      'frame-ancestors': [\"'none'\"],\n      'base-uri': [\"'self'\"],\n      'form-action': [\"'self'\"],\n      'upgrade-insecure-requests': [],\n      'block-all-mixed-content': []\n    };\n    return this;\n  }\n\n  // Add nonce to script-src and style-src\n  addNonce(nonce) {\n    if (this.policies['script-src']) {\n      // Remove unsafe-inline when nonce is present\n      this.policies['script-src'] = this.policies['script-src']\n        .filter(src => src !== \"'unsafe-inline'\")\n        .concat([`'nonce-${nonce}'`]);\n    }\n\n    if (this.policies['style-src']) {\n      // Keep unsafe-inline for CSS-in-JS compatibility\n      this.policies['style-src'] = this.policies['style-src']\n        .concat([`'nonce-${nonce}'`]);\n    }\n\n    return this;\n  }\n\n  // Add specific domain to directive\n  addSource(directive, source) {\n    if (!this.policies[directive]) {\n      this.policies[directive] = [];\n    }\n    if (!this.policies[directive].includes(source)) {\n      this.policies[directive].push(source);\n    }\n    return this;\n  }\n\n  // Remove source from directive\n  removeSource(directive, source) {\n    if (this.policies[directive]) {\n      this.policies[directive] = this.policies[directive]\n        .filter(src => src !== source);\n    }\n    return this;\n  }\n\n  // Build final CSP string\n  build() {\n    return Object.entries(this.policies)\n      .map(([directive, sources]) => {\n        if (sources.length === 0) {\n          return directive;\n        }\n        return `${directive} ${sources.join(' ')}`;\n      })\n      .join('; ');\n  }\n}\n\n// Security Headers Configuration\nexport const securityHeaders = {\n  // Content Security Policy\n  getCSP: (nonce = null) => {\n    const builder = new CSPPolicyBuilder().setDefaults();\n\n    if (nonce) {\n      builder.addNonce(nonce);\n    }\n\n    // Add development-specific policies\n    if (process.env.NODE_ENV === 'development') {\n      builder\n        .addSource('script-src', 'http://localhost:*')\n        .addSource('connect-src', 'ws://localhost:*')\n        .addSource('connect-src', 'http://localhost:*');\n    }\n\n    return builder.build();\n  },\n\n  // HTTP Strict Transport Security\n  getHSTS: () => {\n    return 'max-age=31536000; includeSubDomains; preload';\n  },\n\n  // X-Frame-Options\n  getFrameOptions: () => {\n    return 'DENY';\n  },\n\n  // X-Content-Type-Options\n  getContentTypeOptions: () => {\n    return 'nosniff';\n  },\n\n  // Referrer-Policy\n  getReferrerPolicy: () => {\n    return 'strict-origin-when-cross-origin';\n  },\n\n  // Permissions-Policy\n  getPermissionsPolicy: () => {\n    return [\n      'camera=()',\n      'microphone=()',\n      'geolocation=()',\n      'payment=()',\n      'autoplay=()',\n      'fullscreen=*',\n      'picture-in-picture=*'\n    ].join(', ');\n  },\n\n  // Cross-Origin policies\n  getCrossOriginEmbedderPolicy: () => {\n    return 'require-corp';\n  },\n\n  getCrossOriginOpenerPolicy: () => {\n    return 'same-origin';\n  },\n\n  getCrossOriginResourcePolicy: () => {\n    return 'same-origin';\n  }\n};\n\n// Apply CSP nonce to script and style elements\nexport function applyCspNonce(nonce) {\n  if (typeof document === 'undefined') return;\n\n  // Add nonce to inline scripts\n  const inlineScripts = document.querySelectorAll('script:not([src])');\n  inlineScripts.forEach(script => {\n    script.setAttribute('nonce', nonce);\n  });\n\n  // Add nonce to inline styles\n  const inlineStyles = document.querySelectorAll('style');\n  inlineStyles.forEach(style => {\n    style.setAttribute('nonce', nonce);\n  });\n}\n\n// Create secure headers for server responses\nexport function createSecureHeaders(nonce = null) {\n  const headers = {};\n\n  // CSP with nonce\n  headers['Content-Security-Policy'] = securityHeaders.getCSP(nonce);\n\n  // Security headers\n  headers['Strict-Transport-Security'] = securityHeaders.getHSTS();\n  headers['X-Frame-Options'] = securityHeaders.getFrameOptions();\n  headers['X-Content-Type-Options'] = securityHeaders.getContentTypeOptions();\n  headers['Referrer-Policy'] = securityHeaders.getReferrerPolicy();\n  headers['Permissions-Policy'] = securityHeaders.getPermissionsPolicy();\n\n  // Cross-Origin policies\n  if (process.env.NODE_ENV === 'production') {\n    headers['Cross-Origin-Embedder-Policy'] = securityHeaders.getCrossOriginEmbedderPolicy();\n    headers['Cross-Origin-Opener-Policy'] = securityHeaders.getCrossOriginOpenerPolicy();\n    headers['Cross-Origin-Resource-Policy'] = securityHeaders.getCrossOriginResourcePolicy();\n  }\n\n  return headers;\n}\n\n// Validate CSP compliance\nexport function validateCSPCompliance() {\n  const violations = [];\n\n  if (typeof document === 'undefined') return violations;\n\n  // Check for inline scripts without nonces\n  const inlineScripts = document.querySelectorAll('script:not([src]):not([nonce])');\n  if (inlineScripts.length > 0) {\n    violations.push({\n      type: 'inline-script-without-nonce',\n      count: inlineScripts.length,\n      elements: Array.from(inlineScripts).slice(0, 3) // First 3 for debugging\n    });\n  }\n\n  // Check for inline styles without nonces (less critical due to CSS-in-JS)\n  const inlineStyles = document.querySelectorAll('style:not([nonce])');\n  if (inlineStyles.length > 5) { // Allow some CSS-in-JS styles\n    violations.push({\n      type: 'excessive-inline-styles',\n      count: inlineStyles.length,\n      recommendation: 'Consider consolidating CSS-in-JS styles'\n    });\n  }\n\n  // Check for unsafe external resources\n  const externalScripts = document.querySelectorAll('script[src]');\n  externalScripts.forEach(script => {\n    const src = script.getAttribute('src');\n    if (src && !src.startsWith('https://') && !src.startsWith('/')) {\n      violations.push({\n        type: 'insecure-external-script',\n        src,\n        element: script\n      });\n    }\n  });\n\n  return violations;\n}\n\n// CSP violation reporter\nexport function setupCSPReporting() {\n  if (typeof document === 'undefined') return;\n\n  document.addEventListener('securitypolicyviolation', (event) => {\n    const violation = {\n      blockedURI: event.blockedURI,\n      violatedDirective: event.violatedDirective,\n      originalPolicy: event.originalPolicy,\n      disposition: event.disposition,\n      timestamp: Date.now(),\n      userAgent: navigator.userAgent,\n      url: window.location.href\n    };\n\n    console.warn('CSP Violation:', violation);\n\n    // In production, send to monitoring service\n    if (process.env.NODE_ENV === 'production') {\n      sendCSPViolation(violation);\n    }\n  });\n}\n\nfunction sendCSPViolation(violation) {\n  // Send to your monitoring service\n  fetch('/api/csp-violations', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(violation)\n  }).catch(error => {\n    console.error('Failed to report CSP violation:', error);\n  });\n}\n\n// Initialize security measures\nexport function initializeSecurity() {\n  const nonce = getCurrentNonce();\n\n  // Apply nonce to existing elements\n  applyCspNonce(nonce);\n\n  // Setup CSP violation reporting\n  setupCSPReporting();\n\n  // Validate compliance\n  const violations = validateCSPCompliance();\n  if (violations.length > 0) {\n    console.warn('CSP compliance issues found:', violations);\n  }\n\n  // Setup periodic compliance checks\n  setInterval(() => {\n    const currentViolations = validateCSPCompliance();\n    if (currentViolations.length > violations.length) {\n      console.warn('New CSP compliance issues detected:',\n        currentViolations.slice(violations.length));\n    }\n  }, 30000); // Check every 30 seconds\n\n  console.log('Security measures initialized with nonce:', nonce);\n  return nonce;\n}\n\n// Hook for React components to get current nonce\nexport function useSecurityNonce() {\n  return getCurrentNonce();\n}\n","// Service Worker Registration and Management\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  window.location.hostname === '[::1]' ||\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function registerSW() {\n  if ('serviceWorker' in navigator) {\n    const publicUrl = new URL(import.meta.env.BASE_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${import.meta.env.BASE_URL}sw.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl);\n        navigator.serviceWorker.ready.then(() => {\n          console.warn('PWA: Service Worker ready in development mode');\n        });\n      } else {\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      console.warn('PWA: Service Worker registered successfully:', registration);\n\n      // Check for updates\n      registration.addEventListener('updatefound', () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n\n        installingWorker.addEventListener('statechange', () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log('PWA: New content available, will update on next visit');\n              showUpdateAvailableNotification();\n            } else {\n              console.log('PWA: Content cached for offline use');\n              showCachedNotification();\n            }\n          }\n        });\n      });\n    })\n    .catch((error) => {\n      console.error('PWA: Service Worker registration failed:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('PWA: No internet connection found. App is running in offline mode.');\n      showOfflineNotification();\n    });\n}\n\nexport function unregisterSW() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error('PWA: Service Worker unregistration failed:', error);\n      });\n  }\n}\n\n// Notification functions for better UX\nfunction showUpdateAvailableNotification() {\n  if ('Notification' in window && Notification.permission === 'granted') {\n    new Notification('FinanceAnalyst Pro Update Available', {\n      body: 'A new version is available. Refresh to update.',\n      icon: '/assets/images/favicon.svg',\n      badge: '/assets/images/favicon.svg',\n      tag: 'app-update'\n    });\n  }\n\n  // Also show in-app notification\n  showInAppNotification(\n    'Update Available',\n    'A new version of FinanceAnalyst Pro is ready. Refresh to update.',\n    'info'\n  );\n}\n\nfunction showCachedNotification() {\n  showInAppNotification(\n    'App Ready for Offline',\n    'FinanceAnalyst Pro is now available offline for core features.',\n    'success'\n  );\n}\n\nfunction showOfflineNotification() {\n  showInAppNotification(\n    'Offline Mode',\n    'You\\'re currently offline. Some features may be limited.',\n    'warning'\n  );\n}\n\nfunction showInAppNotification(title, message, type = 'info') {\n  // Create a simple notification system\n  const notification = document.createElement('div');\n  notification.className = `\n    fixed top-4 right-4 z-50 max-w-sm p-4 rounded-lg shadow-lg\n    ${type === 'success' ? 'bg-green-50 text-green-800 border border-green-200' : ''}\n    ${type === 'warning' ? 'bg-yellow-50 text-yellow-800 border border-yellow-200' : ''}\n    ${type === 'info' ? 'bg-blue-50 text-blue-800 border border-blue-200' : ''}\n    transition-all duration-300 transform translate-x-full\n  `;\n\n  notification.innerHTML = `\n    <div class=\"flex items-start\">\n      <div class=\"flex-1\">\n        <h4 class=\"font-medium text-sm\">${title}</h4>\n        <p class=\"text-sm mt-1 opacity-90\">${message}</p>\n      </div>\n      <button class=\"ml-3 text-sm opacity-60 hover:opacity-100\" onclick=\"this.parentElement.parentElement.remove()\">\n        ✕\n      </button>\n    </div>\n  `;\n\n  document.body.appendChild(notification);\n\n  // Animate in\n  requestAnimationFrame(() => {\n    notification.style.transform = 'translateX(0)';\n  });\n\n  // Auto remove after 5 seconds\n  setTimeout(() => {\n    if (notification.parentElement) {\n      notification.style.transform = 'translateX(100%)';\n      setTimeout(() => notification.remove(), 300);\n    }\n  }, 5000);\n}\n\n// Request notification permission\nexport function requestNotificationPermission() {\n  if ('Notification' in window && Notification.permission === 'default') {\n    Notification.requestPermission().then((permission) => {\n      console.log('PWA: Notification permission:', permission);\n    });\n  }\n}\n\n// Install prompt handling\nlet deferredPrompt;\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  e.preventDefault();\n  deferredPrompt = e;\n  showInstallPrompt();\n});\n\nfunction showInstallPrompt() {\n  // Show custom install button/banner\n  const installBanner = document.createElement('div');\n  installBanner.className = `\n    fixed bottom-4 left-4 right-4 p-4 bg-blue-600 text-white rounded-lg shadow-lg\n    flex items-center justify-between z-50 max-w-md mx-auto\n  `;\n\n  installBanner.innerHTML = `\n    <div class=\"flex-1\">\n      <h4 class=\"font-medium text-sm\">Install FinanceAnalyst Pro</h4>\n      <p class=\"text-sm opacity-90 mt-1\">Get faster access and offline features</p>\n    </div>\n    <div class=\"flex items-center space-x-2 ml-3\">\n      <button id=\"install-btn\" class=\"bg-white text-blue-600 px-3 py-1 rounded text-sm font-medium hover:bg-blue-50\">\n        Install\n      </button>\n      <button id=\"dismiss-btn\" class=\"text-white opacity-60 hover:opacity-100 text-sm\">\n        ✕\n      </button>\n    </div>\n  `;\n\n  document.body.appendChild(installBanner);\n\n  // Handle install button click\n  installBanner.querySelector('#install-btn').addEventListener('click', async() => {\n    if (deferredPrompt) {\n      deferredPrompt.prompt();\n      const { outcome } = await deferredPrompt.userChoice;\n      console.log('PWA: Install prompt outcome:', outcome);\n      deferredPrompt = null;\n    }\n    installBanner.remove();\n  });\n\n  // Handle dismiss button click\n  installBanner.querySelector('#dismiss-btn').addEventListener('click', () => {\n    installBanner.remove();\n    deferredPrompt = null;\n  });\n}\n\n// Handle successful installation\nwindow.addEventListener('appinstalled', () => {\n  console.log('PWA: App was installed successfully');\n  showInAppNotification(\n    'App Installed',\n    'FinanceAnalyst Pro has been installed successfully!',\n    'success'\n  );\n  deferredPrompt = null;\n});\n\n// Network status handling\nexport function setupNetworkHandling() {\n  function updateOnlineStatus() {\n    const isOnline = navigator.onLine;\n    console.log('PWA: Network status:', isOnline ? 'online' : 'offline');\n\n    if (!isOnline) {\n      showInAppNotification(\n        'Connection Lost',\n        'You\\'re now offline. Cached content will be used.',\n        'warning'\n      );\n    } else {\n      showInAppNotification(\n        'Connection Restored',\n        'You\\'re back online. Syncing latest data...',\n        'success'\n      );\n    }\n\n    // Update UI to reflect network status\n    document.body.setAttribute('data-network-status', isOnline ? 'online' : 'offline');\n  }\n\n  window.addEventListener('online', updateOnlineStatus);\n  window.addEventListener('offline', updateOnlineStatus);\n\n  // Initial status\n  updateOnlineStatus();\n}\n\n// Detect automated/audit environments (e.g., Lighthouse/CI)\nfunction isAutomatedEnvironment() {\n  try {\n    const params = new URLSearchParams(window.location.search);\n    return (\n      navigator.webdriver === true ||\n      params.has('lhci') ||\n      params.has('ci') ||\n      params.has('audit') ||\n      params.get('pwa') === '0'\n    );\n  } catch {\n    return navigator.webdriver === true;\n  }\n}\n\n// Initialize PWA features\nexport function initializePWA() {\n  // Skip PWA in automated environments to avoid permission prompts and SW interference\n  if (isAutomatedEnvironment()) {\n    console.warn('PWA: Skipping initialization in automated/audit environment');\n    return;\n  }\n\n  registerSW();\n  setupNetworkHandling();\n\n  // Do NOT request notification permission automatically on load\n  // Prefer requesting permission in response to explicit user action\n\n  console.log('PWA: Initialization complete');\n}\n","import { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './store/store';\nimport { initializePerformanceMonitoring } from './utils/performanceMonitoring';\nimport { initializeSecurity } from './utils/securityHeaders';\nimport { initializePWA } from './utils/serviceWorker';\nimport './styles/tailwind.css';\nimport './styles/index.css';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n// Initialize security measures\nconst securityNonce = initializeSecurity();\n\n// Initialize PWA features\ninitializePWA();\n\n// Initialize performance monitoring\ninitializePerformanceMonitoring();\n\n// Log initialization complete\nconsole.log('🚀 FinanceAnalyst Pro initialized with security nonce:', securityNonce);\n"],"file":"assets/index-C9H0q2Zr.js"}