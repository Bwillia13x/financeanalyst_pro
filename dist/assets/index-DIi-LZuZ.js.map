{"version":3,"mappings":"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","names":["React","forwardRef","className","id","checked","indeterminate","disabled","required","label","description","error","size","props","ref","checkboxId","Math","random","toString","substr","cn","children","jsxs","jsx","type","htmlFor","sm","default","lg","Check","Minus","displayName","lazy","__vitePreload","import","__VITE_PRELOAD__","then","module","data","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","width","height","strokeDasharray","stroke","fontSize","contentStyle","backgroundColor","border","borderRadius","dataKey","fill","radius","ScatterChart","Scatter","AreaChart","Area","FinancialInput","value","onChange","onBlur","placeholder","prefix","suffix","locale","currency","loading","decimals","allowNegative","autoFocus","onValidation","min","max","displayValue","setDisplayValue","useState","isFocused","setIsFocused","isValid","setIsValid","inputRef","useRef","componentRef","inputId","formatValue","val","numValue","parseFloat","isNaN","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","parseValue","cleanValue","replace","useEffect","current","focus","DollarSign","Percent","Calculator","getIcon","e","newValue","target","test","onFocus","_e","rawValue","setTimeout","select","valid","errorMessage","validateInput","onKeyPress","key","preventDefault","blur","AlertCircle","CURRENCY_CONFIG","USD","symbol","code","name","EUR","GBP","JPY","CAD","AUD","CHF","CNY","CurrencyInput","showCurrency","showTrend","previousValue","variant","step","abbreviateDisplay","precision","validationMessage","setValidationMessage","currencyConfig","effectiveDecimals","effectivePlaceholder","useMemo","formatCurrency","options","abbreviated","abs","absValue","sign","toFixed","formatted","parseCurrency","str","toLowerCase","multiplier","endsWith","trend","previous","getTrend","message","filled","minimal","TrendingUp","TrendingDown","LazyLoader","fallback","componentName","threshold","rootMargin","preloadDelay","priority","onLoad","onError","performanceTracking","isVisible","setIsVisible","isLoaded","setIsLoaded","loadError","setLoadError","preloadTimer","setPreloadTimer","containerRef","observerRef","loadStartTime","IntersectionObserver","entries","forEach","entry","isIntersecting","performance","now","unobserve","observe","disconnect","clearTimeout","timer","loadTime","mod","trackFinancialComponentPerformance","timestamp","Date","catch","defaultFallback","errorFallback","viewBox","fillRule","d","clipRule","onClick","Suspense","ErrorBoundary","Component","constructor","_error","super","this","state","hasError","getDerivedStateFromError","componentDidCatch","_errorInfo","componentDidMount","render","ChartLoadingFallback","title","withLazyChart","ChartComponent","LazyChartComponent","chartProps","elementRef","useFinancialAccessibility","el","MetricCard","change","TrendIcon","Card","CardContent","toLocaleString","processedData","reduce","acc","item","index","prevTotal","cumulative","push","start","isPositive","isTotal","CustomBar","payload","x","y","barColor","CustomTooltip","active","_label","length","CardHeader","CardTitle","margin","top","right","left","bottom","axisLine","tickLine","tick","angle","textAnchor","tickFormatter","ReferenceLine","strokeWidth","shape","activeIndex","setActiveIndex","colors","total","sum","map","percentage","color","PieChart","Pie","cx","cy","innerRadius","outerRadius","paddingAngle","onMouseEnter","_","onMouseLeave","Cell","filter","transform","transformOrigin","showGrowthRate","growth","prevValue","currentValue","firstValue","lastValue","overallGrowth","isPositiveTrend","CustomDot","Dot","r","LineChart","Line","dot","activeDot","xAxisLabels","yAxisLabels","_formatValue","formatCell","hoveredCell","setHoveredCell","allValues","flat","minValue","range","xLabel","yLabel","clientX","clientY","row","yIndex","xIndex","intensity","getColorIntensity","getCellColor","metrics","columns","gridClasses","groupedMetrics","groups","metric","category","hasCategories","Object","keys","categoryMetrics","highlight","some","m","isSummary"],"ignoreList":[],"sources":["../../src/components/ui/Checkbox.jsx","../../src/components/ui/LazyChart.jsx","../../src/components/ui/FinancialInput.jsx","../../src/components/ui/CurrencyInput.jsx","../../src/components/ui/charts/DCFWaterfall.jsx","../../src/components/LazyLoader/LazyLoader.jsx","../../src/components/ui/charts/LazyChartWrapper.jsx","../../src/components/ui/charts/MetricsDashboard.jsx","../../src/components/ui/charts/index.js","../../src/components/ui/charts/RevenueBreakdown.jsx","../../src/components/ui/charts/TrendLine.jsx","../../src/components/ui/charts/SensitivityHeatmap.jsx"],"sourcesContent":["import { Check, Minus } from 'lucide-react';\nimport React from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst Checkbox = React.forwardRef(\n  (\n    {\n      className,\n      id,\n      checked,\n      indeterminate = false,\n      disabled = false,\n      required = false,\n      label,\n      description,\n      error,\n      size = 'default',\n      ...props\n    },\n    ref\n  ) => {\n    // Generate unique ID if not provided\n    const checkboxId = id || `checkbox-${Math.random().toString(36).substr(2, 9)}`;\n\n    // Size variants\n    const sizeClasses = {\n      sm: 'h-4 w-4',\n      default: 'h-4 w-4',\n      lg: 'h-5 w-5'\n    };\n\n    return (\n      <div className={cn('flex items-start space-x-2', className)}>\n        <div className=\"relative flex items-center\">\n          <input\n            type=\"checkbox\"\n            ref={ref}\n            id={checkboxId}\n            checked={checked}\n            disabled={disabled}\n            required={required}\n            className=\"sr-only\"\n            {...props}\n          />\n\n          <label\n            htmlFor={checkboxId}\n            className={cn(\n              'peer shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground cursor-pointer transition-colors',\n              sizeClasses[size],\n              checked && 'bg-primary text-primary-foreground border-primary',\n              indeterminate && 'bg-primary text-primary-foreground border-primary',\n              error && 'border-destructive',\n              disabled && 'cursor-not-allowed opacity-50'\n            )}\n          >\n            {checked && !indeterminate && (\n              <Check className=\"h-3 w-3 text-current flex items-center justify-center\" />\n            )}\n            {indeterminate && (\n              <Minus className=\"h-3 w-3 text-current flex items-center justify-center\" />\n            )}\n          </label>\n        </div>\n\n        {(label || description || error) && (\n          <div className=\"flex-1 space-y-1\">\n            {label && (\n              <label\n                htmlFor={checkboxId}\n                className={cn(\n                  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 cursor-pointer',\n                  error ? 'text-destructive' : 'text-foreground'\n                )}\n              >\n                {label}\n                {required && <span className=\"text-destructive ml-1\">*</span>}\n              </label>\n            )}\n\n            {description && !error && (\n              <p className=\"text-sm text-muted-foreground\">{description}</p>\n            )}\n\n            {error && <p className=\"text-sm text-destructive\">{error}</p>}\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nCheckbox.displayName = 'Checkbox';\n\n// Checkbox Group component\nconst CheckboxGroup = React.forwardRef(\n  (\n    {\n      className,\n      children,\n      label,\n      description,\n      error,\n      required = false,\n      disabled = false,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <fieldset\n        ref={ref} disabled={disabled} className={cn('space-y-3', className)}\n        {...props}\n      >\n        {label && (\n          <legend\n            className={cn('text-sm font-medium', error ? 'text-destructive' : 'text-foreground')}\n          >\n            {label}\n            {required && <span className=\"text-destructive ml-1\">*</span>}\n          </legend>\n        )}\n\n        {description && !error && <p className=\"text-sm text-muted-foreground\">{description}</p>}\n\n        <div className=\"space-y-2\">{children}</div>\n\n        {error && <p className=\"text-sm text-destructive\">{error}</p>}\n      </fieldset>\n    );\n  }\n);\n\nCheckboxGroup.displayName = 'CheckboxGroup';\n\nexport { Checkbox, CheckboxGroup };\n","import React, { Suspense, lazy } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\n// Lazy load the chart components to reduce initial bundle size\nconst LazyBarChart = lazy(() =>\n  import('recharts').then(module => ({\n    default: ({ data, ...props }) => {\n      const { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } = module;\n      return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart data={data} {...props}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--color-border)\" />\n            <XAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <YAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'var(--color-popover)',\n                border: '1px solid var(--color-border)',\n                borderRadius: '8px'\n              }}\n            />\n            <Bar dataKey=\"value\" fill=\"var(--color-primary)\" radius={[2, 2, 0, 0]} />\n          </BarChart>\n        </ResponsiveContainer>\n      );\n    }\n  }))\n);\n\nconst LazyScatterChart = lazy(() =>\n  import('recharts').then(module => ({\n    default: ({ data, ...props }) => {\n      const { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } =\n        module;\n      return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <ScatterChart data={data} {...props}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--color-border)\" />\n            <XAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <YAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'var(--color-popover)',\n                border: '1px solid var(--color-border)',\n                borderRadius: '8px'\n              }}\n            />\n            <Scatter dataKey=\"value\" fill=\"var(--color-primary)\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n      );\n    }\n  }))\n);\n\nconst LazyAreaChart = lazy(() =>\n  import('recharts').then(module => ({\n    default: ({ data, ...props }) => {\n      const { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } = module;\n      return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <AreaChart data={data} {...props}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--color-border)\" />\n            <XAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <YAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'var(--color-popover)',\n                border: '1px solid var(--color-border)',\n                borderRadius: '8px'\n              }}\n            />\n            <Area dataKey=\"value\" fill=\"var(--color-primary)\" stroke=\"var(--color-primary)\" />\n          </AreaChart>\n        </ResponsiveContainer>\n      );\n    }\n  }))\n);\n\n// Chart wrapper component with loading state\nconst ChartWrapper = ({ children, loading = false }) => {\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  return (\n    <Suspense\n      fallback={\n        <div className=\"flex items-center justify-center h-full\">\n          <LoadingSpinner size=\"lg\" />\n        </div>\n      }\n    >\n      {children}\n    </Suspense>\n  );\n};\n\n// Export chart components\nexport const BarChart = props => (\n  <ChartWrapper>\n    <LazyBarChart {...props} />\n  </ChartWrapper>\n);\n\nexport const ScatterChart = props => (\n  <ChartWrapper>\n    <LazyScatterChart {...props} />\n  </ChartWrapper>\n);\n\nexport const AreaChart = props => (\n  <ChartWrapper>\n    <LazyAreaChart {...props} />\n  </ChartWrapper>\n);\n\nexport default ChartWrapper;\n","import { AlertCircle, Calculator, DollarSign, Percent } from 'lucide-react';\nimport React, { useState, useEffect, useRef } from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst FinancialInput = React.forwardRef(({\n  className,\n  label,\n  value,\n  onChange,\n  onBlur,\n  placeholder = '0.00',\n  type = 'currency', // 'currency', 'percentage', 'number'\n  prefix,\n  suffix,\n  locale = 'en-US',\n  currency = 'USD',\n  error,\n  description,\n  required = false,\n  disabled = false,\n  loading = false,\n  decimals = 2,\n  allowNegative = true,\n  id,\n  autoFocus = false,\n  onValidation,\n  min,\n  max,\n  ...props\n}, ref) => {\n  const [displayValue, setDisplayValue] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const inputRef = useRef(null);\n  const componentRef = ref || inputRef;\n\n  // Generate unique ID if not provided\n  const inputId = id || `financial-input-${Math.random().toString(36).substr(2, 9)}`;\n\n  // Format value for display\n  const formatValue = (val) => {\n    if (!val && val !== 0) return '';\n\n    const numValue = typeof val === 'string' ? parseFloat(val) : val;\n    if (isNaN(numValue)) return '';\n\n    switch (type) {\n      case 'currency':\n        return new Intl.NumberFormat(locale, {\n          style: 'currency',\n          currency,\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals\n        }).format(numValue);\n\n      case 'percentage':\n        return new Intl.NumberFormat(locale, {\n          style: 'percent',\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals\n        }).format(numValue / 100);\n\n      default:\n        return new Intl.NumberFormat(locale, {\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals\n        }).format(numValue);\n    }\n  };\n\n  // Parse display value to raw number\n  const parseValue = (val) => {\n    if (!val) return 0;\n\n    // Remove currency symbols, commas, and spaces\n    const cleanValue = val\n      .replace(/[^\\d.-]/g, '')\n      .replace(/,/g, '');\n\n    const numValue = parseFloat(cleanValue);\n    return isNaN(numValue) ? 0 : numValue;\n  };\n\n  // Validate input\n  const validateInput = (val) => {\n    const numValue = typeof val === 'string' ? parseValue(val) : val;\n\n    let valid = true;\n    let errorMessage = '';\n\n    if (required && (!numValue && numValue !== 0)) {\n      valid = false;\n      errorMessage = 'This field is required';\n    } else if (!allowNegative && numValue < 0) {\n      valid = false;\n      errorMessage = 'Negative values are not allowed';\n    } else if (min !== undefined && numValue < min) {\n      valid = false;\n      errorMessage = `Value must be at least ${formatValue(min)}`;\n    } else if (max !== undefined && numValue > max) {\n      valid = false;\n      errorMessage = `Value must not exceed ${formatValue(max)}`;\n    }\n\n    setIsValid(valid);\n\n    if (onValidation) {\n      onValidation(valid, errorMessage);\n    }\n\n    return valid;\n  };\n\n  // Update display value when prop value changes\n  useEffect(() => {\n    if (!isFocused) {\n      setDisplayValue(formatValue(value));\n    }\n  }, [value, type, currency, locale, decimals, isFocused]);\n\n  // Handle focus\n  const handleFocus = (_e) => {\n    setIsFocused(true);\n    // Show raw number for editing\n    const rawValue = value ? value.toString() : '';\n    setDisplayValue(rawValue);\n\n    // Select all text for easy replacement\n    setTimeout(() => {\n      if (componentRef.current) {\n        componentRef.current.select();\n      }\n    }, 0);\n  };\n\n  // Handle blur\n  const handleBlur = (e) => {\n    setIsFocused(false);\n    const rawValue = parseValue(displayValue);\n\n    validateInput(rawValue);\n\n    // Format for display\n    setDisplayValue(formatValue(rawValue));\n\n    // Call onChange with parsed value\n    if (onChange) {\n      onChange(rawValue);\n    }\n\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  // Handle input change\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n\n    // Basic validation for numeric input\n    const numericRegex = allowNegative ? /^-?\\d*\\.?\\d*$/ : /^\\d*\\.?\\d*$/;\n\n    if (numericRegex.test(newValue) || newValue === '') {\n      setDisplayValue(newValue);\n    }\n  };\n\n  // Handle key press\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      componentRef.current?.blur();\n    }\n  };\n\n  // Get icon based on type\n  const getIcon = () => {\n    switch (type) {\n      case 'currency':\n        return <DollarSign size={16} className=\"text-muted-foreground\" />;\n      case 'percentage':\n        return <Percent size={16} className=\"text-muted-foreground\" />;\n      default:\n        return <Calculator size={16} className=\"text-muted-foreground\" />;\n    }\n  };\n\n  // Auto-focus if specified\n  useEffect(() => {\n    if (autoFocus && componentRef.current) {\n      componentRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  return (\n    <div className=\"space-y-2\">\n      {label && (\n        <label\n          htmlFor={inputId}\n          className={cn(\n            'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n            error && !isValid ? 'text-destructive' : 'text-foreground'\n          )}\n        >\n          {label}\n          {required && <span className=\"text-destructive ml-1\">*</span>}\n        </label>\n      )}\n\n      <div className=\"relative\">\n        {/* Left icon/prefix */}\n        <div className=\"absolute left-3 top-1/2 -translate-y-1/2 flex items-center gap-2 pointer-events-none z-10\">\n          {getIcon()}\n          {prefix && (\n            <span className=\"text-sm text-muted-foreground font-medium\">\n              {prefix}\n            </span>\n          )}\n        </div>\n\n        <input\n          ref={componentRef}\n          id={inputId}\n          type=\"text\"\n          value={displayValue}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyPress={handleKeyPress}\n          placeholder={placeholder}\n          disabled={disabled || loading}\n          className={cn(\n            // Base styles\n            'flex h-11 w-full rounded-lg border bg-background text-sm ring-offset-background',\n            'file:border-0 file:bg-transparent file:text-sm file:font-medium',\n            'placeholder:text-muted-foreground',\n            'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n            'disabled:cursor-not-allowed disabled:opacity-50',\n            'transition-all duration-200',\n\n            // Padding adjustments for icons\n            'pl-10 pr-4',\n            suffix && 'pr-16',\n\n            // Financial styling\n            'font-mono text-right',\n            'border-input hover:border-ring/50',\n\n            // States\n            isFocused && 'ring-2 ring-ring ring-offset-2 border-ring',\n            error && !isValid && 'border-destructive focus-visible:ring-destructive',\n            loading && 'animate-pulse',\n\n            className\n          )}\n          {...props}\n        />\n\n        {/* Right suffix */}\n        {suffix && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2 pointer-events-none\">\n            <span className=\"text-sm text-muted-foreground font-medium\">\n              {suffix}\n            </span>\n          </div>\n        )}\n\n        {/* Loading indicator */}\n        {loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <div className=\"w-4 h-4 border-2 border-muted-foreground border-t-transparent rounded-full animate-spin\" />\n          </div>\n        )}\n\n        {/* Error icon */}\n        {error && !isValid && !loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <AlertCircle size={16} className=\"text-destructive\" />\n          </div>\n        )}\n      </div>\n\n      {/* Description */}\n      {description && !error && !isValid && (\n        <p className=\"text-sm text-muted-foreground\">\n          {description}\n        </p>\n      )}\n\n      {/* Error message */}\n      {(error || !isValid) && (\n        <p className=\"text-sm text-destructive flex items-center gap-1\">\n          <AlertCircle size={14} />\n          {error || 'Invalid input'}\n        </p>\n      )}\n    </div>\n  );\n});\n\nFinancialInput.displayName = 'FinancialInput';\n\nexport default FinancialInput;\n","import { DollarSign, AlertCircle, TrendingUp, TrendingDown } from 'lucide-react';\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\n\nimport { cn } from '../../utils/cn';\n\n// Currency configurations\nconst CURRENCY_CONFIG = {\n  USD: { symbol: '$', code: 'USD', decimals: 2, name: 'US Dollar' },\n  EUR: { symbol: '€', code: 'EUR', decimals: 2, name: 'Euro' },\n  GBP: { symbol: '£', code: 'GBP', decimals: 2, name: 'British Pound' },\n  JPY: { symbol: '¥', code: 'JPY', decimals: 0, name: 'Japanese Yen' },\n  CAD: { symbol: 'C$', code: 'CAD', decimals: 2, name: 'Canadian Dollar' },\n  AUD: { symbol: 'A$', code: 'AUD', decimals: 2, name: 'Australian Dollar' },\n  CHF: { symbol: 'CHF', code: 'CHF', decimals: 2, name: 'Swiss Franc' },\n  CNY: { symbol: '¥', code: 'CNY', decimals: 2, name: 'Chinese Yuan' }\n};\n\nconst CurrencyInput = React.forwardRef(({\n  className,\n  label,\n  value = 0,\n  onChange,\n  onBlur,\n  placeholder,\n  currency = 'USD',\n  locale = 'en-US',\n  error,\n  description,\n  required = false,\n  disabled = false,\n  loading = false,\n  allowNegative = true,\n  showCurrency = true,\n  showTrend = false,\n  previousValue,\n  size = 'default', // 'sm', 'default', 'lg'\n  variant = 'default', // 'default', 'filled', 'minimal'\n  id,\n  autoFocus = false,\n  onValidation,\n  min,\n  max,\n  step = 0.01,\n  abbreviateDisplay = false, // Show 1.2M instead of 1,200,000\n  precision, // Override default currency precision\n  ...props\n}, ref) => {\n  const [displayValue, setDisplayValue] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const [validationMessage, setValidationMessage] = useState('');\n  const inputRef = useRef(null);\n  const componentRef = ref || inputRef;\n\n  // Generate unique ID if not provided\n  const inputId = id || `currency-input-${Math.random().toString(36).substr(2, 9)}`;\n\n  // Get currency configuration\n  const currencyConfig = CURRENCY_CONFIG[currency] || CURRENCY_CONFIG.USD;\n  const effectiveDecimals = precision !== undefined ? precision : currencyConfig.decimals;\n\n  // Memoized placeholder\n  const effectivePlaceholder = useMemo(() => {\n    if (placeholder) return placeholder;\n    const sample = formatCurrency(0);\n    return sample;\n  }, [placeholder, currency, effectiveDecimals]);\n\n  // Format currency value\n  function formatCurrency(val, options = {}) {\n    if (!val && val !== 0) return '';\n\n    const numValue = typeof val === 'string' ? parseFloat(val) : val;\n    if (isNaN(numValue)) return '';\n\n    const { abbreviated = false } = options;\n\n    // Handle abbreviation for large numbers\n    if (abbreviated && abbreviateDisplay && Math.abs(numValue) >= 1000) {\n      const absValue = Math.abs(numValue);\n      const sign = numValue < 0 ? '-' : '';\n\n      if (absValue >= 1000000000) {\n        return `${sign}${currencyConfig.symbol}${(absValue / 1000000000).toFixed(1)}B`;\n      } else if (absValue >= 1000000) {\n        return `${sign}${currencyConfig.symbol}${(absValue / 1000000).toFixed(1)}M`;\n      } else if (absValue >= 1000) {\n        return `${sign}${currencyConfig.symbol}${(absValue / 1000).toFixed(0)}K`;\n      }\n    }\n\n    try {\n      return new Intl.NumberFormat(locale, {\n        style: 'currency',\n        currency,\n        minimumFractionDigits: effectiveDecimals,\n        maximumFractionDigits: effectiveDecimals\n      }).format(numValue);\n    } catch {\n      // Fallback formatting\n      const formatted = numValue.toFixed(effectiveDecimals);\n      return `${currencyConfig.symbol}${formatted}`;\n    }\n  }\n\n  // Parse display value to number\n  function parseCurrency(val) {\n    if (!val) return 0;\n\n    // Handle abbreviated values\n    const str = val.toString().toLowerCase();\n    let multiplier = 1;\n\n    if (str.endsWith('k')) {\n      multiplier = 1000;\n    } else if (str.endsWith('m')) {\n      multiplier = 1000000;\n    } else if (str.endsWith('b')) {\n      multiplier = 1000000000;\n    }\n\n    // Remove currency symbols, commas, spaces, and multiplier suffixes\n    const cleanValue = val\n      .toString()\n      .replace(/[^\\d.-]/g, '')\n      .replace(/,/g, '');\n\n    const numValue = parseFloat(cleanValue) * multiplier;\n    return isNaN(numValue) ? 0 : numValue;\n  }\n\n  // Validate input\n  const validateInput = (val) => {\n    const numValue = typeof val === 'string' ? parseCurrency(val) : val;\n\n    let valid = true;\n    let message = '';\n\n    if (required && (!numValue && numValue !== 0)) {\n      valid = false;\n      message = 'This field is required';\n    } else if (!allowNegative && numValue < 0) {\n      valid = false;\n      message = 'Negative values are not allowed';\n    } else if (min !== undefined && numValue < min) {\n      valid = false;\n      message = `Value must be at least ${formatCurrency(min)}`;\n    } else if (max !== undefined && numValue > max) {\n      valid = false;\n      message = `Value must not exceed ${formatCurrency(max)}`;\n    }\n\n    setIsValid(valid);\n    setValidationMessage(message);\n\n    if (onValidation) {\n      onValidation(valid, message);\n    }\n\n    return valid;\n  };\n\n  // Calculate trend\n  const getTrend = () => {\n    if (!showTrend || previousValue === undefined) return null;\n\n    const current = typeof value === 'string' ? parseCurrency(value) : (value || 0);\n    const previous = typeof previousValue === 'string' ? parseCurrency(previousValue) : (previousValue || 0);\n\n    if (current > previous) return 'up';\n    if (current < previous) return 'down';\n    return 'neutral';\n  };\n\n  const trend = getTrend();\n\n  // Update display value when prop value changes\n  useEffect(() => {\n    if (!isFocused) {\n      setDisplayValue(formatCurrency(value, { abbreviated: abbreviateDisplay }));\n    }\n  }, [value, currency, locale, effectiveDecimals, isFocused, abbreviateDisplay]);\n\n  // Handle focus\n  const handleFocus = (_e) => {\n    setIsFocused(true);\n    // Show raw number for editing\n    const rawValue = value ? value.toString() : '';\n    setDisplayValue(rawValue);\n\n    // Select all text for easy replacement\n    setTimeout(() => {\n      if (componentRef.current) {\n        componentRef.current.select();\n      }\n    }, 0);\n  };\n\n  // Handle blur\n  const handleBlur = (e) => {\n    setIsFocused(false);\n    const rawValue = parseCurrency(displayValue);\n\n    validateInput(rawValue);\n\n    // Format for display\n    setDisplayValue(formatCurrency(rawValue, { abbreviated: abbreviateDisplay }));\n\n    // Call onChange with parsed value\n    if (onChange) {\n      onChange(rawValue);\n    }\n\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  // Handle input change\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n\n    // Allow numbers, decimals, negative signs, and K/M/B suffixes\n    const regex = allowNegative\n      ? /^-?\\d*\\.?\\d*[kmb]?$/i\n      : /^\\d*\\.?\\d*[kmb]?$/i;\n\n    if (regex.test(newValue) || newValue === '') {\n      setDisplayValue(newValue);\n    }\n  };\n\n  // Handle key press\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      componentRef.current?.blur();\n    }\n  };\n\n  // Auto-focus if specified\n  useEffect(() => {\n    if (autoFocus && componentRef.current) {\n      componentRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  // Size variants\n  const sizeClasses = {\n    sm: 'h-9 px-3 text-sm',\n    default: 'h-11 px-4 text-sm',\n    lg: 'h-12 px-4 text-base'\n  };\n\n  // Variant styles\n  const variantClasses = {\n    default: 'border-input bg-background hover:border-ring/50',\n    filled: 'border-transparent bg-muted hover:bg-muted/80',\n    minimal: 'border-transparent bg-transparent hover:bg-muted/50'\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      {label && (\n        <label\n          htmlFor={inputId}\n          className={cn(\n            'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n            error || !isValid ? 'text-destructive' : 'text-foreground'\n          )}\n        >\n          {label}\n          {required && <span className=\"text-destructive ml-1\">*</span>}\n        </label>\n      )}\n\n      <div className=\"relative\">\n        {/* Currency symbol */}\n        {showCurrency && (\n          <div className=\"absolute left-3 top-1/2 -translate-y-1/2 flex items-center gap-1 pointer-events-none z-10\">\n            <DollarSign size={16} className=\"text-muted-foreground\" />\n            <span className=\"text-sm text-muted-foreground font-medium\">\n              {currencyConfig.code}\n            </span>\n          </div>\n        )}\n\n        <input\n          ref={componentRef}\n          id={inputId}\n          type=\"text\"\n          value={displayValue}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyPress={handleKeyPress}\n          placeholder={effectivePlaceholder}\n          disabled={disabled || loading}\n          step={step}\n          className={cn(\n            // Base styles\n            'flex w-full rounded-lg border ring-offset-background',\n            'file:border-0 file:bg-transparent file:text-sm file:font-medium',\n            'placeholder:text-muted-foreground',\n            'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n            'disabled:cursor-not-allowed disabled:opacity-50',\n            'transition-all duration-200',\n\n            // Size\n            sizeClasses[size],\n\n            // Variant\n            variantClasses[variant],\n\n            // Financial styling\n            'font-mono text-right',\n\n            // Padding adjustments\n            showCurrency ? 'pl-16' : 'pl-4',\n            'pr-4',\n            trend && 'pr-8',\n\n            // States\n            isFocused && 'ring-2 ring-ring ring-offset-2 border-ring',\n            (error || !isValid) && 'border-destructive focus-visible:ring-destructive',\n            loading && 'animate-pulse',\n\n            className\n          )}\n          {...props}\n        />\n\n        {/* Trend indicator */}\n        {trend && trend !== 'neutral' && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            {trend === 'up' ? (\n              <TrendingUp size={16} className=\"text-success\" />\n            ) : (\n              <TrendingDown size={16} className=\"text-destructive\" />\n            )}\n          </div>\n        )}\n\n        {/* Loading indicator */}\n        {loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <div className=\"w-4 h-4 border-2 border-muted-foreground border-t-transparent rounded-full animate-spin\" />\n          </div>\n        )}\n\n        {/* Error icon */}\n        {(error || !isValid) && !loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <AlertCircle size={16} className=\"text-destructive\" />\n          </div>\n        )}\n      </div>\n\n      {/* Description */}\n      {description && !error && isValid && (\n        <p className=\"text-sm text-muted-foreground\">\n          {description}\n        </p>\n      )}\n\n      {/* Error message */}\n      {(error || !isValid) && (\n        <p className=\"text-sm text-destructive flex items-center gap-1\">\n          <AlertCircle size={14} />\n          {error || validationMessage}\n        </p>\n      )}\n\n      {/* Trend information */}\n      {showTrend && previousValue !== undefined && trend !== 'neutral' && (\n        <p className=\"text-xs text-muted-foreground flex items-center gap-1\">\n          {trend === 'up' ? (\n            <TrendingUp size={12} className=\"text-success\" />\n          ) : (\n            <TrendingDown size={12} className=\"text-destructive\" />\n          )}\n          vs. previous: {formatCurrency(previousValue)}\n        </p>\n      )}\n    </div>\n  );\n});\n\nCurrencyInput.displayName = 'CurrencyInput';\n\nexport { CurrencyInput as default, CURRENCY_CONFIG };\n","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, ResponsiveContainer, ReferenceLine } from 'recharts';\n\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent, CardHeader, CardTitle } from '../Card';\n\nconst DCFWaterfall = ({\n  data = [],\n  className,\n  title = 'DCF Cash Flow Components',\n  formatValue = (value) => `$${(value / 1000000).toFixed(1)}M`\n}) => {\n  // Calculate cumulative values for waterfall effect\n  const processedData = data.reduce((acc, item, index) => {\n    const prevTotal = index === 0 ? 0 : acc[index - 1].cumulative;\n    const cumulative = prevTotal + item.value;\n\n    acc.push({\n      ...item,\n      cumulative,\n      start: prevTotal,\n      isPositive: item.value >= 0,\n      isTotal: item.type === 'total'\n    });\n\n    return acc;\n  }, []);\n\n  const CustomBar = (props) => {\n    const { payload, x, y, width, height } = props;\n    if (!payload) return null;\n\n    const barColor = payload.isTotal\n      ? 'var(--color-primary)'\n      : payload.isPositive\n        ? 'var(--color-secondary)'\n        : 'var(--color-destructive)';\n\n    return (\n      <rect\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        fill={barColor}\n        className=\"transition-opacity duration-200 hover:opacity-80\"\n      />\n    );\n  };\n\n  const CustomTooltip = ({ active, payload, label: _label }) => {\n    if (!active || !payload || !payload.length) return null;\n\n    const data = payload[0].payload;\n\n    return (\n      <div className=\"bg-white border border-gray-200 rounded-md shadow-elevation-1 p-3 min-w-[160px]\">\n        <p className=\"font-medium text-sm text-foreground mb-1\">{data.label}</p>\n        <p className=\"text-sm text-muted-foreground\">\n          Value: <span className=\"font-mono font-medium\">{formatValue(data.value)}</span>\n        </p>\n        {!data.isTotal && (\n          <p className=\"text-sm text-muted-foreground\">\n            Cumulative: <span className=\"font-mono font-medium\">{formatValue(data.cumulative)}</span>\n          </p>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <Card className={cn('w-full', className)}>\n      <CardHeader className=\"pb-4\">\n        <CardTitle className=\"text-lg font-semibold text-foreground\">{title}</CardTitle>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"h-80 w-full\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={processedData}\n              margin={{ top: 20, right: 30, left: 20, bottom: 60 }}\n            >\n              <XAxis\n                dataKey=\"name\"\n                axisLine={false}\n                tickLine={false}\n                tick={{ fontSize: 12, fill: 'var(--color-muted-foreground)' }}\n                angle={-45}\n                textAnchor=\"end\"\n                height={80}\n              />\n              <YAxis\n                axisLine={false}\n                tickLine={false}\n                tick={{ fontSize: 12, fill: 'var(--color-muted-foreground)' }}\n                tickFormatter={formatValue}\n              />\n              <ReferenceLine y={0} stroke=\"var(--color-border)\" strokeWidth={1} />\n              <Bar\n                dataKey=\"value\"\n                shape={<CustomBar />}\n                radius={[2, 2, 0, 0]}\n              />\n              <CustomTooltip />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Legend */}\n        <div className=\"flex items-center justify-center gap-6 mt-4 pt-4 border-t border-gray-100\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-sm bg-secondary\" />\n            <span className=\"text-sm text-muted-foreground\">Positive</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-sm bg-destructive\" />\n            <span className=\"text-sm text-muted-foreground\">Negative</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-sm bg-primary\" />\n            <span className=\"text-sm text-muted-foreground\">Total</span>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DCFWaterfall;\n","import React, { useState, useEffect, useRef, Suspense } from 'react';\n\n// Enhanced lazy loading component for financial components\n\nconst LazyLoader = ({\n  children,\n  fallback = null,\n  componentName = 'unknown',\n  threshold = 0.1,\n  rootMargin = '50px',\n  preloadDelay = 2000,\n  priority = 'normal',\n  onLoad = null,\n  onError = null,\n  performanceTracking = true\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [loadError, setLoadError] = useState(null);\n  const [preloadTimer, setPreloadTimer] = useState(null);\n\n  const containerRef = useRef(null);\n  const observerRef = useRef(null);\n  const loadStartTime = useRef(null);\n\n  // Set up intersection observer\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    const options = {\n      threshold,\n      rootMargin\n    };\n\n    observerRef.current = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          loadStartTime.current = performance.now();\n          setIsVisible(true);\n\n          // Stop observing once visible\n          if (observerRef.current) {\n            observerRef.current.unobserve(entry.target);\n          }\n        }\n      });\n    }, options);\n\n    observerRef.current.observe(containerRef.current);\n\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n      if (preloadTimer) {\n        clearTimeout(preloadTimer);\n      }\n    };\n  }, [threshold, rootMargin, preloadTimer]);\n\n  // Preload high-priority components\n  useEffect(() => {\n    if (priority === 'high' && preloadDelay > 0) {\n      const timer = setTimeout(() => {\n        loadStartTime.current = performance.now();\n        setIsVisible(true);\n      }, preloadDelay);\n\n      setPreloadTimer(timer);\n    }\n  }, [priority, preloadDelay]);\n\n  // Track component load performance\n  useEffect(() => {\n    if (isLoaded && loadStartTime.current && performanceTracking) {\n      const loadTime = performance.now() - loadStartTime.current;\n\n      import('../../utils/performanceMonitoring')\n        .then((mod) => {\n          if (mod?.trackFinancialComponentPerformance) {\n            mod.trackFinancialComponentPerformance(componentName, {\n              loadTime,\n              priority,\n              lazy: true,\n              timestamp: Date.now()\n            });\n          }\n        })\n        .catch(() => {});\n\n      onLoad?.({ componentName, loadTime });\n    }\n  }, [isLoaded, componentName, priority, performanceTracking, onLoad]);\n\n  // Handle load success\n  const handleLoadSuccess = () => {\n    setIsLoaded(true);\n    setLoadError(null);\n  };\n\n  // Handle load error\n  const handleLoadError = (error) => {\n    setLoadError(error);\n    onError?.(error);\n\n    if (performanceTracking) {\n      import('../../utils/performanceMonitoring')\n        .then((mod) => {\n          if (mod?.trackFinancialComponentPerformance) {\n            mod.trackFinancialComponentPerformance(componentName, {\n              loadError: error.message,\n              priority,\n              lazy: true,\n              timestamp: Date.now()\n            });\n          }\n        })\n        .catch(() => {});\n    }\n  };\n\n  // Default fallback component\n  const defaultFallback = (\n    <div className=\"animate-pulse bg-gray-100 rounded-lg p-6\">\n      <div className=\"space-y-4\">\n        <div className=\"h-4 bg-gray-200 rounded w-3/4\" />\n        <div className=\"h-4 bg-gray-200 rounded w-1/2\" />\n        <div className=\"h-32 bg-gray-200 rounded\" />\n      </div>\n    </div>\n  );\n\n  // Error fallback\n  const errorFallback = (\n    <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\n      <div className=\"flex items-center\">\n        <div className=\"flex-shrink-0\">\n          <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n          </svg>\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800\">\n            Failed to load {componentName}\n          </h3>\n          <div className=\"mt-2 text-sm text-red-700\">\n            <p>{loadError?.message || 'An unexpected error occurred'}</p>\n          </div>\n          <div className=\"mt-4\">\n            <button\n              onClick={() => {\n                setLoadError(null);\n                setIsVisible(false);\n                setTimeout(() => setIsVisible(true), 100);\n              }}\n              className=\"text-sm font-medium text-red-800 hover:text-red-900\"\n            >\n              Try again\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div ref={containerRef} className=\"lazy-loader-container\">\n      {!isVisible ? (\n        fallback || defaultFallback\n      ) : loadError ? (\n        errorFallback\n      ) : (\n        <Suspense fallback={fallback || defaultFallback}>\n          <ErrorBoundary\n            onError={handleLoadError}\n            onLoad={handleLoadSuccess}\n            componentName={componentName}\n          >\n            {children}\n          </ErrorBoundary>\n        </Suspense>\n      )}\n    </div>\n  );\n};\n\n// Error boundary for lazy loaded components\nclass ErrorBoundary extends React.Component {\n  constructor(props, _error) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(_error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, _errorInfo) {\n    this.props.onError?.(error, _errorInfo);\n  }\n\n  componentDidMount() {\n    if (!this.state.hasError) {\n      this.props.onLoad?.();\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null; // Let parent handle error display\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default LazyLoader;\n","import React, { Suspense } from 'react';\n\nimport { useFinancialAccessibility } from '../../../hooks/useAccessibility';\nimport LazyLoader from '../../LazyLoader';\n\n// Loading fallback for charts\nconst ChartLoadingFallback = ({ title = 'Chart', height = 320 }) => (\n  <div className=\"w-full bg-white border border-gray-200 rounded-lg p-6\" style={{ height }}>\n    <div className=\"animate-pulse\">\n      <div className=\"h-6 bg-gray-200 rounded w-1/3 mb-4\" />\n      <div className=\"space-y-3\">\n        <div className=\"h-4 bg-gray-200 rounded w-full\" />\n        <div className=\"h-4 bg-gray-200 rounded w-3/4\" />\n        <div className=\"h-32 bg-gray-200 rounded w-full\" />\n        <div className=\"grid grid-cols-3 gap-2\">\n          <div className=\"h-3 bg-gray-200 rounded\" />\n          <div className=\"h-3 bg-gray-200 rounded\" />\n          <div className=\"h-3 bg-gray-200 rounded\" />\n        </div>\n      </div>\n    </div>\n    <div className=\"sr-only\">Loading {title}...</div>\n  </div>\n);\n\n// HOC for lazy loading charts with accessibility\nconst withLazyChart = (ChartComponent, componentName, options = {}) => {\n  const LazyChartComponent = React.forwardRef((props, ref) => {\n    const {\n      priority = 'normal',\n      preloadDelay = 2000,\n      height = 320,\n      title = componentName,\n      ...chartProps\n    } = props;\n\n    // Add accessibility monitoring\n    const { elementRef } = useFinancialAccessibility('chart');\n\n    const fallback = <ChartLoadingFallback title={title} height={height} />;\n\n    return (\n      <div\n        ref={(el) => {\n          elementRef(el);\n          if (ref) {\n            if (typeof ref === 'function') ref(el);\n            else ref.current = el;\n          }\n        }}\n      >\n        <LazyLoader\n          componentName={componentName}\n          priority={priority}\n          preloadDelay={preloadDelay}\n          fallback={fallback}\n          performanceTracking={true}\n          {...options}\n        >\n          <Suspense fallback={fallback}>\n            <ChartComponent {...chartProps} />\n          </Suspense>\n        </LazyLoader>\n      </div>\n    );\n  });\n\n  LazyChartComponent.displayName = `LazyChart(${componentName})`;\n  return LazyChartComponent;\n};\n\nexport { withLazyChart, ChartLoadingFallback };\nexport default withLazyChart;\n","import { TrendingUp, TrendingDown, Minus } from 'lucide-react';\nimport React from 'react';\n\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent } from '../Card';\n\nconst MetricCard = ({\n  title,\n  value,\n  change,\n  format = 'number',\n  prefix = '',\n  suffix = '',\n  className\n}) => {\n  const formatValue = (val) => {\n    if (format === 'currency') {\n      return `$${(val / 1000000).toFixed(1)}M`;\n    } else if (format === 'percentage') {\n      return `${val.toFixed(1)}%`;\n    } else if (format === 'ratio') {\n      return val.toFixed(2);\n    } else if (format === 'large-number') {\n      if (val >= 1000000000) return `${(val / 1000000000).toFixed(1)}B`;\n      if (val >= 1000000) return `${(val / 1000000).toFixed(1)}M`;\n      if (val >= 1000) return `${(val / 1000).toFixed(1)}K`;\n      return val.toFixed(0);\n    }\n    return val.toLocaleString();\n  };\n\n  const getTrendIcon = () => {\n    if (change > 0) return TrendingUp;\n    if (change < 0) return TrendingDown;\n    return Minus;\n  };\n\n  const getTrendColor = () => {\n    if (change > 0) return 'text-success';\n    if (change < 0) return 'text-destructive';\n    return 'text-muted-foreground';\n  };\n\n  const TrendIcon = getTrendIcon();\n\n  return (\n    <Card className={cn('relative overflow-hidden', className)}>\n      <CardContent className=\"p-6\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <p className=\"text-sm font-medium text-muted-foreground\">{title}</p>\n          {change !== undefined && (\n            <div className={cn('flex items-center gap-1', getTrendColor())}>\n              <TrendIcon className=\"h-4 w-4\" />\n              <span className=\"text-xs font-medium\">\n                {Math.abs(change).toFixed(1)}%\n              </span>\n            </div>\n          )}\n        </div>\n        <div className=\"flex items-baseline gap-1\">\n          {prefix && <span className=\"text-lg text-muted-foreground\">{prefix}</span>}\n          <p className=\"text-2xl font-bold text-foreground\">\n            {formatValue(value)}\n          </p>\n          {suffix && <span className=\"text-lg text-muted-foreground\">{suffix}</span>}\n        </div>\n        {change !== undefined && (\n          <p className=\"text-xs text-muted-foreground mt-1\">\n            vs. previous period\n          </p>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nconst MetricsDashboard = ({\n  metrics = [],\n  className,\n  title = 'Key Financial Metrics',\n  columns = 4\n}) => {\n  const gridClasses = {\n    2: 'grid-cols-1 md:grid-cols-2',\n    3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',\n    4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4',\n    5: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5',\n    6: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6'\n  };\n\n  // Group metrics by category if categories exist\n  const groupedMetrics = metrics.reduce((groups, metric) => {\n    const category = metric.category || 'default';\n    if (!groups[category]) groups[category] = [];\n    groups[category].push(metric);\n    return groups;\n  }, {});\n\n  const hasCategories = Object.keys(groupedMetrics).length > 1 ||\n    (Object.keys(groupedMetrics).length === 1 && !groupedMetrics.default);\n\n  return (\n    <div className={cn('w-full space-y-6', className)}>\n      {title && (\n        <div>\n          <h2 className=\"text-xl font-semibold text-foreground mb-2\">{title}</h2>\n          <div className=\"h-px bg-gradient-to-r from-border to-transparent\" />\n        </div>\n      )}\n\n      {hasCategories ? (\n        // Render with categories\n        Object.entries(groupedMetrics).map(([category, categoryMetrics]) => (\n          <div key={category}>\n            {category !== 'default' && (\n              <h3 className=\"text-lg font-medium text-foreground mb-4 flex items-center gap-2\">\n                {category}\n                <div className=\"flex-1 h-px bg-muted\" />\n              </h3>\n            )}\n            <div className={cn('grid gap-4', gridClasses[Math.min(columns, 6)])}>\n              {categoryMetrics.map((metric, index) => (\n                <MetricCard\n                  key={`${category}-${index}`}\n                  title={metric.title}\n                  value={metric.value}\n                  change={metric.change}\n                  format={metric.format}\n                  prefix={metric.prefix}\n                  suffix={metric.suffix}\n                  className={metric.highlight ? 'ring-2 ring-secondary ring-opacity-20' : ''}\n                />\n              ))}\n            </div>\n          </div>\n        ))\n      ) : (\n        // Render without categories\n        <div className={cn('grid gap-4', gridClasses[Math.min(columns, 6)])}>\n          {metrics.map((metric, index) => (\n            <MetricCard\n              key={index}\n              title={metric.title}\n              value={metric.value}\n              change={metric.change}\n              format={metric.format}\n              prefix={metric.prefix}\n              suffix={metric.suffix}\n              className={metric.highlight ? 'ring-2 ring-secondary ring-opacity-20' : ''}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Summary footer if provided */}\n      {metrics.some(m => m.isSummary) && (\n        <div className=\"pt-4 border-t border-muted\">\n          <div className={cn('grid gap-4', gridClasses[Math.min(columns, 6)])}>\n            {metrics\n              .filter(m => m.isSummary)\n              .map((metric, index) => (\n                <MetricCard\n                  key={`summary-${index}`}\n                  title={metric.title}\n                  value={metric.value}\n                  change={metric.change}\n                  format={metric.format}\n                  prefix={metric.prefix}\n                  suffix={metric.suffix}\n                  className=\"bg-primary/5 border-primary/20\"\n                />\n              ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport { MetricsDashboard, MetricCard };\n","import DCFWaterfallBase from './DCFWaterfall';\nimport { withLazyChart } from './LazyChartWrapper';\n// Import chart components\nimport { MetricsDashboard as MetricsDashboardBase, MetricCard } from './MetricsDashboard';\nimport RevenueBreakdownBase from './RevenueBreakdown';\nimport SensitivityHeatmapBase from './SensitivityHeatmap';\nimport TrendLineBase from './TrendLine';\n\n// Create lazy versions with optimized loading\nexport const DCFWaterfall = withLazyChart(DCFWaterfallBase, 'dcf-waterfall', {\n  priority: 'high',\n  preloadDelay: 1000\n});\n\nexport const RevenueBreakdown = withLazyChart(RevenueBreakdownBase, 'revenue-breakdown', {\n  priority: 'normal',\n  preloadDelay: 1500\n});\n\nexport const TrendLine = withLazyChart(TrendLineBase, 'trend-line', {\n  priority: 'normal',\n  preloadDelay: 2000\n});\n\nexport const SensitivityHeatmap = withLazyChart(SensitivityHeatmapBase, 'sensitivity-heatmap', {\n  priority: 'normal',\n  preloadDelay: 2500\n});\n\nexport const MetricsDashboard = withLazyChart(MetricsDashboardBase, 'metrics-dashboard', {\n  priority: 'high',\n  preloadDelay: 500\n});\n\n// Re-export MetricCard as it's lightweight\nexport { MetricCard };\n\n// Export the lazy chart wrapper for custom use\nexport { withLazyChart, ChartLoadingFallback } from './LazyChartWrapper';\n","import React, { useState } from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\n\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent, CardHeader, CardTitle } from '../Card';\n\nconst RevenueBreakdown = ({\n  data = [],\n  className,\n  title = 'Revenue Breakdown',\n  formatValue = (value) => `$${(value / 1000000).toFixed(1)}M`\n}) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  // Generate colors using CSS variables with fallbacks\n  const colors = [\n    'var(--color-primary)',\n    'var(--color-secondary)',\n    'var(--color-accent)',\n    'var(--color-success)',\n    'var(--color-warning)',\n    '#64748b', // slate-500\n    '#94a3b8', // slate-400\n    '#cbd5e1'  // slate-300\n  ];\n\n  const total = data.reduce((sum, item) => sum + item.value, 0);\n\n  const processedData = data.map((item, index) => ({\n    ...item,\n    percentage: ((item.value / total) * 100).toFixed(1),\n    color: colors[index % colors.length]\n  }));\n\n  const onPieEnter = (_, index) => {\n    setActiveIndex(index);\n  };\n\n  const onPieLeave = () => {\n    setActiveIndex(null);\n  };\n\n  const CustomTooltip = ({ active, payload }) => {\n    if (!active || !payload || !payload.length) return null;\n\n    const data = payload[0].payload;\n\n    return (\n      <div className=\"bg-white border border-gray-200 rounded-md shadow-elevation-1 p-3 min-w-[160px]\">\n        <p className=\"font-medium text-sm text-foreground mb-1\">{data.name}</p>\n        <p className=\"text-sm text-muted-foreground\">\n          Value: <span className=\"font-mono font-medium\">{formatValue(data.value)}</span>\n        </p>\n        <p className=\"text-sm text-muted-foreground\">\n          Share: <span className=\"font-mono font-medium\">{data.percentage}%</span>\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <Card className={cn('w-full', className)}>\n      <CardHeader className=\"pb-4\">\n        <CardTitle className=\"text-lg font-semibold text-foreground\">{title}</CardTitle>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"flex flex-col lg:flex-row items-center gap-8\">\n          {/* Chart */}\n          <div className=\"h-80 w-80 flex-shrink-0\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={processedData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={60}\n                  outerRadius={120}\n                  paddingAngle={2}\n                  dataKey=\"value\"\n                  onMouseEnter={onPieEnter}\n                  onMouseLeave={onPieLeave}\n                >\n                  {processedData.map((entry, index) => (\n                    <Cell\n                      key={`cell-${index}`}\n                      fill={entry.color}\n                      className=\"transition-all duration-200\"\n                      style={{\n                        filter: activeIndex === index ? 'brightness(1.1)' : 'none',\n                        transform: activeIndex === index ? 'scale(1.02)' : 'scale(1)',\n                        transformOrigin: 'center'\n                      }}\n                    />\n                  ))}\n                </Pie>\n                <CustomTooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n\n          {/* Legend */}\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"space-y-3\">\n              {processedData.map((item, index) => (\n                <div\n                  key={item.name}\n                  className={cn(\n                    'flex items-center justify-between p-3 rounded-md transition-colors duration-200 cursor-pointer',\n                    activeIndex === index\n                      ? 'bg-muted'\n                      : 'hover:bg-gray-50'\n                  )}\n                  onMouseEnter={() => setActiveIndex(index)}\n                  onMouseLeave={() => setActiveIndex(null)}\n                >\n                  <div className=\"flex items-center gap-3 min-w-0\">\n                    <div\n                      className=\"w-4 h-4 rounded-sm flex-shrink-0\"\n                      style={{ backgroundColor: item.color }}\n                    />\n                    <div className=\"min-w-0\">\n                      <p className=\"font-medium text-sm text-foreground truncate\">\n                        {item.name}\n                      </p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {item.percentage}% of total\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"text-right flex-shrink-0\">\n                    <p className=\"font-mono text-sm font-medium text-foreground\">\n                      {formatValue(item.value)}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Total */}\n            <div className=\"mt-4 pt-4 border-t border-gray-100\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"font-semibold text-foreground\">Total Revenue</span>\n                <span className=\"font-mono text-lg font-bold text-primary\">\n                  {formatValue(total)}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RevenueBreakdown;\n","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer, Dot } from 'recharts';\n\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent, CardHeader, CardTitle } from '../Card';\n\nconst TrendLine = ({\n  data = [],\n  className,\n  title = 'Growth Trend Analysis',\n  dataKey = 'value',\n  formatValue = (value) => `${value.toFixed(1)}%`,\n  showGrowthRate = true\n}) => {\n  // Calculate period-over-period growth\n  const processedData = data.map((item, index) => {\n    if (index === 0) return { ...item, growth: null };\n\n    const prevValue = data[index - 1][dataKey];\n    const currentValue = item[dataKey];\n    const growth = prevValue !== 0 ? ((currentValue - prevValue) / prevValue) * 100 : 0;\n\n    return { ...item, growth };\n  });\n\n  // Calculate overall trend\n  const firstValue = data[0]?.[dataKey] || 0;\n  const lastValue = data[data.length - 1]?.[dataKey] || 0;\n  const overallGrowth = firstValue !== 0 ? ((lastValue - firstValue) / firstValue) * 100 : 0;\n  const isPositiveTrend = overallGrowth >= 0;\n\n  const CustomDot = (props) => {\n    const { payload, cx, cy } = props;\n    if (!payload) return null;\n\n    return (\n      <Dot\n        cx={cx}\n        cy={cy}\n        r={4}\n        fill=\"var(--color-secondary)\"\n        className=\"transition-all duration-200 hover:r-6\"\n      />\n    );\n  };\n\n  const CustomTooltip = ({ active, payload, label: _label }) => {\n    if (!active || !payload || !payload.length) return null;\n\n    const data = payload[0].payload;\n\n    return (\n      <div className=\"bg-white border border-gray-200 rounded-md shadow-elevation-1 p-3 min-w-[160px]\">\n        <p className=\"font-medium text-sm text-foreground mb-1\">{data.name || data.label}</p>\n        <p className=\"text-sm text-muted-foreground\">\n          Value: <span className=\"font-mono font-medium\">{formatValue(data[dataKey])}</span>\n        </p>\n        {data.growth !== null && (\n          <p className=\"text-sm text-muted-foreground\">\n            Growth:{' '}\n            <span\n              className={cn(\n                'font-mono font-medium',\n                data.growth >= 0 ? 'text-success' : 'text-destructive'\n              )}\n            >\n              {data.growth >= 0 ? '+' : ''}{data.growth.toFixed(1)}%\n            </span>\n          </p>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <Card className={cn('w-full', className)}>\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"text-lg font-semibold text-foreground\">{title}</CardTitle>\n          {showGrowthRate && (\n            <div className=\"text-right\">\n              <p className=\"text-xs text-muted-foreground\">Overall Growth</p>\n              <p\n                className={cn(\n                  'text-sm font-mono font-semibold',\n                  isPositiveTrend ? 'text-success' : 'text-destructive'\n                )}\n              >\n                {isPositiveTrend ? '+' : ''}{overallGrowth.toFixed(1)}%\n              </p>\n            </div>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"h-80 w-full\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart\n              data={processedData}\n              margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n            >\n              <XAxis\n                dataKey=\"period\"\n                axisLine={false}\n                tickLine={false}\n                tick={{ fontSize: 12, fill: 'var(--color-muted-foreground)' }}\n              />\n              <YAxis\n                axisLine={false}\n                tickLine={false}\n                tick={{ fontSize: 12, fill: 'var(--color-muted-foreground)' }}\n                tickFormatter={formatValue}\n              />\n              <Line\n                type=\"monotone\"\n                dataKey={dataKey}\n                stroke=\"var(--color-secondary)\"\n                strokeWidth={3}\n                dot={<CustomDot />}\n                activeDot={{\n                  r: 6,\n                  fill: 'var(--color-secondary)',\n                  stroke: 'var(--color-background)',\n                  strokeWidth: 2\n                }}\n                className=\"drop-shadow-sm\"\n              />\n              <CustomTooltip />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Key metrics */}\n        <div className=\"grid grid-cols-3 gap-4 mt-4 pt-4 border-t border-gray-100\">\n          <div className=\"text-center\">\n            <p className=\"text-xs text-muted-foreground mb-1\">Starting Value</p>\n            <p className=\"font-mono text-sm font-medium text-foreground\">\n              {formatValue(firstValue)}\n            </p>\n          </div>\n          <div className=\"text-center\">\n            <p className=\"text-xs text-muted-foreground mb-1\">Current Value</p>\n            <p className=\"font-mono text-sm font-medium text-foreground\">\n              {formatValue(lastValue)}\n            </p>\n          </div>\n          <div className=\"text-center\">\n            <p className=\"text-xs text-muted-foreground mb-1\">Net Change</p>\n            <p\n              className={cn(\n                'font-mono text-sm font-medium',\n                isPositiveTrend ? 'text-success' : 'text-destructive'\n              )}\n            >\n              {isPositiveTrend ? '+' : ''}{overallGrowth.toFixed(1)}%\n            </p>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TrendLine;\n","import React, { useState } from 'react';\n\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent, CardHeader, CardTitle } from '../Card';\n\nconst SensitivityHeatmap = ({\n  data = [],\n  xAxisLabels = [],\n  yAxisLabels = [],\n  className,\n  title = 'Sensitivity Analysis',\n  _formatValue = (value) => `${value.toFixed(1)}%`,\n  formatCell = (value) => `${value > 0 ? '+' : ''}${value.toFixed(1)}%`\n}) => {\n  const [hoveredCell, setHoveredCell] = useState(null);\n\n  // Calculate min/max for color scaling\n  const allValues = data.flat();\n  const minValue = Math.min(...allValues);\n  const maxValue = Math.max(...allValues);\n  const range = maxValue - minValue;\n\n  // Get color intensity based on value\n  const getColorIntensity = (value) => {\n    if (range === 0) return 0.5;\n    return (value - minValue) / range;\n  };\n\n  // Get cell color based on value\n  const getCellColor = (value, intensity) => {\n    if (value > 0) {\n      // Green for positive values\n      return `rgba(34, 197, 94, ${0.2 + intensity * 0.6})`;\n    } else if (value < 0) {\n      // Red for negative values\n      return `rgba(239, 68, 68, ${0.2 + intensity * 0.6})`;\n    } else {\n      // Neutral for zero\n      return 'rgba(148, 163, 184, 0.2)';\n    }\n  };\n\n  const CustomTooltip = ({ x, y, value, xLabel, yLabel }) => {\n    if (hoveredCell?.x !== x || hoveredCell?.y !== y) return null;\n\n    return (\n      <div\n        className=\"absolute pointer-events-none z-10 bg-white border border-gray-200 rounded-md shadow-elevation-2 p-3 min-w-[180px]\"\n        style={{\n          left: hoveredCell.clientX + 10,\n          top: hoveredCell.clientY - 60\n        }}\n      >\n        <p className=\"font-medium text-sm text-foreground mb-1\">\n          {yLabel} × {xLabel}\n        </p>\n        <p className=\"text-sm text-muted-foreground\">\n          Impact:{' '}\n          <span\n            className={cn(\n              'font-mono font-medium',\n              value > 0 ? 'text-success' : value < 0 ? 'text-destructive' : 'text-muted-foreground'\n            )}\n          >\n            {formatCell(value)}\n          </span>\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <Card className={cn('w-full', className)}>\n      <CardHeader className=\"pb-4\">\n        <CardTitle className=\"text-lg font-semibold text-foreground\">{title}</CardTitle>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"relative overflow-auto\">\n          <div className=\"min-w-[600px]\">\n            {/* Header row */}\n            <div className=\"grid grid-cols-[120px_repeat(var(--cols),1fr)] gap-1 mb-1\">\n              <div /> {/* Empty corner */}\n              {xAxisLabels.map((label, index) => (\n                <div key={index} className=\"text-center p-2\">\n                  <span className=\"text-xs font-medium text-muted-foreground\">\n                    {label}\n                  </span>\n                </div>\n              ))}\n            </div>\n\n            {/* Data rows */}\n            {data.map((row, yIndex) => (\n              <div\n                key={yIndex}\n                className=\"grid grid-cols-[120px_repeat(var(--cols),1fr)] gap-1 mb-1\"\n                style={{ '--cols': xAxisLabels.length }}\n              >\n                {/* Y-axis label */}\n                <div className=\"flex items-center justify-end pr-3\">\n                  <span className=\"text-xs font-medium text-muted-foreground\">\n                    {yAxisLabels[yIndex]}\n                  </span>\n                </div>\n\n                {/* Data cells */}\n                {row.map((value, xIndex) => {\n                  const intensity = getColorIntensity(value);\n                  const backgroundColor = getCellColor(value, intensity);\n\n                  return (\n                    <div\n                      key={xIndex}\n                      className=\"relative h-12 rounded-sm border border-gray-100 cursor-pointer transition-all duration-200 hover:border-gray-300\"\n                      style={{ backgroundColor }}\n                      onMouseEnter={(e) => {\n                        setHoveredCell({\n                          x: xIndex,\n                          y: yIndex,\n                          value,\n                          clientX: e.clientX,\n                          clientY: e.clientY\n                        });\n                      }}\n                      onMouseLeave={() => setHoveredCell(null)}\n                    >\n                      <div className=\"absolute inset-0 flex items-center justify-center\">\n                        <span\n                          className={cn(\n                            'text-xs font-mono font-medium',\n                            Math.abs(value) > range * 0.6\n                              ? 'text-white'\n                              : 'text-gray-900'\n                          )}\n                        >\n                          {formatCell(value)}\n                        </span>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            ))}\n          </div>\n\n          {/* Tooltip */}\n          {hoveredCell && (\n            <CustomTooltip\n              x={hoveredCell.x}\n              y={hoveredCell.y}\n              value={hoveredCell.value}\n              xLabel={xAxisLabels[hoveredCell.x]}\n              yLabel={yAxisLabels[hoveredCell.y]}\n            />\n          )}\n        </div>\n\n        {/* Legend */}\n        <div className=\"flex items-center justify-center gap-6 mt-6 pt-4 border-t border-gray-100\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"flex items-center gap-1\">\n              <div className=\"w-4 h-4 rounded-sm bg-red-500 opacity-40\" />\n              <div className=\"w-4 h-4 rounded-sm bg-red-500 opacity-80\" />\n            </div>\n            <span className=\"text-xs text-muted-foreground\">Negative Impact</span>\n          </div>\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-4 h-4 rounded-sm bg-slate-400 opacity-20 border border-gray-200\" />\n            <span className=\"text-xs text-muted-foreground\">Neutral</span>\n          </div>\n          <div className=\"flex items-center gap-3\">\n            <div className=\"flex items-center gap-1\">\n              <div className=\"w-4 h-4 rounded-sm bg-green-500 opacity-40\" />\n              <div className=\"w-4 h-4 rounded-sm bg-green-500 opacity-80\" />\n            </div>\n            <span className=\"text-xs text-muted-foreground\">Positive Impact</span>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SensitivityHeatmap;\n"],"file":"assets/index-DIi-LZuZ.js"}