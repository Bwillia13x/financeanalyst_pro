{"version":3,"file":"ModelingTools-0jJnWWif.js","sources":["../../src/components/PrivateAnalysis/DataVisualization.jsx","../../src/components/PrivateAnalysis/WACCCalculator.jsx","../../src/components/PrivateAnalysis/AdvancedDCF.jsx","../../src/components/PrivateAnalysis/ComparableAnalysis.jsx","../../src/components/PrivateAnalysis/MonteCarloSimulation.jsx","../../src/components/PrivateAnalysis/ScenarioModeling.jsx","../../src/components/PrivateAnalysis/SensitivityAnalysis.jsx","../../src/components/PrivateAnalysis/ModelingTools.jsx"],"sourcesContent":["import { motion } from 'framer-motion';\nimport { TrendingUp, BarChart3, PieChart as PieChartIcon, Activity, Eye, EyeOff } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\nimport {\n  LineChart, Line, BarChart, Bar, PieChart, Pie, Cell,\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\nconst DataVisualization = ({\n  dcfData,\n  sensitivityData,\n  scenarioData,\n  formatCurrency,\n  formatPercent\n}) => {\n  const [activeChart, setActiveChart] = useState('dcf-waterfall');\n  const [showDetails, setShowDetails] = useState(true);\n\n  // Chart configuration\n  const chartTypes = [\n    { id: 'dcf-waterfall', label: 'DCF Waterfall', icon: BarChart3, category: 'dcf' },\n    { id: 'cashflow-trend', label: 'Cash Flow Trend', icon: TrendingUp, category: 'dcf' },\n    { id: 'sensitivity-tornado', label: 'Sensitivity Tornado', icon: Activity, category: 'sensitivity' },\n    { id: 'scenario-distribution', label: 'Scenario Distribution', icon: PieChartIcon, category: 'scenario' },\n    { id: 'valuation-bridge', label: 'Valuation Bridge', icon: BarChart3, category: 'combined' }\n  ];\n\n  // Prepare DCF Waterfall Data\n  const dcfWaterfallData = useMemo(() => {\n    if (!dcfData?.years) return [];\n\n    let cumulativeValue = 0;\n    const data = [];\n\n    // Add each year's contribution\n    dcfData.years.forEach((year, _index) => {\n      const startValue = cumulativeValue;\n      cumulativeValue += year.presentValue;\n\n      data.push({\n        name: `Year ${year.year}`,\n        value: year.presentValue,\n        cumulative: cumulativeValue,\n        start: startValue,\n        freeCashFlow: year.freeCashFlow,\n        category: 'operations'\n      });\n    });\n\n    // Add terminal value\n    const terminalStart = cumulativeValue;\n    cumulativeValue += dcfData.presentValueTerminal;\n\n    data.push({\n      name: 'Terminal Value',\n      value: dcfData.presentValueTerminal,\n      cumulative: cumulativeValue,\n      start: terminalStart,\n      category: 'terminal'\n    });\n\n    return data;\n  }, [dcfData]);\n\n  // Prepare Cash Flow Trend Data\n  const cashFlowTrendData = useMemo(() => {\n    if (!dcfData?.years) return [];\n\n    return dcfData.years.map((year, _index) => ({\n      year: `Year ${year.year}`,\n      freeCashFlow: year.freeCashFlow,\n      presentValue: year.presentValue,\n      revenue: year.revenue,\n      operatingIncome: year.operatingIncome,\n      workingCapitalChange: year.workingCapitalChange,\n      capex: Math.abs(year.capex)\n    }));\n  }, [dcfData]);\n\n  // Prepare Sensitivity Tornado Data\n  const sensitivityTornadoData = useMemo(() => {\n    if (!sensitivityData) return [];\n\n    return Object.entries(sensitivityData).map(([_variable, result]) => {\n      const maxUpside = Math.max(...result.dataPoints.map(d => d.changeFromBase));\n      const maxDownside = Math.min(...result.dataPoints.map(d => d.changeFromBase));\n\n      return {\n        variable: result.definition.name,\n        upside: maxUpside,\n        downside: Math.abs(maxDownside),\n        range: maxUpside - maxDownside\n      };\n    }).sort((a, b) => b.range - a.range);\n  }, [sensitivityData]);\n\n  // Prepare Scenario Distribution Data\n  const scenarioDistributionData = useMemo(() => {\n    if (!scenarioData?.length) return [];\n\n    return scenarioData.map((scenario, index) => ({\n      name: scenario.name,\n      value: scenario.enterpriseValue,\n      probability: scenario.probability,\n      weightedValue: scenario.weightedValue,\n      fill: `hsl(${(index * 137.5) % 360}, 70%, 50%)`\n    }));\n  }, [scenarioData]);\n\n  // Custom tooltip for different chart types\n  const CustomTooltip = ({ active, payload, label, chartType: _chartType }) => {\n    if (!active || !payload || !payload.length) return null;\n\n    const formatValue = (value, key) => {\n      if (key?.includes('Percent') || key?.includes('Rate')) {\n        return formatPercent(value);\n      }\n      return formatCurrency(value);\n    };\n\n    return (\n      <div className=\"bg-white p-3 border rounded-lg shadow-lg\">\n        <p className=\"font-medium text-gray-800\">{label}</p>\n        {payload.map((entry, index) => (\n          <p key={index} style={{ color: entry.color }} className=\"text-sm\">\n            {`${entry.dataKey}: ${formatValue(entry.value, entry.dataKey)}`}\n          </p>\n        ))}\n      </div>\n    );\n  };\n\n  // DCF Waterfall Chart\n  const DCFWaterfallChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <BarChart data={dcfWaterfallData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis tickFormatter={(value) => formatCurrency(value)} />\n        <Tooltip content={<CustomTooltip chartType=\"waterfall\" />} />\n        <Bar dataKey=\"value\" fill=\"#3B82F6\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n\n  // Cash Flow Trend Chart\n  const CashFlowTrendChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <LineChart data={cashFlowTrendData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"year\" />\n        <YAxis tickFormatter={(value) => formatCurrency(value)} />\n        <Tooltip content={<CustomTooltip chartType=\"trend\" />} />\n        <Legend />\n        <Line\n          type=\"monotone\" dataKey=\"freeCashFlow\" stroke=\"#10B981\"\n          strokeWidth={3} name=\"Free Cash Flow\"\n        />\n        <Line\n          type=\"monotone\" dataKey=\"presentValue\" stroke=\"#3B82F6\"\n          strokeWidth={2} name=\"Present Value\"\n        />\n        <Line\n          type=\"monotone\" dataKey=\"revenue\" stroke=\"#8B5CF6\"\n          strokeWidth={2} name=\"Revenue\"\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n\n  // Sensitivity Tornado Chart\n  const SensitivityTornadoChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <BarChart\n        data={sensitivityTornadoData}\n        layout=\"horizontal\"\n        margin={{ top: 20, right: 30, left: 100, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" tickFormatter={(value) => `${value.toFixed(1)}%`} />\n        <YAxis type=\"category\" dataKey=\"variable\" />\n        <Tooltip\n          formatter={(value, name) => [`${value.toFixed(1)}%`, name]}\n          labelFormatter={(label) => `Variable: ${label}`}\n        />\n        <Bar dataKey=\"upside\" fill=\"#10B981\" name=\"Upside Impact\" />\n        <Bar dataKey=\"downside\" fill=\"#EF4444\" name=\"Downside Impact\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n\n  // Scenario Distribution Chart\n  const ScenarioDistributionChart = () => (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <PieChart>\n          <Pie\n            data={scenarioDistributionData}\n            cx=\"50%\"\n            cy=\"50%\"\n            outerRadius={80}\n            dataKey=\"probability\"\n            label={({ name, probability }) => `${name}: ${probability}%`}\n          >\n            {scenarioDistributionData.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.fill} />\n            ))}\n          </Pie>\n          <Tooltip formatter={(value) => `${value}%`} />\n        </PieChart>\n      </ResponsiveContainer>\n\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart data={scenarioDistributionData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis tickFormatter={(value) => formatCurrency(value)} />\n          <Tooltip content={<CustomTooltip chartType=\"scenario\" />} />\n          <Bar dataKey=\"value\" fill=\"#8B5CF6\" name=\"Enterprise Value\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n\n  // Valuation Bridge Chart\n  const ValuationBridgeChart = () => {\n    const bridgeData = [\n      { name: 'PV of Operations', value: dcfData?.cumulativePV || 0, type: 'positive' },\n      { name: 'PV of Terminal', value: dcfData?.presentValueTerminal || 0, type: 'positive' },\n      { name: 'Enterprise Value', value: dcfData?.enterpriseValue || 0, type: 'total' }\n    ];\n\n    return (\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart data={bridgeData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis tickFormatter={(value) => formatCurrency(value)} />\n          <Tooltip content={<CustomTooltip chartType=\"bridge\" />} />\n          <Bar\n            dataKey=\"value\"\n            fill={(entry) => entry.type === 'total' ? '#1F2937' : '#3B82F6'}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const renderChart = () => {\n    switch (activeChart) {\n      case 'dcf-waterfall':\n        return <DCFWaterfallChart />;\n      case 'cashflow-trend':\n        return <CashFlowTrendChart />;\n      case 'sensitivity-tornado':\n        return <SensitivityTornadoChart />;\n      case 'scenario-distribution':\n        return <ScenarioDistributionChart />;\n      case 'valuation-bridge':\n        return <ValuationBridgeChart />;\n      default:\n        return <DCFWaterfallChart />;\n    }\n  };\n\n  const getChartDescription = () => {\n    switch (activeChart) {\n      case 'dcf-waterfall':\n        return 'Shows the contribution of each year\\'s cash flows and terminal value to total enterprise value.';\n      case 'cashflow-trend':\n        return 'Displays the trend of free cash flows, present values, and key financial metrics over time.';\n      case 'sensitivity-tornado':\n        return 'Illustrates how changes in key variables impact enterprise value, ranked by sensitivity.';\n      case 'scenario-distribution':\n        return 'Compares different scenarios by probability weights and resulting enterprise values.';\n      case 'valuation-bridge':\n        return 'Breaks down enterprise value into operating value and terminal value components.';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <BarChart3 size={20} />\n            Data Visualization\n          </h3>\n          <p className=\"text-gray-600\">\n            Interactive charts and graphs to visualize valuation results and sensitivity analysis.\n          </p>\n        </div>\n        <button\n          onClick={() => setShowDetails(!showDetails)}\n          className={`px-3 py-2 rounded-lg text-sm transition-colors flex items-center gap-2 ${\n            showDetails ? 'bg-blue-100 text-blue-700' : 'bg-gray-100 text-gray-700'\n          }`}\n        >\n          {showDetails ? <EyeOff size={14} /> : <Eye size={14} />}\n          {showDetails ? 'Hide Details' : 'Show Details'}\n        </button>\n      </div>\n\n      {/* Chart Type Selector */}\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-3\">\n        {chartTypes.map((chart) => {\n          const Icon = chart.icon;\n          return (\n            <motion.button\n              key={chart.id}\n              onClick={() => setActiveChart(chart.id)}\n              className={`p-3 rounded-lg border-2 transition-all text-center ${\n                activeChart === chart.id\n                  ? 'border-blue-500 bg-blue-50 text-blue-700'\n                  : 'border-gray-200 bg-white hover:border-gray-300 text-gray-700'\n              }`}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <Icon size={20} className=\"mx-auto mb-2\" />\n              <div className=\"text-xs font-medium\">{chart.label}</div>\n            </motion.button>\n          );\n        })}\n      </div>\n\n      {/* Chart Container */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h4 className=\"font-semibold text-lg\">\n            {chartTypes.find(c => c.id === activeChart)?.label}\n          </h4>\n          {showDetails && (\n            <span className=\"text-sm text-gray-500\">\n              {getChartDescription()}\n            </span>\n          )}\n        </div>\n\n        <div className=\"min-h-[400px]\">\n          {renderChart()}\n        </div>\n      </div>\n\n      {/* Chart Insights */}\n      {showDetails && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">Key Insights</h4>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {activeChart === 'dcf-waterfall' && (\n              <>\n                <div className=\"p-4 bg-blue-50 rounded-lg\">\n                  <div className=\"text-sm text-blue-600 font-medium\">Operations Contribution</div>\n                  <div className=\"text-lg font-bold text-blue-800\">\n                    {dcfData?.cumulativePV ?\n                      `${((dcfData.cumulativePV / dcfData.enterpriseValue) * 100).toFixed(1)}%` :\n                      'N/A'\n                    }\n                  </div>\n                </div>\n                <div className=\"p-4 bg-purple-50 rounded-lg\">\n                  <div className=\"text-sm text-purple-600 font-medium\">Terminal Contribution</div>\n                  <div className=\"text-lg font-bold text-purple-800\">\n                    {dcfData?.presentValueTerminal ?\n                      `${((dcfData.presentValueTerminal / dcfData.enterpriseValue) * 100).toFixed(1)}%` :\n                      'N/A'\n                    }\n                  </div>\n                </div>\n                <div className=\"p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-sm text-green-600 font-medium\">Avg. Annual FCF</div>\n                  <div className=\"text-lg font-bold text-green-800\">\n                    {dcfData?.freeCashFlows ?\n                      formatCurrency(dcfData.freeCashFlows.reduce((a, b) => a + b, 0) / dcfData.freeCashFlows.length) :\n                      'N/A'\n                    }\n                  </div>\n                </div>\n              </>\n            )}\n\n            {activeChart === 'sensitivity-tornado' && sensitivityTornadoData.length > 0 && (\n              <>\n                <div className=\"p-4 bg-red-50 rounded-lg\">\n                  <div className=\"text-sm text-red-600 font-medium\">Highest Risk Variable</div>\n                  <div className=\"text-lg font-bold text-red-800\">\n                    {sensitivityTornadoData[0]?.variable}\n                  </div>\n                  <div className=\"text-sm text-red-600\">\n                    ±{sensitivityTornadoData[0]?.range.toFixed(1)}% impact\n                  </div>\n                </div>\n                <div className=\"p-4 bg-yellow-50 rounded-lg\">\n                  <div className=\"text-sm text-yellow-600 font-medium\">Medium Risk Variables</div>\n                  <div className=\"text-lg font-bold text-yellow-800\">\n                    {sensitivityTornadoData.slice(1, 3).map(v => v.variable).join(', ')}\n                  </div>\n                </div>\n                <div className=\"p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-sm text-green-600 font-medium\">Lowest Risk Variable</div>\n                  <div className=\"text-lg font-bold text-green-800\">\n                    {sensitivityTornadoData[sensitivityTornadoData.length - 1]?.variable}\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataVisualization;\n","import { motion } from 'framer-motion';\nimport { Calculator, TrendingUp, DollarSign, Percent, Info, BookOpen, Settings } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst WACCCalculator = ({ modelInputs, onModelInputChange, formatPercent }) => {\n  const [showDetails, setShowDetails] = useState(true);\n  const [activeTab, setActiveTab] = useState('inputs');\n\n  // WACC calculation inputs with defaults\n  const waccInputs = modelInputs.dcf.wacc || {\n    // Cost of Equity (CAPM)\n    riskFreeRate: 4.5,\n    marketRiskPremium: 6.0,\n    beta: 1.2,\n    smallCompanyPremium: 3.0,\n    companySpecificRisk: 2.0,\n\n    // Cost of Debt\n    debtInterestRate: 6.5,\n    taxRate: 25,\n\n    // Capital Structure\n    marketValueEquity: 100000,\n    marketValueDebt: 30000,\n\n    // Alternative methods\n    buildUpMethod: {\n      riskFreeRate: 4.5,\n      equityRiskPremium: 6.0,\n      sizeRiskPremium: 3.0,\n      industryRiskPremium: 2.0,\n      companySpecificRisk: 2.0\n    },\n\n    // Industry benchmarks\n    industryWACC: 10.5,\n    industryBeta: 1.1,\n    industryDebtEquityRatio: 0.3\n  };\n\n  // Calculate WACC components\n  const waccCalculation = useMemo(() => {\n    const inputs = { ...waccInputs, ...modelInputs.dcf.wacc };\n\n    // Cost of Equity - CAPM Method\n    const costOfEquityCAPM = inputs.riskFreeRate +\n                            (inputs.beta * inputs.marketRiskPremium) +\n                            inputs.smallCompanyPremium +\n                            inputs.companySpecificRisk;\n\n    // Cost of Equity - Build-up Method\n    const costOfEquityBuildUp = inputs.buildUpMethod.riskFreeRate +\n                               inputs.buildUpMethod.equityRiskPremium +\n                               inputs.buildUpMethod.sizeRiskPremium +\n                               inputs.buildUpMethod.industryRiskPremium +\n                               inputs.buildUpMethod.companySpecificRisk;\n\n    // Cost of Debt (after-tax)\n    const costOfDebtAfterTax = inputs.debtInterestRate * (1 - inputs.taxRate / 100);\n\n    // Capital structure weights\n    const totalCapital = inputs.marketValueEquity + inputs.marketValueDebt;\n    const equityWeight = inputs.marketValueEquity / totalCapital;\n    const debtWeight = inputs.marketValueDebt / totalCapital;\n\n    // WACC calculations\n    const waccCAPM = (costOfEquityCAPM / 100 * equityWeight) +\n                     (costOfDebtAfterTax / 100 * debtWeight);\n\n    const waccBuildUp = (costOfEquityBuildUp / 100 * equityWeight) +\n                        (costOfDebtAfterTax / 100 * debtWeight);\n\n    // Risk-adjusted WACC (average of methods)\n    const finalWACC = (waccCAPM + waccBuildUp) / 2;\n\n    return {\n      costOfEquityCAPM,\n      costOfEquityBuildUp,\n      costOfDebtAfterTax,\n      equityWeight: equityWeight * 100,\n      debtWeight: debtWeight * 100,\n      waccCAPM: waccCAPM * 100,\n      waccBuildUp: waccBuildUp * 100,\n      finalWACC: finalWACC * 100,\n      totalCapital,\n      debtToEquityRatio: inputs.marketValueDebt / inputs.marketValueEquity\n    };\n  }, [waccInputs, modelInputs.dcf.wacc]);\n\n  const updateWACCInput = (field, value) => {\n    const updatedWACC = {\n      ...waccInputs,\n      ...modelInputs.dcf.wacc,\n      [field]: parseFloat(value) || 0\n    };\n    onModelInputChange('dcf', 'wacc', updatedWACC);\n  };\n\n  const _updateBuildUpInput = (field, value) => {\n    const updatedWACC = {\n      ...waccInputs,\n      ...modelInputs.dcf.wacc,\n      buildUpMethod: {\n        ...waccInputs.buildUpMethod,\n        ...modelInputs.dcf.wacc?.buildUpMethod,\n        [field]: parseFloat(value) || 0\n      }\n    };\n    onModelInputChange('dcf', 'wacc', updatedWACC);\n  };\n\n  const applyWACCToDCF = (waccValue) => {\n    onModelInputChange('dcf', 'discountRate', waccValue);\n  };\n\n  const tabs = [\n    { id: 'inputs', label: 'Inputs', icon: Settings },\n    { id: 'calculation', label: 'Calculation', icon: Calculator },\n    { id: 'benchmarks', label: 'Benchmarks', icon: TrendingUp }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Calculator size={20} />\n            WACC Calculator\n          </h3>\n          <p className=\"text-gray-600\">\n            Professional weighted average cost of capital calculation using CAPM and build-up methods.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => applyWACCToDCF(waccCalculation.finalWACC)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\"\n          >\n            Apply to DCF\n          </button>\n          <button\n            onClick={() => setShowDetails(!showDetails)}\n            className={`px-3 py-2 rounded-lg text-sm transition-colors ${\n              showDetails ? 'bg-gray-200 text-gray-700' : 'bg-gray-100 text-gray-600'\n            }`}\n          >\n            {showDetails ? 'Hide Details' : 'Show Details'}\n          </button>\n        </div>\n      </div>\n\n      {/* Key Results */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <motion.div\n          className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Percent size={20} className=\"text-blue-600\" />\n            <span className=\"text-xs text-blue-600 font-medium\">FINAL WACC</span>\n          </div>\n          <div className=\"text-2xl font-bold text-blue-800\">\n            {formatPercent(waccCalculation.finalWACC)}\n          </div>\n          <div className=\"text-sm text-blue-600 mt-1\">\n            Risk-adjusted average\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <TrendingUp size={20} className=\"text-green-600\" />\n            <span className=\"text-xs text-green-600 font-medium\">COST OF EQUITY</span>\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {formatPercent(waccCalculation.costOfEquityCAPM)}\n          </div>\n          <div className=\"text-sm text-green-600 mt-1\">\n            CAPM method\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <DollarSign size={20} className=\"text-purple-600\" />\n            <span className=\"text-xs text-purple-600 font-medium\">COST OF DEBT</span>\n          </div>\n          <div className=\"text-2xl font-bold text-purple-800\">\n            {formatPercent(waccCalculation.costOfDebtAfterTax)}\n          </div>\n          <div className=\"text-sm text-purple-600 mt-1\">\n            After-tax\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Info size={20} className=\"text-orange-600\" />\n            <span className=\"text-xs text-orange-600 font-medium\">DEBT/EQUITY</span>\n          </div>\n          <div className=\"text-2xl font-bold text-orange-800\">\n            {waccCalculation.debtToEquityRatio.toFixed(2)}x\n          </div>\n          <div className=\"text-sm text-orange-600 mt-1\">\n            Capital structure\n          </div>\n        </motion.div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg\">\n        {tabs.map((tab) => {\n          const Icon = tab.icon;\n          return (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`flex-1 flex items-center justify-center gap-2 py-2 px-4 rounded-md transition-all ${\n                activeTab === tab.id\n                  ? 'bg-white text-blue-600 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <Icon size={16} />\n              {tab.label}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        {activeTab === 'inputs' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">WACC Input Parameters</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* Cost of Equity - CAPM */}\n              <div>\n                <h5 className=\"font-medium mb-4 text-blue-800\">Cost of Equity (CAPM Method)</h5>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label htmlFor=\"riskFreeRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Risk-Free Rate (%)\n                    </label>\n                    <input\n                      id=\"riskFreeRate\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.riskFreeRate || waccInputs.riskFreeRate}\n                      onChange={(e) => updateWACCInput('riskFreeRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">10-year Treasury rate</span>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"marketRiskPremium\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Risk Premium (%)\n                    </label>\n                    <input\n                      id=\"marketRiskPremium\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.marketRiskPremium || waccInputs.marketRiskPremium}\n                      onChange={(e) => updateWACCInput('marketRiskPremium', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Expected market return - risk-free rate</span>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"beta\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Beta (β)\n                    </label>\n                    <input\n                      id=\"beta\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.beta || waccInputs.beta}\n                      onChange={(e) => updateWACCInput('beta', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Systematic risk relative to market</span>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"smallCompanyPremium\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Small Company Premium (%)\n                    </label>\n                    <input\n                      id=\"smallCompanyPremium\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.smallCompanyPremium || waccInputs.smallCompanyPremium}\n                      onChange={(e) => updateWACCInput('smallCompanyPremium', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Size-related risk premium</span>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"companySpecificRisk\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Company-Specific Risk (%)\n                    </label>\n                    <input\n                      id=\"companySpecificRisk\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.companySpecificRisk || waccInputs.companySpecificRisk}\n                      onChange={(e) => updateWACCInput('companySpecificRisk', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Unsystematic risk premium</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Capital Structure & Debt */}\n              <div>\n                <h5 className=\"font-medium mb-4 text-purple-800\">Capital Structure & Cost of Debt</h5>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label htmlFor=\"marketValueEquity\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Value of Equity ($000s)\n                    </label>\n                    <input\n                      id=\"marketValueEquity\"\n                      type=\"number\"\n                      value={modelInputs.dcf.wacc?.marketValueEquity || waccInputs.marketValueEquity}\n                      onChange={(e) => updateWACCInput('marketValueEquity', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"marketValueDebt\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Value of Debt ($000s)\n                    </label>\n                    <input\n                      id=\"marketValueDebt\"\n                      type=\"number\"\n                      value={modelInputs.dcf.wacc?.marketValueDebt || waccInputs.marketValueDebt}\n                      onChange={(e) => updateWACCInput('marketValueDebt', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"debtInterestRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Pre-Tax Cost of Debt (%)\n                    </label>\n                    <input\n                      id=\"debtInterestRate\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.debtInterestRate || waccInputs.debtInterestRate}\n                      onChange={(e) => updateWACCInput('debtInterestRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Interest rate on debt</span>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"taxRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Tax Rate (%)\n                    </label>\n                    <input\n                      id=\"taxRate\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.taxRate || modelInputs.dcf.taxRate}\n                      onChange={(e) => updateWACCInput('taxRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Corporate tax rate</span>\n                  </div>\n\n                  {/* Capital Structure Summary */}\n                  <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n                    <h6 className=\"font-medium mb-2\">Capital Structure</h6>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Equity Weight:</span>\n                        <span className=\"font-medium\">{formatPercent(waccCalculation.equityWeight)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Debt Weight:</span>\n                        <span className=\"font-medium\">{formatPercent(waccCalculation.debtWeight)}</span>\n                      </div>\n                      <div className=\"flex justify-between border-t pt-2\">\n                        <span>Total Capital:</span>\n                        <span className=\"font-medium\">${(waccCalculation.totalCapital / 1000).toFixed(0)}M</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'calculation' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">WACC Calculation Breakdown</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* CAPM Method */}\n              <div className=\"p-6 bg-blue-50 rounded-lg border border-blue-200\">\n                <h5 className=\"font-medium mb-4 text-blue-800\">CAPM Method</h5>\n                <div className=\"space-y-3 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Risk-Free Rate:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.riskFreeRate || waccInputs.riskFreeRate)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta × Market Risk Premium:</span>\n                    <span className=\"font-medium\">\n                      {formatPercent((modelInputs.dcf.wacc?.beta || waccInputs.beta) * (modelInputs.dcf.wacc?.marketRiskPremium || waccInputs.marketRiskPremium))}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Small Company Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.smallCompanyPremium || waccInputs.smallCompanyPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Company-Specific Risk:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.companySpecificRisk || waccInputs.companySpecificRisk)}</span>\n                  </div>\n                  <div className=\"flex justify-between border-t pt-2 font-semibold\">\n                    <span>Cost of Equity (CAPM):</span>\n                    <span>{formatPercent(waccCalculation.costOfEquityCAPM)}</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Build-up Method */}\n              <div className=\"p-6 bg-green-50 rounded-lg border border-green-200\">\n                <h5 className=\"font-medium mb-4 text-green-800\">Build-up Method</h5>\n                <div className=\"space-y-3 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Risk-Free Rate:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.riskFreeRate)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Equity Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.equityRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Size Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.sizeRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Industry Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.industryRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Company-Specific Risk:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.companySpecificRisk)}</span>\n                  </div>\n                  <div className=\"flex justify-between border-t pt-2 font-semibold\">\n                    <span>Cost of Equity (Build-up):</span>\n                    <span>{formatPercent(waccCalculation.costOfEquityBuildUp)}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Final WACC Calculation */}\n            <div className=\"p-6 bg-gray-50 rounded-lg border\">\n              <h5 className=\"font-medium mb-4\">Final WACC Calculation</h5>\n              <div className=\"space-y-4 text-sm\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <div className=\"flex justify-between mb-2\">\n                      <span>WACC (CAPM Method):</span>\n                      <span className=\"font-medium\">{formatPercent(waccCalculation.waccCAPM)}</span>\n                    </div>\n                    <div className=\"text-xs text-gray-600\">\n                      [{formatPercent(waccCalculation.costOfEquityCAPM)} × {formatPercent(waccCalculation.equityWeight)}] +\n                      [{formatPercent(waccCalculation.costOfDebtAfterTax)} × {formatPercent(waccCalculation.debtWeight)}]\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"flex justify-between mb-2\">\n                      <span>WACC (Build-up Method):</span>\n                      <span className=\"font-medium\">{formatPercent(waccCalculation.waccBuildUp)}</span>\n                    </div>\n                    <div className=\"text-xs text-gray-600\">\n                      [{formatPercent(waccCalculation.costOfEquityBuildUp)} × {formatPercent(waccCalculation.equityWeight)}] +\n                      [{formatPercent(waccCalculation.costOfDebtAfterTax)} × {formatPercent(waccCalculation.debtWeight)}]\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"border-t pt-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-lg font-semibold\">Risk-Adjusted WACC:</span>\n                    <span className=\"text-2xl font-bold text-blue-600\">{formatPercent(waccCalculation.finalWACC)}</span>\n                  </div>\n                  <div className=\"text-xs text-gray-600 mt-1\">\n                    Average of CAPM and Build-up methods\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'benchmarks' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">Industry Benchmarks & Validation</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              <div className=\"p-4 bg-blue-50 rounded-lg\">\n                <h6 className=\"font-medium text-blue-800 mb-2\">Your Company</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC:</span>\n                    <span className=\"font-semibold\">{formatPercent(waccCalculation.finalWACC)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta:</span>\n                    <span className=\"font-semibold\">{(modelInputs.dcf.wacc?.beta || waccInputs.beta).toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>D/E Ratio:</span>\n                    <span className=\"font-semibold\">{waccCalculation.debtToEquityRatio.toFixed(2)}x</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"p-4 bg-green-50 rounded-lg\">\n                <h6 className=\"font-medium text-green-800 mb-2\">Industry Average</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC:</span>\n                    <span className=\"font-semibold\">{formatPercent(waccInputs.industryWACC)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta:</span>\n                    <span className=\"font-semibold\">{waccInputs.industryBeta.toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>D/E Ratio:</span>\n                    <span className=\"font-semibold\">{waccInputs.industryDebtEquityRatio.toFixed(2)}x</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"p-4 bg-yellow-50 rounded-lg\">\n                <h6 className=\"font-medium text-yellow-800 mb-2\">Variance</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC Diff:</span>\n                    <span\n                      className={`font-semibold ${\n                        waccCalculation.finalWACC > waccInputs.industryWACC ? 'text-red-600' : 'text-green-600'\n                      }`}\n                    >\n                      {waccCalculation.finalWACC > waccInputs.industryWACC ? '+' : ''}\n                      {formatPercent(waccCalculation.finalWACC - waccInputs.industryWACC)}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta Diff:</span>\n                    <span\n                      className={`font-semibold ${\n                        (modelInputs.dcf.wacc?.beta || waccInputs.beta) > waccInputs.industryBeta ? 'text-red-600' : 'text-green-600'\n                      }`}\n                    >\n                      {(modelInputs.dcf.wacc?.beta || waccInputs.beta) > waccInputs.industryBeta ? '+' : ''}\n                      {((modelInputs.dcf.wacc?.beta || waccInputs.beta) - waccInputs.industryBeta).toFixed(2)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Validation Notes */}\n            <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n              <div className=\"flex items-start gap-2\">\n                <BookOpen size={16} className=\"text-blue-600 mt-0.5\" />\n                <div>\n                  <h6 className=\"font-medium text-blue-800 mb-2\">Validation Guidelines</h6>\n                  <ul className=\"text-sm text-blue-700 space-y-1\">\n                    <li>• WACC should be within ±2% of industry average for similar companies</li>\n                    <li>• Beta should reflect business risk relative to market (typically 0.8-1.5 for most companies)</li>\n                    <li>• Cost of equity should exceed risk-free rate by at least 4-6% for private companies</li>\n                    <li>• Debt/equity ratio should align with industry norms and company strategy</li>\n                    <li>• Consider economic conditions and company-specific factors</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WACCCalculator;\n","import { motion } from 'framer-motion';\nimport { Calculator, TrendingUp, DollarSign, BarChart3, Info, Settings } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nimport DataVisualization from './DataVisualization';\nimport WACCCalculator from './WACCCalculator';\n\nconst AdvancedDCF = ({ data, modelInputs, onModelInputChange, formatCurrency, formatPercent }) => {\n  const [_showDetails, _setShowDetails] = useState(false);\n  const [_showAssumptions, _setShowAssumptions] = useState(true);\n  const [activeTab, setActiveTab] = useState('results');\n\n  // Enhanced DCF calculation with working capital\n  const advancedDCFResults = useMemo(() => {\n    const { discountRate, terminalGrowthRate, projectionYears, taxRate } = modelInputs.dcf;\n    const statements = data.statements;\n\n    // Working capital assumptions (if not provided, use defaults)\n    const workingCapitalAssumptions = modelInputs.dcf.workingCapital || {\n      receivablesDays: 45,\n      inventoryDays: 60,\n      payablesDays: 30,\n      receivablesGrowth: 2, // % of revenue\n      inventoryGrowth: 1.5, // % of revenue\n      payablesGrowth: 1.8 // % of revenue\n    };\n\n    // Capex assumptions\n    const capexAssumptions = modelInputs.dcf.capex || {\n      capexAsPercentOfRevenue: 3.5,\n      depreciationRate: 7, // years\n      maintenanceCapex: 2.0 // % of revenue\n    };\n\n    const results = {\n      years: [],\n      freeCashFlows: [],\n      presentValues: [],\n      workingCapitalChanges: [],\n      capexAmounts: [],\n      unleveredFreeCashFlow: [],\n      cumulativePV: 0,\n      terminalValue: 0,\n      presentValueTerminal: 0,\n      enterpriseValue: 0,\n      equityValue: 0,\n      impliedShare: 0\n    };\n\n    // Base year revenue for calculations\n    const baseRevenue = statements.incomeStatement.totalRevenue?.[0] || 100000;\n\n    for (let year = 1; year <= projectionYears; year++) {\n      const yearData = {\n        year,\n        revenue: statements.incomeStatement.totalRevenue?.[year] || 0,\n        operatingIncome: statements.incomeStatement.operatingIncome?.[year] || 0,\n        nopat: 0, // Net Operating Profit After Tax\n        workingCapitalChange: 0,\n        capex: 0,\n        depreciation: 0,\n        freeCashFlow: 0,\n        presentValue: 0\n      };\n\n      // NOPAT calculation\n      yearData.nopat = yearData.operatingIncome * (1 - taxRate / 100);\n\n      // Working capital calculation\n      const currentRevenue = yearData.revenue;\n      const previousRevenue = year > 1 ? (statements.incomeStatement.totalRevenue?.[year - 1] || 0) : baseRevenue;\n\n      // Calculate working capital components\n      const currentReceivables = (currentRevenue * workingCapitalAssumptions.receivablesDays) / 365;\n      const currentInventory = (currentRevenue * workingCapitalAssumptions.inventoryDays) / 365;\n      const currentPayables = (currentRevenue * workingCapitalAssumptions.payablesDays) / 365;\n\n      const previousReceivables = (previousRevenue * workingCapitalAssumptions.receivablesDays) / 365;\n      const previousInventory = (previousRevenue * workingCapitalAssumptions.inventoryDays) / 365;\n      const previousPayables = (previousRevenue * workingCapitalAssumptions.payablesDays) / 365;\n\n      const receivablesChange = currentReceivables - previousReceivables;\n      const inventoryChange = currentInventory - previousInventory;\n      const payablesChange = currentPayables - previousPayables;\n\n      // Working capital change (increase is negative for cash flow)\n      yearData.workingCapitalChange = -(receivablesChange + inventoryChange - payablesChange);\n\n      // Capex calculation\n      yearData.capex = -(currentRevenue * capexAssumptions.capexAsPercentOfRevenue / 100);\n\n      // Depreciation (simplified - based on capex and depreciation rate)\n      yearData.depreciation = Math.abs(yearData.capex) / capexAssumptions.depreciationRate;\n\n      // Free Cash Flow = NOPAT + Depreciation - Capex - Change in Working Capital\n      yearData.freeCashFlow = yearData.nopat + yearData.depreciation + yearData.capex + yearData.workingCapitalChange;\n\n      // Present Value\n      const discountFactor = Math.pow(1 + discountRate / 100, year);\n      yearData.presentValue = yearData.freeCashFlow / discountFactor;\n\n      results.years.push(yearData);\n      results.freeCashFlows.push(yearData.freeCashFlow);\n      results.presentValues.push(yearData.presentValue);\n      results.workingCapitalChanges.push(yearData.workingCapitalChange);\n      results.capexAmounts.push(yearData.capex);\n      results.unleveredFreeCashFlow.push(yearData.freeCashFlow);\n      results.cumulativePV += yearData.presentValue;\n    }\n\n    // Terminal Value calculation\n    const finalYearFCF = results.years[results.years.length - 1]?.freeCashFlow || 0;\n    const terminalFCF = finalYearFCF * (1 + terminalGrowthRate / 100);\n    results.terminalValue = terminalFCF / ((discountRate - terminalGrowthRate) / 100);\n\n    const terminalDiscountFactor = Math.pow(1 + discountRate / 100, projectionYears);\n    results.presentValueTerminal = results.terminalValue / terminalDiscountFactor;\n\n    // Enterprise Value\n    results.enterpriseValue = results.cumulativePV + results.presentValueTerminal;\n\n    // Simplified equity value (would subtract net debt in reality)\n    const netDebt = 0; // Could be calculated from balance sheet\n    results.equityValue = results.enterpriseValue - netDebt;\n\n    // Implied share price (assuming shares outstanding)\n    const sharesOutstanding = modelInputs.dcf.sharesOutstanding || 1000; // thousands\n    results.impliedShare = results.equityValue / sharesOutstanding;\n\n    return results;\n  }, [data, modelInputs]);\n\n  const updateDCFAssumption = (category, field, value) => {\n    const updatedDCF = {\n      ...modelInputs.dcf,\n      [category]: {\n        ...modelInputs.dcf[category],\n        [field]: parseFloat(value) || 0\n      }\n    };\n    onModelInputChange('dcf', category, updatedDCF[category]);\n  };\n\n  const updateBasicAssumption = (field, value) => {\n    onModelInputChange('dcf', field, parseFloat(value) || 0);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Calculator size={20} />\n            Advanced DCF Valuation\n          </h3>\n          <p className=\"text-gray-600\">\n            Professional-grade DCF with working capital analysis, capex modeling, and detailed cash flow projections.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          {['results', 'charts', 'wacc', 'assumptions'].map((tab) => (\n            <button\n              key={tab}\n              onClick={() => setActiveTab(tab)}\n              className={`px-3 py-2 rounded-lg text-sm transition-colors flex items-center gap-1 ${\n                activeTab === tab ? 'bg-blue-100 text-blue-700' : 'bg-gray-100 text-gray-700'\n              }`}\n            >\n              {tab === 'results' && <DollarSign size={14} />}\n              {tab === 'charts' && <BarChart3 size={14} />}\n              {tab === 'wacc' && <Calculator size={14} />}\n              {tab === 'assumptions' && <Settings size={14} />}\n              {tab.charAt(0).toUpperCase() + tab.slice(1)}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Tab Content */}\n      {activeTab === 'results' && (\n        <>\n          {/* Key Results */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <motion.div\n              className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <DollarSign size={20} className=\"text-green-600\" />\n                <span className=\"text-xs text-green-600 font-medium\">ENTERPRISE VALUE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-green-800\">\n                {formatCurrency(advancedDCFResults.enterpriseValue)}\n              </div>\n              <div className=\"text-sm text-green-600 mt-1\">\n                PV Operations: {formatCurrency(advancedDCFResults.cumulativePV)}\n              </div>\n            </motion.div>\n\n            <motion.div\n              className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <TrendingUp size={20} className=\"text-blue-600\" />\n                <span className=\"text-xs text-blue-600 font-medium\">EQUITY VALUE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-blue-800\">\n                {formatCurrency(advancedDCFResults.equityValue)}\n              </div>\n              <div className=\"text-sm text-blue-600 mt-1\">\n                Per Share: {formatCurrency(advancedDCFResults.impliedShare)}\n              </div>\n            </motion.div>\n\n            <motion.div\n              className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <BarChart3 size={20} className=\"text-purple-600\" />\n                <span className=\"text-xs text-purple-600 font-medium\">TERMINAL VALUE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-purple-800\">\n                {formatCurrency(advancedDCFResults.terminalValue)}\n              </div>\n              <div className=\"text-sm text-purple-600 mt-1\">\n                PV: {formatCurrency(advancedDCFResults.presentValueTerminal)}\n              </div>\n            </motion.div>\n\n            <motion.div\n              className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <Info size={20} className=\"text-orange-600\" />\n                <span className=\"text-xs text-orange-600 font-medium\">IMPLIED MULTIPLE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-orange-800\">\n                {(advancedDCFResults.enterpriseValue / (data.statements.incomeStatement.totalRevenue?.[1] || 1)).toFixed(1)}x\n              </div>\n              <div className=\"text-sm text-orange-600 mt-1\">\n                EV/Revenue (Year 1)\n              </div>\n            </motion.div>\n          </div>\n\n          {/* Detailed Cash Flow Analysis */}\n          <div className=\"bg-white rounded-lg border p-6\">\n            <h4 className=\"font-semibold text-lg mb-4\">Detailed Cash Flow Analysis</h4>\n\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full text-sm\">\n                <thead>\n                  <tr className=\"border-b bg-gray-50\">\n                    <th className=\"text-left p-3 font-medium\">Year</th>\n                    <th className=\"text-right p-3 font-medium\">Revenue</th>\n                    <th className=\"text-right p-3 font-medium\">Operating Income</th>\n                    <th className=\"text-right p-3 font-medium\">NOPAT</th>\n                    <th className=\"text-right p-3 font-medium\">Depreciation</th>\n                    <th className=\"text-right p-3 font-medium\">Capex</th>\n                    <th className=\"text-right p-3 font-medium\">ΔWorking Capital</th>\n                    <th className=\"text-right p-3 font-medium\">Free Cash Flow</th>\n                    <th className=\"text-right p-3 font-medium\">Present Value</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {advancedDCFResults.years.map((yearData, index) => (\n                    <tr key={index} className=\"border-b hover:bg-gray-50\">\n                      <td className=\"p-3 font-medium\">{yearData.year}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(yearData.revenue)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(yearData.operatingIncome)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(yearData.nopat)}</td>\n                      <td className=\"p-3 text-right text-green-600\">+{formatCurrency(yearData.depreciation)}</td>\n                      <td className=\"p-3 text-right text-red-600\">{formatCurrency(yearData.capex)}</td>\n                      <td className={`p-3 text-right ${yearData.workingCapitalChange >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {yearData.workingCapitalChange >= 0 ? '+' : ''}{formatCurrency(yearData.workingCapitalChange)}\n                      </td>\n                      <td className=\"p-3 text-right font-medium\">{formatCurrency(yearData.freeCashFlow)}</td>\n                      <td className=\"p-3 text-right font-medium\">{formatCurrency(yearData.presentValue)}</td>\n                    </tr>\n                  ))}\n\n                  {/* Terminal Value Row */}\n                  <tr className=\"border-b-2 border-gray-300 bg-blue-50\">\n                    <td className=\"p-3 font-bold\">Terminal</td>\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3 text-right font-bold\">{formatCurrency(advancedDCFResults.terminalValue)}</td>\n                    <td className=\"p-3 text-right font-bold\">{formatCurrency(advancedDCFResults.presentValueTerminal)}</td>\n                  </tr>\n\n                  {/* Total Row */}\n                  <tr className=\"bg-gray-100 font-bold\">\n                    <td className=\"p-3\">TOTAL</td>\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3 text-right text-lg\">{formatCurrency(advancedDCFResults.enterpriseValue)}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </>\n      )}\n\n      {/* Charts Tab */}\n      {activeTab === 'charts' && (\n        <DataVisualization\n          dcfData={advancedDCFResults}\n          sensitivityData={null}\n          scenarioData={null}\n          formatCurrency={formatCurrency}\n          formatPercent={formatPercent}\n        />\n      )}\n\n      {/* WACC Calculator Tab */}\n      {activeTab === 'wacc' && (\n        <WACCCalculator\n          modelInputs={modelInputs}\n          onModelInputChange={onModelInputChange}\n          formatPercent={formatPercent}\n        />\n      )}\n\n      {/* Assumptions Tab */}\n      {activeTab === 'assumptions' && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">Model Assumptions</h4>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Basic DCF Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Core Assumptions</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label htmlFor=\"dcf-discount-rate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Discount Rate (WACC) %\n                  </label>\n                  <input\n                    id=\"dcf-discount-rate\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.discountRate}\n                    onChange={(e) => updateBasicAssumption('discountRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"dcf-terminal-growth\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Terminal Growth Rate %\n                  </label>\n                  <input\n                    id=\"dcf-terminal-growth\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.terminalGrowthRate}\n                    onChange={(e) => updateBasicAssumption('terminalGrowthRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"dcf-tax-rate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Tax Rate %\n                  </label>\n                  <input\n                    id=\"dcf-tax-rate\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.taxRate}\n                    onChange={(e) => updateBasicAssumption('taxRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Working Capital Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Working Capital</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label htmlFor=\"dcf-receivables-days\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Receivables (Days)\n                  </label>\n                  <input\n                    id=\"dcf-receivables-days\"\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.receivablesDays || 45}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'receivablesDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"dcf-inventory-days\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Inventory (Days)\n                  </label>\n                  <input\n                    id=\"dcf-inventory-days\"\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.inventoryDays || 60}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'inventoryDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"dcf-payables-days\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Payables (Days)\n                  </label>\n                  <input\n                    id=\"dcf-payables-days\"\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.payablesDays || 30}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'payablesDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Capex Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Capital Expenditure</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label htmlFor=\"dcf-capex-percent\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Capex (% of Revenue)\n                  </label>\n                  <input\n                    id=\"dcf-capex-percent\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.capex?.capexAsPercentOfRevenue || 3.5}\n                    onChange={(e) => updateDCFAssumption('capex', 'capexAsPercentOfRevenue', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"dcf-depreciation-period\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Depreciation Period (Years)\n                  </label>\n                  <input\n                    id=\"dcf-depreciation-period\"\n                    type=\"number\"\n                    value={modelInputs.dcf.capex?.depreciationRate || 7}\n                    onChange={(e) => updateDCFAssumption('capex', 'depreciationRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"dcf-shares-outstanding\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Shares Outstanding (000s)\n                  </label>\n                  <input\n                    id=\"dcf-shares-outstanding\"\n                    type=\"number\"\n                    value={modelInputs.dcf.sharesOutstanding || 1000}\n                    onChange={(e) => updateBasicAssumption('sharesOutstanding', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdvancedDCF;\n","import { motion } from 'framer-motion';\nimport { Users, TrendingUp, BarChart3, Plus, Search, DollarSign, Target, Filter } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst ComparableAnalysis = ({ data, formatCurrency, formatPercent: _formatPercent }) => {\n  const [activeTab, setActiveTab] = useState('multiples');\n  const [selectedMultiple, setSelectedMultiple] = useState('ev_revenue');\n  const [showAddComp, setShowAddComp] = useState(false);\n\n  // Sample comparable companies data (in practice, this would come from external API)\n  const [comparableCompanies, setComparableCompanies] = useState([\n    {\n      id: 1,\n      name: 'MedSpa Corp',\n      ticker: 'MSPA',\n      marketCap: 450000, // $450M\n      enterpriseValue: 520000, // $520M\n      revenue: 180000, // $180M\n      ebitda: 45000, // $45M\n      netIncome: 28000, // $28M\n      employees: 1200,\n      founded: 2015,\n      geography: 'US',\n      businessModel: 'B2C Medical Spa Chain'\n    },\n    {\n      id: 2,\n      name: 'Wellness Holdings',\n      ticker: 'WELL',\n      marketCap: 680000,\n      enterpriseValue: 750000,\n      revenue: 220000,\n      ebitda: 55000,\n      netIncome: 35000,\n      employees: 1800,\n      founded: 2012,\n      geography: 'US',\n      businessModel: 'Integrated Wellness Platform'\n    },\n    {\n      id: 3,\n      name: 'Aesthetic Solutions Inc',\n      ticker: 'AEST',\n      marketCap: 320000,\n      enterpriseValue: 380000,\n      revenue: 125000,\n      ebitda: 32000,\n      netIncome: 18000,\n      employees: 850,\n      founded: 2018,\n      geography: 'US',\n      businessModel: 'Medical Device & Services'\n    },\n    {\n      id: 4,\n      name: 'Premium Health Group',\n      ticker: 'PHG',\n      marketCap: 920000,\n      enterpriseValue: 1050000,\n      revenue: 310000,\n      ebitda: 78000,\n      netIncome: 48000,\n      employees: 2500,\n      founded: 2010,\n      geography: 'US',\n      businessModel: 'Premium Healthcare Services'\n    }\n  ]);\n\n  // Calculate multiples for comparable companies\n  const comparableMultiples = useMemo(() => {\n    return comparableCompanies.map(comp => ({\n      ...comp,\n      multiples: {\n        ev_revenue: comp.enterpriseValue / comp.revenue,\n        ev_ebitda: comp.enterpriseValue / comp.ebitda,\n        pe_ratio: comp.marketCap / comp.netIncome,\n        revenue_per_employee: comp.revenue / comp.employees,\n        market_cap_revenue: comp.marketCap / comp.revenue\n      }\n    }));\n  }, [comparableCompanies]);\n\n  // Calculate market statistics\n  const marketStats = useMemo(() => {\n    const multiples = comparableMultiples.map(c => c.multiples);\n\n    const calculateStats = (values) => ({\n      mean: values.reduce((a, b) => a + b, 0) / values.length,\n      median: values.sort((a, b) => a - b)[Math.floor(values.length / 2)],\n      min: Math.min(...values),\n      max: Math.max(...values),\n      p25: values.sort((a, b) => a - b)[Math.floor(values.length * 0.25)],\n      p75: values.sort((a, b) => a - b)[Math.floor(values.length * 0.75)]\n    });\n\n    return {\n      ev_revenue: calculateStats(multiples.map(m => m.ev_revenue)),\n      ev_ebitda: calculateStats(multiples.map(m => m.ev_ebitda)),\n      pe_ratio: calculateStats(multiples.map(m => m.pe_ratio)),\n      revenue_per_employee: calculateStats(multiples.map(m => m.revenue_per_employee)),\n      market_cap_revenue: calculateStats(multiples.map(m => m.market_cap_revenue))\n    };\n  }, [comparableMultiples]);\n\n  // Calculate implied valuation for target company\n  const impliedValuation = useMemo(() => {\n    const targetRevenue = data.statements.incomeStatement.totalRevenue?.[1] || 100000; // Year 1 revenue\n    const targetEBITDA = (data.statements.incomeStatement.operatingIncome?.[1] || 50000) * 1.15; // Approx EBITDA\n    const targetNetIncome = (data.statements.incomeStatement.operatingIncome?.[1] || 50000) * 0.7; // Approx net income\n\n    return {\n      ev_revenue: {\n        mean: targetRevenue * marketStats.ev_revenue.mean,\n        median: targetRevenue * marketStats.ev_revenue.median,\n        p25: targetRevenue * marketStats.ev_revenue.p25,\n        p75: targetRevenue * marketStats.ev_revenue.p75\n      },\n      ev_ebitda: {\n        mean: targetEBITDA * marketStats.ev_ebitda.mean,\n        median: targetEBITDA * marketStats.ev_ebitda.median,\n        p25: targetEBITDA * marketStats.ev_ebitda.p25,\n        p75: targetEBITDA * marketStats.ev_ebitda.p75\n      },\n      pe_ratio: {\n        mean: targetNetIncome * marketStats.pe_ratio.mean,\n        median: targetNetIncome * marketStats.pe_ratio.median,\n        p25: targetNetIncome * marketStats.pe_ratio.p25,\n        p75: targetNetIncome * marketStats.pe_ratio.p75\n      }\n    };\n  }, [data, marketStats]);\n\n  const multipleDefinitions = {\n    ev_revenue: { name: 'EV/Revenue', description: 'Enterprise Value / Annual Revenue' },\n    ev_ebitda: { name: 'EV/EBITDA', description: 'Enterprise Value / EBITDA' },\n    pe_ratio: { name: 'P/E Ratio', description: 'Market Cap / Net Income' },\n    revenue_per_employee: { name: 'Revenue/Employee', description: 'Revenue per Employee' },\n    market_cap_revenue: { name: 'Market Cap/Revenue', description: 'Market Cap / Revenue' }\n  };\n\n  const addComparableCompany = (companyData) => {\n    const newCompany = {\n      id: Date.now(),\n      ...companyData,\n      marketCap: parseFloat(companyData.marketCap) || 0,\n      enterpriseValue: parseFloat(companyData.enterpriseValue) || 0,\n      revenue: parseFloat(companyData.revenue) || 0,\n      ebitda: parseFloat(companyData.ebitda) || 0,\n      netIncome: parseFloat(companyData.netIncome) || 0,\n      employees: parseInt(companyData.employees) || 0,\n      founded: parseInt(companyData.founded) || new Date().getFullYear()\n    };\n    setComparableCompanies([...comparableCompanies, newCompany]);\n    setShowAddComp(false);\n  };\n\n  const removeComparable = (id) => {\n    setComparableCompanies(comparableCompanies.filter(comp => comp.id !== id));\n  };\n\n  const tabs = [\n    { id: 'multiples', label: 'Trading Multiples', icon: BarChart3 },\n    { id: 'analysis', label: 'Valuation Analysis', icon: Target },\n    { id: 'companies', label: 'Comparable Set', icon: Users }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Users size={20} />\n            Comparable Company Analysis\n          </h3>\n          <p className=\"text-gray-600\">\n            Market-based valuation using trading multiples from similar public companies.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => setShowAddComp(true)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2 text-sm\"\n          >\n            <Plus size={16} />\n            Add Comparable\n          </button>\n        </div>\n      </div>\n\n      {/* Key Results Summary */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <motion.div\n          className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <BarChart3 size={20} className=\"text-blue-600\" />\n            <span className=\"text-xs text-blue-600 font-medium\">EV/REVENUE</span>\n          </div>\n          <div className=\"text-2xl font-bold text-blue-800\">\n            {marketStats.ev_revenue.median.toFixed(1)}x\n          </div>\n          <div className=\"text-sm text-blue-600 mt-1\">\n            Median multiple\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <TrendingUp size={20} className=\"text-green-600\" />\n            <span className=\"text-xs text-green-600 font-medium\">IMPLIED VALUE</span>\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {formatCurrency(impliedValuation.ev_revenue.median)}\n          </div>\n          <div className=\"text-sm text-green-600 mt-1\">\n            EV/Revenue basis\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <DollarSign size={20} className=\"text-purple-600\" />\n            <span className=\"text-xs text-purple-600 font-medium\">VALUATION RANGE</span>\n          </div>\n          <div className=\"text-lg font-bold text-purple-800\">\n            {formatCurrency(impliedValuation.ev_revenue.p25)} - {formatCurrency(impliedValuation.ev_revenue.p75)}\n          </div>\n          <div className=\"text-sm text-purple-600 mt-1\">\n            25th - 75th percentile\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Users size={20} className=\"text-orange-600\" />\n            <span className=\"text-xs text-orange-600 font-medium\">PEER COUNT</span>\n          </div>\n          <div className=\"text-2xl font-bold text-orange-800\">\n            {comparableCompanies.length}\n          </div>\n          <div className=\"text-sm text-orange-600 mt-1\">\n            Comparable companies\n          </div>\n        </motion.div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg\">\n        {tabs.map((tab) => {\n          const Icon = tab.icon;\n          return (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`flex-1 flex items-center justify-center gap-2 py-2 px-4 rounded-md transition-all ${\n                activeTab === tab.id\n                  ? 'bg-white text-blue-600 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <Icon size={16} />\n              {tab.label}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        {activeTab === 'multiples' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h4 className=\"font-semibold text-lg\">Trading Multiples Analysis</h4>\n              <select\n                value={selectedMultiple}\n                onChange={(e) => setSelectedMultiple(e.target.value)}\n                className=\"px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                {Object.entries(multipleDefinitions).map(([key, def]) => (\n                  <option key={key} value={key}>{def.name}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full text-sm\">\n                <thead>\n                  <tr className=\"border-b bg-gray-50\">\n                    <th className=\"text-left p-3 font-medium\">Company</th>\n                    <th className=\"text-right p-3 font-medium\">Market Cap</th>\n                    <th className=\"text-right p-3 font-medium\">Enterprise Value</th>\n                    <th className=\"text-right p-3 font-medium\">Revenue</th>\n                    <th className=\"text-right p-3 font-medium\">EV/Revenue</th>\n                    <th className=\"text-right p-3 font-medium\">EV/EBITDA</th>\n                    <th className=\"text-right p-3 font-medium\">P/E Ratio</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {comparableMultiples.map((comp, _index) => (\n                    <tr key={comp.id} className=\"border-b hover:bg-gray-50\">\n                      <td className=\"p-3\">\n                        <div>\n                          <div className=\"font-medium\">{comp.name}</div>\n                          <div className=\"text-xs text-gray-500\">{comp.ticker}</div>\n                        </div>\n                      </td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.marketCap)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.enterpriseValue)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.revenue)}</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.ev_revenue.toFixed(1)}x</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.ev_ebitda.toFixed(1)}x</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.pe_ratio.toFixed(1)}x</td>\n                    </tr>\n                  ))}\n\n                  {/* Summary Statistics */}\n                  <tr className=\"border-t-2 border-gray-300 bg-blue-50 font-semibold\">\n                    <td className=\"p-3\">Market Statistics</td>\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3 text-right\">{marketStats.ev_revenue.median.toFixed(1)}x</td>\n                    <td className=\"p-3 text-right\">{marketStats.ev_ebitda.median.toFixed(1)}x</td>\n                    <td className=\"p-3 text-right\">{marketStats.pe_ratio.median.toFixed(1)}x</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            {/* Multiple Distribution Chart */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <div className=\"p-4 bg-gray-50 rounded-lg\">\n                <h6 className=\"font-medium mb-3\">Multiple Distribution</h6>\n                <div className=\"space-y-3\">\n                  {Object.entries(marketStats).slice(0, 3).map(([key, stats]) => (\n                    <div key={key}>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>{multipleDefinitions[key].name}</span>\n                        <span className=\"font-medium\">{stats.median.toFixed(1)}x</span>\n                      </div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                        <div\n                          className=\"bg-blue-500 h-2 rounded-full\"\n                          style={{\n                            width: `${((stats.median - stats.min) / (stats.max - stats.min)) * 100}%`\n                          }}\n                        />\n                      </div>\n                      <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                        <span>{stats.min.toFixed(1)}x</span>\n                        <span>{stats.max.toFixed(1)}x</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"p-4 bg-gray-50 rounded-lg\">\n                <h6 className=\"font-medium mb-3\">Key Statistics</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Companies Analyzed:</span>\n                    <span className=\"font-medium\">{comparableCompanies.length}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Median Market Cap:</span>\n                    <span className=\"font-medium\">{formatCurrency(comparableCompanies.sort((a, b) => a.marketCap - b.marketCap)[Math.floor(comparableCompanies.length / 2)]?.marketCap || 0)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Median Revenue:</span>\n                    <span className=\"font-medium\">{formatCurrency(comparableCompanies.sort((a, b) => a.revenue - b.revenue)[Math.floor(comparableCompanies.length / 2)]?.revenue || 0)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Avg Founded Year:</span>\n                    <span className=\"font-medium\">{Math.round(comparableCompanies.reduce((sum, c) => sum + c.founded, 0) / comparableCompanies.length)}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'analysis' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">Valuation Analysis</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Implied Valuation */}\n              <div>\n                <h5 className=\"font-medium mb-4\">Implied Valuation by Multiple</h5>\n                <div className=\"space-y-4\">\n                  {Object.entries(impliedValuation).map(([multiple, values]) => (\n                    <div key={multiple} className=\"p-4 border rounded-lg\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"font-medium\">{multipleDefinitions[multiple].name}</span>\n                        <span className=\"text-sm text-gray-500\">\n                          {marketStats[multiple].median.toFixed(1)}x median\n                        </span>\n                      </div>\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span>25th Percentile:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.p25)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Median:</span>\n                          <span className=\"font-bold text-blue-600\">{formatCurrency(values.median)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>75th Percentile:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.p75)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Mean:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.mean)}</span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Valuation Summary */}\n              <div>\n                <h5 className=\"font-medium mb-4\">Valuation Summary</h5>\n                <div className=\"p-6 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-200\">\n                  <div className=\"space-y-4\">\n                    <div>\n                      <div className=\"text-sm text-blue-600 font-medium mb-1\">Recommended Range</div>\n                      <div className=\"text-2xl font-bold text-blue-800\">\n                        {formatCurrency((impliedValuation.ev_revenue.p25 + impliedValuation.ev_ebitda.p25) / 2)} -\n                        {formatCurrency((impliedValuation.ev_revenue.p75 + impliedValuation.ev_ebitda.p75) / 2)}\n                      </div>\n                      <div className=\"text-sm text-blue-600\">Blended 25th-75th percentile</div>\n                    </div>\n\n                    <div>\n                      <div className=\"text-sm text-blue-600 font-medium mb-1\">Midpoint Valuation</div>\n                      <div className=\"text-xl font-bold text-blue-800\">\n                        {formatCurrency((impliedValuation.ev_revenue.median + impliedValuation.ev_ebitda.median) / 2)}\n                      </div>\n                      <div className=\"text-sm text-blue-600\">Average of median multiples</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mt-4 p-4 bg-yellow-50 rounded-lg border border-yellow-200\">\n                  <div className=\"flex items-start gap-2\">\n                    <Target size={16} className=\"text-yellow-600 mt-0.5\" />\n                    <div>\n                      <h6 className=\"font-medium text-yellow-800 mb-1\">Valuation Considerations</h6>\n                      <ul className=\"text-sm text-yellow-700 space-y-1\">\n                        <li>• Consider company-specific growth and margin profiles</li>\n                        <li>• Adjust for differences in business model and scale</li>\n                        <li>• Factor in market conditions and sector trends</li>\n                        <li>• Apply appropriate discount for private company liquidity</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'companies' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h4 className=\"font-semibold text-lg\">Comparable Company Set</h4>\n              <div className=\"flex gap-2\">\n                <div className=\"relative\">\n                  <Search size={16} className=\"absolute left-3 top-3 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search companies...\"\n                    className=\"pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <button className=\"px-3 py-2 border rounded-lg hover:bg-gray-50 flex items-center gap-2\">\n                  <Filter size={16} />\n                  Filter\n                </button>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n              {comparableCompanies.map((comp) => (\n                <motion.div\n                  key={comp.id}\n                  className=\"border rounded-lg p-4 hover:shadow-lg transition-shadow\"\n                  whileHover={{ y: -2 }}\n                >\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <div>\n                      <h6 className=\"font-semibold text-gray-800\">{comp.name}</h6>\n                      <div className=\"text-sm text-gray-500\">{comp.ticker} • {comp.geography}</div>\n                    </div>\n                    <button\n                      onClick={() => removeComparable(comp.id)}\n                      className=\"text-red-500 hover:bg-red-50 p-1 rounded\"\n                    >\n                      ×\n                    </button>\n                  </div>\n\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span>Market Cap:</span>\n                      <span className=\"font-medium\">{formatCurrency(comp.marketCap)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Revenue:</span>\n                      <span className=\"font-medium\">{formatCurrency(comp.revenue)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>EV/Revenue:</span>\n                      <span className=\"font-medium\">{(comp.enterpriseValue / comp.revenue).toFixed(1)}x</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Founded:</span>\n                      <span className=\"font-medium\">{comp.founded}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"mt-3 pt-3 border-t\">\n                    <div className=\"text-xs text-gray-600\">{comp.businessModel}</div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Add Comparable Modal */}\n      {showAddComp && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h4 className=\"font-semibold text-lg mb-4\">Add Comparable Company</h4>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                const formData = new FormData(e.target);\n                addComparableCompany(Object.fromEntries(formData));\n              }}\n            >\n              <div className=\"space-y-4\">\n                <div>\n                  <label htmlFor=\"company-name\" className=\"block text-sm font-medium text-gray-700 mb-1\">Company Name</label>\n                  <input\n                    id=\"company-name\"\n                    name=\"name\" type=\"text\" required\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"ticker\" className=\"block text-sm font-medium text-gray-700 mb-1\">Ticker</label>\n                  <input\n                    id=\"ticker\"\n                    name=\"ticker\" type=\"text\" required\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <div>\n                    <label htmlFor=\"marketCap\" className=\"block text-sm font-medium text-gray-700 mb-1\">Market Cap ($000s)</label>\n                    <input\n                      id=\"marketCap\"\n                      name=\"marketCap\"\n                      type=\"number\"\n                      required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"enterpriseValue\" className=\"block text-sm font-medium text-gray-700 mb-1\">Enterprise Value ($000s)</label>\n                    <input\n                      id=\"enterpriseValue\"\n                      name=\"enterpriseValue\"\n                      type=\"number\"\n                      required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <div>\n                    <label htmlFor=\"revenue\" className=\"block text-sm font-medium text-gray-700 mb-1\">Revenue ($000s)</label>\n                    <input\n                      id=\"revenue\"\n                      name=\"revenue\"\n                      type=\"number\"\n                      required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"ebitda\" className=\"block text-sm font-medium text-gray-700 mb-1\">EBITDA ($000s)</label>\n                    <input\n                      id=\"ebitda\"\n                      name=\"ebitda\"\n                      type=\"number\"\n                      required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label htmlFor=\"businessModel\" className=\"block text-sm font-medium text-gray-700 mb-1\">Business Model</label>\n                  <input\n                    id=\"businessModel\"\n                    name=\"businessModel\"\n                    type=\"text\"\n                    required\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex gap-3 mt-6\">\n                <button type=\"submit\" className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\">\n                  Add Company\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => setShowAddComp(false)}\n                  className=\"flex-1 px-4 py-2 border rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ComparableAnalysis;\n","import { motion, AnimatePresence } from 'framer-motion';\nimport { BarChart3, TrendingUp, AlertTriangle, Play, Square, Settings, Download, FileText, Zap } from 'lucide-react';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ScatterChart, Scatter, Cell, AreaChart, Area } from 'recharts';\n\nimport { monteCarloEngine } from '../../services/monteCarloEngine.js';\n\nconst MonteCarloSimulation = ({ data, onDataChange: _onDataChange }) => {\n  const [activeTab, setActiveTab] = useState('setup');\n  const [simulationResults, setSimulationResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [simulationSettings, setSimulationSettings] = useState({\n    iterations: 10000,\n    confidenceLevel: 0.95,\n    randomSeed: null,\n    enableCorrelation: false\n  });\n\n  const [distributions, setDistributions] = useState({\n    revenueGrowthRate: {\n      type: 'normal',\n      parameters: { mean: 0.1, stdDev: 0.03 },\n      name: 'Revenue Growth Rate',\n      enabled: true\n    },\n    fcfMargin: {\n      type: 'triangular',\n      parameters: { min: 0.12, mode: 0.15, max: 0.18 },\n      name: 'FCF Margin',\n      enabled: true\n    },\n    wacc: {\n      type: 'normal',\n      parameters: { mean: 0.1, stdDev: 0.015 },\n      name: 'WACC',\n      enabled: true\n    },\n    terminalGrowthRate: {\n      type: 'uniform',\n      parameters: { min: 0.02, max: 0.03 },\n      name: 'Terminal Growth Rate',\n      enabled: true\n    }\n  });\n\n  const [correlationMatrix, setCorrelationMatrix] = useState([\n    [1.0, 0.3, -0.2, 0.1],\n    [0.3, 1.0, -0.4, 0.2],\n    [-0.2, -0.4, 1.0, -0.3],\n    [0.1, 0.2, -0.3, 1.0]\n  ]);\n\n  const distributionTypes = [\n    { value: 'normal', label: 'Normal', parameters: ['mean', 'stdDev'] },\n    { value: 'triangular', label: 'Triangular', parameters: ['min', 'mode', 'max'] },\n    { value: 'uniform', label: 'Uniform', parameters: ['min', 'max'] },\n    { value: 'lognormal', label: 'Log-Normal', parameters: ['mu', 'sigma'] },\n    { value: 'beta', label: 'Beta', parameters: ['alpha', 'beta'] }\n  ];\n\n  const runSimulation = useCallback(async() => {\n    try {\n      // Validate data and settings before starting simulation\n\n      setIsRunning(true);\n      setProgress(0);\n\n      const enabledDistributions = Object.fromEntries(\n        Object.entries(distributions).filter(([_, dist]) => dist.enabled)\n      );\n\n      if (Object.keys(enabledDistributions).length === 0) {\n        throw new Error('No distributions are enabled. Please enable at least one variable distribution to run the simulation.');\n      }\n\n      const options = {\n        iterations: simulationSettings.iterations,\n        confidenceLevel: simulationSettings.confidenceLevel,\n        randomSeed: simulationSettings.randomSeed,\n        correlationMatrix: simulationSettings.enableCorrelation ? correlationMatrix : null,\n        onProgress: setProgress\n      };\n\n      // Extract current revenue from actual data structure\n      const statements = data?.statements?.incomeStatement;\n      const latestIndex = data?.periods?.length - 1 || 2;\n      const currentRevenue = statements?.totalRevenue?.[latestIndex] || 1000000;\n      const currentOperatingIncome = statements?.operatingIncome?.[latestIndex] || 150000;\n\n      const baseInputs = {\n        currentRevenue: currentRevenue * 1000, // Convert from thousands to actual values\n        currentPrice: 100, // Default stock price for private company\n        sharesOutstanding: 1000000, // Default shares outstanding\n        currentOperatingIncome: currentOperatingIncome * 1000,\n        ...Object.fromEntries(\n          Object.entries(enabledDistributions).map(([key, dist]) => [\n            key,\n            dist.parameters.mean || dist.parameters.mode || (dist.parameters.min + dist.parameters.max) / 2\n          ])\n        )\n      };\n\n      const results = await monteCarloEngine.runDCFSimulation(\n        baseInputs,\n        enabledDistributions,\n        options\n      );\n\n      setSimulationResults(results);\n    } catch (error) {\n      console.error('Monte Carlo simulation failed:', error);\n      // Show error to user\n      alert(`Monte Carlo simulation failed: ${error.message}`);\n    } finally {\n      setIsRunning(false);\n      setProgress(0);\n    }\n  }, [distributions, simulationSettings, correlationMatrix, data]);\n\n  const stopSimulation = useCallback(() => {\n    monteCarloEngine.stopSimulation();\n    setIsRunning(false);\n  }, []);\n\n  const updateDistribution = useCallback((variable, updates) => {\n    setDistributions(prev => ({\n      ...prev,\n      [variable]: { ...prev[variable], ...updates }\n    }));\n  }, []);\n\n  const updateCorrelation = useCallback((i, j, value) => {\n    setCorrelationMatrix(prev => {\n      const newMatrix = prev.map(row => [...row]);\n      newMatrix[i][j] = value;\n      newMatrix[j][i] = value; // Keep matrix symmetric\n      return newMatrix;\n    });\n  }, []);\n\n  const generateHistogramData = useMemo(() => {\n    if (!simulationResults?.results) return [];\n\n    const values = simulationResults.results.map(r => r.pricePerShare);\n    const bins = 50;\n    const min = Math.min(...values);\n    const max = Math.max(...values);\n    const binWidth = (max - min) / bins;\n\n    const histogram = Array(bins).fill(0).map((_, i) => ({\n      bin: min + i * binWidth,\n      count: 0,\n      frequency: 0\n    }));\n\n    values.forEach(value => {\n      const binIndex = Math.min(Math.floor((value - min) / binWidth), bins - 1);\n      histogram[binIndex].count++;\n    });\n\n    histogram.forEach(bin => {\n      bin.frequency = bin.count / values.length;\n    });\n\n    return histogram;\n  }, [simulationResults]);\n\n  const generateScatterData = useMemo(() => {\n    if (!simulationResults?.results) return [];\n\n    return simulationResults.results.slice(0, 1000).map((result, _i) => ({\n      x: result.inputs.revenueGrowthRate * 100,\n      y: result.pricePerShare,\n      upside: result.upside\n    }));\n  }, [simulationResults]);\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  const _formatPercent = (value) => {\n    return `${(value * 100).toFixed(2)}%`;\n  };\n\n  const tabs = [\n    { id: 'setup', label: 'Setup', icon: Settings },\n    { id: 'run', label: 'Run Simulation', icon: Play },\n    { id: 'results', label: 'Results', icon: BarChart3 },\n    { id: 'analysis', label: 'Analysis', icon: TrendingUp }\n  ];\n\n  return (\n    <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n      <div className=\"mb-6\">\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <h2 className=\"text-2xl font-bold text-white mb-2 flex items-center\">\n            <Zap className=\"inline-block mr-2\" />\n            Monte Carlo Simulation\n          </h2>\n          <p className=\"text-gray-400 text-sm\">\n            Advanced risk analysis using probabilistic modeling • Generate thousands of scenarios • Measure uncertainty\n          </p>\n        </motion.div>\n      </div>\n\n      <div className=\"mb-6\">\n        <div className=\"flex space-x-2\">\n          {tabs.map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`px-4 py-2 rounded-lg font-medium transition-colors flex items-center gap-2 ${\n                  activeTab === tab.id\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                }`}\n              >\n                <Icon size={16} />\n                {tab.label}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"mt-6\">\n        <AnimatePresence mode=\"wait\">\n          {activeTab === 'setup' && (\n            <motion.div\n              key=\"setup\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"space-y-6\">\n                <div className=\"bg-gray-700 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n                    🎛️ Simulation Settings\n                  </h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"iterations\" className=\"block text-sm font-medium text-gray-200\">Iterations</label>\n                      <input\n                        id=\"iterations\"\n                        type=\"number\"\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.iterations}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          iterations: parseInt(e.target.value)\n                        }))}\n                        min=\"1000\"\n                        max=\"100000\"\n                        step=\"1000\"\n                      />\n                      <small className=\"text-gray-400\">Leave empty for random</small>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"confidenceLevel\" className=\"block text-sm font-medium text-gray-200\">Confidence Level</label>\n                      <select\n                        id=\"confidenceLevel\"\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.confidenceLevel}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          confidenceLevel: parseFloat(e.target.value)\n                        }))}\n                      >\n                        <option value={0.90}>90%</option>\n                        <option value={0.95}>95%</option>\n                        <option value={0.99}>99%</option>\n                      </select>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"randomSeed\" className=\"block text-sm font-medium text-gray-200\">Random Seed (Optional)</label>\n                      <input\n                        id=\"randomSeed\"\n                        type=\"number\"\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.randomSeed || ''}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          randomSeed: e.target.value ? parseInt(e.target.value) : null\n                        }))}\n                        placeholder=\"Leave empty for random\"\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label className=\"flex items-center space-x-2 text-gray-200\">\n                        <input\n                          type=\"checkbox\"\n                          className=\"w-4 h-4 text-blue-600 bg-gray-800 border-gray-600 rounded focus:ring-blue-500\"\n                          checked={simulationSettings.enableCorrelation}\n                          onChange={(e) => setSimulationSettings(prev => ({\n                            ...prev,\n                            enableCorrelation: e.target.checked\n                          }))}\n                        />\n                        <span>Enable Variable Correlation</span>\n                      </label>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-700 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n                    📊 Variable Distributions\n                  </h3>\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                    {Object.entries(distributions).map(([variable, dist]) => (\n                      <div key={variable} className=\"bg-gray-800 border border-gray-600 rounded-lg p-4\">\n                        <div className=\"flex items-center justify-between mb-3\">\n                          <label className=\"flex items-center space-x-2 text-gray-200\">\n                            <input\n                              type=\"checkbox\"\n                              checked={dist.enabled}\n                              onChange={(e) => updateDistribution(variable, { enabled: e.target.checked })}\n                            />\n                            <span className=\"font-medium\">{dist.name}</span>\n                          </label>\n                        </div>\n\n                        {dist.enabled && (\n                          <div className=\"space-y-3\">\n                            <div className=\"space-y-2\">\n                              <label htmlFor=\"distributionType\" className=\"block text-sm font-medium text-gray-200\">Distribution Type</label>\n                              <select\n                                id=\"distributionType\"\n                                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                                value={dist.type}\n                                onChange={(e) => {\n                                  const newType = e.target.value;\n                                  const _typeConfig = distributionTypes.find(t => t.value === newType);\n                                  const newParameters = {};\n\n                                  // Set default parameters for new type\n                                  if (newType === 'normal') {\n                                    newParameters.mean = 0.1;\n                                  } else if (newType === 'triangular') {\n                                    newParameters.min = 0.05;\n                                    newParameters.mode = 0.1;\n                                    newParameters.max = 0.15;\n                                  } else if (newType === 'uniform') {\n                                    newParameters.min = 0.05;\n                                    newParameters.max = 0.15;\n                                  }\n\n                                  updateDistribution(variable, { type: newType, parameters: newParameters });\n                                }}\n                              >\n                                {distributionTypes.map((type, _index) => (\n                                  <option key={type.value} value={type.value}>\n                                    {type.label}\n                                  </option>\n                                ))}\n                              </select>\n                            </div>\n\n                            <div className=\"grid grid-cols-2 gap-3\">\n                              {distributionTypes\n                                .find(t => t.value === dist.type)\n                                ?.parameters.map(param => (\n                                  <div key={param} className=\"space-y-1\">\n                                    <label className=\"block text-xs font-medium text-gray-300\">{param.charAt(0).toUpperCase() + param.slice(1)}</label>\n                                    <input\n                                      className=\"w-full px-2 py-1 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                                      type=\"number\"\n                                      value={dist.parameters[param] || ''}\n                                      onChange={(e) => updateDistribution(variable, {\n                                        parameters: {\n                                          ...dist.parameters,\n                                          [param]: parseFloat(e.target.value)\n                                        }\n                                      })}\n                                      step=\"0.001\"\n                                    />\n                                  </div>\n                                ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {simulationSettings.enableCorrelation && (\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">🔗 Correlation Matrix</h3>\n                    <div className=\"overflow-x-auto\">\n                      <table>\n                        <thead>\n                          <tr>\n                            <th />\n                            {Object.keys(distributions).map(variable => (\n                              <th key={variable}>{distributions[variable].name}</th>\n                            ))}\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.keys(distributions).map((variable, i) => (\n                            <tr key={variable}>\n                              <td className=\"font-medium text-gray-200 p-2 border border-gray-600\">\n                                {distributions.map((dist, _index) => (\n                                  <span key={_index}>{dist.name}</span>\n                                ))}\n                              </td>\n                              {Object.keys(distributions).map((_, j) => (\n                                <td key={j} className=\"p-2 border border-gray-600\">\n                                  <input\n                                    type=\"number\"\n                                    value={correlationMatrix[i][j]}\n                                    onChange={(e) => updateCorrelation(i, j, parseFloat(e.target.value))}\n                                    min=\"-1\"\n                                    max=\"1\"\n                                    step=\"0.1\"\n                                    disabled={i === j}\n                                    className=\"w-full px-2 py-1 bg-gray-800 border border-gray-600 rounded text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 disabled:bg-gray-700 disabled:text-gray-400\"\n                                  />\n                                </td>\n                              ))}\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'run' && (\n            <motion.div\n              key=\"run\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                  <h3>🚀 Simulation Control</h3>\n                  <div className=\"flex items-center space-x-2\">\n                    {!isRunning ? (\n                      <button\n                        onClick={runSimulation}\n                        className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\"\n                        disabled={Object.values(distributions).every(d => !d.enabled)}\n                      >\n                        <Play size={16} />\n                        <span>Run Simulation</span>\n                      </button>\n                    ) : (\n                      <button\n                        onClick={stopSimulation}\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\"\n                      >\n                        <Square size={16} />\n                        <span>Stop Simulation</span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n\n                {isRunning && (\n                  <div className=\"mt-4\">\n                    <div className=\"w-full bg-gray-700 rounded-full h-2 mb-2\">\n                      <div\n                        className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n                        style={{ width: `${progress}%` }}\n                      />\n                    </div>\n                    <div className=\"text-sm text-gray-400 text-center\">\n                      {progress.toFixed(1)}% Complete ({Math.floor(progress * simulationSettings.iterations / 100)} / {simulationSettings.iterations} iterations)\n                    </div>\n                  </div>\n                )}\n\n                <div className=\"bg-gray-800 rounded-lg p-4 mt-4\">\n                  <h4 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📋 Simulation Preview</h4>\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Iterations</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {simulationSettings.iterations.toLocaleString()}\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Variables</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {Object.values(distributions).filter(d => d.enabled).length}\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Confidence Level</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {(simulationSettings.confidenceLevel * 100).toFixed(0)}%\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Correlation</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {simulationSettings.enableCorrelation ? 'Enabled' : 'Disabled'}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'results' && (\n            <motion.div\n              key=\"results\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              {simulationResults ? (\n                <div className=\"space-y-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-xl font-semibold text-white flex items-center\">📊 Simulation Results</h3>\n                    <div className=\"flex items-center space-x-2\">\n                      <button className=\"bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\">\n                        <Download size={16} />\n                        Export Results\n                      </button>\n                      <button className=\"bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\">\n                        <FileText size={16} />\n                        Generate Report\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    {Object.entries(simulationResults.analysis.statistics).map(([metric, stats]) => (\n                      <div key={metric} className=\"bg-gray-700 rounded-lg p-4\">\n                        <h4 className=\"text-lg font-semibold text-white mb-3\">\n                          {metric === 'pricePerShare' ? '💰 Price per Share' :\n                            metric === 'enterpriseValue' ? '🏢 Enterprise Value' :\n                              '📈 Upside %'}\n                        </h4>\n                        <div className=\"text-2xl font-bold text-green-400 mb-2\">\n                          {metric === 'upside'\n                            ? `${stats.mean.toFixed(1)}%`\n                            : formatCurrency(stats.mean)\n                          }\n                        </div>\n                        <div className=\"space-y-1 text-sm text-gray-300\">\n                          <div>Median: {metric === 'upside' ? `${stats.median.toFixed(1)}%` : formatCurrency(stats.median)}</div>\n                          <div>Std Dev: {metric === 'upside' ? `${stats.stdDev.toFixed(1)}%` : formatCurrency(stats.stdDev)}</div>\n                          <div>Min: {metric === 'upside' ? `${stats.min.toFixed(1)}%` : formatCurrency(stats.min)}</div>\n                          <div>Max: {metric === 'upside' ? `${stats.max.toFixed(1)}%` : formatCurrency(stats.max)}</div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div className=\"bg-gray-700 rounded-lg p-4\">\n                      <h4>📊 Price Distribution</h4>\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <AreaChart data={generateHistogramData}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis\n                            dataKey=\"bin\"\n                            tickFormatter={formatCurrency}\n                          />\n                          <YAxis />\n                          <Tooltip\n                            formatter={(value, _name) => [\n                              `${(value * 100).toFixed(2)}%`,\n                              'Frequency'\n                            ]}\n                            labelFormatter={(value) => `Price: ${formatCurrency(value)}`}\n                          />\n                          <Area\n                            type=\"monotone\"\n                            dataKey=\"frequency\"\n                            stroke=\"#3B82F6\"\n                            fill=\"#3B82F6\"\n                            fillOpacity={0.6}\n                          />\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </div>\n\n                    <div className=\"bg-gray-700 rounded-lg p-4\">\n                      <h4>🎯 Sensitivity Scatter Plot</h4>\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <ScatterChart data={generateScatterData}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis\n                            dataKey=\"x\"\n                            name=\"Revenue Growth Rate\"\n                            tickFormatter={(value) => `${value.toFixed(1)}%`}\n                          />\n                          <YAxis\n                            dataKey=\"y\"\n                            name=\"Price per Share\"\n                            tickFormatter={formatCurrency}\n                          />\n                          <Tooltip\n                            formatter={(value, name) => [\n                              name === 'Revenue Growth Rate' ? `${value.toFixed(2)}%` : formatCurrency(value),\n                              name\n                            ]}\n                          />\n                          <Scatter name=\"Scenarios\" fill=\"#10B981\">\n                            {generateScatterData.map((entry, index) => (\n                              <Cell\n                                key={`cell-${index}`}\n                                fill={entry.upside > 0 ? '#10B981' : '#EF4444'}\n                              />\n                            ))}\n                          </Scatter>\n                        </ScatterChart>\n                      </ResponsiveContainer>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n                  <AlertTriangle size={48} className=\"text-gray-400 mb-4\" />\n                  <h3 className=\"text-xl font-semibold text-white mb-2\">No Results Available</h3>\n                  <p className=\"text-gray-400\">Run a simulation to see results here.</p>\n                </div>\n              )}\n            </motion.div>\n          )}\n\n          {activeTab === 'analysis' && (\n            <motion.div\n              key=\"analysis\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              {simulationResults?.analysis ? (\n                <div className=\"space-y-6\">\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">⚠️ Risk Metrics</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                      {Object.entries(simulationResults.analysis.riskMetrics).map(([metric, value]) => (\n                        <div key={metric} className=\"bg-gray-800 rounded-lg p-4 border border-gray-600\">\n                          <h4 className=\"text-sm font-medium text-gray-300 mb-2\">{metric === 'var95' ? 'Value at Risk (95%)' :\n                            metric === 'cvar95' ? 'Conditional VaR (95%)' :\n                              metric === 'probabilityOfLoss' ? 'Probability of Loss' :\n                                'Sharpe Ratio'}\n                          </h4>\n                          <div className=\"text-xl font-bold text-red-400 mb-1\">\n                            {metric === 'probabilityOfLoss' ? `${(value * 100).toFixed(1)}%` : formatCurrency(value)}\n                          </div>\n                          <div className=\"text-xs text-gray-400\">\n                            Risk measure\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📊 Confidence Intervals ({(simulationResults.analysis.confidenceIntervals.pricePerShare?.level * 100).toFixed(0)}%)</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      {Object.entries(simulationResults.analysis.confidenceIntervals).map(([metric, interval]) => (\n                        <div key={metric} className=\"bg-gray-800 rounded-lg p-4 border border-gray-600\">\n                          <h4 className=\"text-lg font-semibold text-white mb-3\">{metric === 'pricePerShare' ? 'Price per Share' :\n                            metric === 'enterpriseValue' ? 'Enterprise Value' :\n                              'Upside %'}\n                          </h4>\n                          <div className=\"space-y-3\">\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Lower Bound:</span>\n                              <span className=\"font-medium text-white\">{metric === 'upside' ? `${interval.lowerBound.toFixed(1)}%` : formatCurrency(interval.lowerBound)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Upper Bound:</span>\n                              <span className=\"font-medium text-white\">{metric === 'upside' ? `${interval.upperBound.toFixed(1)}%` : formatCurrency(interval.upperBound)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Width:</span>\n                              <span className=\"font-medium text-blue-400\">{metric === 'upside' ? `${interval.width.toFixed(1)}%` : formatCurrency(interval.width)}</span>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📊 Percentile Analysis</h3>\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"w-full\">\n                        <thead>\n                          <tr className=\"border-b border-gray-600\">\n                            <th className=\"text-left p-3 text-sm font-medium text-gray-300\">Metric</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">5th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">25th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">50th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">75th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">95th %ile</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.entries(simulationResults.analysis.percentiles).map(([metric, percentiles]) => (\n                            <tr key={metric} className=\"border-b border-gray-600\">\n                              <td className=\"p-3 text-sm text-white\">{metric === 'pricePerShare' ? 'Price per Share' :\n                                metric === 'enterpriseValue' ? 'Enterprise Value' :\n                                  'Upside %'}\n                              </td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p5.toFixed(1)}%` : formatCurrency(percentiles.p5)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p25.toFixed(1)}%` : formatCurrency(percentiles.p25)}</td>\n                              <td className=\"p-3 text-sm text-right text-blue-400 font-medium\">{metric === 'upside' ? `${percentiles.p50.toFixed(1)}%` : formatCurrency(percentiles.p50)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p75.toFixed(1)}%` : formatCurrency(percentiles.p75)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p95.toFixed(1)}%` : formatCurrency(percentiles.p95)}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n                  <AlertTriangle size={48} className=\"text-gray-400 mb-4\" />\n                  <h3 className=\"text-xl font-semibold text-white mb-2\">No Analysis Available</h3>\n                  <p className=\"text-gray-400\">Run a simulation to see analysis here.</p>\n                </div>\n              )}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\nexport default MonteCarloSimulation;\n","import { motion } from 'framer-motion';\nimport {\n  TrendingUp,\n  TrendingDown,\n  BarChart3,\n  Plus,\n  Minus,\n  Trash2\n} from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst ScenarioModeling = ({ data, modelInputs, onModelInputChange, calculateDCF, formatCurrency, formatPercent }) => {\n  const [showAddForm, setShowAddForm] = useState(false);\n\n  const scenarios = modelInputs.scenario?.scenarios || [];\n\n  // Calculate DCF for each scenario\n  const scenarioResults = useMemo(() => {\n    return scenarios.map(scenario => {\n      try {\n        // Apply scenario assumptions to base DCF calculation\n        const incomeStatement = { ...data.statements.incomeStatement };\n\n        // Apply revenue growth to revenue data (object format)\n        const baseRevenue = incomeStatement.totalRevenue || {};\n        const modifiedRevenue = {};\n        Object.keys(baseRevenue).forEach(periodIndex => {\n          const index = parseInt(periodIndex);\n          if (index === 0) {\n            modifiedRevenue[periodIndex] = baseRevenue[periodIndex]; // Base year unchanged\n          } else {\n            // Apply revenue growth for projection years\n            const growthRate = 1 + (scenario.revenueGrowth / 100);\n            modifiedRevenue[periodIndex] = baseRevenue[0] * Math.pow(growthRate, index);\n          }\n        });\n\n        // Apply margin improvement to operating income\n        const baseOperating = incomeStatement.operatingIncome || {};\n        const modifiedOperating = {};\n        Object.keys(baseOperating).forEach(periodIndex => {\n          const index = parseInt(periodIndex);\n          if (index === 0) {\n            modifiedOperating[periodIndex] = baseOperating[periodIndex]; // Base year unchanged\n          } else {\n            // Apply margin improvement\n            const baseRevenueValue = baseRevenue[periodIndex] || 0;\n            const scenarioRevenue = modifiedRevenue[periodIndex] || 0;\n            const baseIncome = baseOperating[periodIndex] || 0;\n\n            if (baseRevenueValue > 0) {\n              const baseMargin = baseIncome / baseRevenueValue;\n              const adjustedMargin = baseMargin + (scenario.marginImprovement / 100);\n              modifiedOperating[periodIndex] = scenarioRevenue * adjustedMargin;\n            } else {\n              modifiedOperating[periodIndex] = baseIncome;\n            }\n          }\n        });\n\n        const scenarioData = {\n          ...data,\n          statements: {\n            ...data.statements,\n            incomeStatement: {\n              ...incomeStatement,\n              totalRevenue: modifiedRevenue,\n              operatingIncome: modifiedOperating\n            }\n          }\n        };\n\n        // Calculate DCF with scenario data\n        const dcfResult = calculateDCF(scenarioData);\n\n        return {\n          ...scenario,\n          ...dcfResult,\n          weightedValue: dcfResult.enterpriseValue * (scenario.probability / 100)\n        };\n      } catch (error) {\n        console.error('Scenario calculation error:', error);\n        return {\n          ...scenario,\n          enterpriseValue: 0,\n          equityValue: 0,\n          weightedValue: 0\n        };\n      }\n    });\n  }, [scenarios, data, calculateDCF]);\n\n  // Calculate probability-weighted average\n  const weightedAverageValue = scenarioResults.reduce((sum, result) => sum + result.weightedValue, 0);\n\n  const addScenario = () => {\n    const newScenario = {\n      name: `Scenario ${scenarios.length + 1}`,\n      probability: Math.max(0, 100 - scenarios.reduce((sum, s) => sum + s.probability, 0)),\n      revenueGrowth: 10,\n      marginImprovement: 0\n    };\n\n    onModelInputChange('scenario', 'scenarios', [...scenarios, newScenario]);\n    setShowAddForm(false);\n  };\n\n  const updateScenario = (index, field, value) => {\n    const updatedScenarios = scenarios.map((scenario, i) =>\n      i === index ? { ...scenario, [field]: value } : scenario\n    );\n    onModelInputChange('scenario', 'scenarios', updatedScenarios);\n  };\n\n  const deleteScenario = (index) => {\n    const updatedScenarios = scenarios.filter((_, i) => i !== index);\n    onModelInputChange('scenario', 'scenarios', updatedScenarios);\n  };\n\n  const ScenarioForm = ({ scenario, index }) => (\n    <div className=\"border rounded-lg p-4 bg-white\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <div>\n          <label htmlFor={`scenario-name-${index}`} className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Scenario Name\n          </label>\n          <input\n            id={`scenario-name-${index}`}\n            type=\"text\"\n            value={scenario.name}\n            onChange={(e) => updateScenario(index, 'name', e.target.value)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"Enter scenario name\"\n          />\n        </div>\n\n        <div>\n          <label htmlFor={`scenario-probability-${index}`} className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Probability (%)\n          </label>\n          <input\n            id={`scenario-probability-${index}`}\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            value={scenario.probability}\n            onChange={(e) => updateScenario(index, 'probability', parseInt(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label htmlFor={`scenario-revenueGrowth-${index}`} className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Revenue Growth (%)\n          </label>\n          <input\n            id={`scenario-revenueGrowth-${index}`}\n            type=\"number\"\n            step=\"0.1\"\n            value={scenario.revenueGrowth}\n            onChange={(e) => updateScenario(index, 'revenueGrowth', parseFloat(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label htmlFor={`scenario-marginImprovement-${index}`} className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Margin Change (%)\n          </label>\n          <input\n            id={`scenario-marginImprovement-${index}`}\n            type=\"number\"\n            step=\"0.1\"\n            value={scenario.marginImprovement}\n            onChange={(e) => updateScenario(index, 'marginImprovement', parseFloat(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n      </div>\n\n      <div className=\"flex justify-end mt-4 gap-2\">\n        <button\n          onClick={() => deleteScenario(index)}\n          className=\"px-3 py-1 text-red-600 hover:bg-red-50 rounded-lg transition-colors flex items-center gap-1\"\n        >\n          <Trash2 size={16} />\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with Add Button */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <p className=\"text-gray-600\">\n            Create and compare multiple financial scenarios with different assumptions and probabilities.\n          </p>\n        </div>\n        <button\n          onClick={() => setShowAddForm(true)}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n        >\n          <Plus size={16} />\n          Add Scenario\n        </button>\n      </div>\n\n      {/* Scenario Management */}\n      <div className=\"space-y-4\">\n        <h4 className=\"font-semibold text-lg\">Scenario Assumptions</h4>\n\n        {scenarios.map((scenario, index) => (\n          <ScenarioForm key={index} scenario={scenario} index={index} />\n        ))}\n\n        {showAddForm && (\n          <div className=\"border-2 border-dashed border-blue-300 rounded-lg p-4\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h5 className=\"font-medium\">Add New Scenario</h5>\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={addScenario}\n                  className=\"px-3 py-1 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n                >\n                  Add\n                </button>\n                <button\n                  onClick={() => setShowAddForm(false)}\n                  className=\"px-3 py-1 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Results Display */}\n      {scenarioResults.length > 0 && (\n        <div className=\"space-y-6\">\n          <h4 className=\"font-semibold text-lg\">Scenario Analysis Results</h4>\n\n          {/* Probability-Weighted Summary */}\n          <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6 border border-blue-200\">\n            <div className=\"flex items-center gap-2 mb-4\">\n              <BarChart3 size={20} className=\"text-blue-600\" />\n              <h5 className=\"font-semibold text-blue-800\">Probability-Weighted Valuation</h5>\n            </div>\n            <div className=\"text-3xl font-bold text-blue-800\">\n              {formatCurrency(weightedAverageValue)}\n            </div>\n            <p className=\"text-sm text-blue-600 mt-2\">\n              Expected value based on scenario probabilities\n            </p>\n          </div>\n\n          {/* Individual Scenario Results */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">\n            {scenarioResults.map((result, index) => (\n              <motion.div\n                key={index}\n                className=\"bg-white rounded-lg border p-4 hover:shadow-lg transition-shadow\"\n                whileHover={{ y: -2 }}\n              >\n                <div className=\"flex items-start justify-between mb-3\">\n                  <div>\n                    <h6 className=\"font-semibold text-gray-800\">{result.name}</h6>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span>{result.probability}% probability</span>\n                      {result.revenueGrowth > 15 ?\n                        <TrendingUp size={14} className=\"text-green-500\" /> :\n                        result.revenueGrowth < 5 ?\n                          <TrendingDown size={14} className=\"text-red-500\" /> :\n                          <Minus size={14} className=\"text-gray-500\" />\n                      }\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"space-y-3\">\n                  <div className=\"p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Enterprise Value</div>\n                    <div className=\"text-xl font-bold text-gray-800\">\n                      {formatCurrency(result.enterpriseValue)}\n                    </div>\n                  </div>\n\n                  <div className=\"text-xs space-y-1 text-gray-600\">\n                    <div className=\"flex justify-between\">\n                      <span>Revenue Growth:</span>\n                      <span className=\"font-medium\">{formatPercent(result.revenueGrowth)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Margin Change:</span>\n                      <span className={`font-medium ${result.marginImprovement >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {result.marginImprovement >= 0 ? '+' : ''}{formatPercent(result.marginImprovement)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Weighted Value:</span>\n                      <span className=\"font-medium\">{formatCurrency(result.weightedValue)}</span>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n\n          {/* Summary Statistics */}\n          <div className=\"bg-white rounded-lg border p-6\">\n            <h5 className=\"font-semibold mb-4\">Scenario Statistics</h5>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {formatCurrency(Math.max(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Best Case</div>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-red-600\">\n                  {formatCurrency(Math.min(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Worst Case</div>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  {formatCurrency(weightedAverageValue)}\n                </div>\n                <div className=\"text-sm text-gray-600\">Expected Value</div>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-gray-800\">\n                  {formatCurrency(Math.max(...scenarioResults.map(r => r.enterpriseValue)) - Math.min(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Value Range</div>\n              </div>\n            </div>\n\n            <div className=\"mt-4 pt-4 border-t\">\n              <div className=\"text-sm text-gray-600\">\n                <strong>Total Probability:</strong> {scenarios.reduce((sum, s) => sum + s.probability, 0)}%\n                {scenarios.reduce((sum, s) => sum + s.probability, 0) !== 100 && (\n                  <span className=\"text-orange-600 ml-2\">⚠ Probabilities should sum to 100%</span>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {scenarios.length === 0 && (\n        <div className=\"text-center py-12 text-gray-500\">\n          <BarChart3 size={48} className=\"mx-auto mb-4 opacity-50\" />\n          <p>No scenarios created yet.</p>\n          <p className=\"text-sm mt-2\">Click &ldquo;Add Scenario&rdquo; to get started with scenario modeling.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScenarioModeling;\n","import { Activity, Settings, BarChart3, Plus, Minus } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst SensitivityAnalysis = ({ data, modelInputs, onModelInputChange, calculateDCF, formatCurrency, _formatPercent }) => {\n  const [selectedVariable, _setSelectedVariable] = useState(null);\n\n  const sensitivityConfig = modelInputs.sensitivity || {\n    variables: ['revenue', 'grossMargin', 'discountRate'],\n    ranges: {\n      revenue: { min: -20, max: 20 },\n      grossMargin: { min: -5, max: 5 },\n      discountRate: { min: 8, max: 15 }\n    }\n  };\n\n  // Variable definitions with display names and units\n  const variableDefinitions = {\n    revenue: {\n      name: 'Revenue Growth',\n      unit: '%',\n      description: 'Annual revenue growth rate',\n      baseValue: 15,\n      isPercentage: true\n    },\n    grossMargin: {\n      name: 'Gross Margin',\n      unit: '%',\n      description: 'Gross profit margin improvement',\n      baseValue: 45,\n      isPercentage: true\n    },\n    discountRate: {\n      name: 'Discount Rate (WACC)',\n      unit: '%',\n      description: 'Weighted average cost of capital',\n      baseValue: modelInputs.dcf?.discountRate || 10,\n      isPercentage: true\n    },\n    terminalGrowthRate: {\n      name: 'Terminal Growth Rate',\n      unit: '%',\n      description: 'Long-term growth rate assumption',\n      baseValue: modelInputs.dcf?.terminalGrowthRate || 2.5,\n      isPercentage: true\n    },\n    taxRate: {\n      name: 'Tax Rate',\n      unit: '%',\n      description: 'Corporate tax rate',\n      baseValue: modelInputs.dcf?.taxRate || 25,\n      isPercentage: true\n    }\n  };\n\n  // Calculate base case valuation\n  const baseValuation = useMemo(() => {\n    return calculateDCF();\n  }, [data, modelInputs, calculateDCF]);\n\n  // Generate sensitivity analysis data\n  const sensitivityResults = useMemo(() => {\n    const results = {};\n\n    sensitivityConfig.variables.forEach(variable => {\n      const range = sensitivityConfig.ranges[variable];\n      const variableDef = variableDefinitions[variable];\n\n      if (!range || !variableDef) return;\n\n      const steps = 9; // Number of data points\n      const stepSize = (range.max - range.min) / (steps - 1);\n      const dataPoints = [];\n\n      for (let i = 0; i < steps; i++) {\n        const value = range.min + (stepSize * i);\n\n        // Create modified DCF inputs based on variable type\n        let modifiedData = { ...data };\n        const dcfInputs = {\n          ...modelInputs.dcf,\n          [variable]: variableDef.isPercentage ? value : value\n        };\n\n        // For revenue and margin variables, we need to simulate the impact\n        if (variable === 'revenue' || variable === 'grossMargin') {\n          // Create a copy of the income statement with modified values\n          const incomeStatement = { ...data.statements.incomeStatement };\n\n          if (variable === 'revenue') {\n            // Apply revenue growth change across periods\n            const baseRevenue = incomeStatement.totalRevenue || {};\n            const modifiedRevenue = {};\n\n            Object.keys(baseRevenue).forEach(periodIndex => {\n              const index = parseInt(periodIndex);\n              if (index === 0) {\n                modifiedRevenue[periodIndex] = baseRevenue[periodIndex];\n              } else {\n                const growthRate = 1 + (value / 100);\n                modifiedRevenue[periodIndex] = baseRevenue[0] * Math.pow(growthRate, index);\n              }\n            });\n\n            incomeStatement.totalRevenue = modifiedRevenue;\n          }\n\n          if (variable === 'grossMargin') {\n            // Apply margin change to operating income\n            const baseOperating = incomeStatement.operatingIncome || {};\n            const baseRevenue = incomeStatement.totalRevenue || {};\n            const modifiedOperating = {};\n\n            Object.keys(baseOperating).forEach(periodIndex => {\n              const revenue = baseRevenue[periodIndex] || 0;\n              const originalIncome = baseOperating[periodIndex] || 0;\n              if (revenue > 0) {\n                const baseMargin = originalIncome / revenue;\n                const adjustedMargin = baseMargin + (value / 100);\n                modifiedOperating[periodIndex] = revenue * adjustedMargin;\n              } else {\n                modifiedOperating[periodIndex] = originalIncome;\n              }\n            });\n\n            incomeStatement.operatingIncome = modifiedOperating;\n          }\n\n          modifiedData = {\n            ...data,\n            statements: {\n              ...data.statements,\n              incomeStatement\n            }\n          };\n        }\n\n        // Use a temporary calculateDCF with modified inputs\n        const tempCalculateDCF = () => {\n          try {\n            const dcfParams = {\n              discountRate: dcfInputs.discountRate || 10,\n              terminalGrowthRate: dcfInputs.terminalGrowthRate || 2.5,\n              projectionYears: dcfInputs.projectionYears || 5,\n              taxRate: dcfInputs.taxRate || 25\n            };\n\n            const sourceData = modifiedData;\n            const operatingIncomeData = sourceData.statements.incomeStatement.operatingIncome || {};\n\n            // Extract operating incomes from object structure\n            const operatingIncomes = [];\n            Object.keys(operatingIncomeData).forEach(periodKey => {\n              const index = parseInt(periodKey);\n              if (index >= 0) {\n                operatingIncomes.push(operatingIncomeData[periodKey] || 0);\n              }\n            });\n\n            if (operatingIncomes.length === 0) return { enterpriseValue: 0, equityValue: 0 };\n\n            let presentValue = 0;\n            const discountFactor = 1 + (dcfParams.discountRate / 100);\n\n            // Use available periods for projections\n            operatingIncomes.forEach((income, index) => {\n              if (index > 0 && index <= dcfParams.projectionYears) {\n                const afterTaxIncome = income * (1 - dcfParams.taxRate / 100);\n                const pv = afterTaxIncome / Math.pow(discountFactor, index);\n                presentValue += pv;\n              }\n            });\n\n            const lastYearIncome = operatingIncomes[operatingIncomes.length - 1] || 0;\n            const terminalCashFlow = lastYearIncome * (1 + dcfParams.terminalGrowthRate / 100) * (1 - dcfParams.taxRate / 100);\n            const terminalValue = terminalCashFlow / ((dcfParams.discountRate - dcfParams.terminalGrowthRate) / 100);\n            const presentTerminalValue = terminalValue / Math.pow(discountFactor, dcfParams.projectionYears);\n\n            const enterpriseValue = presentValue + presentTerminalValue;\n\n            return {\n              enterpriseValue,\n              equityValue: enterpriseValue,\n              presentValueOperations: presentValue,\n              presentValueTerminal: presentTerminalValue,\n              terminalValue\n            };\n          } catch (error) {\n            console.error('DCF calculation error:', error);\n            return { enterpriseValue: 0, equityValue: 0 };\n          }\n        };\n\n        const result = tempCalculateDCF();\n\n        dataPoints.push({\n          variable: value,\n          valuation: result.enterpriseValue,\n          changeFromBase: ((result.enterpriseValue - baseValuation.enterpriseValue) / baseValuation.enterpriseValue) * 100\n        });\n      }\n\n      results[variable] = {\n        definition: variableDef,\n        range,\n        dataPoints\n      };\n    });\n\n    return results;\n  }, [data, modelInputs, sensitivityConfig, baseValuation, calculateDCF]);\n\n  // Tornado chart data (impact ranking)\n  const tornadoData = useMemo(() => {\n    return Object.entries(sensitivityResults).map(([variable, result]) => {\n      const maxImpact = Math.max(...result.dataPoints.map(d => Math.abs(d.changeFromBase)));\n      return {\n        variable,\n        definition: result.definition,\n        maxImpact,\n        positiveImpact: Math.max(...result.dataPoints.map(d => d.changeFromBase)),\n        negativeImpact: Math.min(...result.dataPoints.map(d => d.changeFromBase))\n      };\n    }).sort((a, b) => b.maxImpact - a.maxImpact);\n  }, [sensitivityResults]);\n\n  const updateSensitivityRange = (variable, field, value) => {\n    const updatedRanges = {\n      ...sensitivityConfig.ranges,\n      [variable]: {\n        ...sensitivityConfig.ranges[variable],\n        [field]: parseFloat(value)\n      }\n    };\n    onModelInputChange('sensitivity', 'ranges', updatedRanges);\n  };\n\n  const addVariable = (variableName) => {\n    if (!sensitivityConfig.variables.includes(variableName) && variableDefinitions[variableName]) {\n      const updatedVariables = [...sensitivityConfig.variables, variableName];\n      const updatedRanges = {\n        ...sensitivityConfig.ranges,\n        [variableName]: { min: -10, max: 10 }\n      };\n      onModelInputChange('sensitivity', 'variables', updatedVariables);\n      onModelInputChange('sensitivity', 'ranges', updatedRanges);\n    }\n  };\n\n  const removeVariable = (variableName) => {\n    const updatedVariables = sensitivityConfig.variables.filter(v => v !== variableName);\n    const { [variableName]: _removed, ...updatedRanges } = sensitivityConfig.ranges;\n    onModelInputChange('sensitivity', 'variables', updatedVariables);\n    onModelInputChange('sensitivity', 'ranges', updatedRanges);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <p className=\"text-gray-600 mb-4\">\n            Analyze how changes in key variables impact enterprise valuation.\n            Higher sensitivity indicates greater risk and importance for due diligence.\n          </p>\n          <div className=\"flex items-center gap-4 text-sm\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 bg-blue-500 rounded\" />\n              <span>Base Case: {formatCurrency(baseValuation.enterpriseValue)}</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Activity size={14} />\n              <span>{sensitivityConfig.variables.length} variables analyzed</span>\n            </div>\n          </div>\n        </div>\n        <button\n          className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors flex items-center gap-2\"\n        >\n          <Settings size={16} />\n          Configure\n        </button>\n      </div>\n\n      {/* Tornado Chart */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <h4 className=\"font-semibold text-lg mb-4 flex items-center gap-2\">\n          <BarChart3 size={20} />\n          Impact Ranking (Tornado Chart)\n        </h4>\n\n        <div className=\"space-y-3\">\n          {tornadoData.map((item, index) => (\n            <div key={item.variable} className=\"relative\">\n              <div className=\"flex items-center justify-between mb-1\">\n                <span className=\"text-sm font-medium\">{index + 1}. {item.definition.name}</span>\n                <span className=\"text-xs text-gray-500\">±{item.maxImpact.toFixed(1)}%</span>\n              </div>\n\n              <div className=\"relative h-8 bg-gray-100 rounded\">\n                {/* Negative impact bar */}\n                <div\n                  className=\"absolute left-1/2 h-full bg-red-400 rounded-l\"\n                  style={{\n                    width: `${Math.abs(item.negativeImpact) / Math.max(Math.abs(item.negativeImpact), item.positiveImpact) * 50}%`,\n                    transform: 'translateX(-100%)'\n                  }}\n                />\n\n                {/* Positive impact bar */}\n                <div\n                  className=\"absolute left-1/2 h-full bg-green-400 rounded-r\"\n                  style={{\n                    width: `${item.positiveImpact / Math.max(Math.abs(item.negativeImpact), item.positiveImpact) * 50}%`\n                  }}\n                />\n\n                {/* Center line */}\n                <div className=\"absolute left-1/2 top-0 bottom-0 w-0.5 bg-gray-400 transform -translate-x-0.5\" />\n\n                {/* Labels */}\n                <div className=\"absolute inset-0 flex items-center justify-between px-2 text-xs font-medium text-white\">\n                  <span>{item.negativeImpact.toFixed(1)}%</span>\n                  <span>+{item.positiveImpact.toFixed(1)}%</span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Variable Configuration */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <h4 className=\"font-semibold text-lg mb-4\">Variable Configuration</h4>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {sensitivityConfig.variables.map(variable => {\n            const result = sensitivityResults[variable];\n            if (!result) return null;\n\n            return (\n              <div key={variable} className=\"border rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div>\n                    <h6 className=\"font-medium\">{result.definition.name}</h6>\n                    <p className=\"text-xs text-gray-500\">{result.definition.description}</p>\n                  </div>\n                  <button\n                    onClick={() => removeVariable(variable)}\n                    className=\"text-red-500 hover:bg-red-50 p-1 rounded\"\n                  >\n                    <Minus size={16} />\n                  </button>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-3 mb-3\">\n                  <div>\n                    <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                      Min Value ({result.definition.unit})\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={result.range.min}\n                      onChange={(e) => updateSensitivityRange(variable, 'min', e.target.value)}\n                      className=\"w-full px-2 py-1 border rounded text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                      Max Value ({result.definition.unit})\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={result.range.max}\n                      onChange={(e) => updateSensitivityRange(variable, 'max', e.target.value)}\n                      className=\"w-full px-2 py-1 border rounded text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n\n                {/* Mini chart */}\n                <div className=\"h-16 bg-gray-50 rounded p-2\">\n                  <div className=\"text-xs text-gray-500 mb-1\">Valuation Sensitivity</div>\n                  <div className=\"flex items-end justify-between h-8\">\n                    {result.dataPoints.map((point, index) => (\n                      <div\n                        key={index}\n                        className={`w-1 rounded-t ${\n                          point.changeFromBase > 0 ? 'bg-green-400' :\n                            point.changeFromBase < 0 ? 'bg-red-400' : 'bg-blue-400'\n                        }`}\n                        style={{\n                          height: `${Math.abs(point.changeFromBase) / 50 * 100}%`,\n                          minHeight: '2px'\n                        }}\n                        title={`${point.variable}${result.definition.unit}: ${formatCurrency(point.valuation)}`}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n\n          {/* Add Variable */}\n          <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 flex items-center justify-center\">\n            <div className=\"text-center\">\n              <Plus size={24} className=\"mx-auto mb-2 text-gray-400\" />\n              <p className=\"text-sm text-gray-500 mb-3\">Add Variable</p>\n              <div className=\"space-y-2\">\n                {Object.keys(variableDefinitions)\n                  .filter(v => !sensitivityConfig.variables.includes(v))\n                  .map(variable => (\n                    <button\n                      key={variable}\n                      onClick={() => addVariable(variable)}\n                      className=\"block w-full px-3 py-1 text-xs bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors\"\n                    >\n                      {variableDefinitions[variable].name}\n                    </button>\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Detailed Analysis */}\n      {selectedVariable && sensitivityResults[selectedVariable] && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">\n            Detailed Analysis: {sensitivityResults[selectedVariable].definition.name}\n          </h4>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <div>\n              <h6 className=\"font-medium mb-3\">Data Points</h6>\n              <div className=\"space-y-2 max-h-64 overflow-y-auto\">\n                {sensitivityResults[selectedVariable].dataPoints.map((point, index) => (\n                  <div key={index} className=\"flex justify-between items-center text-sm p-2 bg-gray-50 rounded\">\n                    <span>{point.variable}{sensitivityResults[selectedVariable].definition.unit}</span>\n                    <span className=\"font-medium\">{formatCurrency(point.valuation)}</span>\n                    <span\n                      className={`font-medium ${\n                        point.changeFromBase > 0 ? 'text-green-600' :\n                          point.changeFromBase < 0 ? 'text-red-600' : 'text-gray-600'\n                      }`}\n                    >\n                      {point.changeFromBase > 0 ? '+' : ''}{point.changeFromBase.toFixed(1)}%\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div>\n              <h6 className=\"font-medium mb-3\">Key Statistics</h6>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Range Impact:</span>\n                  <span className=\"font-medium\">\n                    ±{Math.max(...sensitivityResults[selectedVariable].dataPoints.map(d => Math.abs(d.changeFromBase))).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Max Upside:</span>\n                  <span className=\"font-medium text-green-600\">\n                    +{Math.max(...sensitivityResults[selectedVariable].dataPoints.map(d => d.changeFromBase)).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Max Downside:</span>\n                  <span className=\"font-medium text-red-600\">\n                    {Math.min(...sensitivityResults[selectedVariable].dataPoints.map(d => d.changeFromBase)).toFixed(1)}%\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SensitivityAnalysis;\n","import {\n  DollarSign,\n  Target,\n  Activity,\n  BarChart3,\n  Users,\n  Zap\n} from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nimport AdvancedDCF from './AdvancedDCF.jsx';\nimport ComparableAnalysis from './ComparableAnalysis.jsx';\nimport MonteCarloSimulation from './MonteCarloSimulation.jsx';\nimport ScenarioModeling from './ScenarioModeling.jsx';\nimport SensitivityAnalysis from './SensitivityAnalysis.jsx';\n\n// Add contextual integration points for Advanced Analytics\nconst AdvancedAnalyticsIntegration = ({ onOpenOptions, onOpenBonds, onOpenCredit }) => (\n  <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4\">\n    <h4 className=\"font-semibold text-blue-900 mb-2\">Advanced Analytics Tools</h4>\n    <p className=\"text-sm text-blue-700 mb-3\">\n      Send your current analysis assumptions to advanced pricing models:\n    </p>\n    <div className=\"flex flex-wrap gap-2\">\n      <button\n        onClick={onOpenOptions}\n        className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700 transition-colors\"\n      >\n        Options Pricer\n      </button>\n      <button\n        onClick={onOpenBonds}\n        className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700 transition-colors\"\n      >\n        Bond Analytics\n      </button>\n      <button\n        onClick={onOpenCredit}\n        className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700 transition-colors\"\n      >\n        Credit Modeling\n      </button>\n    </div>\n  </div>\n);\n\nconst ModelingTools = ({ data, adjustedValues, onDataChange }) => {\n  const [activeModel, setActiveModel] = useState('dcf');\n\n  // Handlers for Advanced Analytics integration\n  const handleOpenOptions = () => {\n    window.dispatchEvent(new CustomEvent('open-options-pricer'));\n  };\n\n  const handleOpenBonds = () => {\n    window.dispatchEvent(new CustomEvent('open-bond-analytics'));\n  };\n\n  const handleOpenCredit = () => {\n    window.dispatchEvent(new CustomEvent('open-credit-modeling'));\n  };\n  const [modelInputs, setModelInputs] = useState({\n    dcf: {\n      discountRate: 10,\n      terminalGrowthRate: 2.5,\n      projectionYears: 5,\n      terminalValueMultiple: 10,\n      taxRate: 25,\n      sharesOutstanding: 1000,\n      workingCapital: {\n        receivablesDays: 45,\n        inventoryDays: 60,\n        payablesDays: 30,\n        receivablesGrowth: 2,\n        inventoryGrowth: 1.5,\n        payablesGrowth: 1.8\n      },\n      capex: {\n        capexAsPercentOfRevenue: 3.5,\n        depreciationRate: 7,\n        maintenanceCapex: 2.0\n      }\n    },\n    ratios: {\n      compareToIndustry: true,\n      industryAverages: {\n        grossMargin: 45,\n        operatingMargin: 15,\n        netMargin: 8,\n        currentRatio: 2.1,\n        debtToEquity: 0.5\n      }\n    },\n    sensitivity: {\n      variables: ['revenue', 'grossMargin', 'discountRate'],\n      ranges: {\n        revenue: { min: -20, max: 20 },\n        grossMargin: { min: -5, max: 5 },\n        discountRate: { min: 8, max: 15 }\n      }\n    },\n    scenario: {\n      scenarios: [\n        { name: 'Base Case', probability: 50, revenueGrowth: 15, marginImprovement: 0 },\n        { name: 'Bull Case', probability: 25, revenueGrowth: 25, marginImprovement: 2 },\n        { name: 'Bear Case', probability: 25, revenueGrowth: 5, marginImprovement: -2 }\n      ]\n    }\n  });\n\n  // Calculate financial metrics from the spreadsheet data\n  const calculatedMetrics = useMemo(() => {\n    const statements = data.statements.incomeStatement;\n    const periods = data.periods;\n\n    const metrics = {\n      revenue: [],\n      grossProfit: [],\n      operatingIncome: [],\n      margins: {\n        gross: [],\n        operating: [],\n        net: []\n      },\n      growth: {\n        revenue: [],\n        operating: []\n      }\n    };\n\n    periods.forEach((_, index) => {\n      // Revenue metrics - Use adjusted values for latest period when available\n      const isLatestPeriod = index === periods.length - 1;\n      const revenue = isLatestPeriod && adjustedValues?.totalRevenue\n        ? adjustedValues.totalRevenue\n        : statements.totalRevenue?.[index] || 0;\n      const totalCOGS = isLatestPeriod && adjustedValues?.totalCostOfGoodsSold\n        ? adjustedValues.totalCostOfGoodsSold\n        : statements.totalCostOfGoodsSold?.[index] || 0;\n      const grossProfit = isLatestPeriod && adjustedValues?.grossProfit\n        ? adjustedValues.grossProfit\n        : statements.grossProfit?.[index] || (revenue - totalCOGS);\n      const operatingIncome = isLatestPeriod && adjustedValues?.operatingIncome\n        ? adjustedValues.operatingIncome\n        : statements.operatingIncome?.[index] || 0;\n\n      metrics.revenue.push(revenue);\n      metrics.grossProfit.push(grossProfit);\n      metrics.operatingIncome.push(operatingIncome);\n\n      // Margin calculations\n      metrics.margins.gross.push(revenue ? (grossProfit / revenue) * 100 : 0);\n      metrics.margins.operating.push(revenue ? (operatingIncome / revenue) * 100 : 0);\n\n      // Growth calculations\n      if (index > 0) {\n        const prevRevenue = statements.totalRevenue?.[index - 1] || 0;\n        const prevOperating = statements.operatingIncome?.[index - 1] || 0;\n\n        metrics.growth.revenue.push(prevRevenue ? ((revenue - prevRevenue) / prevRevenue) * 100 : 0);\n        metrics.growth.operating.push(prevOperating ? ((operatingIncome - prevOperating) / prevOperating) * 100 : 0);\n      }\n    });\n\n    return metrics;\n  }, [data]);\n\n  // DCF Calculation - Enhanced to work with scenario data\n  const calculateDCF = (inputData = null) => {\n    const { discountRate, terminalGrowthRate, projectionYears, taxRate } = modelInputs.dcf;\n    const sourceData = inputData || data;\n\n    // Use either scenario data or calculated metrics\n    let operatingIncomes;\n    if (inputData) {\n      // For scenario data, extract operating incomes directly\n      operatingIncomes = [];\n      sourceData.periods.forEach((_, index) => {\n        if (index > 0 && index <= projectionYears) {\n          operatingIncomes.push(sourceData.statements.incomeStatement.operatingIncome?.[index] || 0);\n        }\n      });\n    } else {\n      // For regular calculation, use calculated metrics\n      operatingIncomes = calculatedMetrics.operatingIncome.slice(1, projectionYears + 1);\n    }\n\n    if (operatingIncomes.length === 0) return { enterpriseValue: 0, equityValue: 0, sharePrice: 0 };\n\n    let presentValue = 0;\n    const discountFactor = 1 + (discountRate / 100);\n\n    // Calculate present value of cash flows\n    operatingIncomes.forEach((income, index) => {\n      const afterTaxIncome = income * (1 - taxRate / 100);\n      const pv = afterTaxIncome / Math.pow(discountFactor, index + 1);\n      presentValue += pv;\n    });\n\n    // Terminal value\n    const lastYearIncome = operatingIncomes[operatingIncomes.length - 1] || 0;\n    const terminalCashFlow = lastYearIncome * (1 + terminalGrowthRate / 100) * (1 - taxRate / 100);\n    const terminalValue = terminalCashFlow / ((discountRate - terminalGrowthRate) / 100);\n    const presentTerminalValue = terminalValue / Math.pow(discountFactor, projectionYears);\n\n    const enterpriseValue = presentValue + presentTerminalValue;\n\n    return {\n      enterpriseValue,\n      equityValue: enterpriseValue, // Simplified - would subtract net debt\n      presentValueOperations: presentValue,\n      presentValueTerminal: presentTerminalValue,\n      terminalValue\n    };\n  };\n\n  const _dcfResults = calculateDCF();\n\n  const modelTypes = [\n    { id: 'dcf', label: 'DCF Valuation', icon: DollarSign, description: 'Discounted Cash Flow analysis' },\n    { id: 'ratios', label: 'Ratio Analysis', icon: BarChart3, description: 'Financial ratio comparison' },\n    { id: 'sensitivity', label: 'Sensitivity Analysis', icon: Activity, description: 'Variable impact analysis' },\n    { id: 'scenario', label: 'Scenario Modeling', icon: Target, description: 'Multi-scenario projections' },\n    { id: 'comparable', label: 'Comparable Analysis', icon: Users, description: 'Market-based valuation' },\n    { id: 'montecarlo', label: 'Monte Carlo', icon: Zap, description: 'Probabilistic risk analysis' }\n  ];\n\n  const updateModelInput = (modelType, field, value) => {\n    setModelInputs(prev => ({\n      ...prev,\n      [modelType]: {\n        ...prev[modelType],\n        [field]: value\n      }\n    }));\n  };\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value * 1000); // Convert from thousands\n  };\n\n  const formatPercent = (value) => {\n    return `${value.toFixed(1)}%`;\n  };\n\n  return (\n    <div className=\"h-full bg-gray-900 text-white p-6\">\n      {/* Advanced Analytics Integration */}\n      <AdvancedAnalyticsIntegration\n        onOpenOptions={handleOpenOptions}\n        onOpenBonds={handleOpenBonds}\n        onOpenCredit={handleOpenCredit}\n      />\n\n      {/* Streamlined Model Selection */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div>\n            <h2 className=\"text-xl font-semibold text-white\">Financial Modeling</h2>\n            <p className=\"text-gray-400 text-sm mt-1\">Select a modeling approach to analyze your financial data</p>\n          </div>\n        </div>\n\n        <div className=\"flex flex-wrap gap-2 mb-6\">\n          {modelTypes.map((type) => {\n            const Icon = type.icon;\n            return (\n              <button\n                key={type.id}\n                onClick={() => setActiveModel(type.id)}\n                className={`${\n                  activeModel === type.id\n                    ? 'bg-blue-600 text-white border-blue-500 shadow-lg'\n                    : 'bg-gray-800 text-gray-300 border-gray-700 hover:bg-gray-700 hover:text-white hover:border-gray-600'\n                } flex items-center gap-3 px-4 py-3 rounded-lg border transition-all duration-200`}\n              >\n                <Icon size={18} className={activeModel === type.id ? 'text-white' : 'text-blue-400'} />\n                <span className=\"font-medium\">{type.label}</span>\n              </button>\n            );\n          })}\n        </div>\n\n        {/* Active Model Description */}\n        <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\n          <div className=\"flex items-center gap-3\">\n            {React.createElement(modelTypes.find(t => t.id === activeModel)?.icon, {\n              size: 20,\n              className: 'text-blue-400'\n            })}\n            <div>\n              <h3 className=\"font-medium text-white\">\n                {modelTypes.find(t => t.id === activeModel)?.label}\n              </h3>\n              <p className=\"text-gray-400 text-sm\">\n                {modelTypes.find(t => t.id === activeModel)?.description}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Model Content */}\n      <div>\n        {activeModel === 'dcf' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <DollarSign size={20} className=\"text-blue-400\" />\n              DCF Valuation Model\n            </h3>\n\n            <AdvancedDCF\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'ratios' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <BarChart3 size={20} />\n              Financial Ratio Analysis\n            </h3>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {/* Profitability Ratios */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Profitability Ratios</h4>\n                <div className=\"space-y-3\">\n                  {calculatedMetrics.margins.gross.map((margin, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Gross Margin:</span>\n                      <span className=\"font-medium\">{formatPercent(margin)}</span>\n                    </div>\n                  ))}\n                  {calculatedMetrics.margins.operating.map((margin, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Operating Margin:</span>\n                      <span className=\"font-medium\">{formatPercent(margin)}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Growth Ratios */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Growth Rates</h4>\n                <div className=\"space-y-3\">\n                  {calculatedMetrics.growth.revenue.map((growth, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Revenue Growth:</span>\n                      <span className={`font-medium ${growth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {formatPercent(growth)}\n                      </span>\n                    </div>\n                  ))}\n                  {calculatedMetrics.growth.operating.map((growth, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Operating Growth:</span>\n                      <span className={`font-medium ${growth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {formatPercent(growth)}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Industry Comparison */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Industry Comparison</h4>\n                <div className=\"space-y-3\">\n                  <div className=\"p-3 bg-gray-700 rounded-lg\">\n                    <div className=\"text-xs text-gray-400 uppercase tracking-wide\">Industry Avg</div>\n                    <div className=\"text-sm\">Gross Margin: {formatPercent(modelInputs.ratios.industryAverages.grossMargin)}</div>\n                    <div className=\"text-sm\">Operating Margin: {formatPercent(modelInputs.ratios.industryAverages.operatingMargin)}</div>\n                    <div className=\"text-sm\">Net Margin: {formatPercent(modelInputs.ratios.industryAverages.netMargin)}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeModel === 'sensitivity' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <Activity size={20} />\n              Sensitivity Analysis\n            </h3>\n\n            <SensitivityAnalysis\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              calculateDCF={calculateDCF}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'scenario' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <Target size={20} />\n              Scenario Modeling\n            </h3>\n\n            <ScenarioModeling\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              calculateDCF={calculateDCF}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'comparable' && (\n          <div className=\"p-6\">\n            <ComparableAnalysis\n              data={data}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'montecarlo' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2\">\n              <Zap size={20} />\n              Monte Carlo Simulation\n            </h3>\n\n            <MonteCarloSimulation\n              data={data}\n              onDataChange={onDataChange}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ModelingTools;\n"],"names":["DataVisualization","dcfData","sensitivityData","scenarioData","formatCurrency","formatPercent","activeChart","setActiveChart","useState","showDetails","setShowDetails","chartTypes","id","label","icon","BarChart3","category","TrendingUp","Activity","PieChartIcon","dcfWaterfallData","useMemo","years","cumulativeValue","data","forEach","year","_index","startValue","presentValue","push","name","value","cumulative","start","freeCashFlow","terminalStart","presentValueTerminal","cashFlowTrendData","map","revenue","operatingIncome","workingCapitalChange","capex","Math","abs","sensitivityTornadoData","Object","entries","_variable","result","maxUpside","max","dataPoints","d","changeFromBase","maxDownside","min","variable","definition","upside","downside","range","sort","a","b","scenarioDistributionData","length","scenario","index","enterpriseValue","probability","weightedValue","fill","CustomTooltip","active","payload","chartType","_chartType","jsxs","className","children","jsx","entry","style","color","dataKey","key","includes","DCFWaterfallChart","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","tickFormatter","Tooltip","content","Bar","CashFlowTrendChart","LineChart","Legend","Line","type","stroke","strokeWidth","SensitivityTornadoChart","layout","toFixed","formatter","labelFormatter","ScenarioDistributionChart","PieChart","Pie","cx","cy","outerRadius","Cell","ValuationBridgeChart","bridgeData","cumulativePV","size","onClick","EyeOff","Eye","chart","Icon","motion","button","whileHover","scale","whileTap","find","c","Fragment","freeCashFlows","reduce","slice","v","join","WACCCalculator","modelInputs","onModelInputChange","activeTab","setActiveTab","waccInputs","dcf","wacc","riskFreeRate","marketRiskPremium","beta","smallCompanyPremium","companySpecificRisk","debtInterestRate","taxRate","marketValueEquity","marketValueDebt","buildUpMethod","equityRiskPremium","sizeRiskPremium","industryRiskPremium","industryWACC","industryBeta","industryDebtEquityRatio","waccCalculation","inputs","costOfEquityCAPM","costOfEquityBuildUp","costOfDebtAfterTax","totalCapital","equityWeight","debtWeight","waccCAPM","waccBuildUp","finalWACC","debtToEquityRatio","updateWACCInput","field","updatedWACC","parseFloat","tabs","Settings","Calculator","applyWACCToDCF","waccValue","div","y","Percent","DollarSign","Info","tab","htmlFor","step","onChange","e","target","BookOpen","AdvancedDCF","_showDetails","_setShowDetails","_showAssumptions","_setShowAssumptions","advancedDCFResults","discountRate","terminalGrowthRate","projectionYears","statements","workingCapitalAssumptions","workingCapital","receivablesDays","inventoryDays","payablesDays","capexAssumptions","capexAsPercentOfRevenue","depreciationRate","results","presentValues","workingCapitalChanges","capexAmounts","unleveredFreeCashFlow","terminalValue","equityValue","impliedShare","baseRevenue","incomeStatement","totalRevenue","yearData","nopat","depreciation","currentRevenue","previousRevenue","currentReceivables","currentInventory","currentPayables","receivablesChange","inventoryChange","payablesChange","discountFactor","pow","terminalFCF","terminalDiscountFactor","sharesOutstanding","updateDCFAssumption","updatedDCF","updateBasicAssumption","charAt","toUpperCase","ComparableAnalysis","_formatPercent","selectedMultiple","setSelectedMultiple","showAddComp","setShowAddComp","comparableCompanies","setComparableCompanies","ticker","marketCap","ebitda","netIncome","employees","founded","geography","businessModel","comparableMultiples","comp","multiples","ev_revenue","ev_ebitda","pe_ratio","revenue_per_employee","market_cap_revenue","marketStats","calculateStats","values","mean","median","floor","p25","p75","m","impliedValuation","targetRevenue","targetEBITDA","targetNetIncome","multipleDefinitions","description","Target","Users","Plus","def","stats","round","sum","multiple","Search","placeholder","Filter","removeComparable","filter","onSubmit","preventDefault","formData","FormData","companyData","newCompany","Date","now","parseInt","getFullYear","addComparableCompany","fromEntries","required","MonteCarloSimulation","onDataChange","_onDataChange","simulationResults","setSimulationResults","isRunning","setIsRunning","progress","setProgress","simulationSettings","setSimulationSettings","iterations","confidenceLevel","randomSeed","enableCorrelation","distributions","setDistributions","revenueGrowthRate","parameters","stdDev","enabled","fcfMargin","mode","correlationMatrix","setCorrelationMatrix","distributionTypes","runSimulation","useCallback","async","enabledDistributions","_","dist","keys","Error","options","onProgress","latestIndex","periods","baseInputs","currentPrice","currentOperatingIncome","monteCarloEngine","runDCFSimulation","error","alert","message","stopSimulation","updateDistribution","updates","prev","updateCorrelation","i","j","newMatrix","row","generateHistogramData","r","pricePerShare","binWidth","histogram","Array","bin","count","frequency","binIndex","bins","generateScatterData","_i","x","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","Play","initial","opacity","animate","Zap","AnimatePresence","exit","transition","duration","checked","newType","t","newParameters","param","disabled","Square","every","toLocaleString","Download","FileText","analysis","statistics","metric","AreaChart","_name","Area","fillOpacity","ScatterChart","Scatter","AlertTriangle","riskMetrics","confidenceIntervals","level","interval","lowerBound","upperBound","percentiles","p5","p50","p95","ScenarioModeling","calculateDCF","showAddForm","setShowAddForm","scenarios","scenarioResults","modifiedRevenue","periodIndex","growthRate","revenueGrowth","baseOperating","modifiedOperating","baseRevenueValue","scenarioRevenue","baseIncome","adjustedMargin","marginImprovement","dcfResult","weightedAverageValue","updateScenario","updatedScenarios","ScenarioForm","deleteScenario","Trash2","newScenario","s","TrendingDown","Minus","SensitivityAnalysis","selectedVariable","_setSelectedVariable","sensitivityConfig","sensitivity","variables","ranges","grossMargin","variableDefinitions","unit","baseValue","isPercentage","baseValuation","sensitivityResults","variableDef","stepSize","modifiedData","dcfInputs","originalIncome","dcfParams","operatingIncomeData","operatingIncomes","periodKey","income","pv","presentTerminalValue","presentValueOperations","tempCalculateDCF","valuation","tornadoData","maxImpact","positiveImpact","negativeImpact","updateSensitivityRange","updatedRanges","item","transform","variableName","updatedVariables","_removed","removeVariable","point","minHeight","title","addVariable","AdvancedAnalyticsIntegration","onOpenOptions","onOpenBonds","onOpenCredit","ModelingTools","adjustedValues","activeModel","setActiveModel","setModelInputs","terminalValueMultiple","receivablesGrowth","inventoryGrowth","payablesGrowth","maintenanceCapex","ratios","compareToIndustry","industryAverages","operatingMargin","netMargin","currentRatio","debtToEquity","calculatedMetrics","metrics","grossProfit","margins","gross","operating","net","growth","isLatestPeriod","totalCOGS","totalCostOfGoodsSold","prevRevenue","prevOperating","inputData","sourceData","sharePrice","modelTypes","updateModelInput","modelType","window","dispatchEvent","CustomEvent","React","createElement"],"mappings":"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"}