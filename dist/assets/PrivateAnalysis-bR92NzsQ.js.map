{"version":3,"file":"PrivateAnalysis-bR92NzsQ.js","sources":["../../src/services/storageService.js","../../src/services/financialDataStorage.js","../../src/components/DataExportImport.jsx","../../src/pages/PrivateAnalysis.jsx"],"sourcesContent":["/**\n * Enhanced Local Storage Service for Finance Analyst Pro\n * Provides comprehensive data persistence with compression, encryption, and versioning\n */\n\nimport { apiLogger } from '../utils/apiLogger.js';\n\n// Storage configuration\nconst STORAGE_CONFIG = {\n  version: '1.0.0',\n  prefix: 'financeanalyst_',\n  compression: {\n    enabled: true,\n    threshold: 1024 // Compress data larger than 1KB\n  },\n  encryption: {\n    enabled: false, // Will be enabled when auth is implemented\n    algorithm: 'AES-GCM'\n  },\n  quotaManagement: {\n    maxSize: 50 * 1024 * 1024, // 50MB limit\n    cleanupThreshold: 0.8 // Clean up when 80% full\n  }\n};\n\n// Data schemas for validation\nconst DATA_SCHEMAS = {\n  dcfModel: {\n    version: '1.0',\n    required: ['symbol', 'assumptions', 'projections', 'valuation'],\n    structure: {\n      symbol: 'string',\n      assumptions: 'object',\n      projections: 'object',\n      valuation: 'object',\n      metadata: 'object'\n    }\n  },\n  lboModel: {\n    version: '1.0',\n    required: ['symbol', 'transaction', 'financing', 'returns'],\n    structure: {\n      symbol: 'string',\n      transaction: 'object',\n      financing: 'object',\n      returns: 'object',\n      metadata: 'object'\n    }\n  },\n  monteCarloResults: {\n    version: '1.0',\n    required: ['modelType', 'iterations', 'results', 'statistics'],\n    structure: {\n      modelType: 'string',\n      iterations: 'number',\n      results: 'array',\n      statistics: 'object',\n      metadata: 'object'\n    }\n  },\n  userPreferences: {\n    version: '1.0',\n    required: ['theme', 'layout'],\n    structure: {\n      theme: 'string',\n      layout: 'object',\n      notifications: 'object',\n      privacy: 'object'\n    }\n  },\n  marketData: {\n    version: '1.0',\n    required: ['symbol', 'data', 'timestamp'],\n    structure: {\n      symbol: 'string',\n      data: 'object',\n      timestamp: 'number',\n      source: 'string'\n    }\n  }\n};\n\n/**\n * Enhanced Storage Service Class\n */\nclass StorageService {\n  constructor() {\n    this.isAvailable = this.checkStorageAvailability();\n    this.compressionWorker = null;\n    this.initializeCompression();\n    this.setupQuotaMonitoring();\n  }\n\n  /**\n   * Check if localStorage is available\n   */\n  checkStorageAvailability() {\n    try {\n      const test = '__storage_test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      apiLogger.log('ERROR', 'localStorage not available', { error: e.message });\n      return false;\n    }\n  }\n\n  /**\n   * Initialize compression capabilities\n   */\n  initializeCompression() {\n    if (STORAGE_CONFIG.compression.enabled && 'CompressionStream' in window) {\n      // Modern browsers with compression support\n      this.compressionAvailable = true;\n    } else {\n      // Fallback to simple JSON stringification\n      this.compressionAvailable = false;\n    }\n  }\n\n  /**\n   * Setup quota monitoring\n   */\n  setupQuotaMonitoring() {\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      this.monitorQuota();\n    }\n  }\n\n  /**\n   * Monitor storage quota usage\n   */\n  async monitorQuota() {\n    try {\n      const estimate = await navigator.storage.estimate();\n      const usageRatio = estimate.usage / estimate.quota;\n\n      if (usageRatio > STORAGE_CONFIG.quotaManagement.cleanupThreshold) {\n        apiLogger.log('WARN', 'Storage quota threshold exceeded', {\n          usage: estimate.usage,\n          quota: estimate.quota,\n          ratio: usageRatio\n        });\n        await this.performCleanup();\n      }\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to monitor storage quota', { error: error.message });\n    }\n  }\n\n  /**\n   * Generate storage key with prefix\n   */\n  generateKey(type, identifier) {\n    return `${STORAGE_CONFIG.prefix}${type}_${identifier}`;\n  }\n\n  /**\n   * Validate data against schema\n   */\n  validateData(data, schemaType) {\n    const schema = DATA_SCHEMAS[schemaType];\n    if (!schema) {\n      throw new Error(`Unknown schema type: ${schemaType}`);\n    }\n\n    // Check required fields\n    for (const field of schema.required) {\n      if (!(field in data)) {\n        throw new Error(`Missing required field: ${field}`);\n      }\n    }\n\n    // Validate data types\n    for (const [field, expectedType] of Object.entries(schema.structure)) {\n      if (field in data) {\n        const actualType = Array.isArray(data[field]) ? 'array' : typeof data[field];\n        if (actualType !== expectedType) {\n          throw new Error(`Invalid type for ${field}: expected ${expectedType}, got ${actualType}`);\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Compress data if enabled and beneficial\n   */\n  async compressData(data) {\n    const jsonString = JSON.stringify(data);\n\n    if (!STORAGE_CONFIG.compression.enabled ||\n        jsonString.length < STORAGE_CONFIG.compression.threshold ||\n        !this.compressionAvailable) {\n      return { data: jsonString, compressed: false };\n    }\n\n    try {\n      // Simple compression using built-in methods\n      const compressed = await this.simpleCompress(jsonString);\n      return { data: compressed, compressed: true };\n    } catch (error) {\n      apiLogger.log('WARN', 'Compression failed, storing uncompressed', { error: error.message });\n      return { data: jsonString, compressed: false };\n    }\n  }\n\n  /**\n   * Simple compression implementation\n   */\n  async simpleCompress(data) {\n    // For now, use a simple encoding - can be enhanced with actual compression\n    return btoa(encodeURIComponent(data));\n  }\n\n  /**\n   * Decompress data\n   */\n  async decompressData(compressedData, isCompressed) {\n    if (!isCompressed) {\n      return compressedData;\n    }\n\n    try {\n      return decodeURIComponent(atob(compressedData));\n    } catch (error) {\n      apiLogger.log('ERROR', 'Decompression failed', { error: error.message });\n      throw new Error('Failed to decompress data');\n    }\n  }\n\n  /**\n   * Store data with metadata\n   */\n  async setItem(type, identifier, data, options = {}) {\n    if (!this.isAvailable) {\n      throw new Error('Storage not available');\n    }\n\n    try {\n      // Validate data if schema exists\n      if (DATA_SCHEMAS[type]) {\n        this.validateData(data, type);\n      }\n\n      // Prepare storage object\n      const storageObject = {\n        version: STORAGE_CONFIG.version,\n        schemaVersion: DATA_SCHEMAS[type]?.version || '1.0',\n        timestamp: Date.now(),\n        data,\n        metadata: {\n          type,\n          identifier,\n          size: JSON.stringify(data).length,\n          ...options.metadata\n        }\n      };\n\n      // Compress if needed\n      const { data: processedData, compressed } = await this.compressData(storageObject);\n\n      // Add compression flag\n      const finalObject = {\n        compressed,\n        data: processedData\n      };\n\n      const key = this.generateKey(type, identifier);\n      localStorage.setItem(key, JSON.stringify(finalObject));\n\n      apiLogger.log('DEBUG', 'Data stored successfully', {\n        key,\n        type,\n        identifier,\n        compressed,\n        size: processedData.length\n      });\n\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to store data', {\n        type,\n        identifier,\n        error: error.message\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Retrieve data with decompression\n   */\n  async getItem(type, identifier) {\n    if (!this.isAvailable) {\n      return null;\n    }\n\n    try {\n      const key = this.generateKey(type, identifier);\n      const stored = localStorage.getItem(key);\n\n      if (!stored) {\n        return null;\n      }\n\n      const parsedStored = JSON.parse(stored);\n      const decompressedData = await this.decompressData(\n        parsedStored.data,\n        parsedStored.compressed\n      );\n\n      const storageObject = JSON.parse(decompressedData);\n\n      // Check version compatibility\n      if (storageObject.version !== STORAGE_CONFIG.version) {\n        apiLogger.log('WARN', 'Version mismatch detected', {\n          stored: storageObject.version,\n          current: STORAGE_CONFIG.version\n        });\n        // Could trigger migration here\n      }\n\n      apiLogger.log('DEBUG', 'Data retrieved successfully', {\n        key,\n        type,\n        identifier,\n        age: Date.now() - storageObject.timestamp\n      });\n\n      return storageObject.data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve data', {\n        type,\n        identifier,\n        error: error.message\n      });\n      return null;\n    }\n  }\n\n  /**\n   * Remove specific item\n   */\n  removeItem(type, identifier) {\n    if (!this.isAvailable) {\n      return false;\n    }\n\n    try {\n      const key = this.generateKey(type, identifier);\n      localStorage.removeItem(key);\n\n      apiLogger.log('DEBUG', 'Data removed successfully', { key, type, identifier });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to remove data', {\n        type,\n        identifier,\n        error: error.message\n      });\n      return false;\n    }\n  }\n\n  /**\n   * List all items of a specific type\n   */\n  listItems(type) {\n    if (!this.isAvailable) {\n      return [];\n    }\n\n    const prefix = this.generateKey(type, '');\n    const items = [];\n\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(prefix)) {\n        const identifier = key.replace(prefix, '');\n        items.push(identifier);\n      }\n    }\n\n    return items;\n  }\n\n  /**\n   * Perform cleanup of old data\n   */\n  async performCleanup() {\n    const cutoffTime = Date.now() - (30 * 24 * 60 * 60 * 1000); // 30 days\n    let cleanedCount = 0;\n\n    for (let i = localStorage.length - 1; i >= 0; i--) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(STORAGE_CONFIG.prefix)) {\n        try {\n          const stored = localStorage.getItem(key);\n          const parsedStored = JSON.parse(stored);\n          const decompressedData = await this.decompressData(\n            parsedStored.data,\n            parsedStored.compressed\n          );\n          const storageObject = JSON.parse(decompressedData);\n\n          if (storageObject.timestamp < cutoffTime) {\n            localStorage.removeItem(key);\n            cleanedCount++;\n          }\n        } catch (error) {\n          // Remove corrupted data\n          localStorage.removeItem(key);\n          cleanedCount++;\n        }\n      }\n    }\n\n    apiLogger.log('INFO', 'Storage cleanup completed', { cleanedCount });\n    return cleanedCount;\n  }\n\n  /**\n   * Get storage statistics\n   */\n  async getStorageStats() {\n    let totalSize = 0;\n    let itemCount = 0;\n    const typeStats = {};\n\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(STORAGE_CONFIG.prefix)) {\n        const value = localStorage.getItem(key);\n        totalSize += value.length;\n        itemCount++;\n\n        // Extract type from key\n        const type = key.split('_')[1];\n        if (type) {\n          typeStats[type] = (typeStats[type] || 0) + 1;\n        }\n      }\n    }\n\n    const quota = await this.getQuotaInfo();\n\n    return {\n      totalSize,\n      itemCount,\n      typeStats,\n      quota,\n      usageRatio: quota ? totalSize / quota.quota : 0\n    };\n  }\n\n  /**\n   * Get quota information\n   */\n  async getQuotaInfo() {\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      try {\n        return await navigator.storage.estimate();\n      } catch (error) {\n        apiLogger.log('ERROR', 'Failed to get quota info', { error: error.message });\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Clear all application data\n   */\n  clearAll() {\n    if (!this.isAvailable) {\n      return false;\n    }\n\n    const keys = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(STORAGE_CONFIG.prefix)) {\n        keys.push(key);\n      }\n    }\n\n    keys.forEach(key => localStorage.removeItem(key));\n\n    apiLogger.log('INFO', 'All application data cleared', { clearedCount: keys.length });\n    return true;\n  }\n}\n\n// Create and export singleton instance\nexport const storageService = new StorageService();\nexport default storageService;\n","/**\n * Financial Data Storage Service\n * Specialized storage utilities for financial models and market data\n */\n\nimport { apiLogger } from '../utils/apiLogger.js';\n\nimport { storageService } from './storageService.js';\n\n/**\n * Financial Data Storage Manager\n */\nclass FinancialDataStorage {\n  constructor() {\n    this.storage = storageService;\n  }\n\n  /**\n   * DCF Model Storage\n   */\n  async saveDCFModel(symbol, modelData) {\n    try {\n      const dcfData = {\n        symbol: symbol.toUpperCase(),\n        assumptions: modelData.assumptions || {},\n        projections: modelData.projections || {},\n        valuation: modelData.valuation || {},\n        metadata: {\n          createdAt: Date.now(),\n          lastModified: Date.now(),\n          version: '1.0',\n          modelType: 'DCF',\n          ...modelData.metadata\n        }\n      };\n\n      await this.storage.setItem('dcfModel', symbol.toUpperCase(), dcfData);\n\n      apiLogger.log('INFO', 'DCF model saved', { symbol, valuation: dcfData.valuation.intrinsicValue });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save DCF model', { symbol, error: error.message });\n      throw error;\n    }\n  }\n\n  async getDCFModel(symbol) {\n    try {\n      const data = await this.storage.getItem('dcfModel', symbol.toUpperCase());\n      if (data) {\n        apiLogger.log('DEBUG', 'DCF model retrieved', { symbol });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve DCF model', { symbol, error: error.message });\n      return null;\n    }\n  }\n\n  async listDCFModels() {\n    return this.storage.listItems('dcfModel');\n  }\n\n  async deleteDCFModel(symbol) {\n    return this.storage.removeItem('dcfModel', symbol.toUpperCase());\n  }\n\n  /**\n   * LBO Model Storage\n   */\n  async saveLBOModel(symbol, modelData) {\n    try {\n      const lboData = {\n        symbol: symbol.toUpperCase(),\n        transaction: modelData.transaction || {},\n        financing: modelData.financing || {},\n        returns: modelData.returns || {},\n        metadata: {\n          createdAt: Date.now(),\n          lastModified: Date.now(),\n          version: '1.0',\n          modelType: 'LBO',\n          ...modelData.metadata\n        }\n      };\n\n      await this.storage.setItem('lboModel', symbol.toUpperCase(), lboData);\n\n      apiLogger.log('INFO', 'LBO model saved', {\n        symbol,\n        irr: lboData.returns.irr,\n        moic: lboData.returns.moic\n      });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save LBO model', { symbol, error: error.message });\n      throw error;\n    }\n  }\n\n  async getLBOModel(symbol) {\n    try {\n      const data = await this.storage.getItem('lboModel', symbol.toUpperCase());\n      if (data) {\n        apiLogger.log('DEBUG', 'LBO model retrieved', { symbol });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve LBO model', { symbol, error: error.message });\n      return null;\n    }\n  }\n\n  async listLBOModels() {\n    return this.storage.listItems('lboModel');\n  }\n\n  async deleteLBOModel(symbol) {\n    return this.storage.removeItem('lboModel', symbol.toUpperCase());\n  }\n\n  /**\n   * Monte Carlo Results Storage\n   */\n  async saveMonteCarloResults(modelId, resultsData) {\n    try {\n      const mcData = {\n        modelType: resultsData.modelType || 'DCF',\n        iterations: resultsData.iterations || 10000,\n        results: resultsData.results || [],\n        statistics: resultsData.statistics || {},\n        metadata: {\n          createdAt: Date.now(),\n          modelId,\n          symbol: resultsData.symbol,\n          version: '1.0',\n          ...resultsData.metadata\n        }\n      };\n\n      await this.storage.setItem('monteCarloResults', modelId, mcData);\n\n      apiLogger.log('INFO', 'Monte Carlo results saved', {\n        modelId,\n        iterations: mcData.iterations,\n        mean: mcData.statistics.mean\n      });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save Monte Carlo results', { modelId, error: error.message });\n      throw error;\n    }\n  }\n\n  async getMonteCarloResults(modelId) {\n    try {\n      const data = await this.storage.getItem('monteCarloResults', modelId);\n      if (data) {\n        apiLogger.log('DEBUG', 'Monte Carlo results retrieved', { modelId });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve Monte Carlo results', { modelId, error: error.message });\n      return null;\n    }\n  }\n\n  async listMonteCarloResults() {\n    return this.storage.listItems('monteCarloResults');\n  }\n\n  async deleteMonteCarloResults(modelId) {\n    return this.storage.removeItem('monteCarloResults', modelId);\n  }\n\n  /**\n   * Market Data Storage with TTL\n   */\n  async saveMarketData(symbol, marketData, ttlMinutes = 15) {\n    try {\n      const data = {\n        symbol: symbol.toUpperCase(),\n        data: marketData,\n        timestamp: Date.now(),\n        source: marketData.source || 'unknown',\n        expiresAt: Date.now() + (ttlMinutes * 60 * 1000)\n      };\n\n      await this.storage.setItem('marketData', symbol.toUpperCase(), data);\n\n      apiLogger.log('DEBUG', 'Market data cached', {\n        symbol,\n        source: data.source,\n        ttlMinutes\n      });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to cache market data', { symbol, error: error.message });\n      throw error;\n    }\n  }\n\n  async getMarketData(symbol) {\n    try {\n      const data = await this.storage.getItem('marketData', symbol.toUpperCase());\n\n      if (data && data.expiresAt > Date.now()) {\n        apiLogger.log('DEBUG', 'Market data cache hit', { symbol });\n        return data.data;\n      } else if (data) {\n        // Data expired, remove it\n        await this.deleteMarketData(symbol);\n        apiLogger.log('DEBUG', 'Market data cache expired', { symbol });\n      }\n\n      return null;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve market data', { symbol, error: error.message });\n      return null;\n    }\n  }\n\n  async deleteMarketData(symbol) {\n    return this.storage.removeItem('marketData', symbol.toUpperCase());\n  }\n\n  /**\n   * User Preferences Storage\n   */\n  async saveUserPreferences(preferences) {\n    try {\n      const prefData = {\n        theme: preferences.theme || 'light',\n        layout: preferences.layout || {},\n        notifications: preferences.notifications || {},\n        privacy: preferences.privacy || {},\n        metadata: {\n          lastUpdated: Date.now(),\n          version: '1.0'\n        }\n      };\n\n      await this.storage.setItem('userPreferences', 'default', prefData);\n\n      apiLogger.log('INFO', 'User preferences saved', { theme: prefData.theme });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save user preferences', { error: error.message });\n      throw error;\n    }\n  }\n\n  async getUserPreferences() {\n    try {\n      const data = await this.storage.getItem('userPreferences', 'default');\n      if (data) {\n        apiLogger.log('DEBUG', 'User preferences retrieved');\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve user preferences', { error: error.message });\n      return null;\n    }\n  }\n\n  /**\n   * Watchlist Storage\n   */\n  async saveWatchlist(name, symbols) {\n    try {\n      const watchlistData = {\n        name,\n        symbols: symbols.map(s => s.toUpperCase()),\n        metadata: {\n          createdAt: Date.now(),\n          lastModified: Date.now(),\n          symbolCount: symbols.length\n        }\n      };\n\n      await this.storage.setItem('watchlist', name, watchlistData);\n\n      apiLogger.log('INFO', 'Watchlist saved', { name, symbolCount: symbols.length });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save watchlist', { name, error: error.message });\n      throw error;\n    }\n  }\n\n  async getWatchlist(name) {\n    try {\n      const data = await this.storage.getItem('watchlist', name);\n      if (data) {\n        apiLogger.log('DEBUG', 'Watchlist retrieved', { name });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve watchlist', { name, error: error.message });\n      return null;\n    }\n  }\n\n  async listWatchlists() {\n    return this.storage.listItems('watchlist');\n  }\n\n  async deleteWatchlist(name) {\n    return this.storage.removeItem('watchlist', name);\n  }\n\n  /**\n   * Export all financial data\n   */\n  async exportAllData() {\n    try {\n      const exportData = {\n        timestamp: Date.now(),\n        version: '1.0',\n        data: {\n          dcfModels: {},\n          lboModels: {},\n          monteCarloResults: {},\n          watchlists: {},\n          userPreferences: null\n        }\n      };\n\n      // Export DCF models\n      const dcfModels = await this.listDCFModels();\n      for (const symbol of dcfModels) {\n        exportData.data.dcfModels[symbol] = await this.getDCFModel(symbol);\n      }\n\n      // Export LBO models\n      const lboModels = await this.listLBOModels();\n      for (const symbol of lboModels) {\n        exportData.data.lboModels[symbol] = await this.getLBOModel(symbol);\n      }\n\n      // Export Monte Carlo results\n      const mcResults = await this.listMonteCarloResults();\n      for (const modelId of mcResults) {\n        exportData.data.monteCarloResults[modelId] = await this.getMonteCarloResults(modelId);\n      }\n\n      // Export watchlists\n      const watchlists = await this.listWatchlists();\n      for (const name of watchlists) {\n        exportData.data.watchlists[name] = await this.getWatchlist(name);\n      }\n\n      // Export user preferences\n      exportData.data.userPreferences = await this.getUserPreferences();\n\n      apiLogger.log('INFO', 'Data export completed', {\n        dcfCount: dcfModels.length,\n        lboCount: lboModels.length,\n        mcCount: mcResults.length,\n        watchlistCount: watchlists.length\n      });\n\n      return exportData;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to export data', { error: error.message });\n      throw error;\n    }\n  }\n\n  /**\n   * Import financial data\n   */\n  async importData(importData) {\n    try {\n      let importCount = 0;\n\n      // Import DCF models\n      if (importData.data.dcfModels) {\n        for (const [symbol, data] of Object.entries(importData.data.dcfModels)) {\n          await this.saveDCFModel(symbol, data);\n          importCount++;\n        }\n      }\n\n      // Import LBO models\n      if (importData.data.lboModels) {\n        for (const [symbol, data] of Object.entries(importData.data.lboModels)) {\n          await this.saveLBOModel(symbol, data);\n          importCount++;\n        }\n      }\n\n      // Import Monte Carlo results\n      if (importData.data.monteCarloResults) {\n        for (const [modelId, data] of Object.entries(importData.data.monteCarloResults)) {\n          await this.saveMonteCarloResults(modelId, data);\n          importCount++;\n        }\n      }\n\n      // Import watchlists\n      if (importData.data.watchlists) {\n        for (const [name, data] of Object.entries(importData.data.watchlists)) {\n          await this.saveWatchlist(name, data.symbols);\n          importCount++;\n        }\n      }\n\n      // Import user preferences\n      if (importData.data.userPreferences) {\n        await this.saveUserPreferences(importData.data.userPreferences);\n        importCount++;\n      }\n\n      apiLogger.log('INFO', 'Data import completed', { importCount });\n      return importCount;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to import data', { error: error.message });\n      throw error;\n    }\n  }\n\n  /**\n   * Get storage statistics for financial data\n   */\n  async getFinancialDataStats() {\n    const stats = await this.storage.getStorageStats();\n\n    return {\n      ...stats,\n      financialData: {\n        dcfModels: (await this.listDCFModels()).length,\n        lboModels: (await this.listLBOModels()).length,\n        monteCarloResults: (await this.listMonteCarloResults()).length,\n        watchlists: (await this.listWatchlists()).length\n      }\n    };\n  }\n\n  /**\n   * Clean up expired market data\n   */\n  async cleanupExpiredMarketData() {\n    const marketDataKeys = this.storage.listItems('marketData');\n    let cleanedCount = 0;\n\n    for (const symbol of marketDataKeys) {\n      const data = await this.storage.getItem('marketData', symbol);\n      if (data && data.expiresAt <= Date.now()) {\n        await this.deleteMarketData(symbol);\n        cleanedCount++;\n      }\n    }\n\n    apiLogger.log('INFO', 'Expired market data cleaned', { cleanedCount });\n    return cleanedCount;\n  }\n}\n\n// Create and export singleton instance\nexport const financialDataStorage = new FinancialDataStorage();\nexport default financialDataStorage;\n","/**\n * Data Export/Import Component\n * Provides UI for exporting and importing financial data\n */\n\nimport {\n  Download,\n  Upload,\n  FileText,\n  Database,\n  AlertCircle,\n  CheckCircle,\n  Loader2,\n  Info,\n  FileSpreadsheet,\n  Bookmark,\n  Users,\n  Clock,\n  Eye,\n  Edit3,\n  Share,\n  Save\n} from 'lucide-react';\nimport React, { useState, useCallback } from 'react';\n\nimport { financialDataStorage } from '../services/financialDataStorage.js';\nimport { apiLogger } from '../utils/apiLogger.js';\n\nconst DataExportImport = ({ data, onDataChange, savedAnalyses, onAnalysesChange }) => {\n  const [activeTab, setActiveTab] = useState('excel');\n  const [isExporting, setIsExporting] = useState(false);\n  const [isImporting, setIsImporting] = useState(false);\n  const [exportStatus, setExportStatus] = useState(null);\n  const [importStatus, setImportStatus] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [templates, setTemplates] = useState([\n    { id: 1, name: 'Standard 3-Statement Model', category: 'General', lastUsed: '2024-01-15', uses: 42 },\n    { id: 2, name: 'SaaS DCF Template', category: 'Technology', lastUsed: '2024-01-10', uses: 28 },\n    { id: 3, name: 'LBO Analysis Template', category: 'Private Equity', lastUsed: '2024-01-05', uses: 35 }\n  ]);\n  const [collaborators, setCollaborators] = useState([\n    { id: 1, name: 'John Smith', email: 'john@company.com', role: 'Analyst', lastActive: '2 min ago', avatar: 'JS' },\n    { id: 2, name: 'Sarah Johnson', email: 'sarah@company.com', role: 'VP', lastActive: '1 hour ago', avatar: 'SJ' }\n  ]);\n\n  // Load storage statistics on component mount\n  React.useEffect(() => {\n    loadStats();\n  }, []);\n\n  const loadStats = async() => {\n    try {\n      const storageStats = await financialDataStorage.getFinancialDataStats();\n      setStats(storageStats);\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to load storage stats', { error: error.message });\n    }\n  };\n\n  const handleExport = async() => {\n    setIsExporting(true);\n    setExportStatus(null);\n\n    try {\n      const exportData = await financialDataStorage.exportAllData();\n\n      // Create downloadable file\n      const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n        type: 'application/json'\n      });\n\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `financeanalyst_backup_${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n\n      setExportStatus({\n        type: 'success',\n        message: 'Data exported successfully',\n        details: {\n          dcfModels: Object.keys(exportData.data.dcfModels).length,\n          lboModels: Object.keys(exportData.data.lboModels).length,\n          monteCarloResults: Object.keys(exportData.data.monteCarloResults).length,\n          watchlists: Object.keys(exportData.data.watchlists).length\n        }\n      });\n\n      apiLogger.log('INFO', 'Data export completed', {\n        totalItems: Object.keys(exportData.data.dcfModels).length +\n                   Object.keys(exportData.data.lboModels).length +\n                   Object.keys(exportData.data.monteCarloResults).length +\n                   Object.keys(exportData.data.watchlists).length\n      });\n    } catch (error) {\n      setExportStatus({\n        type: 'error',\n        message: 'Export failed',\n        details: error.message\n      });\n      apiLogger.log('ERROR', 'Data export failed', { error: error.message });\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  const handleImport = async(event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    setIsImporting(true);\n    setImportStatus(null);\n\n    try {\n      const text = await file.text();\n      const importData = JSON.parse(text);\n\n      // Validate import data structure\n      if (!importData.data || !importData.version) {\n        throw new Error('Invalid backup file format');\n      }\n\n      const importCount = await financialDataStorage.importData(importData);\n\n      setImportStatus({\n        type: 'success',\n        message: 'Data imported successfully',\n        details: {\n          importCount,\n          timestamp: new Date(importData.timestamp).toLocaleString()\n        }\n      });\n\n      // Refresh stats\n      await loadStats();\n\n      apiLogger.log('INFO', 'Data import completed', { importCount });\n    } catch (error) {\n      setImportStatus({\n        type: 'error',\n        message: 'Import failed',\n        details: error.message\n      });\n      apiLogger.log('ERROR', 'Data import failed', { error: error.message });\n    } finally {\n      setIsImporting(false);\n      // Clear file input\n      event.target.value = '';\n    }\n  };\n\n  const formatBytes = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Data Management</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            ×\n          </button>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8\">\n            {[\n              { id: 'excel', label: 'Excel Integration', icon: FileSpreadsheet },\n              { id: 'templates', label: 'Templates', icon: Bookmark },\n              { id: 'collaboration', label: 'Collaboration', icon: Users },\n              { id: 'export', label: 'Export', icon: Download },\n              { id: 'import', label: 'Import', icon: Upload },\n              { id: 'stats', label: 'Statistics', icon: Database }\n            ].map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span>{tab.label}</span>\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n          \n          {activeTab === 'excel' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-start\">\n                  <Info className=\"w-5 h-5 text-blue-600 mt-0.5 mr-3\" />\n                  <div>\n                    <h3 className=\"font-medium text-blue-900\">Excel Integration</h3>\n                    <p className=\"text-sm text-blue-700 mt-1\">\n                      Connect your Excel spreadsheets to FinanceAnalyst for seamless data synchronization.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <button\n                onClick={handleExport}\n                disabled={isExporting}\n                className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center\"\n              >\n                {isExporting ? (\n                  <>\n                    <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                    Exporting...\n                  </>\n                ) : (\n                  <>\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Export All Data\n                  </>\n                )}\n              </button>\n\n              {exportStatus && (\n                <div\n                  className={`border rounded-lg p-4 ${\n                    exportStatus.type === 'success'\n                      ? 'bg-green-50 border-green-200'\n                      : 'bg-red-50 border-red-200'\n                  }`}\n                >\n                  <div className=\"flex items-start\">\n                    {exportStatus.type === 'success' ? (\n                      <CheckCircle className=\"w-5 h-5 text-green-600 mt-0.5 mr-3\" />\n                    ) : (\n                      <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5 mr-3\" />\n                    )}\n                    <div>\n                      <h4\n                        className={`font-medium ${\n                          exportStatus.type === 'success' ? 'text-green-900' : 'text-red-900'\n                        }`}\n                      >\n                        {exportStatus.message}\n                      </h4>\n                      {exportStatus.type === 'success' && exportStatus.details && (\n                        <div className=\"text-sm text-green-700 mt-2\">\n                          <p>Exported items:</p>\n                          <ul className=\"list-disc list-inside ml-4\">\n                            <li>{exportStatus.details.dcfModels} DCF Models</li>\n                            <li>{exportStatus.details.lboModels} LBO Models</li>\n                            <li>{exportStatus.details.monteCarloResults} Monte Carlo Results</li>\n                            <li>{exportStatus.details.watchlists} Watchlists</li>\n                          </ul>\n                        </div>\n                      )}\n                      {exportStatus.type === 'error' && (\n                        <p className=\"text-sm text-red-700 mt-1\">{exportStatus.details}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'templates' && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Templates</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {templates.map((template) => (\n                  <div key={template.id} className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">{template.name}</h4>\n                    <p className=\"text-sm text-gray-600\">{template.category}</p>\n                    <p className=\"text-sm text-gray-600\">Last used: {template.lastUsed}</p>\n                    <p className=\"text-sm text-gray-600\">Uses: {template.uses}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'collaboration' && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Collaboration</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {collaborators.map((collaborator) => (\n                  <div key={collaborator.id} className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">{collaborator.name}</h4>\n                    <p className=\"text-sm text-gray-600\">{collaborator.email}</p>\n                    <p className=\"text-sm text-gray-600\">Role: {collaborator.role}</p>\n                    <p className=\"text-sm text-gray-600\">Last active: {collaborator.lastActive}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'export' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-start\">\n                  <Info className=\"w-5 h-5 text-blue-600 mt-0.5 mr-3\" />\n                  <div>\n                    <h3 className=\"font-medium text-blue-900\">Export Your Data</h3>\n                    <p className=\"text-sm text-blue-700 mt-1\">\n                      Download all your financial models, analysis results, and preferences as a backup file.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <button\n                onClick={handleExport}\n                disabled={isExporting}\n                className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center\"\n              >\n                {isExporting ? (\n                  <>\n                    <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                    Exporting...\n                  </>\n                ) : (\n                  <>\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Export All Data\n                  </>\n                )}\n              </button>\n\n              {exportStatus && (\n                <div\n                  className={`border rounded-lg p-4 ${\n                    exportStatus.type === 'success'\n                      ? 'bg-green-50 border-green-200'\n                      : 'bg-red-50 border-red-200'\n                  }`}\n                >\n                  <div className=\"flex items-start\">\n                    {exportStatus.type === 'success' ? (\n                      <CheckCircle className=\"w-5 h-5 text-green-600 mt-0.5 mr-3\" />\n                    ) : (\n                      <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5 mr-3\" />\n                    )}\n                    <div>\n                      <h4\n                        className={`font-medium ${\n                          exportStatus.type === 'success' ? 'text-green-900' : 'text-red-900'\n                        }`}\n                      >\n                        {exportStatus.message}\n                      </h4>\n                      {exportStatus.type === 'success' && exportStatus.details && (\n                        <div className=\"text-sm text-green-700 mt-2\">\n                          <p>Exported items:</p>\n                          <ul className=\"list-disc list-inside ml-4\">\n                            <li>{exportStatus.details.dcfModels} DCF Models</li>\n                            <li>{exportStatus.details.lboModels} LBO Models</li>\n                            <li>{exportStatus.details.monteCarloResults} Monte Carlo Results</li>\n                            <li>{exportStatus.details.watchlists} Watchlists</li>\n                          </ul>\n                        </div>\n                      )}\n                      {exportStatus.type === 'error' && (\n                        <p className=\"text-sm text-red-700 mt-1\">{exportStatus.details}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          \n          {activeTab === 'import' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4\">\n                <div className=\"flex items-start\">\n                  <AlertCircle className=\"w-5 h-5 text-amber-600 mt-0.5 mr-3\" />\n                  <div>\n                    <h3 className=\"font-medium text-amber-900\">Import Data</h3>\n                    <p className=\"text-sm text-amber-700 mt-1\">\n                      Import data from a backup file. This will add to your existing data.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\n                <FileText className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n                <label className=\"cursor-pointer\">\n                  <span className=\"text-lg font-medium text-gray-900\">\n                    Choose backup file\n                  </span>\n                  <p className=\"text-sm text-gray-500 mt-1\">\n                    Select a JSON backup file to import\n                  </p>\n                  <input\n                    type=\"file\"\n                    accept=\".json\"\n                    onChange={handleImport}\n                    disabled={isImporting}\n                    className=\"hidden\"\n                  />\n                </label>\n              </div>\n\n              {isImporting && (\n                <div className=\"flex items-center justify-center py-4\">\n                  <Loader2 className=\"w-6 h-6 animate-spin text-blue-600 mr-2\" />\n                  <span className=\"text-gray-600\">Importing data...</span>\n                </div>\n              )}\n\n              {importStatus && (\n                <div\n                  className={`border rounded-lg p-4 ${\n                    importStatus.type === 'success'\n                      ? 'bg-green-50 border-green-200'\n                      : 'bg-red-50 border-red-200'\n                  }`}\n                >\n                  <div className=\"flex items-start\">\n                    {importStatus.type === 'success' ? (\n                      <CheckCircle className=\"w-5 h-5 text-green-600 mt-0.5 mr-3\" />\n                    ) : (\n                      <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5 mr-3\" />\n                    )}\n                    <div>\n                      <h4\n                        className={`font-medium ${\n                          importStatus.type === 'success' ? 'text-green-900' : 'text-red-900'\n                        }`}\n                      >\n                        {importStatus.message}\n                      </h4>\n                      {importStatus.type === 'success' && importStatus.details && (\n                        <div className=\"text-sm text-green-700 mt-2\">\n                          <p>Imported {importStatus.details.importCount} items</p>\n                          <p>Backup created: {importStatus.details.timestamp}</p>\n                        </div>\n                      )}\n                      {importStatus.type === 'error' && (\n                        <p className=\"text-sm text-red-700 mt-1\">{importStatus.details}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          \n          {activeTab === 'stats' && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Storage Statistics</h3>\n\n              {stats ? (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Storage Usage</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Total Size:</span>\n                        <span className=\"font-medium\">{formatBytes(stats.totalSize)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Total Items:</span>\n                        <span className=\"font-medium\">{stats.itemCount}</span>\n                      </div>\n                      {stats.quota && (\n                        <div className=\"flex justify-between\">\n                          <span>Usage:</span>\n                          <span className=\"font-medium\">\n                            {(stats.usageRatio * 100).toFixed(1)}%\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Financial Data</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>DCF Models:</span>\n                        <span className=\"font-medium\">{stats.financialData.dcfModels}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>LBO Models:</span>\n                        <span className=\"font-medium\">{stats.financialData.lboModels}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Monte Carlo Results:</span>\n                        <span className=\"font-medium\">{stats.financialData.monteCarloResults}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Watchlists:</span>\n                        <span className=\"font-medium\">{stats.financialData.watchlists}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex items-center justify-center py-8\">\n                  <Loader2 className=\"w-6 h-6 animate-spin text-blue-600 mr-2\" />\n                  <span className=\"text-gray-600\">Loading statistics...</span>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DataExportImport;\n","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Save, \n  Upload, \n  Download, \n  CheckCircle,\n  Activity,\n  FileText,\n  AlertCircle,\n  Clock,\n  Database,\n  Sidebar\n} from 'lucide-react';\nimport Header from '../components/ui/Header';\nimport Button from '../components/ui/Button';\nimport SEOHead from '../components/SEO/SEOHead';\nimport FinancialSpreadsheet from '../components/PrivateAnalysis/FinancialSpreadsheet';\nimport ModelingTools from '../components/PrivateAnalysis/ModelingTools';\nimport AnalysisResults from '../components/PrivateAnalysis/AnalysisResults';\nimport WorkflowNavigation from '../components/PrivateAnalysis/WorkflowNavigation';\nimport AdvancedLBOTool from '../components/PrivateAnalysis/AdvancedLBOTool';\nimport FinancialModelWorkspace from '../components/PrivateAnalysis/FinancialModelWorkspace';\nimport EnhancedScenarioAnalysis from '../components/PrivateAnalysis/EnhancedScenarioAnalysis';\nimport EnhancedMarketDataDashboard from '../components/PrivateAnalysis/EnhancedMarketDataDashboard';\nimport MonteCarloIntegrationHub from '../components/PrivateAnalysis/MonteCarloIntegrationHub';\nimport ContextualInsightsSidebar from '../components/PrivateAnalysis/ContextualInsightsSidebar';\nimport DataExportImport from '../components/DataExportImport';\nimport defaultFinancialData from '../data/defaultFinancialData';\nimport { formatCurrency, formatPercentage } from '../utils/dataTransformation';\nimport { calculateDCF } from '../utils/dcfCalculations';\n\n// Simple Error Boundary component\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Component error:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return this.props.fallback || (\n        <div className=\"p-8 text-center text-red-400\">\n          Something went wrong. Please refresh the page.\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst PrivateAnalysis = () => {\n  const [activeTab, setActiveTab] = useState('spreadsheet');\n  const [advancedResults, setAdvancedResults] = useState({\n    lbo: null,\n    threeStatement: null,\n    scenarios: null,\n    marketData: null,\n    monteCarlo: null\n  });\n  const [financialData, setFinancialData] = useState(defaultFinancialData);\n  const [adjustedValues, setAdjustedValues] = useState({});\n  const [modelInputs, setModelInputs] = useState({\n    dcf: {\n      discountRate: 10,\n      terminalGrowthRate: 2.5,\n      projectionYears: 5,\n      taxRate: 25\n    },\n    scenario: {\n      scenarios: []\n    }\n  });\n\n  // Insights sidebar state\n  const [insightsSidebarVisible, setInsightsSidebarVisible] = useState(false);\n  const [currentMetricFocus, setCurrentMetricFocus] = useState(null);\n\n  const [savedAnalyses, setSavedAnalyses] = useState(() => {\n    try {\n      const saved = localStorage.getItem('privateAnalyses');\n      return saved ? JSON.parse(saved) : [];\n    } catch (error) {\n      console.error('Error loading saved analyses:', error);\n      return [];\n    }\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [dataStatus, setDataStatus] = useState('ready');\n  const [lastSaved, setLastSaved] = useState(null);\n\n  // Enhanced data completeness tracking\n  const getDataCompleteness = () => {\n    if (!financialData?.statements) return 0;\n    \n    const coreIncomeFields = ['totalRevenue', 'totalCostOfGoodsSold', 'operatingIncome', 'netIncome'];\n    const optionalBalanceFields = ['totalAssets', 'totalLiabilities', 'totalEquity'];\n    const optionalCashFlowFields = ['operatingCashFlow', 'investingCashFlow', 'financingCashFlow'];\n    \n    let completedFields = 0;\n    let totalWeightedFields = 0;\n    \n    // Check core income statement fields (weighted more heavily)\n    coreIncomeFields.forEach(field => {\n      totalWeightedFields += 3; // Core fields worth 3 points each\n      if (financialData.statements.incomeStatement?.[field]?.[2] !== undefined) {\n        completedFields += 3;\n      }\n    });\n    \n    // Check optional balance sheet fields\n    optionalBalanceFields.forEach(field => {\n      totalWeightedFields += 2; // Optional fields worth 2 points each\n      if (financialData.statements.balanceSheet?.[field]?.[2] !== undefined) {\n        completedFields += 2;\n      }\n    });\n    \n    // Check cash flow fields\n    optionalCashFlowFields.forEach(field => {\n      totalWeightedFields += 2;\n      if (financialData.statements.cashFlow?.[field]?.[2] !== undefined) {\n        completedFields += 2;\n      }\n    });\n    \n    const completionPercentage = Math.round((completedFields / totalWeightedFields) * 100);\n    \n    // If we have core income statement data, ensure minimum 80% completion\n    const hasBasicIncomeData = financialData?.statements?.incomeStatement?.totalRevenue?.[2] !== undefined &&\n                              financialData?.statements?.incomeStatement?.operatingIncome?.[2] !== undefined;\n    \n    return hasBasicIncomeData ? Math.max(completionPercentage, 80) : completionPercentage;\n  };\n\n  const calculateModelingProgress = () => {\n    let progress = 0;\n    \n    // DCF Model completion\n    if (modelInputs?.dcf?.discountRate && modelInputs?.dcf?.terminalGrowthRate) {\n      progress += 40;\n    }\n    \n    // Enhanced data completeness boost\n    const dataCompleteness = getDataCompleteness();\n    if (dataCompleteness >= 80) {\n      progress += 20; // Comprehensive data gets boost\n    }\n    \n    // Scenario analysis completion\n    if (modelInputs?.scenario?.scenarios && modelInputs.scenario.scenarios.length > 0) {\n      progress += 20;\n    }\n    \n    // Advanced tools usage\n    if (advancedResults.lbo || advancedResults.threeStatement || advancedResults.monteCarlo) {\n      progress += 20;\n    }\n    \n    return Math.min(progress, 100);\n  };\n\n  const calculateAnalysisProgress = () => {\n    let progress = 0;\n    \n    // Basic DCF analysis\n    if (financialData?.statements?.incomeStatement) {\n      progress += 30;\n    }\n    \n    // Advanced modeling results\n    if (advancedResults.lbo) progress += 20;\n    if (advancedResults.threeStatement) progress += 20;\n    if (advancedResults.scenarios) progress += 15;\n    if (advancedResults.monteCarlo) progress += 15;\n    \n    return Math.min(progress, 100);\n  };\n\n  const saveAnalysis = async (name) => {\n    try {\n      setIsLoading(true);\n      setDataStatus('saving');\n      \n      const analysis = {\n        id: Date.now().toString(),\n        name: name || `Analysis ${new Date().toLocaleDateString()}`,\n        timestamp: new Date().toISOString(),\n        financialData,\n        adjustedValues,\n        modelInputs,\n        advancedResults,\n        dataCompleteness: getDataCompleteness(),\n        modelingProgress: calculateModelingProgress(),\n        analysisProgress: calculateAnalysisProgress()\n      };\n      \n      const updated = [...savedAnalyses, analysis];\n      setSavedAnalyses(updated);\n      \n      try {\n        localStorage.setItem('privateAnalyses', JSON.stringify(updated));\n      } catch (error) {\n        console.error('Error saving analysis:', error);\n        throw new Error('Failed to save analysis to localStorage');\n      }\n      \n      setDataStatus('ready');\n      setLastSaved(new Date());\n      \n    } catch (error) {\n      console.error('Save failed:', error);\n      setDataStatus('error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const loadAnalysis = (analysisId) => {\n    const analysis = savedAnalyses.find(a => a.id === analysisId);\n    if (analysis) {\n      setFinancialData(analysis.financialData);\n      setAdjustedValues(analysis.adjustedValues);\n      setModelInputs(analysis.modelInputs);\n      setAdvancedResults(analysis.advancedResults || {\n        lbo: null, threeStatement: null, scenarios: null, marketData: null, monteCarlo: null\n      });\n    }\n  };\n\n  const deleteAnalysis = (analysisId) => {\n    try {\n      const updated = savedAnalyses.filter(a => a.id !== analysisId);\n      setSavedAnalyses(updated);\n      localStorage.setItem('privateAnalyses', JSON.stringify(updated));\n    } catch (error) {\n      console.error('Error deleting analysis:', error);\n    }\n  };\n\n  const handleInsightClick = (insight) => {\n    setCurrentMetricFocus(insight.metric);\n  };\n\n  const toggleInsightsSidebar = () => {\n    setInsightsSidebarVisible(!insightsSidebarVisible);\n  };\n\n  // Auto-show insights sidebar when analysis becomes available\n  useEffect(() => {\n    if (calculateAnalysisProgress() > 60 && !insightsSidebarVisible) {\n      setInsightsSidebarVisible(true);\n    }\n  }, [financialData, advancedResults, insightsSidebarVisible]);\n\n  // Status indicator component\n  const StatusIndicator = ({ status, label }) => {\n    const getStatusColor = () => {\n      switch (status) {\n        case 'ready': return 'text-green-400';\n        case 'modified': return 'text-yellow-400';\n        case 'saving': return 'text-blue-400';\n        case 'error': return 'text-red-400';\n        default: return 'text-gray-400';\n      }\n    };\n\n    return (\n      <div className={`flex items-center gap-2 ${getStatusColor()}`}>\n        <div className=\"w-2 h-2 rounded-full bg-current animate-pulse\" />\n        <span className=\"text-sm\">{label}</span>\n      </div>\n    );\n  };\n\n  const tabs = [\n    { id: 'spreadsheet', label: 'Financial Spreadsheet', icon: Database },\n    { id: 'modeling', label: 'Financial Modeling', icon: Activity },\n    { id: 'analysis', label: 'Analysis & Results', icon: FileText },\n    { id: 'lbo', label: 'Advanced LBO', icon: Activity },\n    { id: 'threestatement', label: '3-Statement Model', icon: Database },\n    { id: 'scenarios', label: 'Scenario Analysis', icon: Activity },\n    { id: 'marketdata', label: 'Market Data', icon: Activity },\n    { id: 'montecarlo', label: 'Monte Carlo', icon: Activity },\n    { id: 'import-export', label: 'Import/Export', icon: Upload }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-slate-900 relative\">\n      <SEOHead\n        title=\"Private Analysis Suite | FinanceAnalyst Pro\"\n        description=\"Comprehensive financial analysis platform with advanced modeling tools, scenario analysis, Monte Carlo simulation, and private equity workflows.\"\n        canonical=\"/private-analysis\"\n        keywords=\"private analysis, financial modeling, scenario analysis, Monte Carlo simulation, LBO analysis, private equity tools\"\n      />\n      <Header />\n      \n      <main id=\"main-content\" className=\"container mx-auto px-4 py-8\" role=\"main\">\n        {/* Header Section */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h1 className=\"text-3xl font-bold text-white\">Private Analysis</h1>\n            \n            <div className=\"flex items-center gap-4\">\n              <StatusIndicator \n                status={dataStatus} \n                label={dataStatus === 'ready' ? 'Ready' : dataStatus === 'saving' ? 'Saving...' : 'Modified'} \n              />\n              \n              {lastSaved && (\n                <div className=\"flex items-center gap-2 text-gray-400\">\n                  <Clock className=\"w-4 h-4\" />\n                  <span className=\"text-sm\">Saved {lastSaved.toLocaleTimeString()}</span>\n                </div>\n              )}\n              \n              <Button\n                onClick={() => saveAnalysis()}\n                disabled={isLoading}\n                className=\"flex items-center gap-2\"\n                variant=\"primary\"\n              >\n                <Save className=\"w-4 h-4\" />\n                {isLoading ? 'Saving...' : 'Save'}\n              </Button>\n            </div>\n          </div>\n\n          {/* Progress Indicators */}\n          <div className=\"grid grid-cols-2 gap-4 mb-6\">\n            <div className=\"bg-slate-800 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-gray-400\">Data Completeness</span>\n                <span className=\"text-white font-semibold\">{getDataCompleteness()}%</span>\n              </div>\n              <div className=\"w-full bg-slate-700 rounded-full h-2\">\n                <div \n                  className=\"bg-blue-500 h-2 rounded-full transition-all duration-500\"\n                  style={{ width: `${getDataCompleteness()}%` }}\n                />\n              </div>\n            </div>\n            \n            <div className=\"bg-slate-800 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-gray-400\">Analysis Progress</span>\n                <span className=\"text-white font-semibold\">{calculateAnalysisProgress()}%</span>\n              </div>\n              <div className=\"w-full bg-slate-700 rounded-full h-2\">\n                <div \n                  className=\"bg-green-500 h-2 rounded-full transition-all duration-500\"\n                  style={{ width: `${calculateAnalysisProgress()}%` }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"mb-6\">\n          <div className=\"flex flex-wrap gap-2 p-1 bg-slate-800 rounded-lg\">\n            {tabs.map(tab => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`\n                    flex items-center gap-2 px-4 py-2 rounded-md transition-all duration-200\n                    ${\n                      activeTab === tab.id\n                        ? 'bg-blue-600 text-white shadow-lg'\n                        : 'text-gray-300 hover:text-white hover:bg-slate-700'\n                    }\n                  `}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span className=\"text-sm font-medium\">{tab.label}</span>\n                </button>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Main Content Area */}\n        <div className=\"relative\">\n          <motion.div\n            key={activeTab}\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -10 }}\n            transition={{ duration: 0.2 }}\n          >\n            {activeTab === 'spreadsheet' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading spreadsheet. Please refresh the page.</div>}>\n                <FinancialSpreadsheet\n                  data={financialData}\n                  onDataChange={setFinancialData}\n                  onAdjustedValuesChange={setAdjustedValues}\n                />\n              </ErrorBoundary>\n            )}\n            \n            {activeTab === 'modeling' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading modeling tools. Please refresh the page.</div>}>\n                <ModelingTools\n                  data={financialData}\n                  adjustedValues={adjustedValues}\n                  onDataChange={setFinancialData}\n                />\n              </ErrorBoundary>\n            )}\n            \n            {activeTab === 'analysis' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading analysis results. Please check your data and refresh.</div>}>\n                <AnalysisResults\n                  data={financialData}\n                  adjustedValues={adjustedValues}\n                  modelInputs={modelInputs}\n                  calculateDCF={(data) => calculateDCF(data, modelInputs)}\n                  formatCurrency={formatCurrency}\n                  formatPercentage={formatPercentage}\n                />\n              </ErrorBoundary>\n            )}\n            \n            {activeTab === 'lbo' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading LBO tool. Please check your data.</div>}>\n                <AdvancedLBOTool\n                  data={financialData}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, lbo: results }))}\n                />\n              </ErrorBoundary>\n            )}\n            \n            {activeTab === 'threestatement' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading financial model workspace.</div>}>\n                <FinancialModelWorkspace\n                  data={financialData}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, threeStatement: results }))}\n                />\n              </ErrorBoundary>\n            )}\n            \n            {activeTab === 'scenarios' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading scenario analysis.</div>}>\n                <EnhancedScenarioAnalysis\n                  data={financialData}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, scenarios: results }))}\n                  calculateDCF={(data) => calculateDCF(data, modelInputs)}\n                  lboModelingEngine={null}\n                />\n              </ErrorBoundary>\n            )}\n            \n            {activeTab === 'marketdata' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading market data dashboard.</div>}>\n                <EnhancedMarketDataDashboard\n                  data={financialData}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, marketData: results }))}\n                />\n              </ErrorBoundary>\n            )}\n            \n            {activeTab === 'montecarlo' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading Monte Carlo integration.</div>}>\n                <MonteCarloIntegrationHub\n                  data={financialData}\n                  dcfResults={advancedResults.dcf}\n                  lboResults={advancedResults.lbo}\n                  financialModel={advancedResults.threeStatement}\n                  scenarioResults={advancedResults.scenarios}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, monteCarlo: results }))}\n                />\n              </ErrorBoundary>\n            )}\n            \n            {activeTab === 'import-export' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading import/export tools.</div>}>\n                <DataExportImport\n                  data={financialData}\n                  onDataChange={setFinancialData}\n                  savedAnalyses={savedAnalyses}\n                  onAnalysesChange={setSavedAnalyses}\n                />\n              </ErrorBoundary>\n            )}\n          </motion.div>\n        </div>\n\n        {/* Contextual Insights Sidebar */}\n        <ContextualInsightsSidebar\n          financialData={financialData}\n          currentMetric={currentMetricFocus}\n          analysisContext={activeTab === 'analysis' ? 'dcf' : activeTab}\n          onInsightClick={handleInsightClick}\n          isVisible={insightsSidebarVisible}\n          onToggle={toggleInsightsSidebar}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default PrivateAnalysis;\n"],"names":["STORAGE_CONFIG","DATA_SCHEMAS","dcfModel","version","required","structure","symbol","assumptions","projections","valuation","metadata","lboModel","transaction","financing","returns","monteCarloResults","modelType","iterations","results","statistics","userPreferences","theme","layout","notifications","privacy","marketData","data","timestamp","source","storageService","constructor","this","isAvailable","checkStorageAvailability","compressionWorker","initializeCompression","setupQuotaMonitoring","test","localStorage","setItem","removeItem","e","apiLogger","log","error","message","window","compressionAvailable","navigator","storage","monitorQuota","estimate","usageRatio","usage","quota","ratio","performCleanup","generateKey","type","identifier","validateData","schemaType","schema","Error","field","expectedType","Object","entries","actualType","Array","isArray","compressData","jsonString","JSON","stringify","length","compressed","simpleCompress","btoa","encodeURIComponent","decompressData","compressedData","isCompressed","decodeURIComponent","atob","options","storageObject","schemaVersion","Date","now","size","processedData","finalObject","key","getItem","stored","parsedStored","parse","decompressedData","current","age","listItems","prefix","items","i","startsWith","replace","push","cutoffTime","cleanedCount","getStorageStats","totalSize","itemCount","typeStats","split","getQuotaInfo","clearAll","keys","forEach","clearedCount","financialDataStorage","saveDCFModel","modelData","dcfData","toUpperCase","createdAt","lastModified","intrinsicValue","getDCFModel","listDCFModels","deleteDCFModel","saveLBOModel","lboData","irr","moic","getLBOModel","listLBOModels","deleteLBOModel","saveMonteCarloResults","modelId","resultsData","mcData","mean","getMonteCarloResults","listMonteCarloResults","deleteMonteCarloResults","saveMarketData","ttlMinutes","expiresAt","getMarketData","deleteMarketData","saveUserPreferences","preferences","prefData","lastUpdated","getUserPreferences","saveWatchlist","name","symbols","watchlistData","map","s","symbolCount","getWatchlist","listWatchlists","deleteWatchlist","exportAllData","exportData","dcfModels","lboModels","watchlists","mcResults","dcfCount","lboCount","mcCount","watchlistCount","importData","importCount","getFinancialDataStats","financialData","cleanupExpiredMarketData","marketDataKeys","DataExportImport","onDataChange","savedAnalyses","onAnalysesChange","activeTab","setActiveTab","useState","isExporting","setIsExporting","isImporting","setIsImporting","exportStatus","setExportStatus","importStatus","setImportStatus","stats","setStats","templates","setTemplates","id","category","lastUsed","uses","collaborators","setCollaborators","email","role","lastActive","avatar","React","useEffect","loadStats","async","storageStats","handleExport","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","toISOString","body","appendChild","click","removeChild","revokeObjectURL","details","totalItems","className","children","jsxs","jsx","onClick","onClose","label","icon","FileSpreadsheet","Bookmark","Users","Download","Upload","Database","tab","Icon","Info","disabled","Fragment","Loader2","CheckCircle","AlertCircle","template","collaborator","FileText","accept","onChange","event","file","target","files","text","toLocaleString","value","bytes","Math","floor","parseFloat","pow","toFixed","formatBytes","ErrorBoundary","Component","props","super","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","render","fallback","PrivateAnalysis","advancedResults","setAdvancedResults","lbo","threeStatement","scenarios","monteCarlo","setFinancialData","defaultFinancialData","adjustedValues","setAdjustedValues","modelInputs","setModelInputs","dcf","discountRate","terminalGrowthRate","projectionYears","taxRate","scenario","insightsSidebarVisible","setInsightsSidebarVisible","currentMetricFocus","setCurrentMetricFocus","setSavedAnalyses","saved","isLoading","setIsLoading","dataStatus","setDataStatus","lastSaved","setLastSaved","getDataCompleteness","statements","completedFields","totalWeightedFields","incomeStatement","balanceSheet","cashFlow","completionPercentage","round","totalRevenue","operatingIncome","max","calculateModelingProgress","progress","min","calculateAnalysisProgress","StatusIndicator","status","getStatusColor","tabs","Activity","SEOHead","title","description","canonical","keywords","Header","Clock","toLocaleTimeString","Button","analysis","toString","toLocaleDateString","dataCompleteness","modelingProgress","analysisProgress","updated","saveAnalysis","variant","Save","style","width","motion","div","initial","opacity","y","animate","exit","transition","duration","FinancialSpreadsheet","onAdjustedValuesChange","ModelingTools","AnalysisResults","calculateDCF","formatCurrency","formatPercentage","AdvancedLBOTool","prev","FinancialModelWorkspace","EnhancedScenarioAnalysis","lboModelingEngine","EnhancedMarketDataDashboard","MonteCarloIntegrationHub","dcfResults","lboResults","financialModel","scenarioResults","ContextualInsightsSidebar","currentMetric","analysisContext","onInsightClick","insight","metric","isVisible","onToggle"],"mappings":"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"}