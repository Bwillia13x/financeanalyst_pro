{"version":3,"file":"advanced-analytics-y00dU25g.js","sources":["../../src/components/AppIcon.jsx","../../src/utils/cn.js","../../src/components/ui/Button.jsx","../../src/components/ErrorBoundary/ProductionErrorBoundary.jsx","../../src/components/ui/Card.jsx","../../src/components/ui/Input.jsx","../../src/components/ui/Select.jsx","../../src/components/AdvancedAnalytics/CreditModeling.jsx","../../src/components/AdvancedAnalytics/DerivativesModeling.jsx","../../src/components/AdvancedAnalytics/FixedIncomeAnalytics.jsx","../../src/components/AdvancedAnalytics/OptionsPricing.jsx","../../src/pages/AdvancedAnalytics.jsx"],"sourcesContent":["import * as LucideIcons from 'lucide-react';\nimport { HelpCircle } from 'lucide-react';\nimport PropTypes from 'prop-types';\n\nfunction Icon({\n  name,\n  size = 24,\n  color = 'currentColor',\n  className = '',\n  strokeWidth = 2,\n  ...props\n}) {\n  const IconComponent = LucideIcons[name];\n\n  if (!IconComponent) {\n    return (\n      <HelpCircle\n        size={size}\n        color=\"gray\"\n        strokeWidth={strokeWidth}\n        className={className}\n        {...props}\n      />\n    );\n  }\n\n  return (\n    <IconComponent\n      size={size}\n      color={color}\n      strokeWidth={strokeWidth}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  strokeWidth: PropTypes.number\n};\n\nexport default Icon;\n","import { clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n","import { Slot } from '@radix-ui/react-slot';\nimport { cva } from 'class-variance-authority';\nimport React from 'react';\n\nimport { cn } from '../../utils/cn';\nimport Icon from '../AppIcon';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-smooth focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 active:scale-95',\n  {\n    variants: {\n      variant: {\n        primary: 'bg-primary text-primary-foreground hover:bg-primary/90 shadow-sm hover:shadow',\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90 shadow-sm hover:shadow',\n        destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90 shadow-sm hover:shadow',\n        outline: 'border border-border bg-background hover:bg-muted hover:text-foreground shadow-sm',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/90 shadow-sm hover:shadow',\n        ghost: 'hover:bg-muted hover:text-foreground',\n        link: 'text-primary underline-offset-4 hover:underline p-0 h-auto',\n        success: 'bg-success text-success-foreground hover:bg-success/90 shadow-sm hover:shadow',\n        warning: 'bg-warning text-warning-foreground hover:bg-warning/90 shadow-sm hover:shadow',\n        danger: 'bg-error text-error-foreground hover:bg-error/90 shadow-sm hover:shadow',\n        minimal: 'text-muted-foreground hover:text-foreground hover:bg-muted/50'\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n        xs: 'h-8 rounded-md px-2 text-xs',\n        xl: 'h-12 rounded-md px-10 text-base'\n      }\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default'\n    }\n  }\n);\n\nconst Button = React.forwardRef(\n  (\n    {\n      className,\n      variant,\n      size,\n      asChild = false,\n      children,\n      loading = false,\n      iconName = null,\n      iconPosition = 'left',\n      iconSize = null,\n      fullWidth = false,\n      disabled = false,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : 'button';\n\n    // Icon size mapping based on button size\n    const iconSizeMap = {\n      xs: 12,\n      sm: 14,\n      default: 16,\n      lg: 18,\n      xl: 20,\n      icon: 16\n    };\n\n    const calculatedIconSize = iconSize || iconSizeMap[size] || 16;\n\n    // Loading spinner\n    const LoadingSpinner = () => (\n      <svg\n        className=\"animate-spin -ml-1 mr-2 h-4 w-4\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        data-loading=\"true\"\n      >\n        <circle\n          className=\"opacity-25\"\n          cx=\"12\"\n          cy=\"12\"\n          r=\"10\"\n          stroke=\"currentColor\"\n          strokeWidth=\"4\"\n        />\n        <path\n          className=\"opacity-75\"\n          fill=\"currentColor\"\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        />\n      </svg>\n    );\n\n    // Icon rendering\n    const renderIcon = () => {\n      if (!iconName) return null;\n\n      return (\n        <Icon\n          name={iconName}\n          size={calculatedIconSize}\n          className={cn(\n            children && iconPosition === 'left' && 'mr-2',\n            children && iconPosition === 'right' && 'ml-2'\n          )}\n        />\n      );\n    };\n\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }), fullWidth && 'w-full')}\n        ref={ref}\n        disabled={disabled || loading}\n        {...props}\n      >\n        {loading && <LoadingSpinner />}\n        {iconName && iconPosition === 'left' && renderIcon()}\n        {children}\n        {iconName && iconPosition === 'right' && renderIcon()}\n      </Comp>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n\nexport default Button;\n","import { AlertTriangle, RefreshCw, Home, MessageCircle } from 'lucide-react';\nimport React from 'react';\n\nimport Button from '../ui/Button';\n\nclass ProductionErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: null\n    };\n  }\n\n  static getDerivedStateFromError(_error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    const errorId = this.generateErrorId();\n\n    this.setState({\n      error,\n      errorInfo,\n      errorId\n    });\n\n    // Log to monitoring service\n    this.logToMonitoring(error, errorInfo, errorId);\n\n    // Development logging\n    if (process.env.NODE_ENV === 'development') {\n      console.group('ðŸš¨ Error Boundary Caught Error');\n      console.error('Error:', error);\n      console.error('Error Info:', errorInfo);\n      console.error('Component Stack:', errorInfo.componentStack);\n      console.groupEnd();\n    }\n  }\n\n  generateErrorId() {\n    return `ERR-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n  }\n\n  logToMonitoring(error, errorInfo, errorId) {\n    try {\n      // Send to Sentry if available\n      if (window.Sentry) {\n        window.Sentry.withScope((scope) => {\n          scope.setTag('errorBoundary', true);\n          scope.setContext('errorInfo', errorInfo);\n          scope.setContext('errorId', errorId);\n          scope.setLevel('error');\n          window.Sentry.captureException(error);\n        });\n      }\n\n      // Send to custom monitoring endpoint\n      fetch('/api/errors', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          errorId,\n          message: error.message,\n          stack: error.stack,\n          componentStack: errorInfo.componentStack,\n          timestamp: new Date().toISOString(),\n          userAgent: navigator.userAgent,\n          url: window.location.href,\n          userId: this.props.userId || 'anonymous'\n        })\n      }).catch(err => {\n        console.warn('Failed to send error to monitoring:', err);\n      });\n\n    } catch (monitoringError) {\n      console.warn('Error in monitoring:', monitoringError);\n    }\n  }\n\n  handleRetry = () => {\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: null\n    });\n  };\n\n  handleReload = () => {\n    window.location.reload();\n  };\n\n  handleGoHome = () => {\n    window.location.href = '/';\n  };\n\n  handleReportIssue = () => {\n    const subject = encodeURIComponent(`Error Report - ${this.state.errorId}`);\n    const body = encodeURIComponent(`\nError ID: ${this.state.errorId}\nError: ${this.state.error?.message}\nURL: ${window.location.href}\nTime: ${new Date().toISOString()}\n\nPlease describe what you were doing when this error occurred:\n[Your description here]\n    `);\n\n    window.open(`mailto:support@financeanalystpro.com?subject=${subject}&amp;body=${body}`);\n  };\n\n  render() {\n    if (this.state.hasError) {\n      const { fallback: Fallback, level = 'component' } = this.props;\n\n      // If custom fallback provided, use it\n      if (Fallback) {\n        return (\n          <Fallback\n            error={this.state.error}\n            errorInfo={this.state.errorInfo}\n            errorId={this.state.errorId}\n            onRetry={this.handleRetry}\n          />\n        );\n      }\n\n      // Component-level error (smaller footprint)\n      if (level === 'component') {\n        return (\n          <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-start space-x-3\">\n              <AlertTriangle className=\"w-5 h-5 text-red-500 mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1 min-w-0\">\n                <h3 className=\"text-sm font-medium text-red-800\">\n                  Component Error\n                </h3>\n                <p className=\"text-sm text-red-600 mt-1\">\n                  This component encountered an error and couldn&apos;t be displayed.\n                </p>\n                <div className=\"mt-3 flex space-x-3\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    onClick={this.handleRetry}\n                    className=\"text-red-700 border-red-300 hover:bg-red-100\"\n                  >\n                    <RefreshCw className=\"w-4 h-4 mr-1\" />\n                    Retry\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n\n      // Page-level error (full page)\n      return (\n        <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\n          <div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-6\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <AlertTriangle className=\"w-8 h-8 text-red-500\" />\n              </div>\n\n              <h1 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                Something went wrong\n              </h1>\n\n              <p className=\"text-gray-600 mb-6\">\n                We apologize for the inconvenience. An unexpected error occurred while loading this page.\n              </p>\n\n              <div className=\"bg-gray-50 rounded-lg p-3 mb-6 text-left\">\n                <div className=\"text-xs text-gray-500 mb-1\">Error ID</div>\n                <div className=\"text-sm font-mono text-gray-800\">{this.state.errorId}</div>\n              </div>\n\n              <div className=\"space-y-3\">\n                <Button\n                  onClick={this.handleRetry}\n                  className=\"w-full\"\n                  variant=\"primary\"\n                >\n                  <RefreshCw className=\"w-4 h-4 mr-2\" />\n                  Try Again\n                </Button>\n\n                <div className=\"flex space-x-3\">\n                  <Button\n                    onClick={this.handleGoHome}\n                    variant=\"secondary\"\n                    className=\"flex-1\"\n                  >\n                    <Home className=\"w-4 h-4 mr-2\" />\n                    Go Home\n                  </Button>\n\n                  <Button\n                    onClick={this.handleReportIssue}\n                    variant=\"outline\"\n                    className=\"flex-1\"\n                  >\n                    <MessageCircle className=\"w-4 h-4 mr-2\" />\n                    Report\n                  </Button>\n                </div>\n\n                <Button\n                  onClick={this.handleReload}\n                  variant=\"ghost\"\n                  className=\"w-full text-sm\"\n                >\n                  Reload Page\n                </Button>\n              </div>\n\n              {process.env.NODE_ENV === 'development' && (\n                <details className=\"mt-6 text-left\">\n                  <summary className=\"text-sm text-gray-500 cursor-pointer hover:text-gray-700\">\n                    Debug Information\n                  </summary>\n                  <div className=\"mt-2 p-3 bg-gray-100 rounded text-xs font-mono overflow-auto max-h-40\">\n                    <div className=\"mb-2\">\n                      <strong>Error:</strong> {this.state.error?.message}\n                    </div>\n                    <div className=\"mb-2\">\n                      <strong>Stack:</strong>\n                      <pre className=\"mt-1 whitespace-pre-wrap\">{this.state.error?.stack}</pre>\n                    </div>\n                    <div>\n                      <strong>Component Stack:</strong>\n                      <pre className=\"mt-1 whitespace-pre-wrap\">{this.state.errorInfo?.componentStack}</pre>\n                    </div>\n                  </div>\n                </details>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ProductionErrorBoundary;\n","import React from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('rounded-lg border bg-card text-card-foreground shadow-sm', className)}\n    {...props}\n  />\n));\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('flex flex-col space-y-1.5 p-6', className)} {...props} />\n));\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef(({ className, ...props }, _ref) => (\n  <h3 className={cn('text-2xl font-semibold leading-none tracking-tight', className)} {...props}>\n    {props.children || 'Card Title'}\n  </h3>\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p ref={ref} className={cn('text-sm text-muted-foreground', className)} {...props} />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('flex items-center p-6 pt-0', className)} {...props} />\n));\nCardFooter.displayName = 'CardFooter';\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };\n","import React from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst Input = React.forwardRef(\n  (\n    { className, type = 'text', label, description, error, required = false, id, ...props },\n    ref\n  ) => {\n    // Generate unique ID if not provided\n    const inputId = id || `input-${Math.random().toString(36).substr(2, 9)}`;\n\n    // Base input classes\n    const baseInputClasses =\n      'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50';\n\n    // Checkbox-specific styles\n    if (type === 'checkbox') {\n      return (\n        <input\n          type=\"checkbox\"\n          className={cn(\n            'h-4 w-4 rounded border border-input bg-background text-primary focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n            className\n          )}\n          ref={ref}\n          id={inputId}\n          {...props}\n        />\n      );\n    }\n\n    // Radio button-specific styles\n    if (type === 'radio') {\n      return (\n        <input\n          type=\"radio\"\n          className={cn(\n            'h-4 w-4 rounded-full border border-input bg-background text-primary focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n            className\n          )}\n          ref={ref}\n          id={inputId}\n          {...props}\n        />\n      );\n    }\n\n    // For regular inputs with wrapper structure\n    return (\n      <div className=\"space-y-2\">\n        {label && (\n          <label\n            htmlFor={inputId}\n            className={cn(\n              'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n              error ? 'text-destructive' : 'text-foreground'\n            )}\n          >\n            {label}\n            {required && <span className=\"text-destructive ml-1\">*</span>}\n          </label>\n        )}\n\n        <input\n          type={type}\n          className={cn(\n            baseInputClasses,\n            error && 'border-destructive focus-visible:ring-destructive',\n            className\n          )}\n          ref={ref}\n          id={inputId}\n          {...props}\n        />\n\n        {description && !error && <p className=\"text-sm text-muted-foreground\">{description}</p>}\n\n        {error && <p className=\"text-sm text-destructive\">{error}</p>}\n      </div>\n    );\n  }\n);\n\nInput.displayName = 'Input';\n\nexport default Input;\n","// components/ui/Select.jsx - Shadcn style Select\nimport { ChevronDown, Check, Search, X } from 'lucide-react';\nimport React, { useState } from 'react';\n\nimport { cn } from '../../utils/cn';\n\nimport Button from './Button';\nimport Input from './Input';\n\nconst Select = React.forwardRef(\n  (\n    {\n      className,\n      options = [],\n      value,\n      _defaultValue,\n      placeholder = 'Select an option',\n      multiple = false,\n      disabled = false,\n      required = false,\n      label,\n      description,\n      error,\n      searchable = false,\n      clearable = false,\n      loading = false,\n      id,\n      name,\n      onChange,\n      onOpenChange,\n      ...props\n    },\n    ref\n  ) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    // Generate unique ID if not provided\n    const selectId = id || `select-${Math.random().toString(36).substr(2, 9)}`;\n\n    // Filter options based on search\n    const filteredOptions =\n      searchable && searchTerm\n        ? options.filter(\n          option =>\n            option.label.toLowerCase().includes(searchTerm.toLowerCase()) ||\n              (option.value &&\n                option.value.toString().toLowerCase().includes(searchTerm.toLowerCase()))\n        )\n        : options;\n\n    // Get selected option(s) for display\n    const getSelectedDisplay = () => {\n      if (!value) return placeholder;\n\n      if (multiple) {\n        const selectedOptions = options.filter(opt => value.includes(opt.value));\n        if (selectedOptions.length === 0) return placeholder;\n        if (selectedOptions.length === 1) return selectedOptions[0].label;\n        return `${selectedOptions.length} items selected`;\n      }\n\n      const selectedOption = options.find(opt => opt.value === value);\n      return selectedOption ? selectedOption.label : placeholder;\n    };\n\n    const handleToggle = () => {\n      if (!disabled) {\n        const newIsOpen = !isOpen;\n        setIsOpen(newIsOpen);\n        onOpenChange?.(newIsOpen);\n        if (!newIsOpen) {\n          setSearchTerm('');\n        }\n      }\n    };\n\n    const handleOptionSelect = option => {\n      if (multiple) {\n        const newValue = value || [];\n        const updatedValue = newValue.includes(option.value)\n          ? newValue.filter(v => v !== option.value)\n          : [...newValue, option.value];\n        onChange?.(updatedValue);\n      } else {\n        onChange?.(option.value);\n        setIsOpen(false);\n        onOpenChange?.(false);\n      }\n    };\n\n    const handleClear = e => {\n      e.stopPropagation();\n      onChange?.(multiple ? [] : '');\n    };\n\n    const handleSearchChange = e => {\n      setSearchTerm(e.target.value);\n    };\n\n    const isSelected = optionValue => {\n      if (multiple) {\n        return value?.includes(optionValue) || false;\n      }\n      return value === optionValue;\n    };\n\n    const hasValue = multiple ? value?.length > 0 : value !== undefined && value !== '';\n\n    return (\n      <div className={cn('relative', className)}>\n        {label && (\n          <label\n            htmlFor={selectId}\n            className={cn(\n              'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 mb-2 block',\n              error ? 'text-destructive' : 'text-foreground'\n            )}\n          >\n            {label}\n            {required && <span className=\"text-destructive ml-1\">*</span>}\n          </label>\n        )}\n\n        <div className=\"relative\">\n          <button\n            ref={ref}\n            id={selectId}\n            type=\"button\"\n            className={cn(\n              'flex h-10 w-full items-center justify-between rounded-md border border-input bg-white text-black px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n              error && 'border-destructive focus:ring-destructive',\n              !hasValue && 'text-muted-foreground'\n            )}\n            onClick={handleToggle}\n            disabled={disabled}\n            aria-expanded={isOpen}\n            aria-haspopup=\"listbox\"\n            {...props}\n          >\n            <span className=\"truncate\">{getSelectedDisplay()}</span>\n\n            <div className=\"flex items-center gap-1\">\n              {loading && (\n                <svg className=\"animate-spin h-4 w-4\" viewBox=\"0 0 24 24\">\n                  <circle\n                    className=\"opacity-25\"\n                    cx=\"12\"\n                    cy=\"12\"\n                    r=\"10\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"4\"\n                    fill=\"none\"\n                  />\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  />\n                </svg>\n              )}\n\n              {clearable && hasValue && !loading && (\n                <Button\n                  variant=\"ghost\" size=\"icon\" className=\"h-4 w-4\"\n                  onClick={handleClear}\n                >\n                  <X className=\"h-3 w-3\" />\n                </Button>\n              )}\n\n              <ChevronDown className={cn('h-4 w-4 transition-transform', isOpen && 'rotate-180')} />\n            </div>\n          </button>\n\n          {/* Hidden native select for form submission */}\n          <select\n            name={name}\n            value={value || ''}\n            onChange={() => {}} // Controlled by our custom logic\n            className=\"sr-only\"\n            tabIndex={-1}\n            multiple={multiple}\n            required={required}\n          >\n            <option value=\"\">Select...</option>\n            {options.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n\n          {/* Dropdown */}\n          {isOpen && (\n            <div className=\"absolute z-50 w-full mt-1 bg-white text-black border border-border rounded-md shadow-md\">\n              {searchable && (\n                <div className=\"p-2 border-b\">\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                    <Input\n                      placeholder=\"Search options...\"\n                      value={searchTerm}\n                      onChange={handleSearchChange}\n                      className=\"pl-8\"\n                    />\n                  </div>\n                </div>\n              )}\n\n              <div className=\"py-1 max-h-60 overflow-auto\">\n                {filteredOptions.length === 0 ? (\n                  <div className=\"px-3 py-2 text-sm text-muted-foreground\">\n                    {searchTerm ? 'No options found' : 'No options available'}\n                  </div>\n                ) : (\n                  filteredOptions.map(option => (\n                    <div\n                      key={option.value}\n                      role=\"option\"\n                      tabIndex={0}\n                      aria-selected={isSelected(option.value)}\n                      className={cn(\n                        'relative flex cursor-pointer select-none items-center rounded-sm px-3 py-2 text-sm outline-none hover:bg-accent hover:text-accent-foreground',\n                        isSelected(option.value) && 'bg-primary text-primary-foreground',\n                        option.disabled && 'pointer-events-none opacity-50'\n                      )}\n                      onClick={() => !option.disabled && handleOptionSelect(option)}\n                      onKeyDown={(e) => {\n                        if (e.key === 'Enter' || e.key === ' ') {\n                          e.preventDefault();\n                          if (!option.disabled) handleOptionSelect(option);\n                        }\n                      }}\n                    >\n                      <span className=\"flex-1\">{option.label}</span>\n                      {multiple && isSelected(option.value) && <Check className=\"h-4 w-4\" />}\n                      {option.description && (\n                        <span className=\"text-xs text-muted-foreground ml-2\">\n                          {option.description}\n                        </span>\n                      )}\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {description && !error && (\n          <p className=\"text-sm text-muted-foreground mt-1\">{description}</p>\n        )}\n\n        {error && <p className=\"text-sm text-destructive mt-1\">{error}</p>}\n      </div>\n    );\n  }\n);\n\nSelect.displayName = 'Select';\n\nexport default Select;\n","import { useState, useMemo } from 'react';\nimport { XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar, PieChart, Pie, Cell } from 'recharts';\n\nimport { Card } from '../ui/Card';\nimport Input from '../ui/Input';\nimport Select from '../ui/Select';\n\n\nconst CreditModeling = () => {\n  const [inputs, setInputs] = useState({\n    exposureAmount: 1000000,\n    timeHorizon: 1,\n    lgd: 0.45, // Loss Given Default\n    pd: 0.02, // Probability of Default\n    correlationFactor: 0.15,\n    confidenceLevel: 0.999\n  });\n\n  const [scorecardInputs, setScorecardInputs] = useState({\n    revenue: 50000000,\n    debt: 15000000,\n    ebitda: 8000000,\n    currentRatio: 1.5,\n    quickRatio: 1.2,\n    industryRisk: 'medium',\n    managementQuality: 'good',\n    marketPosition: 'strong'\n  });\n\n  // Credit risk calculations\n  const creditRiskMetrics = useMemo(() => {\n    const { exposureAmount: EAD, lgd: LGD, pd: PD, timeHorizon, confidenceLevel } = inputs;\n\n    // Expected Loss\n    const expectedLoss = EAD * PD * LGD;\n\n    // Unexpected Loss (single asset)\n    const unexpectedLoss = EAD * LGD * Math.sqrt(PD * (1 - PD));\n\n    // Economic Capital (using normal approximation)\n    const normalInverse = (p) => {\n      // Approximation of inverse normal CDF\n      const c0 = 2.515517;\n      const c1 = 0.802853;\n      const c2 = 0.010328;\n      const d1 = 1.432788;\n      const d2 = 0.189269;\n      const d3 = 0.001308;\n\n      const t = Math.sqrt(-2 * Math.log(1 - p));\n      return t - (c0 + c1 * t + c2 * t * t) / (1 + d1 * t + d2 * t * t + d3 * t * t * t);\n    };\n\n    const economicCapital = normalInverse(confidenceLevel) * unexpectedLoss;\n\n    // Value at Risk\n    const valueAtRisk = expectedLoss + economicCapital;\n\n    // RAROC (Risk-Adjusted Return on Capital)\n    const assumedSpread = 0.025; // 250 bps spread\n    const revenue = EAD * assumedSpread;\n    const raroc = (revenue - expectedLoss) / economicCapital;\n\n    // Cumulative default probability over time horizon\n    const cumulativePD = 1 - Math.pow(1 - PD, timeHorizon);\n\n    return {\n      expectedLoss,\n      unexpectedLoss,\n      economicCapital,\n      valueAtRisk,\n      raroc,\n      cumulativePD,\n      lossRate: expectedLoss / EAD,\n      capitalRatio: economicCapital / EAD\n    };\n  }, [inputs]);\n\n  // Credit scorecard calculation\n  const creditScore = useMemo(() => {\n    const { revenue, debt, ebitda, currentRatio, quickRatio, industryRisk, managementQuality, marketPosition } = scorecardInputs;\n\n    let score = 0;\n    let maxScore = 0;\n\n    // Financial ratios (60% weight)\n    const debtToEbitda = debt / ebitda;\n    const ebitdaMargin = ebitda / revenue;\n\n    // Debt/EBITDA scoring (20 points)\n    maxScore += 20;\n    if (debtToEbitda < 1) score += 20;\n    else if (debtToEbitda < 2) score += 15;\n    else if (debtToEbitda < 3) score += 10;\n    else if (debtToEbitda < 4) score += 5;\n\n    // EBITDA Margin scoring (20 points)\n    maxScore += 20;\n    if (ebitdaMargin > 0.20) score += 20;\n    else if (ebitdaMargin > 0.15) score += 15;\n    else if (ebitdaMargin > 0.10) score += 10;\n    else if (ebitdaMargin > 0.05) score += 5;\n\n    // Current Ratio scoring (10 points)\n    maxScore += 10;\n    if (currentRatio > 2) score += 10;\n    else if (currentRatio > 1.5) score += 8;\n    else if (currentRatio > 1.2) score += 6;\n    else if (currentRatio > 1) score += 4;\n\n    // Quick Ratio scoring (10 points)\n    maxScore += 10;\n    if (quickRatio > 1.5) score += 10;\n    else if (quickRatio > 1.2) score += 8;\n    else if (quickRatio > 1) score += 6;\n    else if (quickRatio > 0.8) score += 4;\n\n    // Industry Risk (15 points)\n    maxScore += 15;\n    const industryScores = { low: 15, medium: 10, high: 5 };\n    score += industryScores[industryRisk] || 0;\n\n    // Management Quality (15 points)\n    maxScore += 15;\n    const mgmtScores = { excellent: 15, good: 12, fair: 8, poor: 3 };\n    score += mgmtScores[managementQuality] || 0;\n\n    // Market Position (10 points)\n    maxScore += 10;\n    const marketScores = { dominant: 10, strong: 8, competitive: 6, weak: 3 };\n    score += marketScores[marketPosition] || 0;\n\n    const scorePercentage = (score / maxScore) * 100;\n\n    // Convert to rating\n    let rating;\n    if (scorePercentage >= 90) rating = 'AAA';\n    else if (scorePercentage >= 85) rating = 'AA';\n    else if (scorePercentage >= 80) rating = 'A';\n    else if (scorePercentage >= 75) rating = 'BBB';\n    else if (scorePercentage >= 65) rating = 'BB';\n    else if (scorePercentage >= 55) rating = 'B';\n    else if (scorePercentage >= 45) rating = 'CCC';\n    else rating = 'D';\n\n    // Estimate PD based on rating\n    const ratingPDs = {\n      'AAA': 0.0001, 'AA': 0.0005, 'A': 0.002, 'BBB': 0.01,\n      'BB': 0.04, 'B': 0.12, 'CCC': 0.35, 'D': 1.0\n    };\n\n    return {\n      score,\n      maxScore,\n      scorePercentage,\n      rating,\n      estimatedPD: ratingPDs[rating],\n      debtToEbitda,\n      ebitdaMargin\n    };\n  }, [scorecardInputs]);\n\n  // Portfolio risk simulation data\n  const _portfolioRiskData = useMemo(() => {\n    const scenarios = [];\n\n    for (let i = 0; i < 50; i++) { // Show 50 sample scenarios\n      const randomPD = Math.random() * 0.1; // 0-10% PD range\n      const loss = inputs.exposureAmount * randomPD * inputs.lgd;\n      scenarios.push({\n        scenario: i + 1,\n        pd: randomPD,\n        loss: loss / 1000, // Convert to thousands\n        lossPercentage: (loss / inputs.exposureAmount) * 100\n      });\n    }\n\n    return scenarios.sort((a, b) => a.loss - b.loss);\n  }, [inputs]);\n\n  const handleInputChange = (field, value) => {\n    setInputs(prev => ({\n      ...prev,\n      [field]: parseFloat(value) || 0\n    }));\n  };\n\n  const handleScorecardChange = (field, value) => {\n    setScorecardInputs(prev => ({\n      ...prev,\n      [field]: isNaN(parseFloat(value)) ? value : parseFloat(value)\n    }));\n  };\n\n  const COLORS = ['#3b82f6', '#ef4444', '#22c55e', '#f59e0b', '#8b5cf6'];\n\n  const lossDistributionData = [\n    { range: '0-1%', count: 850, probability: 0.85 },\n    { range: '1-3%', count: 100, probability: 0.10 },\n    { range: '3-5%', count: 30, probability: 0.03 },\n    { range: '5-10%', count: 15, probability: 0.015 },\n    { range: '>10%', count: 5, probability: 0.005 }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <Card className=\"lg:col-span-1\">\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Credit Risk Parameters</h3>\n\n            <div className=\"space-y-4\">\n              <div>\n                <label htmlFor=\"exposureAmount\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Exposure Amount ($)\n                </label>\n                <Input\n                  id=\"exposureAmount\"\n                  type=\"number\"\n                  step=\"1000\"\n                  value={inputs.exposureAmount}\n                  onChange={(e) => handleInputChange('exposureAmount', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"pd\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Probability of Default (%)\n                </label>\n                <Input\n                  id=\"pd\"\n                  type=\"number\"\n                  step=\"0.001\"\n                  value={inputs.pd * 100}\n                  onChange={(e) => handleInputChange('pd', e.target.value / 100)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"lgd\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Loss Given Default (%)\n                </label>\n                <Input\n                  id=\"lgd\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={inputs.lgd * 100}\n                  onChange={(e) => handleInputChange('lgd', e.target.value / 100)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"timeHorizon\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Time Horizon (Years)\n                </label>\n                <Input\n                  id=\"timeHorizon\"\n                  type=\"number\"\n                  step=\"0.25\"\n                  value={inputs.timeHorizon}\n                  onChange={(e) => handleInputChange('timeHorizon', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"confidenceLevel\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Confidence Level (%)\n                </label>\n                <Input\n                  id=\"confidenceLevel\"\n                  type=\"number\"\n                  step=\"0.001\"\n                  value={inputs.confidenceLevel * 100}\n                  onChange={(e) => handleInputChange('confidenceLevel', e.target.value / 100)}\n                />\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        <Card className=\"lg:col-span-2\">\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Credit Risk Metrics</h3>\n\n            {creditRiskMetrics && (\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n                <div className=\"bg-red-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Expected Loss</div>\n                  <div className=\"text-xl font-bold text-red-600\">\n                    ${creditRiskMetrics.expectedLoss?.toLocaleString() || 'N/A'}\n                  </div>\n                </div>\n\n                <div className=\"bg-orange-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Unexpected Loss</div>\n                  <div className=\"text-lg font-semibold text-orange-600\">\n                    ${creditRiskMetrics.unexpectedLoss?.toLocaleString() || 'N/A'}\n                  </div>\n                </div>\n\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Economic Capital</div>\n                  <div className=\"text-lg font-semibold text-blue-600\">\n                    ${creditRiskMetrics.economicCapital?.toLocaleString() || 'N/A'}\n                  </div>\n                </div>\n\n                <div className=\"bg-purple-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Value at Risk</div>\n                  <div className=\"text-lg font-semibold text-purple-600\">\n                    ${creditRiskMetrics.valueAtRisk?.toLocaleString() || 'N/A'}\n                  </div>\n                </div>\n\n                <div className=\"bg-green-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">RAROC</div>\n                  <div className=\"text-lg font-semibold text-green-600\">\n                    {(creditRiskMetrics.raroc * 100)?.toFixed(1) || 'N/A'}%\n                  </div>\n                </div>\n\n                <div className=\"bg-yellow-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Cumulative PD</div>\n                  <div className=\"text-lg font-semibold text-yellow-600\">\n                    {(creditRiskMetrics.cumulativePD * 100)?.toFixed(3) || 'N/A'}%\n                  </div>\n                </div>\n\n                <div className=\"bg-indigo-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Loss Rate</div>\n                  <div className=\"text-lg font-semibold text-indigo-600\">\n                    {(creditRiskMetrics.lossRate * 100)?.toFixed(3) || 'N/A'}%\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Capital Ratio</div>\n                  <div className=\"text-lg font-semibold text-gray-600\">\n                    {(creditRiskMetrics.capitalRatio * 100)?.toFixed(2) || 'N/A'}%\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </Card>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Credit Scorecard</h3>\n\n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\n              <div>\n                <label htmlFor=\"revenue\" className=\"block text-sm font-medium text-gray-700 mb-1\">Revenue ($)</label>\n                <Input\n                  id=\"revenue\"\n                  type=\"number\"\n                  value={scorecardInputs.revenue}\n                  onChange={(e) => handleScorecardChange('revenue', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"debt\" className=\"block text-sm font-medium text-gray-700 mb-1\">Total Debt ($)</label>\n                <Input\n                  id=\"debt\"\n                  type=\"number\"\n                  value={scorecardInputs.debt}\n                  onChange={(e) => handleScorecardChange('debt', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"ebitda\" className=\"block text-sm font-medium text-gray-700 mb-1\">EBITDA ($)</label>\n                <Input\n                  id=\"ebitda\"\n                  type=\"number\"\n                  value={scorecardInputs.ebitda}\n                  onChange={(e) => handleScorecardChange('ebitda', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"currentRatio\" className=\"block text-sm font-medium text-gray-700 mb-1\">Current Ratio</label>\n                <Input\n                  id=\"currentRatio\"\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={scorecardInputs.currentRatio}\n                  onChange={(e) => handleScorecardChange('currentRatio', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"industryRisk\" className=\"block text-sm font-medium text-gray-700 mb-1\">Industry Risk</label>\n                <Select\n                  id=\"industryRisk\"\n                  value={scorecardInputs.industryRisk}\n                  onChange={(e) => handleScorecardChange('industryRisk', e.target.value)}\n                  options={[\n                    { value: 'low', label: 'Low Risk' },\n                    { value: 'medium', label: 'Medium Risk' },\n                    { value: 'high', label: 'High Risk' }\n                  ]}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"managementQuality\" className=\"block text-sm font-medium text-gray-700 mb-1\">Management Quality</label>\n                <Select\n                  id=\"managementQuality\"\n                  value={scorecardInputs.managementQuality}\n                  onChange={(e) => handleScorecardChange('managementQuality', e.target.value)}\n                  options={[\n                    { value: 'excellent', label: 'Excellent' },\n                    { value: 'good', label: 'Good' },\n                    { value: 'fair', label: 'Fair' },\n                    { value: 'poor', label: 'Poor' }\n                  ]}\n                />\n              </div>\n            </div>\n\n            {creditScore && (\n              <div className=\"bg-gradient-to-r from-blue-50 to-green-50 p-4 rounded-lg\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-lg font-semibold\">Credit Rating:</span>\n                  <span className=\"text-2xl font-bold text-blue-600\">{creditScore.rating}</span>\n                </div>\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span>Score:</span>\n                  <span className=\"font-semibold\">{creditScore.score}/{creditScore.maxScore} ({creditScore.scorePercentage.toFixed(1)}%)</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span>Estimated PD:</span>\n                  <span className=\"font-semibold\">{(creditScore.estimatedPD * 100).toFixed(3)}%</span>\n                </div>\n              </div>\n            )}\n          </div>\n        </Card>\n\n        <Card>\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Loss Distribution</h3>\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <BarChart data={lossDistributionData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"range\" />\n                <YAxis />\n                <Tooltip\n                  formatter={(value, name) => [\n                    name === 'count' ? `${value} scenarios` : `${(value * 100).toFixed(1)}%`,\n                    name === 'count' ? 'Scenarios' : 'Probability'\n                  ]}\n                />\n                <Bar dataKey=\"count\" fill=\"#3b82f6\" />\n              </BarChart>\n            </ResponsiveContainer>\n\n            <div className=\"mt-4\">\n              <h4 className=\"text-sm font-semibold mb-2\">Risk Concentration</h4>\n              <ResponsiveContainer width=\"100%\" height={200}>\n                <PieChart>\n                  <Pie\n                    data={lossDistributionData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    innerRadius={40}\n                    outerRadius={80}\n                    dataKey=\"probability\"\n                    nameKey=\"range\"\n                  >\n                    {lossDistributionData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                  </Pie>\n                  <Tooltip formatter={(value) => `${(value * 100).toFixed(1)}%`} />\n                  <Legend />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default CreditModeling;\n","import { useState, useMemo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, AreaChart, Area } from 'recharts';\n\nimport Button from '../ui/Button';\nimport { Card } from '../ui/Card';\nimport Input from '../ui/Input';\nimport Select from '../ui/Select';\n\n\nconst DerivativesModeling = () => {\n  const [activeDerivative, setActiveDerivative] = useState('swap');\n\n  const [swapInputs, setSwapInputs] = useState({\n    notional: 10000000,\n    maturity: 5,\n    fixedRate: 0.035,\n    floatingRate: 0.03,\n    paymentFrequency: 2,\n    dayCount: 'ACT/360'\n  });\n\n  const [futureInputs, setFutureInputs] = useState({\n    underlyingPrice: 100,\n    strikePrice: 102,\n    timeToExpiry: 0.25,\n    riskFreeRate: 0.05,\n    dividendYield: 0.02,\n    contractSize: 100\n  });\n\n  // Interest Rate Swap valuation\n  const swapValuation = useMemo(() => {\n    const { notional, maturity, fixedRate, floatingRate, paymentFrequency } = swapInputs;\n\n    if (!notional || !maturity || !paymentFrequency) return null;\n\n    const periodsPerYear = paymentFrequency;\n    const totalPeriods = maturity * periodsPerYear;\n    const fixedPayment = (fixedRate * notional) / periodsPerYear;\n    const floatingPayment = (floatingRate * notional) / periodsPerYear;\n\n    // Simplified discount curve (flat yield curve assumption)\n    const discountRate = floatingRate;\n\n    // Present value of fixed leg\n    let pvFixedLeg = 0;\n    for (let i = 1; i <= totalPeriods; i++) {\n      pvFixedLeg += fixedPayment / Math.pow(1 + discountRate / periodsPerYear, i);\n    }\n\n    // Present value of floating leg (first payment known, rest at par)\n    let pvFloatingLeg = floatingPayment / Math.pow(1 + discountRate / periodsPerYear, 1);\n    pvFloatingLeg += notional / Math.pow(1 + discountRate / periodsPerYear, totalPeriods);\n    pvFloatingLeg -= notional; // Subtract notional at inception\n\n    const swapValue = pvFixedLeg - pvFloatingLeg; // From fixed payer perspective\n\n    // Duration calculation\n    let durationSum = 0;\n    for (let i = 1; i <= totalPeriods; i++) {\n      const pv = fixedPayment / Math.pow(1 + discountRate / periodsPerYear, i);\n      durationSum += (i / periodsPerYear) * pv;\n    }\n    const duration = durationSum / pvFixedLeg;\n\n    // DV01 calculation\n    const dv01 = duration * Math.abs(pvFixedLeg) * 0.0001;\n\n    return {\n      swapValue,\n      pvFixedLeg,\n      pvFloatingLeg,\n      duration,\n      dv01,\n      fixedPayment,\n      floatingPayment\n    };\n  }, [swapInputs]);\n\n  // Futures pricing\n  const futuresValuation = useMemo(() => {\n    const { underlyingPrice: S, timeToExpiry: T, riskFreeRate: r, dividendYield: q, contractSize } = futureInputs;\n\n    if (!S || !T || !contractSize) return null;\n\n    // Futures price formula: F = S * e^((r-q)*T)\n    const futuresPrice = S * Math.exp((r - q) * T);\n\n    // Contract value\n    const contractValue = futuresPrice * contractSize;\n\n    // Basis (Futures - Spot)\n    const basis = futuresPrice - S;\n\n    // Carry cost\n    const carryCost = S * (r - q) * T;\n\n    return {\n      futuresPrice,\n      contractValue,\n      basis,\n      carryCost,\n      underlyingValue: S * contractSize\n    };\n  }, [futureInputs]);\n\n  // Generate payoff diagrams\n  const payoffData = useMemo(() => {\n    const spotPrices = [];\n    for (let i = 80; i <= 120; i += 2) {\n      spotPrices.push(i);\n    }\n\n    if (activeDerivative === 'swap') {\n      return spotPrices.map(rate => {\n        const rateDiff = (rate / 100 - swapInputs.fixedRate);\n        const swapPnL = rateDiff * swapInputs.notional * swapInputs.maturity;\n\n        return {\n          spotPrice: rate,\n          payoff: swapPnL / 1000000, // Convert to millions\n          derivative: 'Interest Rate Swap'\n        };\n      });\n    } else {\n      return spotPrices.map(spot => {\n        const futureValue = spot * Math.exp((futureInputs.riskFreeRate - futureInputs.dividendYield) * futureInputs.timeToExpiry);\n        const contractPnL = (futureValue - futureInputs.strikePrice) * futureInputs.contractSize;\n\n        return {\n          spotPrice: spot,\n          payoff: contractPnL / 1000, // Convert to thousands\n          derivative: 'Futures Contract'\n        };\n      });\n    }\n  }, [activeDerivative, swapInputs, futureInputs]);\n\n  // Risk scenarios\n  const riskScenarios = useMemo(() => {\n    const scenarios = [];\n    const shocks = [-0.02, -0.01, -0.005, 0, 0.005, 0.01, 0.02];\n\n    if (activeDerivative === 'swap' && swapValuation) {\n      shocks.forEach(shock => {\n        const newRate = swapInputs.floatingRate + shock;\n        const rateDiff = newRate - swapInputs.fixedRate;\n        const valueChange = rateDiff * swapInputs.notional * swapInputs.maturity;\n\n        scenarios.push({\n          shock: shock * 100, // Convert to bps\n          valueChange: valueChange / 1000000, // Convert to millions\n          newValue: (swapValuation.swapValue + valueChange) / 1000000\n        });\n      });\n    } else if (futuresValuation) {\n      shocks.forEach(shock => {\n        const newSpot = futureInputs.underlyingPrice * (1 + shock);\n        const newFuturesPrice = newSpot * Math.exp((futureInputs.riskFreeRate - futureInputs.dividendYield) * futureInputs.timeToExpiry);\n        const valueChange = (newFuturesPrice - futuresValuation.futuresPrice) * futureInputs.contractSize;\n\n        scenarios.push({\n          shock: shock * 100, // Convert to percentage\n          valueChange: valueChange / 1000, // Convert to thousands\n          newValue: (futuresValuation.contractValue + valueChange) / 1000\n        });\n      });\n    }\n\n    return scenarios;\n  }, [activeDerivative, swapInputs, futureInputs, swapValuation, futuresValuation]);\n\n  const handleSwapInputChange = (field, value) => {\n    setSwapInputs(prev => ({\n      ...prev,\n      [field]: parseFloat(value) || 0\n    }));\n  };\n\n  const handleFutureInputChange = (field, value) => {\n    setFutureInputs(prev => ({\n      ...prev,\n      [field]: parseFloat(value) || 0\n    }));\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex space-x-4 mb-6\">\n        <Button\n          variant={activeDerivative === 'swap' ? 'primary' : 'secondary'}\n          onClick={() => setActiveDerivative('swap')}\n        >\n          Interest Rate Swaps\n        </Button>\n        <Button\n          variant={activeDerivative === 'futures' ? 'primary' : 'secondary'}\n          onClick={() => setActiveDerivative('futures')}\n        >\n          Futures Contracts\n        </Button>\n      </div>\n\n      {activeDerivative === 'swap' && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          <Card className=\"lg:col-span-1\">\n            <div className=\"p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">Swap Parameters</h3>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label htmlFor=\"notional-amount\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Notional Amount ($)\n                  </label>\n                  <Input\n                    id=\"notional-amount\"\n                    type=\"number\"\n                    step=\"1000000\"\n                    value={swapInputs.notional}\n                    onChange={(e) => handleSwapInputChange('notional', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"maturity-years\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Maturity (Years)\n                  </label>\n                  <Input\n                    id=\"maturity-years\"\n                    type=\"number\"\n                    step=\"0.25\"\n                    value={swapInputs.maturity}\n                    onChange={(e) => handleSwapInputChange('maturity', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"fixed-rate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Fixed Rate (%)\n                  </label>\n                  <Input\n                    id=\"fixed-rate\"\n                    type=\"number\"\n                    step=\"0.001\"\n                    value={swapInputs.fixedRate * 100}\n                    onChange={(e) => handleSwapInputChange('fixedRate', e.target.value / 100)}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"floating-rate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Current Floating Rate (%)\n                  </label>\n                  <Input\n                    id=\"floating-rate\"\n                    type=\"number\"\n                    step=\"0.001\"\n                    value={swapInputs.floatingRate * 100}\n                    onChange={(e) => handleSwapInputChange('floatingRate', e.target.value / 100)}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"payment-frequency\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Payment Frequency\n                  </label>\n                  <Select\n                    id=\"payment-frequency\"\n                    value={swapInputs.paymentFrequency}\n                    onChange={(e) => handleSwapInputChange('paymentFrequency', e.target.value)}\n                    options={[\n                      { value: 1, label: 'Annual' },\n                      { value: 2, label: 'Semi-Annual' },\n                      { value: 4, label: 'Quarterly' }\n                    ]}\n                  />\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          <Card className=\"lg:col-span-2\">\n            <div className=\"p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">Swap Valuation</h3>\n\n              {swapValuation && (\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\n                  <div className=\"bg-blue-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Swap Value</div>\n                    <div className=\"text-xl font-bold text-blue-600\">\n                      ${swapValuation.swapValue?.toLocaleString() || 'N/A'}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-green-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">PV Fixed Leg</div>\n                    <div className=\"text-lg font-semibold text-green-600\">\n                      ${swapValuation.pvFixedLeg?.toLocaleString() || 'N/A'}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-red-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">PV Floating Leg</div>\n                    <div className=\"text-lg font-semibold text-red-600\">\n                      ${swapValuation.pvFloatingLeg?.toLocaleString() || 'N/A'}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-purple-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Duration</div>\n                    <div className=\"text-lg font-semibold text-purple-600\">\n                      {swapValuation.duration?.toFixed(2) || 'N/A'}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-yellow-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">DV01</div>\n                    <div className=\"text-lg font-semibold text-yellow-600\">\n                      ${swapValuation.dv01?.toLocaleString() || 'N/A'}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-indigo-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Fixed Payment</div>\n                    <div className=\"text-lg font-semibold text-indigo-600\">\n                      ${swapValuation.fixedPayment?.toLocaleString() || 'N/A'}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </Card>\n        </div>\n      )}\n\n      {activeDerivative === 'futures' && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          <Card className=\"lg:col-span-1\">\n            <div className=\"p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">Futures Parameters</h3>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label htmlFor=\"underlying-price\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Underlying Price ($)\n                  </label>\n                  <Input\n                    id=\"underlying-price\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={futureInputs.underlyingPrice}\n                    onChange={(e) => handleFutureInputChange('underlyingPrice', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"strike-price\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Strike Price ($)\n                  </label>\n                  <Input\n                    id=\"strike-price\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={futureInputs.strikePrice}\n                    onChange={(e) => handleFutureInputChange('strikePrice', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"time-to-expiry\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Time to Expiry (Years)\n                  </label>\n                  <Input\n                    id=\"time-to-expiry\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={futureInputs.timeToExpiry}\n                    onChange={(e) => handleFutureInputChange('timeToExpiry', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"risk-free-rate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Risk-Free Rate (%)\n                  </label>\n                  <Input\n                    id=\"risk-free-rate\"\n                    type=\"number\"\n                    step=\"0.001\"\n                    value={futureInputs.riskFreeRate * 100}\n                    onChange={(e) => handleFutureInputChange('riskFreeRate', e.target.value / 100)}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"dividend-yield\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Dividend Yield (%)\n                  </label>\n                  <Input\n                    id=\"dividend-yield\"\n                    type=\"number\"\n                    step=\"0.001\"\n                    value={futureInputs.dividendYield * 100}\n                    onChange={(e) => handleFutureInputChange('dividendYield', e.target.value / 100)}\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"contract-size\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Contract Size\n                  </label>\n                  <Input\n                    id=\"contract-size\"\n                    type=\"number\"\n                    step=\"1\"\n                    value={futureInputs.contractSize}\n                    onChange={(e) => handleFutureInputChange('contractSize', e.target.value)}\n                  />\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          <Card className=\"lg:col-span-2\">\n            <div className=\"p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">Futures Valuation</h3>\n\n              {futuresValuation && (\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\n                  <div className=\"bg-blue-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Futures Price</div>\n                    <div className=\"text-xl font-bold text-blue-600\">\n                      ${futuresValuation.futuresPrice?.toFixed(2) || 'N/A'}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-green-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Contract Value</div>\n                    <div className=\"text-lg font-semibold text-green-600\">\n                      ${futuresValuation.contractValue?.toLocaleString() || 'N/A'}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-purple-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Basis</div>\n                    <div className=\"text-lg font-semibold text-purple-600\">\n                      ${futuresValuation.basis?.toFixed(2) || 'N/A'}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-yellow-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Carry Cost</div>\n                    <div className=\"text-lg font-semibold text-yellow-600\">\n                      ${futuresValuation.carryCost?.toFixed(2) || 'N/A'}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-red-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Underlying Value</div>\n                    <div className=\"text-lg font-semibold text-red-600\">\n                      ${futuresValuation.underlyingValue?.toLocaleString() || 'N/A'}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </Card>\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Payoff Diagram</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <AreaChart data={payoffData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                  dataKey=\"spotPrice\"\n                  tickFormatter={(value) => activeDerivative === 'swap' ? `${value}%` : `$${value}`}\n                />\n                <YAxis\n                  tickFormatter={(value) => activeDerivative === 'swap' ? `$${value}M` : `$${value}K`}\n                />\n                <Tooltip\n                  formatter={(value) => [\n                    activeDerivative === 'swap' ? `$${value.toFixed(2)}M` : `$${value.toFixed(2)}K`,\n                    'P&L'\n                  ]}\n                  labelFormatter={(value) =>\n                    activeDerivative === 'swap' ? `Rate: ${value}%` : `Spot: $${value}`\n                  }\n                />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"payoff\"\n                  stroke=\"#3b82f6\"\n                  fill=\"#3b82f6\"\n                  fillOpacity={0.3}\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n        </Card>\n\n        <Card>\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Risk Scenarios</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={riskScenarios}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                  dataKey=\"shock\"\n                  tickFormatter={(value) => `${value > 0 ? '+' : ''}${value}${activeDerivative === 'swap' ? 'bps' : '%'}`}\n                />\n                <YAxis\n                  tickFormatter={(value) => activeDerivative === 'swap' ? `$${value.toFixed(1)}M` : `$${value.toFixed(1)}K`}\n                />\n                <Tooltip\n                  formatter={(value, name) => [\n                    activeDerivative === 'swap' ? `$${value.toFixed(2)}M` : `$${value.toFixed(2)}K`,\n                    name === 'valueChange' ? 'Value Change' : 'New Value'\n                  ]}\n                  labelFormatter={(value) =>\n                    `Shock: ${value > 0 ? '+' : ''}${value}${activeDerivative === 'swap' ? ' bps' : '%'}`\n                  }\n                />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"valueChange\"\n                  stroke=\"#ef4444\"\n                  name=\"Value Change\"\n                  strokeWidth={2}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"newValue\"\n                  stroke=\"#22c55e\"\n                  name=\"New Value\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default DerivativesModeling;\n","import { useState, useMemo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nimport { Card } from '../ui/Card';\nimport Input from '../ui/Input';\nimport Select from '../ui/Select';\n\n\nconst FixedIncomeAnalytics = () => {\n  const [inputs, setInputs] = useState({\n    faceValue: 1000,\n    couponRate: 0.05,\n    maturity: 5,\n    paymentFrequency: 2, // Semi-annual\n    marketYield: 0.045,\n    daysToSettlement: 0\n  });\n\n  const [yieldCurveInputs, setYieldCurveInputs] = useState([\n    { maturity: 0.25, yield: 0.02 },\n    { maturity: 0.5, yield: 0.025 },\n    { maturity: 1, yield: 0.03 },\n    { maturity: 2, yield: 0.035 },\n    { maturity: 5, yield: 0.04 },\n    { maturity: 10, yield: 0.045 },\n    { maturity: 30, yield: 0.05 }\n  ]);\n\n  // Bond pricing calculations\n  const bondAnalytics = useMemo(() => {\n    const { faceValue: FV, couponRate: C, maturity: T, paymentFrequency: n, marketYield: Y } = inputs;\n\n    if (!FV || !T || !n) return null;\n\n    const periodsPerYear = n;\n    const totalPeriods = T * periodsPerYear;\n    const couponPayment = (C * FV) / periodsPerYear;\n    const periodYield = Y / periodsPerYear;\n\n    // Present value of coupon payments\n    let pvCoupons = 0;\n    for (let i = 1; i <= totalPeriods; i++) {\n      pvCoupons += couponPayment / Math.pow(1 + periodYield, i);\n    }\n\n    // Present value of principal\n    const pvPrincipal = FV / Math.pow(1 + periodYield, totalPeriods);\n\n    // Bond price\n    const price = pvCoupons + pvPrincipal;\n\n    // Modified Duration calculation\n    let durationSum = 0;\n    for (let i = 1; i <= totalPeriods; i++) {\n      const cf = i === totalPeriods ? couponPayment + FV : couponPayment;\n      const pv = cf / Math.pow(1 + periodYield, i);\n      durationSum += (i / periodsPerYear) * pv;\n    }\n    const macaulayDuration = durationSum / price;\n    const modifiedDuration = macaulayDuration / (1 + periodYield);\n\n    // Convexity calculation\n    let convexitySum = 0;\n    for (let i = 1; i <= totalPeriods; i++) {\n      const cf = i === totalPeriods ? couponPayment + FV : couponPayment;\n      const pv = cf / Math.pow(1 + periodYield, i);\n      const timePeriod = i / periodsPerYear;\n      convexitySum += pv * timePeriod * (timePeriod + 1 / periodsPerYear);\n    }\n    const convexity = convexitySum / (price * Math.pow(1 + periodYield, 2));\n\n    // DV01 (Dollar Value of a 01)\n    const dv01 = modifiedDuration * price * 0.0001;\n\n    // Yield to Maturity (approximation for display)\n    const ytm = Y;\n\n    // Current Yield\n    const currentYield = (C * FV) / price;\n\n    return {\n      price,\n      ytm,\n      currentYield,\n      macaulayDuration,\n      modifiedDuration,\n      convexity,\n      dv01,\n      pvCoupons,\n      pvPrincipal\n    };\n  }, [inputs]);\n\n  // Risk analytics\n  const riskAnalytics = useMemo(() => {\n    if (!bondAnalytics) return null;\n\n    const { price, modifiedDuration, convexity } = bondAnalytics;\n    const yieldShocks = [-0.02, -0.01, -0.005, 0, 0.005, 0.01, 0.02];\n\n    return yieldShocks.map(shock => {\n      // First-order approximation (duration only)\n      const durationEffect = -modifiedDuration * shock * price;\n      const priceChange1st = durationEffect;\n\n      // Second-order approximation (duration + convexity)\n      const convexityEffect = 0.5 * convexity * shock * shock * price;\n      const priceChange2nd = durationEffect + convexityEffect;\n\n      return {\n        yieldShock: shock * 100, // Convert to bps\n        priceChange1st: (priceChange1st / price) * 100,\n        priceChange2nd: (priceChange2nd / price) * 100,\n        newPrice1st: price + priceChange1st,\n        newPrice2nd: price + priceChange2nd\n      };\n    });\n  }, [bondAnalytics]);\n\n  const handleInputChange = (field, value) => {\n    setInputs(prev => ({\n      ...prev,\n      [field]: parseFloat(value) || 0\n    }));\n  };\n\n  const handleYieldCurveChange = (index, field, value) => {\n    setYieldCurveInputs(prev =>\n      prev.map((item, i) =>\n        i === index ? { ...item, [field]: parseFloat(value) || 0 } : item\n      )\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <Card className=\"lg:col-span-1\">\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Bond Parameters</h3>\n\n            <div className=\"space-y-4\">\n              <div>\n                <label htmlFor=\"faceValue\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Face Value ($)\n                </label>\n                <Input\n                  id=\"faceValue\"\n                  type=\"number\"\n                  step=\"1\"\n                  value={inputs.faceValue}\n                  onChange={(e) => handleInputChange('faceValue', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"couponRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Coupon Rate (%)\n                </label>\n                <Input\n                  id=\"couponRate\"\n                  type=\"number\"\n                  step=\"0.001\"\n                  value={inputs.couponRate * 100}\n                  onChange={(e) => handleInputChange('couponRate', e.target.value / 100)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"maturity\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Maturity (Years)\n                </label>\n                <Input\n                  id=\"maturity\"\n                  type=\"number\"\n                  step=\"0.25\"\n                  value={inputs.maturity}\n                  onChange={(e) => handleInputChange('maturity', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"paymentFrequency\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Payment Frequency\n                </label>\n                <Select\n                  id=\"paymentFrequency\"\n                  value={inputs.paymentFrequency}\n                  onChange={(e) => handleInputChange('paymentFrequency', e.target.value)}\n                  options={[\n                    { value: 1, label: 'Annual' },\n                    { value: 2, label: 'Semi-Annual' },\n                    { value: 4, label: 'Quarterly' },\n                    { value: 12, label: 'Monthly' }\n                  ]}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"marketYield\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Market Yield (%)\n                </label>\n                <Input\n                  id=\"marketYield\"\n                  type=\"number\"\n                  step=\"0.001\"\n                  value={inputs.marketYield * 100}\n                  onChange={(e) => handleInputChange('marketYield', e.target.value / 100)}\n                />\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        <Card className=\"lg:col-span-2\">\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Bond Analytics</h3>\n\n            {bondAnalytics && (\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Bond Price</div>\n                  <div className=\"text-xl font-bold text-blue-600\">\n                    ${bondAnalytics.price?.toFixed(2) || 'N/A'}\n                  </div>\n                </div>\n\n                <div className=\"bg-green-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">YTM</div>\n                  <div className=\"text-lg font-semibold text-green-600\">\n                    {(bondAnalytics.ytm * 100)?.toFixed(3) || 'N/A'}%\n                  </div>\n                </div>\n\n                <div className=\"bg-purple-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Modified Duration</div>\n                  <div className=\"text-lg font-semibold text-purple-600\">\n                    {bondAnalytics.modifiedDuration?.toFixed(3) || 'N/A'}\n                  </div>\n                </div>\n\n                <div className=\"bg-orange-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Convexity</div>\n                  <div className=\"text-lg font-semibold text-orange-600\">\n                    {bondAnalytics.convexity?.toFixed(2) || 'N/A'}\n                  </div>\n                </div>\n\n                <div className=\"bg-red-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">DV01</div>\n                  <div className=\"text-lg font-semibold text-red-600\">\n                    ${bondAnalytics.dv01?.toFixed(4) || 'N/A'}\n                  </div>\n                </div>\n\n                <div className=\"bg-yellow-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Current Yield</div>\n                  <div className=\"text-lg font-semibold text-yellow-600\">\n                    {(bondAnalytics.currentYield * 100)?.toFixed(3) || 'N/A'}%\n                  </div>\n                </div>\n\n                <div className=\"bg-indigo-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">PV Coupons</div>\n                  <div className=\"text-lg font-semibold text-indigo-600\">\n                    ${bondAnalytics.pvCoupons?.toFixed(2) || 'N/A'}\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">PV Principal</div>\n                  <div className=\"text-lg font-semibold text-gray-600\">\n                    ${bondAnalytics.pvPrincipal?.toFixed(2) || 'N/A'}\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </Card>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Interest Rate Sensitivity</h3>\n            {riskAnalytics && (\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <LineChart data={riskAnalytics}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis\n                    dataKey=\"yieldShock\"\n                    tickFormatter={(value) => `${value > 0 ? '+' : ''}${value}`}\n                  />\n                  <YAxis tickFormatter={(value) => `${value.toFixed(1)}%`} />\n                  <Tooltip\n                    formatter={(value, name) => [\n                      `${value.toFixed(2)}%`,\n                      name === 'priceChange1st' ? 'Duration Only' : 'Duration + Convexity'\n                    ]}\n                    labelFormatter={(value) => `Yield Shock: ${value > 0 ? '+' : ''}${value} bps`}\n                  />\n                  <Legend />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"priceChange1st\"\n                    stroke=\"#ef4444\"\n                    name=\"Duration Only\"\n                    strokeDasharray=\"5 5\"\n                  />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"priceChange2nd\"\n                    stroke=\"#3b82f6\"\n                    name=\"Duration + Convexity\"\n                    strokeWidth={2}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            )}\n          </div>\n        </Card>\n\n        <Card>\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Yield Curve</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={yieldCurveInputs}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                  dataKey=\"maturity\"\n                  tickFormatter={(value) => `${value}Y`}\n                />\n                <YAxis\n                  tickFormatter={(value) => `${(value * 100).toFixed(1)}%`}\n                />\n                <Tooltip\n                  formatter={(value) => [`${(value * 100).toFixed(2)}%`, 'Yield']}\n                  labelFormatter={(value) => `Maturity: ${value} Years`}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"yield\"\n                  stroke=\"#22c55e\"\n                  strokeWidth={3}\n                  dot={{ fill: '#22c55e', strokeWidth: 2, r: 4 }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n\n            <div className=\"mt-4\">\n              <h4 className=\"text-sm font-semibold mb-2\">Edit Yield Curve Points</h4>\n              <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                {yieldCurveInputs.map((point, index) => (\n                  <div key={index} className=\"flex items-center space-x-2\">\n                    <span className=\"w-8\">{point.maturity}Y:</span>\n                    <Input\n                      type=\"number\"\n                      step=\"0.001\"\n                      value={point.yield * 100}\n                      onChange={(e) => handleYieldCurveChange(index, 'yield', e.target.value / 100)}\n                      className=\"text-xs h-8\"\n                    />\n                    <span className=\"text-gray-500\">%</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default FixedIncomeAnalytics;\n","import { useState, useMemo } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nimport { Card } from '../ui/Card';\nimport Input from '../ui/Input';\nimport Select from '../ui/Select';\n\n\nconst OptionsPricing = () => {\n  const [inputs, setInputs] = useState({\n    spotPrice: 100,\n    strikePrice: 100,\n    timeToExpiry: 0.25, // 3 months\n    riskFreeRate: 0.05,\n    volatility: 0.20,\n    optionType: 'call',\n    dividendYield: 0\n  });\n\n  const [model, setModel] = useState('black-scholes');\n\n  // Black-Scholes calculation\n  const blackScholes = useMemo(() => {\n    const { spotPrice: S, strikePrice: K, timeToExpiry: T, riskFreeRate: r, volatility: vol, optionType, dividendYield: q } = inputs;\n\n    if (!S || !K || !T || !vol) return null;\n\n    const d1 = (Math.log(S / K) + (r - q + 0.5 * vol * vol) * T) / (vol * Math.sqrt(T));\n    const d2 = d1 - vol * Math.sqrt(T);\n\n    const normalCDF = (x) => {\n      return 0.5 * (1 + erf(x / Math.sqrt(2)));\n    };\n\n    const erf = (x) => {\n      const a1 =  0.254829592;\n      const a2 = -0.284496736;\n      const a3 =  1.421413741;\n      const a4 = -1.453152027;\n      const a5 =  1.061405429;\n      const p  =  0.3275911;\n      const sign = x < 0 ? -1 : 1;\n      x = Math.abs(x);\n      const t = 1.0 / (1.0 + p * x);\n      const y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n      return sign * y;\n    };\n\n    const Nd1 = normalCDF(d1);\n    const Nd2 = normalCDF(d2);\n    const NminusD1 = normalCDF(-d1);\n    const NminusD2 = normalCDF(-d2);\n\n    const normalPDF = (x) => Math.exp(-0.5 * x * x) / Math.sqrt(2 * Math.PI);\n\n    let price, delta, rho;\n    const gamma = Math.exp(-q * T) * normalPDF(d1) / (S * vol * Math.sqrt(T));\n    const theta = (-S * Math.exp(-q * T) * normalPDF(d1) * vol / (2 * Math.sqrt(T))\n            - r * K * Math.exp(-r * T) * (optionType === 'call' ? Nd2 : NminusD2)\n            + q * S * Math.exp(-q * T) * (optionType === 'call' ? Nd1 : NminusD1)) / 365;\n    const vega = S * Math.exp(-q * T) * normalPDF(d1) * Math.sqrt(T) / 100;\n\n    if (optionType === 'call') {\n      price = S * Math.exp(-q * T) * Nd1 - K * Math.exp(-r * T) * Nd2;\n      delta = Math.exp(-q * T) * Nd1;\n      rho = K * T * Math.exp(-r * T) * Nd2 / 100;\n    } else {\n      price = K * Math.exp(-r * T) * NminusD2 - S * Math.exp(-q * T) * NminusD1;\n      delta = -Math.exp(-q * T) * NminusD1;\n      rho = -K * T * Math.exp(-r * T) * NminusD2 / 100;\n    }\n\n    return { price, delta, gamma, theta, vega, rho };\n  }, [inputs]);\n\n  // Binomial tree calculation\n  const binomialTree = useMemo(() => {\n    const { spotPrice: S, strikePrice: K, timeToExpiry: T, riskFreeRate: r, volatility: vol, optionType } = inputs;\n    const steps = 100;\n\n    if (!S || !K || !T || !vol) return null;\n\n    const dt = T / steps;\n    const u = Math.exp(vol * Math.sqrt(dt));\n    const d = 1 / u;\n    const p = (Math.exp(r * dt) - d) / (u - d);\n\n    // Build tree\n    const tree = Array(steps + 1).fill(null).map(() => Array(steps + 1).fill(0));\n\n    // Calculate terminal payoffs\n    for (let i = 0; i <= steps; i++) {\n      const ST = S * Math.pow(u, 2 * i - steps);\n      tree[steps][i] = optionType === 'call'\n        ? Math.max(ST - K, 0)\n        : Math.max(K - ST, 0);\n    }\n\n    // Backward induction\n    for (let j = steps - 1; j >= 0; j--) {\n      for (let i = 0; i <= j; i++) {\n        tree[j][i] = Math.exp(-r * dt) * (p * tree[j + 1][i + 1] + (1 - p) * tree[j + 1][i]);\n      }\n    }\n\n    return { price: tree[0][0] };\n  }, [inputs]);\n\n  const handleInputChange = (field, value) => {\n    setInputs(prev => ({\n      ...prev,\n      [field]: parseFloat(value) || 0\n    }));\n  };\n\n  // Generate volatility surface data\n  const volSurfaceData = useMemo(() => {\n    const strikes = [80, 90, 100, 110, 120];\n    const expiries = [0.083, 0.167, 0.25, 0.5, 1]; // 1M, 2M, 3M, 6M, 1Y\n\n    return expiries.map(T => ({\n      expiry: `${Math.round(T * 12)}M`,\n      ...strikes.reduce((acc, K) => {\n        const vol = 0.20 + 0.05 * Math.abs(K - 100) / 100 + 0.02 * Math.exp(-T);\n        acc[`K${K}`] = vol;\n        return acc;\n      }, {})\n    }));\n  }, []);\n\n  const result = model === 'black-scholes' ? blackScholes : binomialTree;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <Card className=\"lg:col-span-1\">\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Option Parameters</h3>\n\n            <div className=\"space-y-4\">\n              <div>\n                <label htmlFor=\"modelType\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Model Type\n                </label>\n                <Select\n                  id=\"modelType\"\n                  value={model}\n                  onChange={(e) => setModel(e.target.value)}\n                  options={[\n                    { value: 'black-scholes', label: 'Black-Scholes' },\n                    { value: 'binomial', label: 'Binomial Tree' }\n                  ]}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"optionType\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Option Type\n                </label>\n                <Select\n                  id=\"optionType\"\n                  value={inputs.optionType}\n                  onChange={(e) => handleInputChange('optionType', e.target.value)}\n                  options={[\n                    { value: 'call', label: 'Call' },\n                    { value: 'put', label: 'Put' }\n                  ]}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"spotPrice\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Spot Price ($)\n                </label>\n                <Input\n                  id=\"spotPrice\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={inputs.spotPrice}\n                  onChange={(e) => handleInputChange('spotPrice', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"strikePrice\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Strike Price ($)\n                </label>\n                <Input\n                  id=\"strikePrice\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={inputs.strikePrice}\n                  onChange={(e) => handleInputChange('strikePrice', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"timeToExpiry\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Time to Expiry (Years)\n                </label>\n                <Input\n                  id=\"timeToExpiry\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={inputs.timeToExpiry}\n                  onChange={(e) => handleInputChange('timeToExpiry', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"riskFreeRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Risk-Free Rate (%)\n                </label>\n                <Input\n                  id=\"riskFreeRate\"\n                  type=\"number\"\n                  step=\"0.001\"\n                  value={inputs.riskFreeRate * 100}\n                  onChange={(e) => handleInputChange('riskFreeRate', e.target.value / 100)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"volatility\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Volatility (%)\n                </label>\n                <Input\n                  id=\"volatility\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={inputs.volatility * 100}\n                  onChange={(e) => handleInputChange('volatility', e.target.value / 100)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"dividendYield\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Dividend Yield (%)\n                </label>\n                <Input\n                  id=\"dividendYield\"\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={inputs.dividendYield * 100}\n                  onChange={(e) => handleInputChange('dividendYield', e.target.value / 100)}\n                />\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        <Card className=\"lg:col-span-2\">\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Pricing Results</h3>\n\n            {result && (\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Option Price</div>\n                  <div className=\"text-2xl font-bold text-blue-600\">\n                    ${result.price?.toFixed(4) || 'N/A'}\n                  </div>\n                </div>\n\n                {blackScholes && model === 'black-scholes' && (\n                  <>\n                    <div className=\"bg-green-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-600\">Delta</div>\n                      <div className=\"text-xl font-semibold text-green-600\">\n                        {blackScholes.delta?.toFixed(4) || 'N/A'}\n                      </div>\n                    </div>\n\n                    <div className=\"bg-purple-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-600\">Gamma</div>\n                      <div className=\"text-xl font-semibold text-purple-600\">\n                        {blackScholes.gamma?.toFixed(4) || 'N/A'}\n                      </div>\n                    </div>\n\n                    <div className=\"bg-red-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-600\">Theta</div>\n                      <div className=\"text-xl font-semibold text-red-600\">\n                        {blackScholes.theta?.toFixed(4) || 'N/A'}\n                      </div>\n                    </div>\n\n                    <div className=\"bg-yellow-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-600\">Vega</div>\n                      <div className=\"text-xl font-semibold text-yellow-600\">\n                        {blackScholes.vega?.toFixed(4) || 'N/A'}\n                      </div>\n                    </div>\n\n                    <div className=\"bg-indigo-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-600\">Rho</div>\n                      <div className=\"text-xl font-semibold text-indigo-600\">\n                        {blackScholes.rho?.toFixed(4) || 'N/A'}\n                      </div>\n                    </div>\n                  </>\n                )}\n              </div>\n            )}\n\n            <div className=\"mt-6\">\n              <h4 className=\"text-md font-semibold mb-3\">Implied Volatility Surface</h4>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <LineChart data={volSurfaceData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"expiry\" />\n                  <YAxis tickFormatter={(value) => `${(value * 100).toFixed(0)}%`} />\n                  <Tooltip formatter={(value) => `${(value * 100).toFixed(2)}%`} />\n                  <Legend />\n                  <Line\n                    type=\"monotone\" dataKey=\"K80\" stroke=\"#ef4444\"\n                    name=\"K=80\"\n                  />\n                  <Line\n                    type=\"monotone\" dataKey=\"K90\" stroke=\"#f97316\"\n                    name=\"K=90\"\n                  />\n                  <Line\n                    type=\"monotone\" dataKey=\"K100\" stroke=\"#22c55e\"\n                    name=\"K=100\"\n                  />\n                  <Line\n                    type=\"monotone\" dataKey=\"K110\" stroke=\"#3b82f6\"\n                    name=\"K=110\"\n                  />\n                  <Line\n                    type=\"monotone\" dataKey=\"K120\" stroke=\"#8b5cf6\"\n                    name=\"K=120\"\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default OptionsPricing;\n","import { useState, useEffect } from 'react';\n\nimport CreditModeling from '../components/AdvancedAnalytics/CreditModeling';\nimport DerivativesModeling from '../components/AdvancedAnalytics/DerivativesModeling';\nimport FixedIncomeAnalytics from '../components/AdvancedAnalytics/FixedIncomeAnalytics';\nimport OptionsPricing from '../components/AdvancedAnalytics/OptionsPricing';\nimport ProductionErrorBoundary from '../components/ErrorBoundary/ProductionErrorBoundary';\nimport Button from '../components/ui/Button';\nimport { Card } from '../components/ui/Card';\n\nconst AdvancedAnalytics = () => {\n  const [activeTab, setActiveTab] = useState('options');\n\n  // Listen for tab selection events from keyboard shortcuts\n  useEffect(() => {\n    const handleTabSelection = (event) => {\n      setActiveTab(event.detail.tab);\n    };\n\n    window.addEventListener('select-tab', handleTabSelection);\n    return () => window.removeEventListener('select-tab', handleTabSelection);\n  }, []);\n\n  const tabs = [\n    { id: 'options', label: 'Options Pricing', component: OptionsPricing },\n    { id: 'fixed-income', label: 'Fixed Income', component: FixedIncomeAnalytics },\n    { id: 'credit', label: 'Credit Modeling', component: CreditModeling },\n    { id: 'derivatives', label: 'Derivatives', component: DerivativesModeling }\n  ];\n\n  const ActiveComponent = tabs.find(tab => tab.id === activeTab)?.component;\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Advanced Analytics</h1>\n          <p className=\"text-gray-600\">\n            Professional-grade pricing models and risk analytics for complex financial instruments\n          </p>\n        </div>\n\n        <Card className=\"mb-6\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"flex space-x-8\" aria-label=\"Tabs\">\n              {tabs.map((tab) => (\n                <Button\n                  key={tab.id}\n                  variant={activeTab === tab.id ? 'primary' : 'ghost'}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  {tab.label}\n                </Button>\n              ))}\n            </nav>\n          </div>\n\n          <div className=\"p-6\">\n            {ActiveComponent && (\n              <ProductionErrorBoundary level=\"component\">\n                <ActiveComponent />\n              </ProductionErrorBoundary>\n            )}\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default AdvancedAnalytics;\n"],"names":["Icon","name","size","color","className","strokeWidth","props","IconComponent","LucideIcons","jsx","HelpCircle","cn","inputs","twMerge","clsx","propTypes","PropTypes","string","isRequired","number","buttonVariants","cva","variants","variant","primary","default","destructive","outline","secondary","ghost","link","success","warning","danger","minimal","sm","lg","icon","xs","xl","defaultVariants","Button","React","forwardRef","asChild","children","loading","iconName","iconPosition","iconSize","fullWidth","disabled","ref","Comp","Slot","calculatedIconSize","LoadingSpinner","jsxs","fill","viewBox","cx","cy","r","stroke","d","renderIcon","displayName","ProductionErrorBoundary","Component","constructor","super","this","state","hasError","error","errorInfo","errorId","getDerivedStateFromError","_error","componentDidCatch","generateErrorId","setState","logToMonitoring","Date","now","Math","random","toString","substring","window","Sentry","withScope","scope","setTag","setContext","setLevel","captureException","fetch","method","headers","body","JSON","stringify","message","stack","componentStack","timestamp","toISOString","userAgent","navigator","url","location","href","userId","catch","err","monitoringError","handleRetry","handleReload","reload","handleGoHome","handleReportIssue","subject","encodeURIComponent","open","render","fallback","Fallback","level","onRetry","AlertTriangle","onClick","RefreshCw","Home","MessageCircle","Card","CardHeader","CardTitle","_ref","CardContent","Input","type","label","description","required","id","inputId","substr","htmlFor","Select","options","value","_defaultValue","placeholder","multiple","searchable","clearable","onChange","onOpenChange","isOpen","setIsOpen","useState","searchTerm","setSearchTerm","selectId","filteredOptions","filter","option","toLowerCase","includes","handleOptionSelect","newValue","updatedValue","v","isSelected","optionValue","hasValue","length","newIsOpen","selectedOptions","opt","selectedOption","find","getSelectedDisplay","e","stopPropagation","X","ChevronDown","tabIndex","map","Search","target","role","onKeyDown","key","preventDefault","Check","CreditModeling","setInputs","exposureAmount","timeHorizon","lgd","pd","correlationFactor","confidenceLevel","scorecardInputs","setScorecardInputs","revenue","debt","ebitda","currentRatio","quickRatio","industryRisk","managementQuality","marketPosition","creditRiskMetrics","useMemo","EAD","LGD","PD","expectedLoss","unexpectedLoss","sqrt","economicCapital","p","t","log","normalInverse","valueAtRisk","raroc","cumulativePD","pow","lossRate","capitalRatio","creditScore","score","maxScore","debtToEbitda","ebitdaMargin","low","medium","high","excellent","good","fair","poor","dominant","strong","competitive","weak","scorePercentage","rating","estimatedPD","AAA","AA","A","BBB","BB","B","CCC","D","scenarios","i","randomPD","loss","push","scenario","lossPercentage","sort","a","b","handleInputChange","field","prev","parseFloat","handleScorecardChange","isNaN","COLORS","lossDistributionData","range","count","probability","step","toLocaleString","toFixed","ResponsiveContainer","width","height","BarChart","data","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","formatter","Bar","PieChart","Pie","innerRadius","outerRadius","nameKey","entry","index","Cell","Legend","DerivativesModeling","activeDerivative","setActiveDerivative","swapInputs","setSwapInputs","notional","maturity","fixedRate","floatingRate","paymentFrequency","dayCount","futureInputs","setFutureInputs","underlyingPrice","strikePrice","timeToExpiry","riskFreeRate","dividendYield","contractSize","swapValuation","periodsPerYear","totalPeriods","fixedPayment","floatingPayment","discountRate","pvFixedLeg","pvFloatingLeg","swapValue","durationSum","duration","dv01","abs","futuresValuation","S","T","q","futuresPrice","exp","contractValue","basis","carryCost","underlyingValue","payoffData","spotPrices","rate","spotPrice","payoff","derivative","spot","riskScenarios","shocks","forEach","shock","valueChange","handleSwapInputChange","handleFutureInputChange","AreaChart","tickFormatter","labelFormatter","Area","fillOpacity","LineChart","Line","FixedIncomeAnalytics","faceValue","couponRate","marketYield","daysToSettlement","yieldCurveInputs","setYieldCurveInputs","yield","bondAnalytics","FV","C","n","Y","couponPayment","periodYield","pvCoupons","pvPrincipal","price","macaulayDuration","modifiedDuration","convexitySum","timePeriod","ytm","currentYield","convexity","riskAnalytics","durationEffect","priceChange2nd","yieldShock","priceChange1st","newPrice1st","newPrice2nd","dot","point","item","handleYieldCurveChange","OptionsPricing","volatility","optionType","model","setModel","blackScholes","K","vol","d1","d2","normalCDF","x","erf","sign","Nd1","Nd2","NminusD1","NminusD2","normalPDF","PI","delta","rho","gamma","theta","vega","binomialTree","dt","u","tree","Array","steps","ST","max","j","volSurfaceData","strikes","expiry","round","reduce","acc","result","Fragment","activeTab","setActiveTab","useEffect","handleTabSelection","event","detail","tab","addEventListener","removeEventListener","tabs","component","ActiveComponent"],"mappings":"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"}