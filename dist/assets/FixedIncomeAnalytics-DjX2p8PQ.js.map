{"version":3,"file":"FixedIncomeAnalytics-DjX2p8PQ.js","sources":["../../src/services/fixedIncomeEngine.js","../../src/components/FixedIncome/FixedIncomeAnalytics.jsx"],"sourcesContent":["/**\n * Fixed Income Analytics Engine\n * Comprehensive bond pricing, yield curve analysis, and fixed income calculations\n */\n\nclass FixedIncomeEngine {\n  constructor() {\n    this.bondCache = new Map();\n    this.yieldCurves = new Map();\n    this.creditSpreads = new Map();\n  }\n\n  /**\n   * Bond Pricing Calculations\n   */\n  \n  // Calculate bond price using present value of cash flows\n  calculateBondPrice(bond, yieldRate, marketDate = new Date()) {\n    const {\n      faceValue = 1000,\n      couponRate,\n      maturityDate,\n      paymentFrequency = 2, // Semi-annual\n      dayCountConvention = 'ACT/ACT'\n    } = bond;\n\n    const yearsToMaturity = this.calculateYearsToMaturity(maturityDate, marketDate);\n    const periodsToMaturity = Math.ceil(yearsToMaturity * paymentFrequency);\n    const couponPayment = (faceValue * couponRate) / paymentFrequency;\n    const periodYield = yieldRate / paymentFrequency;\n\n    let presentValue = 0;\n    let accruedInterest = 0;\n\n    // Calculate present value of coupon payments\n    for (let period = 1; period <= periodsToMaturity; period++) {\n      const discountFactor = Math.pow(1 + periodYield, -period);\n      presentValue += couponPayment * discountFactor;\n    }\n\n    // Add present value of principal\n    const principalPV = faceValue / Math.pow(1 + periodYield, periodsToMaturity);\n    presentValue += principalPV;\n\n    // Calculate accrued interest\n    accruedInterest = this.calculateAccruedInterest(bond, marketDate);\n\n    return {\n      cleanPrice: presentValue,\n      dirtyPrice: presentValue + accruedInterest,\n      accruedInterest,\n      yieldToMaturity: yieldRate,\n      modifiedDuration: this.calculateModifiedDuration(bond, yieldRate),\n      convexity: this.calculateConvexity(bond, yieldRate),\n      dv01: this.calculateDV01(bond, yieldRate),\n      bondMetrics: {\n        yearsToMaturity,\n        periodsToMaturity,\n        couponPayment,\n        principalPV\n      }\n    };\n  }\n\n  // Calculate yield to maturity using Newton-Raphson method\n  calculateYieldToMaturity(bond, marketPrice, tolerance = 0.0001, maxIterations = 100) {\n    let yield_ = bond.couponRate || 0.05; // Initial guess\n    \n    for (let i = 0; i < maxIterations; i++) {\n      const priceResult = this.calculateBondPrice(bond, yield_);\n      const priceDiff = priceResult.cleanPrice - marketPrice;\n      \n      if (Math.abs(priceDiff) < tolerance) {\n        return {\n          yieldToMaturity: yield_,\n          iterations: i + 1,\n          priceAccuracy: priceDiff,\n          ...priceResult\n        };\n      }\n      \n      // Calculate derivative (modified duration)\n      const duration = this.calculateModifiedDuration(bond, yield_);\n      yield_ = yield_ - (priceDiff / (duration * marketPrice));\n    }\n    \n    throw new Error('YTM calculation did not converge');\n  }\n\n  // Calculate modified duration\n  calculateModifiedDuration(bond, yieldRate) {\n    const { faceValue = 1000, couponRate, maturityDate, paymentFrequency = 2 } = bond;\n    const yearsToMaturity = this.calculateYearsToMaturity(maturityDate);\n    const periodsToMaturity = Math.ceil(yearsToMaturity * paymentFrequency);\n    const couponPayment = (faceValue * couponRate) / paymentFrequency;\n    const periodYield = yieldRate / paymentFrequency;\n\n    let weightedCashFlows = 0;\n    let totalPV = 0;\n\n    // Calculate weighted present value of cash flows\n    for (let period = 1; period <= periodsToMaturity; period++) {\n      const cashFlow = period === periodsToMaturity ? couponPayment + faceValue : couponPayment;\n      const discountFactor = Math.pow(1 + periodYield, -period);\n      const pv = cashFlow * discountFactor;\n      \n      weightedCashFlows += (period / paymentFrequency) * pv;\n      totalPV += pv;\n    }\n\n    const macaulayDuration = weightedCashFlows / totalPV;\n    return macaulayDuration / (1 + periodYield);\n  }\n\n  // Calculate convexity\n  calculateConvexity(bond, yieldRate) {\n    const { faceValue = 1000, couponRate, maturityDate, paymentFrequency = 2 } = bond;\n    const yearsToMaturity = this.calculateYearsToMaturity(maturityDate);\n    const periodsToMaturity = Math.ceil(yearsToMaturity * paymentFrequency);\n    const couponPayment = (faceValue * couponRate) / paymentFrequency;\n    const periodYield = yieldRate / paymentFrequency;\n\n    let convexitySum = 0;\n    let totalPV = 0;\n\n    for (let period = 1; period <= periodsToMaturity; period++) {\n      const cashFlow = period === periodsToMaturity ? couponPayment + faceValue : couponPayment;\n      const discountFactor = Math.pow(1 + periodYield, -period);\n      const pv = cashFlow * discountFactor;\n      \n      convexitySum += (period * (period + 1) / Math.pow(paymentFrequency, 2)) * pv;\n      totalPV += pv;\n    }\n\n    return convexitySum / (totalPV * Math.pow(1 + periodYield, 2));\n  }\n\n  // Calculate DV01 (dollar value of a basis point)\n  calculateDV01(bond, yieldRate) {\n    const basePrice = this.calculateBondPrice(bond, yieldRate);\n    const upPrice = this.calculateBondPrice(bond, yieldRate + 0.0001);\n    return Math.abs(basePrice.cleanPrice - upPrice.cleanPrice);\n  }\n\n  /**\n   * Yield Curve Analysis\n   */\n\n  // Bootstrap yield curve from bond prices\n  bootstrapYieldCurve(bonds, marketPrices) {\n    const sortedBonds = bonds\n      .map((bond, index) => ({ ...bond, marketPrice: marketPrices[index] }))\n      .sort((a, b) => this.calculateYearsToMaturity(a.maturityDate) - this.calculateYearsToMaturity(b.maturityDate));\n\n    const yieldCurve = [];\n    const zeroCouponRates = [];\n\n    for (let i = 0; i < sortedBonds.length; i++) {\n      const bond = sortedBonds[i];\n      const maturity = this.calculateYearsToMaturity(bond.maturityDate);\n      \n      if (i === 0) {\n        // First bond - simple calculation\n        const ytm = this.calculateYieldToMaturity(bond, bond.marketPrice);\n        zeroCouponRates.push({ maturity, rate: ytm.yieldToMaturity });\n      } else {\n        // Bootstrap using previously calculated rates\n        const rate = this.bootstrapSingleRate(bond, zeroCouponRates);\n        zeroCouponRates.push({ maturity, rate });\n      }\n      \n      yieldCurve.push({\n        maturity,\n        zeroCouponRate: zeroCouponRates[i].rate,\n        bondYTM: this.calculateYieldToMaturity(bond, bond.marketPrice).yieldToMaturity,\n        bond: bond\n      });\n    }\n\n    return {\n      curve: yieldCurve,\n      spotRates: zeroCouponRates,\n      forwardRates: this.calculateForwardRates(zeroCouponRates),\n      curveMetrics: this.analyzeCurveShape(yieldCurve)\n    };\n  }\n\n  // Calculate forward rates from spot rates\n  calculateForwardRates(spotRates) {\n    const forwardRates = [];\n    \n    for (let i = 1; i < spotRates.length; i++) {\n      const t1 = spotRates[i - 1].maturity;\n      const t2 = spotRates[i].maturity;\n      const r1 = spotRates[i - 1].rate;\n      const r2 = spotRates[i].rate;\n      \n      const forwardRate = ((Math.pow(1 + r2, t2) / Math.pow(1 + r1, t1)) - 1) / (t2 - t1);\n      \n      forwardRates.push({\n        startPeriod: t1,\n        endPeriod: t2,\n        forwardRate,\n        impliedRate: forwardRate\n      });\n    }\n    \n    return forwardRates;\n  }\n\n  // Analyze yield curve shape and characteristics\n  analyzeCurveShape(yieldCurve) {\n    if (yieldCurve.length < 3) return { shape: 'insufficient_data' };\n\n    const shortRate = yieldCurve[0].zeroCouponRate;\n    const longRate = yieldCurve[yieldCurve.length - 1].zeroCouponRate;\n    const midIndex = Math.floor(yieldCurve.length / 2);\n    const midRate = yieldCurve[midIndex].zeroCouponRate;\n\n    let shape = 'normal';\n    if (shortRate > longRate) {\n      shape = 'inverted';\n    } else if (midRate > shortRate && midRate > longRate) {\n      shape = 'humped';\n    } else if (Math.abs(shortRate - longRate) < 0.001) {\n      shape = 'flat';\n    }\n\n    const slope = longRate - shortRate;\n    const curvature = 2 * midRate - shortRate - longRate;\n    const level = (shortRate + midRate + longRate) / 3;\n\n    return {\n      shape,\n      slope,\n      curvature,\n      level,\n      steepness: slope / yieldCurve[yieldCurve.length - 1].maturity,\n      spread_2y10y: this.interpolateRate(yieldCurve, 10) - this.interpolateRate(yieldCurve, 2),\n      spread_3m10y: this.interpolateRate(yieldCurve, 10) - this.interpolateRate(yieldCurve, 0.25)\n    };\n  }\n\n  /**\n   * Credit Analysis\n   */\n\n  // Calculate credit spread over risk-free rate\n  calculateCreditSpread(corporateBond, governmentYieldCurve, marketPrice) {\n    const maturity = this.calculateYearsToMaturity(corporateBond.maturityDate);\n    const riskFreeRate = this.interpolateRate(governmentYieldCurve, maturity);\n    const corporateYTM = this.calculateYieldToMaturity(corporateBond, marketPrice).yieldToMaturity;\n    \n    return {\n      creditSpread: corporateYTM - riskFreeRate,\n      corporateYTM,\n      riskFreeRate,\n      spreadBasisPoints: (corporateYTM - riskFreeRate) * 10000,\n      maturity\n    };\n  }\n\n  // Calculate option-adjusted spread (simplified)\n  calculateOptionAdjustedSpread(bond, marketPrice, volatility = 0.15) {\n    // Simplified OAS calculation - in practice would use binomial/trinomial trees\n    const baseSpread = this.calculateCreditSpread(bond, this.yieldCurves.get('government'), marketPrice);\n    const optionValue = this.estimateEmbeddedOptionValue(bond, volatility);\n    \n    return {\n      ...baseSpread,\n      optionAdjustedSpread: baseSpread.creditSpread - (optionValue / marketPrice),\n      embeddedOptionValue: optionValue,\n      zSpread: baseSpread.creditSpread // Simplified - would need iterative calculation\n    };\n  }\n\n  /**\n   * Utility Methods\n   */\n\n  calculateYearsToMaturity(maturityDate, currentDate = new Date()) {\n    const maturity = new Date(maturityDate);\n    const diffTime = maturity.getTime() - currentDate.getTime();\n    return diffTime / (1000 * 60 * 60 * 24 * 365.25);\n  }\n\n  calculateAccruedInterest(bond, settlementDate = new Date()) {\n    const { faceValue = 1000, couponRate, paymentFrequency = 2 } = bond;\n    const annualCoupon = faceValue * couponRate;\n    const periodicCoupon = annualCoupon / paymentFrequency;\n    \n    // Simplified calculation - would need actual payment schedule\n    const daysSinceLastPayment = 30; // Placeholder\n    const daysInPeriod = 365.25 / paymentFrequency;\n    \n    return periodicCoupon * (daysSinceLastPayment / daysInPeriod);\n  }\n\n  interpolateRate(yieldCurve, targetMaturity) {\n    if (yieldCurve.length === 0) return 0;\n    \n    // Find surrounding points\n    let lowerIndex = -1;\n    let upperIndex = -1;\n    \n    for (let i = 0; i < yieldCurve.length; i++) {\n      if (yieldCurve[i].maturity <= targetMaturity) {\n        lowerIndex = i;\n      }\n      if (yieldCurve[i].maturity >= targetMaturity && upperIndex === -1) {\n        upperIndex = i;\n        break;\n      }\n    }\n    \n    // Exact match\n    if (lowerIndex === upperIndex) {\n      return yieldCurve[lowerIndex].zeroCouponRate;\n    }\n    \n    // Extrapolation\n    if (lowerIndex === -1) return yieldCurve[0].zeroCouponRate;\n    if (upperIndex === -1) return yieldCurve[yieldCurve.length - 1].zeroCouponRate;\n    \n    // Linear interpolation\n    const x1 = yieldCurve[lowerIndex].maturity;\n    const x2 = yieldCurve[upperIndex].maturity;\n    const y1 = yieldCurve[lowerIndex].zeroCouponRate;\n    const y2 = yieldCurve[upperIndex].zeroCouponRate;\n    \n    return y1 + (y2 - y1) * (targetMaturity - x1) / (x2 - x1);\n  }\n\n  bootstrapSingleRate(bond, existingRates) {\n    // Simplified bootstrap calculation\n    const ytm = this.calculateYieldToMaturity(bond, bond.marketPrice);\n    return ytm.yieldToMaturity;\n  }\n\n  estimateEmbeddedOptionValue(bond, volatility) {\n    // Simplified option value estimation\n    if (!bond.callable && !bond.putable) return 0;\n    \n    const timeToOption = bond.callDate ? this.calculateYearsToMaturity(bond.callDate) : 0;\n    return timeToOption * volatility * 100; // Placeholder calculation\n  }\n\n  /**\n   * Portfolio Fixed Income Analytics\n   */\n\n  analyzeFixedIncomePortfolio(bonds, weights, marketPrices) {\n    let portfolioDuration = 0;\n    let portfolioConvexity = 0;\n    let portfolioYield = 0;\n    let totalMarketValue = 0;\n\n    const bondAnalytics = bonds.map((bond, index) => {\n      const price = marketPrices[index];\n      const weight = weights[index];\n      const analytics = this.calculateBondPrice(bond, 0.05); // Use market YTM\n      const marketValue = price * weight;\n\n      portfolioDuration += analytics.modifiedDuration * weight;\n      portfolioConvexity += analytics.convexity * weight;\n      portfolioYield += analytics.yieldToMaturity * weight;\n      totalMarketValue += marketValue;\n\n      return {\n        bond,\n        weight,\n        marketValue,\n        ...analytics\n      };\n    });\n\n    return {\n      bonds: bondAnalytics,\n      portfolio: {\n        totalMarketValue,\n        weightedDuration: portfolioDuration,\n        weightedConvexity: portfolioConvexity,\n        weightedYield: portfolioYield,\n        dv01: portfolioDuration * totalMarketValue * 0.0001,\n        riskMetrics: {\n          interestRateRisk: portfolioDuration,\n          convexityBenefit: portfolioConvexity,\n          priceVolatility: portfolioDuration * 0.01 // 1% rate change\n        }\n      }\n    };\n  }\n}\n\nexport default FixedIncomeEngine;","/**\n * Fixed Income Analytics Dashboard\n * Comprehensive bond analysis, yield curve modeling, and portfolio analytics\n */\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\n  BarChart, Bar, ScatterChart, Scatter, AreaChart, Area\n} from 'recharts';\nimport {\n  Calculator, TrendingUp, BarChart3, DollarSign, Percent,\n  Calendar, Target, Shield, AlertTriangle, Info\n} from 'lucide-react';\n\nimport FixedIncomeEngine from '../../services/fixedIncomeEngine';\n\nconst FixedIncomeAnalytics = () => {\n  const [selectedBond, setSelectedBond] = useState(null);\n  const [yieldCurve, setYieldCurve] = useState(null);\n  const [portfolio, setPortfolio] = useState(null);\n  const [activeTab, setActiveTab] = useState('bonds');\n  const [bondPricing, setBondPricing] = useState(null);\n  const [marketData, setMarketData] = useState({\n    bonds: [],\n    yieldCurves: {},\n    creditSpreads: {}\n  });\n\n  const engine = useMemo(() => new FixedIncomeEngine(), []);\n\n  // Sample bond data\n  const sampleBonds = [\n    {\n      id: 'UST_10Y',\n      name: 'US Treasury 10Y',\n      issuer: 'US Treasury',\n      couponRate: 0.025,\n      faceValue: 1000,\n      maturityDate: '2034-08-15',\n      paymentFrequency: 2,\n      creditRating: 'AAA',\n      sector: 'Government',\n      callable: false\n    },\n    {\n      id: 'CORP_AAPL',\n      name: 'Apple Inc. 2.45%',\n      issuer: 'Apple Inc.',\n      couponRate: 0.0245,\n      faceValue: 1000,\n      maturityDate: '2029-08-04',\n      paymentFrequency: 2,\n      creditRating: 'AA+',\n      sector: 'Technology',\n      callable: false\n    },\n    {\n      id: 'UST_5Y',\n      name: 'US Treasury 5Y',\n      issuer: 'US Treasury',\n      couponRate: 0.02,\n      faceValue: 1000,\n      maturityDate: '2029-08-15',\n      paymentFrequency: 2,\n      creditRating: 'AAA',\n      sector: 'Government',\n      callable: false\n    }\n  ];\n\n  const samplePrices = [985.50, 1024.75, 992.25];\n\n  useEffect(() => {\n    // Initialize with sample data\n    setMarketData(prev => ({\n      ...prev,\n      bonds: sampleBonds.map((bond, index) => ({\n        ...bond,\n        marketPrice: samplePrices[index],\n        analytics: engine.calculateBondPrice(bond, 0.03)\n      }))\n    }));\n\n    // Calculate yield curve\n    const curveData = engine.bootstrapYieldCurve(sampleBonds, samplePrices);\n    setYieldCurve(curveData);\n  }, [engine]);\n\n  const handleBondSelect = (bond) => {\n    setSelectedBond(bond);\n    const pricing = engine.calculateBondPrice(bond, 0.03);\n    const ytm = engine.calculateYieldToMaturity(bond, bond.marketPrice);\n    setBondPricing({ ...pricing, ...ytm });\n  };\n\n  const BondPricingCalculator = () => (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"bg-white rounded-lg shadow-lg p-6\"\n    >\n      <h3 className=\"text-xl font-bold mb-4 flex items-center\">\n        <Calculator className=\"mr-2\" />\n        Bond Pricing Calculator\n      </h3>\n\n      {selectedBond && bondPricing && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <h4 className=\"font-semibold text-lg mb-3\">{selectedBond.name}</h4>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Issuer:</span>\n                <span className=\"font-medium\">{selectedBond.issuer}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Coupon Rate:</span>\n                <span className=\"font-medium\">{(selectedBond.couponRate * 100).toFixed(2)}%</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Maturity:</span>\n                <span className=\"font-medium\">{selectedBond.maturityDate}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Credit Rating:</span>\n                <span className=\"font-medium\">{selectedBond.creditRating}</span>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <h4 className=\"font-semibold text-lg mb-3\">Pricing & Analytics</h4>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Clean Price:</span>\n                <span className=\"font-medium\">${bondPricing.cleanPrice.toFixed(2)}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Dirty Price:</span>\n                <span className=\"font-medium\">${bondPricing.dirtyPrice.toFixed(2)}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Yield to Maturity:</span>\n                <span className=\"font-medium\">{(bondPricing.yieldToMaturity * 100).toFixed(3)}%</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Modified Duration:</span>\n                <span className=\"font-medium\">{bondPricing.modifiedDuration.toFixed(3)}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">Convexity:</span>\n                <span className=\"font-medium\">{bondPricing.convexity.toFixed(3)}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-gray-600\">DV01:</span>\n                <span className=\"font-medium\">${bondPricing.dv01.toFixed(4)}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </motion.div>\n  );\n\n  const YieldCurveChart = () => {\n    if (!yieldCurve) return null;\n\n    const chartData = yieldCurve.curve.map(point => ({\n      maturity: point.maturity.toFixed(1),\n      'Zero Coupon Rate': (point.zeroCouponRate * 100).toFixed(2),\n      'Bond YTM': (point.bondYTM * 100).toFixed(2)\n    }));\n\n    return (\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-white rounded-lg shadow-lg p-6\"\n      >\n        <h3 className=\"text-xl font-bold mb-4 flex items-center\">\n          <TrendingUp className=\"mr-2\" />\n          Yield Curve Analysis\n        </h3>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          <div className=\"lg:col-span-2\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={chartData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"maturity\" label={{ value: 'Years to Maturity', position: 'insideBottom', offset: -5 }} />\n                <YAxis label={{ value: 'Yield (%)', angle: -90, position: 'insideLeft' }} />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"Zero Coupon Rate\" stroke=\"#2563eb\" strokeWidth={2} />\n                <Line type=\"monotone\" dataKey=\"Bond YTM\" stroke=\"#dc2626\" strokeWidth={2} strokeDasharray=\"5 5\" />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n\n          <div>\n            <h4 className=\"font-semibold text-lg mb-3\">Curve Metrics</h4>\n            {yieldCurve.curveMetrics && (\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Shape:</span>\n                  <span className=\"font-medium capitalize\">{yieldCurve.curveMetrics.shape}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Slope:</span>\n                  <span className=\"font-medium\">{(yieldCurve.curveMetrics.slope * 100).toFixed(2)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">Level:</span>\n                  <span className=\"font-medium\">{(yieldCurve.curveMetrics.level * 100).toFixed(2)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">2Y-10Y Spread:</span>\n                  <span className=\"font-medium\">{(yieldCurve.curveMetrics.spread_2y10y * 100).toFixed(0)}bp</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600\">3M-10Y Spread:</span>\n                  <span className=\"font-medium\">{(yieldCurve.curveMetrics.spread_3m10y * 100).toFixed(0)}bp</span>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </motion.div>\n    );\n  };\n\n  const BondsList = () => (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"bg-white rounded-lg shadow-lg p-6\"\n    >\n      <h3 className=\"text-xl font-bold mb-4 flex items-center\">\n        <BarChart3 className=\"mr-2\" />\n        Bond Universe\n      </h3>\n\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full table-auto\">\n          <thead>\n            <tr className=\"border-b\">\n              <th className=\"text-left py-2\">Bond</th>\n              <th className=\"text-left py-2\">Issuer</th>\n              <th className=\"text-left py-2\">Coupon</th>\n              <th className=\"text-left py-2\">Maturity</th>\n              <th className=\"text-left py-2\">Price</th>\n              <th className=\"text-left py-2\">YTM</th>\n              <th className=\"text-left py-2\">Duration</th>\n              <th className=\"text-left py-2\">Rating</th>\n              <th className=\"text-left py-2\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {marketData.bonds.map((bond) => (\n              <tr key={bond.id} className=\"border-b hover:bg-gray-50\">\n                <td className=\"py-2 font-medium\">{bond.name}</td>\n                <td className=\"py-2\">{bond.issuer}</td>\n                <td className=\"py-2\">{(bond.couponRate * 100).toFixed(2)}%</td>\n                <td className=\"py-2\">{bond.maturityDate}</td>\n                <td className=\"py-2\">${bond.marketPrice}</td>\n                <td className=\"py-2\">{(bond.analytics.yieldToMaturity * 100).toFixed(3)}%</td>\n                <td className=\"py-2\">{bond.analytics.modifiedDuration.toFixed(2)}</td>\n                <td className=\"py-2\">\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    bond.creditRating === 'AAA' ? 'bg-green-100 text-green-800' :\n                    bond.creditRating.startsWith('AA') ? 'bg-blue-100 text-blue-800' :\n                    'bg-yellow-100 text-yellow-800'\n                  }`}>\n                    {bond.creditRating}\n                  </span>\n                </td>\n                <td className=\"py-2\">\n                  <button\n                    onClick={() => handleBondSelect(bond)}\n                    className=\"px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700\"\n                  >\n                    Analyze\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </motion.div>\n  );\n\n  const CreditAnalysis = () => (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"bg-white rounded-lg shadow-lg p-6\"\n    >\n      <h3 className=\"text-xl font-bold mb-4 flex items-center\">\n        <Shield className=\"mr-2\" />\n        Credit Analysis\n      </h3>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div>\n          <h4 className=\"font-semibold text-lg mb-3\">Credit Spreads by Sector</h4>\n          <div className=\"space-y-3\">\n            {[\n              { sector: 'Government', spread: 0, rating: 'AAA' },\n              { sector: 'Technology', spread: 85, rating: 'AA+' },\n              { sector: 'Financial', spread: 120, rating: 'A+' },\n              { sector: 'Energy', spread: 180, rating: 'BBB+' }\n            ].map((item) => (\n              <div key={item.sector} className=\"flex justify-between items-center p-3 bg-gray-50 rounded\">\n                <div>\n                  <span className=\"font-medium\">{item.sector}</span>\n                  <span className=\"ml-2 text-sm text-gray-600\">({item.rating})</span>\n                </div>\n                <span className=\"font-bold text-blue-600\">{item.spread}bp</span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div>\n          <h4 className=\"font-semibold text-lg mb-3\">Credit Quality Distribution</h4>\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <BarChart data={[\n              { rating: 'AAA', count: 15, percentage: 25 },\n              { rating: 'AA', count: 20, percentage: 33 },\n              { rating: 'A', count: 18, percentage: 30 },\n              { rating: 'BBB', count: 7, percentage: 12 }\n            ]}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"rating\" />\n              <YAxis />\n              <Tooltip />\n              <Bar dataKey=\"count\" fill=\"#3b82f6\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n    </motion.div>\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        <header className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Fixed Income Analytics</h1>\n          <p className=\"text-gray-600\">Comprehensive bond analysis, yield curve modeling, and credit analytics</p>\n        </header>\n\n        {/* Navigation Tabs */}\n        <div className=\"mb-6\">\n          <nav className=\"flex space-x-1 bg-blue-50 p-1 rounded-lg\">\n            {[\n              { id: 'bonds', label: 'Bond Universe', icon: BarChart3 },\n              { id: 'pricing', label: 'Pricing Calculator', icon: Calculator },\n              { id: 'curves', label: 'Yield Curves', icon: TrendingUp },\n              { id: 'credit', label: 'Credit Analysis', icon: Shield }\n            ].map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`flex items-center px-4 py-2 rounded-md font-medium transition-colors ${\n                    activeTab === tab.id\n                      ? 'bg-white text-blue-600 shadow-sm'\n                      : 'text-gray-600 hover:text-gray-900'\n                  }`}\n                >\n                  <Icon className=\"w-4 h-4 mr-2\" />\n                  {tab.label}\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* Content */}\n        <AnimatePresence mode=\"wait\">\n          {activeTab === 'bonds' && <BondsList />}\n          {activeTab === 'pricing' && <BondPricingCalculator />}\n          {activeTab === 'curves' && <YieldCurveChart />}\n          {activeTab === 'credit' && <CreditAnalysis />}\n        </AnimatePresence>\n\n        {/* Key Metrics Summary */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"mt-8 grid grid-cols-1 md:grid-cols-4 gap-4\"\n        >\n          {[\n            { label: 'Avg Portfolio Duration', value: '4.2 years', icon: Calendar, color: 'blue' },\n            { label: 'Portfolio Yield', value: '3.15%', icon: Percent, color: 'green' },\n            { label: 'Credit Spread', value: '125bp', icon: Target, color: 'orange' },\n            { label: 'Total Market Value', value: '$2.4M', icon: DollarSign, color: 'purple' }\n          ].map((metric) => {\n            const Icon = metric.icon;\n            return (\n              <div key={metric.label} className=\"bg-white rounded-lg shadow p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm text-gray-600\">{metric.label}</p>\n                    <p className=\"text-xl font-bold\">{metric.value}</p>\n                  </div>\n                  <Icon className={`w-8 h-8 text-${metric.color}-600`} />\n                </div>\n              </div>\n            );\n          })}\n        </motion.div>\n      </div>\n    </div>\n  );\n};\n\nexport default FixedIncomeAnalytics;"],"names":["FixedIncomeEngine","constructor","this","bondCache","Map","yieldCurves","creditSpreads","calculateBondPrice","bond","yieldRate","marketDate","Date","faceValue","couponRate","maturityDate","paymentFrequency","yearsToMaturity","calculateYearsToMaturity","periodsToMaturity","Math","ceil","couponPayment","periodYield","presentValue","accruedInterest","period","pow","principalPV","calculateAccruedInterest","cleanPrice","dirtyPrice","yieldToMaturity","modifiedDuration","calculateModifiedDuration","convexity","calculateConvexity","dv01","calculateDV01","bondMetrics","calculateYieldToMaturity","marketPrice","tolerance","maxIterations","yield_","i","priceResult","priceDiff","abs","iterations","priceAccuracy","Error","weightedCashFlows","totalPV","pv","convexitySum","basePrice","upPrice","bootstrapYieldCurve","bonds","marketPrices","sortedBonds","map","index","sort","a","b","yieldCurve","zeroCouponRates","length","maturity","ytm","push","rate","bootstrapSingleRate","zeroCouponRate","bondYTM","curve","spotRates","forwardRates","calculateForwardRates","curveMetrics","analyzeCurveShape","t1","t2","r1","r2","forwardRate","startPeriod","endPeriod","impliedRate","shape","shortRate","longRate","midRate","floor","slope","curvature","level","steepness","spread_2y10y","interpolateRate","spread_3m10y","calculateCreditSpread","corporateBond","governmentYieldCurve","riskFreeRate","corporateYTM","creditSpread","spreadBasisPoints","calculateOptionAdjustedSpread","volatility","baseSpread","get","optionValue","estimateEmbeddedOptionValue","optionAdjustedSpread","embeddedOptionValue","zSpread","currentDate","getTime","settlementDate","targetMaturity","lowerIndex","upperIndex","x1","x2","y1","existingRates","callable","putable","callDate","analyzeFixedIncomePortfolio","weights","portfolioDuration","portfolioConvexity","portfolioYield","totalMarketValue","price","weight","analytics","marketValue","portfolio","weightedDuration","weightedConvexity","weightedYield","riskMetrics","interestRateRisk","convexityBenefit","priceVolatility","FixedIncomeAnalytics","selectedBond","setSelectedBond","useState","setYieldCurve","activeTab","setActiveTab","bondPricing","setBondPricing","marketData","setMarketData","engine","useMemo","sampleBonds","id","name","issuer","creditRating","sector","samplePrices","useEffect","prev","curveData","BondPricingCalculator","jsxs","motion","div","initial","opacity","y","animate","className","children","jsx","Calculator","toFixed","YieldCurveChart","chartData","point","TrendingUp","ResponsiveContainer","width","height","LineChart","data","CartesianGrid","strokeDasharray","XAxis","dataKey","label","value","position","offset","YAxis","angle","Tooltip","Legend","Line","type","stroke","strokeWidth","BondsList","BarChart3","startsWith","onClick","pricing","handleBondSelect","CreditAnalysis","Shield","spread","rating","item","BarChart","count","percentage","Bar","fill","icon","tab","Icon","AnimatePresence","mode","Calendar","color","Percent","Target","DollarSign","metric"],"mappings":"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"}