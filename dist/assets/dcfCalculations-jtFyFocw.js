const e=e=>{if(!e||!e.currentRevenue)return null;const{currentRevenue:t,projectionYears:a=5,terminalGrowthRate:r=.025,discountRate:n=.12,yearlyData:i={},balanceSheet:s={}}=e,u={years:[],revenues:[],ebitda:[],ebit:[],nopat:[],freeCashFlows:[],presentValues:[],cumulativePV:0,terminalValue:0,presentValueTerminal:0,enterpriseValue:0,equityValue:0,impliedSharePrice:0,netDebt:0,assumptions:{discountRate:100*n,terminalGrowthRate:100*r,currentRevenue:t,projectionYears:a},projectionTable:[]};let l=t;for(let h=1;h<=a;h++){const e=i[h]||{},t=(e.revenueGrowth||10)/100,a=(e.ebitdaMargin||20)/100,r=(e.taxRate||25)/100,s=(e.capexPercent||3)/100,o=l*(1+t),c=o*a,p=o*((e.daPercent||3)/100),m=c-p,V=m*r,R=m-V,w=o*s,d=o*((e.workingCapitalChange||2)/100),f=R+p-w-d,v=f/Math.pow(1+n,h);u.years.push(h),u.revenues.push(o),u.ebitda.push(c),u.ebit.push(m),u.nopat.push(R),u.freeCashFlows.push(f),u.presentValues.push(v),u.cumulativePV+=v,u.projectionTable.push({year:h,revenue:o,revenueGrowth:100*t,ebitda:c,ebitdaMargin:100*a,depreciation:p,ebit:m,taxes:V,taxRate:100*r,nopat:R,capex:w,deltaWorkingCapital:d,freeCashFlow:f,presentValue:v}),l=o}if(u.freeCashFlows.length>0){const e=u.freeCashFlows[a-1]*(1+r);u.terminalValue=e/(n-r),u.presentValueTerminal=u.terminalValue/Math.pow(1+n,a)}u.enterpriseValue=u.cumulativePV+u.presentValueTerminal;const o=s.cash||0,c=s.totalDebt||0;u.netDebt=c-o,u.equityValue=u.enterpriseValue-u.netDebt;const p=s.sharesOutstanding||1e6;return u.impliedSharePrice=u.equityValue/p,u},t=(e,t=null)=>{if(!e?.statements?.incomeStatement)return null;const a=t?.dcf||{discountRate:12,terminalGrowthRate:2.5,projectionYears:5,taxRate:25,sharesOutstanding:1e3},r=e.statements.incomeStatement,n=Object.keys(r.totalRevenue||{}).sort((e,t)=>parseInt(e)-parseInt(t));if(0===n.length)return null;const i=n[n.length-1],s=r.totalRevenue?.[i]||0,u=r.operatingIncome?.[i]||0;let l=5;if(n.length>=2){const e=n[n.length-2],t=r.totalRevenue?.[i]||0,a=r.totalRevenue?.[e]||0;a>0&&(l=(t-a)/a*100,l=Math.max(-10,Math.min(25,l)))}const o=s>0?u/s*100:0,c={years:[],freeCashFlows:[],presentValues:[],cumulativePV:0,terminalValue:0,presentValueTerminal:0,enterpriseValue:0,equityValue:0,impliedSharePrice:0,impliedValuation:0,assumptions:{discountRate:a.discountRate,terminalGrowthRate:a.terminalGrowthRate,revenueGrowthRate:l,operatingMargin:o,taxRate:a.taxRate}};for(let m=1;m<=a.projectionYears;m++){const e=l*(1-.1*(m-1)),t=s*Math.pow(1+e/100,m)*(o/100)*(1-a.taxRate/100),r=t/Math.pow(1+a.discountRate/100,m);c.years.push(m),c.freeCashFlows.push(t),c.presentValues.push(r),c.cumulativePV+=r}const p=a.projectionYears,h=c.freeCashFlows[p-1]*(1+a.terminalGrowthRate/100);return c.terminalValue=h/((a.discountRate-a.terminalGrowthRate)/100),c.presentValueTerminal=c.terminalValue/Math.pow(1+a.discountRate/100,p),c.enterpriseValue=c.cumulativePV+c.presentValueTerminal,c.equityValue=c.enterpriseValue,c.impliedSharePrice=c.equityValue/a.sharesOutstanding,c.impliedValuation=c.equityValue,c},a=(t,a=[-2,-1,0,1,2],r=[-1,-.5,0,.5,1])=>{if(!t)return null;const n=t.discountRate||.12,i=t.terminalGrowthRate||.025,s=[];return a.forEach(a=>{const u=[];r.forEach(r=>{const s={...t,discountRate:n+a/100,terminalGrowthRate:i+r/100};try{const t=e(s);u.push({wacc:100*(n+a/100),terminalGrowth:100*(i+r/100),sharePrice:t?.impliedSharePrice||0,equityValue:t?.equityValue||0})}catch(l){u.push({wacc:100*(n+a/100),terminalGrowth:100*(i+r/100),sharePrice:0,equityValue:0})}}),s.push(u)}),{matrix:s,waccRange:a.map(e=>100*(n+e/100)),terminalGrowthRange:r.map(e=>100*(i+e/100)),baseCase:{wacc:100*n,terminalGrowth:100*i}}};export{a,t as b,e as c};
//# sourceMappingURL=dcfCalculations-jtFyFocw.js.map
