{"version":3,"file":"FinancialModelWorkspace-CkDC5-_w.js","sources":["../../src/components/PrivateAnalysis/FinancialModelWorkspace.jsx"],"sourcesContent":["import { motion } from 'framer-motion';\nimport { FileText, TrendingUp, Building, Activity, Calculator, RefreshCw, CheckCircle, AlertCircle } from 'lucide-react';\nimport React, { useState, useCallback } from 'react';\n\nconst FinancialModelWorkspace = ({ _data, _onDataChange }) => {\n  const [activeStatement, setActiveStatement] = useState('income');\n  const [modelData, setModelData] = useState({\n    // Income Statement (in thousands)\n    revenue: [100000, 105000, 110250, 115763, 121551],\n    costOfGoodsSold: [60000, 63000, 66150, 69458, 72931],\n    grossProfit: [40000, 42000, 44100, 46305, 48620],\n    operatingExpenses: [25000, 26250, 27563, 28941, 30388],\n    ebitda: [15000, 15750, 16538, 17364, 18232],\n    depreciation: [3000, 3150, 3308, 3473, 3647],\n    ebit: [12000, 12600, 13230, 13891, 14585],\n    interestExpense: [2000, 1800, 1580, 1340, 1080],\n    ebt: [10000, 10800, 11650, 12551, 13505],\n    taxes: [2100, 2268, 2447, 2636, 2836],\n    netIncome: [7900, 8532, 9203, 9915, 10669],\n\n    // Balance Sheet\n    cash: [5000, 8532, 12735, 17650, 23319],\n    accountsReceivable: [8333, 8750, 9188, 9647, 10129],\n    inventory: [10000, 10500, 11025, 11576, 12155],\n    totalCurrentAssets: [23333, 27782, 32948, 38873, 45603],\n    ppe: [50000, 51850, 53543, 55070, 56423],\n    totalAssets: [73333, 79632, 86491, 93943, 102026],\n\n    accountsPayable: [5000, 5250, 5513, 5789, 6078],\n    shortTermDebt: [3000, 2000, 1000, 0, 0],\n    totalCurrentLiabilities: [8000, 7250, 6513, 5789, 6078],\n    longTermDebt: [25000, 23000, 21000, 19000, 17000],\n    totalLiabilities: [33000, 30250, 27513, 24789, 23078],\n    shareholderEquity: [40333, 49382, 58978, 69154, 78948],\n    totalLiabilitiesEquity: [73333, 79632, 86491, 93943, 102026],\n\n    // Cash Flow\n    operatingCashFlow: [8567, 10233, 11345, 12464, 13584],\n    capex: [-5000, -4850, -5000, -5000, -5000],\n    investingCashFlow: [-5000, -4850, -5000, -5000, -5000],\n    debtRepayment: [-2000, -2000, -2000, -2000, -2000],\n    financingCashFlow: [-2000, -2000, -2000, -2000, -2000],\n    netCashFlow: [1567, 3383, 4345, 5464, 6584],\n    endingCash: [5000, 8383, 12728, 18192, 24776]\n  });\n\n  const [assumptions, setAssumptions] = useState({\n    revenueGrowthRate: 0.05,\n    cogsPercentOfRevenue: 0.60,\n    opexGrowthRate: 0.05,\n    taxRate: 0.21,\n    depreciationRate: 0.06,\n    capexPercentOfRevenue: 0.05,\n    debtPaydown: 2000\n  });\n\n  const [validationErrors, setValidationErrors] = useState([]);\n  const periods = ['Year 1', 'Year 2', 'Year 3', 'Year 4', 'Year 5'];\n\n  const formatCurrency = useCallback((value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0\n    }).format(value * 1000); // Convert from thousands\n  }, []);\n\n  const recalculateModel = useCallback(() => {\n    const newData = { ...modelData };\n\n    // Recalculate projections based on assumptions\n    for (let i = 1; i < 5; i++) {\n      // Income Statement\n      newData.revenue[i] = newData.revenue[i - 1] * (1 + assumptions.revenueGrowthRate);\n      newData.costOfGoodsSold[i] = newData.revenue[i] * assumptions.cogsPercentOfRevenue;\n      newData.grossProfit[i] = newData.revenue[i] - newData.costOfGoodsSold[i];\n      newData.operatingExpenses[i] = newData.operatingExpenses[i - 1] * (1 + assumptions.opexGrowthRate);\n      newData.ebitda[i] = newData.grossProfit[i] - newData.operatingExpenses[i];\n      newData.depreciation[i] = newData.ppe[i - 1] * assumptions.depreciationRate;\n      newData.ebit[i] = newData.ebitda[i] - newData.depreciation[i];\n      newData.interestExpense[i] = newData.longTermDebt[i - 1] * 0.06;\n      newData.ebt[i] = newData.ebit[i] - newData.interestExpense[i];\n      newData.taxes[i] = Math.max(0, newData.ebt[i] * assumptions.taxRate);\n      newData.netIncome[i] = newData.ebt[i] - newData.taxes[i];\n\n      // Balance Sheet\n      const capex = newData.revenue[i] * assumptions.capexPercentOfRevenue;\n      newData.ppe[i] = newData.ppe[i - 1] + capex - newData.depreciation[i];\n      newData.longTermDebt[i] = Math.max(0, newData.longTermDebt[i - 1] - assumptions.debtPaydown);\n      newData.shortTermDebt[i] = Math.max(0, newData.shortTermDebt[i - 1] - 1000);\n\n      // Working capital (simplified)\n      newData.accountsReceivable[i] = newData.revenue[i] * 0.083; // ~30 days\n      newData.inventory[i] = newData.costOfGoodsSold[i] * 0.1; // ~36 days\n      newData.accountsPayable[i] = newData.costOfGoodsSold[i] * 0.05; // ~18 days\n\n      // Cash Flow\n      const wcChange = (newData.accountsReceivable[i] - newData.accountsReceivable[i - 1]) +\n                      (newData.inventory[i] - newData.inventory[i - 1]) -\n                      (newData.accountsPayable[i] - newData.accountsPayable[i - 1]);\n\n      newData.operatingCashFlow[i] = newData.netIncome[i] + newData.depreciation[i] - wcChange;\n      newData.capex[i] = -capex;\n      newData.investingCashFlow[i] = newData.capex[i];\n      newData.debtRepayment[i] = -assumptions.debtPaydown;\n      newData.financingCashFlow[i] = newData.debtRepayment[i];\n      newData.netCashFlow[i] = newData.operatingCashFlow[i] + newData.investingCashFlow[i] + newData.financingCashFlow[i];\n      newData.endingCash[i] = newData.cash[i - 1] + newData.netCashFlow[i];\n      newData.cash[i] = newData.endingCash[i];\n\n      // Complete Balance Sheet\n      newData.totalCurrentAssets[i] = newData.cash[i] + newData.accountsReceivable[i] + newData.inventory[i];\n      newData.totalAssets[i] = newData.totalCurrentAssets[i] + newData.ppe[i];\n      newData.totalCurrentLiabilities[i] = newData.accountsPayable[i] + newData.shortTermDebt[i];\n      newData.totalLiabilities[i] = newData.totalCurrentLiabilities[i] + newData.longTermDebt[i];\n      newData.shareholderEquity[i] = newData.totalAssets[i] - newData.totalLiabilities[i];\n      newData.totalLiabilitiesEquity[i] = newData.totalLiabilities[i] + newData.shareholderEquity[i];\n    }\n\n    setModelData(newData);\n\n    // Validate model\n    const errors = [];\n    for (let i = 0; i < 5; i++) {\n      const diff = Math.abs(newData.totalAssets[i] - newData.totalLiabilitiesEquity[i]);\n      if (diff > 1) {\n        errors.push(`Balance sheet doesn't balance in ${periods[i]}`);\n      }\n    }\n    setValidationErrors(errors);\n\n  }, [modelData, assumptions, periods]);\n\n  const handleAssumptionChange = useCallback((field, value) => {\n    setAssumptions(prev => ({ ...prev, [field]: parseFloat(value) || 0 }));\n  }, []);\n\n  const statements = [\n    { id: 'income', label: 'Income Statement', icon: TrendingUp },\n    { id: 'balance', label: 'Balance Sheet', icon: Building },\n    { id: 'cashflow', label: 'Cash Flow', icon: Activity },\n    { id: 'assumptions', label: 'Assumptions', icon: Calculator }\n  ];\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <FileText className=\"text-green-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">3-Statement Financial Model</h2>\n            <p className=\"text-gray-600\">Integrated Income Statement, Balance Sheet & Cash Flow</p>\n          </div>\n        </div>\n\n        <motion.button\n          onClick={recalculateModel}\n          className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg flex items-center space-x-2\"\n          whileHover={{ scale: 1.02 }}\n        >\n          <RefreshCw size={16} />\n          <span>Recalculate</span>\n        </motion.button>\n      </div>\n\n      {/* Validation Status */}\n      {validationErrors.length === 0 ? (\n        <div className=\"mb-6 p-3 bg-green-50 border border-green-200 rounded-lg flex items-center\">\n          <CheckCircle className=\"text-green-500 mr-2\" size={20} />\n          <span className=\"text-green-800 font-medium\">Model is balanced and consistent</span>\n        </div>\n      ) : (\n        <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <div className=\"flex items-center mb-2\">\n            <AlertCircle className=\"text-red-500 mr-2\" size={20} />\n            <h3 className=\"font-semibold text-red-800\">Validation Errors</h3>\n          </div>\n          <ul className=\"text-sm text-red-700\">\n            {validationErrors.map((error, idx) => <li key={idx}>â€¢ {error}</li>)}\n          </ul>\n        </div>\n      )}\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {statements.map((statement) => {\n            const Icon = statement.icon;\n            return (\n              <button\n                key={statement.id}\n                onClick={() => setActiveStatement(statement.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeStatement === statement.id\n                    ? 'border-green-500 text-green-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{statement.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Income Statement */}\n      {activeStatement === 'income' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Income Statement ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {[\n                  { label: 'Revenue', key: 'revenue' },\n                  { label: 'Cost of Goods Sold', key: 'costOfGoodsSold' },\n                  { label: 'Gross Profit', key: 'grossProfit' },\n                  { label: 'Operating Expenses', key: 'operatingExpenses' },\n                  { label: 'EBITDA', key: 'ebitda' },\n                  { label: 'Depreciation', key: 'depreciation' },\n                  { label: 'EBIT', key: 'ebit' },\n                  { label: 'Interest Expense', key: 'interestExpense' },\n                  { label: 'EBT', key: 'ebt' },\n                  { label: 'Taxes', key: 'taxes' },\n                  { label: 'Net Income', key: 'netIncome' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4 font-medium\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Balance Sheet */}\n      {activeStatement === 'balance' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Balance Sheet ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                <tr className=\"bg-gray-100\"><td colSpan={6} className=\"py-2 px-4 font-semibold\">ASSETS</td></tr>\n                {[\n                  { label: 'Cash', key: 'cash' },\n                  { label: 'Accounts Receivable', key: 'accountsReceivable' },\n                  { label: 'Inventory', key: 'inventory' },\n                  { label: 'Total Current Assets', key: 'totalCurrentAssets' },\n                  { label: 'PP&E', key: 'ppe' },\n                  { label: 'Total Assets', key: 'totalAssets' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n\n                <tr className=\"bg-gray-100\"><td colSpan={6} className=\"py-2 px-4 font-semibold\">LIABILITIES & EQUITY</td></tr>\n                {[\n                  { label: 'Accounts Payable', key: 'accountsPayable' },\n                  { label: 'Short-term Debt', key: 'shortTermDebt' },\n                  { label: 'Total Current Liabilities', key: 'totalCurrentLiabilities' },\n                  { label: 'Long-term Debt', key: 'longTermDebt' },\n                  { label: 'Total Liabilities', key: 'totalLiabilities' },\n                  { label: 'Shareholder Equity', key: 'shareholderEquity' },\n                  { label: 'Total Liab. & Equity', key: 'totalLiabilitiesEquity' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Cash Flow */}\n      {activeStatement === 'cashflow' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Cash Flow Statement ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {[\n                  { label: 'Operating Cash Flow', key: 'operatingCashFlow' },\n                  { label: 'CapEx', key: 'capex' },\n                  { label: 'Investing Cash Flow', key: 'investingCashFlow' },\n                  { label: 'Debt Repayment', key: 'debtRepayment' },\n                  { label: 'Financing Cash Flow', key: 'financingCashFlow' },\n                  { label: 'Net Cash Flow', key: 'netCashFlow' },\n                  { label: 'Ending Cash', key: 'endingCash' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Assumptions */}\n      {activeStatement === 'assumptions' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-4\">Key Assumptions</h3>\n              <div className=\"space-y-3\">\n                {[\n                  { label: 'Revenue Growth Rate (%)', key: 'revenueGrowthRate', isPercent: true },\n                  { label: 'COGS % of Revenue', key: 'cogsPercentOfRevenue', isPercent: true },\n                  { label: 'OpEx Growth Rate (%)', key: 'opexGrowthRate', isPercent: true },\n                  { label: 'Tax Rate (%)', key: 'taxRate', isPercent: true },\n                  { label: 'CapEx % of Revenue', key: 'capexPercentOfRevenue', isPercent: true },\n                  { label: 'Annual Debt Paydown ($000s)', key: 'debtPaydown', isPercent: false }\n                ].map(assumption => (\n                  <div key={assumption.key}>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      {assumption.label}\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      value={assumption.isPercent ? assumptions[assumption.key] * 100 : assumptions[assumption.key]}\n                      onChange={(e) => handleAssumptionChange(\n                        assumption.key,\n                        assumption.isPercent ? (e.target.value || 0) / 100 : e.target.value\n                      )}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-4\">Model Metrics</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span>5-Year Revenue CAGR:</span>\n                  <span className=\"font-medium\">{((Math.pow(modelData.revenue[4] / modelData.revenue[0], 1 / 4) - 1) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>5-Year EBITDA CAGR:</span>\n                  <span className=\"font-medium\">{((Math.pow(modelData.ebitda[4] / modelData.ebitda[0], 1 / 4) - 1) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Exit EBITDA Margin:</span>\n                  <span className=\"font-medium\">{((modelData.ebitda[4] / modelData.revenue[4]) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Exit Debt/EBITDA:</span>\n                  <span className=\"font-medium\">{(modelData.longTermDebt[4] / modelData.ebitda[4]).toFixed(1)}x</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default FinancialModelWorkspace;\n"],"names":["FinancialModelWorkspace","_data","_onDataChange","activeStatement","setActiveStatement","useState","modelData","setModelData","revenue","costOfGoodsSold","grossProfit","operatingExpenses","ebitda","depreciation","ebit","interestExpense","ebt","taxes","netIncome","cash","accountsReceivable","inventory","totalCurrentAssets","ppe","totalAssets","accountsPayable","shortTermDebt","totalCurrentLiabilities","longTermDebt","totalLiabilities","shareholderEquity","totalLiabilitiesEquity","operatingCashFlow","capex","investingCashFlow","debtRepayment","financingCashFlow","netCashFlow","endingCash","assumptions","setAssumptions","revenueGrowthRate","cogsPercentOfRevenue","opexGrowthRate","taxRate","depreciationRate","capexPercentOfRevenue","debtPaydown","validationErrors","setValidationErrors","periods","formatCurrency","useCallback","value","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","recalculateModel","newData","i","Math","max","wcChange","errors","abs","push","handleAssumptionChange","field","prev","parseFloat","statements","id","label","icon","TrendingUp","Building","Activity","Calculator","jsxs","className","children","jsx","FileText","size","motion","button","onClick","whileHover","scale","RefreshCw","length","CheckCircle","AlertCircle","map","error","idx","statement","Icon","div","initial","opacity","y","animate","period","key","item","periodIdx","colSpan","isPercent","assumption","type","step","onChange","e","target","pow","toFixed"],"mappings":"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"}