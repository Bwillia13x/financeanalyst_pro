{"version":3,"file":"animations-DmEkbmfl.js","sources":["../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/utils/mix.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../../node_modules/framer-motion/dist/es/utils/memo.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/debug/record.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","useLayoutId","layoutId","layoutGroupId","useContext","id","undefined","createMotionProxy","createConfig","custom","Component","customMotionComponentConfig","preloadedFeatures","createVisualElement","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","context","initial","inherit","getCurrentTreeVariants","useMemo","useCreateMotionContext","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React.createElement","Provider","value","useCallback","instance","mount","unmount","useMotionRef","createMotionComponent","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","copyRawValuesOnly","target","source","useHTMLProps","htmlProps","assign","useInitialMotionValues","transformValues","useStyle","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","useConstant","init","isKeyframesTarget","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","constructor","this","order","scheduled","add","process","push","remove","index","splice","delete","clear","stepsOrder","schedule","frame","cancel","cancelFrame","frameData","steps","scheduleNextBatch","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","performance","now","createRenderBatcher","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","root","rootMargin","amount","once","threshold","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","observeIntersection","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","interpolate","input","isClamp","mixer","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","arr","remaining","offsetProgress","fillOffset","defaultOffset","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","calcAngularFreq","undampedFreq","dampingRatio","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","stiffness","damping","mass","isResolvedFromDuration","springOptions","derived","bounce","envelope","derivative","exponentialDecay","exp","f","initialGuess","result","approximateRoot","findSpring","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","Element","memo","acceleratedValues","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueName","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","owner","HTMLElement","acceleratedAnimation","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","createAcceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","makeTargetAnimatable","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","checkVariantsDidChange","createTypeState","prevResolvedValues","resolvedDefinition","animateVisualElement","animateList","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","createAnimationState","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","resolveCSSVariables","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","checkAndConvertChangedValueTypes","unitConversion","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","useIsMounted","PopChildMeasure","React.Component","childRef","sizeRef","offsetHeight","offsetWidth","offsetTop","offsetLeft","PopChild","dataset","motionPopId","head","appendChild","sheet","insertRule","removeChild","React.cloneElement","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","childId","isComplete","_","React.useEffect","getChildKey","AnimatePresence","exitBeforeEnter","forceRender","forcedRenderCount","setForcedRenderCount","useState","useForceUpdate","filteredChildren","filtered","Children","isValidElement","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","updateChildLookup","React.Fragment","presentKeys","targetKeys","numPresent","component","insertionIndex","exitingComponent","onExit","leftOverKeys","childKey","leftOverKey","presentChild","presentChildKey","cloneElement"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209]}