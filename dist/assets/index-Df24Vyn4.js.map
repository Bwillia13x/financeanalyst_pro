{"version":3,"file":"index-Df24Vyn4.js","sources":["../../src/services/dataValidationService.js","../../src/services/enhancedApiService.js","../../src/pages/real-time-market-data-center/components/ApiStatusPanel.jsx","../../src/pages/real-time-market-data-center/components/BulkOperationsPanel.jsx","../../src/pages/real-time-market-data-center/components/ConnectionStatus.jsx","../../src/pages/real-time-market-data-center/components/DataSourceToggle.jsx","../../src/pages/real-time-market-data-center/components/MarketDataWidget.jsx","../../src/pages/real-time-market-data-center/components/SymbolSearch.jsx","../../src/pages/real-time-market-data-center/components/WatchlistPanel.jsx","../../src/pages/real-time-market-data-center/index.jsx"],"sourcesContent":["import { apiLogger } from '../utils/apiLogger.js';\n\n/**\n * Data validation and quality assurance service\n * Ensures data integrity and consistency across different sources\n */\nclass DataValidationService {\n  constructor() {\n    this.validationRules = this.initializeValidationRules();\n    this.qualityMetrics = new Map();\n    this.anomalyDetection = new Map();\n  }\n\n  /**\n   * Initialize validation rules for different data types\n   */\n  initializeValidationRules() {\n    return {\n      marketData: {\n        required: ['symbol', 'currentPrice', 'volume'],\n        numeric: ['currentPrice', 'previousClose', 'change', 'changePercent', 'volume', 'marketCap'],\n        ranges: {\n          currentPrice: { min: 0, max: 100000 },\n          volume: { min: 0, max: 1e12 },\n          changePercent: { min: -50, max: 50 }\n        },\n        formats: {\n          symbol: /^[A-Z]{1,5}$/,\n          timestamp: /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/\n        }\n      },\n      financialStatements: {\n        required: ['revenue', 'netIncome'],\n        numeric: ['revenue', 'netIncome', 'totalDebt', 'cashAndCashEquivalents'],\n        ranges: {\n          revenue: { min: 0, max: 1e12 },\n          netIncome: { min: -1e11, max: 1e11 }\n        }\n      },\n      companyProfile: {\n        required: ['symbol', 'companyName', 'sector'],\n        numeric: ['mktCap', 'pe', 'pb', 'beta'],\n        ranges: {\n          pe: { min: 0, max: 1000 },\n          pb: { min: 0, max: 100 },\n          beta: { min: -5, max: 5 }\n        }\n      },\n      dcfModel: {\n        required: ['cashFlows', 'discountRate'],\n        numeric: ['discountRate', 'terminalGrowthRate', 'years'],\n        custom: (data) => {\n          const errors = [];\n          if (!Array.isArray(data.cashFlows) || data.cashFlows.length === 0) {\n            errors.push('Cash flows must be a non-empty array');\n          }\n          if (data.discountRate < 0) {\n            errors.push('Discount rate must be non-negative');\n          }\n          return { errors, warnings: [] };\n        }\n      },\n      lboModel: {\n        required: ['purchasePrice', 'debtFinancing', 'equityFinancing'],\n        numeric: ['purchasePrice', 'debtFinancing', 'equityFinancing', 'exitMultiple', 'holdingPeriod'],\n        custom: (data) => {\n          const errors = [];\n          const warnings = [];\n          if (data.debtFinancing && data.equityFinancing && data.purchasePrice) {\n            const total = data.debtFinancing + data.equityFinancing;\n            if (Math.abs(total - data.purchasePrice) > 0.01) {\n              errors.push('Debt + Equity must equal purchase price');\n            }\n            const debtRatio = data.debtFinancing / data.purchasePrice;\n            if (debtRatio > 0.9) {\n              warnings.push('High leverage ratio detected');\n            }\n          }\n          return { errors, warnings };\n        }\n      },\n      stockData: {\n        required: ['symbol', 'price'],\n        numeric: ['price', 'volume', 'change', 'changePercent'],\n        custom: (data) => {\n          const errors = [];\n          if (!data.symbol || typeof data.symbol !== 'string' || data.symbol.trim() === '') {\n            errors.push('Symbol is required and must be a non-empty string');\n          }\n          if (typeof data.price !== 'number' || data.price < 0) {\n            errors.push('Price must be a positive number');\n          }\n          return { errors, warnings: [] };\n        }\n      }\n    };\n  }\n\n  /**\n   * Validate data against defined rules\n   * @param {Object} data - Data to validate\n   * @param {string} dataType - Type of data\n   * @returns {Object} Validation result\n   */\n  validateData(data, dataType) {\n    try {\n      const rules = this.validationRules[dataType];\n      if (!rules) {\n        return { isValid: false, errors: [`Unknown data type: ${dataType}`] };\n      }\n\n      const errors = [];\n      const warnings = [];\n\n      // Check required fields\n      for (const field of rules.required || []) {\n        if (data[field] === undefined || data[field] === null) {\n          errors.push(`Missing required field: ${field}`);\n        }\n      }\n\n      // Validate numeric fields\n      for (const field of rules.numeric || []) {\n        if (data[field] !== undefined && data[field] !== null) {\n          const value = parseFloat(data[field]);\n          if (isNaN(value)) {\n            errors.push(`Field ${field} must be numeric, got: ${data[field]}`);\n          } else {\n          // Check ranges\n            const range = rules.ranges?.[field];\n            if (range) {\n              if (value < range.min || value > range.max) {\n                warnings.push(`Field ${field} value ${value} outside expected range [${range.min}, ${range.max}]`);\n              }\n            }\n          }\n        }\n      }\n\n      // Validate formats\n      for (const [field, pattern] of Object.entries(rules.formats || {})) {\n        if (data[field] && !pattern.test(data[field])) {\n          errors.push(`Field ${field} format invalid: ${data[field]}`);\n        }\n      }\n\n      // Additional business logic validations\n      const businessValidation = this.validateBusinessLogic(data, dataType);\n      errors.push(...businessValidation.errors);\n      warnings.push(...businessValidation.warnings);\n\n      // Custom validation function\n      if (rules.custom) {\n        const customValidation = rules.custom(data);\n        errors.push(...(customValidation.errors || []));\n        warnings.push(...(customValidation.warnings || []));\n      }\n\n      const isValid = errors.length === 0;\n\n      // Log validation results\n      if (!isValid) {\n        apiLogger.log('ERROR', `Data validation failed for ${dataType}`, { errors, warnings });\n      } else if (warnings.length > 0) {\n        apiLogger.log('WARN', `Data validation warnings for ${dataType}`, { warnings });\n      }\n\n      return {\n        isValid,\n        errors,\n        warnings,\n        qualityScore: this.calculateQualityScore(errors, warnings)\n      };\n    } catch (error) {\n      return { isValid: false, errors: ['An unexpected error occurred during validation.'], warnings: [] };\n    }\n  }\n\n  /**\n   * Validate business logic rules\n   * @param {Object} data - Data to validate\n   * @param {string} dataType - Type of data\n   * @returns {Object} Business validation result\n   */\n  validateBusinessLogic(data, dataType) {\n    const errors = [];\n    const warnings = [];\n\n    switch (dataType) {\n      case 'marketData':\n        // Price consistency checks\n        if (data.currentPrice && data.previousClose) {\n          const calculatedChange = data.currentPrice - data.previousClose;\n          const calculatedChangePercent = (calculatedChange / data.previousClose) * 100;\n\n          if (data.change && Math.abs(data.change - calculatedChange) > 0.01) {\n            warnings.push(`Price change inconsistency: reported ${data.change}, calculated ${calculatedChange.toFixed(2)}`);\n          }\n\n          if (data.changePercent && Math.abs(data.changePercent - calculatedChangePercent) > 0.1) {\n            warnings.push(`Change percent inconsistency: reported ${data.changePercent}%, calculated ${calculatedChangePercent.toFixed(2)}%`);\n          }\n        }\n\n        // Day range validation\n        if (data.currentPrice && data.dayHigh && data.dayLow) {\n          if (data.currentPrice > data.dayHigh) {\n            warnings.push(`Current price ${data.currentPrice} exceeds day high ${data.dayHigh}`);\n          }\n          if (data.currentPrice < data.dayLow) {\n            warnings.push(`Current price ${data.currentPrice} below day low ${data.dayLow}`);\n          }\n          if (data.dayLow > data.dayHigh) {\n            errors.push(`Day low ${data.dayLow} greater than day high ${data.dayHigh}`);\n          }\n        }\n        break;\n\n      case 'financialStatements':\n        // Financial ratio validations\n        if (data.revenue && data.netIncome) {\n          const netMargin = (data.netIncome / data.revenue) * 100;\n          if (netMargin < -100 || netMargin > 100) {\n            warnings.push(`Unusual net profit margin: ${netMargin.toFixed(2)}%`);\n          }\n        }\n\n        // Balance sheet validations\n        if (data.totalCurrentAssets && data.totalCurrentLiabilities) {\n          const currentRatio = data.totalCurrentAssets / data.totalCurrentLiabilities;\n          if (currentRatio < 0.1 || currentRatio > 20) {\n            warnings.push(`Unusual current ratio: ${currentRatio.toFixed(2)}`);\n          }\n        }\n        break;\n\n      case 'companyProfile':\n        // Valuation metric validations\n        if (data.pe && (data.pe < 0 || data.pe > 500)) {\n          warnings.push(`Unusual P/E ratio: ${data.pe}`);\n        }\n\n        if (data.pb && (data.pb < 0 || data.pb > 50)) {\n          warnings.push(`Unusual P/B ratio: ${data.pb}`);\n        }\n        break;\n    }\n\n    return { errors, warnings };\n  }\n\n  /**\n   * Calculate data quality score\n   * @param {Array} errors - Validation errors\n   * @param {Array} warnings - Validation warnings\n   * @returns {number} Quality score (0-100)\n   */\n  calculateQualityScore(errors, warnings) {\n    if (errors.length > 0) {\n      return Math.max(0, 50 - (errors.length * 10));\n    }\n\n    return Math.max(70, 100 - (warnings.length * 5));\n  }\n\n  /**\n   * Cross-validate data from multiple sources\n   * @param {Array} dataSources - Array of data objects from different sources\n   * @param {string} dataType - Type of data\n   * @returns {Object} Cross-validation result\n   */\n  crossValidateData(dataSources, dataType) {\n    if (dataSources.length < 2) {\n      return { isConsistent: true, discrepancies: [], recommendedSource: dataSources[0]?.source };\n    }\n\n    const discrepancies = [];\n    const numericFields = this.validationRules[dataType]?.numeric || [];\n\n    // Compare numeric fields across sources\n    for (const field of numericFields) {\n      const values = dataSources\n        .filter(data => data[field] !== undefined && data[field] !== null)\n        .map(data => ({ value: parseFloat(data[field]), source: data.source }));\n\n      if (values.length > 1) {\n        const mean = values.reduce((sum, item) => sum + item.value, 0) / values.length;\n        const maxDeviation = Math.max(...values.map(item => Math.abs(item.value - mean)));\n        const threshold = mean * 0.05; // 5% threshold\n\n        if (maxDeviation > threshold) {\n          discrepancies.push({\n            field,\n            values,\n            mean,\n            maxDeviation,\n            threshold\n          });\n        }\n      }\n    }\n\n    // Determine recommended source based on quality scores\n    const sourceQuality = dataSources.map(data => {\n      const validation = this.validateData(data, dataType);\n      return {\n        source: data.source,\n        qualityScore: validation.qualityScore,\n        errorCount: validation.errors.length,\n        warningCount: validation.warnings.length\n      };\n    });\n\n    const recommendedSource = sourceQuality\n      .sort((a, b) => b.qualityScore - a.qualityScore)[0]?.source;\n\n    return {\n      isConsistent: discrepancies.length === 0,\n      discrepancies,\n      sourceQuality,\n      recommendedSource\n    };\n  }\n\n  /**\n   * Detect anomalies in time series data\n   * @param {Array} timeSeries - Array of data points with timestamps\n   * @param {string} field - Field to analyze\n   * @returns {Array} Detected anomalies\n   */\n  detectAnomalies(timeSeries, field) {\n    if (timeSeries.length < 10) {\n      return []; // Need sufficient data for anomaly detection\n    }\n\n    const values = timeSeries.map(point => parseFloat(point[field])).filter(v => !isNaN(v));\n    const mean = values.reduce((sum, val) => sum + val, 0) / values.length;\n    const variance = values.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / values.length;\n    const stdDev = Math.sqrt(variance);\n\n    const anomalies = [];\n    const threshold = 2.5; // 2.5 standard deviations\n\n    timeSeries.forEach((point, index) => {\n      const value = parseFloat(point[field]);\n      if (!isNaN(value)) {\n        const zScore = Math.abs((value - mean) / stdDev);\n        if (zScore > threshold) {\n          anomalies.push({\n            index,\n            timestamp: point.timestamp,\n            value,\n            zScore,\n            deviation: value - mean,\n            severity: zScore > 3 ? 'high' : 'medium'\n          });\n        }\n      }\n    });\n\n    return anomalies;\n  }\n\n  /**\n   * Get validation summary for a dataset\n   * @param {Object} data - Data to summarize\n   * @param {string} dataType - Type of data\n   * @returns {Object} Validation summary\n   */\n  getValidationSummary(data, dataType) {\n    const validation = this.validateData(data, dataType);\n\n    return {\n      dataType,\n      timestamp: new Date().toISOString(),\n      isValid: validation.isValid,\n      qualityScore: validation.qualityScore,\n      errorCount: validation.errors.length,\n      warningCount: validation.warnings.length,\n      completeness: this.calculateCompleteness(data, dataType),\n      freshness: this.calculateFreshness(data),\n      source: data.source || 'unknown'\n    };\n  }\n\n  /**\n   * Calculate data completeness percentage\n   * @param {Object} data - Data to analyze\n   * @param {string} dataType - Type of data\n   * @returns {number} Completeness percentage\n   */\n  calculateCompleteness(data, dataType) {\n    const rules = this.validationRules[dataType];\n    if (!rules) return 0;\n\n    const allFields = [\n      ...(rules.required || []),\n      ...(rules.numeric || []),\n      ...Object.keys(rules.formats || {})\n    ];\n\n    const uniqueFields = [...new Set(allFields)];\n    const presentFields = uniqueFields.filter(field =>\n      data[field] !== undefined && data[field] !== null && data[field] !== ''\n    );\n\n    return (presentFields.length / uniqueFields.length) * 100;\n  }\n\n  /**\n   * Calculate data freshness score\n   * @param {Object} data - Data to analyze\n   * @returns {number} Freshness score (0-100)\n   */\n  calculateFreshness(data) {\n    if (!data.timestamp) return 50; // Unknown freshness\n\n    const dataTime = new Date(data.timestamp);\n    const now = new Date();\n    const ageMinutes = (now - dataTime) / (1000 * 60);\n\n    // Score based on age (fresher = higher score)\n    if (ageMinutes < 5) return 100;\n    if (ageMinutes < 15) return 90;\n    if (ageMinutes < 60) return 80;\n    if (ageMinutes < 240) return 70;\n    if (ageMinutes < 1440) return 60;\n    return 40;\n  }\n\n\n  /**\n   * Sanitize input string\n   * @param {any} input - Input to sanitize\n   * @returns {string} Sanitized string\n   */\n  sanitizeInput(input) {\n    if (input === null || input === undefined) {\n      return '';\n    }\n\n    const str = String(input);\n    return str\n      .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n      .replace(/<[^>]*>/g, '')\n      .replace(/javascript:/gi, '')\n      .replace(/on\\w+\\s*=/gi, '');\n  }\n\n  /**\n   * Check if number is in range\n   * @param {number} value - Value to check\n   * @param {number} min - Minimum value\n   * @param {number} max - Maximum value\n   * @returns {boolean} True if in range\n   */\n  isInRange(value, min, max) {\n    return typeof value === 'number' && value >= min && value <= max;\n  }\n\n  /**\n   * Check if value is valid percentage (0-1)\n   * @param {number} value - Value to check\n   * @returns {boolean} True if valid percentage\n   */\n  isValidPercentage(value) {\n    return typeof value === 'number' && value >= 0 && value <= 1;\n  }\n\n  /**\n   * Check if value is a valid number\n   * @param {any} value - Value to check\n   * @returns {boolean} True if valid number\n   */\n  isValidNumber(value) {\n    return typeof value === 'number' && !isNaN(value) && isFinite(value);\n  }\n\n  /**\n   * Check if value is a valid array\n   * @param {any} value - Value to check\n   * @returns {boolean} True if valid array\n   */\n  isValidArray(value) {\n    return Array.isArray(value);\n  }\n\n  /**\n   * Check if value is a valid object\n   * @param {any} value - Value to check\n   * @returns {boolean} True if valid object\n   */\n  isValidObject(value) {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n  }\n\n  /**\n   * Validate financial ratios\n   * @param {Object} ratios - Financial ratios to validate\n   * @returns {Object} Validation result\n   */\n  validateFinancialRatios(ratios) {\n    const errors = [];\n    const warnings = [];\n\n    // Check for concerning ratios\n    if (ratios.currentRatio < 1.0) {\n      warnings.push('Current ratio below 1.0 indicates potential liquidity issues');\n    }\n\n    if (ratios.debtToEquity > 2.0) {\n      warnings.push('High debt-to-equity ratio indicates high leverage');\n    }\n\n    if (ratios.returnOnEquity < 0) {\n      warnings.push('Negative return on equity indicates poor performance');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings\n    };\n  }\n}\n\n// Export singleton instance\nexport const dataValidationService = new DataValidationService();\nexport default DataValidationService;\n","import { apiLogger } from '../utils/apiLogger.js';\nimport secureApiClient from './secureApiClient.js';\n\nclass RateLimiter {\n  constructor(requestsPerInterval, interval) {\n    this.requestsPerInterval = requestsPerInterval;\n    this.interval = interval;\n    this.requestTimestamps = [];\n  }\n\n  async acquire() {\n    const now = Date.now();\n\n    this.requestTimestamps = this.requestTimestamps.filter(\n      (timestamp) => now - timestamp < this.interval\n    );\n\n    if (this.requestTimestamps.length >= this.requestsPerInterval) {\n      const timeToWait = this.interval - (now - this.requestTimestamps[0]);\n      await new Promise(resolve => setTimeout(resolve, timeToWait));\n      return this.acquire();\n    }\n\n    this.requestTimestamps.push(now);\n  }\n}\n\n/**\n * Enhanced API service with intelligent data source selection and fallbacks\n * Provides real data integration with multiple providers\n */\nclass EnhancedApiService {\n  constructor() {\n    this.rateLimiters = new Map();\n    this.sourceHealth = new Map();\n    this.lastRequests = new Map();\n    this.cache = new Map();\n    this.rateLimitInfo = { remaining: null, reset: null };\n\n    // Initialize secure client and source health tracking\n    this.initializeSecureClient();\n    this.initializeSourceHealth();\n    this.rateLimiters.set('default', new RateLimiter(5, 1000));\n  }\n\n  /**\n   * SECURITY NOTE: API keys are now handled securely by backend\n   * This service routes all requests through secure backend proxy\n   */\n  initializeSecureClient() {\n    this.client = secureApiClient;\n    \n    apiLogger.log('INFO', 'EnhancedApiService initialized with secure backend proxy');\n  }\n\n  /**\n   * Initialize health tracking for all data sources\n   */\n  initializeSourceHealth() {\n    const sources = ['BACKEND_PROXY', 'ALPHA_VANTAGE', 'FMP', 'YAHOO_FINANCE', 'SEC_EDGAR', 'QUANDL', 'FRED'];\n\n    sources.forEach(source => {\n      this.sourceHealth.set(source, {\n        status: 'unknown',\n        successRate: 1.0,\n        avgResponseTime: 0,\n        lastError: null,\n        requestCount: 0,\n        errorCount: 0,\n        lastHealthCheck: null\n      });\n    });\n  }\n\n  /**\n   * DEPRECATED: API keys are now handled by secure backend\n   * @param {string} source - Data source name\n   * @returns {boolean}\n   */\n  hasValidApiKey(source) {\n    // Always return true as backend handles authentication\n    return true;\n  }\n\n  /**\n   * All requests now route through secure backend proxy\n   * @param {string} dataType - Type of data needed\n   * @returns {string} Always returns 'BACKEND_PROXY'\n   */\n  getBestSource(dataType) {\n    return 'BACKEND_PROXY';\n  }\n\n  /**\n   * Check if source requires API key\n   * @param {string} source - Data source name\n   * @returns {boolean}\n   */\n  requiresApiKey(source) {\n    return ['ALPHA_VANTAGE', 'FMP', 'QUANDL', 'FRED'].includes(source);\n  }\n\n  /**\n   * Fetch real-time market data via secure backend proxy\n   * @param {string} symbol - Stock symbol\n   * @param {Object} options - Additional options\n   * @returns {Promise<Object>} Market data\n   */\n  async fetchRealTimeMarketData(symbol, options = {}) {\n    const t0 = Date.now();\n    try {\n      const data = await this.client.getQuote(symbol);\n      this.updateSourceHealth('BACKEND_PROXY', true, Date.now() - t0);\n      return data;\n    } catch (error) {\n      this.updateSourceHealth('BACKEND_PROXY', false, Date.now() - t0, error);\n      apiLogger.log('ERROR', 'Failed to fetch real-time market data', { symbol, error: error.message });\n      throw error;\n    }\n  }\n\n  /**\n   * Fetch historical market data (backend-first with fallbacks)\n   * @param {string} symbol\n   * @param {{range?: string, interval?: string}} options\n   * @returns {Promise<Object>}\n   */\n  async fetchHistoricalMarketData(symbol, options = {}) {\n    const range = options.range || '1mo';\n    const interval = options.interval || '1d';\n    const qs = new URLSearchParams({ range, interval }).toString();\n    // Try backend proxy first\n    const t0 = Date.now();\n    try {\n      const backendData = await this.request(`/market-data/historical/${symbol.toUpperCase()}?${qs}`);\n      const result = {\n        ...(typeof backendData === 'object' ? backendData : { data: backendData }),\n        symbol: backendData?.symbol || symbol.toUpperCase(),\n        range,\n        interval,\n        source: (backendData?.source || 'backend_proxy').toUpperCase()\n      };\n      this.updateSourceHealth('BACKEND_PROXY', true, Date.now() - t0);\n      return result;\n    } catch (backendError) {\n      this.updateSourceHealth('BACKEND_PROXY', false, Date.now() - t0, backendError);\n      apiLogger.log('WARN', 'Backend historical data failed, falling back to direct sources', { error: backendError.message });\n    }\n    // Fallback to Yahoo Finance\n    try {\n      const yf = await this.fetchFromYahooFinance(symbol, { range, interval });\n      const timestamps = yf.timestamp || [];\n      const quote = yf.indicators?.quote?.[0] || {};\n      const data = timestamps.map((t, i) => ({\n        timestamp: new Date(t * 1000).toISOString(),\n        open: quote.open?.[i] ?? null,\n        high: quote.high?.[i] ?? null,\n        low: quote.low?.[i] ?? null,\n        close: quote.close?.[i] ?? null,\n        volume: quote.volume?.[i] ?? null\n      }));\n      return {\n        symbol: yf.meta?.symbol || symbol.toUpperCase(),\n        range,\n        interval,\n        data,\n        meta: yf.meta,\n        source: 'YAHOO_FINANCE'\n      };\n    } catch (yahooError) {\n      this.updateSourceHealth('YAHOO_FINANCE', false, Date.now(), yahooError);\n      apiLogger.log('WARN', 'Yahoo Finance historical fallback failed, trying Alpha Vantage', { error: yahooError.message });\n    }\n    // Fallback to Alpha Vantage (daily adjusted)\n    try {\n      const av = await this.fetchFromAlphaVantage(symbol, 'TIME_SERIES_DAILY_ADJUSTED', options);\n      const series = av['Time Series (Daily)'] || av['Time Series (Daily)'.toLowerCase()];\n      if (!series) throw new Error('Alpha Vantage daily series missing');\n      const data = Object.entries(series)\n        .map(([date, values]) => ({\n          timestamp: new Date(date).toISOString(),\n          open: parseFloat(values['1. open']),\n          high: parseFloat(values['2. high']),\n          low: parseFloat(values['3. low']),\n          close: parseFloat(values['4. close']),\n          volume: parseInt(values['6. volume'])\n        }))\n        .sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      return {\n        symbol: symbol.toUpperCase(),\n        range,\n        interval: '1d',\n        data,\n        source: 'ALPHA_VANTAGE'\n      };\n    } catch (alphaError) {\n      this.updateSourceHealth('ALPHA_VANTAGE', false, Date.now(), alphaError);\n      throw alphaError;\n    }\n  }\n\n  /**\n   * Fetch intraday market data (backend-first with fallbacks)\n   * @param {string} symbol\n   * @param {{interval?: string}} options\n   * @returns {Promise<Object>}\n   */\n  async fetchIntradayMarketData(symbol, options = {}) {\n    const interval = options.interval || '5min';\n    const qs = new URLSearchParams({ interval }).toString();\n    // Try backend proxy first\n    const t0 = Date.now();\n    try {\n      const backendData = await this.request(`/market-data/intraday/${symbol.toUpperCase()}?${qs}`);\n      const result = {\n        ...(typeof backendData === 'object' ? backendData : { data: backendData }),\n        symbol: backendData?.symbol || symbol.toUpperCase(),\n        interval,\n        source: (backendData?.source || 'backend_proxy').toUpperCase()\n      };\n      this.updateSourceHealth('BACKEND_PROXY', true, Date.now() - t0);\n      return result;\n    } catch (backendError) {\n      this.updateSourceHealth('BACKEND_PROXY', false, Date.now() - t0, backendError);\n      apiLogger.log('WARN', 'Backend intraday data failed, falling back to direct sources', { error: backendError.message });\n    }\n    // Fallback to Yahoo Finance (use 1d range)\n    try {\n      const range = '1d';\n      const yf = await this.fetchFromYahooFinance(symbol, { range, interval: interval.replace('min', 'm') });\n      const timestamps = yf.timestamp || [];\n      const quote = yf.indicators?.quote?.[0] || {};\n      const data = timestamps.map((t, i) => ({\n        timestamp: new Date(t * 1000).toISOString(),\n        open: quote.open?.[i] ?? null,\n        high: quote.high?.[i] ?? null,\n        low: quote.low?.[i] ?? null,\n        close: quote.close?.[i] ?? null,\n        volume: quote.volume?.[i] ?? null\n      }));\n      return {\n        symbol: yf.meta?.symbol || symbol.toUpperCase(),\n        range,\n        interval,\n        data,\n        meta: yf.meta,\n        source: 'YAHOO_FINANCE'\n      };\n    } catch (yahooError) {\n      this.updateSourceHealth('YAHOO_FINANCE', false, Date.now(), yahooError);\n      apiLogger.log('WARN', 'Yahoo Finance intraday fallback failed, trying Alpha Vantage', { error: yahooError.message });\n    }\n    // Fallback to Alpha Vantage intraday\n    try {\n      const av = await this.fetchFromAlphaVantage(symbol, 'TIME_SERIES_INTRADAY', { params: { interval } });\n      const seriesKey = Object.keys(av).find(k => k.startsWith('Time Series'));\n      const series = av[seriesKey];\n      if (!series) throw new Error('Alpha Vantage intraday series missing');\n      const data = Object.entries(series)\n        .map(([ts, values]) => ({\n          timestamp: new Date(ts).toISOString(),\n          open: parseFloat(values['1. open']),\n          high: parseFloat(values['2. high']),\n          low: parseFloat(values['3. low']),\n          close: parseFloat(values['4. close']),\n          volume: parseInt(values['5. volume'])\n        }))\n        .sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      return {\n        symbol: symbol.toUpperCase(),\n        interval,\n        data,\n        source: 'ALPHA_VANTAGE'\n      };\n    } catch (alphaError) {\n      this.updateSourceHealth('ALPHA_VANTAGE', false, Date.now(), alphaError);\n      throw alphaError;\n    }\n  }\n\n  /**\n   * Fetch from Yahoo Finance API\n   * @param {string} symbol - Stock symbol\n   * @param {Object} options - Request options\n   * @returns {Promise<Object>} Raw data from Yahoo Finance\n   */\n  async fetchFromYahooFinance(symbol, options = {}) {\n    const url = `/v8/finance/chart/${symbol}`;\n\n    const params = {\n      range: options.range || '1d',\n      interval: options.interval || '1m',\n      includePrePost: true,\n      events: 'div,splits'\n    };\n\n    const fullUrl = new URL(url, 'http://localhost:3000');\n    fullUrl.search = new URLSearchParams(params).toString();\n\n    const response = await fetch(fullUrl.pathname + fullUrl.search, {\n      signal: AbortSignal.timeout(10000),\n      headers: {\n        'User-Agent': 'FinanceAnalyst-Pro/1.0'\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Yahoo Finance API request failed with status ${response.status}`);\n    }\n\n    const responseData = await response.json();\n\n    if (!responseData?.chart?.result?.[0]) {\n      throw new Error(`No data found for symbol: ${symbol}`);\n    }\n\n    return responseData.chart.result[0];\n  }\n\n  /**\n   * Fetch from Alpha Vantage API\n   * @param {string} symbol - Stock symbol\n   * @param {string} function_name - Alpha Vantage function\n   * @param {Object} options - Request options\n   * @returns {Promise<Object>} Raw data from Alpha Vantage\n   */\n  async fetchFromAlphaVantage(symbol, function_name, options = {}) {\n    if (!this.hasValidApiKey('ALPHA_VANTAGE')) {\n      throw new Error('Alpha Vantage API key not available');\n    }\n\n    const config = API_CONFIG.ALPHA_VANTAGE;\n\n    const params = {\n      function: function_name,\n      symbol,\n      apikey: this.apiKeys.ALPHA_VANTAGE,\n      ...options.params\n    };\n\n    const fullUrl = new URL(config.baseURL);\n    fullUrl.search = new URLSearchParams(params).toString();\n\n    const response = await fetch(fullUrl, {\n      signal: AbortSignal.timeout(15000)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Alpha Vantage API request failed with status ${response.status}`);\n    }\n\n    const responseData = await response.json();\n\n    // Check for API errors\n    if (responseData['Error Message']) {\n      throw new Error(`Alpha Vantage error: ${responseData['Error Message']}`);\n    }\n\n    if (responseData['Note']) {\n      throw new Error(`Alpha Vantage rate limit: ${responseData['Note']}`);\n    }\n\n    return responseData;\n  }\n\n  /**\n   * Fetch comprehensive financial data via secure backend proxy\n   * @param {string} symbol - Stock symbol\n   * @returns {Promise<Object>} Comprehensive financial data\n   */\n  async fetchComprehensiveData(symbol) {\n    const results = {};\n    const errors = {};\n\n    // Fetch multiple data types in parallel via secure client\n    const dataTypes = [\n      { key: 'marketData', method: 'getQuote' },\n      { key: 'profile', method: 'getCompanyProfile' },\n      { key: 'financials', method: 'getIncomeStatement' },\n      { key: 'peers', method: 'getPeerCompanies' }\n    ];\n\n    const promises = dataTypes.map(async({ key, method }) => {\n      try {\n        results[key] = await this.client[method](symbol);\n      } catch (error) {\n        errors[key] = error.message;\n        apiLogger.log('ERROR', `Failed to fetch ${key} for ${symbol}`, { error: error.message });\n      }\n    });\n\n    await Promise.allSettled(promises);\n\n    return {\n      symbol,\n      timestamp: new Date().toISOString(),\n      data: results,\n      errors: Object.keys(errors).length > 0 ? errors : null,\n      sources: ['BACKEND_PROXY']\n    };\n  }\n\n  /**\n   * Normalize market data from different sources\n   * @param {Object} rawData - Raw data from API\n   * @param {string} source - Data source\n   * @returns {Object} Normalized market data\n   */\n  normalizeMarketData(rawData, source) {\n    switch (source) {\n      case 'YAHOO_FINANCE':\n        return this.normalizeYahooData(rawData);\n      case 'ALPHA_VANTAGE':\n        return this.normalizeAlphaVantageData(rawData);\n      default:\n        return rawData;\n    }\n  }\n\n  /**\n   * Normalize Yahoo Finance data\n   * @param {Object} data - Raw Yahoo Finance data\n   * @returns {Object} Normalized data\n   */\n  normalizeYahooData(data) {\n    const meta = data.meta;\n    const quote = data.indicators?.quote?.[0];\n    const latest = quote ? {\n      open: quote.open[quote.open.length - 1],\n      high: quote.high[quote.high.length - 1],\n      low: quote.low[quote.low.length - 1],\n      close: quote.close[quote.close.length - 1],\n      volume: quote.volume[quote.volume.length - 1]\n    } : {};\n\n    return {\n      symbol: meta.symbol,\n      currentPrice: meta.regularMarketPrice || latest.close,\n      previousClose: meta.previousClose,\n      change: meta.regularMarketPrice - meta.previousClose,\n      changePercent: ((meta.regularMarketPrice - meta.previousClose) / meta.previousClose) * 100,\n      dayHigh: meta.regularMarketDayHigh || latest.high,\n      dayLow: meta.regularMarketDayLow || latest.low,\n      volume: meta.regularMarketVolume || latest.volume,\n      marketCap: meta.marketCap,\n      currency: meta.currency,\n      exchangeName: meta.exchangeName,\n      timestamp: new Date(meta.regularMarketTime * 1000).toISOString(),\n      source: 'YAHOO_FINANCE'\n    };\n  }\n\n  /**\n   * Normalize Alpha Vantage data\n   * @param {Object} data - Raw Alpha Vantage data\n   * @returns {Object} Normalized data\n   */\n  normalizeAlphaVantageData(data) {\n    const globalQuote = data['Global Quote'];\n    if (!globalQuote) {\n      throw new Error('Invalid Alpha Vantage response format');\n    }\n\n    return {\n      symbol: globalQuote['01. symbol'],\n      currentPrice: parseFloat(globalQuote['05. price']),\n      previousClose: parseFloat(globalQuote['08. previous close']),\n      change: parseFloat(globalQuote['09. change']),\n      changePercent: parseFloat(globalQuote['10. change percent'].replace('%', '')),\n      dayHigh: parseFloat(globalQuote['03. high']),\n      dayLow: parseFloat(globalQuote['04. low']),\n      volume: parseInt(globalQuote['06. volume']),\n      timestamp: globalQuote['07. latest trading day'],\n      source: 'ALPHA_VANTAGE'\n    };\n  }\n\n  /**\n   * Update source health metrics\n   * @param {string} source - Data source\n   * @param {boolean} success - Whether request was successful\n   * @param {number} responseTime - Response time in ms\n   * @param {Error} error - Error object if failed\n   */\n  updateSourceHealth(source, success, responseTime, error = null) {\n    const health = this.sourceHealth.get(source);\n    if (!health) return;\n\n    health.requestCount++;\n    if (!success) {\n      health.errorCount++;\n      health.lastError = error?.message || 'Unknown error';\n      health.status = 'error';\n    } else {\n      health.status = 'healthy';\n      health.lastError = null;\n    }\n\n    health.successRate = (health.requestCount - health.errorCount) / health.requestCount;\n    health.avgResponseTime = (health.avgResponseTime + responseTime) / 2;\n    health.lastHealthCheck = new Date().toISOString();\n\n    this.sourceHealth.set(source, health);\n  }\n\n  /**\n   * Get health status for all sources\n   * @returns {Object} Health status map\n   */\n  getSourceHealthStatus() {\n    const status = {};\n    for (const [source, health] of this.sourceHealth.entries()) {\n      status[source] = {\n        ...health,\n        hasValidApiKey: this.hasValidApiKey(source),\n        requiresApiKey: this.requiresApiKey(source)\n      };\n    }\n    return status;\n  }\n\n  /**\n   * Get sources used in a data fetch result\n   * @param {Object} results - Fetch results\n   * @returns {Array} List of sources used\n   */\n  getSourcesUsed(results) {\n    const sources = new Set();\n    Object.values(results).forEach(data => {\n      if (data?.source) {\n        sources.add(data.source);\n      }\n    });\n    return Array.from(sources);\n  }\n\n  // Additional API methods expected by tests\n\n  /**\n   * Configuration properties\n   */\n  baseUrl = import.meta.env.VITE_API_BASE_URL || 'http://localhost:3001/api';\n  defaultHeaders = {};\n  timeout = 10000;\n  authToken = null;\n  cacheTTL = 300000; // 5 minutes\n  requestInterceptors = [];\n  responseInterceptors = [];\n  metrics = {\n    totalRequests: 0,\n    successfulRequests: 0,\n    failedRequests: 0,\n    avgResponseTime: 0\n  };\n\n  /**\n   * Make a generic API request\n   * @param {string} url - Request URL\n   * @param {Object} options - Request options\n   * @returns {Promise<Object>} Response data\n   */\n  async request(url, options = {}) {\n    const startTime = Date.now();\n    this.metrics.totalRequests++;\n\n    const limiter = this.rateLimiters.get('default');\n    await limiter.acquire();\n\n    const fullUrl = url.startsWith('http') ? url : `${this.baseUrl}${url}`;\n\n    const cacheKey = fullUrl;\n    if (this.cache.has(cacheKey)) {\n      const cached = this.cache.get(cacheKey);\n      if (Date.now() - cached.timestamp < this.cacheTTL) {\n        this.metrics.successfulRequests++;\n        return cached.data;\n      }\n    }\n\n    try {\n      let config = {\n        method: 'GET',\n        headers: { ...this.defaultHeaders },\n        ...options\n      };\n\n      if (this.authToken) {\n        config.headers.Authorization = `Bearer ${this.authToken}`;\n      }\n\n      for (const interceptor of this.requestInterceptors) {\n        config = await interceptor(config);\n      }\n\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), this.timeout);\n      config.signal = controller.signal;\n\n      const response = await fetch(fullUrl, config);\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorData = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, body: ${errorData}`);\n      }\n\n      this.rateLimitInfo.remaining = parseInt(response.headers.get('X-RateLimit-Remaining'), 10);\n      this.rateLimitInfo.reset = parseInt(response.headers.get('X-RateLimit-Reset'), 10);\n\n      let responseData = await response.json();\n\n      for (const interceptor of this.responseInterceptors) {\n        responseData = await interceptor(responseData, response);\n      }\n\n      this.cache.set(cacheKey, { data: responseData, timestamp: Date.now() });\n\n      const responseTime = Date.now() - startTime;\n      this.metrics.successfulRequests++;\n      this.metrics.avgResponseTime = (this.metrics.avgResponseTime + responseTime) / 2;\n\n      return responseData;\n    } catch (error) {\n      this.metrics.failedRequests++;\n      throw error;\n    }\n  }\n\n  /**\n   * Set authentication token\n   * @param {string} token - Auth token\n   */\n  setAuthToken(token) {\n    this.authToken = token;\n  }\n\n  /**\n   * Set cache TTL\n   * @param {number} ttl - Time to live in milliseconds\n   */\n  setCacheTTL(ttl) {\n    this.cacheTTL = ttl;\n  }\n\n  /**\n   * Batch multiple requests\n   * @param {Array} requests - Array of request configs or URLs\n   * @returns {Promise<Array>} Array of responses\n   */\n  async batchRequests(requests) {\n    const promises = requests.map(req => {\n      if (typeof req === 'string') {\n        return this.request(req);\n      }\n      return this.request(req.url, req.options);\n    });\n\n    const results = await Promise.allSettled(promises);\n\n    return results.map(result => {\n      if (result.status === 'fulfilled') {\n        return result.value;\n      }\n      return result.reason;\n    });\n  }\n\n  /**\n   * Add request interceptor\n   * @param {Function} interceptor - Interceptor function\n   */\n  addRequestInterceptor(interceptor) {\n    this.requestInterceptors.push(interceptor);\n  }\n\n  /**\n   * Add response interceptor\n   * @param {Function} interceptor - Interceptor function\n   */\n  addResponseInterceptor(interceptor) {\n    this.responseInterceptors.push(interceptor);\n  }\n\n  /**\n   * Make request with retry logic\n   * @param {string} url - Request URL\n   * @param {Object} options - Request options\n   * @param {number} retries - Number of retries\n   * @returns {Promise<Object>} Response data\n   */\n  async requestWithRetry(url, options = {}, retries = 3) {\n    let lastError;\n\n    for (let i = 0; i <= retries; i++) {\n      try {\n        return await this.request(url, options);\n      } catch (error) {\n        lastError = error;\n        if (i < retries) {\n          const delay = Math.pow(2, i) * 100; // Exponential backoff\n          await new Promise(resolve => setTimeout(resolve, delay));\n        }\n      }\n    }\n\n    throw lastError;\n  }\n\n  /**\n   * Set base URL\n   * @param {string} url - Base URL\n   */\n  setBaseUrl(url) {\n    this.baseUrl = url;\n  }\n\n  /**\n   * Get base URL\n   * @returns {string} Base URL\n   */\n  getBaseUrl() {\n    return this.baseUrl;\n  }\n\n  /**\n   * Set default headers\n   * @param {Object} headers - Default headers\n   */\n  setDefaultHeaders(headers) {\n    this.defaultHeaders = { ...headers };\n  }\n\n  /**\n   * Get default headers\n   * @returns {Object} Default headers\n   */\n  getDefaultHeaders() {\n    return { ...this.defaultHeaders };\n  }\n\n  /**\n   * Set timeout\n   * @param {number} timeout - Timeout in milliseconds\n   */\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Get timeout\n   * @returns {number} Timeout in milliseconds\n   */\n  getTimeout() {\n    return this.timeout;\n  }\n\n  /**\n   * Get metrics\n   * @returns {Object} Request metrics\n   */\n  getMetrics() {\n    return { ...this.metrics };\n  }\n\n  /**\n   * Reset metrics\n   */\n  resetMetrics() {\n    this.metrics = {\n      totalRequests: 0,\n      successfulRequests: 0,\n      failedRequests: 0,\n      avgResponseTime: 0\n    };\n  }\n\n  getRateLimitInfo() {\n    return this.rateLimitInfo;\n  }\n\n  clearCache() {\n    this.cache.clear();\n  }\n}\n\n// Export singleton instance\nexport const enhancedApiService = new EnhancedApiService();\nexport default EnhancedApiService;\n","import { CheckCircle, XCircle, AlertTriangle, Key, Wifi } from 'lucide-react';\nimport React from 'react';\n\nimport { Alert, AlertDescription } from '../../../components/ui/Alert';\nimport { Badge } from '../../../components/ui/Badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../components/ui/Card';\nimport { Progress } from '../../../components/ui/Progress';\n\nconst ApiStatusPanel = ({\n  apiHealthStatus = {},\n  realDataEnabled = false,\n  dataSources = [],\n  dataQuality = {}\n}) => {\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'healthy':\n      case 'connected':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 'error':\n      case 'disconnected':\n        return <XCircle className=\"h-4 w-4 text-red-500\" />;\n      case 'warning':\n        return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\n      default:\n        return <AlertTriangle className=\"h-4 w-4 text-gray-400\" />;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'healthy':\n      case 'connected':\n        return 'bg-green-100 text-green-800';\n      case 'error':\n      case 'disconnected':\n        return 'bg-red-100 text-red-800';\n      case 'warning':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const connectedSources = dataSources.filter(source => source.status === 'connected').length;\n  const totalSources = dataSources.length;\n  const connectionPercentage = totalSources > 0 ? (connectedSources / totalSources) * 100 : 0;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Wifi className=\"h-5 w-5\" />\n          API Status & Data Quality\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Overall Status */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            {getStatusIcon(realDataEnabled ? 'connected' : 'disconnected')}\n            <span className=\"font-medium\">\n              Real Data: {realDataEnabled ? 'Enabled' : 'Disabled'}\n            </span>\n          </div>\n          <Badge className={getStatusColor(realDataEnabled ? 'connected' : 'disconnected')}>\n            {realDataEnabled ? 'Live' : 'Demo Mode'}\n          </Badge>\n        </div>\n\n        {/* Connection Health */}\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center justify-between text-sm\">\n            <span>Connection Health</span>\n            <span>{connectedSources}/{totalSources} sources</span>\n          </div>\n          <Progress value={connectionPercentage} className=\"h-2\" />\n        </div>\n\n        {/* Data Sources Status */}\n        <div className=\"space-y-2\">\n          <h4 className=\"text-sm font-medium\">Data Sources</h4>\n          <div className=\"space-y-2\">\n            {dataSources.map((source) => (\n              <div key={source.id} className=\"flex items-center justify-between text-sm\">\n                <div className=\"flex items-center gap-2\">\n                  {getStatusIcon(source.status)}\n                  <span>{source.name}</span>\n                  {source.requiresKey && (\n                    <Key className=\"h-3 w-3 text-gray-400\" title=\"Requires API Key\" />\n                  )}\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Badge\n                    variant=\"outline\"\n                    className={`text-xs ${getStatusColor(source.status)}`}\n                  >\n                    {source.status}\n                  </Badge>\n                  {source.status === 'connected' && (\n                    <span className=\"text-xs text-gray-500\">{source.latency}ms</span>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* API Health Details */}\n        {Object.keys(apiHealthStatus).length > 0 && (\n          <div className=\"space-y-2\">\n            <h4 className=\"text-sm font-medium\">API Health Details</h4>\n            <div className=\"space-y-1 text-xs\">\n              {Object.entries(apiHealthStatus).map(([source, health]) => (\n                <div key={source} className=\"flex items-center justify-between\">\n                  <span className=\"capitalize\">{source.toLowerCase().replace('_', ' ')}</span>\n                  <div className=\"flex items-center gap-2\">\n                    <span>Success: {(health.successRate * 100).toFixed(1)}%</span>\n                    <span>Avg: {health.avgResponseTime.toFixed(0)}ms</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Data Quality Metrics */}\n        {Object.keys(dataQuality).length > 0 && (\n          <div className=\"space-y-2\">\n            <h4 className=\"text-sm font-medium\">Data Quality</h4>\n            <div className=\"space-y-1\">\n              {Object.entries(dataQuality).map(([symbol, quality]) => (\n                <div key={symbol} className=\"flex items-center justify-between text-sm\">\n                  <span>{symbol}</span>\n                  <div className=\"flex items-center gap-2\">\n                    <Progress value={quality} className=\"h-1 w-16\" />\n                    <span className=\"text-xs\">{quality}%</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Alerts */}\n        {!realDataEnabled && (\n          <Alert>\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription className=\"text-sm\">\n              Running in demo mode. Add API keys to enable real-time data.\n              <br />\n              <span className=\"text-xs text-gray-600\">\n                Set VITE_ALPHA_VANTAGE_API_KEY or VITE_FMP_API_KEY in your .env file\n              </span>\n            </AlertDescription>\n          </Alert>\n        )}\n\n        {realDataEnabled && connectedSources < totalSources && (\n          <Alert>\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription className=\"text-sm\">\n              Some data sources are unavailable. Check your API keys and network connection.\n            </AlertDescription>\n          </Alert>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ApiStatusPanel;\n","import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\nimport Input from '../../../components/ui/Input';\n\nconst BulkOperationsPanel = ({ selectedSymbols, onBulkExport, onBulkAlert, onBulkHistorical }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [exportFormat, setExportFormat] = useState('csv');\n  const [alertThreshold, setAlertThreshold] = useState('');\n  const [historicalPeriod, setHistoricalPeriod] = useState('1y');\n\n  const handleBulkExport = () => {\n    onBulkExport({\n      symbols: selectedSymbols,\n      format: exportFormat,\n      timestamp: new Date().toISOString()\n    });\n  };\n\n  const handleBulkAlert = () => {\n    if (!alertThreshold) return;\n    onBulkAlert({\n      symbols: selectedSymbols,\n      threshold: parseFloat(alertThreshold),\n      type: 'price_change'\n    });\n    setAlertThreshold('');\n  };\n\n  const handleBulkHistorical = () => {\n    onBulkHistorical({\n      symbols: selectedSymbols,\n      period: historicalPeriod\n    });\n  };\n\n  if (selectedSymbols.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"bg-card border border-border rounded-lg shadow-elevation-1\">\n      {/* Header */}\n      <div\n        className=\"flex items-center justify-between p-4 cursor-pointer\"\n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-8 h-8 bg-primary rounded-lg flex items-center justify-center\">\n            <Icon name=\"Layers\" size={16} color=\"white\" />\n          </div>\n          <div>\n            <h3 className=\"font-semibold text-foreground\">Bulk Operations</h3>\n            <p className=\"text-sm text-muted-foreground\">\n              {selectedSymbols.length} symbol{selectedSymbols.length !== 1 ? 's' : ''} selected\n            </p>\n          </div>\n        </div>\n        <Icon\n          name={isExpanded ? 'ChevronUp' : 'ChevronDown'}\n          size={20}\n          className=\"text-muted-foreground\"\n        />\n      </div>\n\n      {/* Expanded Content */}\n      {isExpanded && (\n        <div className=\"border-t border-border\">\n          {/* Selected Symbols */}\n          <div className=\"p-4 border-b border-border\">\n            <h4 className=\"text-sm font-medium text-foreground mb-2\">Selected Symbols:</h4>\n            <div className=\"flex flex-wrap gap-2\">\n              {selectedSymbols.slice(0, 10).map(symbol => (\n                <span\n                  key={symbol}\n                  className=\"px-2 py-1 bg-muted text-muted-foreground text-xs rounded\"\n                >\n                  {symbol}\n                </span>\n              ))}\n              {selectedSymbols.length > 10 && (\n                <span className=\"px-2 py-1 bg-muted text-muted-foreground text-xs rounded\">\n                  +{selectedSymbols.length - 10} more\n                </span>\n              )}\n            </div>\n          </div>\n\n          {/* Operations */}\n          <div className=\"p-4 space-y-4\">\n            {/* Export Operation */}\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-foreground\">Data Export</h4>\n              <div className=\"flex items-center space-x-2\">\n                <select\n                  value={exportFormat}\n                  onChange={e => setExportFormat(e.target.value)}\n                  className=\"px-3 py-2 border border-border rounded-lg text-sm bg-input text-foreground\"\n                >\n                  <option value=\"csv\">CSV Format</option>\n                  <option value=\"xlsx\">Excel Format</option>\n                  <option value=\"json\">JSON Format</option>\n                  <option value=\"pdf\">PDF Report</option>\n                </select>\n                <Button\n                  variant=\"outline\" size=\"sm\" iconName=\"Download\"\n                  onClick={handleBulkExport}\n                >\n                  Export Data\n                </Button>\n              </div>\n            </div>\n\n            {/* Alert Setup */}\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-foreground\">Price Alerts</h4>\n              <div className=\"flex items-center space-x-2\">\n                <Input\n                  type=\"number\"\n                  placeholder=\"Threshold %\"\n                  value={alertThreshold}\n                  onChange={e => setAlertThreshold(e.target.value)}\n                  className=\"flex-1\"\n                />\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  iconName=\"Bell\"\n                  onClick={handleBulkAlert}\n                  disabled={!alertThreshold}\n                >\n                  Set Alerts\n                </Button>\n              </div>\n            </div>\n\n            {/* Historical Data */}\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-foreground\">Historical Data</h4>\n              <div className=\"flex items-center space-x-2\">\n                <select\n                  value={historicalPeriod}\n                  onChange={e => setHistoricalPeriod(e.target.value)}\n                  className=\"px-3 py-2 border border-border rounded-lg text-sm bg-input text-foreground\"\n                >\n                  <option value=\"1d\">1 Day</option>\n                  <option value=\"1w\">1 Week</option>\n                  <option value=\"1m\">1 Month</option>\n                  <option value=\"3m\">3 Months</option>\n                  <option value=\"6m\">6 Months</option>\n                  <option value=\"1y\">1 Year</option>\n                  <option value=\"5y\">5 Years</option>\n                </select>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  iconName=\"BarChart3\"\n                  onClick={handleBulkHistorical}\n                >\n                  Get Historical\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* Quick Stats */}\n          <div className=\"p-4 border-t border-border bg-muted/30\">\n            <div className=\"grid grid-cols-3 gap-4 text-center\">\n              <div>\n                <div className=\"text-lg font-semibold text-foreground\">\n                  {selectedSymbols.length}\n                </div>\n                <div className=\"text-xs text-muted-foreground\">Symbols</div>\n              </div>\n              <div>\n                <div className=\"text-lg font-semibold text-foreground\">\n                  {Math.min(selectedSymbols.length * 50, 1000)}\n                </div>\n                <div className=\"text-xs text-muted-foreground\">Data Points</div>\n              </div>\n              <div>\n                <div className=\"text-lg font-semibold text-foreground\">\n                  ~{Math.ceil(selectedSymbols.length / 10)}s\n                </div>\n                <div className=\"text-xs text-muted-foreground\">Est. Time</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BulkOperationsPanel;\n","\nimport Icon from '../../../components/AppIcon';\n\nconst ConnectionStatus = ({ connectionHealth, lastUpdate }) => {\n  const getStatusColor = status => {\n    switch (status) {\n      case 'excellent':\n        return 'text-success';\n      case 'good':\n        return 'text-primary';\n      case 'warning':\n        return 'text-warning';\n      case 'error':\n        return 'text-error';\n      default:\n        return 'text-muted-foreground';\n    }\n  };\n\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'excellent':\n        return 'Wifi';\n      case 'good':\n        return 'Wifi';\n      case 'warning':\n        return 'WifiOff';\n      case 'error':\n        return 'AlertTriangle';\n      default:\n        return 'Wifi';\n    }\n  };\n\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <div className=\"flex items-center space-x-2\">\n        <Icon\n          name={getStatusIcon(connectionHealth.overall)}\n          size={16}\n          className={getStatusColor(connectionHealth.overall)}\n        />\n        <span className=\"text-sm font-medium text-foreground\">\n          Connection: {connectionHealth.overall}\n        </span>\n      </div>\n\n      <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n        <Icon name=\"Clock\" size={14} />\n        <span>Last update: {lastUpdate}</span>\n      </div>\n\n      <div className=\"flex items-center space-x-1\">\n        {Object.entries(connectionHealth.sources).map(([source, status]) => (\n          <div\n            key={source}\n            className={`w-3 h-3 rounded-full ${\n              status === 'connected'\n                ? 'bg-success'\n                : status === 'warning'\n                  ? 'bg-warning'\n                  : 'bg-error'\n            }`}\n            title={`${source}: ${status}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectionStatus;\n","\nconst DataSourceToggle = ({ dataSources, onToggle }) => {\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <span className=\"text-sm font-medium text-foreground\">Data Sources:</span>\n      <div className=\"flex items-center space-x-2\">\n        {dataSources.map(source => (\n          <button\n            key={source.id}\n            onClick={() => onToggle(source.id)}\n            className={`\n              flex items-center space-x-2 px-3 py-2 rounded-lg text-sm font-medium transition-smooth\n              ${\n          source.enabled\n            ? 'bg-primary text-primary-foreground'\n            : 'bg-muted text-muted-foreground hover:bg-muted/80'\n          }\n            `}\n          >\n            <div\n              className={`w-2 h-2 rounded-full ${\n                source.status === 'connected'\n                  ? 'bg-success'\n                  : source.status === 'warning'\n                    ? 'bg-warning'\n                    : 'bg-error'\n              }`}\n            />\n            <span>{source.name}</span>\n            <span className=\"text-xs opacity-75\">{source.latency}ms</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DataSourceToggle;\n","\nimport Icon from '../../../components/AppIcon';\n\nconst MarketDataWidget = ({ widget, onResize, onRemove }) => {\n  const getChangeColor = change => {\n    if (change > 0) return 'text-success';\n    if (change < 0) return 'text-error';\n    return 'text-muted-foreground';\n  };\n\n  const getChangeIcon = change => {\n    if (change > 0) return 'TrendingUp';\n    if (change < 0) return 'TrendingDown';\n    return 'Minus';\n  };\n\n  const formatValue = (value, type) => {\n    switch (type) {\n      case 'currency':\n        return `$${value.toLocaleString('en-US', { minimumFractionDigits: 2 })}`;\n      case 'percentage':\n        return `${value.toFixed(2)}%`;\n      case 'number':\n        return value.toLocaleString('en-US', { minimumFractionDigits: 2 });\n      default:\n        return value;\n    }\n  };\n\n  const getFreshnessColor = timestamp => {\n    const now = new Date();\n    const updateTime = new Date(timestamp);\n    const diffSeconds = (now - updateTime) / 1000;\n\n    if (diffSeconds < 5) return 'bg-success';\n    if (diffSeconds < 30) return 'bg-warning';\n    return 'bg-error';\n  };\n\n  return (\n    <div className=\"bg-card border border-border rounded-lg p-4 shadow-elevation-1 hover:shadow-elevation-2 transition-smooth\">\n      {/* Widget Header */}\n      <div className=\"flex items-center justify-between mb-3\">\n        <div className=\"flex items-center space-x-2\">\n          <h3 className=\"font-semibold text-foreground\">{widget.symbol}</h3>\n          <span className=\"text-sm text-muted-foreground\">{widget.name}</span>\n          <div\n            className={`w-2 h-2 rounded-full ${getFreshnessColor(widget.lastUpdate)}`}\n            title={`Last updated: ${new Date(widget.lastUpdate).toLocaleTimeString()}`}\n          />\n        </div>\n        <div className=\"flex items-center space-x-1\">\n          <button\n            onClick={() => onResize(widget.id)}\n            className=\"p-1 text-muted-foreground hover:text-foreground transition-smooth\"\n            title=\"Resize widget\"\n          >\n            <Icon name=\"Maximize2\" size={14} />\n          </button>\n          <button\n            onClick={() => onRemove(widget.id)}\n            className=\"p-1 text-muted-foreground hover:text-error transition-smooth\"\n            title=\"Remove widget\"\n          >\n            <Icon name=\"X\" size={14} />\n          </button>\n        </div>\n      </div>\n\n      {/* Current Value */}\n      <div className=\"mb-3\">\n        <div className=\"text-2xl font-bold text-foreground\">\n          {formatValue(widget.currentValue, widget.valueType)}\n        </div>\n        <div className={`flex items-center space-x-1 text-sm ${getChangeColor(widget.change)}`}>\n          <Icon name={getChangeIcon(widget.change)} size={14} />\n          <span>{formatValue(Math.abs(widget.change), widget.valueType)}</span>\n          <span>\n            ({widget.changePercent > 0 ? '+' : ''}\n            {widget.changePercent.toFixed(2)}%)\n          </span>\n        </div>\n      </div>\n\n      {/* Sparkline Chart */}\n      <div className=\"mb-3\">\n        <div className=\"h-16 bg-muted rounded flex items-end space-x-1 p-2\">\n          {widget.sparklineData.map((point, index) => (\n            <div\n              key={index}\n              className={`flex-1 rounded-sm ${\n                point > widget.sparklineData[0] ? 'bg-success' : 'bg-error'\n              }`}\n              style={{\n                height: `${(point / Math.max(...widget.sparklineData)) * 100}%`,\n                minHeight: '2px'\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Additional Metrics */}\n      <div className=\"grid grid-cols-2 gap-2 text-xs\">\n        <div>\n          <span className=\"text-muted-foreground\">High:</span>\n          <span className=\"ml-1 font-medium text-foreground\">\n            {formatValue(widget.dayHigh, widget.valueType)}\n          </span>\n        </div>\n        <div>\n          <span className=\"text-muted-foreground\">Low:</span>\n          <span className=\"ml-1 font-medium text-foreground\">\n            {formatValue(widget.dayLow, widget.valueType)}\n          </span>\n        </div>\n        <div>\n          <span className=\"text-muted-foreground\">Volume:</span>\n          <span className=\"ml-1 font-medium text-foreground\">\n            {widget.volume ? widget.volume.toLocaleString() : 'N/A'}\n          </span>\n        </div>\n        <div>\n          <span className=\"text-muted-foreground\">Source:</span>\n          <span className=\"ml-1 font-medium text-foreground\">{widget.source}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MarketDataWidget;\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Input from '../../../components/ui/Input';\n\nconst SymbolSearch = ({ onSymbolSelect, watchlist, onAddToWatchlist }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const searchRef = useRef(null);\n\n  // Mock symbol data\n  const symbolDatabase = [\n    { symbol: 'AAPL', name: 'Apple Inc.', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'MSFT', name: 'Microsoft Corporation', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'GOOGL', name: 'Alphabet Inc.', exchange: 'NASDAQ', sector: 'Technology' },\n    {\n      symbol: 'AMZN',\n      name: 'Amazon.com Inc.',\n      exchange: 'NASDAQ',\n      sector: 'Consumer Discretionary'\n    },\n    { symbol: 'TSLA', name: 'Tesla Inc.', exchange: 'NASDAQ', sector: 'Consumer Discretionary' },\n    { symbol: 'META', name: 'Meta Platforms Inc.', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'NVDA', name: 'NVIDIA Corporation', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'JPM', name: 'JPMorgan Chase & Co.', exchange: 'NYSE', sector: 'Financial Services' },\n    { symbol: 'JNJ', name: 'Johnson & Johnson', exchange: 'NYSE', sector: 'Healthcare' },\n    { symbol: 'V', name: 'Visa Inc.', exchange: 'NYSE', sector: 'Financial Services' }\n  ];\n\n  useEffect(() => {\n    if (searchTerm.length > 0) {\n      const filtered = symbolDatabase\n        .filter(\n          item =>\n            item.symbol.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            item.name.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n        .slice(0, 8);\n      setSuggestions(filtered);\n      setIsOpen(true);\n      setSelectedIndex(-1);\n    } else {\n      setSuggestions([]);\n      setIsOpen(false);\n    }\n  }, [searchTerm]);\n\n  const handleKeyDown = e => {\n    if (!isOpen) return;\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setSelectedIndex(prev => (prev < suggestions.length - 1 ? prev + 1 : prev));\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        setSelectedIndex(prev => (prev > 0 ? prev - 1 : -1));\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (selectedIndex >= 0) {\n          handleSymbolSelect(suggestions[selectedIndex]);\n        }\n        break;\n      case 'Escape':\n        setIsOpen(false);\n        setSelectedIndex(-1);\n        break;\n    }\n  };\n\n  const handleSymbolSelect = symbol => {\n    onSymbolSelect(symbol);\n    setSearchTerm('');\n    setIsOpen(false);\n    setSelectedIndex(-1);\n  };\n\n  const isInWatchlist = symbol => {\n    return watchlist.some(item => item.symbol === symbol);\n  };\n\n  return (\n    <div className=\"relative\" ref={searchRef}>\n      <div className=\"relative\">\n        <Input\n          type=\"text\"\n          placeholder=\"Search symbols (e.g., AAPL, Apple)...\"\n          value={searchTerm}\n          onChange={e => setSearchTerm(e.target.value)}\n          onKeyDown={handleKeyDown}\n          className=\"pl-10 pr-4\"\n        />\n        <Icon\n          name=\"Search\"\n          size={18}\n          className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\"\n        />\n      </div>\n\n      {/* Search Suggestions */}\n      {isOpen && suggestions.length > 0 && (\n        <div className=\"absolute top-full left-0 right-0 mt-1 bg-popover border border-border rounded-lg shadow-elevation-2 z-50 max-h-64 overflow-y-auto\">\n          {suggestions.map((item, index) => (\n            <div\n              key={item.symbol}\n              className={`\n                flex items-center justify-between p-3 cursor-pointer transition-smooth\n                ${index === selectedIndex ? 'bg-muted' : 'hover:bg-muted'}\n              `}\n              onClick={() => handleSymbolSelect(item)}\n            >\n              <div className=\"flex-1\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"font-semibold text-foreground\">{item.symbol}</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded text-muted-foreground\">\n                    {item.exchange}\n                  </span>\n                </div>\n                <div className=\"text-sm text-muted-foreground\">{item.name}</div>\n                <div className=\"text-xs text-muted-foreground\">{item.sector}</div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                {!isInWatchlist(item.symbol) && (\n                  <button\n                    onClick={e => {\n                      e.stopPropagation();\n                      onAddToWatchlist(item);\n                    }}\n                    className=\"p-1 text-muted-foreground hover:text-primary transition-smooth\"\n                    title=\"Add to watchlist\"\n                  >\n                    <Icon name=\"Star\" size={16} />\n                  </button>\n                )}\n                <Icon name=\"Plus\" size={16} className=\"text-muted-foreground\" />\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* No Results */}\n      {isOpen && searchTerm.length > 0 && suggestions.length === 0 && (\n        <div className=\"absolute top-full left-0 right-0 mt-1 bg-popover border border-border rounded-lg shadow-elevation-2 z-50 p-4 text-center\">\n          <div className=\"text-muted-foreground\">\n            <Icon name=\"Search\" size={24} className=\"mx-auto mb-2\" />\n            <p>No symbols found for \"{searchTerm}\"</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SymbolSearch;\n","import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst WatchlistPanel = ({ watchlist, onRemoveFromWatchlist, onSelectSymbol }) => {\n  const [sortBy, setSortBy] = useState('symbol');\n  const [sortOrder, setSortOrder] = useState('asc');\n\n  const sortedWatchlist = [...watchlist].sort((a, b) => {\n    let aValue = a[sortBy];\n    let bValue = b[sortBy];\n\n    if (typeof aValue === 'string') {\n      aValue = aValue.toLowerCase();\n      bValue = bValue.toLowerCase();\n    }\n\n    if (sortOrder === 'asc') {\n      return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n    } else {\n      return aValue > bValue ? -1 : aValue < bValue ? 1 : 0;\n    }\n  });\n\n  const handleSort = field => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('asc');\n    }\n  };\n\n  const getChangeColor = change => {\n    if (change > 0) return 'text-success';\n    if (change < 0) return 'text-error';\n    return 'text-muted-foreground';\n  };\n\n  const formatValue = (value, type) => {\n    switch (type) {\n      case 'currency':\n        return `$${value.toLocaleString('en-US', { minimumFractionDigits: 2 })}`;\n      case 'percentage':\n        return `${value.toFixed(2)}%`;\n      default:\n        return value;\n    }\n  };\n\n  return (\n    <div className=\"bg-card border border-border rounded-lg shadow-elevation-1\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-border\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"font-semibold text-foreground\">Watchlist</h3>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-muted-foreground\">{watchlist.length} symbols</span>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              iconName=\"MoreVertical\"\n              aria-label=\"Watchlist options\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Sort Controls */}\n      <div className=\"p-3 border-b border-border bg-muted/30\">\n        <div className=\"flex items-center space-x-2 text-xs\">\n          <span className=\"text-muted-foreground\">Sort by:</span>\n          {['symbol', 'name', 'price', 'change'].map(field => (\n            <button\n              key={field}\n              onClick={() => handleSort(field)}\n              className={`\n                flex items-center space-x-1 px-2 py-1 rounded transition-smooth\n                ${\n            sortBy === field\n              ? 'bg-primary text-primary-foreground'\n              : 'text-muted-foreground hover:text-foreground'\n            }\n              `}\n            >\n              <span className=\"capitalize\">{field}</span>\n              {sortBy === field && (\n                <Icon name={sortOrder === 'asc' ? 'ChevronUp' : 'ChevronDown'} size={12} />\n              )}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Watchlist Items */}\n      <div className=\"max-h-96 overflow-y-auto\">\n        {sortedWatchlist.length === 0 ? (\n          <div className=\"p-8 text-center\">\n            <Icon name=\"Star\" size={32} className=\"mx-auto mb-3 text-muted-foreground\" />\n            <p className=\"text-muted-foreground\">No symbols in watchlist</p>\n            <p className=\"text-sm text-muted-foreground mt-1\">\n              Search and add symbols to track them here\n            </p>\n          </div>\n        ) : (\n          sortedWatchlist.map(item => (\n            <div\n              key={item.symbol}\n              className=\"flex items-center justify-between p-3 border-b border-border last:border-b-0 hover:bg-muted/50 cursor-pointer transition-smooth\"\n              onClick={() => onSelectSymbol(item)}\n            >\n              <div className=\"flex-1\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"font-semibold text-foreground\">{item.symbol}</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded text-muted-foreground\">\n                    {item.exchange}\n                  </span>\n                </div>\n                <div className=\"text-sm text-muted-foreground truncate\">{item.name}</div>\n              </div>\n\n              <div className=\"text-right mr-3\">\n                <div className=\"font-semibold text-foreground\">\n                  {formatValue(item.price || 150.25, 'currency')}\n                </div>\n                <div className={`text-sm ${getChangeColor(item.change || 2.15)}`}>\n                  {item.change > 0 ? '+' : ''}\n                  {formatValue(Math.abs(item.change || 2.15), 'currency')}(\n                  {item.changePercent > 0 ? '+' : ''}\n                  {(item.changePercent || 1.45).toFixed(2)}%)\n                </div>\n              </div>\n\n              <button\n                onClick={e => {\n                  e.stopPropagation();\n                  onRemoveFromWatchlist(item.symbol);\n                }}\n                className=\"p-1 text-muted-foreground hover:text-error transition-smooth\"\n                title=\"Remove from watchlist\"\n              >\n                <Icon name=\"X\" size={16} />\n              </button>\n            </div>\n          ))\n        )}\n      </div>\n\n      {/* Footer Actions */}\n      {watchlist.length > 0 && (\n        <div className=\"p-3 border-t border-border bg-muted/30\">\n          <div className=\"flex items-center justify-between\">\n            <Button variant=\"ghost\" size=\"sm\" iconName=\"Download\">\n              Export\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\" iconName=\"Bell\">\n              Set Alerts\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WatchlistPanel;\n","import React, { useState, useEffect } from 'react';\n\nimport Icon from '../../components/AppIcon';\nimport SEOHead from '../../components/SEO/SEOHead';\nimport Button from '../../components/ui/Button';\nimport Header from '../../components/ui/Header';\nimport { useFinancialAccessibility } from '../../hooks/useAccessibility';\nimport { dataValidationService } from '../../services/dataValidationService';\nimport { enhancedApiService } from '../../services/enhancedApiService';\nimport realTimeDataService from '../../services/realTimeDataService';\nimport { trackFinancialComponentPerformance } from '../../utils/performanceMonitoring';\n\nimport ApiStatusPanel from './components/ApiStatusPanel';\nimport BulkOperationsPanel from './components/BulkOperationsPanel';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport DataSourceToggle from './components/DataSourceToggle';\nimport MarketDataWidget from './components/MarketDataWidget';\nimport SymbolSearch from './components/SymbolSearch';\nimport WatchlistPanel from './components/WatchlistPanel';\n\n// Import real data services\n\nconst RealTimeMarketDataCenter = () => {\n  // Add accessibility and performance monitoring\n  const { elementRef, testFinancialFeatures } = useFinancialAccessibility('market-data-center');\n\n  const [dataSources, setDataSources] = useState([\n    { id: 'yahoo', name: 'Yahoo Finance', enabled: true, status: 'connected', latency: 12, requiresKey: false },\n    { id: 'alpha_vantage', name: 'Alpha Vantage', enabled: false, status: 'disconnected', latency: 25, requiresKey: true },\n    { id: 'fmp', name: 'Financial Modeling Prep', enabled: false, status: 'disconnected', latency: 18, requiresKey: true },\n    { id: 'sec_edgar', name: 'SEC EDGAR', enabled: true, status: 'connected', latency: 45, requiresKey: false }\n  ]);\n\n  const [connectionHealth, setConnectionHealth] = useState({\n    overall: 'good',\n    sources: {\n      yahoo: 'connected',\n      alpha_vantage: 'disconnected',\n      fmp: 'disconnected',\n      sec_edgar: 'connected'\n    }\n  });\n\n  const [realDataEnabled, setRealDataEnabled] = useState(false);\n  const [apiHealthStatus, setApiHealthStatus] = useState({});\n  const [dataQuality, setDataQuality] = useState({});\n\n  const [widgets, setWidgets] = useState([\n    {\n      id: 'widget-1',\n      symbol: 'AAPL',\n      name: 'Apple Inc.',\n      currentValue: 182.52,\n      change: 2.15,\n      changePercent: 1.19,\n      valueType: 'currency',\n      dayHigh: 184.3,\n      dayLow: 180.15,\n      volume: 52847392,\n      source: 'Bloomberg',\n      lastUpdate: new Date(Date.now() - 2000),\n      sparklineData: [180.25, 181.15, 180.95, 182.1, 181.85, 182.52]\n    },\n    {\n      id: 'widget-2',\n      symbol: 'MSFT',\n      name: 'Microsoft Corporation',\n      currentValue: 378.85,\n      change: -1.25,\n      changePercent: -0.33,\n      valueType: 'currency',\n      dayHigh: 381.2,\n      dayLow: 377.5,\n      volume: 28394751,\n      source: 'FactSet',\n      lastUpdate: new Date(Date.now() - 1500),\n      sparklineData: [380.15, 379.85, 378.95, 379.4, 378.2, 378.85]\n    },\n    {\n      id: 'widget-3',\n      symbol: 'GOOGL',\n      name: 'Alphabet Inc.',\n      currentValue: 2847.35,\n      change: 15.8,\n      changePercent: 0.56,\n      valueType: 'currency',\n      dayHigh: 2855.0,\n      dayLow: 2830.15,\n      volume: 1847392,\n      source: 'Bloomberg',\n      lastUpdate: new Date(Date.now() - 3000),\n      sparklineData: [2835.25, 2841.15, 2838.95, 2845.1, 2843.85, 2847.35]\n    },\n    {\n      id: 'widget-4',\n      symbol: 'US10Y',\n      name: 'US 10-Year Treasury',\n      currentValue: 4.285,\n      change: 0.025,\n      changePercent: 0.59,\n      valueType: 'percentage',\n      dayHigh: 4.295,\n      dayLow: 4.26,\n      volume: null,\n      source: 'Refinitiv',\n      lastUpdate: new Date(Date.now() - 5000),\n      sparklineData: [4.26, 4.27, 4.275, 4.28, 4.285, 4.285]\n    }\n  ]);\n\n  const [watchlist, setWatchlist] = useState([\n    {\n      symbol: 'AAPL',\n      name: 'Apple Inc.',\n      exchange: 'NASDAQ',\n      sector: 'Technology',\n      price: 182.52,\n      change: 2.15,\n      changePercent: 1.19\n    },\n    {\n      symbol: 'MSFT',\n      name: 'Microsoft Corporation',\n      exchange: 'NASDAQ',\n      sector: 'Technology',\n      price: 378.85,\n      change: -1.25,\n      changePercent: -0.33\n    },\n    {\n      symbol: 'TSLA',\n      name: 'Tesla Inc.',\n      exchange: 'NASDAQ',\n      sector: 'Consumer Discretionary',\n      price: 248.42,\n      change: 5.67,\n      changePercent: 2.34\n    }\n  ]);\n\n  const [selectedSymbols, setSelectedSymbols] = useState([]);\n  const [lastUpdate, setLastUpdate] = useState('2 min ago');\n  const [refreshInterval, setRefreshInterval] = useState(5000);\n  const [isAutoRefresh, setIsAutoRefresh] = useState(true);\n\n  // Initialize real data services and check API health\n  useEffect(() => {\n    const initializeRealData = async() => {\n      try {\n        // Ensure backend base URL is initialized from environment at runtime\n        const base = import.meta.env.VITE_API_BASE_URL || 'http://localhost:3001/api';\n        enhancedApiService.setBaseUrl(base);\n\n        // Check API health status\n        const healthStatus = enhancedApiService.getSourceHealthStatus();\n        setApiHealthStatus(healthStatus);\n\n        // Update data sources based on API availability\n        setDataSources(prevSources =>\n          prevSources.map(source => {\n            const health = healthStatus[source.id.toUpperCase()];\n            if (health) {\n              return {\n                ...source,\n                enabled: health.hasValidApiKey || !health.requiresApiKey,\n                status: health.hasValidApiKey || !health.requiresApiKey ? 'connected' : 'disconnected'\n              };\n            }\n            return source;\n          })\n        );\n\n        // Enable real data if we have at least one working API\n        const hasWorkingApi = Object.values(healthStatus).some(\n          health => health.hasValidApiKey || !health.requiresApiKey\n        );\n        setRealDataEnabled(hasWorkingApi);\n\n      } catch (error) {\n        console.error('Failed to initialize real data services:', error);\n      }\n    };\n\n    initializeRealData();\n  }, []);\n\n  // Real-time updates with actual data or simulation\n  useEffect(() => {\n    if (!isAutoRefresh) return;\n\n    const interval = setInterval(async() => {\n      if (realDataEnabled) {\n        // Fetch real data for each widget\n        const updatedWidgets = await Promise.all(\n          widgets.map(async(widget) => {\n            try {\n              const marketData = await enhancedApiService.fetchRealTimeMarketData(widget.symbol);\n              const validation = dataValidationService.validateData(marketData, 'marketData');\n\n              return {\n                ...widget,\n                currentValue: marketData.currentPrice,\n                change: marketData.change,\n                changePercent: marketData.changePercent,\n                dayHigh: marketData.dayHigh,\n                dayLow: marketData.dayLow,\n                volume: marketData.volume,\n                lastUpdate: new Date(),\n                source: marketData.source,\n                dataQuality: validation.qualityScore,\n                sparklineData: [\n                  ...widget.sparklineData.slice(1),\n                  marketData.currentPrice\n                ]\n              };\n            } catch (error) {\n              console.warn(`Failed to fetch real data for ${widget.symbol}, using simulation:`, error);\n              // Fallback to simulation\n              return {\n                ...widget,\n                currentValue: widget.currentValue + (Math.random() - 0.5) * 2,\n                change: (Math.random() - 0.5) * 5,\n                changePercent: (Math.random() - 0.5) * 2,\n                lastUpdate: new Date(),\n                source: 'Simulation',\n                sparklineData: [\n                  ...widget.sparklineData.slice(1),\n                  widget.currentValue + (Math.random() - 0.5) * 2\n                ]\n              };\n            }\n          })\n        );\n        setWidgets(updatedWidgets);\n      } else {\n        // Fallback to simulation\n        setWidgets(prevWidgets =>\n          prevWidgets.map(widget => ({\n            ...widget,\n            currentValue: widget.currentValue + (Math.random() - 0.5) * 2,\n            change: (Math.random() - 0.5) * 5,\n            changePercent: (Math.random() - 0.5) * 2,\n            lastUpdate: new Date(),\n            source: 'Simulation',\n            sparklineData: [\n              ...widget.sparklineData.slice(1),\n              widget.currentValue + (Math.random() - 0.5) * 2\n            ]\n          }))\n        );\n      }\n      setLastUpdate('Just now');\n    }, refreshInterval);\n\n    return () => clearInterval(interval);\n  }, [refreshInterval, isAutoRefresh, realDataEnabled, widgets]);\n\n  const handleDataSourceToggle = sourceId => {\n    setDataSources(prev =>\n      prev.map(source =>\n        source.id === sourceId ? { ...source, enabled: !source.enabled } : source\n      )\n    );\n  };\n\n  const handleSymbolSelect = async(symbol) => {\n    try {\n      let marketData;\n      let source = 'Simulation';\n      let dataQuality = 75;\n\n      if (realDataEnabled) {\n        try {\n          marketData = await enhancedApiService.fetchRealTimeMarketData(symbol.symbol);\n          const validation = dataValidationService.validateData(marketData, 'marketData');\n          source = marketData.source;\n          dataQuality = validation.qualityScore;\n        } catch (error) {\n          console.warn(`Failed to fetch real data for ${symbol.symbol}, using simulation:`, error);\n          marketData = null;\n        }\n      }\n\n      const newWidget = {\n        id: `widget-${Date.now()}`,\n        symbol: symbol.symbol,\n        name: symbol.name,\n        currentValue: marketData?.currentPrice || Math.random() * 1000 + 50,\n        change: marketData?.change || (Math.random() - 0.5) * 10,\n        changePercent: marketData?.changePercent || (Math.random() - 0.5) * 5,\n        valueType: 'currency',\n        dayHigh: marketData?.dayHigh || Math.random() * 1000 + 60,\n        dayLow: marketData?.dayLow || Math.random() * 1000 + 40,\n        volume: marketData?.volume || Math.floor(Math.random() * 100000000),\n        source,\n        dataQuality,\n        lastUpdate: new Date(),\n        sparklineData: Array.from({ length: 6 }, () =>\n          marketData?.currentPrice || Math.random() * 1000 + 50\n        )\n      };\n\n      setWidgets(prev => [...prev, newWidget]);\n\n      // Subscribe to real-time updates for this symbol\n      if (realDataEnabled) {\n        realTimeDataService.subscribe(symbol.symbol, 'marketData', (data) => {\n          setWidgets(prevWidgets =>\n            prevWidgets.map(widget =>\n              widget.symbol === symbol.symbol\n                ? {\n                  ...widget,\n                  currentValue: data.currentPrice,\n                  change: data.change,\n                  changePercent: data.changePercent,\n                  lastUpdate: new Date(data.timestamp),\n                  source: data.source\n                }\n                : widget\n            )\n          );\n        });\n      }\n    } catch (error) {\n      console.error('Error adding symbol:', error);\n    }\n  };\n\n  const handleAddToWatchlist = symbol => {\n    if (!watchlist.some(item => item.symbol === symbol.symbol)) {\n      setWatchlist(prev => [\n        ...prev,\n        {\n          ...symbol,\n          price: Math.random() * 1000 + 50,\n          change: (Math.random() - 0.5) * 10,\n          changePercent: (Math.random() - 0.5) * 5\n        }\n      ]);\n    }\n  };\n\n  const handleRemoveFromWatchlist = symbol => {\n    setWatchlist(prev => prev.filter(item => item.symbol !== symbol));\n  };\n\n  const handleWidgetResize = widgetId => {\n    console.log('Resize widget:', widgetId);\n  };\n\n  const handleWidgetRemove = widgetId => {\n    setWidgets(prev => prev.filter(widget => widget.id !== widgetId));\n  };\n\n  const handleBulkExport = config => {\n    console.log('Bulk export:', config);\n    alert(`Exporting ${config.symbols.length} symbols in ${config.format.toUpperCase()} format`);\n  };\n\n  const handleBulkAlert = config => {\n    console.log('Bulk alert setup:', config);\n    alert(`Setting ${config.threshold}% alerts for ${config.symbols.length} symbols`);\n  };\n\n  const handleBulkHistorical = config => {\n    console.log('Bulk historical data:', config);\n    alert(`Fetching ${config.period} historical data for ${config.symbols.length} symbols`);\n  };\n\n  const handleRefresh = () => {\n    setLastUpdate('Just now');\n    // Trigger data refresh\n  };\n\n  const handleKeyboardShortcut = e => {\n    if (e.ctrlKey && e.key === 'f') {\n      e.preventDefault();\n      document.querySelector('input[placeholder*=\"Search symbols\"]')?.focus();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyboardShortcut);\n    return () => document.removeEventListener('keydown', handleKeyboardShortcut);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n\n      <div className=\"pt-[60px]\">\n        {/* Top Toolbar */}\n        <div className=\"bg-card border-b border-border p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-6\">\n              <DataSourceToggle dataSources={dataSources} onToggle={handleDataSourceToggle} />\n\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  iconName=\"RefreshCw\"\n                  onClick={handleRefresh}\n                  className={isAutoRefresh ? 'animate-spin' : ''}\n                >\n                  Refresh\n                </Button>\n                <Button\n                  variant={isAutoRefresh ? 'default' : 'outline'}\n                  size=\"sm\"\n                  iconName={isAutoRefresh ? 'Pause' : 'Play'}\n                  onClick={() => setIsAutoRefresh(!isAutoRefresh)}\n                >\n                  {isAutoRefresh ? 'Pause' : 'Resume'}\n                </Button>\n              </div>\n            </div>\n\n            <ConnectionStatus connectionHealth={connectionHealth} lastUpdate={lastUpdate} />\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"p-6\">\n          <div className=\"grid grid-cols-12 gap-6\">\n            {/* Left Sidebar */}\n            <div className=\"col-span-3 space-y-6\">\n              {/* Symbol Search */}\n              <div className=\"bg-card border border-border rounded-lg p-4 shadow-elevation-1\">\n                <h3 className=\"font-semibold text-foreground mb-4\">Add Symbols</h3>\n                <SymbolSearch\n                  onSymbolSelect={handleSymbolSelect}\n                  watchlist={watchlist}\n                  onAddToWatchlist={handleAddToWatchlist}\n                />\n                <div className=\"mt-3 text-xs text-muted-foreground\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Icon name=\"Keyboard\" size={12} />\n                    <span>Ctrl+F to focus search</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Watchlist */}\n              <WatchlistPanel\n                watchlist={watchlist}\n                onRemoveFromWatchlist={handleRemoveFromWatchlist}\n                onSelectSymbol={handleSymbolSelect}\n              />\n\n              {/* Bulk Operations */}\n              <BulkOperationsPanel\n                selectedSymbols={selectedSymbols}\n                onBulkExport={handleBulkExport}\n                onBulkAlert={handleBulkAlert}\n                onBulkHistorical={handleBulkHistorical}\n              />\n\n              {/* API Status & Data Quality */}\n              <ApiStatusPanel\n                apiHealthStatus={apiHealthStatus}\n                realDataEnabled={realDataEnabled}\n                dataSources={dataSources}\n                dataQuality={dataQuality}\n              />\n            </div>\n\n            {/* Main Data Grid */}\n            <div className=\"col-span-9\">\n              <div className=\"mb-4 flex items-center justify-between\">\n                <h2 className=\"text-xl font-semibold text-foreground\">\n                  Market Data Widgets ({widgets.length})\n                </h2>\n                <div className=\"flex items-center space-x-2\">\n                  <Button variant=\"outline\" size=\"sm\" iconName=\"Settings\">\n                    Layout\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" iconName=\"Save\">\n                    Save Dashboard\n                  </Button>\n                </div>\n              </div>\n\n              {/* Widgets Grid */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">\n                {widgets.map(widget => (\n                  <MarketDataWidget\n                    key={widget.id}\n                    widget={widget}\n                    onResize={handleWidgetResize}\n                    onRemove={handleWidgetRemove}\n                  />\n                ))}\n              </div>\n\n              {/* Empty State */}\n              {widgets.length === 0 && (\n                <div className=\"text-center py-12\">\n                  <Icon name=\"BarChart3\" size={48} className=\"mx-auto mb-4 text-muted-foreground\" />\n                  <h3 className=\"text-lg font-semibold text-foreground mb-2\">No Data Widgets</h3>\n                  <p className=\"text-muted-foreground mb-4\">\n                    Search and add symbols to start monitoring market data\n                  </p>\n                  <Button variant=\"outline\" iconName=\"Plus\">\n                    Add Your First Widget\n                  </Button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Status Bar */}\n        <div className=\"fixed bottom-0 left-0 right-0 bg-card border-t border-border p-2\">\n          <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n            <div className=\"flex items-center space-x-4\">\n              <span>Active Widgets: {widgets.length}</span>\n              <span>Watchlist: {watchlist.length}</span>\n              <span>Auto-refresh: {isAutoRefresh ? 'ON' : 'OFF'}</span>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <span>Market Hours: OPEN</span>\n              <span>Last Update: {lastUpdate}</span>\n              <div className=\"flex items-center space-x-1\">\n                <div className=\"w-2 h-2 bg-success rounded-full\" />\n                <span>All systems operational</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RealTimeMarketDataCenter;\n"],"names":["dataValidationService","constructor","this","validationRules","initializeValidationRules","qualityMetrics","Map","anomalyDetection","marketData","required","numeric","ranges","currentPrice","min","max","volume","changePercent","formats","symbol","timestamp","financialStatements","revenue","netIncome","companyProfile","pe","pb","beta","dcfModel","custom","data","errors","Array","isArray","cashFlows","length","push","discountRate","warnings","lboModel","debtFinancing","equityFinancing","purchasePrice","total","Math","abs","stockData","trim","price","validateData","dataType","rules","isValid","field","undefined","value","parseFloat","isNaN","range","pattern","Object","entries","test","businessValidation","validateBusinessLogic","customValidation","apiLogger","log","qualityScore","calculateQualityScore","error","previousClose","calculatedChange","calculatedChangePercent","change","toFixed","dayHigh","dayLow","netMargin","totalCurrentAssets","totalCurrentLiabilities","currentRatio","crossValidateData","dataSources","isConsistent","discrepancies","recommendedSource","source","numericFields","values","filter","map","mean","reduce","sum","item","maxDeviation","threshold","sourceQuality","validation","errorCount","warningCount","sort","a","b","detectAnomalies","timeSeries","point","v","val","variance","pow","stdDev","sqrt","anomalies","forEach","index","zScore","deviation","severity","getValidationSummary","Date","toISOString","completeness","calculateCompleteness","freshness","calculateFreshness","allFields","keys","uniqueFields","Set","dataTime","ageMinutes","sanitizeInput","input","String","replace","isInRange","isValidPercentage","isValidNumber","isFinite","isValidArray","isValidObject","validateFinancialRatios","ratios","debtToEquity","returnOnEquity","RateLimiter","requestsPerInterval","interval","requestTimestamps","acquire","now","timeToWait","Promise","resolve","setTimeout","enhancedApiService","rateLimiters","sourceHealth","lastRequests","cache","rateLimitInfo","remaining","reset","initializeSecureClient","initializeSourceHealth","set","client","secureApiClient","status","successRate","avgResponseTime","lastError","requestCount","lastHealthCheck","hasValidApiKey","getBestSource","requiresApiKey","includes","fetchRealTimeMarketData","options","t0","getQuote","updateSourceHealth","message","fetchHistoricalMarketData","qs","URLSearchParams","toString","backendData","request","toUpperCase","result","backendError","yf","fetchFromYahooFinance","timestamps","quote","indicators","t","i","open","high","low","close","meta","yahooError","av","fetchFromAlphaVantage","series","toLowerCase","Error","date","parseInt","alphaError","fetchIntradayMarketData","params","find","k","startsWith","ts","url","includePrePost","events","fullUrl","URL","search","response","fetch","pathname","signal","AbortSignal","timeout","headers","ok","responseData","json","chart","function_name","config","API_CONFIG","ALPHA_VANTAGE","function","apikey","apiKeys","baseURL","fetchComprehensiveData","results","promises","key","method","async","allSettled","sources","normalizeMarketData","rawData","normalizeYahooData","normalizeAlphaVantageData","latest","regularMarketPrice","regularMarketDayHigh","regularMarketDayLow","regularMarketVolume","marketCap","currency","exchangeName","regularMarketTime","globalQuote","success","responseTime","health","get","getSourceHealthStatus","getSourcesUsed","add","from","baseUrl","defaultHeaders","authToken","cacheTTL","requestInterceptors","responseInterceptors","metrics","totalRequests","successfulRequests","failedRequests","startTime","limiter","cacheKey","has","cached","Authorization","interceptor","controller","AbortController","timeoutId","abort","clearTimeout","errorData","text","setAuthToken","token","setCacheTTL","ttl","batchRequests","requests","req","reason","addRequestInterceptor","addResponseInterceptor","requestWithRetry","retries","delay","setBaseUrl","getBaseUrl","setDefaultHeaders","getDefaultHeaders","getTimeout","getMetrics","resetMetrics","getRateLimitInfo","clearCache","clear","ApiStatusPanel","apiHealthStatus","realDataEnabled","dataQuality","getStatusIcon","jsx","CheckCircle","className","XCircle","AlertTriangle","getStatusColor","connectedSources","totalSources","connectionPercentage","Card","children","CardHeader","jsxs","CardTitle","Wifi","CardContent","Badge","Progress","name","requiresKey","Key","title","variant","latency","id","quality","Alert","AlertDescription","BulkOperationsPanel","selectedSymbols","onBulkExport","onBulkAlert","onBulkHistorical","isExpanded","setIsExpanded","useState","exportFormat","setExportFormat","alertThreshold","setAlertThreshold","historicalPeriod","setHistoricalPeriod","onClick","Icon","size","color","slice","onChange","e","target","Button","iconName","symbols","format","Input","type","placeholder","disabled","period","ceil","ConnectionStatus","connectionHealth","lastUpdate","overall","DataSourceToggle","onToggle","enabled","MarketDataWidget","widget","onResize","onRemove","formatValue","toLocaleString","minimumFractionDigits","diffSeconds","getFreshnessColor","toLocaleTimeString","currentValue","valueType","getChangeIcon","sparklineData","style","height","minHeight","SymbolSearch","onSymbolSelect","watchlist","onAddToWatchlist","searchTerm","setSearchTerm","suggestions","setSuggestions","isOpen","setIsOpen","selectedIndex","setSelectedIndex","searchRef","useRef","symbolDatabase","exchange","sector","useEffect","filtered","handleSymbolSelect","ref","onKeyDown","preventDefault","prev","some","stopPropagation","WatchlistPanel","onRemoveFromWatchlist","onSelectSymbol","sortBy","setSortBy","sortOrder","setSortOrder","sortedWatchlist","aValue","bValue","handleSort","RealTimeMarketDataCenter","useFinancialAccessibility","setDataSources","setConnectionHealth","yahoo","alpha_vantage","fmp","sec_edgar","setRealDataEnabled","setApiHealthStatus","setDataQuality","widgets","setWidgets","setWatchlist","setSelectedSymbols","setLastUpdate","refreshInterval","setRefreshInterval","isAutoRefresh","setIsAutoRefresh","base","healthStatus","prevSources","hasWorkingApi","initializeRealData","setInterval","updatedWidgets","all","random","prevWidgets","clearInterval","newWidget","floor","realTimeDataService","subscribe","handleWidgetResize","widgetId","handleWidgetRemove","handleKeyboardShortcut","ctrlKey","document","querySelector","focus","addEventListener","removeEventListener","Header","sourceId","alert"],"mappings":"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"}