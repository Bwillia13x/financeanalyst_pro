{"version":3,"file":"private-analysis-CULRlbZQ.js","sources":["../../src/utils/performanceMonitoring.js","../../src/utils/accessibilityTesting.js","../../src/hooks/useAccessibility.js","../../src/components/PrivateAnalysis/FinancialSpreadsheet.jsx","../../src/components/PrivateAnalysis/ScenarioModeling.jsx","../../src/components/PrivateAnalysis/SensitivityAnalysis.jsx","../../src/components/PrivateAnalysis/DataVisualization.jsx","../../src/components/PrivateAnalysis/WACCCalculator.jsx","../../src/components/PrivateAnalysis/ComparableAnalysis.jsx","../../src/components/PrivateAnalysis/ModelingTools.jsx","../../src/components/PrivateAnalysis/AnalysisResults.jsx","../../src/components/PrivateAnalysis/FinancialModelWorkspace.jsx","../../src/components/PrivateAnalysis/EnhancedMarketDataDashboard.jsx","../../src/components/PrivateAnalysis/MonteCarloIntegrationHub.jsx","../../src/components/PrivateAnalysis/ContextualInsightsSidebar.jsx"],"sourcesContent":["// Real User Monitoring and Web Vitals Tracking\n\n// Web Vitals metrics tracking\nlet webVitalsData = {\n  CLS: null,\n  FID: null,\n  FCP: null,\n  LCP: null,\n  TTFB: null,\n  INP: null\n};\n\n// Performance observer for tracking metrics\nconst performanceEntries = [];\nlet performanceObserver;\n\n// Initialize performance monitoring\nexport function initializePerformanceMonitoring() {\n  // Initialize Web Vitals tracking\n  initializeWebVitals();\n  \n  // Initialize custom performance tracking\n  initializeCustomMetrics();\n  \n  // Initialize navigation timing\n  trackNavigationTiming();\n  \n  // Initialize resource timing\n  trackResourceTiming();\n  \n  // Initialize user interactions\n  trackUserInteractions();\n  \n  console.log('Performance monitoring initialized');\n}\n\n// Web Vitals implementation\nfunction initializeWebVitals() {\n  // Cumulative Layout Shift (CLS)\n  let clsValue = 0;\n  let clsEntries = [];\n  \n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (!entry.hadRecentInput) {\n        clsValue += entry.value;\n        clsEntries.push(entry);\n      }\n    }\n    webVitalsData.CLS = clsValue;\n    reportWebVital('CLS', clsValue, clsEntries);\n  }).observe({ type: 'layout-shift', buffered: true });\n\n  // First Input Delay (FID) / Interaction to Next Paint (INP)\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (entry.name === 'first-input-delay') {\n        webVitalsData.FID = entry.processingStart - entry.startTime;\n        reportWebVital('FID', webVitalsData.FID, [entry]);\n      }\n      \n      // Track INP for better user interaction measurement\n      if (entry.interactionId) {\n        const duration = entry.processingEnd - entry.startTime;\n        if (!webVitalsData.INP || duration > webVitalsData.INP) {\n          webVitalsData.INP = duration;\n          reportWebVital('INP', duration, [entry]);\n        }\n      }\n    }\n  }).observe({ type: 'event', buffered: true });\n\n  // First Contentful Paint (FCP)\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (entry.name === 'first-contentful-paint') {\n        webVitalsData.FCP = entry.startTime;\n        reportWebVital('FCP', entry.startTime, [entry]);\n      }\n    }\n  }).observe({ type: 'paint', buffered: true });\n\n  // Largest Contentful Paint (LCP)\n  new PerformanceObserver((entryList) => {\n    const entries = entryList.getEntries();\n    const lastEntry = entries[entries.length - 1];\n    webVitalsData.LCP = lastEntry.startTime;\n    reportWebVital('LCP', lastEntry.startTime, [lastEntry]);\n  }).observe({ type: 'largest-contentful-paint', buffered: true });\n\n  // Time to First Byte (TTFB)\n  const navigationEntry = performance.getEntriesByType('navigation')[0];\n  if (navigationEntry) {\n    webVitalsData.TTFB = navigationEntry.responseStart - navigationEntry.requestStart;\n    reportWebVital('TTFB', webVitalsData.TTFB, [navigationEntry]);\n  }\n}\n\n// Custom metrics for financial application\nfunction initializeCustomMetrics() {\n  // Track when critical financial components load\n  const criticalComponents = [\n    'financial-spreadsheet',\n    'dcf-calculator',\n    'chart-rendering',\n    'market-data-fetch'\n  ];\n  \n  criticalComponents.forEach(component => {\n    performance.mark(`${component}-start`);\n  });\n  \n  // Track component rendering times\n  window.trackComponentRender = (componentName, renderTime) => {\n    performance.mark(`${componentName}-end`);\n    performance.measure(\n      `${componentName}-render`,\n      `${componentName}-start`,\n      `${componentName}-end`\n    );\n    \n    reportCustomMetric('component-render', {\n      component: componentName,\n      renderTime,\n      timestamp: Date.now()\n    });\n  };\n  \n  // Track financial calculation performance\n  window.trackCalculationPerformance = (calculationType, duration, complexity) => {\n    reportCustomMetric('financial-calculation', {\n      type: calculationType,\n      duration,\n      complexity,\n      timestamp: Date.now()\n    });\n  };\n}\n\n// Navigation timing tracking\nfunction trackNavigationTiming() {\n  window.addEventListener('load', () => {\n    setTimeout(() => {\n      const navigation = performance.getEntriesByType('navigation')[0];\n      if (navigation) {\n        const timings = {\n          dns: navigation.domainLookupEnd - navigation.domainLookupStart,\n          tcp: navigation.connectEnd - navigation.connectStart,\n          ssl: navigation.secureConnectionStart > 0 ? navigation.connectEnd - navigation.secureConnectionStart : 0,\n          ttfb: navigation.responseStart - navigation.requestStart,\n          download: navigation.responseEnd - navigation.responseStart,\n          domProcessing: navigation.domComplete - navigation.domLoading,\n          totalLoadTime: navigation.loadEventEnd - navigation.fetchStart\n        };\n        \n        reportNavigationTiming(timings);\n      }\n    }, 0);\n  });\n}\n\n// Resource timing tracking\nfunction trackResourceTiming() {\n  new PerformanceObserver((list) => {\n    for (const entry of list.getEntries()) {\n      // Track important resource types\n      if (entry.initiatorType === 'script' || \n          entry.initiatorType === 'css' || \n          entry.initiatorType === 'img' ||\n          entry.initiatorType === 'fetch') {\n        \n        const resourceData = {\n          name: entry.name,\n          type: entry.initiatorType,\n          size: entry.transferSize || entry.encodedBodySize,\n          duration: entry.duration,\n          cached: entry.transferSize === 0 && entry.encodedBodySize > 0,\n          timestamp: Date.now()\n        };\n        \n        // Only report large resources or slow loads\n        if (resourceData.size > 50000 || resourceData.duration > 1000) {\n          reportResourceTiming(resourceData);\n        }\n      }\n    }\n  }).observe({ entryTypes: ['resource'] });\n}\n\n// User interaction tracking\nfunction trackUserInteractions() {\n  let interactionCount = 0;\n  let totalInteractionTime = 0;\n  \n  const interactionEvents = ['click', 'keydown', 'touchstart'];\n  \n  interactionEvents.forEach(eventType => {\n    document.addEventListener(eventType, (event) => {\n      const startTime = performance.now();\n      \n      // Track interaction delay\n      requestAnimationFrame(() => {\n        const endTime = performance.now();\n        const interactionTime = endTime - startTime;\n        \n        interactionCount++;\n        totalInteractionTime += interactionTime;\n        \n        // Report slow interactions\n        if (interactionTime > 100) {\n          reportSlowInteraction({\n            type: eventType,\n            target: event.target.tagName,\n            duration: interactionTime,\n            timestamp: Date.now()\n          });\n        }\n      });\n    }, { passive: true });\n  });\n  \n  // Report interaction summary periodically\n  setInterval(() => {\n    if (interactionCount > 0) {\n      reportInteractionSummary({\n        count: interactionCount,\n        averageTime: totalInteractionTime / interactionCount,\n        timestamp: Date.now()\n      });\n      \n      // Reset counters\n      interactionCount = 0;\n      totalInteractionTime = 0;\n    }\n  }, 30000); // Every 30 seconds\n}\n\n// Reporting functions\nfunction reportWebVital(name, value, entries) {\n  const data = {\n    metric: name,\n    value: Math.round(value),\n    entries: entries.map(entry => ({\n      startTime: entry.startTime,\n      duration: entry.duration || 0\n    })),\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    connection: getConnectionInfo()\n  };\n  \n  console.log(`Web Vital - ${name}:`, value);\n  sendToAnalytics('web-vital', data);\n}\n\nfunction reportCustomMetric(type, data) {\n  const metricData = {\n    type,\n    ...data,\n    url: window.location.href,\n    userAgent: navigator.userAgent\n  };\n  \n  console.log(`Custom Metric - ${type}:`, data);\n  sendToAnalytics('custom-metric', metricData);\n}\n\nfunction reportNavigationTiming(timings) {\n  const data = {\n    ...timings,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    connection: getConnectionInfo()\n  };\n  \n  console.log('Navigation Timing:', timings);\n  sendToAnalytics('navigation-timing', data);\n}\n\nfunction reportResourceTiming(resourceData) {\n  console.log('Resource Timing:', resourceData);\n  sendToAnalytics('resource-timing', resourceData);\n}\n\nfunction reportSlowInteraction(interactionData) {\n  console.log('Slow Interaction:', interactionData);\n  sendToAnalytics('slow-interaction', interactionData);\n}\n\nfunction reportInteractionSummary(summaryData) {\n  console.log('Interaction Summary:', summaryData);\n  sendToAnalytics('interaction-summary', summaryData);\n}\n\n// Error tracking\nexport function trackError(error, errorInfo) {\n  const errorData = {\n    message: error.message,\n    stack: error.stack,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    componentStack: errorInfo?.componentStack,\n    errorBoundary: errorInfo?.errorBoundary\n  };\n  \n  console.error('Application Error:', errorData);\n  sendToAnalytics('error', errorData);\n}\n\n// Performance budget monitoring\nexport function checkPerformanceBudgets() {\n  const budgets = {\n    LCP: 2500,  // 2.5s\n    FID: 100,   // 100ms\n    CLS: 0.1,   // 0.1\n    FCP: 1800,  // 1.8s\n    TTFB: 800   // 800ms\n  };\n  \n  const violations = [];\n  \n  Object.entries(budgets).forEach(([metric, budget]) => {\n    const value = webVitalsData[metric];\n    if (value !== null && value > budget) {\n      violations.push({\n        metric,\n        value,\n        budget,\n        overBy: value - budget\n      });\n    }\n  });\n  \n  if (violations.length > 0) {\n    console.warn('Performance Budget Violations:', violations);\n    sendToAnalytics('budget-violations', {\n      violations,\n      timestamp: Date.now(),\n      url: window.location.href\n    });\n  }\n  \n  return violations;\n}\n\n// Utility functions\nfunction getConnectionInfo() {\n  if ('connection' in navigator) {\n    return {\n      effectiveType: navigator.connection.effectiveType,\n      downlink: navigator.connection.downlink,\n      rtt: navigator.connection.rtt\n    };\n  }\n  return null;\n}\n\nfunction sendToAnalytics(type, data) {\n  // In production, send to your analytics service\n  // For now, we'll store locally and batch send\n  \n  try {\n    const analyticsData = {\n      type,\n      data,\n      sessionId: getSessionId(),\n      userId: getUserId()\n    };\n    \n    // Store in localStorage for batching\n    const existingData = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n    existingData.push(analyticsData);\n    \n    // Keep only last 100 entries to prevent storage overflow\n    if (existingData.length > 100) {\n      existingData.splice(0, existingData.length - 100);\n    }\n    \n    localStorage.setItem('analytics-queue', JSON.stringify(existingData));\n    \n    // Send batch if queue is full or on interval\n    if (existingData.length >= 10) {\n      sendAnalyticsBatch();\n    }\n    \n  } catch (error) {\n    console.error('Failed to queue analytics data:', error);\n  }\n}\n\nfunction sendAnalyticsBatch() {\n  try {\n    const queuedData = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n    if (queuedData.length === 0) return;\n    \n    // In production, replace with your analytics endpoint\n    console.log('Sending analytics batch:', queuedData.length, 'items');\n    \n    // Simulate sending to analytics service\n    if (window.gtag) {\n      queuedData.forEach(item => {\n        window.gtag('event', item.type, {\n          custom_parameter: JSON.stringify(item.data)\n        });\n      });\n    }\n    \n    // Clear queue after successful send\n    localStorage.removeItem('analytics-queue');\n    \n  } catch (error) {\n    console.error('Failed to send analytics batch:', error);\n  }\n}\n\n// Session and user management\nfunction getSessionId() {\n  let sessionId = sessionStorage.getItem('session-id');\n  if (!sessionId) {\n    sessionId = Date.now() + '-' + Math.random().toString(36).substr(2, 9);\n    sessionStorage.setItem('session-id', sessionId);\n  }\n  return sessionId;\n}\n\nfunction getUserId() {\n  let userId = localStorage.getItem('user-id');\n  if (!userId) {\n    userId = 'anonymous-' + Date.now() + '-' + Math.random().toString(36).substr(2, 9);\n    localStorage.setItem('user-id', userId);\n  }\n  return userId;\n}\n\n// Initialize batch sending on interval\nsetInterval(sendAnalyticsBatch, 60000); // Every minute\n\n// Send batch before page unload\nwindow.addEventListener('beforeunload', () => {\n  sendAnalyticsBatch();\n});\n\n// Accessibility metrics reporting\nexport function reportPerformanceMetric(type, data) {\n  const metricData = {\n    type,\n    ...data,\n    url: window.location.href,\n    userAgent: navigator.userAgent,\n    timestamp: Date.now()\n  };\n  \n  console.log(`Performance Metric - ${type}:`, data);\n  sendToAnalytics('performance-metric', metricData);\n}\n\n// Track accessibility test results\nexport function trackAccessibilityResults(results) {\n  const accessibilityData = {\n    violations: results.violations?.length || 0,\n    passes: results.passes?.length || 0,\n    incomplete: results.incomplete?.length || 0,\n    score: results.score || 0,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent\n  };\n  \n  console.log('Accessibility Results:', accessibilityData);\n  sendToAnalytics('accessibility-results', accessibilityData);\n  \n  // Store accessibility history\n  try {\n    const history = JSON.parse(localStorage.getItem('accessibility-history') || '[]');\n    history.push(accessibilityData);\n    \n    // Keep only last 50 entries\n    if (history.length > 50) {\n      history.splice(0, history.length - 50);\n    }\n    \n    localStorage.setItem('accessibility-history', JSON.stringify(history));\n  } catch (error) {\n    console.error('Failed to store accessibility history:', error);\n  }\n}\n\n// Track financial component performance\nexport function trackFinancialComponentPerformance(componentName, metrics) {\n  const performanceData = {\n    component: componentName,\n    ...metrics,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent\n  };\n  \n  console.log(`Financial Component Performance - ${componentName}:`, metrics);\n  sendToAnalytics('financial-component-performance', performanceData);\n}\n\n// Get comprehensive performance dashboard data\nexport function getPerformanceDashboardData() {\n  const accessibilityHistory = JSON.parse(localStorage.getItem('accessibility-history') || '[]');\n  const analyticsQueue = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n  \n  // Calculate trends\n  const recentAccessibility = accessibilityHistory.slice(-10);\n  const avgScore = recentAccessibility.reduce((sum, entry) => sum + entry.score, 0) / recentAccessibility.length || 0;\n  const avgViolations = recentAccessibility.reduce((sum, entry) => sum + entry.violations, 0) / recentAccessibility.length || 0;\n  \n  // Get performance metrics from queue\n  const performanceMetrics = analyticsQueue\n    .filter(item => item.type === 'performance-metric')\n    .slice(-20)\n    .map(item => item.data);\n  \n  const webVitalMetrics = analyticsQueue\n    .filter(item => item.type === 'web-vital')\n    .slice(-10)\n    .map(item => item.data);\n\n  return {\n    webVitals: webVitalsData,\n    budgetViolations: checkPerformanceBudgets(),\n    accessibility: {\n      currentScore: recentAccessibility[recentAccessibility.length - 1]?.score || 0,\n      averageScore: Math.round(avgScore),\n      averageViolations: Math.round(avgViolations),\n      history: recentAccessibility,\n      trends: {\n        scoreImproving: recentAccessibility.length >= 2 && \n          recentAccessibility[recentAccessibility.length - 1].score > \n          recentAccessibility[recentAccessibility.length - 2].score\n      }\n    },\n    performance: {\n      recentMetrics: performanceMetrics,\n      webVitalHistory: webVitalMetrics\n    },\n    timestamp: Date.now()\n  };\n}\n\n// Export current performance data\nexport function getPerformanceData() {\n  return {\n    webVitals: webVitalsData,\n    budgetViolations: checkPerformanceBudgets(),\n    timestamp: Date.now()\n  };\n}","// Accessibility Testing Framework with axe-core\nimport axeCore from 'axe-core';\n\nclass AccessibilityTester {\n  constructor(options = {}) {\n    this.options = {\n      // Default axe configuration\n      rules: {\n        // Financial application specific rules\n        'color-contrast': { enabled: true },\n        'keyboard-navigation': { enabled: true },\n        'focus-management': { enabled: true },\n        'aria-labels': { enabled: true },\n        'heading-order': { enabled: true },\n        'landmark-one-main': { enabled: true },\n        'skip-link': { enabled: true },\n        \n        // Disable rules that might conflict with financial widgets\n        'nested-interactive': { enabled: false }, // Some financial tables need nested controls\n        \n        ...options.rules\n      },\n      tags: ['wcag2a', 'wcag2aa', 'wcag21aa', 'best-practice'],\n      runOnly: options.runOnly || null,\n      reporter: options.reporter || 'v2',\n      ...options\n    };\n\n    this.violations = [];\n    this.lastTestResults = null;\n  }\n\n  // Run accessibility tests on current page or specific element\n  async runTests(element = document, options = {}) {\n    const testOptions = {\n      ...this.options,\n      ...options\n    };\n\n    try {\n      console.log('🔍 Running accessibility tests...');\n      const results = await axeCore.run(element, testOptions);\n      \n      this.lastTestResults = results;\n      this.violations = results.violations;\n\n      // Log results\n      this.logResults(results);\n      \n      // Report violations in development\n      if (process.env.NODE_ENV === 'development') {\n        this.reportViolations(results.violations);\n      }\n\n      // Store results for analytics\n      this.storeResults(results);\n\n      return results;\n    } catch (error) {\n      console.error('Accessibility testing failed:', error);\n      throw error;\n    }\n  }\n\n  // Test specific financial components\n  async testFinancialComponent(selector, componentType = 'generic') {\n    const element = document.querySelector(selector);\n    if (!element) {\n      throw new Error(`Element not found: ${selector}`);\n    }\n\n    // Component-specific test configurations\n    const componentConfigs = {\n      'spreadsheet': {\n        rules: {\n          'table-header': { enabled: true },\n          'th-has-data-cells': { enabled: true },\n          'table-duplicate-name': { enabled: true },\n          'scope-attr-valid': { enabled: true }\n        },\n        tags: ['wcag2aa', 'section508']\n      },\n      \n      'chart': {\n        rules: {\n          'image-alt': { enabled: true },\n          'svg-img-alt': { enabled: true },\n          'aria-hidden-focus': { enabled: true }\n        },\n        tags: ['wcag2aa']\n      },\n      \n      'calculator': {\n        rules: {\n          'label': { enabled: true },\n          'form-field-multiple-labels': { enabled: true },\n          'duplicate-id': { enabled: true }\n        },\n        tags: ['wcag2aa', 'section508']\n      },\n      \n      'modal': {\n        rules: {\n          'focus-trap': { enabled: true },\n          'aria-dialog-name': { enabled: true },\n          'keyboard-navigation': { enabled: true }\n        },\n        tags: ['wcag2aa', 'best-practice']\n      }\n    };\n\n    const config = componentConfigs[componentType] || {};\n    return await this.runTests(element, config);\n  }\n\n  // Test keyboard navigation\n  async testKeyboardNavigation() {\n    console.log('🎹 Testing keyboard navigation...');\n    \n    const focusableElements = this.getFocusableElements();\n    const tabOrderIssues = [];\n    \n    // Test tab order\n    let previousTabIndex = -1;\n    focusableElements.forEach((element, index) => {\n      const tabIndex = element.tabIndex || 0;\n      \n      if (tabIndex > 0 && tabIndex <= previousTabIndex) {\n        tabOrderIssues.push({\n          element: element.tagName,\n          id: element.id,\n          tabIndex,\n          position: index,\n          issue: 'Tab order not sequential'\n        });\n      }\n      \n      previousTabIndex = tabIndex;\n    });\n\n    // Test focus visibility\n    const focusVisibilityIssues = [];\n    focusableElements.forEach(element => {\n      const styles = window.getComputedStyle(element, ':focus');\n      const hasOutline = styles.outline !== 'none' && styles.outline !== '0px';\n      const hasBoxShadow = styles.boxShadow !== 'none';\n      const hasBackground = styles.backgroundColor !== 'transparent';\n      \n      if (!hasOutline && !hasBoxShadow && !hasBackground) {\n        focusVisibilityIssues.push({\n          element: element.tagName,\n          id: element.id,\n          className: element.className,\n          issue: 'No visible focus indicator'\n        });\n      }\n    });\n\n    return {\n      focusableElementsCount: focusableElements.length,\n      tabOrderIssues,\n      focusVisibilityIssues,\n      passed: tabOrderIssues.length === 0 && focusVisibilityIssues.length === 0\n    };\n  }\n\n  // Test color contrast for financial data\n  async testColorContrast() {\n    console.log('🎨 Testing color contrast...');\n    \n    const textElements = document.querySelectorAll('p, span, div, td, th, label, button, a, h1, h2, h3, h4, h5, h6');\n    const contrastIssues = [];\n\n    textElements.forEach(element => {\n      const styles = window.getComputedStyle(element);\n      const textColor = styles.color;\n      const backgroundColor = styles.backgroundColor;\n      \n      // Skip if background is transparent\n      if (backgroundColor === 'transparent' || backgroundColor === 'rgba(0, 0, 0, 0)') {\n        return;\n      }\n\n      const contrast = this.calculateContrastRatio(textColor, backgroundColor);\n      const fontSize = parseInt(styles.fontSize);\n      const fontWeight = styles.fontWeight;\n      \n      // WCAG AA requirements\n      const isLargeText = fontSize >= 18 || (fontSize >= 14 && (fontWeight === 'bold' || fontWeight >= 700));\n      const requiredRatio = isLargeText ? 3.0 : 4.5;\n      \n      if (contrast < requiredRatio) {\n        contrastIssues.push({\n          element: element.tagName,\n          id: element.id,\n          className: element.className,\n          textColor,\n          backgroundColor,\n          contrast: contrast.toFixed(2),\n          required: requiredRatio,\n          fontSize,\n          fontWeight,\n          text: element.textContent?.substring(0, 50) + '...'\n        });\n      }\n    });\n\n    return {\n      totalElements: textElements.length,\n      contrastIssues,\n      passed: contrastIssues.length === 0\n    };\n  }\n\n  // Test financial forms accessibility\n  async testFormAccessibility() {\n    console.log('📝 Testing form accessibility...');\n    \n    const forms = document.querySelectorAll('form');\n    const formIssues = [];\n\n    forms.forEach((form, formIndex) => {\n      const inputs = form.querySelectorAll('input, select, textarea');\n      \n      inputs.forEach(input => {\n        const issues = [];\n        \n        // Check for labels\n        const hasLabel = this.hasAssociatedLabel(input);\n        if (!hasLabel) {\n          issues.push('Missing label');\n        }\n        \n        // Check for required field indication\n        if (input.required && !this.hasRequiredIndication(input)) {\n          issues.push('Required field not clearly indicated');\n        }\n        \n        // Check for error states\n        if (input.getAttribute('aria-invalid') === 'true' && !this.hasErrorMessage(input)) {\n          issues.push('Error state without error message');\n        }\n        \n        // Check for autocomplete on financial inputs\n        if (this.isFinancialInput(input) && !input.autocomplete) {\n          issues.push('Financial input missing autocomplete attribute');\n        }\n\n        if (issues.length > 0) {\n          formIssues.push({\n            formIndex,\n            inputType: input.type,\n            inputId: input.id,\n            inputName: input.name,\n            issues\n          });\n        }\n      });\n    });\n\n    return {\n      totalForms: forms.length,\n      formIssues,\n      passed: formIssues.length === 0\n    };\n  }\n\n  // Generate comprehensive accessibility report\n  generateReport() {\n    if (!this.lastTestResults) {\n      throw new Error('No test results available. Run tests first.');\n    }\n\n    const { violations, passes, incomplete, inapplicable } = this.lastTestResults;\n    \n    return {\n      summary: {\n        timestamp: new Date().toISOString(),\n        totalChecks: violations.length + passes.length + incomplete.length + inapplicable.length,\n        violations: violations.length,\n        passes: passes.length,\n        incomplete: incomplete.length,\n        inapplicable: inapplicable.length,\n        score: this.calculateAccessibilityScore()\n      },\n      violations: violations.map(violation => ({\n        id: violation.id,\n        impact: violation.impact,\n        description: violation.description,\n        help: violation.help,\n        helpUrl: violation.helpUrl,\n        nodes: violation.nodes.length,\n        tags: violation.tags\n      })),\n      recommendations: this.generateRecommendations(violations),\n      financialSpecific: this.getFinancialAccessibilityInsights()\n    };\n  }\n\n  // Calculate accessibility score (0-100)\n  calculateAccessibilityScore() {\n    if (!this.lastTestResults) return 0;\n\n    const { violations, passes } = this.lastTestResults;\n    const totalTests = violations.length + passes.length;\n    \n    if (totalTests === 0) return 100;\n\n    // Weight violations by impact\n    const impactWeights = { critical: 4, serious: 3, moderate: 2, minor: 1 };\n    const violationScore = violations.reduce((score, violation) => {\n      return score + (impactWeights[violation.impact] || 1);\n    }, 0);\n\n    const maxPossibleScore = totalTests * 4; // Assuming all could be critical\n    return Math.max(0, 100 - (violationScore / maxPossibleScore) * 100);\n  }\n\n  // Generate specific recommendations for financial applications\n  generateRecommendations(violations) {\n    const recommendations = [];\n\n    violations.forEach(violation => {\n      switch (violation.id) {\n        case 'color-contrast':\n          recommendations.push({\n            category: 'Visual Design',\n            priority: 'High',\n            issue: 'Insufficient color contrast',\n            solution: 'Ensure text colors meet WCAG AA standards (4.5:1 for normal text, 3:1 for large text)',\n            financialContext: 'Critical for reading financial data and avoiding misinterpretation of numbers'\n          });\n          break;\n          \n        case 'keyboard-navigation':\n          recommendations.push({\n            category: 'Keyboard Access',\n            priority: 'High',\n            issue: 'Keyboard navigation issues',\n            solution: 'Ensure all interactive elements are keyboard accessible with visible focus indicators',\n            financialContext: 'Essential for users who rely on keyboard navigation to access financial tools'\n          });\n          break;\n          \n        case 'label':\n          recommendations.push({\n            category: 'Form Controls',\n            priority: 'High',\n            issue: 'Missing form labels',\n            solution: 'Add proper labels to all form controls, especially financial input fields',\n            financialContext: 'Critical for screen readers to understand financial input requirements'\n          });\n          break;\n          \n        case 'aria-hidden-focus':\n          recommendations.push({\n            category: 'ARIA Usage',\n            priority: 'Medium',\n            issue: 'Focusable elements hidden from screen readers',\n            solution: 'Review aria-hidden usage on interactive elements',\n            financialContext: 'May hide important financial controls from assistive technology users'\n          });\n          break;\n      }\n    });\n\n    return recommendations;\n  }\n\n  // Get financial application specific accessibility insights\n  getFinancialAccessibilityInsights() {\n    const insights = [];\n\n    // Check for financial data tables\n    const tables = document.querySelectorAll('table');\n    if (tables.length > 0) {\n      insights.push({\n        component: 'Data Tables',\n        recommendation: 'Ensure financial data tables have proper headers and scope attributes for screen reader navigation'\n      });\n    }\n\n    // Check for charts\n    const charts = document.querySelectorAll('[data-chart], .recharts-wrapper, canvas');\n    if (charts.length > 0) {\n      insights.push({\n        component: 'Charts and Graphs',\n        recommendation: 'Provide alternative text descriptions and data tables for financial charts'\n      });\n    }\n\n    // Check for calculators\n    const calculators = document.querySelectorAll('[data-calculator], .calculator');\n    if (calculators.length > 0) {\n      insights.push({\n        component: 'Financial Calculators',\n        recommendation: 'Ensure calculator inputs have clear labels and results are announced to screen readers'\n      });\n    }\n\n    return insights;\n  }\n\n  // Utility methods\n  getFocusableElements() {\n    const focusableSelectors = [\n      'a[href]',\n      'button:not([disabled])',\n      'input:not([disabled])',\n      'select:not([disabled])',\n      'textarea:not([disabled])',\n      '[tabindex]:not([tabindex=\"-1\"])'\n    ];\n    \n    return Array.from(document.querySelectorAll(focusableSelectors.join(',')));\n  }\n\n  hasAssociatedLabel(input) {\n    const id = input.id;\n    const ariaLabel = input.getAttribute('aria-label');\n    const ariaLabelledby = input.getAttribute('aria-labelledby');\n    \n    if (ariaLabel || ariaLabelledby) return true;\n    if (id && document.querySelector(`label[for=\"${id}\"]`)) return true;\n    \n    // Check for wrapping label\n    const parentLabel = input.closest('label');\n    return !!parentLabel;\n  }\n\n  hasRequiredIndication(input) {\n    const ariaRequired = input.getAttribute('aria-required');\n    const requiredAttr = input.hasAttribute('required');\n    const hasRequiredText = this.hasRequiredTextIndicator(input);\n    \n    return ariaRequired === 'true' || requiredAttr || hasRequiredText;\n  }\n\n  hasRequiredTextIndicator(input) {\n    const label = this.getAssociatedLabel(input);\n    if (!label) return false;\n    \n    const text = label.textContent || '';\n    return text.includes('*') || text.toLowerCase().includes('required');\n  }\n\n  hasErrorMessage(input) {\n    const ariaDescribedby = input.getAttribute('aria-describedby');\n    if (ariaDescribedby) {\n      const errorElement = document.getElementById(ariaDescribedby);\n      return errorElement && errorElement.textContent;\n    }\n    return false;\n  }\n\n  isFinancialInput(input) {\n    const financialTypes = ['number', 'email', 'tel'];\n    const financialNames = ['amount', 'price', 'rate', 'percent', 'currency', 'value'];\n    \n    return financialTypes.includes(input.type) || \n           financialNames.some(name => input.name?.toLowerCase().includes(name));\n  }\n\n  getAssociatedLabel(input) {\n    const id = input.id;\n    if (id) {\n      const label = document.querySelector(`label[for=\"${id}\"]`);\n      if (label) return label;\n    }\n    \n    return input.closest('label');\n  }\n\n  // Simplified contrast ratio calculation\n  calculateContrastRatio(color1, color2) {\n    // This is a simplified version - in production use a proper color contrast library\n    const rgb1 = this.parseColor(color1);\n    const rgb2 = this.parseColor(color2);\n    \n    const l1 = this.getLuminance(rgb1);\n    const l2 = this.getLuminance(rgb2);\n    \n    const lighter = Math.max(l1, l2);\n    const darker = Math.min(l1, l2);\n    \n    return (lighter + 0.05) / (darker + 0.05);\n  }\n\n  parseColor(color) {\n    // Simple RGB parsing - expand for production use\n    const match = color.match(/rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\n    if (match) {\n      return [parseInt(match[1]), parseInt(match[2]), parseInt(match[3])];\n    }\n    return [0, 0, 0]; // Default to black\n  }\n\n  getLuminance([r, g, b]) {\n    const [rs, gs, bs] = [r, g, b].map(c => {\n      c = c / 255;\n      return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n    });\n    return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n  }\n\n  logResults(results) {\n    console.group('♿ Accessibility Test Results');\n    console.log(`✅ Passed: ${results.passes.length}`);\n    console.log(`❌ Violations: ${results.violations.length}`);\n    console.log(`⚠️  Incomplete: ${results.incomplete.length}`);\n    console.log(`➖ Not applicable: ${results.inapplicable.length}`);\n    \n    if (results.violations.length > 0) {\n      console.warn('Violations found:');\n      results.violations.forEach(violation => {\n        console.warn(`- ${violation.id}: ${violation.description}`);\n      });\n    }\n    console.groupEnd();\n  }\n\n  reportViolations(violations) {\n    violations.forEach(violation => {\n      violation.nodes.forEach(node => {\n        console.error('Accessibility violation:', {\n          rule: violation.id,\n          impact: violation.impact,\n          element: node.target,\n          message: node.failureSummary\n        });\n      });\n    });\n  }\n\n  storeResults(results) {\n    try {\n      const reportData = {\n        timestamp: Date.now(),\n        url: window.location.href,\n        violations: results.violations.length,\n        passes: results.passes.length,\n        score: this.calculateAccessibilityScore()\n      };\n      \n      const existingReports = JSON.parse(localStorage.getItem('accessibility-reports') || '[]');\n      existingReports.push(reportData);\n      \n      // Keep only last 10 reports\n      if (existingReports.length > 10) {\n        existingReports.splice(0, existingReports.length - 10);\n      }\n      \n      localStorage.setItem('accessibility-reports', JSON.stringify(existingReports));\n    } catch (error) {\n      console.error('Failed to store accessibility results:', error);\n    }\n  }\n}\n\n// Create singleton instance\nexport const accessibilityTester = new AccessibilityTester();\n\n// React hook for accessibility testing\nexport function useAccessibilityTester() {\n  return {\n    runTests: (element, options) => accessibilityTester.runTests(element, options),\n    testFinancialComponent: (selector, type) => accessibilityTester.testFinancialComponent(selector, type),\n    testKeyboardNavigation: () => accessibilityTester.testKeyboardNavigation(),\n    testColorContrast: () => accessibilityTester.testColorContrast(),\n    testFormAccessibility: () => accessibilityTester.testFormAccessibility(),\n    generateReport: () => accessibilityTester.generateReport(),\n    getScore: () => accessibilityTester.calculateAccessibilityScore()\n  };\n}\n\nexport default AccessibilityTester;","import { useState, useEffect, useCallback, useRef } from 'react';\nimport { accessibilityTester } from '../utils/accessibilityTesting';\nimport { reportPerformanceMetric } from '../utils/performanceMonitoring';\n\n// React hook for accessibility testing\nexport function useAccessibility(options = {}) {\n  const {\n    enabled = process.env.NODE_ENV === 'development',\n    autoTest = false,\n    testInterval = null,\n    componentType = 'generic',\n    onViolations = null,\n    onSuccess = null\n  } = options;\n\n  const [results, setResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [violations, setViolations] = useState([]);\n  const [score, setScore] = useState(null);\n  const [lastTestTime, setLastTestTime] = useState(null);\n\n  const elementRef = useRef(null);\n  const intervalRef = useRef(null);\n\n  // Run accessibility tests\n  const runTests = useCallback(async (element = null, testOptions = {}) => {\n    if (!enabled) return null;\n\n    const targetElement = element || elementRef.current || document;\n    setIsLoading(true);\n\n    try {\n      const testResults = await accessibilityTester.runTests(targetElement, testOptions);\n      \n      setResults(testResults);\n      setViolations(testResults.violations || []);\n      setScore(accessibilityTester.calculateAccessibilityScore());\n      setLastTestTime(Date.now());\n\n      // Report to performance monitoring\n      reportPerformanceMetric('accessibility_test', {\n        violations: testResults.violations?.length || 0,\n        score: accessibilityTester.calculateAccessibilityScore(),\n        componentType,\n        timestamp: Date.now()\n      });\n\n      // Call callbacks\n      if (testResults.violations?.length > 0) {\n        onViolations?.(testResults.violations);\n      } else {\n        onSuccess?.(testResults);\n      }\n\n      return testResults;\n    } catch (error) {\n      console.error('Accessibility test failed:', error);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [enabled, componentType, onViolations, onSuccess]);\n\n  // Test specific financial component\n  const testFinancialComponent = useCallback(async (selector, type = componentType) => {\n    if (!enabled) return null;\n\n    setIsLoading(true);\n    try {\n      const testResults = await accessibilityTester.testFinancialComponent(selector, type);\n      \n      setResults(testResults);\n      setViolations(testResults.violations || []);\n      setScore(accessibilityTester.calculateAccessibilityScore());\n      setLastTestTime(Date.now());\n\n      // Report specific component test\n      reportPerformanceMetric('financial_component_accessibility', {\n        componentType: type,\n        violations: testResults.violations?.length || 0,\n        score: accessibilityTester.calculateAccessibilityScore(),\n        timestamp: Date.now()\n      });\n\n      return testResults;\n    } catch (error) {\n      console.error('Financial component accessibility test failed:', error);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [enabled, componentType]);\n\n  // Test keyboard navigation\n  const testKeyboardNavigation = useCallback(async () => {\n    if (!enabled) return null;\n\n    try {\n      const navResults = await accessibilityTester.testKeyboardNavigation();\n      \n      reportPerformanceMetric('keyboard_navigation_test', {\n        focusableElements: navResults.focusableElementsCount,\n        tabOrderIssues: navResults.tabOrderIssues?.length || 0,\n        focusVisibilityIssues: navResults.focusVisibilityIssues?.length || 0,\n        passed: navResults.passed,\n        timestamp: Date.now()\n      });\n\n      return navResults;\n    } catch (error) {\n      console.error('Keyboard navigation test failed:', error);\n      return null;\n    }\n  }, [enabled]);\n\n  // Test color contrast\n  const testColorContrast = useCallback(async () => {\n    if (!enabled) return null;\n\n    try {\n      const contrastResults = await accessibilityTester.testColorContrast();\n      \n      reportPerformanceMetric('color_contrast_test', {\n        totalElements: contrastResults.totalElements,\n        contrastIssues: contrastResults.contrastIssues?.length || 0,\n        passed: contrastResults.passed,\n        timestamp: Date.now()\n      });\n\n      return contrastResults;\n    } catch (error) {\n      console.error('Color contrast test failed:', error);\n      return null;\n    }\n  }, [enabled]);\n\n  // Test form accessibility\n  const testFormAccessibility = useCallback(async () => {\n    if (!enabled) return null;\n\n    try {\n      const formResults = await accessibilityTester.testFormAccessibility();\n      \n      reportPerformanceMetric('form_accessibility_test', {\n        totalForms: formResults.totalForms,\n        formIssues: formResults.formIssues?.length || 0,\n        passed: formResults.passed,\n        timestamp: Date.now()\n      });\n\n      return formResults;\n    } catch (error) {\n      console.error('Form accessibility test failed:', error);\n      return null;\n    }\n  }, [enabled]);\n\n  // Generate comprehensive report\n  const generateReport = useCallback(() => {\n    if (!results) return null;\n\n    try {\n      const report = accessibilityTester.generateReport();\n      \n      // Store report data for performance monitoring\n      reportPerformanceMetric('accessibility_report_generated', {\n        score: report.summary.score,\n        violations: report.summary.violations,\n        totalChecks: report.summary.totalChecks,\n        timestamp: Date.now()\n      });\n\n      return report;\n    } catch (error) {\n      console.error('Failed to generate accessibility report:', error);\n      return null;\n    }\n  }, [results]);\n\n  // Set up automatic testing\n  useEffect(() => {\n    if (!enabled || !autoTest) return;\n\n    const runAutoTest = () => {\n      runTests();\n    };\n\n    // Run initial test\n    runAutoTest();\n\n    // Set up interval if specified\n    if (testInterval) {\n      intervalRef.current = setInterval(runAutoTest, testInterval);\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [enabled, autoTest, testInterval, runTests]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    // State\n    results,\n    violations,\n    score,\n    isLoading,\n    lastTestTime,\n    \n    // Test functions\n    runTests,\n    testFinancialComponent,\n    testKeyboardNavigation,\n    testColorContrast,\n    testFormAccessibility,\n    generateReport,\n    \n    // Element ref for targeting tests\n    elementRef\n  };\n}\n\n// Hook for monitoring accessibility across the entire app\nexport function useAppAccessibility() {\n  const [globalScore, setGlobalScore] = useState(null);\n  const [recentViolations, setRecentViolations] = useState([]);\n  const [testHistory, setTestHistory] = useState([]);\n\n  const runGlobalAccessibilityCheck = useCallback(async () => {\n    try {\n      // Run comprehensive tests on the entire document\n      const results = await accessibilityTester.runTests(document);\n      const score = accessibilityTester.calculateAccessibilityScore();\n      \n      setGlobalScore(score);\n      setRecentViolations(results.violations || []);\n      \n      // Update test history\n      const historyEntry = {\n        timestamp: Date.now(),\n        score,\n        violations: results.violations?.length || 0,\n        url: window.location.pathname\n      };\n      \n      setTestHistory(prev => [...prev.slice(-9), historyEntry]); // Keep last 10 entries\n      \n      // Report global metrics\n      reportPerformanceMetric('global_accessibility_check', {\n        score,\n        violations: results.violations?.length || 0,\n        url: window.location.pathname,\n        timestamp: Date.now()\n      });\n\n      return results;\n    } catch (error) {\n      console.error('Global accessibility check failed:', error);\n      return null;\n    }\n  }, []);\n\n  // Check accessibility when route changes\n  useEffect(() => {\n    const checkOnRouteChange = () => {\n      setTimeout(() => {\n        runGlobalAccessibilityCheck();\n      }, 1000); // Allow time for route to fully load\n    };\n\n    // Listen for navigation changes\n    window.addEventListener('popstate', checkOnRouteChange);\n    \n    // Run initial check\n    checkOnRouteChange();\n\n    return () => {\n      window.removeEventListener('popstate', checkOnRouteChange);\n    };\n  }, [runGlobalAccessibilityCheck]);\n\n  return {\n    globalScore,\n    recentViolations,\n    testHistory,\n    runGlobalAccessibilityCheck\n  };\n}\n\n// Hook for accessibility testing in financial components\nexport function useFinancialAccessibility(componentType) {\n  const accessibility = useAccessibility({\n    componentType,\n    autoTest: true,\n    testInterval: 30000, // Test every 30 seconds in development\n    onViolations: (violations) => {\n      // Log financial component specific violations\n      console.warn(`Financial component (${componentType}) accessibility violations:`, violations);\n    }\n  });\n\n  // Enhanced testing for financial components\n  const testFinancialFeatures = useCallback(async () => {\n    const results = {};\n\n    try {\n      // Test keyboard navigation (critical for financial apps)\n      results.keyboardNav = await accessibility.testKeyboardNavigation();\n      \n      // Test color contrast (important for reading financial data)\n      results.colorContrast = await accessibility.testColorContrast();\n      \n      // Test forms if component contains them\n      results.formAccessibility = await accessibility.testFormAccessibility();\n      \n      // Generate comprehensive report\n      results.report = accessibility.generateReport();\n\n      return results;\n    } catch (error) {\n      console.error('Financial accessibility testing failed:', error);\n      return null;\n    }\n  }, [accessibility, componentType]);\n\n  return {\n    ...accessibility,\n    testFinancialFeatures\n  };\n}\n\n// Hook for real-time accessibility monitoring\nexport function useAccessibilityMonitor(options = {}) {\n  const {\n    threshold = 80, // Minimum acceptable score\n    alertOnViolations = true,\n    monitorInterval = 60000 // Check every minute\n  } = options;\n\n  const [isMonitoring, setIsMonitoring] = useState(false);\n  const [alerts, setAlerts] = useState([]);\n  const intervalRef = useRef(null);\n\n  const startMonitoring = useCallback(() => {\n    if (isMonitoring) return;\n\n    setIsMonitoring(true);\n    \n    const monitor = async () => {\n      try {\n        const results = await accessibilityTester.runTests(document);\n        const score = accessibilityTester.calculateAccessibilityScore();\n        \n        // Check if score is below threshold\n        if (score < threshold) {\n          const alert = {\n            id: Date.now(),\n            type: 'low_score',\n            message: `Accessibility score (${score}) is below threshold (${threshold})`,\n            score,\n            violations: results.violations?.length || 0,\n            timestamp: Date.now()\n          };\n          \n          setAlerts(prev => [...prev, alert]);\n          \n          if (alertOnViolations) {\n            console.warn('Accessibility Alert:', alert.message);\n          }\n        }\n        \n        // Check for critical violations\n        const criticalViolations = results.violations?.filter(v => v.impact === 'critical') || [];\n        if (criticalViolations.length > 0 && alertOnViolations) {\n          const alert = {\n            id: Date.now(),\n            type: 'critical_violations',\n            message: `${criticalViolations.length} critical accessibility violations found`,\n            violations: criticalViolations,\n            timestamp: Date.now()\n          };\n          \n          setAlerts(prev => [...prev, alert]);\n          console.error('Critical Accessibility Violations:', criticalViolations);\n        }\n\n        // Report monitoring metrics\n        reportPerformanceMetric('accessibility_monitoring', {\n          score,\n          violations: results.violations?.length || 0,\n          criticalViolations: criticalViolations.length,\n          timestamp: Date.now()\n        });\n\n      } catch (error) {\n        console.error('Accessibility monitoring failed:', error);\n      }\n    };\n\n    // Run initial check\n    monitor();\n    \n    // Set up interval\n    intervalRef.current = setInterval(monitor, monitorInterval);\n  }, [isMonitoring, threshold, alertOnViolations, monitorInterval]);\n\n  const stopMonitoring = useCallback(() => {\n    setIsMonitoring(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n\n  const clearAlerts = useCallback(() => {\n    setAlerts([]);\n  }, []);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    isMonitoring,\n    alerts,\n    startMonitoring,\n    stopMonitoring,\n    clearAlerts\n  };\n}","import React, { useState, useRef, useEffect } from 'react';\nimport { Plus, ChevronDown, ChevronRight, Calculator, FileText, TrendingUp, Edit2 } from 'lucide-react';\n\nimport { useFinancialAccessibility } from '../../hooks/useAccessibility';\n\nconst FinancialSpreadsheet = ({ data, onDataChange, onAdjustedValuesChange }) => {\n  const [activeStatement, setActiveStatement] = useState('incomeStatement');\n  const [adjustedValues, setAdjustedValues] = useState({});\n  \n  // Normalize incoming data to a safe structure to prevent undefined access\n  const safeData = React.useMemo(() => ({\n    periods: Array.isArray(data?.periods) ? data.periods : [],\n    statements: {\n      incomeStatement: data?.statements?.incomeStatement || {},\n      balanceSheet: data?.statements?.balanceSheet || {},\n      cashFlow: data?.statements?.cashFlow || {}\n    }\n  }), [data]);\n  \n  // Add accessibility monitoring for financial spreadsheet\n  const { elementRef, testFinancialFeatures } = useFinancialAccessibility('spreadsheet');\n  const [expandedSections, setExpandedSections] = useState({\n    // Income Statement\n    revenue: true,\n    costOfGoodsSold: true,\n    operatingExpenses: true,\n    salariesBenefits: true,\n    grossProfit: true,\n    operatingIncome: true,\n    incomeBeforeTax: true,\n    otherIncomeExpense: true,\n    // Balance Sheet\n    currentAssets: true,\n    nonCurrentAssets: true,\n    currentLiabilities: true,\n    nonCurrentLiabilities: true,\n    equity: true,\n    // Cash Flow\n    operatingActivities: true,\n    investingActivities: true,\n    financingActivities: true\n  });\n  \n  const [editingCell, setEditingCell] = useState(null);\n  const [cellValue, setCellValue] = useState('');\n  const inputRef = useRef(null);\n\n  // Initialize adjusted values from the active statement's latest period\n  useEffect(() => {\n    if (Object.keys(adjustedValues).length === 0) {\n      const statement = safeData?.statements?.[activeStatement];\n      if (statement) {\n        const newAdjustedValues = {};\n        const lastIndex = Math.max(0, (safeData?.periods?.length || 0) - 1);\n        Object.keys(statement).forEach((key) => {\n          const val = statement[key]?.[lastIndex];\n          if (val !== undefined) {\n            newAdjustedValues[key] = val;\n          }\n        });\n        setAdjustedValues(newAdjustedValues);\n        if (onAdjustedValuesChange) {\n          onAdjustedValuesChange(newAdjustedValues);\n        }\n      }\n    }\n  }, [safeData, activeStatement, adjustedValues, onAdjustedValuesChange]);\n\n  // Get current template based on active statement\n  const getCurrentTemplate = () => {\n    switch (activeStatement) {\n      case 'balanceSheet':\n        return balanceSheetTemplate;\n      case 'cashFlow':\n        return cashFlowTemplate;\n      default:\n        return incomeStatementTemplate;\n    }\n  };\n\n\n  // Income Statement Template Structure with Enhanced Color Coding\n  const incomeStatementTemplate = {\n    revenue: {\n      title: 'Revenue',\n      color: 'bg-emerald-50 border-emerald-300',\n      headerBg: 'bg-emerald-600',\n      textColor: 'text-emerald-900',\n      items: [\n        { key: 'energyDevices', label: 'Energy Devices', level: 1 },\n        { key: 'injectables', label: 'Injectables', level: 1 },\n        { key: 'wellness', label: 'Wellness', level: 1 },\n        { key: 'weightloss', label: 'Weightloss', level: 1 },\n        { key: 'retailSales', label: 'Retail Sales', level: 1 },\n        { key: 'surgery', label: 'Surgery', level: 1 },\n        { key: 'totalRevenue', label: 'Total Revenue', level: 0, bold: true, formula: true }\n      ]\n    },\n    costOfGoodsSold: {\n      title: 'Cost of Goods Sold',\n      color: 'bg-red-50 border-red-300',\n      headerBg: 'bg-red-600',\n      textColor: 'text-red-900',\n      items: [\n        { key: 'energyDeviceSupplies', label: 'Energy Device Supplies', level: 1 },\n        { key: 'injectablesCogs', label: 'Injectables', level: 1 },\n        { key: 'wellnessCogs', label: 'Wellness', level: 1 },\n        { key: 'weightlossCogs', label: 'Weightloss', level: 1 },\n        { key: 'retailProducts', label: 'Retail Products', level: 1 },\n        { key: 'surgicalSupplies', label: 'Surgical Supplies', level: 1 },\n        { key: 'totalCostOfGoodsSold', label: 'Total Cost of Goods Sold', level: 0, bold: true, formula: true }\n      ]\n    },\n    grossProfit: {\n      title: 'Gross Profit',\n      color: 'bg-blue-50 border-blue-300',\n      headerBg: 'bg-blue-600',\n      textColor: 'text-blue-900',\n      items: [\n        { key: 'grossProfit', label: 'Gross Profit', level: 0, bold: true, formula: true }\n      ]\n    },\n    salariesBenefits: {\n      title: 'Salaries & Benefits',\n      color: 'bg-purple-50 border-purple-300',\n      headerBg: 'bg-purple-600',\n      textColor: 'text-purple-900',\n      items: [\n        { key: 'employeeBenefits', label: 'Employee Benefits', level: 1 },\n        { key: 'payroll', label: 'Payroll', level: 1 },\n        { key: 'payrollTaxes', label: 'Payroll Taxes', level: 1 },\n        { key: 'totalSalariesBenefits', label: 'Total Salaries & Benefits', level: 0, bold: true, formula: true }\n      ]\n    },\n    operatingExpenses: {\n      title: 'Operating Expenses',\n      color: 'bg-orange-50 border-orange-300',\n      headerBg: 'bg-orange-600',\n      textColor: 'text-orange-900',\n      items: [\n        { key: 'marketing', label: 'Marketing', level: 1 },\n        { key: 'automobile', label: 'Automobile', level: 1 },\n        { key: 'creditCardBankCharges', label: 'Credit Card and Bank Charges', level: 1 },\n        { key: 'donations', label: 'Donations', level: 1 },\n        { key: 'computerTelephoneUtilities', label: 'Computer, Telephone, and Utilities', level: 1 },\n        { key: 'depreciation', label: 'Depreciation', level: 1 },\n        { key: 'duesSubscriptions', label: 'Dues & Subscriptions', level: 1 },\n        { key: 'education', label: 'Education', level: 1 },\n        { key: 'equipmentRental', label: 'Equipment Rental', level: 1 },\n        { key: 'insurance', label: 'Insurance', level: 1 },\n        { key: 'interestExpense', label: 'Interest Expense', level: 1 },\n        { key: 'travelMealsEntertainment', label: 'Travel, Meals, and Entertainment', level: 1 },\n        { key: 'rent', label: 'Rent', level: 1 },\n        { key: 'officeExpenses', label: 'Office Expenses', level: 1 },\n        { key: 'professionalFees', label: 'Professional Fees', level: 1 },\n        { key: 'repairsMaintenance', label: 'Repairs & Maintenance', level: 1 },\n        { key: 'localTax', label: 'Local Tax', level: 1 },\n        { key: 'stateTax', label: 'State Tax', level: 1 },\n        { key: 'totalOperatingExpense', label: 'Total Operating Expense', level: 0, bold: true, formula: true }\n      ]\n    },\n    operatingIncome: {\n      title: 'Operating Income',\n      color: 'bg-teal-50 border-teal-300',\n      headerBg: 'bg-teal-600',\n      textColor: 'text-teal-900',\n      items: [\n        { key: 'operatingIncome', label: 'Operating Income', level: 0, bold: true }\n      ]\n    },\n    otherIncomeExpense: {\n      title: 'Other Income / (Expense)',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-600',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'gainOnAssetSale', label: 'Gain (Loss) On Asset Sale', level: 1 },\n        { key: 'interestIncome', label: 'Interest Income', level: 1 },\n        { key: 'otherExpenses', label: 'Other Expenses', level: 1 },\n        { key: 'totalOtherIncomeExpense', label: 'Total Other Income / (Expenses)', level: 0, bold: true, formula: true }\n      ]\n    },\n    incomeBeforeTax: {\n      title: 'Net Income Before Taxes',\n      color: 'bg-amber-50 border-amber-300',\n      headerBg: 'bg-amber-600',\n      textColor: 'text-amber-900',\n      items: [\n        { key: 'incomeBeforeTax', label: 'Net Income Before Taxes', level: 0, bold: true }\n      ]\n    }\n  };\n\n  // Balance Sheet Template Structure\n  const balanceSheetTemplate = {\n    currentAssets: {\n      title: 'Current Assets',\n      color: 'bg-emerald-50 border-emerald-300',\n      headerBg: 'bg-emerald-600',\n      textColor: 'text-emerald-900',\n      items: [\n        { key: 'cash', label: 'Cash and Cash Equivalents', level: 1 },\n        { key: 'receivables', label: 'Accounts Receivable', level: 1 },\n        { key: 'inventory', label: 'Inventory', level: 1 },\n        { key: 'prepaidExpenses', label: 'Prepaid Expenses', level: 1 },\n        { key: 'otherCurrentAssets', label: 'Other Current Assets', level: 1 },\n        { key: 'totalCurrentAssets', label: 'Total Current Assets', level: 0, formula: true, bold: true }\n      ]\n    },\n    nonCurrentAssets: {\n      title: 'Non-Current Assets',\n      color: 'bg-blue-50 border-blue-300',\n      headerBg: 'bg-blue-600',\n      textColor: 'text-blue-900',\n      items: [\n        { key: 'ppe', label: 'Property, Plant & Equipment', level: 1 },\n        { key: 'accumulatedDepreciation', label: 'Less: Accumulated Depreciation', level: 1 },\n        { key: 'netPPE', label: 'Net Property, Plant & Equipment', level: 1, formula: true },\n        { key: 'intangibleAssets', label: 'Intangible Assets', level: 1 },\n        { key: 'goodwill', label: 'Goodwill', level: 1 },\n        { key: 'otherNonCurrentAssets', label: 'Other Non-Current Assets', level: 1 },\n        { key: 'totalNonCurrentAssets', label: 'Total Non-Current Assets', level: 0, formula: true, bold: true }\n      ]\n    },\n    totalAssets: {\n      title: 'Total Assets',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'totalAssets', label: 'Total Assets', level: 0, formula: true, bold: true }\n      ]\n    },\n    currentLiabilities: {\n      title: 'Current Liabilities',\n      color: 'bg-red-50 border-red-300',\n      headerBg: 'bg-red-600',\n      textColor: 'text-red-900',\n      items: [\n        { key: 'accountsPayable', label: 'Accounts Payable', level: 1 },\n        { key: 'accruedExpenses', label: 'Accrued Expenses', level: 1 },\n        { key: 'shortTermDebt', label: 'Short-term Debt', level: 1 },\n        { key: 'currentPortionLongTermDebt', label: 'Current Portion of Long-term Debt', level: 1 },\n        { key: 'otherCurrentLiabilities', label: 'Other Current Liabilities', level: 1 },\n        { key: 'totalCurrentLiabilities', label: 'Total Current Liabilities', level: 0, formula: true, bold: true }\n      ]\n    },\n    nonCurrentLiabilities: {\n      title: 'Non-Current Liabilities',\n      color: 'bg-orange-50 border-orange-300',\n      headerBg: 'bg-orange-600',\n      textColor: 'text-orange-900',\n      items: [\n        { key: 'longTermDebt', label: 'Long-term Debt', level: 1 },\n        { key: 'deferredTaxLiabilities', label: 'Deferred Tax Liabilities', level: 1 },\n        { key: 'otherNonCurrentLiabilities', label: 'Other Non-Current Liabilities', level: 1 },\n        { key: 'totalNonCurrentLiabilities', label: 'Total Non-Current Liabilities', level: 0, formula: true, bold: true }\n      ]\n    },\n    totalLiabilities: {\n      title: 'Total Liabilities',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'totalLiabilities', label: 'Total Liabilities', level: 0, formula: true, bold: true }\n      ]\n    },\n    equity: {\n      title: 'Shareholders\\' Equity',\n      color: 'bg-purple-50 border-purple-300',\n      headerBg: 'bg-purple-600',\n      textColor: 'text-purple-900',\n      items: [\n        { key: 'commonStock', label: 'Common Stock', level: 1 },\n        { key: 'retainedEarnings', label: 'Retained Earnings', level: 1 },\n        { key: 'otherEquity', label: 'Other Comprehensive Income', level: 1 },\n        { key: 'totalEquity', label: 'Total Shareholders\\' Equity', level: 0, formula: true, bold: true }\n      ]\n    },\n    totalLiabilitiesEquity: {\n      title: 'Total Liabilities and Equity',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'totalLiabilitiesEquity', label: 'Total Liabilities and Shareholders\\' Equity', level: 0, formula: true, bold: true }\n      ]\n    }\n  };\n\n  // Cash Flow Template Structure\n  const cashFlowTemplate = {\n    operatingActivities: {\n      title: 'Operating Activities',\n      color: 'bg-emerald-50 border-emerald-300',\n      headerBg: 'bg-emerald-600',\n      textColor: 'text-emerald-900',\n      items: [\n        { key: 'netIncome', label: 'Net Income', level: 1 },\n        { key: 'depreciation', label: 'Depreciation and Amortization', level: 1 },\n        { key: 'receivablesChange', label: 'Change in Accounts Receivable', level: 1 },\n        { key: 'inventoryChange', label: 'Change in Inventory', level: 1 },\n        { key: 'payablesChange', label: 'Change in Accounts Payable', level: 1 },\n        { key: 'otherOperatingChanges', label: 'Other Operating Changes', level: 1 },\n        { key: 'netCashFromOperating', label: 'Net Cash from Operating Activities', level: 0, formula: true, bold: true }\n      ]\n    },\n    investingActivities: {\n      title: 'Investing Activities',\n      color: 'bg-blue-50 border-blue-300',\n      headerBg: 'bg-blue-600',\n      textColor: 'text-blue-900',\n      items: [\n        { key: 'capex', label: 'Capital Expenditures', level: 1 },\n        { key: 'acquisitions', label: 'Acquisitions', level: 1 },\n        { key: 'assetSales', label: 'Asset Sales', level: 1 },\n        { key: 'otherInvestingActivities', label: 'Other Investing Activities', level: 1 },\n        { key: 'netCashFromInvesting', label: 'Net Cash from Investing Activities', level: 0, formula: true, bold: true }\n      ]\n    },\n    financingActivities: {\n      title: 'Financing Activities',\n      color: 'bg-purple-50 border-purple-300',\n      headerBg: 'bg-purple-600',\n      textColor: 'text-purple-900',\n      items: [\n        { key: 'debtIssuance', label: 'Debt Issuance', level: 1 },\n        { key: 'debtRepayment', label: 'Debt Repayment', level: 1 },\n        { key: 'equityIssuance', label: 'Equity Issuance', level: 1 },\n        { key: 'dividends', label: 'Dividends Paid', level: 1 },\n        { key: 'otherFinancingActivities', label: 'Other Financing Activities', level: 1 },\n        { key: 'netCashFromFinancing', label: 'Net Cash from Financing Activities', level: 0, formula: true, bold: true }\n      ]\n    },\n    netCashFlow: {\n      title: 'Net Cash Flow',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'netCashFlow', label: 'Net Change in Cash', level: 0, formula: true, bold: true },\n        { key: 'beginningCash', label: 'Cash at Beginning of Period', level: 1 },\n        { key: 'endingCash', label: 'Cash at End of Period', level: 0, formula: true, bold: true }\n      ]\n    }\n  };\n\n  const currentTemplate = getCurrentTemplate();\n  // Resolve the data object for the currently active statement\n  const currentStatementData = safeData.statements[activeStatement] || {};\n\n  const toggleSection = (section) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n\n  const handleCellClick = (rowKey, periodIndex, isAdjusted = false) => {\n    setEditingCell({ rowKey, periodIndex, isAdjusted });\n    let currentValue = '';\n    \n    if (isAdjusted) {\n      currentValue = adjustedValues[rowKey] || '';\n    } else {\n      currentValue = currentStatementData[rowKey]?.[periodIndex] || '';\n    }\n    \n    setCellValue(currentValue.toString());\n  };\n\n  const handleCellBlur = () => {\n    if (editingCell) {\n      const { rowKey, periodIndex, isAdjusted } = editingCell;\n      const parsed = parseFloat(cellValue);\n      const newValue = isNaN(parsed) ? 0 : parsed;\n      \n      if (isAdjusted) {\n        // Update adjusted values\n        const newAdjustedValues = {\n          ...adjustedValues,\n          [rowKey]: newValue\n        };\n        setAdjustedValues(newAdjustedValues);\n        if (onAdjustedValuesChange) {\n          onAdjustedValuesChange(newAdjustedValues);\n        }\n      } else {\n        // Update original data\n        const newData = { ...data };\n        // Safely deep-clone the path we are updating to avoid mutating upstream state\n        newData.statements = { ...(newData.statements || {}) };\n        const statementKey = activeStatement || 'incomeStatement';\n        newData.statements[statementKey] = { ...(newData.statements[statementKey] || {}) };\n        const existingRow = newData.statements[statementKey][rowKey] || {};\n        newData.statements[statementKey][rowKey] = { ...existingRow, [periodIndex]: newValue };\n        onDataChange(newData);\n      }\n      \n      setEditingCell(null);\n      setCellValue('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleCellBlur();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      setEditingCell(null);\n      setCellValue('');\n    } else if (e.key === 'Tab') {\n      e.preventDefault();\n      handleCellBlur();\n      // Could implement tab navigation to next cell here\n    }\n  };\n\n  // Input validation for numeric values\n  const validateNumericInput = (value) => {\n    // Allow negative numbers, decimals, and empty strings\n    const numericRegex = /^-?\\d*\\.?\\d*$/;\n    return numericRegex.test(value) || value === '';\n  };\n\n  const formatNumber = (value) => {\n    if (!value && value !== 0) return '';\n    \n    // Convert to number if it's a string\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    if (isNaN(numValue)) return '';\n    \n    // Format based on magnitude for better readability\n    const absValue = Math.abs(numValue);\n    let formattedValue;\n    \n    if (absValue >= 1000000) {\n      // Millions\n      formattedValue = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 1,\n        maximumFractionDigits: 1\n      }).format(numValue / 1000000);\n      formattedValue += 'M';\n    } else if (absValue >= 1000) {\n      // Thousands\n      formattedValue = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      }).format(numValue);\n    } else {\n      // Less than 1000\n      formattedValue = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }).format(numValue);\n    }\n    \n    return formattedValue;\n  };\n\n  const addNewRow = () => {\n    const newRowLabel = prompt('Enter row label:');\n    if (newRowLabel) {\n      const newData = { ...data };\n      // Add to template structure (this could be enhanced to persist custom rows)\n      onDataChange(newData);\n    }\n  };\n\n  const addPeriod = () => {\n    const newPeriodLabel = prompt('Enter period label (e.g., \"Year 5\"):');\n    if (newPeriodLabel) {\n      const newData = { ...data };\n      newData.periods = [...(newData.periods || []), newPeriodLabel];\n      onDataChange(newData);\n    }\n  };\n\n  useEffect(() => {\n    if (editingCell && inputRef.current) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, [editingCell]);\n\n  const renderRow = (item) => {\n    const { key, label, level, formula, bold } = item;\n    \n    // Enhanced spacing and visual hierarchy\n    const indentClass = level === 1 ? 'pl-8' : level === 2 ? 'pl-12' : 'pl-4';\n    const textWeight = bold ? 'font-bold' : level === 0 ? 'font-semibold' : 'font-medium';\n    const textSize = level === 0 ? 'text-sm' : 'text-sm';\n    const textColor = level === 0 ? 'text-slate-900' : 'text-slate-700';\n    const rowBg = level === 0 ? 'bg-slate-50/70' : 'bg-white';\n    const borderColor = level === 0 ? 'border-slate-200' : 'border-slate-100';\n    \n    return (\n      <tr key={key} className={`${rowBg} border-b ${borderColor} hover:bg-slate-50 transition-all duration-150 group`}>\n        {/* Account Name Column */}\n        <td className={`px-6 py-4 ${indentClass} ${textWeight} ${textSize} ${textColor}`}>\n          <div className=\"flex items-center gap-3\">\n            {level === 0 && (\n              <div className=\"w-1.5 h-4 bg-gradient-to-b from-blue-500 to-blue-600 rounded-full flex-shrink-0 shadow-sm\" />\n            )}\n            <span className=\"leading-tight\">{label}</span>\n            {formula && (\n              <div className=\"flex items-center gap-1\">\n                <Calculator size={14} className=\"text-blue-500/80 flex-shrink-0\" />\n                <span className=\"text-xs text-blue-600 font-medium px-1.5 py-0.5 bg-blue-50 rounded-md\">AUTO</span>\n              </div>\n            )}\n          </div>\n        </td>\n        \n        {/* Units Column */}\n        <td className=\"px-4 py-4 text-center\">\n          <span className=\"text-xs font-medium text-slate-500 uppercase tracking-wide bg-slate-100 px-2 py-1 rounded-md\">\n            $ 000s\n          </span>\n        </td>\n        \n        {/* Period Columns */}\n        {safeData.periods.map((_, periodIndex) => (\n          <td key={periodIndex} className=\"px-4 py-4 text-right\">\n            {editingCell?.rowKey === key && editingCell?.periodIndex === periodIndex && !editingCell?.isAdjusted ? (\n              <div className=\"relative\">\n                <input\n                  ref={inputRef}\n                  type=\"text\"\n                  value={cellValue}\n                  onChange={(e) => {\n                    const newValue = e.target.value;\n                    if (validateNumericInput(newValue)) {\n                      setCellValue(newValue);\n                    }\n                  }}\n                  onBlur={handleCellBlur}\n                  onKeyDown={handleKeyPress}\n                  className=\"w-full px-3 py-2.5 bg-white border-2 border-blue-400 rounded-lg text-slate-900 text-right font-mono text-sm focus:outline-none focus:ring-4 focus:ring-blue-100 focus:border-blue-500 shadow-lg\"\n                  placeholder=\"0.00\"\n                />\n                <div className=\"absolute -top-2 -right-2 flex gap-1\">\n                  <button\n                    onClick={handleCellBlur}\n                    className=\"w-5 h-5 bg-emerald-500 hover:bg-emerald-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                  >\n                    ✓\n                  </button>\n                  <button\n                    onClick={() => {\n                      setEditingCell(null);\n                      setCellValue('');\n                    }}\n                    className=\"w-5 h-5 bg-red-500 hover:bg-red-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                  >\n                    ×\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <div\n                onClick={() => !formula && handleCellClick(key, periodIndex)}\n                className={`px-3 py-2.5 rounded-lg font-mono text-sm transition-all duration-200 min-h-[40px] flex items-center justify-end ${\n                  formula \n                    ? 'bg-gradient-to-r from-blue-50 to-blue-100 text-blue-800 font-semibold border border-blue-200 shadow-sm' \n                    : 'hover:bg-slate-100 text-slate-800 cursor-pointer border border-transparent hover:border-slate-200 hover:shadow-sm group-hover:bg-slate-50'\n                }`}\n              >\n                <span className={formula ? 'text-blue-900' : 'text-slate-700'}>\n                  {formatNumber(currentStatementData[key]?.[periodIndex]) || '—'}\n                </span>\n                {!formula && (\n                  <Edit2 size={12} className=\"ml-2 opacity-0 group-hover:opacity-40 text-slate-400 transition-opacity\" />\n                )}\n              </div>\n            )}\n          </td>\n        ))}\n        \n        {/* Adjusted Column */}\n        <td className=\"px-4 py-4 text-right bg-gradient-to-r from-amber-50 to-yellow-50 border-l-2 border-amber-300\">\n          {editingCell?.rowKey === key && editingCell?.isAdjusted ? (\n            <div className=\"relative\" data-testid={`adjusted-cell-${key}`}>\n              <input\n                ref={inputRef}\n                type=\"text\"\n                value={cellValue}\n                data-testid={`adjusted-input-${key}`}\n                onChange={(e) => {\n                  const newValue = e.target.value;\n                  if (validateNumericInput(newValue)) {\n                    setCellValue(newValue);\n                  }\n                }}\n                onBlur={handleCellBlur}\n                onKeyDown={handleKeyPress}\n                className=\"w-full px-3 py-2.5 bg-white border-2 border-amber-400 rounded-lg text-slate-900 text-right font-mono text-sm focus:outline-none focus:ring-4 focus:ring-amber-100 focus:border-amber-500 shadow-lg\"\n                placeholder=\"0.00\"\n              />\n              <div className=\"absolute -top-2 -right-2 flex gap-1\">\n                <button\n                  onClick={handleCellBlur}\n                  className=\"w-5 h-5 bg-emerald-500 hover:bg-emerald-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                >\n                  ✓\n                </button>\n                <button\n                  onClick={() => {\n                    setEditingCell(null);\n                    setCellValue('');\n                  }}\n                  className=\"w-5 h-5 bg-red-500 hover:bg-red-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                >\n                  ×\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div\n              onClick={() => !formula && handleCellClick(key, null, true)}\n              className={`px-3 py-2.5 rounded-lg font-mono text-sm transition-all duration-200 min-h-[40px] flex items-center justify-end ${\n                formula \n                  ? 'bg-gradient-to-r from-blue-50 to-blue-100 text-blue-800 font-semibold border border-blue-200 shadow-sm' \n                  : 'hover:bg-slate-100 text-slate-800 cursor-pointer border border-transparent hover:border-slate-200 hover:shadow-sm group-hover:bg-slate-50'\n              }`}\n              data-testid={`adjusted-cell-${key}`}\n            >\n              <span className={formula ? 'text-amber-900' : 'text-slate-700'}>\n                {formatNumber(adjustedValues[key]) || '—'}\n              </span>\n              {!formula && (\n                <Edit2 size={12} className=\"ml-2 opacity-0 group-hover:opacity-40 text-amber-500 transition-opacity\" />\n              )}\n            </div>\n          )}\n        </td>\n        \n        {/* Type Column */}\n        <td className=\"px-4 py-4 text-center\">\n          <span className={`inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium ${\n            formula \n              ? 'bg-blue-100 text-blue-800 border border-blue-200' \n              : 'bg-slate-100 text-slate-700 border border-slate-200'\n          }`}>\n            {formula ? (\n              <>\n                <Calculator size={10} className=\"mr-1\" />\n                Auto\n              </>\n            ) : (\n              <>\n                <Edit2 size={10} className=\"mr-1\" />\n                Manual\n              </>\n            )}\n          </span>\n        </td>\n      </tr>\n    );\n  };\n\n  return (\n    <div ref={elementRef} role=\"main\" className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 pb-8\">\n      {/* Header Section */}\n      <div className=\"bg-white border-b border-slate-200 shadow-sm\">\n        <div className=\"max-w-full mx-auto px-8 py-6\">\n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <TrendingUp className=\"w-6 h-6 text-blue-600\" />\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-slate-900\">Financial Spreadsheet</h1>\n                <p className=\"text-sm text-slate-600 mt-1\">Professional financial modeling workspace</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center gap-3\">\n              <button\n                onClick={addPeriod}\n                className=\"px-4 py-2.5 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center gap-2 transition-all duration-200 shadow-sm hover:shadow-md font-medium\"\n              >\n                <Plus size={16} />\n                Add Period\n              </button>\n              <select\n                value={activeStatement}\n                onChange={(e) => setActiveStatement(e.target.value)}\n                className=\"px-4 py-2.5 bg-white border border-slate-300 rounded-lg text-slate-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 font-medium shadow-sm\"\n              >\n                <option value=\"incomeStatement\">Income Statement</option>\n                <option value=\"balanceSheet\">Balance Sheet</option>\n                <option value=\"cashFlow\">Cash Flow Statement</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-full mx-auto p-8\">\n        <div className=\"bg-white rounded-xl border border-slate-200 shadow-lg\">\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              {/* Enhanced Table Header */}\n              <thead className=\"bg-gradient-to-r from-slate-800 to-slate-900 text-white\">\n                <tr>\n                  <th className=\"min-w-[320px] px-6 py-4 text-left text-sm font-semibold tracking-wider\">\n                    <div className=\"flex items-center gap-2\">\n                      <FileText size={16} className=\"text-slate-300\" />\n                      Account Description\n                    </div>\n                  </th>\n                  <th className=\"w-20 px-4 py-4 text-center text-sm font-semibold\">Units</th>\n                  {safeData.periods.map((period, index) => (\n                    <th key={index} className=\"min-w-[140px] px-4 py-4 text-center text-sm font-semibold\">\n                      <div className=\"flex flex-col\">\n                        <span>{period}</span>\n                        <span className=\"text-xs text-slate-300 font-normal\">Actual</span>\n                      </div>\n                    </th>\n                  ))}\n                  <th className=\"min-w-[140px] px-4 py-4 text-center text-sm font-semibold bg-gradient-to-r from-amber-600 to-yellow-600 border-l-2 border-amber-400\">\n                    <div className=\"flex flex-col\">\n                      <span>Adjusted</span>\n                      <span className=\"text-xs text-amber-100 font-normal\">Modified</span>\n                    </div>\n                  </th>\n                  <th className=\"w-28 px-4 py-4 text-center text-sm font-semibold\">\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <Calculator size={14} />\n                      Type\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n              \n              <tbody className=\"divide-y divide-slate-100\">\n                {Object.entries(currentTemplate).map(([sectionKey, section]) => (\n                  <React.Fragment key={sectionKey}>\n                    {/* Enhanced Section Header */}\n                    <tr className={`${section.headerBg || 'bg-slate-600'} border-b-2 border-slate-300`}>\n                      <td colSpan={safeData.periods.length + 4} className=\"py-4 px-6\">\n                        <div className=\"flex items-center gap-3 text-white w-full text-left group\">\n                          <button\n                            onClick={() => toggleSection(sectionKey)}\n                            className=\"flex items-center gap-3 text-white hover:text-slate-200 transition-colors flex-1\"\n                          >\n                            <div className=\"flex items-center justify-center w-6 h-6 rounded-full bg-white/20 group-hover:bg-white/30 transition-colors\">\n                              {expandedSections[sectionKey] ? \n                                <ChevronDown size={14} /> : \n                                <ChevronRight size={14} />\n                              }\n                            </div>\n                            <span className=\"font-bold text-lg\">{section.title}</span>\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              addNewRow();\n                            }}\n                            className=\"p-1.5 hover:bg-white/20 rounded-lg transition-colors opacity-0 group-hover:opacity-100\"\n                            title=\"Add custom row\"\n                          >\n                            <Plus size={16} />\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                    \n                    {/* Section Rows */}\n                    {expandedSections[sectionKey] && section.items.map(item => \n                      renderRow(item)\n                    )}\n                  </React.Fragment>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Enhanced Instructions Panel */}\n        <div className=\"mt-8 grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <div className=\"bg-white rounded-xl p-6 border border-slate-200 shadow-sm\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <Calculator className=\"w-5 h-5 text-blue-600\" />\n              </div>\n              <h3 className=\"font-bold text-slate-900\">How to Use</h3>\n            </div>\n            <ul className=\"space-y-2 text-sm text-slate-700\">\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Click any editable cell to modify values with enhanced input controls\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Use Enter to save changes or Escape to cancel editing\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Expand/collapse sections using the arrow controls\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Formula cells automatically calculate based on inputs\n              </li>\n            </ul>\n          </div>\n          \n          <div className=\"bg-white rounded-xl p-6 border border-slate-200 shadow-sm\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <div className=\"p-2 bg-green-100 rounded-lg\">\n                <TrendingUp className=\"w-5 h-5 text-green-600\" />\n              </div>\n              <h3 className=\"font-bold text-slate-900\">Professional Features</h3>\n            </div>\n            <ul className=\"space-y-2 text-sm text-slate-700\">\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Color-coded sections for easy visual navigation\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Adjusted column for scenario analysis and modifications\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Professional number formatting with proper alignment\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Enhanced editing experience with save/cancel controls\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FinancialSpreadsheet;\n","import React, { useState, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { Plus, Trash2, TrendingUp, TrendingDown, Minus, BarChart3 } from 'lucide-react';\n\nconst ScenarioModeling = ({ data, modelInputs, onModelInputChange, calculateDCF, formatCurrency, formatPercent }) => {\n  const [showAddForm, setShowAddForm] = useState(false);\n  \n  const scenarios = modelInputs.scenario?.scenarios || [];\n\n  // Calculate DCF for each scenario\n  const scenarioResults = useMemo(() => {\n    return scenarios.map(scenario => {\n      try {\n        // Apply scenario assumptions to base DCF calculation\n        const incomeStatement = { ...data.statements.incomeStatement };\n        \n        // Apply revenue growth to revenue data (object format)\n        const baseRevenue = incomeStatement.totalRevenue || {};\n        const modifiedRevenue = {};\n        Object.keys(baseRevenue).forEach(periodIndex => {\n          const index = parseInt(periodIndex);\n          if (index === 0) {\n            modifiedRevenue[periodIndex] = baseRevenue[periodIndex]; // Base year unchanged\n          } else {\n            // Apply revenue growth for projection years\n            const growthRate = 1 + (scenario.revenueGrowth / 100);\n            modifiedRevenue[periodIndex] = baseRevenue[0] * Math.pow(growthRate, index);\n          }\n        });\n        \n        // Apply margin improvement to operating income\n        const baseOperating = incomeStatement.operatingIncome || {};\n        const modifiedOperating = {};\n        Object.keys(baseOperating).forEach(periodIndex => {\n          const index = parseInt(periodIndex);\n          if (index === 0) {\n            modifiedOperating[periodIndex] = baseOperating[periodIndex]; // Base year unchanged\n          } else {\n            // Apply margin improvement\n            const baseRevenueValue = baseRevenue[periodIndex] || 0;\n            const scenarioRevenue = modifiedRevenue[periodIndex] || 0;\n            const baseIncome = baseOperating[periodIndex] || 0;\n            \n            if (baseRevenueValue > 0) {\n              const baseMargin = baseIncome / baseRevenueValue;\n              const adjustedMargin = baseMargin + (scenario.marginImprovement / 100);\n              modifiedOperating[periodIndex] = scenarioRevenue * adjustedMargin;\n            } else {\n              modifiedOperating[periodIndex] = baseIncome;\n            }\n          }\n        });\n        \n        const scenarioData = {\n          ...data,\n          statements: {\n            ...data.statements,\n            incomeStatement: {\n              ...incomeStatement,\n              totalRevenue: modifiedRevenue,\n              operatingIncome: modifiedOperating\n            }\n          }\n        };\n\n      // Calculate DCF with scenario data\n      const dcfResult = calculateDCF(scenarioData);\n      \n      return {\n        ...scenario,\n        ...dcfResult,\n        weightedValue: dcfResult.enterpriseValue * (scenario.probability / 100)\n      };\n      } catch (error) {\n        console.error('Scenario calculation error:', error);\n        return {\n          ...scenario,\n          enterpriseValue: 0,\n          equityValue: 0,\n          weightedValue: 0\n        };\n      }\n    });\n  }, [scenarios, data, calculateDCF]);\n\n  // Calculate probability-weighted average\n  const weightedAverageValue = scenarioResults.reduce((sum, result) => sum + result.weightedValue, 0);\n\n  const addScenario = () => {\n    const newScenario = {\n      name: `Scenario ${scenarios.length + 1}`,\n      probability: Math.max(0, 100 - scenarios.reduce((sum, s) => sum + s.probability, 0)),\n      revenueGrowth: 10,\n      marginImprovement: 0\n    };\n    \n    onModelInputChange('scenario', 'scenarios', [...scenarios, newScenario]);\n    setShowAddForm(false);\n  };\n\n  const updateScenario = (index, field, value) => {\n    const updatedScenarios = scenarios.map((scenario, i) => \n      i === index ? { ...scenario, [field]: value } : scenario\n    );\n    onModelInputChange('scenario', 'scenarios', updatedScenarios);\n  };\n\n  const deleteScenario = (index) => {\n    const updatedScenarios = scenarios.filter((_, i) => i !== index);\n    onModelInputChange('scenario', 'scenarios', updatedScenarios);\n  };\n\n  const ScenarioForm = ({ scenario, index }) => (\n    <div className=\"border rounded-lg p-4 bg-white\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Scenario Name\n          </label>\n          <input\n            type=\"text\"\n            value={scenario.name}\n            onChange={(e) => updateScenario(index, 'name', e.target.value)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"Enter scenario name\"\n          />\n        </div>\n        \n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Probability (%)\n          </label>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            value={scenario.probability}\n            onChange={(e) => updateScenario(index, 'probability', parseInt(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n        \n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Revenue Growth (%)\n          </label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            value={scenario.revenueGrowth}\n            onChange={(e) => updateScenario(index, 'revenueGrowth', parseFloat(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n        \n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Margin Change (%)\n          </label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            value={scenario.marginImprovement}\n            onChange={(e) => updateScenario(index, 'marginImprovement', parseFloat(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n      </div>\n      \n      <div className=\"flex justify-end mt-4 gap-2\">\n        <button\n          onClick={() => deleteScenario(index)}\n          className=\"px-3 py-1 text-red-600 hover:bg-red-50 rounded-lg transition-colors flex items-center gap-1\"\n        >\n          <Trash2 size={16} />\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with Add Button */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <p className=\"text-gray-600\">\n            Create and compare multiple financial scenarios with different assumptions and probabilities.\n          </p>\n        </div>\n        <button\n          onClick={() => setShowAddForm(true)}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n        >\n          <Plus size={16} />\n          Add Scenario\n        </button>\n      </div>\n\n      {/* Scenario Management */}\n      <div className=\"space-y-4\">\n        <h4 className=\"font-semibold text-lg\">Scenario Assumptions</h4>\n        \n        {scenarios.map((scenario, index) => (\n          <ScenarioForm key={index} scenario={scenario} index={index} />\n        ))}\n        \n        {showAddForm && (\n          <div className=\"border-2 border-dashed border-blue-300 rounded-lg p-4\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h5 className=\"font-medium\">Add New Scenario</h5>\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={addScenario}\n                  className=\"px-3 py-1 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n                >\n                  Add\n                </button>\n                <button\n                  onClick={() => setShowAddForm(false)}\n                  className=\"px-3 py-1 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Results Display */}\n      {scenarioResults.length > 0 && (\n        <div className=\"space-y-6\">\n          <h4 className=\"font-semibold text-lg\">Scenario Analysis Results</h4>\n          \n          {/* Probability-Weighted Summary */}\n          <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6 border border-blue-200\">\n            <div className=\"flex items-center gap-2 mb-4\">\n              <BarChart3 size={20} className=\"text-blue-600\" />\n              <h5 className=\"font-semibold text-blue-800\">Probability-Weighted Valuation</h5>\n            </div>\n            <div className=\"text-3xl font-bold text-blue-800\">\n              {formatCurrency(weightedAverageValue)}\n            </div>\n            <p className=\"text-sm text-blue-600 mt-2\">\n              Expected value based on scenario probabilities\n            </p>\n          </div>\n\n          {/* Individual Scenario Results */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">\n            {scenarioResults.map((result, index) => (\n              <motion.div\n                key={index}\n                className=\"bg-white rounded-lg border p-4 hover:shadow-lg transition-shadow\"\n                whileHover={{ y: -2 }}\n              >\n                <div className=\"flex items-start justify-between mb-3\">\n                  <div>\n                    <h6 className=\"font-semibold text-gray-800\">{result.name}</h6>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span>{result.probability}% probability</span>\n                      {result.revenueGrowth > 15 ? \n                        <TrendingUp size={14} className=\"text-green-500\" /> :\n                        result.revenueGrowth < 5 ?\n                        <TrendingDown size={14} className=\"text-red-500\" /> :\n                        <Minus size={14} className=\"text-gray-500\" />\n                      }\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"space-y-3\">\n                  <div className=\"p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Enterprise Value</div>\n                    <div className=\"text-xl font-bold text-gray-800\">\n                      {formatCurrency(result.enterpriseValue)}\n                    </div>\n                  </div>\n                  \n                  <div className=\"text-xs space-y-1 text-gray-600\">\n                    <div className=\"flex justify-between\">\n                      <span>Revenue Growth:</span>\n                      <span className=\"font-medium\">{formatPercent(result.revenueGrowth)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Margin Change:</span>\n                      <span className={`font-medium ${result.marginImprovement >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {result.marginImprovement >= 0 ? '+' : ''}{formatPercent(result.marginImprovement)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Weighted Value:</span>\n                      <span className=\"font-medium\">{formatCurrency(result.weightedValue)}</span>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n\n          {/* Summary Statistics */}\n          <div className=\"bg-white rounded-lg border p-6\">\n            <h5 className=\"font-semibold mb-4\">Scenario Statistics</h5>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {formatCurrency(Math.max(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Best Case</div>\n              </div>\n              \n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-red-600\">\n                  {formatCurrency(Math.min(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Worst Case</div>\n              </div>\n              \n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  {formatCurrency(weightedAverageValue)}\n                </div>\n                <div className=\"text-sm text-gray-600\">Expected Value</div>\n              </div>\n              \n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-gray-800\">\n                  {formatCurrency(Math.max(...scenarioResults.map(r => r.enterpriseValue)) - Math.min(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Value Range</div>\n              </div>\n            </div>\n            \n            <div className=\"mt-4 pt-4 border-t\">\n              <div className=\"text-sm text-gray-600\">\n                <strong>Total Probability:</strong> {scenarios.reduce((sum, s) => sum + s.probability, 0)}%\n                {scenarios.reduce((sum, s) => sum + s.probability, 0) !== 100 && (\n                  <span className=\"text-orange-600 ml-2\">⚠ Probabilities should sum to 100%</span>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {scenarios.length === 0 && (\n        <div className=\"text-center py-12 text-gray-500\">\n          <BarChart3 size={48} className=\"mx-auto mb-4 opacity-50\" />\n          <p>No scenarios created yet.</p>\n          <p className=\"text-sm mt-2\">Click \"Add Scenario\" to get started with scenario modeling.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScenarioModeling;","import React, { useState, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { Activity, TrendingUp, TrendingDown, Settings, BarChart3, Plus, Minus } from 'lucide-react';\n\nconst SensitivityAnalysis = ({ data, modelInputs, onModelInputChange, calculateDCF, formatCurrency, formatPercent }) => {\n  const [selectedVariable, setSelectedVariable] = useState(null);\n  \n  const sensitivityConfig = modelInputs.sensitivity || {\n    variables: ['revenue', 'grossMargin', 'discountRate'],\n    ranges: {\n      revenue: { min: -20, max: 20 },\n      grossMargin: { min: -5, max: 5 },\n      discountRate: { min: 8, max: 15 }\n    }\n  };\n\n  // Variable definitions with display names and units\n  const variableDefinitions = {\n    revenue: { \n      name: 'Revenue Growth', \n      unit: '%', \n      description: 'Annual revenue growth rate',\n      baseValue: 15,\n      isPercentage: true\n    },\n    grossMargin: { \n      name: 'Gross Margin', \n      unit: '%', \n      description: 'Gross profit margin improvement',\n      baseValue: 45,\n      isPercentage: true\n    },\n    discountRate: { \n      name: 'Discount Rate (WACC)', \n      unit: '%', \n      description: 'Weighted average cost of capital',\n      baseValue: modelInputs.dcf?.discountRate || 10,\n      isPercentage: true\n    },\n    terminalGrowthRate: {\n      name: 'Terminal Growth Rate',\n      unit: '%',\n      description: 'Long-term growth rate assumption',\n      baseValue: modelInputs.dcf?.terminalGrowthRate || 2.5,\n      isPercentage: true\n    },\n    taxRate: {\n      name: 'Tax Rate',\n      unit: '%',\n      description: 'Corporate tax rate',\n      baseValue: modelInputs.dcf?.taxRate || 25,\n      isPercentage: true\n    }\n  };\n\n  // Calculate base case valuation\n  const baseValuation = useMemo(() => {\n    return calculateDCF();\n  }, [data, modelInputs, calculateDCF]);\n\n  // Generate sensitivity analysis data\n  const sensitivityResults = useMemo(() => {\n    const results = {};\n    \n    sensitivityConfig.variables.forEach(variable => {\n      const range = sensitivityConfig.ranges[variable];\n      const variableDef = variableDefinitions[variable];\n      \n      if (!range || !variableDef) return;\n      \n      const steps = 9; // Number of data points\n      const stepSize = (range.max - range.min) / (steps - 1);\n      const dataPoints = [];\n      \n      for (let i = 0; i < steps; i++) {\n        const value = range.min + (stepSize * i);\n        \n        // Create modified DCF inputs based on variable type\n        let modifiedData = { ...data };\n        let dcfInputs = {\n          ...modelInputs.dcf,\n          [variable]: variableDef.isPercentage ? value : value\n        };\n        \n        // For revenue and margin variables, we need to simulate the impact\n        if (variable === 'revenue' || variable === 'grossMargin') {\n          // Create a copy of the income statement with modified values\n          const incomeStatement = { ...data.statements.incomeStatement };\n          \n          if (variable === 'revenue') {\n            // Apply revenue growth change across periods\n            const baseRevenue = incomeStatement.totalRevenue || {};\n            const modifiedRevenue = {};\n            \n            Object.keys(baseRevenue).forEach(periodIndex => {\n              const index = parseInt(periodIndex);\n              if (index === 0) {\n                modifiedRevenue[periodIndex] = baseRevenue[periodIndex];\n              } else {\n                const growthRate = 1 + (value / 100);\n                modifiedRevenue[periodIndex] = baseRevenue[0] * Math.pow(growthRate, index);\n              }\n            });\n            \n            incomeStatement.totalRevenue = modifiedRevenue;\n          }\n          \n          if (variable === 'grossMargin') {\n            // Apply margin change to operating income\n            const baseOperating = incomeStatement.operatingIncome || {};\n            const baseRevenue = incomeStatement.totalRevenue || {};\n            const modifiedOperating = {};\n            \n            Object.keys(baseOperating).forEach(periodIndex => {\n              const revenue = baseRevenue[periodIndex] || 0;\n              const originalIncome = baseOperating[periodIndex] || 0;\n              if (revenue > 0) {\n                const baseMargin = originalIncome / revenue;\n                const adjustedMargin = baseMargin + (value / 100);\n                modifiedOperating[periodIndex] = revenue * adjustedMargin;\n              } else {\n                modifiedOperating[periodIndex] = originalIncome;\n              }\n            });\n            \n            incomeStatement.operatingIncome = modifiedOperating;\n          }\n          \n          modifiedData = {\n            ...data,\n            statements: {\n              ...data.statements,\n              incomeStatement\n            }\n          };\n        }\n        \n        // Use a temporary calculateDCF with modified inputs\n        const tempCalculateDCF = () => {\n          try {\n            const dcfParams = {\n              discountRate: dcfInputs.discountRate || 10,\n              terminalGrowthRate: dcfInputs.terminalGrowthRate || 2.5,\n              projectionYears: dcfInputs.projectionYears || 5,\n              taxRate: dcfInputs.taxRate || 25\n            };\n            \n            const sourceData = modifiedData;\n            const operatingIncomeData = sourceData.statements.incomeStatement.operatingIncome || {};\n            \n            // Extract operating incomes from object structure\n            let operatingIncomes = [];\n            Object.keys(operatingIncomeData).forEach(periodKey => {\n              const index = parseInt(periodKey);\n              if (index >= 0) {\n                operatingIncomes.push(operatingIncomeData[periodKey] || 0);\n              }\n            });\n            \n            if (operatingIncomes.length === 0) return { enterpriseValue: 0, equityValue: 0 };\n\n            let presentValue = 0;\n            const discountFactor = 1 + (dcfParams.discountRate / 100);\n\n            // Use available periods for projections\n            operatingIncomes.forEach((income, index) => {\n              if (index > 0 && index <= dcfParams.projectionYears) {\n                const afterTaxIncome = income * (1 - dcfParams.taxRate / 100);\n                const pv = afterTaxIncome / Math.pow(discountFactor, index);\n                presentValue += pv;\n              }\n            });\n\n            const lastYearIncome = operatingIncomes[operatingIncomes.length - 1] || 0;\n            const terminalCashFlow = lastYearIncome * (1 + dcfParams.terminalGrowthRate / 100) * (1 - dcfParams.taxRate / 100);\n            const terminalValue = terminalCashFlow / ((dcfParams.discountRate - dcfParams.terminalGrowthRate) / 100);\n            const presentTerminalValue = terminalValue / Math.pow(discountFactor, dcfParams.projectionYears);\n\n          const enterpriseValue = presentValue + presentTerminalValue;\n          \n          return {\n            enterpriseValue,\n            equityValue: enterpriseValue,\n            presentValueOperations: presentValue,\n            presentValueTerminal: presentTerminalValue,\n            terminalValue\n          };\n          } catch (error) {\n            console.error('DCF calculation error:', error);\n            return { enterpriseValue: 0, equityValue: 0 };\n          }\n        };\n        \n        const result = tempCalculateDCF();\n        \n        dataPoints.push({\n          variable: value,\n          valuation: result.enterpriseValue,\n          changeFromBase: ((result.enterpriseValue - baseValuation.enterpriseValue) / baseValuation.enterpriseValue) * 100\n        });\n      }\n      \n      results[variable] = {\n        definition: variableDef,\n        range: range,\n        dataPoints: dataPoints\n      };\n    });\n    \n    return results;\n  }, [data, modelInputs, sensitivityConfig, baseValuation, calculateDCF]);\n\n  // Tornado chart data (impact ranking)\n  const tornadoData = useMemo(() => {\n    return Object.entries(sensitivityResults).map(([variable, result]) => {\n      const maxImpact = Math.max(...result.dataPoints.map(d => Math.abs(d.changeFromBase)));\n      return {\n        variable,\n        definition: result.definition,\n        maxImpact,\n        positiveImpact: Math.max(...result.dataPoints.map(d => d.changeFromBase)),\n        negativeImpact: Math.min(...result.dataPoints.map(d => d.changeFromBase))\n      };\n    }).sort((a, b) => b.maxImpact - a.maxImpact);\n  }, [sensitivityResults]);\n\n  const updateSensitivityRange = (variable, field, value) => {\n    const updatedRanges = {\n      ...sensitivityConfig.ranges,\n      [variable]: {\n        ...sensitivityConfig.ranges[variable],\n        [field]: parseFloat(value)\n      }\n    };\n    onModelInputChange('sensitivity', 'ranges', updatedRanges);\n  };\n\n  const addVariable = (variableName) => {\n    if (!sensitivityConfig.variables.includes(variableName) && variableDefinitions[variableName]) {\n      const updatedVariables = [...sensitivityConfig.variables, variableName];\n      const updatedRanges = {\n        ...sensitivityConfig.ranges,\n        [variableName]: { min: -10, max: 10 }\n      };\n      onModelInputChange('sensitivity', 'variables', updatedVariables);\n      onModelInputChange('sensitivity', 'ranges', updatedRanges);\n    }\n  };\n\n  const removeVariable = (variableName) => {\n    const updatedVariables = sensitivityConfig.variables.filter(v => v !== variableName);\n    const { [variableName]: removed, ...updatedRanges } = sensitivityConfig.ranges;\n    onModelInputChange('sensitivity', 'variables', updatedVariables);\n    onModelInputChange('sensitivity', 'ranges', updatedRanges);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <p className=\"text-gray-600 mb-4\">\n            Analyze how changes in key variables impact enterprise valuation. \n            Higher sensitivity indicates greater risk and importance for due diligence.\n          </p>\n          <div className=\"flex items-center gap-4 text-sm\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 bg-blue-500 rounded\"></div>\n              <span>Base Case: {formatCurrency(baseValuation.enterpriseValue)}</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Activity size={14} />\n              <span>{sensitivityConfig.variables.length} variables analyzed</span>\n            </div>\n          </div>\n        </div>\n        <button\n          className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors flex items-center gap-2\"\n        >\n          <Settings size={16} />\n          Configure\n        </button>\n      </div>\n\n      {/* Tornado Chart */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <h4 className=\"font-semibold text-lg mb-4 flex items-center gap-2\">\n          <BarChart3 size={20} />\n          Impact Ranking (Tornado Chart)\n        </h4>\n        \n        <div className=\"space-y-3\">\n          {tornadoData.map((item, index) => (\n            <div key={item.variable} className=\"relative\">\n              <div className=\"flex items-center justify-between mb-1\">\n                <span className=\"text-sm font-medium\">{index + 1}. {item.definition.name}</span>\n                <span className=\"text-xs text-gray-500\">±{item.maxImpact.toFixed(1)}%</span>\n              </div>\n              \n              <div className=\"relative h-8 bg-gray-100 rounded\">\n                {/* Negative impact bar */}\n                <div \n                  className=\"absolute left-1/2 h-full bg-red-400 rounded-l\"\n                  style={{\n                    width: `${Math.abs(item.negativeImpact) / Math.max(Math.abs(item.negativeImpact), item.positiveImpact) * 50}%`,\n                    transform: 'translateX(-100%)'\n                  }}\n                />\n                \n                {/* Positive impact bar */}\n                <div \n                  className=\"absolute left-1/2 h-full bg-green-400 rounded-r\"\n                  style={{\n                    width: `${item.positiveImpact / Math.max(Math.abs(item.negativeImpact), item.positiveImpact) * 50}%`\n                  }}\n                />\n                \n                {/* Center line */}\n                <div className=\"absolute left-1/2 top-0 bottom-0 w-0.5 bg-gray-400 transform -translate-x-0.5\" />\n                \n                {/* Labels */}\n                <div className=\"absolute inset-0 flex items-center justify-between px-2 text-xs font-medium text-white\">\n                  <span>{item.negativeImpact.toFixed(1)}%</span>\n                  <span>+{item.positiveImpact.toFixed(1)}%</span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Variable Configuration */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <h4 className=\"font-semibold text-lg mb-4\">Variable Configuration</h4>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {sensitivityConfig.variables.map(variable => {\n            const result = sensitivityResults[variable];\n            if (!result) return null;\n            \n            return (\n              <div key={variable} className=\"border rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div>\n                    <h6 className=\"font-medium\">{result.definition.name}</h6>\n                    <p className=\"text-xs text-gray-500\">{result.definition.description}</p>\n                  </div>\n                  <button\n                    onClick={() => removeVariable(variable)}\n                    className=\"text-red-500 hover:bg-red-50 p-1 rounded\"\n                  >\n                    <Minus size={16} />\n                  </button>\n                </div>\n                \n                <div className=\"grid grid-cols-2 gap-3 mb-3\">\n                  <div>\n                    <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                      Min Value ({result.definition.unit})\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={result.range.min}\n                      onChange={(e) => updateSensitivityRange(variable, 'min', e.target.value)}\n                      className=\"w-full px-2 py-1 border rounded text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                      Max Value ({result.definition.unit})\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={result.range.max}\n                      onChange={(e) => updateSensitivityRange(variable, 'max', e.target.value)}\n                      className=\"w-full px-2 py-1 border rounded text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n                \n                {/* Mini chart */}\n                <div className=\"h-16 bg-gray-50 rounded p-2\">\n                  <div className=\"text-xs text-gray-500 mb-1\">Valuation Sensitivity</div>\n                  <div className=\"flex items-end justify-between h-8\">\n                    {result.dataPoints.map((point, index) => (\n                      <div\n                        key={index}\n                        className={`w-1 rounded-t ${\n                          point.changeFromBase > 0 ? 'bg-green-400' : \n                          point.changeFromBase < 0 ? 'bg-red-400' : 'bg-blue-400'\n                        }`}\n                        style={{\n                          height: `${Math.abs(point.changeFromBase) / 50 * 100}%`,\n                          minHeight: '2px'\n                        }}\n                        title={`${point.variable}${result.definition.unit}: ${formatCurrency(point.valuation)}`}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n          \n          {/* Add Variable */}\n          <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 flex items-center justify-center\">\n            <div className=\"text-center\">\n              <Plus size={24} className=\"mx-auto mb-2 text-gray-400\" />\n              <p className=\"text-sm text-gray-500 mb-3\">Add Variable</p>\n              <div className=\"space-y-2\">\n                {Object.keys(variableDefinitions)\n                  .filter(v => !sensitivityConfig.variables.includes(v))\n                  .map(variable => (\n                    <button\n                      key={variable}\n                      onClick={() => addVariable(variable)}\n                      className=\"block w-full px-3 py-1 text-xs bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors\"\n                    >\n                      {variableDefinitions[variable].name}\n                    </button>\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Detailed Analysis */}\n      {selectedVariable && sensitivityResults[selectedVariable] && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">\n            Detailed Analysis: {sensitivityResults[selectedVariable].definition.name}\n          </h4>\n          \n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <div>\n              <h6 className=\"font-medium mb-3\">Data Points</h6>\n              <div className=\"space-y-2 max-h-64 overflow-y-auto\">\n                {sensitivityResults[selectedVariable].dataPoints.map((point, index) => (\n                  <div key={index} className=\"flex justify-between items-center text-sm p-2 bg-gray-50 rounded\">\n                    <span>{point.variable}{sensitivityResults[selectedVariable].definition.unit}</span>\n                    <span className=\"font-medium\">{formatCurrency(point.valuation)}</span>\n                    <span className={`font-medium ${\n                      point.changeFromBase > 0 ? 'text-green-600' : \n                      point.changeFromBase < 0 ? 'text-red-600' : 'text-gray-600'\n                    }`}>\n                      {point.changeFromBase > 0 ? '+' : ''}{point.changeFromBase.toFixed(1)}%\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n            \n            <div>\n              <h6 className=\"font-medium mb-3\">Key Statistics</h6>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Range Impact:</span>\n                  <span className=\"font-medium\">\n                    ±{Math.max(...sensitivityResults[selectedVariable].dataPoints.map(d => Math.abs(d.changeFromBase))).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Max Upside:</span>\n                  <span className=\"font-medium text-green-600\">\n                    +{Math.max(...sensitivityResults[selectedVariable].dataPoints.map(d => d.changeFromBase)).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Max Downside:</span>\n                  <span className=\"font-medium text-red-600\">\n                    {Math.min(...sensitivityResults[selectedVariable].dataPoints.map(d => d.changeFromBase)).toFixed(1)}%\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SensitivityAnalysis;","import React, { useState, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  LineChart, Line, BarChart, Bar, AreaChart, Area, PieChart, Pie, Cell,\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer \n} from 'recharts';\nimport { TrendingUp, BarChart3, PieChart as PieChartIcon, Activity, Eye, EyeOff } from 'lucide-react';\n\nconst DataVisualization = ({ \n  dcfData, \n  sensitivityData, \n  scenarioData, \n  formatCurrency, \n  formatPercent \n}) => {\n  const [activeChart, setActiveChart] = useState('dcf-waterfall');\n  const [showDetails, setShowDetails] = useState(true);\n\n  // Chart configuration\n  const chartTypes = [\n    { id: 'dcf-waterfall', label: 'DCF Waterfall', icon: BarChart3, category: 'dcf' },\n    { id: 'cashflow-trend', label: 'Cash Flow Trend', icon: TrendingUp, category: 'dcf' },\n    { id: 'sensitivity-tornado', label: 'Sensitivity Tornado', icon: Activity, category: 'sensitivity' },\n    { id: 'scenario-distribution', label: 'Scenario Distribution', icon: PieChartIcon, category: 'scenario' },\n    { id: 'valuation-bridge', label: 'Valuation Bridge', icon: BarChart3, category: 'combined' }\n  ];\n\n  // Prepare DCF Waterfall Data\n  const dcfWaterfallData = useMemo(() => {\n    if (!dcfData?.years) return [];\n    \n    let cumulativeValue = 0;\n    const data = [];\n    \n    // Add each year's contribution\n    dcfData.years.forEach((year, index) => {\n      const startValue = cumulativeValue;\n      cumulativeValue += year.presentValue;\n      \n      data.push({\n        name: `Year ${year.year}`,\n        value: year.presentValue,\n        cumulative: cumulativeValue,\n        start: startValue,\n        freeCashFlow: year.freeCashFlow,\n        category: 'operations'\n      });\n    });\n    \n    // Add terminal value\n    const terminalStart = cumulativeValue;\n    cumulativeValue += dcfData.presentValueTerminal;\n    \n    data.push({\n      name: 'Terminal Value',\n      value: dcfData.presentValueTerminal,\n      cumulative: cumulativeValue,\n      start: terminalStart,\n      category: 'terminal'\n    });\n    \n    return data;\n  }, [dcfData]);\n\n  // Prepare Cash Flow Trend Data\n  const cashFlowTrendData = useMemo(() => {\n    if (!dcfData?.years) return [];\n    \n    return dcfData.years.map((year, index) => ({\n      year: `Year ${year.year}`,\n      freeCashFlow: year.freeCashFlow,\n      presentValue: year.presentValue,\n      revenue: year.revenue,\n      operatingIncome: year.operatingIncome,\n      workingCapitalChange: year.workingCapitalChange,\n      capex: Math.abs(year.capex)\n    }));\n  }, [dcfData]);\n\n  // Prepare Sensitivity Tornado Data\n  const sensitivityTornadoData = useMemo(() => {\n    if (!sensitivityData) return [];\n    \n    return Object.entries(sensitivityData).map(([variable, result]) => {\n      const maxUpside = Math.max(...result.dataPoints.map(d => d.changeFromBase));\n      const maxDownside = Math.min(...result.dataPoints.map(d => d.changeFromBase));\n      \n      return {\n        variable: result.definition.name,\n        upside: maxUpside,\n        downside: Math.abs(maxDownside),\n        range: maxUpside - maxDownside\n      };\n    }).sort((a, b) => b.range - a.range);\n  }, [sensitivityData]);\n\n  // Prepare Scenario Distribution Data\n  const scenarioDistributionData = useMemo(() => {\n    if (!scenarioData?.length) return [];\n    \n    return scenarioData.map((scenario, index) => ({\n      name: scenario.name,\n      value: scenario.enterpriseValue,\n      probability: scenario.probability,\n      weightedValue: scenario.weightedValue,\n      fill: `hsl(${(index * 137.5) % 360}, 70%, 50%)`\n    }));\n  }, [scenarioData]);\n\n  // Custom tooltip for different chart types\n  const CustomTooltip = ({ active, payload, label, chartType }) => {\n    if (!active || !payload || !payload.length) return null;\n\n    const formatValue = (value, key) => {\n      if (key?.includes('Percent') || key?.includes('Rate')) {\n        return formatPercent(value);\n      }\n      return formatCurrency(value);\n    };\n\n    return (\n      <div className=\"bg-white p-3 border rounded-lg shadow-lg\">\n        <p className=\"font-medium text-gray-800\">{label}</p>\n        {payload.map((entry, index) => (\n          <p key={index} style={{ color: entry.color }} className=\"text-sm\">\n            {`${entry.dataKey}: ${formatValue(entry.value, entry.dataKey)}`}\n          </p>\n        ))}\n      </div>\n    );\n  };\n\n  // DCF Waterfall Chart\n  const DCFWaterfallChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <BarChart data={dcfWaterfallData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis tickFormatter={(value) => formatCurrency(value)} />\n        <Tooltip content={<CustomTooltip chartType=\"waterfall\" />} />\n        <Bar dataKey=\"value\" fill=\"#3B82F6\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n\n  // Cash Flow Trend Chart\n  const CashFlowTrendChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <LineChart data={cashFlowTrendData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"year\" />\n        <YAxis tickFormatter={(value) => formatCurrency(value)} />\n        <Tooltip content={<CustomTooltip chartType=\"trend\" />} />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"freeCashFlow\" stroke=\"#10B981\" strokeWidth={3} name=\"Free Cash Flow\" />\n        <Line type=\"monotone\" dataKey=\"presentValue\" stroke=\"#3B82F6\" strokeWidth={2} name=\"Present Value\" />\n        <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"#8B5CF6\" strokeWidth={2} name=\"Revenue\" />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n\n  // Sensitivity Tornado Chart\n  const SensitivityTornadoChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <BarChart \n        data={sensitivityTornadoData} \n        layout=\"horizontal\"\n        margin={{ top: 20, right: 30, left: 100, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" tickFormatter={(value) => `${value.toFixed(1)}%`} />\n        <YAxis type=\"category\" dataKey=\"variable\" />\n        <Tooltip \n          formatter={(value, name) => [`${value.toFixed(1)}%`, name]}\n          labelFormatter={(label) => `Variable: ${label}`}\n        />\n        <Bar dataKey=\"upside\" fill=\"#10B981\" name=\"Upside Impact\" />\n        <Bar dataKey=\"downside\" fill=\"#EF4444\" name=\"Downside Impact\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n\n  // Scenario Distribution Chart\n  const ScenarioDistributionChart = () => (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <PieChart>\n          <Pie\n            data={scenarioDistributionData}\n            cx=\"50%\"\n            cy=\"50%\"\n            outerRadius={80}\n            dataKey=\"probability\"\n            label={({ name, probability }) => `${name}: ${probability}%`}\n          >\n            {scenarioDistributionData.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.fill} />\n            ))}\n          </Pie>\n          <Tooltip formatter={(value) => `${value}%`} />\n        </PieChart>\n      </ResponsiveContainer>\n      \n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart data={scenarioDistributionData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis tickFormatter={(value) => formatCurrency(value)} />\n          <Tooltip content={<CustomTooltip chartType=\"scenario\" />} />\n          <Bar dataKey=\"value\" fill=\"#8B5CF6\" name=\"Enterprise Value\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n\n  // Valuation Bridge Chart\n  const ValuationBridgeChart = () => {\n    const bridgeData = [\n      { name: 'PV of Operations', value: dcfData?.cumulativePV || 0, type: 'positive' },\n      { name: 'PV of Terminal', value: dcfData?.presentValueTerminal || 0, type: 'positive' },\n      { name: 'Enterprise Value', value: dcfData?.enterpriseValue || 0, type: 'total' }\n    ];\n\n    return (\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart data={bridgeData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis tickFormatter={(value) => formatCurrency(value)} />\n          <Tooltip content={<CustomTooltip chartType=\"bridge\" />} />\n          <Bar \n            dataKey=\"value\" \n            fill={(entry) => entry.type === 'total' ? '#1F2937' : '#3B82F6'}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const renderChart = () => {\n    switch (activeChart) {\n      case 'dcf-waterfall':\n        return <DCFWaterfallChart />;\n      case 'cashflow-trend':\n        return <CashFlowTrendChart />;\n      case 'sensitivity-tornado':\n        return <SensitivityTornadoChart />;\n      case 'scenario-distribution':\n        return <ScenarioDistributionChart />;\n      case 'valuation-bridge':\n        return <ValuationBridgeChart />;\n      default:\n        return <DCFWaterfallChart />;\n    }\n  };\n\n  const getChartDescription = () => {\n    switch (activeChart) {\n      case 'dcf-waterfall':\n        return 'Shows the contribution of each year\\'s cash flows and terminal value to total enterprise value.';\n      case 'cashflow-trend':\n        return 'Displays the trend of free cash flows, present values, and key financial metrics over time.';\n      case 'sensitivity-tornado':\n        return 'Illustrates how changes in key variables impact enterprise value, ranked by sensitivity.';\n      case 'scenario-distribution':\n        return 'Compares different scenarios by probability weights and resulting enterprise values.';\n      case 'valuation-bridge':\n        return 'Breaks down enterprise value into operating value and terminal value components.';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <BarChart3 size={20} />\n            Data Visualization\n          </h3>\n          <p className=\"text-gray-600\">\n            Interactive charts and graphs to visualize valuation results and sensitivity analysis.\n          </p>\n        </div>\n        <button\n          onClick={() => setShowDetails(!showDetails)}\n          className={`px-3 py-2 rounded-lg text-sm transition-colors flex items-center gap-2 ${\n            showDetails ? 'bg-blue-100 text-blue-700' : 'bg-gray-100 text-gray-700'\n          }`}\n        >\n          {showDetails ? <EyeOff size={14} /> : <Eye size={14} />}\n          {showDetails ? 'Hide Details' : 'Show Details'}\n        </button>\n      </div>\n\n      {/* Chart Type Selector */}\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-3\">\n        {chartTypes.map((chart) => {\n          const Icon = chart.icon;\n          return (\n            <motion.button\n              key={chart.id}\n              onClick={() => setActiveChart(chart.id)}\n              className={`p-3 rounded-lg border-2 transition-all text-center ${\n                activeChart === chart.id\n                  ? 'border-blue-500 bg-blue-50 text-blue-700'\n                  : 'border-gray-200 bg-white hover:border-gray-300 text-gray-700'\n              }`}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <Icon size={20} className=\"mx-auto mb-2\" />\n              <div className=\"text-xs font-medium\">{chart.label}</div>\n            </motion.button>\n          );\n        })}\n      </div>\n\n      {/* Chart Container */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h4 className=\"font-semibold text-lg\">\n            {chartTypes.find(c => c.id === activeChart)?.label}\n          </h4>\n          {showDetails && (\n            <span className=\"text-sm text-gray-500\">\n              {getChartDescription()}\n            </span>\n          )}\n        </div>\n        \n        <div className=\"min-h-[400px]\">\n          {renderChart()}\n        </div>\n      </div>\n\n      {/* Chart Insights */}\n      {showDetails && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">Key Insights</h4>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {activeChart === 'dcf-waterfall' && (\n              <>\n                <div className=\"p-4 bg-blue-50 rounded-lg\">\n                  <div className=\"text-sm text-blue-600 font-medium\">Operations Contribution</div>\n                  <div className=\"text-lg font-bold text-blue-800\">\n                    {dcfData?.cumulativePV ? \n                      `${((dcfData.cumulativePV / dcfData.enterpriseValue) * 100).toFixed(1)}%` : \n                      'N/A'\n                    }\n                  </div>\n                </div>\n                <div className=\"p-4 bg-purple-50 rounded-lg\">\n                  <div className=\"text-sm text-purple-600 font-medium\">Terminal Contribution</div>\n                  <div className=\"text-lg font-bold text-purple-800\">\n                    {dcfData?.presentValueTerminal ? \n                      `${((dcfData.presentValueTerminal / dcfData.enterpriseValue) * 100).toFixed(1)}%` : \n                      'N/A'\n                    }\n                  </div>\n                </div>\n                <div className=\"p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-sm text-green-600 font-medium\">Avg. Annual FCF</div>\n                  <div className=\"text-lg font-bold text-green-800\">\n                    {dcfData?.freeCashFlows ? \n                      formatCurrency(dcfData.freeCashFlows.reduce((a, b) => a + b, 0) / dcfData.freeCashFlows.length) : \n                      'N/A'\n                    }\n                  </div>\n                </div>\n              </>\n            )}\n\n            {activeChart === 'sensitivity-tornado' && sensitivityTornadoData.length > 0 && (\n              <>\n                <div className=\"p-4 bg-red-50 rounded-lg\">\n                  <div className=\"text-sm text-red-600 font-medium\">Highest Risk Variable</div>\n                  <div className=\"text-lg font-bold text-red-800\">\n                    {sensitivityTornadoData[0]?.variable}\n                  </div>\n                  <div className=\"text-sm text-red-600\">\n                    ±{sensitivityTornadoData[0]?.range.toFixed(1)}% impact\n                  </div>\n                </div>\n                <div className=\"p-4 bg-yellow-50 rounded-lg\">\n                  <div className=\"text-sm text-yellow-600 font-medium\">Medium Risk Variables</div>\n                  <div className=\"text-lg font-bold text-yellow-800\">\n                    {sensitivityTornadoData.slice(1, 3).map(v => v.variable).join(', ')}\n                  </div>\n                </div>\n                <div className=\"p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-sm text-green-600 font-medium\">Lowest Risk Variable</div>\n                  <div className=\"text-lg font-bold text-green-800\">\n                    {sensitivityTornadoData[sensitivityTornadoData.length - 1]?.variable}\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataVisualization;","import React, { useState, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { Calculator, TrendingUp, DollarSign, Percent, Info, BookOpen, Settings } from 'lucide-react';\n\nconst WACCCalculator = ({ modelInputs, onModelInputChange, formatPercent }) => {\n  const [showDetails, setShowDetails] = useState(true);\n  const [activeTab, setActiveTab] = useState('inputs');\n\n  // WACC calculation inputs with defaults\n  const waccInputs = modelInputs.dcf.wacc || {\n    // Cost of Equity (CAPM)\n    riskFreeRate: 4.5,\n    marketRiskPremium: 6.0,\n    beta: 1.2,\n    smallCompanyPremium: 3.0,\n    companySpecificRisk: 2.0,\n    \n    // Cost of Debt\n    debtInterestRate: 6.5,\n    taxRate: 25,\n    \n    // Capital Structure\n    marketValueEquity: 100000,\n    marketValueDebt: 30000,\n    \n    // Alternative methods\n    buildUpMethod: {\n      riskFreeRate: 4.5,\n      equityRiskPremium: 6.0,\n      sizeRiskPremium: 3.0,\n      industryRiskPremium: 2.0,\n      companySpecificRisk: 2.0\n    },\n    \n    // Industry benchmarks\n    industryWACC: 10.5,\n    industryBeta: 1.1,\n    industryDebtEquityRatio: 0.3\n  };\n\n  // Calculate WACC components\n  const waccCalculation = useMemo(() => {\n    const inputs = { ...waccInputs, ...modelInputs.dcf.wacc };\n    \n    // Cost of Equity - CAPM Method\n    const costOfEquityCAPM = inputs.riskFreeRate + \n                            (inputs.beta * inputs.marketRiskPremium) + \n                            inputs.smallCompanyPremium + \n                            inputs.companySpecificRisk;\n    \n    // Cost of Equity - Build-up Method\n    const costOfEquityBuildUp = inputs.buildUpMethod.riskFreeRate +\n                               inputs.buildUpMethod.equityRiskPremium +\n                               inputs.buildUpMethod.sizeRiskPremium +\n                               inputs.buildUpMethod.industryRiskPremium +\n                               inputs.buildUpMethod.companySpecificRisk;\n    \n    // Cost of Debt (after-tax)\n    const costOfDebtAfterTax = inputs.debtInterestRate * (1 - inputs.taxRate / 100);\n    \n    // Capital structure weights\n    const totalCapital = inputs.marketValueEquity + inputs.marketValueDebt;\n    const equityWeight = inputs.marketValueEquity / totalCapital;\n    const debtWeight = inputs.marketValueDebt / totalCapital;\n    \n    // WACC calculations\n    const waccCAPM = (costOfEquityCAPM / 100 * equityWeight) + \n                     (costOfDebtAfterTax / 100 * debtWeight);\n    \n    const waccBuildUp = (costOfEquityBuildUp / 100 * equityWeight) + \n                        (costOfDebtAfterTax / 100 * debtWeight);\n    \n    // Risk-adjusted WACC (average of methods)\n    const finalWACC = (waccCAPM + waccBuildUp) / 2;\n    \n    return {\n      costOfEquityCAPM,\n      costOfEquityBuildUp,\n      costOfDebtAfterTax,\n      equityWeight: equityWeight * 100,\n      debtWeight: debtWeight * 100,\n      waccCAPM: waccCAPM * 100,\n      waccBuildUp: waccBuildUp * 100,\n      finalWACC: finalWACC * 100,\n      totalCapital,\n      debtToEquityRatio: inputs.marketValueDebt / inputs.marketValueEquity\n    };\n  }, [waccInputs, modelInputs.dcf.wacc]);\n\n  const updateWACCInput = (field, value) => {\n    const updatedWACC = {\n      ...waccInputs,\n      ...modelInputs.dcf.wacc,\n      [field]: parseFloat(value) || 0\n    };\n    onModelInputChange('dcf', 'wacc', updatedWACC);\n  };\n\n  const updateBuildUpInput = (field, value) => {\n    const updatedWACC = {\n      ...waccInputs,\n      ...modelInputs.dcf.wacc,\n      buildUpMethod: {\n        ...waccInputs.buildUpMethod,\n        ...modelInputs.dcf.wacc?.buildUpMethod,\n        [field]: parseFloat(value) || 0\n      }\n    };\n    onModelInputChange('dcf', 'wacc', updatedWACC);\n  };\n\n  const applyWACCToDCF = (waccValue) => {\n    onModelInputChange('dcf', 'discountRate', waccValue);\n  };\n\n  const tabs = [\n    { id: 'inputs', label: 'Inputs', icon: Settings },\n    { id: 'calculation', label: 'Calculation', icon: Calculator },\n    { id: 'benchmarks', label: 'Benchmarks', icon: TrendingUp }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Calculator size={20} />\n            WACC Calculator\n          </h3>\n          <p className=\"text-gray-600\">\n            Professional weighted average cost of capital calculation using CAPM and build-up methods.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => applyWACCToDCF(waccCalculation.finalWACC)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\"\n          >\n            Apply to DCF\n          </button>\n          <button\n            onClick={() => setShowDetails(!showDetails)}\n            className={`px-3 py-2 rounded-lg text-sm transition-colors ${\n              showDetails ? 'bg-gray-200 text-gray-700' : 'bg-gray-100 text-gray-600'\n            }`}\n          >\n            {showDetails ? 'Hide Details' : 'Show Details'}\n          </button>\n        </div>\n      </div>\n\n      {/* Key Results */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <motion.div \n          className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Percent size={20} className=\"text-blue-600\" />\n            <span className=\"text-xs text-blue-600 font-medium\">FINAL WACC</span>\n          </div>\n          <div className=\"text-2xl font-bold text-blue-800\">\n            {formatPercent(waccCalculation.finalWACC)}\n          </div>\n          <div className=\"text-sm text-blue-600 mt-1\">\n            Risk-adjusted average\n          </div>\n        </motion.div>\n\n        <motion.div \n          className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <TrendingUp size={20} className=\"text-green-600\" />\n            <span className=\"text-xs text-green-600 font-medium\">COST OF EQUITY</span>\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {formatPercent(waccCalculation.costOfEquityCAPM)}\n          </div>\n          <div className=\"text-sm text-green-600 mt-1\">\n            CAPM method\n          </div>\n        </motion.div>\n\n        <motion.div \n          className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <DollarSign size={20} className=\"text-purple-600\" />\n            <span className=\"text-xs text-purple-600 font-medium\">COST OF DEBT</span>\n          </div>\n          <div className=\"text-2xl font-bold text-purple-800\">\n            {formatPercent(waccCalculation.costOfDebtAfterTax)}\n          </div>\n          <div className=\"text-sm text-purple-600 mt-1\">\n            After-tax\n          </div>\n        </motion.div>\n\n        <motion.div \n          className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Info size={20} className=\"text-orange-600\" />\n            <span className=\"text-xs text-orange-600 font-medium\">DEBT/EQUITY</span>\n          </div>\n          <div className=\"text-2xl font-bold text-orange-800\">\n            {waccCalculation.debtToEquityRatio.toFixed(2)}x\n          </div>\n          <div className=\"text-sm text-orange-600 mt-1\">\n            Capital structure\n          </div>\n        </motion.div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg\">\n        {tabs.map((tab) => {\n          const Icon = tab.icon;\n          return (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`flex-1 flex items-center justify-center gap-2 py-2 px-4 rounded-md transition-all ${\n                activeTab === tab.id\n                  ? 'bg-white text-blue-600 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <Icon size={16} />\n              {tab.label}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        {activeTab === 'inputs' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">WACC Input Parameters</h4>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* Cost of Equity - CAPM */}\n              <div>\n                <h5 className=\"font-medium mb-4 text-blue-800\">Cost of Equity (CAPM Method)</h5>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Risk-Free Rate (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.riskFreeRate || waccInputs.riskFreeRate}\n                      onChange={(e) => updateWACCInput('riskFreeRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">10-year Treasury rate</span>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Risk Premium (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.marketRiskPremium || waccInputs.marketRiskPremium}\n                      onChange={(e) => updateWACCInput('marketRiskPremium', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Expected market return - risk-free rate</span>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Beta (β)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.beta || waccInputs.beta}\n                      onChange={(e) => updateWACCInput('beta', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Systematic risk relative to market</span>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Small Company Premium (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.smallCompanyPremium || waccInputs.smallCompanyPremium}\n                      onChange={(e) => updateWACCInput('smallCompanyPremium', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Size-related risk premium</span>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Company-Specific Risk (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.companySpecificRisk || waccInputs.companySpecificRisk}\n                      onChange={(e) => updateWACCInput('companySpecificRisk', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Unsystematic risk premium</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Capital Structure & Debt */}\n              <div>\n                <h5 className=\"font-medium mb-4 text-purple-800\">Capital Structure & Cost of Debt</h5>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Value of Equity ($000s)\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={modelInputs.dcf.wacc?.marketValueEquity || waccInputs.marketValueEquity}\n                      onChange={(e) => updateWACCInput('marketValueEquity', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Value of Debt ($000s)\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={modelInputs.dcf.wacc?.marketValueDebt || waccInputs.marketValueDebt}\n                      onChange={(e) => updateWACCInput('marketValueDebt', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Pre-Tax Cost of Debt (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.debtInterestRate || waccInputs.debtInterestRate}\n                      onChange={(e) => updateWACCInput('debtInterestRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Interest rate on debt</span>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Tax Rate (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.taxRate || modelInputs.dcf.taxRate}\n                      onChange={(e) => updateWACCInput('taxRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Corporate tax rate</span>\n                  </div>\n\n                  {/* Capital Structure Summary */}\n                  <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n                    <h6 className=\"font-medium mb-2\">Capital Structure</h6>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Equity Weight:</span>\n                        <span className=\"font-medium\">{formatPercent(waccCalculation.equityWeight)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Debt Weight:</span>\n                        <span className=\"font-medium\">{formatPercent(waccCalculation.debtWeight)}</span>\n                      </div>\n                      <div className=\"flex justify-between border-t pt-2\">\n                        <span>Total Capital:</span>\n                        <span className=\"font-medium\">${(waccCalculation.totalCapital / 1000).toFixed(0)}M</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'calculation' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">WACC Calculation Breakdown</h4>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* CAPM Method */}\n              <div className=\"p-6 bg-blue-50 rounded-lg border border-blue-200\">\n                <h5 className=\"font-medium mb-4 text-blue-800\">CAPM Method</h5>\n                <div className=\"space-y-3 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Risk-Free Rate:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.riskFreeRate || waccInputs.riskFreeRate)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta × Market Risk Premium:</span>\n                    <span className=\"font-medium\">\n                      {formatPercent((modelInputs.dcf.wacc?.beta || waccInputs.beta) * (modelInputs.dcf.wacc?.marketRiskPremium || waccInputs.marketRiskPremium))}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Small Company Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.smallCompanyPremium || waccInputs.smallCompanyPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Company-Specific Risk:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.companySpecificRisk || waccInputs.companySpecificRisk)}</span>\n                  </div>\n                  <div className=\"flex justify-between border-t pt-2 font-semibold\">\n                    <span>Cost of Equity (CAPM):</span>\n                    <span>{formatPercent(waccCalculation.costOfEquityCAPM)}</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Build-up Method */}\n              <div className=\"p-6 bg-green-50 rounded-lg border border-green-200\">\n                <h5 className=\"font-medium mb-4 text-green-800\">Build-up Method</h5>\n                <div className=\"space-y-3 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Risk-Free Rate:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.riskFreeRate)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Equity Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.equityRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Size Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.sizeRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Industry Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.industryRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Company-Specific Risk:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.companySpecificRisk)}</span>\n                  </div>\n                  <div className=\"flex justify-between border-t pt-2 font-semibold\">\n                    <span>Cost of Equity (Build-up):</span>\n                    <span>{formatPercent(waccCalculation.costOfEquityBuildUp)}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Final WACC Calculation */}\n            <div className=\"p-6 bg-gray-50 rounded-lg border\">\n              <h5 className=\"font-medium mb-4\">Final WACC Calculation</h5>\n              <div className=\"space-y-4 text-sm\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <div className=\"flex justify-between mb-2\">\n                      <span>WACC (CAPM Method):</span>\n                      <span className=\"font-medium\">{formatPercent(waccCalculation.waccCAPM)}</span>\n                    </div>\n                    <div className=\"text-xs text-gray-600\">\n                      [{formatPercent(waccCalculation.costOfEquityCAPM)} × {formatPercent(waccCalculation.equityWeight)}] + \n                      [{formatPercent(waccCalculation.costOfDebtAfterTax)} × {formatPercent(waccCalculation.debtWeight)}]\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"flex justify-between mb-2\">\n                      <span>WACC (Build-up Method):</span>\n                      <span className=\"font-medium\">{formatPercent(waccCalculation.waccBuildUp)}</span>\n                    </div>\n                    <div className=\"text-xs text-gray-600\">\n                      [{formatPercent(waccCalculation.costOfEquityBuildUp)} × {formatPercent(waccCalculation.equityWeight)}] + \n                      [{formatPercent(waccCalculation.costOfDebtAfterTax)} × {formatPercent(waccCalculation.debtWeight)}]\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"border-t pt-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-lg font-semibold\">Risk-Adjusted WACC:</span>\n                    <span className=\"text-2xl font-bold text-blue-600\">{formatPercent(waccCalculation.finalWACC)}</span>\n                  </div>\n                  <div className=\"text-xs text-gray-600 mt-1\">\n                    Average of CAPM and Build-up methods\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'benchmarks' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">Industry Benchmarks & Validation</h4>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              <div className=\"p-4 bg-blue-50 rounded-lg\">\n                <h6 className=\"font-medium text-blue-800 mb-2\">Your Company</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC:</span>\n                    <span className=\"font-semibold\">{formatPercent(waccCalculation.finalWACC)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta:</span>\n                    <span className=\"font-semibold\">{(modelInputs.dcf.wacc?.beta || waccInputs.beta).toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>D/E Ratio:</span>\n                    <span className=\"font-semibold\">{waccCalculation.debtToEquityRatio.toFixed(2)}x</span>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"p-4 bg-green-50 rounded-lg\">\n                <h6 className=\"font-medium text-green-800 mb-2\">Industry Average</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC:</span>\n                    <span className=\"font-semibold\">{formatPercent(waccInputs.industryWACC)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta:</span>\n                    <span className=\"font-semibold\">{waccInputs.industryBeta.toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>D/E Ratio:</span>\n                    <span className=\"font-semibold\">{waccInputs.industryDebtEquityRatio.toFixed(2)}x</span>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"p-4 bg-yellow-50 rounded-lg\">\n                <h6 className=\"font-medium text-yellow-800 mb-2\">Variance</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC Diff:</span>\n                    <span className={`font-semibold ${\n                      waccCalculation.finalWACC > waccInputs.industryWACC ? 'text-red-600' : 'text-green-600'\n                    }`}>\n                      {waccCalculation.finalWACC > waccInputs.industryWACC ? '+' : ''}\n                      {formatPercent(waccCalculation.finalWACC - waccInputs.industryWACC)}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta Diff:</span>\n                    <span className={`font-semibold ${\n                      (modelInputs.dcf.wacc?.beta || waccInputs.beta) > waccInputs.industryBeta ? 'text-red-600' : 'text-green-600'\n                    }`}>\n                      {(modelInputs.dcf.wacc?.beta || waccInputs.beta) > waccInputs.industryBeta ? '+' : ''}\n                      {((modelInputs.dcf.wacc?.beta || waccInputs.beta) - waccInputs.industryBeta).toFixed(2)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Validation Notes */}\n            <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n              <div className=\"flex items-start gap-2\">\n                <BookOpen size={16} className=\"text-blue-600 mt-0.5\" />\n                <div>\n                  <h6 className=\"font-medium text-blue-800 mb-2\">Validation Guidelines</h6>\n                  <ul className=\"text-sm text-blue-700 space-y-1\">\n                    <li>• WACC should be within ±2% of industry average for similar companies</li>\n                    <li>• Beta should reflect business risk relative to market (typically 0.8-1.5 for most companies)</li>\n                    <li>• Cost of equity should exceed risk-free rate by at least 4-6% for private companies</li>\n                    <li>• Debt/equity ratio should align with industry norms and company strategy</li>\n                    <li>• Consider economic conditions and company-specific factors</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WACCCalculator;","import React, { useState, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { Users, TrendingUp, BarChart3, Plus, Search, DollarSign, Percent, Target, Filter } from 'lucide-react';\n\nconst ComparableAnalysis = ({ data, formatCurrency, formatPercent }) => {\n  const [activeTab, setActiveTab] = useState('multiples');\n  const [selectedMultiple, setSelectedMultiple] = useState('ev_revenue');\n  const [showAddComp, setShowAddComp] = useState(false);\n  \n  // Sample comparable companies data (in practice, this would come from external API)\n  const [comparableCompanies, setComparableCompanies] = useState([\n    {\n      id: 1,\n      name: 'MedSpa Corp',\n      ticker: 'MSPA',\n      marketCap: 450000, // $450M\n      enterpriseValue: 520000, // $520M\n      revenue: 180000, // $180M\n      ebitda: 45000, // $45M\n      netIncome: 28000, // $28M\n      employees: 1200,\n      founded: 2015,\n      geography: 'US',\n      businessModel: 'B2C Medical Spa Chain'\n    },\n    {\n      id: 2,\n      name: 'Wellness Holdings',\n      ticker: 'WELL',\n      marketCap: 680000,\n      enterpriseValue: 750000,\n      revenue: 220000,\n      ebitda: 55000,\n      netIncome: 35000,\n      employees: 1800,\n      founded: 2012,\n      geography: 'US',\n      businessModel: 'Integrated Wellness Platform'\n    },\n    {\n      id: 3,\n      name: 'Aesthetic Solutions Inc',\n      ticker: 'AEST',\n      marketCap: 320000,\n      enterpriseValue: 380000,\n      revenue: 125000,\n      ebitda: 32000,\n      netIncome: 18000,\n      employees: 850,\n      founded: 2018,\n      geography: 'US',\n      businessModel: 'Medical Device & Services'\n    },\n    {\n      id: 4,\n      name: 'Premium Health Group',\n      ticker: 'PHG',\n      marketCap: 920000,\n      enterpriseValue: 1050000,\n      revenue: 310000,\n      ebitda: 78000,\n      netIncome: 48000,\n      employees: 2500,\n      founded: 2010,\n      geography: 'US',\n      businessModel: 'Premium Healthcare Services'\n    }\n  ]);\n\n  // Calculate multiples for comparable companies\n  const comparableMultiples = useMemo(() => {\n    return comparableCompanies.map(comp => ({\n      ...comp,\n      multiples: {\n        ev_revenue: comp.enterpriseValue / comp.revenue,\n        ev_ebitda: comp.enterpriseValue / comp.ebitda,\n        pe_ratio: comp.marketCap / comp.netIncome,\n        revenue_per_employee: comp.revenue / comp.employees,\n        market_cap_revenue: comp.marketCap / comp.revenue\n      }\n    }));\n  }, [comparableCompanies]);\n\n  // Calculate market statistics\n  const marketStats = useMemo(() => {\n    const multiples = comparableMultiples.map(c => c.multiples);\n    \n    const calculateStats = (values) => ({\n      mean: values.reduce((a, b) => a + b, 0) / values.length,\n      median: values.sort((a, b) => a - b)[Math.floor(values.length / 2)],\n      min: Math.min(...values),\n      max: Math.max(...values),\n      p25: values.sort((a, b) => a - b)[Math.floor(values.length * 0.25)],\n      p75: values.sort((a, b) => a - b)[Math.floor(values.length * 0.75)]\n    });\n\n    return {\n      ev_revenue: calculateStats(multiples.map(m => m.ev_revenue)),\n      ev_ebitda: calculateStats(multiples.map(m => m.ev_ebitda)),\n      pe_ratio: calculateStats(multiples.map(m => m.pe_ratio)),\n      revenue_per_employee: calculateStats(multiples.map(m => m.revenue_per_employee)),\n      market_cap_revenue: calculateStats(multiples.map(m => m.market_cap_revenue))\n    };\n  }, [comparableMultiples]);\n\n  // Calculate implied valuation for target company\n  const impliedValuation = useMemo(() => {\n    const targetRevenue = data.statements.incomeStatement.totalRevenue?.[1] || 100000; // Year 1 revenue\n    const targetEBITDA = (data.statements.incomeStatement.operatingIncome?.[1] || 50000) * 1.15; // Approx EBITDA\n    const targetNetIncome = (data.statements.incomeStatement.operatingIncome?.[1] || 50000) * 0.7; // Approx net income\n\n    return {\n      ev_revenue: {\n        mean: targetRevenue * marketStats.ev_revenue.mean,\n        median: targetRevenue * marketStats.ev_revenue.median,\n        p25: targetRevenue * marketStats.ev_revenue.p25,\n        p75: targetRevenue * marketStats.ev_revenue.p75\n      },\n      ev_ebitda: {\n        mean: targetEBITDA * marketStats.ev_ebitda.mean,\n        median: targetEBITDA * marketStats.ev_ebitda.median,\n        p25: targetEBITDA * marketStats.ev_ebitda.p25,\n        p75: targetEBITDA * marketStats.ev_ebitda.p75\n      },\n      pe_ratio: {\n        mean: targetNetIncome * marketStats.pe_ratio.mean,\n        median: targetNetIncome * marketStats.pe_ratio.median,\n        p25: targetNetIncome * marketStats.pe_ratio.p25,\n        p75: targetNetIncome * marketStats.pe_ratio.p75\n      }\n    };\n  }, [data, marketStats]);\n\n  const multipleDefinitions = {\n    ev_revenue: { name: 'EV/Revenue', description: 'Enterprise Value / Annual Revenue' },\n    ev_ebitda: { name: 'EV/EBITDA', description: 'Enterprise Value / EBITDA' },\n    pe_ratio: { name: 'P/E Ratio', description: 'Market Cap / Net Income' },\n    revenue_per_employee: { name: 'Revenue/Employee', description: 'Revenue per Employee' },\n    market_cap_revenue: { name: 'Market Cap/Revenue', description: 'Market Cap / Revenue' }\n  };\n\n  const addComparableCompany = (companyData) => {\n    const newCompany = {\n      id: Date.now(),\n      ...companyData,\n      marketCap: parseFloat(companyData.marketCap) || 0,\n      enterpriseValue: parseFloat(companyData.enterpriseValue) || 0,\n      revenue: parseFloat(companyData.revenue) || 0,\n      ebitda: parseFloat(companyData.ebitda) || 0,\n      netIncome: parseFloat(companyData.netIncome) || 0,\n      employees: parseInt(companyData.employees) || 0,\n      founded: parseInt(companyData.founded) || new Date().getFullYear()\n    };\n    setComparableCompanies([...comparableCompanies, newCompany]);\n    setShowAddComp(false);\n  };\n\n  const removeComparable = (id) => {\n    setComparableCompanies(comparableCompanies.filter(comp => comp.id !== id));\n  };\n\n  const tabs = [\n    { id: 'multiples', label: 'Trading Multiples', icon: BarChart3 },\n    { id: 'analysis', label: 'Valuation Analysis', icon: Target },\n    { id: 'companies', label: 'Comparable Set', icon: Users }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Users size={20} />\n            Comparable Company Analysis\n          </h3>\n          <p className=\"text-gray-600\">\n            Market-based valuation using trading multiples from similar public companies.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => setShowAddComp(true)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2 text-sm\"\n          >\n            <Plus size={16} />\n            Add Comparable\n          </button>\n        </div>\n      </div>\n\n      {/* Key Results Summary */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <motion.div \n          className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <BarChart3 size={20} className=\"text-blue-600\" />\n            <span className=\"text-xs text-blue-600 font-medium\">EV/REVENUE</span>\n          </div>\n          <div className=\"text-2xl font-bold text-blue-800\">\n            {marketStats.ev_revenue.median.toFixed(1)}x\n          </div>\n          <div className=\"text-sm text-blue-600 mt-1\">\n            Median multiple\n          </div>\n        </motion.div>\n\n        <motion.div \n          className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <TrendingUp size={20} className=\"text-green-600\" />\n            <span className=\"text-xs text-green-600 font-medium\">IMPLIED VALUE</span>\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {formatCurrency(impliedValuation.ev_revenue.median)}\n          </div>\n          <div className=\"text-sm text-green-600 mt-1\">\n            EV/Revenue basis\n          </div>\n        </motion.div>\n\n        <motion.div \n          className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <DollarSign size={20} className=\"text-purple-600\" />\n            <span className=\"text-xs text-purple-600 font-medium\">VALUATION RANGE</span>\n          </div>\n          <div className=\"text-lg font-bold text-purple-800\">\n            {formatCurrency(impliedValuation.ev_revenue.p25)} - {formatCurrency(impliedValuation.ev_revenue.p75)}\n          </div>\n          <div className=\"text-sm text-purple-600 mt-1\">\n            25th - 75th percentile\n          </div>\n        </motion.div>\n\n        <motion.div \n          className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Users size={20} className=\"text-orange-600\" />\n            <span className=\"text-xs text-orange-600 font-medium\">PEER COUNT</span>\n          </div>\n          <div className=\"text-2xl font-bold text-orange-800\">\n            {comparableCompanies.length}\n          </div>\n          <div className=\"text-sm text-orange-600 mt-1\">\n            Comparable companies\n          </div>\n        </motion.div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg\">\n        {tabs.map((tab) => {\n          const Icon = tab.icon;\n          return (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`flex-1 flex items-center justify-center gap-2 py-2 px-4 rounded-md transition-all ${\n                activeTab === tab.id\n                  ? 'bg-white text-blue-600 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <Icon size={16} />\n              {tab.label}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        {activeTab === 'multiples' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h4 className=\"font-semibold text-lg\">Trading Multiples Analysis</h4>\n              <select\n                value={selectedMultiple}\n                onChange={(e) => setSelectedMultiple(e.target.value)}\n                className=\"px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                {Object.entries(multipleDefinitions).map(([key, def]) => (\n                  <option key={key} value={key}>{def.name}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full text-sm\">\n                <thead>\n                  <tr className=\"border-b bg-gray-50\">\n                    <th className=\"text-left p-3 font-medium\">Company</th>\n                    <th className=\"text-right p-3 font-medium\">Market Cap</th>\n                    <th className=\"text-right p-3 font-medium\">Enterprise Value</th>\n                    <th className=\"text-right p-3 font-medium\">Revenue</th>\n                    <th className=\"text-right p-3 font-medium\">EV/Revenue</th>\n                    <th className=\"text-right p-3 font-medium\">EV/EBITDA</th>\n                    <th className=\"text-right p-3 font-medium\">P/E Ratio</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {comparableMultiples.map((comp, index) => (\n                    <tr key={comp.id} className=\"border-b hover:bg-gray-50\">\n                      <td className=\"p-3\">\n                        <div>\n                          <div className=\"font-medium\">{comp.name}</div>\n                          <div className=\"text-xs text-gray-500\">{comp.ticker}</div>\n                        </div>\n                      </td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.marketCap)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.enterpriseValue)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.revenue)}</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.ev_revenue.toFixed(1)}x</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.ev_ebitda.toFixed(1)}x</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.pe_ratio.toFixed(1)}x</td>\n                    </tr>\n                  ))}\n                  \n                  {/* Summary Statistics */}\n                  <tr className=\"border-t-2 border-gray-300 bg-blue-50 font-semibold\">\n                    <td className=\"p-3\">Market Statistics</td>\n                    <td className=\"p-3\"></td>\n                    <td className=\"p-3\"></td>\n                    <td className=\"p-3\"></td>\n                    <td className=\"p-3 text-right\">{marketStats.ev_revenue.median.toFixed(1)}x</td>\n                    <td className=\"p-3 text-right\">{marketStats.ev_ebitda.median.toFixed(1)}x</td>\n                    <td className=\"p-3 text-right\">{marketStats.pe_ratio.median.toFixed(1)}x</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            {/* Multiple Distribution Chart */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <div className=\"p-4 bg-gray-50 rounded-lg\">\n                <h6 className=\"font-medium mb-3\">Multiple Distribution</h6>\n                <div className=\"space-y-3\">\n                  {Object.entries(marketStats).slice(0, 3).map(([key, stats]) => (\n                    <div key={key}>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>{multipleDefinitions[key].name}</span>\n                        <span className=\"font-medium\">{stats.median.toFixed(1)}x</span>\n                      </div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                        <div\n                          className=\"bg-blue-500 h-2 rounded-full\"\n                          style={{\n                            width: `${((stats.median - stats.min) / (stats.max - stats.min)) * 100}%`\n                          }}\n                        />\n                      </div>\n                      <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                        <span>{stats.min.toFixed(1)}x</span>\n                        <span>{stats.max.toFixed(1)}x</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"p-4 bg-gray-50 rounded-lg\">\n                <h6 className=\"font-medium mb-3\">Key Statistics</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Companies Analyzed:</span>\n                    <span className=\"font-medium\">{comparableCompanies.length}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Median Market Cap:</span>\n                    <span className=\"font-medium\">{formatCurrency(comparableCompanies.sort((a, b) => a.marketCap - b.marketCap)[Math.floor(comparableCompanies.length / 2)]?.marketCap || 0)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Median Revenue:</span>\n                    <span className=\"font-medium\">{formatCurrency(comparableCompanies.sort((a, b) => a.revenue - b.revenue)[Math.floor(comparableCompanies.length / 2)]?.revenue || 0)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Avg Founded Year:</span>\n                    <span className=\"font-medium\">{Math.round(comparableCompanies.reduce((sum, c) => sum + c.founded, 0) / comparableCompanies.length)}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'analysis' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">Valuation Analysis</h4>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Implied Valuation */}\n              <div>\n                <h5 className=\"font-medium mb-4\">Implied Valuation by Multiple</h5>\n                <div className=\"space-y-4\">\n                  {Object.entries(impliedValuation).map(([multiple, values]) => (\n                    <div key={multiple} className=\"p-4 border rounded-lg\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"font-medium\">{multipleDefinitions[multiple].name}</span>\n                        <span className=\"text-sm text-gray-500\">\n                          {marketStats[multiple].median.toFixed(1)}x median\n                        </span>\n                      </div>\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span>25th Percentile:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.p25)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Median:</span>\n                          <span className=\"font-bold text-blue-600\">{formatCurrency(values.median)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>75th Percentile:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.p75)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Mean:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.mean)}</span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Valuation Summary */}\n              <div>\n                <h5 className=\"font-medium mb-4\">Valuation Summary</h5>\n                <div className=\"p-6 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-200\">\n                  <div className=\"space-y-4\">\n                    <div>\n                      <div className=\"text-sm text-blue-600 font-medium mb-1\">Recommended Range</div>\n                      <div className=\"text-2xl font-bold text-blue-800\">\n                        {formatCurrency((impliedValuation.ev_revenue.p25 + impliedValuation.ev_ebitda.p25) / 2)} - \n                        {formatCurrency((impliedValuation.ev_revenue.p75 + impliedValuation.ev_ebitda.p75) / 2)}\n                      </div>\n                      <div className=\"text-sm text-blue-600\">Blended 25th-75th percentile</div>\n                    </div>\n                    \n                    <div>\n                      <div className=\"text-sm text-blue-600 font-medium mb-1\">Midpoint Valuation</div>\n                      <div className=\"text-xl font-bold text-blue-800\">\n                        {formatCurrency((impliedValuation.ev_revenue.median + impliedValuation.ev_ebitda.median) / 2)}\n                      </div>\n                      <div className=\"text-sm text-blue-600\">Average of median multiples</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mt-4 p-4 bg-yellow-50 rounded-lg border border-yellow-200\">\n                  <div className=\"flex items-start gap-2\">\n                    <Target size={16} className=\"text-yellow-600 mt-0.5\" />\n                    <div>\n                      <h6 className=\"font-medium text-yellow-800 mb-1\">Valuation Considerations</h6>\n                      <ul className=\"text-sm text-yellow-700 space-y-1\">\n                        <li>• Consider company-specific growth and margin profiles</li>\n                        <li>• Adjust for differences in business model and scale</li>\n                        <li>• Factor in market conditions and sector trends</li>\n                        <li>• Apply appropriate discount for private company liquidity</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'companies' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h4 className=\"font-semibold text-lg\">Comparable Company Set</h4>\n              <div className=\"flex gap-2\">\n                <div className=\"relative\">\n                  <Search size={16} className=\"absolute left-3 top-3 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search companies...\"\n                    className=\"pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <button className=\"px-3 py-2 border rounded-lg hover:bg-gray-50 flex items-center gap-2\">\n                  <Filter size={16} />\n                  Filter\n                </button>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n              {comparableCompanies.map((comp) => (\n                <motion.div\n                  key={comp.id}\n                  className=\"border rounded-lg p-4 hover:shadow-lg transition-shadow\"\n                  whileHover={{ y: -2 }}\n                >\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <div>\n                      <h6 className=\"font-semibold text-gray-800\">{comp.name}</h6>\n                      <div className=\"text-sm text-gray-500\">{comp.ticker} • {comp.geography}</div>\n                    </div>\n                    <button\n                      onClick={() => removeComparable(comp.id)}\n                      className=\"text-red-500 hover:bg-red-50 p-1 rounded\"\n                    >\n                      ×\n                    </button>\n                  </div>\n                  \n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span>Market Cap:</span>\n                      <span className=\"font-medium\">{formatCurrency(comp.marketCap)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Revenue:</span>\n                      <span className=\"font-medium\">{formatCurrency(comp.revenue)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>EV/Revenue:</span>\n                      <span className=\"font-medium\">{(comp.enterpriseValue / comp.revenue).toFixed(1)}x</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Founded:</span>\n                      <span className=\"font-medium\">{comp.founded}</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"mt-3 pt-3 border-t\">\n                    <div className=\"text-xs text-gray-600\">{comp.businessModel}</div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Add Comparable Modal */}\n      {showAddComp && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h4 className=\"font-semibold text-lg mb-4\">Add Comparable Company</h4>\n            <form onSubmit={(e) => {\n              e.preventDefault();\n              const formData = new FormData(e.target);\n              addComparableCompany(Object.fromEntries(formData));\n            }}>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Company Name</label>\n                  <input name=\"name\" type=\"text\" required className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\" />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Ticker</label>\n                  <input name=\"ticker\" type=\"text\" required className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\" />\n                </div>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Market Cap ($000s)</label>\n                    <input name=\"marketCap\" type=\"number\" required className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\" />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Enterprise Value ($000s)</label>\n                    <input name=\"enterpriseValue\" type=\"number\" required className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\" />\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Revenue ($000s)</label>\n                    <input name=\"revenue\" type=\"number\" required className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\" />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">EBITDA ($000s)</label>\n                    <input name=\"ebitda\" type=\"number\" required className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\" />\n                  </div>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Business Model</label>\n                  <input name=\"businessModel\" type=\"text\" required className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\" />\n                </div>\n              </div>\n              \n              <div className=\"flex gap-3 mt-6\">\n                <button type=\"submit\" className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\">\n                  Add Company\n                </button>\n                <button \n                  type=\"button\" \n                  onClick={() => setShowAddComp(false)}\n                  className=\"flex-1 px-4 py-2 border rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ComparableAnalysis;","import React, { useState, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { Target, BarChart3, Activity, DollarSign, Users, Zap } from 'lucide-react';\nimport ScenarioModeling from './ScenarioModeling.jsx';\nimport SensitivityAnalysis from './SensitivityAnalysis.jsx';\nimport AdvancedDCF from './AdvancedDCF.jsx';\nimport ComparableAnalysis from './ComparableAnalysis.jsx';\nimport MonteCarloSimulation from './MonteCarloSimulation.jsx';\n\nconst ModelingTools = ({ data, adjustedValues, onDataChange }) => {\n  const [activeModel, setActiveModel] = useState('dcf');\n  const [modelInputs, setModelInputs] = useState({\n    dcf: {\n      discountRate: 10,\n      terminalGrowthRate: 2.5,\n      projectionYears: 5,\n      terminalValueMultiple: 10,\n      taxRate: 25,\n      sharesOutstanding: 1000,\n      workingCapital: {\n        receivablesDays: 45,\n        inventoryDays: 60,\n        payablesDays: 30,\n        receivablesGrowth: 2,\n        inventoryGrowth: 1.5,\n        payablesGrowth: 1.8\n      },\n      capex: {\n        capexAsPercentOfRevenue: 3.5,\n        depreciationRate: 7,\n        maintenanceCapex: 2.0\n      }\n    },\n    ratios: {\n      compareToIndustry: true,\n      industryAverages: {\n        grossMargin: 45,\n        operatingMargin: 15,\n        netMargin: 8,\n        currentRatio: 2.1,\n        debtToEquity: 0.5\n      }\n    },\n    sensitivity: {\n      variables: ['revenue', 'grossMargin', 'discountRate'],\n      ranges: {\n        revenue: { min: -20, max: 20 },\n        grossMargin: { min: -5, max: 5 },\n        discountRate: { min: 8, max: 15 }\n      }\n    },\n    scenario: {\n      scenarios: [\n        { name: 'Base Case', probability: 50, revenueGrowth: 15, marginImprovement: 0 },\n        { name: 'Bull Case', probability: 25, revenueGrowth: 25, marginImprovement: 2 },\n        { name: 'Bear Case', probability: 25, revenueGrowth: 5, marginImprovement: -2 }\n      ]\n    }\n  });\n\n  // Calculate financial metrics from the spreadsheet data\n  const calculatedMetrics = useMemo(() => {\n    const statements = data.statements.incomeStatement;\n    const periods = data.periods;\n    \n    const metrics = {\n      revenue: [],\n      grossProfit: [],\n      operatingIncome: [],\n      margins: {\n        gross: [],\n        operating: [],\n        net: []\n      },\n      growth: {\n        revenue: [],\n        operating: []\n      }\n    };\n\n    periods.forEach((_, index) => {\n      // Revenue metrics - Use adjusted values for latest period when available\n      const isLatestPeriod = index === periods.length - 1;\n      const revenue = isLatestPeriod && adjustedValues?.totalRevenue \n        ? adjustedValues.totalRevenue \n        : statements.totalRevenue?.[index] || 0;\n      const totalCOGS = isLatestPeriod && adjustedValues?.totalCostOfGoodsSold \n        ? adjustedValues.totalCostOfGoodsSold \n        : statements.totalCostOfGoodsSold?.[index] || 0;\n      const grossProfit = isLatestPeriod && adjustedValues?.grossProfit \n        ? adjustedValues.grossProfit \n        : statements.grossProfit?.[index] || (revenue - totalCOGS);\n      const operatingIncome = isLatestPeriod && adjustedValues?.operatingIncome \n        ? adjustedValues.operatingIncome \n        : statements.operatingIncome?.[index] || 0;\n      \n      metrics.revenue.push(revenue);\n      metrics.grossProfit.push(grossProfit);\n      metrics.operatingIncome.push(operatingIncome);\n      \n      // Margin calculations\n      metrics.margins.gross.push(revenue ? (grossProfit / revenue) * 100 : 0);\n      metrics.margins.operating.push(revenue ? (operatingIncome / revenue) * 100 : 0);\n      \n      // Growth calculations\n      if (index > 0) {\n        const prevRevenue = statements.totalRevenue?.[index - 1] || 0;\n        const prevOperating = statements.operatingIncome?.[index - 1] || 0;\n        \n        metrics.growth.revenue.push(prevRevenue ? ((revenue - prevRevenue) / prevRevenue) * 100 : 0);\n        metrics.growth.operating.push(prevOperating ? ((operatingIncome - prevOperating) / prevOperating) * 100 : 0);\n      }\n    });\n\n    return metrics;\n  }, [data]);\n\n  // DCF Calculation - Enhanced to work with scenario data\n  const calculateDCF = (inputData = null) => {\n    const { discountRate, terminalGrowthRate, projectionYears, taxRate } = modelInputs.dcf;\n    const sourceData = inputData || data;\n    \n    // Use either scenario data or calculated metrics\n    let operatingIncomes;\n    if (inputData) {\n      // For scenario data, extract operating incomes directly\n      operatingIncomes = [];\n      sourceData.periods.forEach((_, index) => {\n        if (index > 0 && index <= projectionYears) {\n          operatingIncomes.push(sourceData.statements.incomeStatement.operatingIncome?.[index] || 0);\n        }\n      });\n    } else {\n      // For regular calculation, use calculated metrics\n      operatingIncomes = calculatedMetrics.operatingIncome.slice(1, projectionYears + 1);\n    }\n    \n    if (operatingIncomes.length === 0) return { enterpriseValue: 0, equityValue: 0, sharePrice: 0 };\n\n    let presentValue = 0;\n    const discountFactor = 1 + (discountRate / 100);\n\n    // Calculate present value of cash flows\n    operatingIncomes.forEach((income, index) => {\n      const afterTaxIncome = income * (1 - taxRate / 100);\n      const pv = afterTaxIncome / Math.pow(discountFactor, index + 1);\n      presentValue += pv;\n    });\n\n    // Terminal value\n    const lastYearIncome = operatingIncomes[operatingIncomes.length - 1] || 0;\n    const terminalCashFlow = lastYearIncome * (1 + terminalGrowthRate / 100) * (1 - taxRate / 100);\n    const terminalValue = terminalCashFlow / ((discountRate - terminalGrowthRate) / 100);\n    const presentTerminalValue = terminalValue / Math.pow(discountFactor, projectionYears);\n\n    const enterpriseValue = presentValue + presentTerminalValue;\n    \n    return {\n      enterpriseValue,\n      equityValue: enterpriseValue, // Simplified - would subtract net debt\n      presentValueOperations: presentValue,\n      presentValueTerminal: presentTerminalValue,\n      terminalValue\n    };\n  };\n\n  const dcfResults = calculateDCF();\n\n  const modelTypes = [\n    { id: 'dcf', label: 'DCF Valuation', icon: DollarSign, description: 'Discounted Cash Flow analysis' },\n    { id: 'ratios', label: 'Ratio Analysis', icon: BarChart3, description: 'Financial ratio comparison' },\n    { id: 'sensitivity', label: 'Sensitivity Analysis', icon: Activity, description: 'Variable impact analysis' },\n    { id: 'scenario', label: 'Scenario Modeling', icon: Target, description: 'Multi-scenario projections' },\n    { id: 'comparable', label: 'Comparable Analysis', icon: Users, description: 'Market-based valuation' },\n    { id: 'montecarlo', label: 'Monte Carlo', icon: Zap, description: 'Probabilistic risk analysis' }\n  ];\n\n  const updateModelInput = (modelType, field, value) => {\n    setModelInputs(prev => ({\n      ...prev,\n      [modelType]: {\n        ...prev[modelType],\n        [field]: value\n      }\n    }));\n  };\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value * 1000); // Convert from thousands\n  };\n\n  const formatPercent = (value) => {\n    return `${value.toFixed(1)}%`;\n  };\n\n  return (\n    <div className=\"h-full bg-gray-900 text-white p-6\">\n      {/* Streamlined Model Selection */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div>\n            <h2 className=\"text-xl font-semibold text-white\">Financial Modeling</h2>\n            <p className=\"text-gray-400 text-sm mt-1\">Select a modeling approach to analyze your financial data</p>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2 mb-6\">\n          {modelTypes.map((type) => {\n            const Icon = type.icon;\n            return (\n              <button\n                key={type.id}\n                onClick={() => setActiveModel(type.id)}\n                className={`${\n                  activeModel === type.id \n                    ? 'bg-blue-600 text-white border-blue-500 shadow-lg' \n                    : 'bg-gray-800 text-gray-300 border-gray-700 hover:bg-gray-700 hover:text-white hover:border-gray-600'\n                } flex items-center gap-3 px-4 py-3 rounded-lg border transition-all duration-200`}\n              >\n                <Icon size={18} className={activeModel === type.id ? 'text-white' : 'text-blue-400'} />\n                <span className=\"font-medium\">{type.label}</span>\n              </button>\n            );\n          })}\n        </div>\n        \n        {/* Active Model Description */}\n        <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\n          <div className=\"flex items-center gap-3\">\n            {React.createElement(modelTypes.find(t => t.id === activeModel)?.icon, { \n              size: 20, \n              className: \"text-blue-400\" \n            })}\n            <div>\n              <h3 className=\"font-medium text-white\">\n                {modelTypes.find(t => t.id === activeModel)?.label}\n              </h3>\n              <p className=\"text-gray-400 text-sm\">\n                {modelTypes.find(t => t.id === activeModel)?.description}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Model Content */}\n      <div>\n        {activeModel === 'dcf' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <DollarSign size={20} className=\"text-blue-400\" />\n              DCF Valuation Model\n            </h3>\n            \n            <AdvancedDCF\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'ratios' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <BarChart3 size={20} />\n              Financial Ratio Analysis\n            </h3>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {/* Profitability Ratios */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Profitability Ratios</h4>\n                <div className=\"space-y-3\">\n                  {calculatedMetrics.margins.gross.map((margin, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Gross Margin:</span>\n                      <span className=\"font-medium\">{formatPercent(margin)}</span>\n                    </div>\n                  ))}\n                  {calculatedMetrics.margins.operating.map((margin, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Operating Margin:</span>\n                      <span className=\"font-medium\">{formatPercent(margin)}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Growth Ratios */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Growth Rates</h4>\n                <div className=\"space-y-3\">\n                  {calculatedMetrics.growth.revenue.map((growth, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Revenue Growth:</span>\n                      <span className={`font-medium ${growth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {formatPercent(growth)}\n                      </span>\n                    </div>\n                  ))}\n                  {calculatedMetrics.growth.operating.map((growth, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Operating Growth:</span>\n                      <span className={`font-medium ${growth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {formatPercent(growth)}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Industry Comparison */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Industry Comparison</h4>\n                <div className=\"space-y-3\">\n                  <div className=\"p-3 bg-gray-700 rounded-lg\">\n                    <div className=\"text-xs text-gray-400 uppercase tracking-wide\">Industry Avg</div>\n                    <div className=\"text-sm\">Gross Margin: {formatPercent(modelInputs.ratios.industryAverages.grossMargin)}</div>\n                    <div className=\"text-sm\">Operating Margin: {formatPercent(modelInputs.ratios.industryAverages.operatingMargin)}</div>\n                    <div className=\"text-sm\">Net Margin: {formatPercent(modelInputs.ratios.industryAverages.netMargin)}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeModel === 'sensitivity' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <Activity size={20} />\n              Sensitivity Analysis\n            </h3>\n            \n            <SensitivityAnalysis\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              calculateDCF={calculateDCF}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'scenario' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <Target size={20} />\n              Scenario Modeling\n            </h3>\n            \n            <ScenarioModeling\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              calculateDCF={calculateDCF}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'comparable' && (\n          <div className=\"p-6\">\n            <ComparableAnalysis\n              data={data}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'montecarlo' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2\">\n              <Zap size={20} />\n              Monte Carlo Simulation\n            </h3>\n            \n            <MonteCarloSimulation\n              data={data}\n              onDataChange={onDataChange}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ModelingTools;\n","import React, { useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  TrendingUp, \n  TrendingDown, \n  DollarSign, \n  Percent, \n  BarChart3,\n  Target,\n  AlertTriangle,\n  CheckCircle,\n  Calculator,\n  PieChart,\n  Activity,\n  Zap,\n  Shield,\n  Clock,\n  Layers,\n  Award,\n  TrendingDown as Decline,\n  Eye,\n  FileText,\n  BarChart2,\n  LineChart,\n  Timer,\n  ArrowUpRight,\n  ArrowDownRight,\n  Gauge,\n  CreditCard,\n  Banknote,\n  Building2,\n  Users,\n  Star\n} from 'lucide-react';\n\nconst AnalysisResults = ({ \n  data, \n  adjustedValues,\n  modelInputs, \n  calculateDCF, \n  formatCurrency, \n  formatPercentage \n}) => {\n  // Calculate comprehensive financial metrics\n  const analysis = useMemo(() => {\n    try {\n      if (!data?.statements?.incomeStatement) return null;\n\n      const income = data.statements.incomeStatement;\n      const periods = Object.keys(income.totalRevenue || {}).sort((a, b) => parseInt(a) - parseInt(b));\n      \n      if (periods.length < 2) return null;\n\n    const latest = periods[periods.length - 1];\n    const previous = periods[periods.length - 2];\n    const earliest = periods[0];\n\n    // Financial Performance Analysis - Use adjusted values for latest period when available\n    const revenueLatest = adjustedValues?.totalRevenue || income.totalRevenue?.[latest] || 0;\n    const revenuePrevious = income.totalRevenue?.[previous] || 0;\n    const revenueEarliest = income.totalRevenue?.[earliest] || 0;\n    \n    const grossProfitLatest = adjustedValues?.grossProfit || income.grossProfit?.[latest] || 0;\n    const grossProfitPrevious = income.grossProfit?.[previous] || 0;\n    \n    const operatingIncomeLatest = adjustedValues?.operatingIncome || income.operatingIncome?.[latest] || 0;\n    const operatingIncomePrevious = income.operatingIncome?.[previous] || 0;\n    \n    const totalCOGSLatest = adjustedValues?.totalCostOfGoodsSold || income.totalCostOfGoodsSold?.[latest] || 0;\n    const totalCOGSPrevious = income.totalCostOfGoodsSold?.[previous] || 0;\n\n    // Growth Calculations\n    const revenueGrowthYoY = revenuePrevious ? ((revenueLatest - revenuePrevious) / revenuePrevious) * 100 : 0;\n    const revenueCAGR = revenueEarliest && periods.length > 2 ? \n      (Math.pow(revenueLatest / revenueEarliest, 1 / (periods.length - 1)) - 1) * 100 : 0;\n    \n    const grossProfitGrowth = grossProfitPrevious ? ((grossProfitLatest - grossProfitPrevious) / grossProfitPrevious) * 100 : 0;\n    const operatingIncomeGrowth = operatingIncomePrevious ? ((operatingIncomeLatest - operatingIncomePrevious) / operatingIncomePrevious) * 100 : 0;\n\n    // Profitability Ratios (with safe calculations)\n    const grossMarginLatest = (revenueLatest && revenueLatest !== 0) ? (grossProfitLatest / revenueLatest) * 100 : 0;\n    const grossMarginPrevious = (revenuePrevious && revenuePrevious !== 0) ? (grossProfitPrevious / revenuePrevious) * 100 : 0;\n    const operatingMarginLatest = (revenueLatest && revenueLatest !== 0) ? (operatingIncomeLatest / revenueLatest) * 100 : 0;\n    const operatingMarginPrevious = (revenuePrevious && revenuePrevious !== 0) ? (operatingIncomePrevious / revenuePrevious) * 100 : 0;\n    \n    const marginImprovement = isFinite(grossMarginLatest) && isFinite(grossMarginPrevious) ? grossMarginLatest - grossMarginPrevious : 0;\n    const operatingMarginChange = isFinite(operatingMarginLatest) && isFinite(operatingMarginPrevious) ? operatingMarginLatest - operatingMarginPrevious : 0;\n\n    // DCF Analysis\n    let dcfResults = null;\n    if (calculateDCF) {\n      try {\n        dcfResults = calculateDCF(data);\n      } catch (error) {\n        console.error('DCF calculation error:', error);\n      }\n    }\n\n    // Business Unit Analysis (Revenue Breakdown) - with safe value access\n    const revenueBreakdown = [\n      { name: 'Energy Devices', value: Number(income.energyDevices?.[latest]) || 0 },\n      { name: 'Injectables', value: Number(income.injectables?.[latest]) || 0 },\n      { name: 'Wellness', value: Number(income.wellness?.[latest]) || 0 },\n      { name: 'Weightloss', value: Number(income.weightloss?.[latest]) || 0 },\n      { name: 'Retail Sales', value: Number(income.retailSales?.[latest]) || 0 },\n      { name: 'Surgery', value: Number(income.surgery?.[latest]) || 0 }\n    ].filter(item => item.value > 0 && isFinite(item.value));\n\n    // Advanced Financial Ratios and Metrics\n    const totalAssets = income.totalAssets?.[latest] || revenueLatest * 1.2; // Estimate if not provided\n    const totalEquity = income.totalEquity?.[latest] || totalAssets * 0.6; // Estimate if not provided\n    const totalDebt = income.totalDebt?.[latest] || totalAssets * 0.3; // Estimate if not provided\n    const currentAssets = income.currentAssets?.[latest] || totalAssets * 0.4; // Estimate if not provided\n    const currentLiabilities = income.currentLiabilities?.[latest] || totalAssets * 0.2; // Estimate if not provided\n    const inventory = income.inventory?.[latest] || revenueLatest * 0.15; // Estimate if not provided\n    const accountsReceivable = income.accountsReceivable?.[latest] || revenueLatest * 0.1; // Estimate if not provided\n    const cashAndEquivalents = income.cashAndEquivalents?.[latest] || totalAssets * 0.1; // Estimate if not provided\n    \n    // Advanced Ratios\n    const returnOnAssets = (totalAssets && totalAssets !== 0) ? (operatingIncomeLatest / totalAssets) * 100 : 0;\n    const returnOnEquity = (totalEquity && totalEquity !== 0) ? (operatingIncomeLatest / totalEquity) * 100 : 0;\n    const debtToEquity = (totalEquity && totalEquity !== 0) ? totalDebt / totalEquity : 0;\n    const currentRatio = (currentLiabilities && currentLiabilities !== 0) ? currentAssets / currentLiabilities : 0;\n    const quickRatio = (currentLiabilities && currentLiabilities !== 0) ? (currentAssets - inventory) / currentLiabilities : 0;\n    const assetTurnover = (totalAssets && totalAssets !== 0) ? revenueLatest / totalAssets : 0;\n    const inventoryTurnover = (inventory && inventory !== 0) ? (revenueLatest * 0.7) / inventory : 0; // Assuming COGS is 70% of revenue\n    const receivablesTurnover = (accountsReceivable && accountsReceivable !== 0) ? revenueLatest / accountsReceivable : 0;\n    const cashRatio = (currentLiabilities && currentLiabilities !== 0) ? cashAndEquivalents / currentLiabilities : 0;\n    const workingCapital = currentAssets - currentLiabilities;\n    const workingCapitalRatio = (revenueLatest && revenueLatest !== 0) ? workingCapital / revenueLatest : 0;\n    \n    // Efficiency Metrics\n    const operatingCycle = inventoryTurnover > 0 && receivablesTurnover > 0 ? (365 / inventoryTurnover) + (365 / receivablesTurnover) : 0;\n    const cashConversionCycle = operatingCycle > 0 ? operatingCycle - 30 : 0; // Assuming 30 days payable period\n    \n    // Growth Quality Metrics\n    const operatingLeverage = grossProfitPrevious !== 0 ? (operatingIncomeGrowth / revenueGrowthYoY) : 0;\n    const profitabilityTrend = (operatingMarginLatest - operatingMarginPrevious) * 100;\n    \n    // Risk Metrics\n    const financialLeverage = (totalEquity && totalEquity !== 0) ? totalAssets / totalEquity : 0;\n    const interestCoverage = income.interestExpense?.[latest] ? operatingIncomeLatest / income.interestExpense[latest] : 0;\n    const debtServiceCoverage = income.debtService?.[latest] ? operatingIncomeLatest / income.debtService[latest] : 0;\n    \n    // Market & Valuation Metrics (estimated)\n    const revenuePerEmployee = income.employeeCount?.[latest] ? revenueLatest / income.employeeCount[latest] : 0;\n    const revenuePerShare = income.sharesOutstanding?.[latest] ? revenueLatest / income.sharesOutstanding[latest] : 0;\n    const bookValuePerShare = income.sharesOutstanding?.[latest] && totalEquity ? totalEquity / income.sharesOutstanding[latest] : 0;\n    \n    // Industry Benchmarks (Healthcare/Medical Device estimates)\n    const industryBenchmarks = {\n      grossMargin: 65,\n      operatingMargin: 18,\n      returnOnAssets: 8,\n      returnOnEquity: 15,\n      currentRatio: 2.5,\n      debtToEquity: 0.4,\n      assetTurnover: 0.8,\n      revenueGrowth: 8\n    };\n    \n    // Performance vs Benchmarks\n    const benchmarkComparison = {\n      grossMargin: grossMarginLatest - industryBenchmarks.grossMargin,\n      operatingMargin: operatingMarginLatest - industryBenchmarks.operatingMargin,\n      returnOnAssets: returnOnAssets - industryBenchmarks.returnOnAssets,\n      returnOnEquity: returnOnEquity - industryBenchmarks.returnOnEquity,\n      currentRatio: currentRatio - industryBenchmarks.currentRatio,\n      debtToEquity: industryBenchmarks.debtToEquity - debtToEquity, // Lower is better\n      assetTurnover: assetTurnover - industryBenchmarks.assetTurnover,\n      revenueGrowth: revenueGrowthYoY - industryBenchmarks.revenueGrowth\n    };\n    \n    // Comprehensive KPI Suite\n    const kpis = [\n      {\n        title: 'Revenue Growth',\n        value: `${revenueGrowthYoY > 0 ? '+' : ''}${isFinite(revenueGrowthYoY) ? revenueGrowthYoY.toFixed(1) : '0.0'}%`,\n        trend: revenueGrowthYoY > 0 ? 'up' : 'down',\n        description: 'Year-over-year revenue growth rate',\n        icon: TrendingUp,\n        benchmark: industryBenchmarks.revenueGrowth,\n        performance: benchmarkComparison.revenueGrowth\n      },\n      {\n        title: 'Gross Margin',\n        value: `${isFinite(grossMarginLatest) ? grossMarginLatest.toFixed(1) : '0.0'}%`,\n        trend: marginImprovement > 0 ? 'up' : 'down',\n        description: `${marginImprovement > 0 ? '+' : ''}${isFinite(marginImprovement) ? marginImprovement.toFixed(1) : '0.0'}% vs prior year`,\n        icon: Percent,\n        benchmark: industryBenchmarks.grossMargin,\n        performance: benchmarkComparison.grossMargin\n      },\n      {\n        title: 'Operating Margin',\n        value: `${isFinite(operatingMarginLatest) ? operatingMarginLatest.toFixed(1) : '0.0'}%`,\n        trend: operatingMarginChange > 0 ? 'up' : 'down',\n        description: `${operatingMarginChange > 0 ? '+' : ''}${isFinite(operatingMarginChange) ? operatingMarginChange.toFixed(1) : '0.0'}% vs prior year`,\n        icon: BarChart3,\n        benchmark: industryBenchmarks.operatingMargin,\n        performance: benchmarkComparison.operatingMargin\n      },\n      {\n        title: 'Return on Assets',\n        value: `${isFinite(returnOnAssets) ? returnOnAssets.toFixed(1) : '0.0'}%`,\n        trend: returnOnAssets > industryBenchmarks.returnOnAssets ? 'up' : 'down',\n        description: 'Asset utilization efficiency',\n        icon: Target,\n        benchmark: industryBenchmarks.returnOnAssets,\n        performance: benchmarkComparison.returnOnAssets\n      },\n      {\n        title: 'Return on Equity',\n        value: `${isFinite(returnOnEquity) ? returnOnEquity.toFixed(1) : '0.0'}%`,\n        trend: returnOnEquity > industryBenchmarks.returnOnEquity ? 'up' : 'down',\n        description: 'Shareholder value generation',\n        icon: Award,\n        benchmark: industryBenchmarks.returnOnEquity,\n        performance: benchmarkComparison.returnOnEquity\n      },\n      {\n        title: 'Current Ratio',\n        value: `${isFinite(currentRatio) ? currentRatio.toFixed(1) : '0.0'}x`,\n        trend: currentRatio > 2.0 ? 'up' : currentRatio > 1.5 ? 'neutral' : 'down',\n        description: 'Short-term liquidity strength',\n        icon: Shield,\n        benchmark: industryBenchmarks.currentRatio,\n        performance: benchmarkComparison.currentRatio\n      },\n      {\n        title: 'Asset Turnover',\n        value: `${isFinite(assetTurnover) ? assetTurnover.toFixed(1) : '0.0'}x`,\n        trend: assetTurnover > industryBenchmarks.assetTurnover ? 'up' : 'down',\n        description: 'Revenue per dollar of assets',\n        icon: Zap,\n        benchmark: industryBenchmarks.assetTurnover,\n        performance: benchmarkComparison.assetTurnover\n      },\n      {\n        title: 'Debt-to-Equity',\n        value: `${isFinite(debtToEquity) ? debtToEquity.toFixed(1) : '0.0'}x`,\n        trend: debtToEquity < industryBenchmarks.debtToEquity ? 'up' : 'down',\n        description: 'Financial leverage position',\n        icon: CreditCard,\n        benchmark: industryBenchmarks.debtToEquity,\n        performance: benchmarkComparison.debtToEquity\n      }\n    ];\n    \n    // Liquidity Analysis\n    const liquidityMetrics = [\n      {\n        name: 'Current Ratio',\n        value: currentRatio,\n        formatted: `${currentRatio.toFixed(2)}x`,\n        benchmark: 2.5,\n        status: currentRatio >= 2.5 ? 'excellent' : currentRatio >= 2.0 ? 'good' : currentRatio >= 1.5 ? 'fair' : 'poor'\n      },\n      {\n        name: 'Quick Ratio',\n        value: quickRatio,\n        formatted: `${quickRatio.toFixed(2)}x`,\n        benchmark: 1.5,\n        status: quickRatio >= 1.5 ? 'excellent' : quickRatio >= 1.0 ? 'good' : quickRatio >= 0.8 ? 'fair' : 'poor'\n      },\n      {\n        name: 'Cash Ratio',\n        value: cashRatio,\n        formatted: `${cashRatio.toFixed(2)}x`,\n        benchmark: 0.5,\n        status: cashRatio >= 0.5 ? 'excellent' : cashRatio >= 0.3 ? 'good' : cashRatio >= 0.2 ? 'fair' : 'poor'\n      },\n      {\n        name: 'Working Capital',\n        value: workingCapital,\n        formatted: formatCurrency(workingCapital),\n        benchmark: revenueLatest * 0.15,\n        status: workingCapital >= revenueLatest * 0.15 ? 'excellent' : workingCapital >= 0 ? 'good' : 'poor'\n      }\n    ];\n    \n    // Efficiency Analysis\n    const efficiencyMetrics = [\n      {\n        name: 'Asset Turnover',\n        value: assetTurnover,\n        formatted: `${assetTurnover.toFixed(2)}x`,\n        description: 'Revenue generation per asset dollar'\n      },\n      {\n        name: 'Inventory Turnover',\n        value: inventoryTurnover,\n        formatted: `${inventoryTurnover.toFixed(1)}x`,\n        description: 'Inventory management efficiency'\n      },\n      {\n        name: 'Receivables Turnover',\n        value: receivablesTurnover,\n        formatted: `${receivablesTurnover.toFixed(1)}x`,\n        description: 'Collection efficiency'\n      },\n      {\n        name: 'Operating Cycle',\n        value: operatingCycle,\n        formatted: `${operatingCycle.toFixed(0)} days`,\n        description: 'Cash-to-cash cycle duration'\n      }\n    ];\n    \n    // Risk Assessment\n    const riskMetrics = [\n      {\n        name: 'Financial Leverage',\n        value: financialLeverage,\n        formatted: `${financialLeverage.toFixed(1)}x`,\n        level: financialLeverage < 2 ? 'low' : financialLeverage < 3 ? 'moderate' : 'high'\n      },\n      {\n        name: 'Debt-to-Equity',\n        value: debtToEquity,\n        formatted: `${debtToEquity.toFixed(2)}x`,\n        level: debtToEquity < 0.3 ? 'low' : debtToEquity < 0.6 ? 'moderate' : 'high'\n      },\n      {\n        name: 'Interest Coverage',\n        value: interestCoverage,\n        formatted: `${interestCoverage.toFixed(1)}x`,\n        level: interestCoverage > 10 ? 'low' : interestCoverage > 5 ? 'moderate' : 'high'\n      }\n    ];\n\n      return {\n        periods,\n        latest,\n        previous,\n        revenue: {\n          latest: revenueLatest,\n          previous: revenuePrevious,\n          growth: revenueGrowthYoY,\n          cagr: revenueCAGR\n        },\n        profitability: {\n          grossMargin: grossMarginLatest,\n          grossMarginChange: marginImprovement,\n          operatingMargin: operatingMarginLatest,\n          operatingMarginChange,\n          operatingLeverage,\n          profitabilityTrend\n        },\n        financial: {\n          returnOnAssets,\n          returnOnEquity,\n          assetTurnover,\n          totalAssets,\n          totalEquity,\n          totalDebt,\n          workingCapital,\n          workingCapitalRatio\n        },\n        liquidity: {\n          currentRatio,\n          quickRatio,\n          cashRatio,\n          cashAndEquivalents,\n          currentAssets,\n          currentLiabilities\n        },\n        efficiency: {\n          inventoryTurnover,\n          receivablesTurnover,\n          operatingCycle,\n          cashConversionCycle\n        },\n        risk: {\n          debtToEquity,\n          financialLeverage,\n          interestCoverage,\n          debtServiceCoverage\n        },\n        market: {\n          revenuePerEmployee,\n          revenuePerShare,\n          bookValuePerShare\n        },\n        benchmarks: {\n          industry: industryBenchmarks,\n          comparison: benchmarkComparison\n        },\n        dcf: dcfResults,\n        revenueBreakdown,\n        kpis,\n        liquidityMetrics,\n        efficiencyMetrics,\n        riskMetrics\n      };\n    } catch (error) {\n      console.error('Error in AnalysisResults analysis calculation:', error);\n      return null;\n    }\n  }, [data, calculateDCF]);\n\n  if (!analysis) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <AlertTriangle className=\"mx-auto h-12 w-12 text-yellow-400 mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Insufficient Data</h3>\n          <p className=\"text-gray-500\">Please ensure financial data is loaded to generate analysis results.</p>\n        </div>\n      </div>\n    );\n  }\n\n  const MetricCard = ({ title, value, trend, description, icon: Icon, benchmark, performance }) => (\n    <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700 hover:border-gray-600 transition-all duration-200\">\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex items-center gap-3\">\n          <div className={`p-2 rounded-lg ${\n            trend === 'up' ? 'bg-green-900/30 text-green-400' : \n            trend === 'down' ? 'bg-red-900/30 text-red-400' : \n            'bg-gray-700 text-gray-400'\n          }`}>\n            <Icon className=\"h-5 w-5\" />\n          </div>\n          <div>\n            <div className=\"text-sm font-medium text-gray-300\">{title}</div>\n            <div className=\"text-xs text-gray-500 mt-1\">{description}</div>\n          </div>\n        </div>\n        {trend === 'up' && <TrendingUp className=\"h-5 w-5 text-green-400 flex-shrink-0\" />}\n        {trend === 'down' && <TrendingDown className=\"h-5 w-5 text-red-400 flex-shrink-0\" />}\n      </div>\n      <div className=\"text-3xl font-bold text-white mb-2\">{value}</div>\n      {benchmark && (\n        <div className=\"border-t border-gray-700 pt-3 mt-3\">\n          <div className=\"flex justify-between text-xs\">\n            <span className=\"text-gray-400\">Industry Avg:</span>\n            <span className=\"text-gray-300\">{typeof benchmark === 'number' ? benchmark.toFixed(1) + (title.includes('%') ? '%' : title.includes('x') ? 'x' : '') : benchmark}</span>\n          </div>\n          <div className=\"flex justify-between text-xs mt-1\">\n            <span className=\"text-gray-400\">vs Industry:</span>\n            <span className={`font-medium ${\n              performance > 0 ? 'text-green-400' : performance < 0 ? 'text-red-400' : 'text-gray-300'\n            }`}>\n              {performance > 0 ? '+' : ''}{performance?.toFixed(1) || '0.0'}\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-6 p-6 bg-gray-900 text-white h-full\">\n      {/* Header */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h2 className=\"text-2xl font-bold text-white mb-6 flex items-center\">\n          <BarChart3 className=\"h-6 w-6 text-blue-400 mr-3\" />\n          Financial Analysis Results\n        </h2>\n        <p className=\"text-gray-400\">\n          Comprehensive analysis of your company's financial performance and valuation\n        </p>\n      </div>\n\n      {/* Key Performance Indicators */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {analysis.kpis.map((kpi, index) => (\n          <MetricCard key={index} {...kpi} />\n        ))}\n      </div>\n\n      {/* Advanced Financial Analysis Tabs */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 overflow-hidden\">\n        <div className=\"flex border-b border-gray-700\">\n          <button className=\"px-6 py-3 text-sm font-medium text-white bg-blue-600 border-r border-gray-700\">\n            Liquidity Analysis\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white border-r border-gray-700\">\n            Efficiency Metrics\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white border-r border-gray-700\">\n            Risk Assessment\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white\">\n            Benchmarking\n          </button>\n        </div>\n        \n        {/* Liquidity Analysis Panel */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center mb-4\">\n            <Shield className=\"h-5 w-5 text-blue-400 mr-2\" />\n            <h3 className=\"text-lg font-semibold text-white\">Liquidity Position Analysis</h3>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {analysis.liquidityMetrics.map((metric, index) => (\n              <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium text-gray-200\">{metric.name}</span>\n                  <span className={`px-2 py-1 rounded text-xs font-medium ${\n                    metric.status === 'excellent' ? 'bg-green-900/30 text-green-400' :\n                    metric.status === 'good' ? 'bg-blue-900/30 text-blue-400' :\n                    metric.status === 'fair' ? 'bg-yellow-900/30 text-yellow-400' :\n                    'bg-red-900/30 text-red-400'\n                  }`}>\n                    {metric.status}\n                  </span>\n                </div>\n                <div className=\"text-xl font-bold text-white mb-1\">{metric.formatted}</div>\n                <div className=\"text-xs text-gray-400\">\n                  Benchmark: {typeof metric.benchmark === 'number' ? metric.benchmark.toFixed(1) + 'x' : formatCurrency(metric.benchmark)}\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          <div className=\"mt-6 p-4 bg-gray-750 rounded-lg border border-gray-600\">\n            <h4 className=\"font-medium text-gray-200 mb-3 flex items-center\">\n              <Eye className=\"h-4 w-4 text-blue-400 mr-2\" />\n              Liquidity Analysis Summary\n            </h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-400\">Working Capital:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.financial.workingCapital)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Cash Position:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.cashAndEquivalents)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Current Assets:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.currentAssets)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Current Liabilities:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.currentLiabilities)}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Efficiency & Operations Analysis */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <div className=\"flex items-center mb-6\">\n          <Zap className=\"h-5 w-5 text-orange-400 mr-2\" />\n          <h3 className=\"text-lg font-semibold text-white\">Operational Efficiency Metrics</h3>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {analysis.efficiencyMetrics.map((metric, index) => (\n            <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n              <div className=\"text-sm font-medium text-gray-200 mb-2\">{metric.name}</div>\n              <div className=\"text-xl font-bold text-white mb-1\">{metric.formatted}</div>\n              <div className=\"text-xs text-gray-400\">{metric.description}</div>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Timer className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Cash Conversion</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">{analysis.efficiency.cashConversionCycle.toFixed(0)} days</div>\n            <div className=\"text-xs text-gray-400\">Time to convert inventory to cash</div>\n          </div>\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Gauge className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Asset Productivity</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">{analysis.financial.assetTurnover.toFixed(2)}x</div>\n            <div className=\"text-xs text-gray-400\">Revenue per dollar of assets</div>\n          </div>\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Users className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Revenue/Employee</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">\n              {analysis.market.revenuePerEmployee > 0 ? formatCurrency(analysis.market.revenuePerEmployee) : 'N/A'}\n            </div>\n            <div className=\"text-xs text-gray-400\">Productivity per employee</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Risk Assessment Dashboard */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <div className=\"flex items-center mb-6\">\n          <AlertTriangle className=\"h-5 w-5 text-red-400 mr-2\" />\n          <h3 className=\"text-lg font-semibold text-white\">Financial Risk Assessment</h3>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {analysis.riskMetrics.map((metric, index) => (\n            <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-sm font-medium text-gray-200\">{metric.name}</span>\n                <span className={`px-2 py-1 rounded text-xs font-medium ${\n                  metric.level === 'low' ? 'bg-green-900/30 text-green-400' :\n                  metric.level === 'moderate' ? 'bg-yellow-900/30 text-yellow-400' :\n                  'bg-red-900/30 text-red-400'\n                }`}>\n                  {metric.level} risk\n                </span>\n              </div>\n              <div className=\"text-xl font-bold text-white\">{metric.formatted}</div>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"mt-6 p-4 bg-gray-750 rounded-lg border border-gray-600\">\n          <h4 className=\"font-medium text-gray-200 mb-3 flex items-center\">\n            <Shield className=\"h-4 w-4 text-red-400 mr-2\" />\n            Risk Analysis Summary\n          </h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-400\">Financial Leverage:</span>\n              <span className={`ml-2 font-medium ${\n                analysis.risk.financialLeverage < 2 ? 'text-green-400' : \n                analysis.risk.financialLeverage < 3 ? 'text-yellow-400' : 'text-red-400'\n              }`}>\n                {analysis.risk.financialLeverage.toFixed(1)}x\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Interest Coverage:</span>\n              <span className={`ml-2 font-medium ${\n                analysis.risk.interestCoverage > 10 ? 'text-green-400' : \n                analysis.risk.interestCoverage > 5 ? 'text-yellow-400' : 'text-red-400'\n              }`}>\n                {analysis.risk.interestCoverage.toFixed(1)}x\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Financial Performance Summary */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Financial Performance Trends */}\n        <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n          <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n            <Activity className=\"h-5 w-5 text-purple-400 mr-2\" />\n            Performance Trends\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h4 className=\"font-medium text-gray-200 mb-3\">Revenue Analysis</h4>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Latest Period:</span>\n                  <span className=\"font-semibold text-white\">{formatCurrency(analysis.revenue.latest)}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">YoY Growth:</span>\n                  <span className={`font-semibold ${\n                    analysis.revenue.growth > 0 ? 'text-green-400' : 'text-red-400'\n                  }`}>\n                    {analysis.revenue.growth > 0 ? '+' : ''}{analysis.revenue.growth.toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">CAGR:</span>\n                  <span className=\"font-semibold text-gray-200\">{analysis.revenue.cagr.toFixed(1)}%</span>\n                </div>\n              </div>\n            </div>\n            <div>\n              <h4 className=\"font-medium text-gray-200 mb-3\">Profitability Margins</h4>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Gross Margin:</span>\n                  <span className=\"font-semibold text-white\">{analysis.profitability.grossMargin.toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Operating Margin:</span>\n                  <span className=\"font-semibold text-white\">{analysis.profitability.operatingMargin.toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Margin Change:</span>\n                  <span className={`font-semibold ${\n                    analysis.profitability.grossMarginChange > 0 ? 'text-green-400' : 'text-red-400'\n                  }`}>\n                    {analysis.profitability.grossMarginChange > 0 ? '+' : ''}{analysis.profitability.grossMarginChange.toFixed(1)}pp\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Valuation Summary */}\n        {analysis.dcf && (\n          <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n            <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n              <DollarSign className=\"h-5 w-5 text-green-400 mr-2\" />\n              DCF Valuation Summary\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"text-center p-4 bg-green-900/30 border border-green-700 rounded-lg\">\n                <div className=\"text-2xl font-bold text-green-400\">\n                  {formatCurrency(analysis.dcf.enterpriseValue)}\n                </div>\n                <div className=\"text-sm text-green-300\">Enterprise Value</div>\n              </div>\n              <div className=\"text-center p-4 bg-blue-900/30 border border-blue-700 rounded-lg\">\n                <div className=\"text-2xl font-bold text-blue-400\">\n                  {formatCurrency(analysis.dcf.sharePrice)}\n                </div>\n                <div className=\"text-sm text-blue-300\">Price per Share</div>\n              </div>\n              <div className=\"text-center p-4 bg-gray-700 border border-gray-600 rounded-lg\">\n                <div className=\"text-2xl font-bold text-gray-300\">\n                  {formatCurrency(analysis.dcf.terminalValue)}\n                </div>\n                <div className=\"text-sm text-gray-400\">Terminal Value</div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Revenue Breakdown */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n          <PieChart className=\"h-5 w-5 text-orange-400 mr-2\" />\n          Business Unit Performance\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {analysis.revenueBreakdown.map((unit, index) => {\n            const percentage = analysis.revenue.latest ? (unit.value / analysis.revenue.latest) * 100 : 0;\n            return (\n              <div key={index} className=\"p-4 bg-gray-700 border border-gray-600 rounded-lg\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"font-medium text-gray-200\">{unit.name}</span>\n                  <span className=\"text-sm text-gray-400\">{percentage.toFixed(1)}%</span>\n                </div>\n                <div className=\"text-lg font-semibold text-white mb-1\">\n                  {formatCurrency(unit.value)}\n                </div>\n                <div className=\"w-full bg-gray-600 rounded-full h-2\">\n                  <div \n                    className=\"bg-blue-500 h-2 rounded-full\" \n                    style={{ width: `${Math.min(percentage, 100)}%` }}\n                  ></div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Key Insights */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n          <CheckCircle className=\"h-5 w-5 text-green-400 mr-2\" />\n          Key Financial Insights\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <h4 className=\"font-medium text-gray-200 mb-2\">Strengths</h4>\n            <ul className=\"space-y-1 text-sm text-gray-400\">\n              {analysis.revenue.growth > 0 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Positive revenue growth trajectory\n                </li>\n              )}\n              {analysis.profitability.grossMargin > 60 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Strong gross margin above 60%\n                </li>\n              )}\n              {analysis.profitability.grossMarginChange > 0 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Improving profitability margins\n                </li>\n              )}\n              <li className=\"flex items-center\">\n                <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                Diversified healthcare revenue streams\n              </li>\n            </ul>\n          </div>\n          <div>\n            <h4 className=\"font-medium text-gray-200 mb-2\">Areas for Focus</h4>\n            <ul className=\"space-y-1 text-sm text-gray-400\">\n              {analysis.revenue.growth < 5 && (\n                <li className=\"flex items-center\">\n                  <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                  Revenue growth below industry benchmarks\n                </li>\n              )}\n              {analysis.profitability.operatingMargin < 20 && (\n                <li className=\"flex items-center\">\n                  <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                  Operating margin optimization opportunities\n                </li>\n              )}\n              <li className=\"flex items-center\">\n                <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                Monitor competitive positioning in key segments\n              </li>\n              <li className=\"flex items-center\">\n                <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                Consider strategic initiatives for growth acceleration\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnalysisResults;\n","import React, { useState, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { FileText, TrendingUp, Building, Activity, Calculator, RefreshCw, CheckCircle, AlertCircle } from 'lucide-react';\n\nconst FinancialModelWorkspace = ({ data, onDataChange }) => {\n  const [activeStatement, setActiveStatement] = useState('income');\n  const [modelData, setModelData] = useState({\n    // Income Statement (in thousands)\n    revenue: [100000, 105000, 110250, 115763, 121551],\n    costOfGoodsSold: [60000, 63000, 66150, 69458, 72931],\n    grossProfit: [40000, 42000, 44100, 46305, 48620],\n    operatingExpenses: [25000, 26250, 27563, 28941, 30388],\n    ebitda: [15000, 15750, 16538, 17364, 18232],\n    depreciation: [3000, 3150, 3308, 3473, 3647],\n    ebit: [12000, 12600, 13230, 13891, 14585],\n    interestExpense: [2000, 1800, 1580, 1340, 1080],\n    ebt: [10000, 10800, 11650, 12551, 13505],\n    taxes: [2100, 2268, 2447, 2636, 2836],\n    netIncome: [7900, 8532, 9203, 9915, 10669],\n    \n    // Balance Sheet\n    cash: [5000, 8532, 12735, 17650, 23319],\n    accountsReceivable: [8333, 8750, 9188, 9647, 10129],\n    inventory: [10000, 10500, 11025, 11576, 12155],\n    totalCurrentAssets: [23333, 27782, 32948, 38873, 45603],\n    ppe: [50000, 51850, 53543, 55070, 56423],\n    totalAssets: [73333, 79632, 86491, 93943, 102026],\n    \n    accountsPayable: [5000, 5250, 5513, 5789, 6078],\n    shortTermDebt: [3000, 2000, 1000, 0, 0],\n    totalCurrentLiabilities: [8000, 7250, 6513, 5789, 6078],\n    longTermDebt: [25000, 23000, 21000, 19000, 17000],\n    totalLiabilities: [33000, 30250, 27513, 24789, 23078],\n    shareholderEquity: [40333, 49382, 58978, 69154, 78948],\n    totalLiabilitiesEquity: [73333, 79632, 86491, 93943, 102026],\n    \n    // Cash Flow\n    operatingCashFlow: [8567, 10233, 11345, 12464, 13584],\n    capex: [-5000, -4850, -5000, -5000, -5000],\n    investingCashFlow: [-5000, -4850, -5000, -5000, -5000],\n    debtRepayment: [-2000, -2000, -2000, -2000, -2000],\n    financingCashFlow: [-2000, -2000, -2000, -2000, -2000],\n    netCashFlow: [1567, 3383, 4345, 5464, 6584],\n    endingCash: [5000, 8383, 12728, 18192, 24776]\n  });\n\n  const [assumptions, setAssumptions] = useState({\n    revenueGrowthRate: 0.05,\n    cogsPercentOfRevenue: 0.60,\n    opexGrowthRate: 0.05,\n    taxRate: 0.21,\n    depreciationRate: 0.06,\n    capexPercentOfRevenue: 0.05,\n    debtPaydown: 2000\n  });\n\n  const [validationErrors, setValidationErrors] = useState([]);\n  const periods = ['Year 1', 'Year 2', 'Year 3', 'Year 4', 'Year 5'];\n\n  const formatCurrency = useCallback((value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0,\n    }).format(value * 1000); // Convert from thousands\n  }, []);\n\n  const recalculateModel = useCallback(() => {\n    const newData = { ...modelData };\n    \n    // Recalculate projections based on assumptions\n    for (let i = 1; i < 5; i++) {\n      // Income Statement\n      newData.revenue[i] = newData.revenue[i-1] * (1 + assumptions.revenueGrowthRate);\n      newData.costOfGoodsSold[i] = newData.revenue[i] * assumptions.cogsPercentOfRevenue;\n      newData.grossProfit[i] = newData.revenue[i] - newData.costOfGoodsSold[i];\n      newData.operatingExpenses[i] = newData.operatingExpenses[i-1] * (1 + assumptions.opexGrowthRate);\n      newData.ebitda[i] = newData.grossProfit[i] - newData.operatingExpenses[i];\n      newData.depreciation[i] = newData.ppe[i-1] * assumptions.depreciationRate;\n      newData.ebit[i] = newData.ebitda[i] - newData.depreciation[i];\n      newData.interestExpense[i] = newData.longTermDebt[i-1] * 0.06;\n      newData.ebt[i] = newData.ebit[i] - newData.interestExpense[i];\n      newData.taxes[i] = Math.max(0, newData.ebt[i] * assumptions.taxRate);\n      newData.netIncome[i] = newData.ebt[i] - newData.taxes[i];\n      \n      // Balance Sheet\n      const capex = newData.revenue[i] * assumptions.capexPercentOfRevenue;\n      newData.ppe[i] = newData.ppe[i-1] + capex - newData.depreciation[i];\n      newData.longTermDebt[i] = Math.max(0, newData.longTermDebt[i-1] - assumptions.debtPaydown);\n      newData.shortTermDebt[i] = Math.max(0, newData.shortTermDebt[i-1] - 1000);\n      \n      // Working capital (simplified)\n      newData.accountsReceivable[i] = newData.revenue[i] * 0.083; // ~30 days\n      newData.inventory[i] = newData.costOfGoodsSold[i] * 0.1; // ~36 days\n      newData.accountsPayable[i] = newData.costOfGoodsSold[i] * 0.05; // ~18 days\n      \n      // Cash Flow\n      const wcChange = (newData.accountsReceivable[i] - newData.accountsReceivable[i-1]) + \n                      (newData.inventory[i] - newData.inventory[i-1]) - \n                      (newData.accountsPayable[i] - newData.accountsPayable[i-1]);\n      \n      newData.operatingCashFlow[i] = newData.netIncome[i] + newData.depreciation[i] - wcChange;\n      newData.capex[i] = -capex;\n      newData.investingCashFlow[i] = newData.capex[i];\n      newData.debtRepayment[i] = -assumptions.debtPaydown;\n      newData.financingCashFlow[i] = newData.debtRepayment[i];\n      newData.netCashFlow[i] = newData.operatingCashFlow[i] + newData.investingCashFlow[i] + newData.financingCashFlow[i];\n      newData.endingCash[i] = newData.cash[i-1] + newData.netCashFlow[i];\n      newData.cash[i] = newData.endingCash[i];\n      \n      // Complete Balance Sheet\n      newData.totalCurrentAssets[i] = newData.cash[i] + newData.accountsReceivable[i] + newData.inventory[i];\n      newData.totalAssets[i] = newData.totalCurrentAssets[i] + newData.ppe[i];\n      newData.totalCurrentLiabilities[i] = newData.accountsPayable[i] + newData.shortTermDebt[i];\n      newData.totalLiabilities[i] = newData.totalCurrentLiabilities[i] + newData.longTermDebt[i];\n      newData.shareholderEquity[i] = newData.totalAssets[i] - newData.totalLiabilities[i];\n      newData.totalLiabilitiesEquity[i] = newData.totalLiabilities[i] + newData.shareholderEquity[i];\n    }\n    \n    setModelData(newData);\n    \n    // Validate model\n    const errors = [];\n    for (let i = 0; i < 5; i++) {\n      const diff = Math.abs(newData.totalAssets[i] - newData.totalLiabilitiesEquity[i]);\n      if (diff > 1) {\n        errors.push(`Balance sheet doesn't balance in ${periods[i]}`);\n      }\n    }\n    setValidationErrors(errors);\n    \n  }, [modelData, assumptions, periods]);\n\n  const handleAssumptionChange = useCallback((field, value) => {\n    setAssumptions(prev => ({ ...prev, [field]: parseFloat(value) || 0 }));\n  }, []);\n\n  const statements = [\n    { id: 'income', label: 'Income Statement', icon: TrendingUp },\n    { id: 'balance', label: 'Balance Sheet', icon: Building },\n    { id: 'cashflow', label: 'Cash Flow', icon: Activity },\n    { id: 'assumptions', label: 'Assumptions', icon: Calculator }\n  ];\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <FileText className=\"text-green-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">3-Statement Financial Model</h2>\n            <p className=\"text-gray-600\">Integrated Income Statement, Balance Sheet & Cash Flow</p>\n          </div>\n        </div>\n        \n        <motion.button\n          onClick={recalculateModel}\n          className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg flex items-center space-x-2\"\n          whileHover={{ scale: 1.02 }}\n        >\n          <RefreshCw size={16} />\n          <span>Recalculate</span>\n        </motion.button>\n      </div>\n\n      {/* Validation Status */}\n      {validationErrors.length === 0 ? (\n        <div className=\"mb-6 p-3 bg-green-50 border border-green-200 rounded-lg flex items-center\">\n          <CheckCircle className=\"text-green-500 mr-2\" size={20} />\n          <span className=\"text-green-800 font-medium\">Model is balanced and consistent</span>\n        </div>\n      ) : (\n        <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <div className=\"flex items-center mb-2\">\n            <AlertCircle className=\"text-red-500 mr-2\" size={20} />\n            <h3 className=\"font-semibold text-red-800\">Validation Errors</h3>\n          </div>\n          <ul className=\"text-sm text-red-700\">\n            {validationErrors.map((error, idx) => <li key={idx}>• {error}</li>)}\n          </ul>\n        </div>\n      )}\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {statements.map((statement) => {\n            const Icon = statement.icon;\n            return (\n              <button\n                key={statement.id}\n                onClick={() => setActiveStatement(statement.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeStatement === statement.id\n                    ? 'border-green-500 text-green-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{statement.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Income Statement */}\n      {activeStatement === 'income' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Income Statement ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {[\n                  { label: 'Revenue', key: 'revenue' },\n                  { label: 'Cost of Goods Sold', key: 'costOfGoodsSold' },\n                  { label: 'Gross Profit', key: 'grossProfit' },\n                  { label: 'Operating Expenses', key: 'operatingExpenses' },\n                  { label: 'EBITDA', key: 'ebitda' },\n                  { label: 'Depreciation', key: 'depreciation' },\n                  { label: 'EBIT', key: 'ebit' },\n                  { label: 'Interest Expense', key: 'interestExpense' },\n                  { label: 'EBT', key: 'ebt' },\n                  { label: 'Taxes', key: 'taxes' },\n                  { label: 'Net Income', key: 'netIncome' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4 font-medium\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Balance Sheet */}\n      {activeStatement === 'balance' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Balance Sheet ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                <tr className=\"bg-gray-100\"><td colSpan={6} className=\"py-2 px-4 font-semibold\">ASSETS</td></tr>\n                {[\n                  { label: 'Cash', key: 'cash' },\n                  { label: 'Accounts Receivable', key: 'accountsReceivable' },\n                  { label: 'Inventory', key: 'inventory' },\n                  { label: 'Total Current Assets', key: 'totalCurrentAssets' },\n                  { label: 'PP&E', key: 'ppe' },\n                  { label: 'Total Assets', key: 'totalAssets' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n                \n                <tr className=\"bg-gray-100\"><td colSpan={6} className=\"py-2 px-4 font-semibold\">LIABILITIES & EQUITY</td></tr>\n                {[\n                  { label: 'Accounts Payable', key: 'accountsPayable' },\n                  { label: 'Short-term Debt', key: 'shortTermDebt' },\n                  { label: 'Total Current Liabilities', key: 'totalCurrentLiabilities' },\n                  { label: 'Long-term Debt', key: 'longTermDebt' },\n                  { label: 'Total Liabilities', key: 'totalLiabilities' },\n                  { label: 'Shareholder Equity', key: 'shareholderEquity' },\n                  { label: 'Total Liab. & Equity', key: 'totalLiabilitiesEquity' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Cash Flow */}\n      {activeStatement === 'cashflow' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Cash Flow Statement ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {[\n                  { label: 'Operating Cash Flow', key: 'operatingCashFlow' },\n                  { label: 'CapEx', key: 'capex' },\n                  { label: 'Investing Cash Flow', key: 'investingCashFlow' },\n                  { label: 'Debt Repayment', key: 'debtRepayment' },\n                  { label: 'Financing Cash Flow', key: 'financingCashFlow' },\n                  { label: 'Net Cash Flow', key: 'netCashFlow' },\n                  { label: 'Ending Cash', key: 'endingCash' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Assumptions */}\n      {activeStatement === 'assumptions' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-4\">Key Assumptions</h3>\n              <div className=\"space-y-3\">\n                {[\n                  { label: 'Revenue Growth Rate (%)', key: 'revenueGrowthRate', isPercent: true },\n                  { label: 'COGS % of Revenue', key: 'cogsPercentOfRevenue', isPercent: true },\n                  { label: 'OpEx Growth Rate (%)', key: 'opexGrowthRate', isPercent: true },\n                  { label: 'Tax Rate (%)', key: 'taxRate', isPercent: true },\n                  { label: 'CapEx % of Revenue', key: 'capexPercentOfRevenue', isPercent: true },\n                  { label: 'Annual Debt Paydown ($000s)', key: 'debtPaydown', isPercent: false }\n                ].map(assumption => (\n                  <div key={assumption.key}>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      {assumption.label}\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      value={assumption.isPercent ? assumptions[assumption.key] * 100 : assumptions[assumption.key]}\n                      onChange={(e) => handleAssumptionChange(\n                        assumption.key, \n                        assumption.isPercent ? (e.target.value || 0) / 100 : e.target.value\n                      )}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n            \n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-4\">Model Metrics</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span>5-Year Revenue CAGR:</span>\n                  <span className=\"font-medium\">{((Math.pow(modelData.revenue[4] / modelData.revenue[0], 1/4) - 1) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>5-Year EBITDA CAGR:</span>\n                  <span className=\"font-medium\">{((Math.pow(modelData.ebitda[4] / modelData.ebitda[0], 1/4) - 1) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Exit EBITDA Margin:</span>\n                  <span className=\"font-medium\">{((modelData.ebitda[4] / modelData.revenue[4]) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Exit Debt/EBITDA:</span>\n                  <span className=\"font-medium\">{(modelData.longTermDebt[4] / modelData.ebitda[4]).toFixed(1)}x</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default FinancialModelWorkspace;\n","import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  TrendingUp, TrendingDown, Activity, Globe, Bell, \n  Plus, Minus, RefreshCw, Settings, Download, Search,\n  BarChart3, LineChart, PieChart, AlertCircle, CheckCircle\n} from 'lucide-react';\nimport { LineChart as RechartsLineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, AreaChart, Area, BarChart, Bar } from 'recharts';\n\nconst EnhancedMarketDataDashboard = ({ data, onDataChange }) => {\n  const [activeView, setActiveView] = useState('overview');\n  const [watchlist, setWatchlist] = useState([\n    { symbol: 'SPY', name: 'SPDR S&P 500 ETF', price: 445.67, change: 2.34, changePercent: 0.53, category: 'index' },\n    { symbol: 'QQQ', name: 'Invesco QQQ Trust', price: 378.91, change: -1.45, changePercent: -0.38, category: 'index' },\n    { symbol: 'VIX', name: 'CBOE Volatility Index', price: 18.45, change: 0.87, changePercent: 4.95, category: 'volatility' },\n    { symbol: 'DXY', name: 'US Dollar Index', price: 102.45, change: -0.23, changePercent: -0.22, category: 'currency' },\n    { symbol: '^TNX', name: '10-Year Treasury Yield', price: 4.25, change: 0.05, changePercent: 1.19, category: 'rates' }\n  ]);\n\n  const [marketData, setMarketData] = useState({\n    indices: {\n      'S&P 500': { value: 4456.78, change: 23.45, changePercent: 0.53 },\n      'NASDAQ': { value: 13789.45, change: -45.67, changePercent: -0.33 },\n      'DOW': { value: 34567.89, change: 156.78, changePercent: 0.46 },\n      'Russell 2000': { value: 1987.65, change: 12.34, changePercent: 0.63 }\n    },\n    sectors: [\n      { name: 'Technology', change: 1.2, weight: 23.5 },\n      { name: 'Healthcare', change: 0.8, weight: 13.2 },\n      { name: 'Financial', change: -0.4, weight: 12.8 },\n      { name: 'Consumer Disc.', change: 0.6, weight: 10.9 },\n      { name: 'Communication', change: -0.2, weight: 9.1 },\n      { name: 'Industrials', change: 0.9, weight: 8.7 }\n    ],\n    economicIndicators: {\n      'Fed Funds Rate': { value: 5.25, change: 0.0, unit: '%' },\n      '10Y Treasury': { value: 4.25, change: 0.05, unit: '%' },\n      'Inflation (CPI)': { value: 3.1, change: -0.2, unit: '%' },\n      'Unemployment': { value: 3.8, change: 0.1, unit: '%' },\n      'GDP Growth': { value: 2.4, change: 0.1, unit: '%' }\n    }\n  });\n\n  const [alerts, setAlerts] = useState([\n    { id: 1, type: 'price', symbol: 'SPY', condition: 'above', value: 450, active: true },\n    { id: 2, type: 'volatility', symbol: 'VIX', condition: 'above', value: 20, active: true }\n  ]);\n\n  const [newSymbol, setNewSymbol] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const formatCurrency = useCallback((value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    const sign = value >= 0 ? '+' : '';\n    return `${sign}${value.toFixed(2)}%`;\n  }, []);\n\n  const getChangeColor = useCallback((change) => {\n    if (change > 0) return 'text-green-600';\n    if (change < 0) return 'text-red-600';\n    return 'text-gray-600';\n  }, []);\n\n  const getChangeIcon = useCallback((change) => {\n    if (change > 0) return TrendingUp;\n    if (change < 0) return TrendingDown;\n    return Minus;\n  }, []);\n\n  // Simulate real-time data updates\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setWatchlist(prev => prev.map(item => ({\n        ...item,\n        price: item.price + (Math.random() - 0.5) * 2,\n        change: item.change + (Math.random() - 0.5) * 0.5,\n        changePercent: item.changePercent + (Math.random() - 0.5) * 0.1\n      })));\n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const addToWatchlist = useCallback(async () => {\n    if (!newSymbol.trim()) return;\n    \n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const newItem = {\n        symbol: newSymbol.toUpperCase(),\n        name: `${newSymbol.toUpperCase()} Inc.`,\n        price: Math.random() * 200 + 50,\n        change: (Math.random() - 0.5) * 10,\n        changePercent: (Math.random() - 0.5) * 5,\n        category: 'stock'\n      };\n      \n      setWatchlist(prev => [...prev, newItem]);\n      setNewSymbol('');\n    } catch (error) {\n      console.error('Error adding symbol:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [newSymbol]);\n\n  const removeFromWatchlist = useCallback((symbol) => {\n    setWatchlist(prev => prev.filter(item => item.symbol !== symbol));\n  }, []);\n\n  const chartData = useMemo(() => {\n    // Generate sample time series data\n    const now = new Date();\n    return Array.from({ length: 30 }, (_, i) => ({\n      time: new Date(now.getTime() - (29 - i) * 24 * 60 * 60 * 1000).toLocaleDateString(),\n      SPY: 440 + Math.sin(i * 0.2) * 10 + Math.random() * 5,\n      QQQ: 370 + Math.sin(i * 0.25) * 15 + Math.random() * 8,\n      VIX: 20 + Math.sin(i * 0.3) * 5 + Math.random() * 3\n    }));\n  }, []);\n\n  const correlationMatrix = useMemo(() => {\n    // Calculate correlations between major indices (simulated)\n    return [\n      { pair: 'SPY vs QQQ', correlation: 0.85, strength: 'Strong Positive' },\n      { pair: 'SPY vs VIX', correlation: -0.72, strength: 'Strong Negative' },\n      { pair: 'QQQ vs VIX', correlation: -0.68, strength: 'Moderate Negative' },\n      { pair: 'SPY vs DXY', correlation: -0.45, strength: 'Moderate Negative' }\n    ];\n  }, []);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Activity className=\"text-blue-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Enhanced Market Data Dashboard</h2>\n            <p className=\"text-gray-600\">Real-time market insights & valuation integration</p>\n          </div>\n        </div>\n        \n        <div className=\"flex space-x-3\">\n          <motion.button\n            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <RefreshCw size={16} />\n            <span>Sync Data</span>\n          </motion.button>\n          \n          <motion.button\n            className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <Settings size={16} />\n            <span>Settings</span>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* View Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {[\n            { id: 'overview', label: 'Market Overview', icon: Globe },\n            { id: 'watchlist', label: 'Watchlist', icon: BarChart3 },\n            { id: 'charts', label: 'Charts & Analysis', icon: LineChart },\n            { id: 'alerts', label: 'Alerts', icon: Bell }\n          ].map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveView(tab.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeView === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{tab.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Market Overview */}\n      {activeView === 'overview' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Major Indices */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Major Indices</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {Object.entries(marketData.indices).map(([name, data]) => {\n                const ChangeIcon = getChangeIcon(data.change);\n                return (\n                  <div key={name} className=\"bg-gray-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600 mb-1\">{name}</div>\n                    <div className=\"text-xl font-bold text-gray-800\">\n                      {data.value.toLocaleString()}\n                    </div>\n                    <div className={`flex items-center space-x-1 text-sm ${getChangeColor(data.change)}`}>\n                      <ChangeIcon size={14} />\n                      <span>{data.change > 0 ? '+' : ''}{data.change.toFixed(2)}</span>\n                      <span>({formatPercent(data.changePercent)})</span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Sector Performance */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Sector Performance</h3>\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                {marketData.sectors.map((sector) => (\n                  <div key={sector.name} className=\"flex justify-between items-center\">\n                    <div>\n                      <div className=\"font-medium text-gray-800\">{sector.name}</div>\n                      <div className=\"text-sm text-gray-600\">{sector.weight}% weight</div>\n                    </div>\n                    <div className={`font-semibold ${getChangeColor(sector.change)}`}>\n                      {formatPercent(sector.change)}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Economic Indicators */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Economic Indicators</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n              {Object.entries(marketData.economicIndicators).map(([name, data]) => (\n                <div key={name} className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-sm text-gray-600 mb-1\">{name}</div>\n                  <div className=\"text-lg font-bold text-gray-800\">\n                    {data.value}{data.unit}\n                  </div>\n                  <div className={`text-sm ${getChangeColor(data.change)}`}>\n                    {data.change > 0 ? '+' : ''}{data.change}{data.unit}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Watchlist */}\n      {activeView === 'watchlist' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Add Symbol */}\n          <div className=\"flex space-x-3\">\n            <div className=\"flex-1\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter symbol (e.g., AAPL, MSFT)\"\n                value={newSymbol}\n                onChange={(e) => setNewSymbol(e.target.value.toUpperCase())}\n                onKeyPress={(e) => e.key === 'Enter' && addToWatchlist()}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <motion.button\n              onClick={addToWatchlist}\n              disabled={isLoading || !newSymbol.trim()}\n              className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n                isLoading || !newSymbol.trim()\n                  ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                  : 'bg-green-600 hover:bg-green-700 text-white'\n              }`}\n              whileHover={!isLoading && newSymbol.trim() ? { scale: 1.02 } : {}}\n            >\n              <Plus size={16} />\n              <span>{isLoading ? 'Adding...' : 'Add'}</span>\n            </motion.button>\n          </div>\n\n          {/* Watchlist Table */}\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4\">Symbol</th>\n                  <th className=\"text-left py-3 px-4\">Name</th>\n                  <th className=\"text-right py-3 px-4\">Price</th>\n                  <th className=\"text-right py-3 px-4\">Change</th>\n                  <th className=\"text-right py-3 px-4\">Change %</th>\n                  <th className=\"text-center py-3 px-4\">Category</th>\n                  <th className=\"text-center py-3 px-4\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {watchlist.map((item) => {\n                  const ChangeIcon = getChangeIcon(item.change);\n                  return (\n                    <tr key={item.symbol} className=\"border-b border-gray-200 hover:bg-gray-50\">\n                      <td className=\"py-3 px-4 font-medium text-gray-800\">{item.symbol}</td>\n                      <td className=\"py-3 px-4 text-gray-600\">{item.name}</td>\n                      <td className=\"text-right py-3 px-4 font-medium\">{formatCurrency(item.price)}</td>\n                      <td className={`text-right py-3 px-4 ${getChangeColor(item.change)}`}>\n                        <div className=\"flex items-center justify-end space-x-1\">\n                          <ChangeIcon size={14} />\n                          <span>{item.change > 0 ? '+' : ''}{item.change.toFixed(2)}</span>\n                        </div>\n                      </td>\n                      <td className={`text-right py-3 px-4 font-medium ${getChangeColor(item.changePercent)}`}>\n                        {formatPercent(item.changePercent)}\n                      </td>\n                      <td className=\"text-center py-3 px-4\">\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                          item.category === 'index' ? 'bg-blue-100 text-blue-800' :\n                          item.category === 'stock' ? 'bg-green-100 text-green-800' :\n                          item.category === 'volatility' ? 'bg-red-100 text-red-800' :\n                          'bg-gray-100 text-gray-800'\n                        }`}>\n                          {item.category}\n                        </span>\n                      </td>\n                      <td className=\"text-center py-3 px-4\">\n                        <button\n                          onClick={() => removeFromWatchlist(item.symbol)}\n                          className=\"text-red-600 hover:text-red-800\"\n                        >\n                          <Minus size={16} />\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Charts & Analysis */}\n      {activeView === 'charts' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Price Chart */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">30-Day Price Performance</h3>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <RechartsLineChart data={chartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"time\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Line type=\"monotone\" dataKey=\"SPY\" stroke=\"#3B82F6\" strokeWidth={2} name=\"S&P 500\" />\n                  <Line type=\"monotone\" dataKey=\"QQQ\" stroke=\"#10B981\" strokeWidth={2} name=\"NASDAQ\" />\n                  <Line type=\"monotone\" dataKey=\"VIX\" stroke=\"#EF4444\" strokeWidth={2} name=\"VIX\" />\n                </RechartsLineChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Correlation Analysis */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Correlation Analysis</h3>\n            <div className=\"space-y-3\">\n              {correlationMatrix.map((corr, idx) => (\n                <div key={idx} className=\"flex items-center justify-between p-3 bg-white rounded-lg\">\n                  <div>\n                    <div className=\"font-medium text-gray-800\">{corr.pair}</div>\n                    <div className=\"text-sm text-gray-600\">{corr.strength}</div>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <div className={`text-lg font-bold ${\n                      Math.abs(corr.correlation) > 0.7 ? 'text-red-600' :\n                      Math.abs(corr.correlation) > 0.4 ? 'text-yellow-600' :\n                      'text-green-600'\n                    }`}>\n                      {corr.correlation.toFixed(2)}\n                    </div>\n                    <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                      <div \n                        className={`h-2 rounded-full ${\n                          Math.abs(corr.correlation) > 0.7 ? 'bg-red-600' :\n                          Math.abs(corr.correlation) > 0.4 ? 'bg-yellow-600' :\n                          'bg-green-600'\n                        }`}\n                        style={{ width: `${Math.abs(corr.correlation) * 100}%` }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Alerts */}\n      {activeView === 'alerts' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Active Alerts */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Active Alerts</h3>\n            <div className=\"space-y-3\">\n              {alerts.map((alert) => (\n                <div key={alert.id} className=\"flex items-center justify-between p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Bell className=\"text-yellow-600\" size={20} />\n                    <div>\n                      <div className=\"font-medium text-gray-800\">\n                        {alert.symbol} {alert.type} alert\n                      </div>\n                      <div className=\"text-sm text-gray-600\">\n                        Notify when {alert.type} goes {alert.condition} {alert.value}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                      alert.active ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\n                    }`}>\n                      {alert.active ? 'Active' : 'Inactive'}\n                    </span>\n                    <button className=\"text-red-600 hover:text-red-800\">\n                      <Minus size={16} />\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Market Status Indicators */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Market Status</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <CheckCircle className=\"text-green-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">US Markets</div>\n                  <div className=\"text-sm text-gray-600\">Open (6h 23m remaining)</div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <AlertCircle className=\"text-yellow-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">European Markets</div>\n                  <div className=\"text-sm text-gray-600\">Closed</div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <AlertCircle className=\"text-red-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">Asian Markets</div>\n                  <div className=\"text-sm text-gray-600\">Closed</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default EnhancedMarketDataDashboard;\n","import React, { useState, useMemo, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { \n  Zap, BarChart3, TrendingUp, Target, Settings, \n  Play, Download, RefreshCw, AlertTriangle, CheckCircle,\n  Activity, DollarSign, Percent, Calculator\n} from 'lucide-react';\nimport { ComposedChart, Bar, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ScatterChart, Scatter } from 'recharts';\nimport { monteCarloEngine } from '../../services/monteCarloEngine.js';\n\nconst MonteCarloIntegrationHub = ({ \n  data, \n  dcfResults, \n  lboResults, \n  financialModel, \n  scenarioResults,\n  onDataChange \n}) => {\n  const [activeAnalysis, setActiveAnalysis] = useState('unified');\n  const [simulationSettings, setSimulationSettings] = useState({\n    iterations: 10000,\n    confidenceLevel: 0.95,\n    correlationsEnabled: true,\n    crossModelAnalysis: true,\n    riskMetrics: ['var', 'cvar', 'downside']\n  });\n\n  const [integratedResults, setIntegratedResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  const formatCurrency = useCallback((value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    return `${(value * 100).toFixed(1)}%`;\n  }, []);\n\n  // Cross-model Monte Carlo analysis\n  const runIntegratedSimulation = useCallback(async () => {\n    setIsRunning(true);\n    setProgress(0);\n\n    try {\n      const results = {\n        dcf: null,\n        lbo: null,\n        correlation: null,\n        portfolio: null,\n        riskMetrics: null\n      };\n\n      // DCF Monte Carlo (if DCF results available)\n      if (dcfResults && simulationSettings.crossModelAnalysis) {\n        const dcfDistributions = {\n          revenueGrowthRate: {\n            type: 'normal',\n            parameters: { mean: 0.05, stdDev: 0.02 },\n            enabled: true\n          },\n          fcfMargin: {\n            type: 'triangular',\n            parameters: { min: 0.10, mode: 0.15, max: 0.20 },\n            enabled: true\n          },\n          wacc: {\n            type: 'normal',\n            parameters: { mean: 0.10, stdDev: 0.015 },\n            enabled: true\n          },\n          terminalGrowthRate: {\n            type: 'uniform',\n            parameters: { min: 0.02, max: 0.03 },\n            enabled: true\n          }\n        };\n\n        const dcfInputs = {\n          currentRevenue: data?.statements?.incomeStatement?.totalRevenue?.[0] * 1000 || 1000000,\n          currentPrice: 100,\n          sharesOutstanding: 1000000,\n          ...dcfResults\n        };\n\n        setProgress(25);\n        results.dcf = await monteCarloEngine.runDCFSimulation(\n          dcfInputs, \n          dcfDistributions, \n          {\n            iterations: simulationSettings.iterations,\n            confidenceLevel: simulationSettings.confidenceLevel,\n            onProgress: (p) => setProgress(25 + p * 0.25)\n          }\n        );\n      }\n\n      // LBO Monte Carlo (if LBO results available)\n      if (lboResults && simulationSettings.crossModelAnalysis) {\n        const lboDistributions = {\n          ebitdaGrowthRate: {\n            type: 'normal',\n            parameters: { mean: 0.06, stdDev: 0.02 },\n            enabled: true\n          },\n          exitMultiple: {\n            type: 'triangular',\n            parameters: { min: 8.0, mode: 10.0, max: 12.0 },\n            enabled: true\n          },\n          leverageRatio: {\n            type: 'normal',\n            parameters: { mean: 5.5, stdDev: 0.5 },\n            enabled: true\n          }\n        };\n\n        setProgress(50);\n        results.lbo = await monteCarloEngine.runLBOSimulation(\n          lboResults.inputs || {},\n          lboDistributions,\n          {\n            iterations: simulationSettings.iterations,\n            confidenceLevel: simulationSettings.confidenceLevel,\n            onProgress: (p) => setProgress(50 + p * 0.25)\n          }\n        );\n      }\n\n      // Cross-model correlation analysis\n      if (results.dcf && results.lbo && simulationSettings.correlationsEnabled) {\n        setProgress(75);\n        results.correlation = calculateCrossModelCorrelations(results.dcf, results.lbo);\n      }\n\n      // Portfolio-level risk metrics\n      setProgress(90);\n      results.riskMetrics = calculateIntegratedRiskMetrics(results);\n      \n      // Generate scenario-weighted results\n      if (scenarioResults && scenarioResults.scenarios) {\n        results.portfolio = generatePortfolioAnalysis(results, scenarioResults);\n      }\n\n      setProgress(100);\n      setIntegratedResults(results);\n\n      // Save results\n      if (onDataChange) {\n        onDataChange({\n          monteCarloIntegrated: {\n            settings: simulationSettings,\n            results: results,\n            timestamp: new Date().toISOString()\n          }\n        });\n      }\n\n    } catch (error) {\n      console.error('Integrated Monte Carlo simulation error:', error);\n      alert(`Simulation error: ${error.message}`);\n    } finally {\n      setIsRunning(false);\n      setProgress(0);\n    }\n  }, [dcfResults, lboResults, scenarioResults, simulationSettings, data, onDataChange]);\n\n  const calculateCrossModelCorrelations = useCallback((dcfResults, lboResults) => {\n    // Calculate correlations between DCF and LBO outcomes\n    const dcfValues = dcfResults.simulations?.map(s => s.pricePerShare) || [];\n    const lboValues = lboResults.simulations?.map(s => s.irr) || [];\n    \n    if (dcfValues.length === 0 || lboValues.length === 0) return null;\n\n    const correlation = pearsonCorrelation(dcfValues, lboValues);\n    \n    return {\n      dcfLboCorrelation: correlation,\n      interpretation: Math.abs(correlation) > 0.7 ? 'Strong' : \n                     Math.abs(correlation) > 0.4 ? 'Moderate' : 'Weak',\n      riskImplication: correlation > 0 ? 'Aligned Risk' : 'Hedged Risk'\n    };\n  }, []);\n\n  const pearsonCorrelation = (x, y) => {\n    const n = Math.min(x.length, y.length);\n    if (n === 0) return 0;\n    \n    const sumX = x.slice(0, n).reduce((a, b) => a + b, 0);\n    const sumY = y.slice(0, n).reduce((a, b) => a + b, 0);\n    const sumXY = x.slice(0, n).reduce((sum, xi, i) => sum + xi * y[i], 0);\n    const sumXX = x.slice(0, n).reduce((sum, xi) => sum + xi * xi, 0);\n    const sumYY = y.slice(0, n).reduce((sum, yi) => sum + yi * yi, 0);\n    \n    const numerator = n * sumXY - sumX * sumY;\n    const denominator = Math.sqrt((n * sumXX - sumX * sumX) * (n * sumYY - sumY * sumY));\n    \n    return denominator === 0 ? 0 : numerator / denominator;\n  };\n\n  const calculateIntegratedRiskMetrics = useCallback((results) => {\n    const metrics = {};\n    \n    if (results.dcf?.analysis) {\n      metrics.dcf = {\n        var95: results.dcf.analysis.percentiles?.pricePerShare?.p5 || 0,\n        expectedValue: results.dcf.analysis.summary?.mean || 0,\n        volatility: results.dcf.analysis.summary?.standardDeviation || 0\n      };\n    }\n    \n    if (results.lbo?.analysis) {\n      metrics.lbo = {\n        var95: results.lbo.analysis.percentiles?.irr?.p5 || 0,\n        expectedValue: results.lbo.analysis.summary?.mean || 0,\n        volatility: results.lbo.analysis.summary?.standardDeviation || 0\n      };\n    }\n    \n    return metrics;\n  }, []);\n\n  const generatePortfolioAnalysis = useCallback((results, scenarios) => {\n    // Weight Monte Carlo results by scenario probabilities\n    const weightedMetrics = scenarios.scenarios.reduce((acc, scenario) => {\n      const weight = scenario.probability / 100;\n      \n      if (results.dcf) {\n        acc.dcfWeighted = (acc.dcfWeighted || 0) + \n          (results.dcf.analysis?.summary?.mean || 0) * weight;\n      }\n      \n      if (results.lbo) {\n        acc.lboWeighted = (acc.lboWeighted || 0) + \n          (results.lbo.analysis?.summary?.mean || 0) * weight;\n      }\n      \n      return acc;\n    }, {});\n    \n    return weightedMetrics;\n  }, []);\n\n  const analysisOptions = [\n    { id: 'unified', label: 'Unified Analysis', icon: Zap },\n    { id: 'dcf', label: 'DCF Monte Carlo', icon: TrendingUp },\n    { id: 'lbo', label: 'LBO Monte Carlo', icon: Target },\n    { id: 'correlation', label: 'Cross-Model Risk', icon: Activity }\n  ];\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Zap className=\"text-purple-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Monte Carlo Integration Hub</h2>\n            <p className=\"text-gray-600\">Cross-model risk analysis & unified simulations</p>\n          </div>\n        </div>\n        \n        <div className=\"flex space-x-3\">\n          <motion.button\n            onClick={runIntegratedSimulation}\n            disabled={isRunning}\n            className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n              isRunning \n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed' \n                : 'bg-purple-600 hover:bg-purple-700 text-white'\n            }`}\n            whileHover={!isRunning ? { scale: 1.02 } : {}}\n            whileTap={!isRunning ? { scale: 0.98 } : {}}\n          >\n            <Play size={18} />\n            <span>{isRunning ? 'Running...' : 'Run Integrated Simulation'}</span>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Progress Bar */}\n      {isRunning && (\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-medium text-gray-700\">Simulation Progress</span>\n            <span className=\"text-sm text-gray-500\">{progress.toFixed(0)}%</span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div \n              className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${progress}%` }}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Simulation Settings */}\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n        <h3 className=\"font-semibold mb-3\">Simulation Settings</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Iterations</label>\n            <input\n              type=\"number\"\n              value={simulationSettings.iterations}\n              onChange={(e) => setSimulationSettings(prev => ({ \n                ...prev, \n                iterations: parseInt(e.target.value) || 10000 \n              }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            />\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Confidence Level</label>\n            <select\n              value={simulationSettings.confidenceLevel}\n              onChange={(e) => setSimulationSettings(prev => ({ \n                ...prev, \n                confidenceLevel: parseFloat(e.target.value) \n              }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            >\n              <option value={0.90}>90%</option>\n              <option value={0.95}>95%</option>\n              <option value={0.99}>99%</option>\n            </select>\n          </div>\n          \n          <div className=\"flex items-end\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={simulationSettings.correlationsEnabled}\n                onChange={(e) => setSimulationSettings(prev => ({ \n                  ...prev, \n                  correlationsEnabled: e.target.checked \n                }))}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Cross-Model Correlations</span>\n            </label>\n          </div>\n          \n          <div className=\"flex items-end\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={simulationSettings.crossModelAnalysis}\n                onChange={(e) => setSimulationSettings(prev => ({ \n                  ...prev, \n                  crossModelAnalysis: e.target.checked \n                }))}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Cross-Model Analysis</span>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Analysis Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {analysisOptions.map((option) => {\n            const Icon = option.icon;\n            return (\n              <button\n                key={option.id}\n                onClick={() => setActiveAnalysis(option.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeAnalysis === option.id\n                    ? 'border-purple-500 text-purple-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{option.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Results Display */}\n      {integratedResults ? (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"space-y-6\"\n        >\n          {/* Unified Analysis */}\n          {activeAnalysis === 'unified' && (\n            <div className=\"space-y-6\">\n              {/* Key Metrics Summary */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                {integratedResults.dcf && (\n                  <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-blue-600\">\n                      {formatCurrency(integratedResults.dcf.analysis?.summary?.mean || 0)}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">DCF Expected Value</div>\n                  </div>\n                )}\n                \n                {integratedResults.lbo && (\n                  <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-green-600\">\n                      {formatPercent(integratedResults.lbo.analysis?.summary?.mean || 0)}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">LBO Expected IRR</div>\n                  </div>\n                )}\n                \n                {integratedResults.correlation && (\n                  <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-purple-600\">\n                      {(integratedResults.correlation.dcfLboCorrelation || 0).toFixed(2)}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">DCF-LBO Correlation</div>\n                  </div>\n                )}\n                \n                <div className=\"bg-orange-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-orange-600\">\n                    {simulationSettings.iterations.toLocaleString()}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Simulations Run</div>\n                </div>\n              </div>\n\n              {/* Risk Correlation Matrix */}\n              {integratedResults.correlation && (\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Cross-Model Risk Analysis</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Correlation Strength</div>\n                      <div className=\"text-2xl font-bold text-purple-600\">\n                        {integratedResults.correlation.interpretation}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">\n                        {integratedResults.correlation.riskImplication}\n                      </div>\n                    </div>\n                    \n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Risk Diversification</div>\n                      <div className=\"text-2xl font-bold text-blue-600\">\n                        {Math.abs(integratedResults.correlation.dcfLboCorrelation) < 0.5 ? 'High' : 'Low'}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">Portfolio benefit</div>\n                    </div>\n                    \n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Confidence Level</div>\n                      <div className=\"text-2xl font-bold text-green-600\">\n                        {formatPercent(simulationSettings.confidenceLevel)}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">Statistical confidence</div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Portfolio-Level Insights */}\n              {integratedResults.portfolio && (\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Portfolio-Weighted Analysis</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Scenario-Weighted DCF</div>\n                      <div className=\"text-xl font-bold text-blue-600\">\n                        {formatCurrency(integratedResults.portfolio.dcfWeighted || 0)}\n                      </div>\n                    </div>\n                    \n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Scenario-Weighted LBO IRR</div>\n                      <div className=\"text-xl font-bold text-green-600\">\n                        {formatPercent(integratedResults.portfolio.lboWeighted || 0)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Individual Analysis Views */}\n          {activeAnalysis === 'dcf' && integratedResults.dcf && (\n            <div className=\"bg-gray-50 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">DCF Monte Carlo Results</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-blue-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.summary?.mean || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Mean Value</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-green-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.percentiles?.pricePerShare?.p95 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">95th Percentile</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-red-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.percentiles?.pricePerShare?.p5 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">5th Percentile</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-purple-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.summary?.standardDeviation || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Std Deviation</div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeAnalysis === 'lbo' && integratedResults.lbo && (\n            <div className=\"bg-gray-50 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">LBO Monte Carlo Results</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-green-600\">\n                    {formatPercent(integratedResults.lbo.analysis?.summary?.mean || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Mean IRR</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-blue-600\">\n                    {formatPercent(integratedResults.lbo.analysis?.percentiles?.irr?.p95 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">95th Percentile IRR</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-red-600\">\n                    {formatPercent(integratedResults.lbo.analysis?.percentiles?.irr?.p5 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">5th Percentile IRR</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-purple-600\">\n                    {((integratedResults.lbo.analysis?.percentiles?.moic?.p95 || 0) + \n                      (integratedResults.lbo.analysis?.percentiles?.moic?.p5 || 0)) / 2}x\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Avg MOIC</div>\n                </div>\n              </div>\n            </div>\n          )}\n        </motion.div>\n      ) : (\n        <div className=\"text-center py-12 text-gray-500\">\n          <Zap size={48} className=\"mx-auto mb-4 opacity-50\" />\n          <p>Configure settings and run integrated simulation to see cross-model analysis</p>\n          <p className=\"text-sm mt-2\">\n            {!dcfResults && !lboResults ? 'Run DCF and/or LBO analysis first to enable Monte Carlo integration' : \n             'Ready to run comprehensive Monte Carlo analysis'}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MonteCarloIntegrationHub;\n","import { motion, AnimatePresence } from 'framer-motion';\nimport {\n  TrendingUp,\n  BarChart3,\n  Info,\n  AlertTriangle,\n  ChevronRight,\n  ChevronDown,\n  Target,\n  Users,\n  DollarSign,\n  Building2,\n  Lightbulb,\n  X\n} from 'lucide-react';\nimport React, { useState, useEffect, useMemo } from 'react';\n\nconst ContextualInsightsSidebar = ({\n  financialData,\n  currentMetric,\n  analysisContext = 'general',\n  onInsightClick,\n  isVisible = true,\n  onToggle\n}) => {\n  const [expandedSections, setExpandedSections] = useState({\n    assumptions: true,\n    benchmarks: true,\n    insights: true,\n    suggestions: false\n  });\n\n  // Industry benchmark data (in real implementation, this would come from APIs)\n  const industryBenchmarks = useMemo(() => ({\n    healthcare: {\n      revenueGrowth: { min: 8, median: 15, max: 25, unit: '%' },\n      ebitdaMargin: { min: 18, median: 28, max: 40, unit: '%' },\n      grossMargin: { min: 65, median: 75, max: 85, unit: '%' },\n      roe: { min: 12, median: 18, max: 25, unit: '%' }\n    },\n    technology: {\n      revenueGrowth: { min: 15, median: 25, max: 50, unit: '%' },\n      ebitdaMargin: { min: 20, median: 35, max: 50, unit: '%' },\n      grossMargin: { min: 70, median: 80, max: 90, unit: '%' },\n      roe: { min: 15, median: 22, max: 35, unit: '%' }\n    },\n    manufacturing: {\n      revenueGrowth: { min: 3, median: 8, max: 15, unit: '%' },\n      ebitdaMargin: { min: 10, median: 18, max: 25, unit: '%' },\n      grossMargin: { min: 25, median: 35, max: 45, unit: '%' },\n      roe: { min: 8, median: 15, max: 22, unit: '%' }\n    }\n  }), []);\n\n  // Generate contextual insights based on current analysis\n  const generateContextualInsights = () => {\n    const insights = [];\n\n    if (!financialData?.statements?.incomeStatement) {\n      return [{\n        type: 'info',\n        title: 'Getting Started',\n        content: 'Import financial data to see contextual insights and benchmarks.',\n        action: 'Import Data'\n      }];\n    }\n\n    const income = financialData.statements.incomeStatement;\n    const latestRevenue = income.totalRevenue?.[2] || 0;\n    const latestOperatingIncome = income.operatingIncome?.[2] || 0;\n\n    // Revenue-based insights\n    if (latestRevenue > 0) {\n      const operatingMargin = (latestOperatingIncome / latestRevenue) * 100;\n\n      insights.push({\n        type: 'benchmark',\n        title: 'Operating Margin Analysis',\n        content: `Current operating margin of ${operatingMargin.toFixed(1)}% compares to healthcare industry median of 28%.`,\n        metric: operatingMargin,\n        benchmark: 28,\n        status: operatingMargin >= 28 ? 'above' : operatingMargin >= 20 ? 'within' : 'below'\n      });\n    }\n\n    // Context-specific insights\n    if (analysisContext === 'dcf') {\n      insights.push({\n        type: 'assumption',\n        title: 'DCF Model Assumptions',\n        content: 'Consider industry-specific discount rates and terminal growth assumptions.',\n        suggestions: [\n          'Healthcare companies typically use 8-12% WACC',\n          'Terminal growth rates should reflect long-term GDP growth (2-3%)',\n          'Consider regulatory risks in discount rate adjustments'\n        ]\n      });\n    }\n\n    if (currentMetric?.includes('revenue')) {\n      insights.push({\n        type: 'insight',\n        title: 'Revenue Growth Drivers',\n        content: 'Analyze revenue composition and growth sustainability.',\n        suggestions: [\n          'Break down revenue by service line',\n          'Assess recurring vs. one-time revenue',\n          'Evaluate market expansion opportunities'\n        ]\n      });\n    }\n\n    return insights;\n  };\n\n  const contextualInsights = generateContextualInsights();\n\n  const toggleSection = (section) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n\n  const renderBenchmarkBar = (current, benchmark, min, max) => {\n    const range = max - min;\n    const currentPos = Math.max(0, Math.min(100, ((current - min) / range) * 100));\n    const benchmarkPos = Math.max(0, Math.min(100, ((benchmark - min) / range) * 100));\n\n    return (\n      <div className=\"relative h-2 bg-slate-200 rounded-full overflow-hidden\">\n        <div\n          className=\"absolute top-0 h-full bg-blue-200 rounded-full\"\n          style={{ width: `${benchmarkPos}%` }}\n        />\n        <div\n          className=\"absolute top-0 h-full w-1 bg-blue-600 rounded-full\"\n          style={{ left: `${benchmarkPos}%` }}\n        />\n        <div\n          className=\"absolute top-0 h-full w-1 bg-amber-500 rounded-full\"\n          style={{ left: `${currentPos}%` }}\n        />\n      </div>\n    );\n  };\n\n  const renderInsightItem = (insight, index) => {\n    const icons = {\n      info: Info,\n      benchmark: Target,\n      assumption: AlertTriangle,\n      insight: Lightbulb\n    };\n\n    const colors = {\n      info: 'text-blue-500 bg-blue-50',\n      benchmark: 'text-emerald-500 bg-emerald-50',\n      assumption: 'text-amber-500 bg-amber-50',\n      insight: 'text-purple-500 bg-purple-50'\n    };\n\n    const Icon = icons[insight.type] || Info;\n    const colorClass = colors[insight.type] || colors.info;\n\n    return (\n      <motion.div\n        key={index}\n        initial={{ opacity: 0, x: 20 }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ delay: index * 0.1 }}\n        className=\"p-4 bg-white rounded-lg border border-slate-200 hover:border-slate-300 transition-colors\"\n      >\n        <div className=\"flex items-start gap-3\">\n          <div className={`p-2 rounded-lg ${colorClass}`}>\n            <Icon size={16} />\n          </div>\n          <div className=\"flex-1 min-w-0\">\n            <h4 className=\"font-semibold text-slate-900 text-sm mb-2\">{insight.title}</h4>\n            <p className=\"text-sm text-slate-600 mb-3\">{insight.content}</p>\n\n            {insight.metric !== undefined && insight.benchmark !== undefined && (\n              <div className=\"mb-3\">\n                <div className=\"flex justify-between text-xs text-slate-500 mb-1\">\n                  <span>Current: {insight.metric.toFixed(1)}%</span>\n                  <span>Benchmark: {insight.benchmark}%</span>\n                </div>\n                {renderBenchmarkBar(insight.metric, insight.benchmark, 0, Math.max(insight.benchmark * 1.5, insight.metric * 1.2))}\n              </div>\n            )}\n\n            {insight.suggestions && (\n              <div className=\"mt-3\">\n                <div className=\"space-y-1\">\n                  {insight.suggestions.map((suggestion, idx) => (\n                    <div key={idx} className=\"flex items-start gap-2 text-xs text-slate-600\">\n                      <ChevronRight size={12} className=\"text-slate-400 mt-0.5 flex-shrink-0\" />\n                      <span>{suggestion}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {insight.action && (\n              <button\n                onClick={() => onInsightClick?.(insight)}\n                className=\"mt-3 px-3 py-1.5 bg-blue-50 hover:bg-blue-100 text-blue-700 text-xs font-medium rounded-md transition-colors\"\n              >\n                {insight.action}\n              </button>\n            )}\n          </div>\n        </div>\n      </motion.div>\n    );\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <motion.div\n      initial={{ x: 320, opacity: 0 }}\n      animate={{ x: 0, opacity: 1 }}\n      exit={{ x: 320, opacity: 0 }}\n      className=\"fixed right-0 top-16 bottom-0 w-80 bg-slate-50 border-l border-slate-200 shadow-xl z-40 overflow-hidden flex flex-col\"\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 bg-white border-b border-slate-200\">\n        <div className=\"flex items-center gap-2\">\n          <div className=\"p-1.5 bg-blue-100 rounded-lg\">\n            <BarChart3 size={16} className=\"text-blue-600\" />\n          </div>\n          <h3 className=\"font-semibold text-slate-900\">Contextual Insights</h3>\n        </div>\n        {onToggle && (\n          <button\n            onClick={onToggle}\n            className=\"p-1.5 hover:bg-slate-100 rounded-lg transition-colors\"\n          >\n            <X size={16} className=\"text-slate-500\" />\n          </button>\n        )}\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-y-auto\">\n        <div className=\"p-4 space-y-4\">\n          {/* Assumptions Section */}\n          <div className=\"bg-white rounded-lg border border-slate-200\">\n            <button\n              onClick={() => toggleSection('assumptions')}\n              className=\"w-full flex items-center justify-between p-4 text-left hover:bg-slate-50 transition-colors\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <Target size={16} className=\"text-amber-600\" />\n                <span className=\"font-medium text-slate-900\">Key Assumptions</span>\n              </div>\n              {expandedSections.assumptions ?\n                <ChevronDown size={16} className=\"text-slate-400\" /> :\n                <ChevronRight size={16} className=\"text-slate-400\" />\n              }\n            </button>\n\n            <AnimatePresence>\n              {expandedSections.assumptions && (\n                <motion.div\n                  initial={{ height: 0, opacity: 0 }}\n                  animate={{ height: 'auto', opacity: 1 }}\n                  exit={{ height: 0, opacity: 0 }}\n                  className=\"border-t border-slate-100\"\n                >\n                  <div className=\"p-4 space-y-3\">\n                    <div className=\"flex justify-between items-center text-sm\">\n                      <span className=\"text-slate-600\">Discount Rate</span>\n                      <span className=\"font-mono text-slate-900\">10.0%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center text-sm\">\n                      <span className=\"text-slate-600\">Terminal Growth</span>\n                      <span className=\"font-mono text-slate-900\">2.5%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center text-sm\">\n                      <span className=\"text-slate-600\">Tax Rate</span>\n                      <span className=\"font-mono text-slate-900\">25.0%</span>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n\n          {/* Industry Benchmarks Section */}\n          <div className=\"bg-white rounded-lg border border-slate-200\">\n            <button\n              onClick={() => toggleSection('benchmarks')}\n              className=\"w-full flex items-center justify-between p-4 text-left hover:bg-slate-50 transition-colors\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <Users size={16} className=\"text-emerald-600\" />\n                <span className=\"font-medium text-slate-900\">Industry Benchmarks</span>\n              </div>\n              {expandedSections.benchmarks ?\n                <ChevronDown size={16} className=\"text-slate-400\" /> :\n                <ChevronRight size={16} className=\"text-slate-400\" />\n              }\n            </button>\n\n            <AnimatePresence>\n              {expandedSections.benchmarks && (\n                <motion.div\n                  initial={{ height: 0, opacity: 0 }}\n                  animate={{ height: 'auto', opacity: 1 }}\n                  exit={{ height: 0, opacity: 0 }}\n                  className=\"border-t border-slate-100\"\n                >\n                  <div className=\"p-4 space-y-4\">\n                    <div className=\"text-sm\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"text-slate-600\">Revenue Growth</span>\n                        <span className=\"text-xs text-slate-500\">Healthcare Industry</span>\n                      </div>\n                      <div className=\"flex justify-between text-xs text-slate-500 mb-1\">\n                        <span>8%</span>\n                        <span className=\"font-medium\">15% (median)</span>\n                        <span>25%</span>\n                      </div>\n                      {renderBenchmarkBar(12, 15, 8, 25)}\n                    </div>\n\n                    <div className=\"text-sm\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"text-slate-600\">EBITDA Margin</span>\n                        <span className=\"text-xs text-slate-500\">Healthcare Industry</span>\n                      </div>\n                      <div className=\"flex justify-between text-xs text-slate-500 mb-1\">\n                        <span>18%</span>\n                        <span className=\"font-medium\">28% (median)</span>\n                        <span>40%</span>\n                      </div>\n                      {renderBenchmarkBar(24, 28, 18, 40)}\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n\n          {/* Contextual Insights */}\n          <div className=\"space-y-3\">\n            {contextualInsights.map((insight, index) => renderInsightItem(insight, index))}\n          </div>\n\n          {/* Automated Suggestions */}\n          <div className=\"bg-white rounded-lg border border-slate-200\">\n            <button\n              onClick={() => toggleSection('suggestions')}\n              className=\"w-full flex items-center justify-between p-4 text-left hover:bg-slate-50 transition-colors\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <Lightbulb size={16} className=\"text-purple-600\" />\n                <span className=\"font-medium text-slate-900\">Smart Suggestions</span>\n              </div>\n              {expandedSections.suggestions ?\n                <ChevronDown size={16} className=\"text-slate-400\" /> :\n                <ChevronRight size={16} className=\"text-slate-400\" />\n              }\n            </button>\n\n            <AnimatePresence>\n              {expandedSections.suggestions && (\n                <motion.div\n                  initial={{ height: 0, opacity: 0 }}\n                  animate={{ height: 'auto', opacity: 1 }}\n                  exit={{ height: 0, opacity: 0 }}\n                  className=\"border-t border-slate-100\"\n                >\n                  <div className=\"p-4 space-y-3\">\n                    <div className=\"flex items-start gap-3 p-3 bg-blue-50 rounded-lg\">\n                      <BarChart3 size={14} className=\"text-blue-600 mt-0.5\" />\n                      <div>\n                        <div className=\"text-sm font-medium text-blue-900 mb-1\">\n                          Create Revenue vs CapEx Chart\n                        </div>\n                        <div className=\"text-xs text-blue-700\">\n                          Visualize the relationship between revenue growth and capital expenditure\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-start gap-3 p-3 bg-emerald-50 rounded-lg\">\n                      <TrendingUp size={14} className=\"text-emerald-600 mt-0.5\" />\n                      <div>\n                        <div className=\"text-sm font-medium text-emerald-900 mb-1\">\n                          Add Sensitivity Analysis\n                        </div>\n                        <div className=\"text-xs text-emerald-700\">\n                          Test how valuation changes with different assumptions\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default ContextualInsightsSidebar;\n"],"names":["webVitalsData","CLS","FID","FCP","LCP","TTFB","INP","initializePerformanceMonitoring","clsValue","clsEntries","PerformanceObserver","entryList","entry","getEntries","hadRecentInput","value","push","reportWebVital","observe","type","buffered","name","processingStart","startTime","interactionId","duration","processingEnd","entries","lastEntry","length","navigationEntry","performance","getEntriesByType","responseStart","requestStart","initializeWebVitals","forEach","component","mark","window","trackComponentRender","componentName","renderTime","measure","reportCustomMetric","timestamp","Date","now","trackCalculationPerformance","calculationType","complexity","addEventListener","setTimeout","navigation","timings","dns","domainLookupEnd","domainLookupStart","tcp","connectEnd","connectStart","ssl","secureConnectionStart","ttfb","download","responseEnd","domProcessing","domComplete","domLoading","totalLoadTime","loadEventEnd","fetchStart","sendToAnalytics","url","location","href","userAgent","navigator","connection","getConnectionInfo","list","initiatorType","resourceData","size","transferSize","encodedBodySize","cached","reportResourceTiming","entryTypes","interactionCount","totalInteractionTime","eventType","document","event","requestAnimationFrame","interactionTime","target","tagName","passive","setInterval","count","averageTime","trackUserInteractions","metric","Math","round","map","data","checkPerformanceBudgets","violations","Object","budget","overBy","effectiveType","downlink","rtt","analyticsData","sessionId","getSessionId","userId","getUserId","existingData","JSON","parse","localStorage","getItem","splice","setItem","stringify","sendAnalyticsBatch","error","queuedData","gtag","item","custom_parameter","removeItem","sessionStorage","random","toString","substr","reportPerformanceMetric","trackFinancialComponentPerformance","metrics","getPerformanceDashboardData","accessibilityHistory","analyticsQueue","recentAccessibility","slice","avgScore","reduce","sum","score","avgViolations","performanceMetrics","filter","webVitalMetrics","webVitals","budgetViolations","accessibility","currentScore","averageScore","averageViolations","history","trends","scoreImproving","recentMetrics","webVitalHistory","accessibilityTester","constructor","options","this","rules","enabled","tags","runOnly","reporter","lastTestResults","runTests","element","testOptions","results","axeCore","run","logResults","storeResults","testFinancialComponent","selector","componentType","querySelector","Error","config","spreadsheet","chart","calculator","label","modal","testKeyboardNavigation","focusableElements","getFocusableElements","tabOrderIssues","previousTabIndex","index","tabIndex","id","position","issue","focusVisibilityIssues","styles","getComputedStyle","hasOutline","outline","hasBoxShadow","boxShadow","hasBackground","backgroundColor","className","focusableElementsCount","passed","testColorContrast","textElements","querySelectorAll","contrastIssues","textColor","color","contrast","calculateContrastRatio","fontSize","parseInt","fontWeight","requiredRatio","toFixed","required","text","textContent","substring","totalElements","testFormAccessibility","forms","formIssues","form","formIndex","input","issues","hasAssociatedLabel","hasRequiredIndication","getAttribute","hasErrorMessage","isFinancialInput","autocomplete","inputType","inputId","inputName","totalForms","generateReport","passes","incomplete","inapplicable","summary","toISOString","totalChecks","calculateAccessibilityScore","violation","impact","description","help","helpUrl","nodes","recommendations","generateRecommendations","financialSpecific","getFinancialAccessibilityInsights","totalTests","impactWeights","critical","serious","moderate","minor","violationScore","maxPossibleScore","max","category","priority","solution","financialContext","insights","recommendation","Array","from","join","ariaLabel","ariaLabelledby","closest","ariaRequired","requiredAttr","hasAttribute","hasRequiredText","hasRequiredTextIndicator","getAssociatedLabel","includes","toLowerCase","ariaDescribedby","errorElement","getElementById","some","color1","color2","rgb1","parseColor","rgb2","l1","getLuminance","l2","min","match","r","g","b","rs","gs","bs","c","pow","reportViolations","node","reportData","existingReports","useFinancialAccessibility","autoTest","testInterval","onViolations","onSuccess","setResults","useState","isLoading","setIsLoading","setViolations","setScore","lastTestTime","setLastTestTime","elementRef","useRef","intervalRef","useCallback","async","targetElement","current","testResults","navResults","contrastResults","formResults","report","useEffect","runAutoTest","clearInterval","useAccessibility","testFinancialFeatures","keyboardNav","colorContrast","formAccessibility","useAccessibilityMonitor","threshold","alertOnViolations","monitorInterval","isMonitoring","setIsMonitoring","alerts","setAlerts","startMonitoring","monitor","alert","message","prev","criticalViolations","v","stopMonitoring","clearAlerts","FinancialSpreadsheet","onDataChange","onAdjustedValuesChange","activeStatement","setActiveStatement","adjustedValues","setAdjustedValues","safeData","React","useMemo","periods","isArray","statements","incomeStatement","balanceSheet","cashFlow","expandedSections","setExpandedSections","revenue","costOfGoodsSold","operatingExpenses","salariesBenefits","grossProfit","operatingIncome","incomeBeforeTax","otherIncomeExpense","currentAssets","nonCurrentAssets","currentLiabilities","nonCurrentLiabilities","equity","operatingActivities","investingActivities","financingActivities","editingCell","setEditingCell","cellValue","setCellValue","inputRef","keys","statement","newAdjustedValues","lastIndex","key","val","incomeStatementTemplate","title","headerBg","items","level","bold","formula","balanceSheetTemplate","totalAssets","totalLiabilities","totalLiabilitiesEquity","cashFlowTemplate","netCashFlow","currentTemplate","getCurrentTemplate","currentStatementData","handleCellClick","rowKey","periodIndex","isAdjusted","currentValue","handleCellBlur","parsed","parseFloat","newValue","isNaN","newData","statementKey","existingRow","handleKeyPress","e","preventDefault","validateNumericInput","test","formatNumber","numValue","absValue","abs","formattedValue","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","focus","select","ref","role","children","jsx","jsxs","TrendingUp","onClick","newPeriodLabel","prompt","Plus","onChange","FileText","period","Calculator","sectionKey","section","Fragment","colSpan","toggleSection","ChevronDown","ChevronRight","stopPropagation","addNewRow","indentClass","textWeight","rowBg","borderColor","_","Edit2","onBlur","onKeyDown","placeholder","renderRow","ScenarioModeling","modelInputs","onModelInputChange","calculateDCF","formatCurrency","formatPercent","showAddForm","setShowAddForm","scenarios","scenario","scenarioResults","baseRevenue","totalRevenue","modifiedRevenue","growthRate","revenueGrowth","baseOperating","modifiedOperating","baseRevenueValue","scenarioRevenue","baseIncome","adjustedMargin","marginImprovement","scenarioData","dcfResult","weightedValue","enterpriseValue","probability","equityValue","weightedAverageValue","result","updateScenario","field","updatedScenarios","i","ScenarioForm","step","deleteScenario","Trash2","newScenario","s","BarChart3","motion","div","whileHover","y","TrendingDown","Minus","SensitivityAnalysis","selectedVariable","setSelectedVariable","sensitivityConfig","sensitivity","variables","ranges","grossMargin","discountRate","variableDefinitions","unit","baseValue","isPercentage","dcf","terminalGrowthRate","taxRate","baseValuation","sensitivityResults","variable","range","variableDef","stepSize","dataPoints","modifiedData","dcfInputs","originalIncome","dcfParams","projectionYears","operatingIncomeData","operatingIncomes","periodKey","presentValue","discountFactor","income","pv","terminalValue","presentTerminalValue","presentValueOperations","presentValueTerminal","tempCalculateDCF","valuation","changeFromBase","definition","tornadoData","maxImpact","d","positiveImpact","negativeImpact","sort","a","updateSensitivityRange","updatedRanges","Activity","Settings","style","width","transform","variableName","updatedVariables","removed","removeVariable","point","height","minHeight","addVariable","DataVisualization","dcfData","sensitivityData","activeChart","setActiveChart","showDetails","setShowDetails","chartTypes","icon","PieChartIcon","dcfWaterfallData","years","cumulativeValue","year","startValue","cumulative","start","freeCashFlow","terminalStart","cashFlowTrendData","workingCapitalChange","capex","sensitivityTornadoData","maxUpside","maxDownside","upside","downside","scenarioDistributionData","fill","CustomTooltip","active","payload","chartType","dataKey","DCFWaterfallChart","ResponsiveContainer","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","tickFormatter","Tooltip","content","Bar","CashFlowTrendChart","LineChart","Legend","Line","stroke","strokeWidth","SensitivityTornadoChart","layout","formatter","labelFormatter","ScenarioDistributionChart","PieChart","Pie","cx","cy","outerRadius","Cell","ValuationBridgeChart","bridgeData","cumulativePV","EyeOff","Eye","Icon","button","scale","whileTap","find","freeCashFlows","WACCCalculator","activeTab","setActiveTab","waccInputs","wacc","riskFreeRate","marketRiskPremium","beta","smallCompanyPremium","companySpecificRisk","debtInterestRate","marketValueEquity","marketValueDebt","buildUpMethod","equityRiskPremium","sizeRiskPremium","industryRiskPremium","industryWACC","industryBeta","industryDebtEquityRatio","waccCalculation","inputs","costOfEquityCAPM","costOfEquityBuildUp","costOfDebtAfterTax","totalCapital","equityWeight","debtWeight","waccCAPM","waccBuildUp","finalWACC","debtToEquityRatio","updateWACCInput","updatedWACC","tabs","applyWACCToDCF","waccValue","Percent","DollarSign","Info","tab","BookOpen","ComparableAnalysis","selectedMultiple","setSelectedMultiple","showAddComp","setShowAddComp","comparableCompanies","setComparableCompanies","ticker","marketCap","ebitda","netIncome","employees","founded","geography","businessModel","comparableMultiples","comp","multiples","ev_revenue","ev_ebitda","pe_ratio","revenue_per_employee","market_cap_revenue","marketStats","calculateStats","values","mean","median","floor","p25","p75","m","impliedValuation","targetRevenue","targetEBITDA","targetNetIncome","multipleDefinitions","Target","Users","def","stats","multiple","Search","Filter","removeComparable","onSubmit","formData","FormData","companyData","newCompany","getFullYear","addComparableCompany","fromEntries","ModelingTools","activeModel","setActiveModel","setModelInputs","terminalValueMultiple","sharesOutstanding","workingCapital","receivablesDays","inventoryDays","payablesDays","receivablesGrowth","inventoryGrowth","payablesGrowth","capexAsPercentOfRevenue","depreciationRate","maintenanceCapex","ratios","compareToIndustry","industryAverages","operatingMargin","netMargin","currentRatio","debtToEquity","calculatedMetrics","margins","gross","operating","net","growth","isLatestPeriod","totalCOGS","totalCostOfGoodsSold","prevRevenue","prevOperating","inputData","sourceData","sharePrice","modelTypes","Zap","updateModelInput","modelType","currency","createElement","t","AdvancedDCF","MonteCarloSimulation","AnalysisResults","formatPercentage","analysis","latest","previous","earliest","revenueLatest","revenuePrevious","revenueEarliest","grossProfitLatest","grossProfitPrevious","operatingIncomeLatest","operatingIncomePrevious","revenueGrowthYoY","revenueCAGR","operatingIncomeGrowth","grossMarginLatest","grossMarginPrevious","operatingMarginLatest","operatingMarginPrevious","isFinite","operatingMarginChange","dcfResults","revenueBreakdown","Number","energyDevices","injectables","wellness","weightloss","retailSales","surgery","totalEquity","totalDebt","inventory","accountsReceivable","cashAndEquivalents","returnOnAssets","returnOnEquity","quickRatio","assetTurnover","inventoryTurnover","receivablesTurnover","cashRatio","workingCapitalRatio","operatingCycle","cashConversionCycle","operatingLeverage","profitabilityTrend","financialLeverage","interestCoverage","interestExpense","debtServiceCoverage","debtService","revenuePerEmployee","employeeCount","revenuePerShare","bookValuePerShare","industryBenchmarks","benchmarkComparison","kpis","trend","benchmark","Award","Shield","CreditCard","liquidityMetrics","formatted","status","efficiencyMetrics","riskMetrics","cagr","profitability","grossMarginChange","financial","liquidity","efficiency","risk","market","benchmarks","industry","comparison","AlertTriangle","MetricCard","kpi","Timer","Gauge","percentage","CheckCircle","FinancialModelWorkspace","modelData","setModelData","depreciation","ebit","ebt","taxes","cash","totalCurrentAssets","ppe","accountsPayable","shortTermDebt","totalCurrentLiabilities","longTermDebt","shareholderEquity","operatingCashFlow","investingCashFlow","debtRepayment","financingCashFlow","endingCash","assumptions","setAssumptions","revenueGrowthRate","cogsPercentOfRevenue","opexGrowthRate","capexPercentOfRevenue","debtPaydown","validationErrors","setValidationErrors","recalculateModel","wcChange","errors","handleAssumptionChange","Building","RefreshCw","AlertCircle","idx","initial","opacity","animate","periodIdx","isPercent","assumption","EnhancedMarketDataDashboard","activeView","setActiveView","watchlist","setWatchlist","symbol","price","change","changePercent","marketData","setMarketData","indices","NASDAQ","DOW","sectors","weight","economicIndicators","Unemployment","condition","newSymbol","setNewSymbol","getChangeColor","getChangeIcon","interval","addToWatchlist","trim","Promise","resolve","newItem","toUpperCase","removeFromWatchlist","chartData","time","getTime","toLocaleDateString","SPY","sin","QQQ","VIX","correlationMatrix","pair","correlation","strength","Globe","Bell","ChangeIcon","toLocaleString","sector","onKeyPress","disabled","RechartsLineChart","corr","MonteCarloIntegrationHub","lboResults","financialModel","activeAnalysis","setActiveAnalysis","simulationSettings","setSimulationSettings","iterations","confidenceLevel","correlationsEnabled","crossModelAnalysis","integratedResults","setIntegratedResults","isRunning","setIsRunning","progress","setProgress","runIntegratedSimulation","lbo","portfolio","dcfDistributions","parameters","stdDev","fcfMargin","mode","currentRevenue","currentPrice","monteCarloEngine","runDCFSimulation","onProgress","p","lboDistributions","ebitdaGrowthRate","exitMultiple","leverageRatio","runLBOSimulation","calculateCrossModelCorrelations","calculateIntegratedRiskMetrics","generatePortfolioAnalysis","monteCarloIntegrated","settings","dcfValues","simulations","pricePerShare","lboValues","irr","pearsonCorrelation","dcfLboCorrelation","interpretation","riskImplication","x","n","sumX","sumY","sumXY","xi","sumXX","sumYY","yi","numerator","denominator","sqrt","var95","percentiles","p5","expectedValue","volatility","standardDeviation","acc","dcfWeighted","lboWeighted","analysisOptions","Play","checked","option","p95","moic","ContextualInsightsSidebar","financialData","currentMetric","analysisContext","onInsightClick","isVisible","onToggle","suggestions","healthcare","ebitdaMargin","roe","technology","manufacturing","contextualInsights","action","latestRevenue","latestOperatingIncome","generateContextualInsights","renderBenchmarkBar","currentPos","benchmarkPos","exit","X","AnimatePresence","insight","colors","info","Lightbulb","colorClass","transition","delay","suggestion","renderInsightItem"],"mappings":"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"}