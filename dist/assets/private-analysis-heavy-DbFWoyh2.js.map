{"version":3,"file":"private-analysis-heavy-DbFWoyh2.js","sources":["../../src/components/PrivateAnalysis/AdvancedLBOTool.jsx","../../src/components/PrivateAnalysis/EnhancedScenarioAnalysis.jsx","../../src/components/PrivateAnalysis/AdvancedDCF.jsx","../../src/components/PrivateAnalysis/MonteCarloSimulation.jsx"],"sourcesContent":["import { motion, AnimatePresence } from 'framer-motion';\nimport { Building2, Calculator, TrendingUp, DollarSign, BarChart3, Target } from 'lucide-react';\nimport React, { useState, useMemo, useCallback } from 'react';\n\nimport { lboModelingEngine } from '../../services/lboModelingEngine.js';\n\nconst AdvancedLBOTool = ({ data, onDataChange }) => {\n  const [activeTab, setActiveTab] = useState('inputs');\n  const [lboResults, setLBOResults] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n\n  const [lboInputs, setLBOInputs] = useState({\n    symbol: 'COMPANY',\n    companyName: 'Target Company',\n    purchasePrice: 500000000,\n    ebitda: 75000000,\n    revenue: 500000000,\n    equityContribution: 0.35,\n    seniorDebtMultiple: 4.0,\n    subordinatedDebtMultiple: 1.5,\n    seniorInterestRate: 0.055,\n    subordinatedInterestRate: 0.095,\n    ebitdaGrowthRate: 0.06,\n    capexAsPercentOfRevenue: 0.03,\n    nwcAsPercentOfRevenue: 0.02,\n    holdingPeriod: 5,\n    exitMultiple: 10.0,\n    transactionFees: 0.02,\n    managementFees: 0.02,\n    taxRate: 0.21\n  });\n\n  const formatCurrency = useCallback((value) => {\n    if (!value) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    return `${(value * 100).toFixed(1)}%`;\n  }, []);\n\n  const calculateLBO = useCallback(async() => {\n    try {\n      setIsCalculating(true);\n      const modelInputs = {\n        symbol: lboInputs.symbol,\n        companyName: lboInputs.companyName,\n        purchasePrice: lboInputs.purchasePrice,\n        ebitda: lboInputs.ebitda,\n        revenue: lboInputs.revenue,\n        assumptions: {\n          debt: {\n            seniorDebtMultiple: lboInputs.seniorDebtMultiple,\n            subordinatedDebtMultiple: lboInputs.subordinatedDebtMultiple,\n            seniorInterestRate: lboInputs.seniorInterestRate,\n            subordinatedInterestRate: lboInputs.subordinatedInterestRate\n          },\n          operating: {\n            ebitdaGrowthRate: lboInputs.ebitdaGrowthRate,\n            capexAsPercentOfRevenue: lboInputs.capexAsPercentOfRevenue,\n            nwcAsPercentOfRevenue: lboInputs.nwcAsPercentOfRevenue,\n            taxRate: lboInputs.taxRate\n          },\n          exit: {\n            exitMultiple: lboInputs.exitMultiple\n          },\n          transaction: {\n            holdingPeriod: lboInputs.holdingPeriod,\n            transactionFees: lboInputs.transactionFees\n          }\n        }\n      };\n\n      const results = lboModelingEngine.buildLBOModel(modelInputs);\n      setLBOResults(results);\n\n      if (onDataChange) {\n        onDataChange({\n          lboModel: { inputs: lboInputs, results, timestamp: new Date().toISOString() }\n        });\n      }\n    } catch (error) {\n      console.error('LBO calculation error:', error);\n      alert(`Error: ${error.message}`);\n    } finally {\n      setIsCalculating(false);\n    }\n  }, [lboInputs, onDataChange]);\n\n  const handleInputChange = useCallback((field, value) => {\n    setLBOInputs(prev => ({\n      ...prev,\n      [field]: typeof value === 'string' ? parseFloat(value) || 0 : value\n    }));\n  }, []);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Building2 className=\"text-blue-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Advanced LBO Modeling</h2>\n            <p className=\"text-gray-600\">Professional leveraged buyout analysis</p>\n          </div>\n        </div>\n\n        <motion.button\n          onClick={calculateLBO}\n          disabled={isCalculating}\n          className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n            isCalculating\n              ? 'bg-gray-300 text-gray-500'\n              : 'bg-blue-600 hover:bg-blue-700 text-white'\n          }`}\n        >\n          <Calculator size={18} />\n          <span>{isCalculating ? 'Calculating...' : 'Calculate LBO'}</span>\n        </motion.button>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {[\n            { id: 'inputs', label: 'Model Inputs', icon: DollarSign },\n            { id: 'results', label: 'Results & Analysis', icon: BarChart3 }\n          ].map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{tab.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Inputs Tab */}\n      {activeTab === 'inputs' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {/* Transaction */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-3\">Transaction</h3>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Purchase Price</label>\n                  <input\n                    type=\"number\"\n                    value={lboInputs.purchasePrice}\n                    onChange={(e) => handleInputChange('purchasePrice', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                  <p className=\"text-xs text-gray-500\">{formatCurrency(lboInputs.purchasePrice)}</p>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Current EBITDA</label>\n                  <input\n                    type=\"number\"\n                    value={lboInputs.ebitda}\n                    onChange={(e) => handleInputChange('ebitda', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Holding Period</label>\n                  <input\n                    type=\"number\"\n                    value={lboInputs.holdingPeriod}\n                    onChange={(e) => handleInputChange('holdingPeriod', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Financing */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-3\">Financing</h3>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Senior Debt Multiple</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={lboInputs.seniorDebtMultiple}\n                    onChange={(e) => handleInputChange('seniorDebtMultiple', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Sub Debt Multiple</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={lboInputs.subordinatedDebtMultiple}\n                    onChange={(e) => handleInputChange('subordinatedDebtMultiple', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Senior Rate (%)</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.001\"\n                    value={lboInputs.seniorInterestRate * 100}\n                    onChange={(e) => handleInputChange('seniorInterestRate', (e.target.value || 0) / 100)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Operating */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-3\">Operating</h3>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">EBITDA Growth (%)</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={lboInputs.ebitdaGrowthRate * 100}\n                    onChange={(e) => handleInputChange('ebitdaGrowthRate', (e.target.value || 0) / 100)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Exit Multiple</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={lboInputs.exitMultiple}\n                    onChange={(e) => handleInputChange('exitMultiple', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Tax Rate (%)</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={lboInputs.taxRate * 100}\n                    onChange={(e) => handleInputChange('taxRate', (e.target.value || 0) / 100)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Results Tab */}\n      {activeTab === 'results' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          {lboResults ? (\n            <div className=\"space-y-6\">\n              {/* Key Metrics */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-blue-600\">\n                    {formatPercent(lboResults.baseCase?.returnsAnalysis?.irr || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">IRR</div>\n                </div>\n                <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-green-600\">\n                    {(lboResults.baseCase?.returnsAnalysis?.moic || 0).toFixed(1)}x\n                  </div>\n                  <div className=\"text-sm text-gray-600\">MOIC</div>\n                </div>\n                <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-purple-600\">\n                    {(lboResults.transactionStructure?.debtToEbitda || 0).toFixed(1)}x\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Leverage</div>\n                </div>\n                <div className=\"bg-orange-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-orange-600\">\n                    {formatCurrency(lboResults.baseCase?.exitAnalysis?.equityProceeds || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Exit Value</div>\n                </div>\n              </div>\n\n              {/* Transaction Structure */}\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <h3 className=\"text-lg font-semibold mb-4\">Transaction Structure</h3>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Purchase Price:</span>\n                      <span className=\"font-medium\">{formatCurrency(lboResults.transactionStructure?.purchasePrice)}</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Total Debt:</span>\n                      <span className=\"font-medium\">{formatCurrency(lboResults.transactionStructure?.totalDebt)}</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Equity Investment:</span>\n                      <span className=\"font-medium\">{formatCurrency(lboResults.transactionStructure?.equityContribution)}</span>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Entry Multiple:</span>\n                      <span className=\"font-medium\">{(lboResults.transactionStructure?.entryMultiple || 0).toFixed(1)}x</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Debt/EBITDA:</span>\n                      <span className=\"font-medium\">{(lboResults.transactionStructure?.debtToEbitda || 0).toFixed(1)}x</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Equity %:</span>\n                      <span className=\"font-medium\">{formatPercent(lboResults.transactionStructure?.equityPercentage || 0)}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Scenarios */}\n              {lboResults.scenarios && Object.keys(lboResults.scenarios).length > 0 && (\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Scenario Analysis</h3>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full\">\n                      <thead>\n                        <tr className=\"border-b border-gray-300\">\n                          <th className=\"text-left py-2\">Scenario</th>\n                          <th className=\"text-right py-2\">IRR</th>\n                          <th className=\"text-right py-2\">MOIC</th>\n                          <th className=\"text-right py-2\">Exit Value</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr className=\"border-b border-gray-200\">\n                          <td className=\"py-2 font-medium\">Base Case</td>\n                          <td className=\"text-right py-2\">{formatPercent(lboResults.baseCase?.returnsAnalysis?.irr || 0)}</td>\n                          <td className=\"text-right py-2\">{(lboResults.baseCase?.returnsAnalysis?.moic || 0).toFixed(1)}x</td>\n                          <td className=\"text-right py-2\">{formatCurrency(lboResults.baseCase?.exitAnalysis?.equityProceeds || 0)}</td>\n                        </tr>\n                        {Object.entries(lboResults.scenarios).map(([name, scenario]) => (\n                          <tr key={name} className=\"border-b border-gray-200\">\n                            <td className=\"py-2\">{name}</td>\n                            <td className=\"text-right py-2\">{formatPercent(scenario.returnsAnalysis?.irr || 0)}</td>\n                            <td className=\"text-right py-2\">{(scenario.returnsAnalysis?.moic || 0).toFixed(1)}x</td>\n                            <td className=\"text-right py-2\">{formatCurrency(scenario.exitAnalysis?.equityProceeds || 0)}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"text-center py-12 text-gray-500\">\n              <BarChart3 size={48} className=\"mx-auto mb-4 opacity-50\" />\n              <p>Run LBO calculation to see results</p>\n            </div>\n          )}\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default AdvancedLBOTool;\n","import { motion } from 'framer-motion';\nimport {\n  BarChart3, TrendingUp, TrendingDown, Target, Plus, Trash2,\n  Play, Download, Settings, RefreshCw, AlertTriangle, CheckCircle\n} from 'lucide-react';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar, LineChart, Line } from 'recharts';\n\nconst EnhancedScenarioAnalysis = ({ data, onDataChange, calculateDCF, lboModelingEngine }) => {\n  const [activeView, setActiveView] = useState('scenarios');\n  const [scenarios, setScenarios] = useState([\n    {\n      id: 1,\n      name: 'Base Case',\n      probability: 40,\n      revenueGrowth: 5.0,\n      marginExpansion: 0.5,\n      exitMultiple: 10.0,\n      capexIntensity: 3.0,\n      isBase: true\n    },\n    {\n      id: 2,\n      name: 'Bull Case',\n      probability: 30,\n      revenueGrowth: 8.0,\n      marginExpansion: 1.5,\n      exitMultiple: 12.0,\n      capexIntensity: 2.5,\n      isBase: false\n    },\n    {\n      id: 3,\n      name: 'Bear Case',\n      probability: 30,\n      revenueGrowth: 2.0,\n      marginExpansion: -0.5,\n      exitMultiple: 8.0,\n      capexIntensity: 4.0,\n      isBase: false\n    }\n  ]);\n\n  const [analysisSettings, setAnalysisSettings] = useState({\n    modelType: 'dcf', // 'dcf', 'lbo', '3statement'\n    outputMetric: 'enterpriseValue',\n    includeCorrelations: false,\n    numSimulations: 1000\n  });\n\n  const [results, setResults] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n\n  const formatCurrency = useCallback((value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    return `${(value || 0).toFixed(1)}%`;\n  }, []);\n\n  const runScenarioAnalysis = useCallback(async() => {\n    setIsCalculating(true);\n\n    try {\n      const scenarioResults = [];\n\n      for (const scenario of scenarios) {\n        let result = null;\n\n        if (analysisSettings.modelType === 'dcf') {\n          // Run DCF analysis for each scenario\n          const scenarioData = {\n            ...data,\n            statements: {\n              ...data.statements,\n              incomeStatement: {\n                ...data.statements.incomeStatement,\n                // Apply scenario assumptions to modify data\n                totalRevenue: data.statements.incomeStatement.totalRevenue?.map((rev, idx) => {\n                  if (idx === 0) return rev; // Base year unchanged\n                  return rev * Math.pow(1 + scenario.revenueGrowth / 100, idx);\n                })\n              }\n            }\n          };\n\n          result = calculateDCF ? calculateDCF(scenarioData) : null;\n        } else if (analysisSettings.modelType === 'lbo' && lboModelingEngine) {\n          // Run LBO analysis for each scenario\n          const lboInputs = {\n            symbol: data.symbol || 'COMPANY',\n            companyName: data.companyName || 'Target Company',\n            purchasePrice: 500000000,\n            ebitda: 75000000,\n            revenue: 500000000,\n            assumptions: {\n              operating: {\n                ebitdaGrowthRate: scenario.revenueGrowth / 100,\n                capexAsPercentOfRevenue: scenario.capexIntensity / 100\n              },\n              exit: {\n                exitMultiple: scenario.exitMultiple\n              }\n            }\n          };\n\n          result = lboModelingEngine.buildLBOModel(lboInputs);\n        }\n\n        scenarioResults.push({\n          ...scenario,\n          result,\n          enterpriseValue: result?.enterpriseValue || result?.baseCase?.exitAnalysis?.enterpriseValue || 0,\n          equityValue: result?.equityValue || result?.baseCase?.exitAnalysis?.equityProceeds || 0,\n          irr: result?.irr || result?.baseCase?.returnsAnalysis?.irr || 0,\n          moic: result?.moic || result?.baseCase?.returnsAnalysis?.moic || 0\n        });\n      }\n\n      // Calculate probability-weighted metrics\n      const weightedValue = scenarioResults.reduce((sum, s) =>\n        sum + (s.enterpriseValue * s.probability / 100), 0\n      );\n\n      const valueRange = {\n        min: Math.min(...scenarioResults.map(s => s.enterpriseValue)),\n        max: Math.max(...scenarioResults.map(s => s.enterpriseValue)),\n        range: Math.max(...scenarioResults.map(s => s.enterpriseValue)) -\n               Math.min(...scenarioResults.map(s => s.enterpriseValue))\n      };\n\n      // Risk metrics\n      const standardDeviation = Math.sqrt(\n        scenarioResults.reduce((sum, s) => {\n          const deviation = s.enterpriseValue - weightedValue;\n          return sum + (deviation * deviation * s.probability / 100);\n        }, 0)\n      );\n\n      const coefficientOfVariation = standardDeviation / weightedValue;\n\n      setResults({\n        scenarios: scenarioResults,\n        summary: {\n          weightedValue,\n          valueRange,\n          standardDeviation,\n          coefficientOfVariation,\n          probabilityOfPositiveReturn: scenarioResults\n            .filter(s => s.enterpriseValue > (data.currentMarketCap || 1000000000))\n            .reduce((sum, s) => sum + s.probability, 0)\n        },\n        chartData: scenarioResults.map(s => ({\n          name: s.name,\n          value: s.enterpriseValue,\n          probability: s.probability,\n          irr: s.irr * 100,\n          moic: s.moic\n        }))\n      });\n\n    } catch (error) {\n      console.error('Scenario analysis error:', error);\n      alert(`Error running scenario analysis: ${error.message}`);\n    } finally {\n      setIsCalculating(false);\n    }\n  }, [scenarios, analysisSettings, data, calculateDCF, lboModelingEngine]);\n\n  const addScenario = useCallback(() => {\n    const newScenario = {\n      id: Date.now(),\n      name: `Scenario ${scenarios.length + 1}`,\n      probability: Math.max(0, 100 - scenarios.reduce((sum, s) => sum + s.probability, 0)),\n      revenueGrowth: 5.0,\n      marginExpansion: 0.0,\n      exitMultiple: 10.0,\n      capexIntensity: 3.0,\n      isBase: false\n    };\n    setScenarios(prev => [...prev, newScenario]);\n  }, [scenarios]);\n\n  const updateScenario = useCallback((id, field, value) => {\n    setScenarios(prev => prev.map(scenario =>\n      scenario.id === id ? { ...scenario, [field]: parseFloat(value) || value } : scenario\n    ));\n  }, []);\n\n  const deleteScenario = useCallback((id) => {\n    setScenarios(prev => prev.filter(scenario => scenario.id !== id && !scenario.isBase));\n  }, []);\n\n  const totalProbability = useMemo(() =>\n    scenarios.reduce((sum, s) => sum + s.probability, 0), [scenarios]\n  );\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <BarChart3 className=\"text-purple-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Enhanced Scenario Analysis</h2>\n            <p className=\"text-gray-600\">Cross-model scenario planning & risk assessment</p>\n          </div>\n        </div>\n\n        <div className=\"flex space-x-3\">\n          <motion.button\n            onClick={runScenarioAnalysis}\n            disabled={isCalculating || totalProbability !== 100}\n            className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n              isCalculating || totalProbability !== 100\n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                : 'bg-purple-600 hover:bg-purple-700 text-white'\n            }`}\n            whileHover={!isCalculating && totalProbability === 100 ? { scale: 1.02 } : {}}\n          >\n            <Play size={18} />\n            <span>{isCalculating ? 'Running...' : 'Run Analysis'}</span>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Model Selection & Settings */}\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Model Type</label>\n            <select\n              value={analysisSettings.modelType}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, modelType: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            >\n              <option value=\"dcf\">DCF Valuation</option>\n              <option value=\"lbo\">LBO Analysis</option>\n              <option value=\"3statement\">3-Statement Model</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Output Metric</label>\n            <select\n              value={analysisSettings.outputMetric}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, outputMetric: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            >\n              <option value=\"enterpriseValue\">Enterprise Value</option>\n              <option value=\"equityValue\">Equity Value</option>\n              <option value=\"irr\">IRR</option>\n              <option value=\"moic\">MOIC</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Simulations</label>\n            <input\n              type=\"number\"\n              value={analysisSettings.numSimulations}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, numSimulations: parseInt(e.target.value) || 1000 }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            />\n          </div>\n\n          <div className=\"flex items-end\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={analysisSettings.includeCorrelations}\n                onChange={(e) => setAnalysisSettings(prev => ({ ...prev, includeCorrelations: e.target.checked }))}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Include Correlations</span>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Probability Warning */}\n      {totalProbability !== 100 && (\n        <div className=\"mb-6 p-3 bg-amber-50 border border-amber-200 rounded-lg flex items-center\">\n          <AlertTriangle className=\"text-amber-500 mr-2\" size={20} />\n          <span className=\"text-amber-800\">\n            Total probability is {totalProbability}%. Adjust scenarios to sum to 100%.\n          </span>\n        </div>\n      )}\n\n      {/* Scenarios Table */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold\">Scenarios</h3>\n          <motion.button\n            onClick={addScenario}\n            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <Plus size={16} />\n            <span>Add Scenario</span>\n          </motion.button>\n        </div>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead>\n              <tr className=\"border-b-2 border-gray-300\">\n                <th className=\"text-left py-3 px-4\">Scenario</th>\n                <th className=\"text-right py-3 px-4\">Probability (%)</th>\n                <th className=\"text-right py-3 px-4\">Revenue Growth (%)</th>\n                <th className=\"text-right py-3 px-4\">Margin Expansion (bps)</th>\n                <th className=\"text-right py-3 px-4\">Exit Multiple</th>\n                <th className=\"text-right py-3 px-4\">CapEx Intensity (%)</th>\n                <th className=\"text-center py-3 px-4\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {scenarios.map((scenario) => (\n                <tr key={scenario.id} className={`border-b border-gray-200 ${scenario.isBase ? 'bg-blue-50' : ''}`}>\n                  <td className=\"py-3 px-4\">\n                    <input\n                      type=\"text\"\n                      value={scenario.name}\n                      onChange={(e) => updateScenario(scenario.id, 'name', e.target.value)}\n                      disabled={scenario.isBase}\n                      className={`border border-gray-300 rounded px-2 py-1 ${scenario.isBase ? 'bg-gray-100' : ''}`}\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"1\"\n                      value={scenario.probability}\n                      onChange={(e) => updateScenario(scenario.id, 'probability', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.revenueGrowth}\n                      onChange={(e) => updateScenario(scenario.id, 'revenueGrowth', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.marginExpansion}\n                      onChange={(e) => updateScenario(scenario.id, 'marginExpansion', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.exitMultiple}\n                      onChange={(e) => updateScenario(scenario.id, 'exitMultiple', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.capexIntensity}\n                      onChange={(e) => updateScenario(scenario.id, 'capexIntensity', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-center py-3 px-4\">\n                    {!scenario.isBase && (\n                      <button\n                        onClick={() => deleteScenario(scenario.id)}\n                        className=\"text-red-600 hover:text-red-800\"\n                      >\n                        <Trash2 size={16} />\n                      </button>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Results */}\n      {results && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"space-y-6\"\n        >\n          {/* Summary Metrics */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {formatCurrency(results.summary.weightedValue)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Expected Value</div>\n            </div>\n            <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {formatCurrency(results.summary.valueRange.max)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Best Case</div>\n            </div>\n            <div className=\"bg-red-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-red-600\">\n                {formatCurrency(results.summary.valueRange.min)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Worst Case</div>\n            </div>\n            <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {formatPercent(results.summary.probabilityOfPositiveReturn)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Success Probability</div>\n            </div>\n          </div>\n\n          {/* Scenario Results Chart */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Scenario Results</h3>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={results.chartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis tickFormatter={(value) => formatCurrency(value)} />\n                  <Tooltip formatter={(value) => [formatCurrency(value), 'Enterprise Value']} />\n                  <Bar dataKey=\"value\" fill=\"#8884d8\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Risk Analysis */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h4 className=\"font-semibold mb-3\">Risk Metrics</h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span>Standard Deviation:</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.standardDeviation)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Coefficient of Variation:</span>\n                  <span className=\"font-medium\">{(results.summary.coefficientOfVariation * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Value at Risk (5%):</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.valueRange.min)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Upside Potential:</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.valueRange.range)}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h4 className=\"font-semibold mb-3\">Scenario Returns</h4>\n              <div className=\"space-y-2 text-sm\">\n                {results.scenarios.map((scenario) => (\n                  <div key={scenario.id} className=\"flex justify-between\">\n                    <span>{scenario.name}:</span>\n                    <span className=\"font-medium\">\n                      {analysisSettings.outputMetric === 'irr' ? formatPercent(scenario.irr) :\n                        analysisSettings.outputMetric === 'moic' ? `${scenario.moic.toFixed(1)}x` :\n                          formatCurrency(scenario[analysisSettings.outputMetric])}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {!results && (\n        <div className=\"text-center py-12 text-gray-500\">\n          <BarChart3 size={48} className=\"mx-auto mb-4 opacity-50\" />\n          <p>Configure scenarios and run analysis to see results</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EnhancedScenarioAnalysis;\n","import { motion } from 'framer-motion';\nimport { Calculator, TrendingUp, DollarSign, BarChart3, Info, Settings, PieChart } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nimport DataVisualization from './DataVisualization';\nimport WACCCalculator from './WACCCalculator';\n\nconst AdvancedDCF = ({ data, modelInputs, onModelInputChange, formatCurrency, formatPercent }) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const [showAssumptions, setShowAssumptions] = useState(true);\n  const [activeTab, setActiveTab] = useState('results');\n\n  // Enhanced DCF calculation with working capital\n  const advancedDCFResults = useMemo(() => {\n    const { discountRate, terminalGrowthRate, projectionYears, taxRate } = modelInputs.dcf;\n    const statements = data.statements;\n\n    // Working capital assumptions (if not provided, use defaults)\n    const workingCapitalAssumptions = modelInputs.dcf.workingCapital || {\n      receivablesDays: 45,\n      inventoryDays: 60,\n      payablesDays: 30,\n      receivablesGrowth: 2, // % of revenue\n      inventoryGrowth: 1.5, // % of revenue\n      payablesGrowth: 1.8 // % of revenue\n    };\n\n    // Capex assumptions\n    const capexAssumptions = modelInputs.dcf.capex || {\n      capexAsPercentOfRevenue: 3.5,\n      depreciationRate: 7, // years\n      maintenanceCapex: 2.0 // % of revenue\n    };\n\n    const results = {\n      years: [],\n      freeCashFlows: [],\n      presentValues: [],\n      workingCapitalChanges: [],\n      capexAmounts: [],\n      unleveredFreeCashFlow: [],\n      cumulativePV: 0,\n      terminalValue: 0,\n      presentValueTerminal: 0,\n      enterpriseValue: 0,\n      equityValue: 0,\n      impliedShare: 0\n    };\n\n    // Base year revenue for calculations\n    const baseRevenue = statements.incomeStatement.totalRevenue?.[0] || 100000;\n\n    for (let year = 1; year <= projectionYears; year++) {\n      const yearData = {\n        year,\n        revenue: statements.incomeStatement.totalRevenue?.[year] || 0,\n        operatingIncome: statements.incomeStatement.operatingIncome?.[year] || 0,\n        nopat: 0, // Net Operating Profit After Tax\n        workingCapitalChange: 0,\n        capex: 0,\n        depreciation: 0,\n        freeCashFlow: 0,\n        presentValue: 0\n      };\n\n      // NOPAT calculation\n      yearData.nopat = yearData.operatingIncome * (1 - taxRate / 100);\n\n      // Working capital calculation\n      const currentRevenue = yearData.revenue;\n      const previousRevenue = year > 1 ? (statements.incomeStatement.totalRevenue?.[year - 1] || 0) : baseRevenue;\n\n      // Calculate working capital components\n      const currentReceivables = (currentRevenue * workingCapitalAssumptions.receivablesDays) / 365;\n      const currentInventory = (currentRevenue * workingCapitalAssumptions.inventoryDays) / 365;\n      const currentPayables = (currentRevenue * workingCapitalAssumptions.payablesDays) / 365;\n\n      const previousReceivables = (previousRevenue * workingCapitalAssumptions.receivablesDays) / 365;\n      const previousInventory = (previousRevenue * workingCapitalAssumptions.inventoryDays) / 365;\n      const previousPayables = (previousRevenue * workingCapitalAssumptions.payablesDays) / 365;\n\n      const receivablesChange = currentReceivables - previousReceivables;\n      const inventoryChange = currentInventory - previousInventory;\n      const payablesChange = currentPayables - previousPayables;\n\n      // Working capital change (increase is negative for cash flow)\n      yearData.workingCapitalChange = -(receivablesChange + inventoryChange - payablesChange);\n\n      // Capex calculation\n      yearData.capex = -(currentRevenue * capexAssumptions.capexAsPercentOfRevenue / 100);\n\n      // Depreciation (simplified - based on capex and depreciation rate)\n      yearData.depreciation = Math.abs(yearData.capex) / capexAssumptions.depreciationRate;\n\n      // Free Cash Flow = NOPAT + Depreciation - Capex - Change in Working Capital\n      yearData.freeCashFlow = yearData.nopat + yearData.depreciation + yearData.capex + yearData.workingCapitalChange;\n\n      // Present Value\n      const discountFactor = Math.pow(1 + discountRate / 100, year);\n      yearData.presentValue = yearData.freeCashFlow / discountFactor;\n\n      results.years.push(yearData);\n      results.freeCashFlows.push(yearData.freeCashFlow);\n      results.presentValues.push(yearData.presentValue);\n      results.workingCapitalChanges.push(yearData.workingCapitalChange);\n      results.capexAmounts.push(yearData.capex);\n      results.unleveredFreeCashFlow.push(yearData.freeCashFlow);\n      results.cumulativePV += yearData.presentValue;\n    }\n\n    // Terminal Value calculation\n    const finalYearFCF = results.years[results.years.length - 1]?.freeCashFlow || 0;\n    const terminalFCF = finalYearFCF * (1 + terminalGrowthRate / 100);\n    results.terminalValue = terminalFCF / ((discountRate - terminalGrowthRate) / 100);\n\n    const terminalDiscountFactor = Math.pow(1 + discountRate / 100, projectionYears);\n    results.presentValueTerminal = results.terminalValue / terminalDiscountFactor;\n\n    // Enterprise Value\n    results.enterpriseValue = results.cumulativePV + results.presentValueTerminal;\n\n    // Simplified equity value (would subtract net debt in reality)\n    const netDebt = 0; // Could be calculated from balance sheet\n    results.equityValue = results.enterpriseValue - netDebt;\n\n    // Implied share price (assuming shares outstanding)\n    const sharesOutstanding = modelInputs.dcf.sharesOutstanding || 1000; // thousands\n    results.impliedShare = results.equityValue / sharesOutstanding;\n\n    return results;\n  }, [data, modelInputs]);\n\n  const updateDCFAssumption = (category, field, value) => {\n    const updatedDCF = {\n      ...modelInputs.dcf,\n      [category]: {\n        ...modelInputs.dcf[category],\n        [field]: parseFloat(value) || 0\n      }\n    };\n    onModelInputChange('dcf', category, updatedDCF[category]);\n  };\n\n  const updateBasicAssumption = (field, value) => {\n    onModelInputChange('dcf', field, parseFloat(value) || 0);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Calculator size={20} />\n            Advanced DCF Valuation\n          </h3>\n          <p className=\"text-gray-600\">\n            Professional-grade DCF with working capital analysis, capex modeling, and detailed cash flow projections.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          {['results', 'charts', 'wacc', 'assumptions'].map((tab) => (\n            <button\n              key={tab}\n              onClick={() => setActiveTab(tab)}\n              className={`px-3 py-2 rounded-lg text-sm transition-colors flex items-center gap-1 ${\n                activeTab === tab ? 'bg-blue-100 text-blue-700' : 'bg-gray-100 text-gray-700'\n              }`}\n            >\n              {tab === 'results' && <DollarSign size={14} />}\n              {tab === 'charts' && <BarChart3 size={14} />}\n              {tab === 'wacc' && <Calculator size={14} />}\n              {tab === 'assumptions' && <Settings size={14} />}\n              {tab.charAt(0).toUpperCase() + tab.slice(1)}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Tab Content */}\n      {activeTab === 'results' && (\n        <>\n          {/* Key Results */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <motion.div\n              className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <DollarSign size={20} className=\"text-green-600\" />\n                <span className=\"text-xs text-green-600 font-medium\">ENTERPRISE VALUE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-green-800\">\n                {formatCurrency(advancedDCFResults.enterpriseValue)}\n              </div>\n              <div className=\"text-sm text-green-600 mt-1\">\n                PV Operations: {formatCurrency(advancedDCFResults.cumulativePV)}\n              </div>\n            </motion.div>\n\n            <motion.div\n              className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <TrendingUp size={20} className=\"text-blue-600\" />\n                <span className=\"text-xs text-blue-600 font-medium\">EQUITY VALUE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-blue-800\">\n                {formatCurrency(advancedDCFResults.equityValue)}\n              </div>\n              <div className=\"text-sm text-blue-600 mt-1\">\n                Per Share: {formatCurrency(advancedDCFResults.impliedShare)}\n              </div>\n            </motion.div>\n\n            <motion.div\n              className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <BarChart3 size={20} className=\"text-purple-600\" />\n                <span className=\"text-xs text-purple-600 font-medium\">TERMINAL VALUE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-purple-800\">\n                {formatCurrency(advancedDCFResults.terminalValue)}\n              </div>\n              <div className=\"text-sm text-purple-600 mt-1\">\n                PV: {formatCurrency(advancedDCFResults.presentValueTerminal)}\n              </div>\n            </motion.div>\n\n            <motion.div\n              className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <Info size={20} className=\"text-orange-600\" />\n                <span className=\"text-xs text-orange-600 font-medium\">IMPLIED MULTIPLE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-orange-800\">\n                {(advancedDCFResults.enterpriseValue / (data.statements.incomeStatement.totalRevenue?.[1] || 1)).toFixed(1)}x\n              </div>\n              <div className=\"text-sm text-orange-600 mt-1\">\n                EV/Revenue (Year 1)\n              </div>\n            </motion.div>\n          </div>\n\n          {/* Detailed Cash Flow Analysis */}\n          <div className=\"bg-white rounded-lg border p-6\">\n            <h4 className=\"font-semibold text-lg mb-4\">Detailed Cash Flow Analysis</h4>\n\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full text-sm\">\n                <thead>\n                  <tr className=\"border-b bg-gray-50\">\n                    <th className=\"text-left p-3 font-medium\">Year</th>\n                    <th className=\"text-right p-3 font-medium\">Revenue</th>\n                    <th className=\"text-right p-3 font-medium\">Operating Income</th>\n                    <th className=\"text-right p-3 font-medium\">NOPAT</th>\n                    <th className=\"text-right p-3 font-medium\">Depreciation</th>\n                    <th className=\"text-right p-3 font-medium\">Capex</th>\n                    <th className=\"text-right p-3 font-medium\">ΔWorking Capital</th>\n                    <th className=\"text-right p-3 font-medium\">Free Cash Flow</th>\n                    <th className=\"text-right p-3 font-medium\">Present Value</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {advancedDCFResults.years.map((yearData, index) => (\n                    <tr key={index} className=\"border-b hover:bg-gray-50\">\n                      <td className=\"p-3 font-medium\">{yearData.year}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(yearData.revenue)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(yearData.operatingIncome)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(yearData.nopat)}</td>\n                      <td className=\"p-3 text-right text-green-600\">+{formatCurrency(yearData.depreciation)}</td>\n                      <td className=\"p-3 text-right text-red-600\">{formatCurrency(yearData.capex)}</td>\n                      <td className={`p-3 text-right ${yearData.workingCapitalChange >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {yearData.workingCapitalChange >= 0 ? '+' : ''}{formatCurrency(yearData.workingCapitalChange)}\n                      </td>\n                      <td className=\"p-3 text-right font-medium\">{formatCurrency(yearData.freeCashFlow)}</td>\n                      <td className=\"p-3 text-right font-medium\">{formatCurrency(yearData.presentValue)}</td>\n                    </tr>\n                  ))}\n\n                  {/* Terminal Value Row */}\n                  <tr className=\"border-b-2 border-gray-300 bg-blue-50\">\n                    <td className=\"p-3 font-bold\">Terminal</td>\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3 text-right font-bold\">{formatCurrency(advancedDCFResults.terminalValue)}</td>\n                    <td className=\"p-3 text-right font-bold\">{formatCurrency(advancedDCFResults.presentValueTerminal)}</td>\n                  </tr>\n\n                  {/* Total Row */}\n                  <tr className=\"bg-gray-100 font-bold\">\n                    <td className=\"p-3\">TOTAL</td>\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3 text-right text-lg\">{formatCurrency(advancedDCFResults.enterpriseValue)}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </>\n      )}\n\n      {/* Charts Tab */}\n      {activeTab === 'charts' && (\n        <DataVisualization\n          dcfData={advancedDCFResults}\n          sensitivityData={null}\n          scenarioData={null}\n          formatCurrency={formatCurrency}\n          formatPercent={formatPercent}\n        />\n      )}\n\n      {/* WACC Calculator Tab */}\n      {activeTab === 'wacc' && (\n        <WACCCalculator\n          modelInputs={modelInputs}\n          onModelInputChange={onModelInputChange}\n          formatPercent={formatPercent}\n        />\n      )}\n\n      {/* Assumptions Tab */}\n      {activeTab === 'assumptions' && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">Model Assumptions</h4>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Basic DCF Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Core Assumptions</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Discount Rate (WACC) %\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.discountRate}\n                    onChange={(e) => updateBasicAssumption('discountRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Terminal Growth Rate %\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.terminalGrowthRate}\n                    onChange={(e) => updateBasicAssumption('terminalGrowthRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Tax Rate %\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.taxRate}\n                    onChange={(e) => updateBasicAssumption('taxRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Working Capital Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Working Capital</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Receivables (Days)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.receivablesDays || 45}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'receivablesDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Inventory (Days)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.inventoryDays || 60}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'inventoryDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Payables (Days)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.payablesDays || 30}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'payablesDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Capex Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Capital Expenditure</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Capex (% of Revenue)\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.capex?.capexAsPercentOfRevenue || 3.5}\n                    onChange={(e) => updateDCFAssumption('capex', 'capexAsPercentOfRevenue', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Depreciation Period (Years)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.capex?.depreciationRate || 7}\n                    onChange={(e) => updateDCFAssumption('capex', 'depreciationRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Shares Outstanding (000s)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={modelInputs.dcf.sharesOutstanding || 1000}\n                    onChange={(e) => updateBasicAssumption('sharesOutstanding', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdvancedDCF;\n","import { motion, AnimatePresence } from 'framer-motion';\nimport { BarChart3, TrendingUp, AlertTriangle, Play, Square, Settings, Download, FileText, Zap } from 'lucide-react';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { ComposedChart, Bar, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ScatterChart, Scatter, Cell, AreaChart, Area } from 'recharts';\n\nimport { monteCarloEngine } from '../../services/monteCarloEngine.js';\n\nconst MonteCarloSimulation = ({ data, onDataChange }) => {\n  const [activeTab, setActiveTab] = useState('setup');\n  const [simulationResults, setSimulationResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [simulationSettings, setSimulationSettings] = useState({\n    iterations: 10000,\n    confidenceLevel: 0.95,\n    randomSeed: null,\n    enableCorrelation: false\n  });\n\n  const [distributions, setDistributions] = useState({\n    revenueGrowthRate: {\n      type: 'normal',\n      parameters: { mean: 0.1, stdDev: 0.03 },\n      name: 'Revenue Growth Rate',\n      enabled: true\n    },\n    fcfMargin: {\n      type: 'triangular',\n      parameters: { min: 0.12, mode: 0.15, max: 0.18 },\n      name: 'FCF Margin',\n      enabled: true\n    },\n    wacc: {\n      type: 'normal',\n      parameters: { mean: 0.1, stdDev: 0.015 },\n      name: 'WACC',\n      enabled: true\n    },\n    terminalGrowthRate: {\n      type: 'uniform',\n      parameters: { min: 0.02, max: 0.03 },\n      name: 'Terminal Growth Rate',\n      enabled: true\n    }\n  });\n\n  const [correlationMatrix, setCorrelationMatrix] = useState([\n    [1.0, 0.3, -0.2, 0.1],\n    [0.3, 1.0, -0.4, 0.2],\n    [-0.2, -0.4, 1.0, -0.3],\n    [0.1, 0.2, -0.3, 1.0]\n  ]);\n\n  const distributionTypes = [\n    { value: 'normal', label: 'Normal', parameters: ['mean', 'stdDev'] },\n    { value: 'triangular', label: 'Triangular', parameters: ['min', 'mode', 'max'] },\n    { value: 'uniform', label: 'Uniform', parameters: ['min', 'max'] },\n    { value: 'lognormal', label: 'Log-Normal', parameters: ['mu', 'sigma'] },\n    { value: 'beta', label: 'Beta', parameters: ['alpha', 'beta'] }\n  ];\n\n  const runSimulation = useCallback(async() => {\n    try {\n      // Validate data and settings before starting simulation\n\n      setIsRunning(true);\n      setProgress(0);\n\n      const enabledDistributions = Object.fromEntries(\n        Object.entries(distributions).filter(([_, dist]) => dist.enabled)\n      );\n\n      if (Object.keys(enabledDistributions).length === 0) {\n        throw new Error('No distributions are enabled. Please enable at least one variable distribution to run the simulation.');\n      }\n\n      const options = {\n        iterations: simulationSettings.iterations,\n        confidenceLevel: simulationSettings.confidenceLevel,\n        randomSeed: simulationSettings.randomSeed,\n        correlationMatrix: simulationSettings.enableCorrelation ? correlationMatrix : null,\n        onProgress: setProgress\n      };\n\n      // Extract current revenue from actual data structure\n      const statements = data?.statements?.incomeStatement;\n      const latestIndex = data?.periods?.length - 1 || 2;\n      const currentRevenue = statements?.totalRevenue?.[latestIndex] || 1000000;\n      const currentOperatingIncome = statements?.operatingIncome?.[latestIndex] || 150000;\n\n      const baseInputs = {\n        currentRevenue: currentRevenue * 1000, // Convert from thousands to actual values\n        currentPrice: 100, // Default stock price for private company\n        sharesOutstanding: 1000000, // Default shares outstanding\n        currentOperatingIncome: currentOperatingIncome * 1000,\n        ...Object.fromEntries(\n          Object.entries(enabledDistributions).map(([key, dist]) => [\n            key,\n            dist.parameters.mean || dist.parameters.mode || (dist.parameters.min + dist.parameters.max) / 2\n          ])\n        )\n      };\n\n      const results = await monteCarloEngine.runDCFSimulation(\n        baseInputs,\n        enabledDistributions,\n        options\n      );\n\n      setSimulationResults(results);\n    } catch (error) {\n      console.error('Monte Carlo simulation failed:', error);\n      // Show error to user\n      alert(`Monte Carlo simulation failed: ${error.message}`);\n    } finally {\n      setIsRunning(false);\n      setProgress(0);\n    }\n  }, [distributions, simulationSettings, correlationMatrix, data]);\n\n  const stopSimulation = useCallback(() => {\n    monteCarloEngine.stopSimulation();\n    setIsRunning(false);\n  }, []);\n\n  const updateDistribution = useCallback((variable, updates) => {\n    setDistributions(prev => ({\n      ...prev,\n      [variable]: { ...prev[variable], ...updates }\n    }));\n  }, []);\n\n  const updateCorrelation = useCallback((i, j, value) => {\n    setCorrelationMatrix(prev => {\n      const newMatrix = prev.map(row => [...row]);\n      newMatrix[i][j] = value;\n      newMatrix[j][i] = value; // Keep matrix symmetric\n      return newMatrix;\n    });\n  }, []);\n\n  const generateHistogramData = useMemo(() => {\n    if (!simulationResults?.results) return [];\n\n    const values = simulationResults.results.map(r => r.pricePerShare);\n    const bins = 50;\n    const min = Math.min(...values);\n    const max = Math.max(...values);\n    const binWidth = (max - min) / bins;\n\n    const histogram = Array(bins).fill(0).map((_, i) => ({\n      bin: min + i * binWidth,\n      count: 0,\n      frequency: 0\n    }));\n\n    values.forEach(value => {\n      const binIndex = Math.min(Math.floor((value - min) / binWidth), bins - 1);\n      histogram[binIndex].count++;\n    });\n\n    histogram.forEach(bin => {\n      bin.frequency = bin.count / values.length;\n    });\n\n    return histogram;\n  }, [simulationResults]);\n\n  const generateScatterData = useMemo(() => {\n    if (!simulationResults?.results) return [];\n\n    return simulationResults.results.slice(0, 1000).map((result, i) => ({\n      x: result.inputs.revenueGrowthRate * 100,\n      y: result.pricePerShare,\n      upside: result.upside\n    }));\n  }, [simulationResults]);\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  const formatPercent = (value) => {\n    return `${(value * 100).toFixed(2)}%`;\n  };\n\n  const tabs = [\n    { id: 'setup', label: 'Setup', icon: Settings },\n    { id: 'run', label: 'Run Simulation', icon: Play },\n    { id: 'results', label: 'Results', icon: BarChart3 },\n    { id: 'analysis', label: 'Analysis', icon: TrendingUp }\n  ];\n\n  return (\n    <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n      <div className=\"mb-6\">\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <h2 className=\"text-2xl font-bold text-white mb-2 flex items-center\">\n            <Zap className=\"inline-block mr-2\" />\n            Monte Carlo Simulation\n          </h2>\n          <p className=\"text-gray-400 text-sm\">\n            Advanced risk analysis using probabilistic modeling • Generate thousands of scenarios • Measure uncertainty\n          </p>\n        </motion.div>\n      </div>\n\n      <div className=\"mb-6\">\n        <div className=\"flex space-x-2\">\n          {tabs.map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`px-4 py-2 rounded-lg font-medium transition-colors flex items-center gap-2 ${\n                  activeTab === tab.id\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                }`}\n              >\n                <Icon size={16} />\n                {tab.label}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"mt-6\">\n        <AnimatePresence mode=\"wait\">\n          {activeTab === 'setup' && (\n            <motion.div\n              key=\"setup\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"space-y-6\">\n                <div className=\"bg-gray-700 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n                    🎛️ Simulation Settings\n                  </h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <label className=\"block text-sm font-medium text-gray-200\">Iterations</label>\n                      <input\n                        type=\"number\"\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.iterations}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          iterations: parseInt(e.target.value)\n                        }))}\n                        min=\"1000\"\n                        max=\"100000\"\n                        step=\"1000\"\n                      />\n                      <small className=\"text-gray-400\">Leave empty for random</small>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label className=\"block text-sm font-medium text-gray-200\">Confidence Level</label>\n                      <select\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.confidenceLevel}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          confidenceLevel: parseFloat(e.target.value)\n                        }))}\n                      >\n                        <option value={0.90}>90%</option>\n                        <option value={0.95}>95%</option>\n                        <option value={0.99}>99%</option>\n                      </select>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label className=\"block text-sm font-medium text-gray-200\">Random Seed (Optional)</label>\n                      <input\n                        type=\"number\"\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.randomSeed || ''}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          randomSeed: e.target.value ? parseInt(e.target.value) : null\n                        }))}\n                        placeholder=\"Leave empty for random\"\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label className=\"flex items-center space-x-2 text-gray-200\">\n                        <input\n                          type=\"checkbox\"\n                          className=\"w-4 h-4 text-blue-600 bg-gray-800 border-gray-600 rounded focus:ring-blue-500\"\n                          checked={simulationSettings.enableCorrelation}\n                          onChange={(e) => setSimulationSettings(prev => ({\n                            ...prev,\n                            enableCorrelation: e.target.checked\n                          }))}\n                        />\n                        <span>Enable Variable Correlation</span>\n                      </label>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-700 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n                    📊 Variable Distributions\n                  </h3>\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                    {Object.entries(distributions).map(([variable, dist]) => (\n                      <div key={variable} className=\"bg-gray-800 border border-gray-600 rounded-lg p-4\">\n                        <div className=\"flex items-center justify-between mb-3\">\n                          <label className=\"flex items-center space-x-2 text-gray-200\">\n                            <input\n                              type=\"checkbox\"\n                              checked={dist.enabled}\n                              onChange={(e) => updateDistribution(variable, { enabled: e.target.checked })}\n                            />\n                            <span className=\"font-medium\">{dist.name}</span>\n                          </label>\n                        </div>\n\n                        {dist.enabled && (\n                          <div className=\"space-y-3\">\n                            <div className=\"space-y-2\">\n                              <label className=\"block text-sm font-medium text-gray-200\">Distribution Type</label>\n                              <select\n                                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                                value={dist.type}\n                                onChange={(e) => {\n                                  const newType = e.target.value;\n                                  const typeConfig = distributionTypes.find(t => t.value === newType);\n                                  const newParameters = {};\n\n                                  // Set default parameters for new type\n                                  if (newType === 'normal') {\n                                    newParameters.mean = 0.1;\n                                    newParameters.stdDev = 0.02;\n                                  } else if (newType === 'triangular') {\n                                    newParameters.min = 0.05;\n                                    newParameters.mode = 0.1;\n                                    newParameters.max = 0.15;\n                                  } else if (newType === 'uniform') {\n                                    newParameters.min = 0.05;\n                                    newParameters.max = 0.15;\n                                  }\n\n                                  updateDistribution(variable, { type: newType, parameters: newParameters });\n                                }}\n                              >\n                                {distributionTypes.map(type => (\n                                  <option key={type.value} value={type.value}>\n                                    {type.label}\n                                  </option>\n                                ))}\n                              </select>\n                            </div>\n\n                            <div className=\"grid grid-cols-2 gap-3\">\n                              {distributionTypes\n                                .find(t => t.value === dist.type)\n                                ?.parameters.map(param => (\n                                  <div key={param} className=\"space-y-1\">\n                                    <label className=\"block text-xs font-medium text-gray-300\">{param.charAt(0).toUpperCase() + param.slice(1)}</label>\n                                    <input\n                                      className=\"w-full px-2 py-1 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                                      type=\"number\"\n                                      value={dist.parameters[param] || ''}\n                                      onChange={(e) => updateDistribution(variable, {\n                                        parameters: {\n                                          ...dist.parameters,\n                                          [param]: parseFloat(e.target.value)\n                                        }\n                                      })}\n                                      step=\"0.001\"\n                                    />\n                                  </div>\n                                ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {simulationSettings.enableCorrelation && (\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">🔗 Correlation Matrix</h3>\n                    <div className=\"overflow-x-auto\">\n                      <table>\n                        <thead>\n                          <tr>\n                            <th />\n                            {Object.keys(distributions).map(variable => (\n                              <th key={variable}>{distributions[variable].name}</th>\n                            ))}\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.keys(distributions).map((variable, i) => (\n                            <tr key={variable}>\n                              <td className=\"font-medium text-gray-200 p-2 border border-gray-600\">\n                                {distributions[variable].name}\n                              </td>\n                              {Object.keys(distributions).map((_, j) => (\n                                <td key={j} className=\"p-2 border border-gray-600\">\n                                  <input\n                                    type=\"number\"\n                                    value={correlationMatrix[i][j]}\n                                    onChange={(e) => updateCorrelation(i, j, parseFloat(e.target.value))}\n                                    min=\"-1\"\n                                    max=\"1\"\n                                    step=\"0.1\"\n                                    disabled={i === j}\n                                    className=\"w-full px-2 py-1 bg-gray-800 border border-gray-600 rounded text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 disabled:bg-gray-700 disabled:text-gray-400\"\n                                  />\n                                </td>\n                              ))}\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'run' && (\n            <motion.div\n              key=\"run\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                  <h3>🚀 Simulation Control</h3>\n                  <div className=\"flex items-center space-x-2\">\n                    {!isRunning ? (\n                      <button\n                        onClick={runSimulation}\n                        className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\"\n                        disabled={Object.values(distributions).every(d => !d.enabled)}\n                      >\n                        <Play size={16} />\n                        <span>Run Simulation</span>\n                      </button>\n                    ) : (\n                      <button\n                        onClick={stopSimulation}\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\"\n                      >\n                        <Square size={16} />\n                        <span>Stop Simulation</span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n\n                {isRunning && (\n                  <div className=\"mt-4\">\n                    <div className=\"w-full bg-gray-700 rounded-full h-2 mb-2\">\n                      <div\n                        className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n                        style={{ width: `${progress}%` }}\n                      />\n                    </div>\n                    <div className=\"text-sm text-gray-400 text-center\">\n                      {progress.toFixed(1)}% Complete ({Math.floor(progress * simulationSettings.iterations / 100)} / {simulationSettings.iterations} iterations)\n                    </div>\n                  </div>\n                )}\n\n                <div className=\"bg-gray-800 rounded-lg p-4 mt-4\">\n                  <h4 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📋 Simulation Preview</h4>\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Iterations</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {simulationSettings.iterations.toLocaleString()}\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Variables</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {Object.values(distributions).filter(d => d.enabled).length}\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Confidence Level</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {(simulationSettings.confidenceLevel * 100).toFixed(0)}%\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Correlation</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {simulationSettings.enableCorrelation ? 'Enabled' : 'Disabled'}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'results' && (\n            <motion.div\n              key=\"results\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              {simulationResults ? (\n                <div className=\"space-y-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-xl font-semibold text-white flex items-center\">📊 Simulation Results</h3>\n                    <div className=\"flex items-center space-x-2\">\n                      <button className=\"bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\">\n                        <Download size={16} />\n                        Export Results\n                      </button>\n                      <button className=\"bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\">\n                        <FileText size={16} />\n                        Generate Report\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    {Object.entries(simulationResults.analysis.statistics).map(([metric, stats]) => (\n                      <div key={metric} className=\"bg-gray-700 rounded-lg p-4\">\n                        <h4 className=\"text-lg font-semibold text-white mb-3\">\n                          {metric === 'pricePerShare' ? '💰 Price per Share' :\n                            metric === 'enterpriseValue' ? '🏢 Enterprise Value' :\n                              '📈 Upside %'}\n                        </h4>\n                        <div className=\"text-2xl font-bold text-green-400 mb-2\">\n                          {metric === 'upside'\n                            ? `${stats.mean.toFixed(1)}%`\n                            : formatCurrency(stats.mean)\n                          }\n                        </div>\n                        <div className=\"space-y-1 text-sm text-gray-300\">\n                          <div>Median: {metric === 'upside' ? `${stats.median.toFixed(1)}%` : formatCurrency(stats.median)}</div>\n                          <div>Std Dev: {metric === 'upside' ? `${stats.stdDev.toFixed(1)}%` : formatCurrency(stats.stdDev)}</div>\n                          <div>Min: {metric === 'upside' ? `${stats.min.toFixed(1)}%` : formatCurrency(stats.min)}</div>\n                          <div>Max: {metric === 'upside' ? `${stats.max.toFixed(1)}%` : formatCurrency(stats.max)}</div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div className=\"bg-gray-700 rounded-lg p-4\">\n                      <h4>📊 Price Distribution</h4>\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <AreaChart data={generateHistogramData}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis\n                            dataKey=\"bin\"\n                            tickFormatter={formatCurrency}\n                          />\n                          <YAxis />\n                          <Tooltip\n                            formatter={(value, name) => [\n                              `${(value * 100).toFixed(2)}%`,\n                              'Frequency'\n                            ]}\n                            labelFormatter={(value) => `Price: ${formatCurrency(value)}`}\n                          />\n                          <Area\n                            type=\"monotone\"\n                            dataKey=\"frequency\"\n                            stroke=\"#3B82F6\"\n                            fill=\"#3B82F6\"\n                            fillOpacity={0.6}\n                          />\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </div>\n\n                    <div className=\"bg-gray-700 rounded-lg p-4\">\n                      <h4>🎯 Sensitivity Scatter Plot</h4>\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <ScatterChart data={generateScatterData}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis\n                            dataKey=\"x\"\n                            name=\"Revenue Growth Rate\"\n                            tickFormatter={(value) => `${value.toFixed(1)}%`}\n                          />\n                          <YAxis\n                            dataKey=\"y\"\n                            name=\"Price per Share\"\n                            tickFormatter={formatCurrency}\n                          />\n                          <Tooltip\n                            formatter={(value, name) => [\n                              name === 'Revenue Growth Rate' ? `${value.toFixed(2)}%` : formatCurrency(value),\n                              name\n                            ]}\n                          />\n                          <Scatter name=\"Scenarios\" fill=\"#10B981\">\n                            {generateScatterData.map((entry, index) => (\n                              <Cell\n                                key={`cell-${index}`}\n                                fill={entry.upside > 0 ? '#10B981' : '#EF4444'}\n                              />\n                            ))}\n                          </Scatter>\n                        </ScatterChart>\n                      </ResponsiveContainer>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n                  <AlertTriangle size={48} className=\"text-gray-400 mb-4\" />\n                  <h3 className=\"text-xl font-semibold text-white mb-2\">No Results Available</h3>\n                  <p className=\"text-gray-400\">Run a simulation to see results here.</p>\n                </div>\n              )}\n            </motion.div>\n          )}\n\n          {activeTab === 'analysis' && (\n            <motion.div\n              key=\"analysis\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              {simulationResults?.analysis ? (\n                <div className=\"space-y-6\">\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">⚠️ Risk Metrics</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                      {Object.entries(simulationResults.analysis.riskMetrics).map(([metric, value]) => (\n                        <div key={metric} className=\"bg-gray-800 rounded-lg p-4 border border-gray-600\">\n                          <h4 className=\"text-sm font-medium text-gray-300 mb-2\">{metric === 'var95' ? 'Value at Risk (95%)' :\n                            metric === 'cvar95' ? 'Conditional VaR (95%)' :\n                              metric === 'probabilityOfLoss' ? 'Probability of Loss' :\n                                'Sharpe Ratio'}\n                          </h4>\n                          <div className=\"text-xl font-bold text-red-400 mb-1\">\n                            {metric === 'probabilityOfLoss' ? `${(value * 100).toFixed(1)}%` : formatCurrency(value)}\n                          </div>\n                          <div className=\"text-xs text-gray-400\">\n                            Risk measure\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📊 Confidence Intervals ({(simulationResults.analysis.confidenceIntervals.pricePerShare?.level * 100).toFixed(0)}%)</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      {Object.entries(simulationResults.analysis.confidenceIntervals).map(([metric, interval]) => (\n                        <div key={metric} className=\"bg-gray-800 rounded-lg p-4 border border-gray-600\">\n                          <h4 className=\"text-lg font-semibold text-white mb-3\">{metric === 'pricePerShare' ? 'Price per Share' :\n                            metric === 'enterpriseValue' ? 'Enterprise Value' :\n                              'Upside %'}\n                          </h4>\n                          <div className=\"space-y-3\">\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Lower Bound:</span>\n                              <span className=\"font-medium text-white\">{metric === 'upside' ? `${interval.lowerBound.toFixed(1)}%` : formatCurrency(interval.lowerBound)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Upper Bound:</span>\n                              <span className=\"font-medium text-white\">{metric === 'upside' ? `${interval.upperBound.toFixed(1)}%` : formatCurrency(interval.upperBound)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Width:</span>\n                              <span className=\"font-medium text-blue-400\">{metric === 'upside' ? `${interval.width.toFixed(1)}%` : formatCurrency(interval.width)}</span>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📊 Percentile Analysis</h3>\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"w-full\">\n                        <thead>\n                          <tr className=\"border-b border-gray-600\">\n                            <th className=\"text-left p-3 text-sm font-medium text-gray-300\">Metric</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">5th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">25th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">50th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">75th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">95th %ile</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.entries(simulationResults.analysis.percentiles).map(([metric, percentiles]) => (\n                            <tr key={metric} className=\"border-b border-gray-600\">\n                              <td className=\"p-3 text-sm text-white\">{metric === 'pricePerShare' ? 'Price per Share' :\n                                metric === 'enterpriseValue' ? 'Enterprise Value' :\n                                  'Upside %'}\n                              </td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p5.toFixed(1)}%` : formatCurrency(percentiles.p5)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p25.toFixed(1)}%` : formatCurrency(percentiles.p25)}</td>\n                              <td className=\"p-3 text-sm text-right text-blue-400 font-medium\">{metric === 'upside' ? `${percentiles.p50.toFixed(1)}%` : formatCurrency(percentiles.p50)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p75.toFixed(1)}%` : formatCurrency(percentiles.p75)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p95.toFixed(1)}%` : formatCurrency(percentiles.p95)}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n                  <AlertTriangle size={48} className=\"text-gray-400 mb-4\" />\n                  <h3 className=\"text-xl font-semibold text-white mb-2\">No Analysis Available</h3>\n                  <p className=\"text-gray-400\">Run a simulation to see analysis here.</p>\n                </div>\n              )}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\nexport default MonteCarloSimulation;\n"],"names":["data","onDataChange","activeTab","setActiveTab","useState","lboResults","setLBOResults","isCalculating","setIsCalculating","lboInputs","setLBOInputs","symbol","companyName","purchasePrice","ebitda","revenue","equityContribution","seniorDebtMultiple","subordinatedDebtMultiple","seniorInterestRate","subordinatedInterestRate","ebitdaGrowthRate","capexAsPercentOfRevenue","nwcAsPercentOfRevenue","holdingPeriod","exitMultiple","transactionFees","managementFees","taxRate","formatCurrency","useCallback","value","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercent","toFixed","calculateLBO","async","modelInputs","assumptions","debt","operating","exit","transaction","results","lboModelingEngine","buildLBOModel","lboModel","inputs","timestamp","Date","toISOString","error","alert","message","handleInputChange","field","prev","parseFloat","jsxs","className","children","jsx","Building2","size","motion","button","onClick","disabled","Calculator","id","label","icon","DollarSign","BarChart3","map","tab","Icon","div","initial","opacity","y","animate","type","onChange","e","target","step","baseCase","returnsAnalysis","irr","moic","transactionStructure","debtToEbitda","exitAnalysis","equityProceeds","totalDebt","entryMultiple","equityPercentage","scenarios","Object","keys","length","entries","name","scenario","calculateDCF","setScenarios","probability","revenueGrowth","marginExpansion","capexIntensity","isBase","analysisSettings","setAnalysisSettings","modelType","outputMetric","includeCorrelations","numSimulations","setResults","runScenarioAnalysis","scenarioResults","result","scenarioData","statements","incomeStatement","totalRevenue","rev","idx","Math","pow","push","enterpriseValue","equityValue","weightedValue","reduce","sum","s","valueRange","min","max","range","standardDeviation","sqrt","deviation","summary","coefficientOfVariation","probabilityOfPositiveReturn","filter","currentMarketCap","chartData","addScenario","newScenario","now","updateScenario","deleteScenario","totalProbability","useMemo","whileHover","scale","Play","parseInt","checked","AlertTriangle","Plus","Trash2","ResponsiveContainer","width","height","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","tickFormatter","Tooltip","formatter","Bar","fill","AdvancedDCF","onModelInputChange","advancedDCFResults","discountRate","terminalGrowthRate","projectionYears","dcf","workingCapitalAssumptions","workingCapital","receivablesDays","inventoryDays","payablesDays","capexAssumptions","capex","depreciationRate","years","freeCashFlows","presentValues","workingCapitalChanges","capexAmounts","unleveredFreeCashFlow","cumulativePV","terminalValue","presentValueTerminal","impliedShare","baseRevenue","year","yearData","operatingIncome","nopat","workingCapitalChange","depreciation","freeCashFlow","presentValue","currentRevenue","previousRevenue","currentReceivables","currentInventory","currentPayables","receivablesChange","inventoryChange","payablesChange","abs","discountFactor","terminalFCF","terminalDiscountFactor","sharesOutstanding","updateDCFAssumption","category","updatedDCF","updateBasicAssumption","Settings","charAt","toUpperCase","slice","Fragment","TrendingUp","Info","index","DataVisualization","dcfData","sensitivityData","WACCCalculator","MonteCarloSimulation","simulationResults","setSimulationResults","isRunning","setIsRunning","progress","setProgress","simulationSettings","setSimulationSettings","iterations","confidenceLevel","randomSeed","enableCorrelation","distributions","setDistributions","revenueGrowthRate","parameters","mean","stdDev","enabled","fcfMargin","mode","wacc","correlationMatrix","setCorrelationMatrix","distributionTypes","runSimulation","enabledDistributions","fromEntries","_","dist","Error","options","onProgress","latestIndex","periods","baseInputs","currentPrice","currentOperatingIncome","key","monteCarloEngine","runDCFSimulation","stopSimulation","updateDistribution","variable","updates","updateCorrelation","i","j","newMatrix","row","generateHistogramData","values","r","pricePerShare","binWidth","histogram","Array","bin","count","frequency","forEach","binIndex","floor","bins","generateScatterData","x","upside","tabs","Zap","AnimatePresence","transition","duration","placeholder","newType","newParameters","find","t","param","Square","every","d","toLocaleString","Download","FileText","analysis","statistics","metric","stats","median","AreaChart","labelFormatter","Area","stroke","fillOpacity","ScatterChart","Scatter","entry","Cell","riskMetrics","confidenceIntervals","level","interval","lowerBound","upperBound","percentiles","p5","p25","p50","p75","p95"],"mappings":"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"}