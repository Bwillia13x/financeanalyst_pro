{"version":3,"file":"Settings-g4PB94sL.js","sources":["../../src/services/securityService.js","../../src/components/Security/SecurityDashboard.jsx","../../src/services/userPreferencesService.js","../../src/components/Settings/UserPreferences.jsx","../../src/pages/Settings.jsx"],"sourcesContent":["/**\n * Advanced Security Service with Compliance Monitoring\n * Implements enterprise-grade security features and regulatory compliance\n */\n\nimport CryptoJS from 'crypto-js';\n\nclass SecurityService {\n  constructor() {\n    this.sessions = new Map();\n    this.auditLog = [];\n    this.securityPolicies = new Map();\n    this.complianceRules = new Map();\n    this.threats = new Map();\n    this.accessControls = new Map();\n    this.encryptionKeys = new Map();\n    this.securityEvents = [];\n    this.isInitialized = false;\n\n    this.initializeService();\n  }\n\n  /**\n   * Initialize security service with default policies\n   */\n  async initializeService() {\n    try {\n      this.setupDefaultPolicies();\n      this.setupComplianceRules();\n      this.initializeEncryption();\n      this.startSecurityMonitoring();\n\n      this.isInitialized = true;\n      console.log('Security service initialized with enterprise-grade protection');\n    } catch (error) {\n      console.error('Error initializing security service:', error);\n    }\n  }\n\n  /**\n   * Setup default security policies\n   */\n  setupDefaultPolicies() {\n    // Password Policy\n    this.securityPolicies.set('password', {\n      minLength: 12,\n      requireUppercase: true,\n      requireLowercase: true,\n      requireNumbers: true,\n      requireSpecialChars: true,\n      maxAge: 90, // days\n      preventReuse: 5, // last 5 passwords\n      lockoutThreshold: 5, // failed attempts\n      lockoutDuration: 300000 // 5 minutes\n    });\n\n    // Session Policy\n    this.securityPolicies.set('session', {\n      maxDuration: 28800000, // 8 hours\n      idleTimeout: 1800000, // 30 minutes\n      requireReauth: true,\n      secureCookies: true,\n      httpOnly: true,\n      sameSite: 'strict'\n    });\n\n    // Data Access Policy\n    this.securityPolicies.set('dataAccess', {\n      requireMFA: true,\n      logAllAccess: true,\n      maskSensitiveData: true,\n      requireApproval: ['financial_statements', 'trading_data'],\n      retentionPeriod: 2555200000 // 90 days\n    });\n\n    // API Security Policy\n    this.securityPolicies.set('api', {\n      rateLimiting: true,\n      requestsPerMinute: 100,\n      requireAuthentication: true,\n      validateInput: true,\n      encryptPayload: true,\n      logRequests: true\n    });\n\n    // File Security Policy\n    this.securityPolicies.set('files', {\n      allowedTypes: ['.pdf', '.xlsx', '.csv', '.json'],\n      maxFileSize: 50 * 1024 * 1024, // 50MB\n      virusScanning: true,\n      encryptStorage: true,\n      requireApproval: true\n    });\n  }\n\n  /**\n   * Setup compliance rules for different regulations\n   */\n  setupComplianceRules() {\n    // SOX Compliance\n    this.complianceRules.set('sox', {\n      name: 'Sarbanes-Oxley Act',\n      requirements: {\n        auditTrail: true,\n        dataIntegrity: true,\n        accessControls: true,\n        changeManagement: true,\n        periodicReview: true\n      },\n      retentionPeriod: 2555200000, // 7 years\n      auditFrequency: 'quarterly'\n    });\n\n    // GDPR Compliance\n    this.complianceRules.set('gdpr', {\n      name: 'General Data Protection Regulation',\n      requirements: {\n        dataMinimization: true,\n        consentManagement: true,\n        rightToErasure: true,\n        dataPortability: true,\n        breachNotification: true,\n        privacyByDesign: true\n      },\n      retentionPeriod: 1095 * 24 * 60 * 60 * 1000, // 3 years\n      auditFrequency: 'annual'\n    });\n\n    // SEC Compliance\n    this.complianceRules.set('sec', {\n      name: 'Securities and Exchange Commission',\n      requirements: {\n        recordKeeping: true,\n        reportingAccuracy: true,\n        insiderTrading: true,\n        marketManipulation: true,\n        clientProtection: true\n      },\n      retentionPeriod: 1826 * 24 * 60 * 60 * 1000, // 5 years\n      auditFrequency: 'annual'\n    });\n\n    // FINRA Compliance\n    this.complianceRules.set('finra', {\n      name: 'Financial Industry Regulatory Authority',\n      requirements: {\n        communicationMonitoring: true,\n        tradingSurveillance: true,\n        riskManagement: true,\n        customerProtection: true,\n        recordKeeping: true\n      },\n      retentionPeriod: 1095 * 24 * 60 * 60 * 1000, // 3 years\n      auditFrequency: 'monthly'\n    });\n  }\n\n  /**\n   * Initialize encryption system\n   */\n  initializeEncryption() {\n    // Generate master encryption key if not exists\n    if (!localStorage.getItem('financeanalyst_master_key')) {\n      const masterKey = CryptoJS.lib.WordArray.random(256 / 8).toString();\n      this.encryptionKeys.set('master', masterKey);\n      localStorage.setItem('financeanalyst_master_key', masterKey);\n    } else {\n      this.encryptionKeys.set('master', localStorage.getItem('financeanalyst_master_key'));\n    }\n\n    // Generate session-specific keys\n    this.generateSessionKey();\n  }\n\n  /**\n   * Generate new session encryption key\n   */\n  generateSessionKey() {\n    const sessionKey = CryptoJS.lib.WordArray.random(256 / 8).toString();\n    this.encryptionKeys.set('session', sessionKey);\n    return sessionKey;\n  }\n\n  /**\n   * Start security monitoring\n   */\n  startSecurityMonitoring() {\n    // Monitor for security events\n    setInterval(() => {\n      this.checkSecurityThreats();\n      this.validateSessions();\n      this.cleanupExpiredData();\n    }, 60000); // Every minute\n\n    // Setup event listeners\n    this.setupSecurityEventListeners();\n  }\n\n  /**\n   * Setup security event listeners\n   */\n  setupSecurityEventListeners() {\n    // Login attempts\n    window.addEventListener('login-attempt', (event) => {\n      this.logSecurityEvent('login_attempt', event.detail);\n    });\n\n    // Data access\n    window.addEventListener('data-access', (event) => {\n      this.logSecurityEvent('data_access', event.detail);\n    });\n\n    // Configuration changes\n    window.addEventListener('config-change', (event) => {\n      this.logSecurityEvent('config_change', event.detail);\n    });\n  }\n\n  /**\n   * Authenticate user with multiple factors\n   */\n  async authenticateUser(credentials) {\n    const attempt = {\n      timestamp: new Date().toISOString(),\n      ip: this.getClientIP(),\n      userAgent: navigator.userAgent,\n      success: false\n    };\n\n    try {\n      // Validate credentials\n      const isValidPassword = await this.validatePassword(credentials.username, credentials.password);\n      if (!isValidPassword) {\n        attempt.reason = 'invalid_credentials';\n        this.logSecurityEvent('login_failed', attempt);\n        throw new Error('Invalid credentials');\n      }\n\n      // Check for account lockout\n      if (this.isAccountLocked(credentials.username)) {\n        attempt.reason = 'account_locked';\n        this.logSecurityEvent('login_blocked', attempt);\n        throw new Error('Account temporarily locked');\n      }\n\n      // Multi-factor authentication\n      if (this.requiresMFA(credentials.username)) {\n        const mfaValid = await this.validateMFA(credentials.username, credentials.mfaCode);\n        if (!mfaValid) {\n          attempt.reason = 'invalid_mfa';\n          this.logSecurityEvent('mfa_failed', attempt);\n          throw new Error('Invalid MFA code');\n        }\n      }\n\n      // Create secure session\n      const session = await this.createSecureSession(credentials.username);\n      attempt.success = true;\n      attempt.sessionId = session.id;\n\n      this.logSecurityEvent('login_success', attempt);\n      return session;\n\n    } catch (error) {\n      this.incrementFailedAttempts(credentials.username);\n      throw error;\n    }\n  }\n\n  /**\n   * Create secure session\n   */\n  async createSecureSession(username) {\n    const sessionId = CryptoJS.lib.WordArray.random(256 / 8).toString();\n    const session = {\n      id: sessionId,\n      username,\n      createdAt: new Date().toISOString(),\n      lastActivity: new Date().toISOString(),\n      ip: this.getClientIP(),\n      userAgent: navigator.userAgent,\n      permissions: await this.getUserPermissions(username),\n      isActive: true\n    };\n\n    this.sessions.set(sessionId, session);\n\n    // Set secure session cookie\n    this.setSecureSessionCookie(sessionId);\n\n    return session;\n  }\n\n  /**\n   * Validate current session\n   */\n  validateSession(sessionId) {\n    const session = this.sessions.get(sessionId);\n    if (!session || !session.isActive) {\n      return false;\n    }\n\n    const now = new Date();\n    const lastActivity = new Date(session.lastActivity);\n    const policy = this.securityPolicies.get('session');\n\n    // Check session timeout\n    if (now - lastActivity > policy.idleTimeout) {\n      this.terminateSession(sessionId, 'idle_timeout');\n      return false;\n    }\n\n    // Check max duration\n    const sessionStart = new Date(session.createdAt);\n    if (now - sessionStart > policy.maxDuration) {\n      this.terminateSession(sessionId, 'max_duration');\n      return false;\n    }\n\n    // Update last activity\n    session.lastActivity = now.toISOString();\n    this.sessions.set(sessionId, session);\n\n    return true;\n  }\n\n  /**\n   * Encrypt sensitive data\n   */\n  encryptData(data, keyType = 'session') {\n    try {\n      const key = this.encryptionKeys.get(keyType);\n      if (!key) throw new Error('Encryption key not found');\n\n      const encrypted = CryptoJS.AES.encrypt(JSON.stringify(data), key).toString();\n      return encrypted;\n    } catch (error) {\n      console.error('Encryption failed:', error);\n      throw new Error('Failed to encrypt data');\n    }\n  }\n\n  /**\n   * Decrypt sensitive data\n   */\n  decryptData(encryptedData, keyType = 'session') {\n    try {\n      const key = this.encryptionKeys.get(keyType);\n      if (!key) throw new Error('Decryption key not found');\n\n      const bytes = CryptoJS.AES.decrypt(encryptedData, key);\n      const decrypted = bytes.toString(CryptoJS.enc.Utf8);\n      return JSON.parse(decrypted);\n    } catch (error) {\n      console.error('Decryption failed:', error);\n      throw new Error('Failed to decrypt data');\n    }\n  }\n\n  /**\n   * Hash sensitive information\n   */\n  hashData(data, salt = null) {\n    const saltToUse = salt || CryptoJS.lib.WordArray.random(128 / 8).toString();\n    const hash = CryptoJS.PBKDF2(data, saltToUse, {\n      keySize: 256 / 32,\n      iterations: 10000\n    });\n\n    return {\n      hash: hash.toString(),\n      salt: saltToUse\n    };\n  }\n\n  /**\n   * Log security event\n   */\n  logSecurityEvent(type, details) {\n    const event = {\n      id: CryptoJS.lib.WordArray.random(128 / 8).toString(),\n      type,\n      timestamp: new Date().toISOString(),\n      details: { ...details },\n      severity: this.getEventSeverity(type),\n      source: 'security_service'\n    };\n\n    this.securityEvents.push(event);\n    this.auditLog.push(event);\n\n    // Alert on high-severity events\n    if (event.severity === 'high' || event.severity === 'critical') {\n      this.alertSecurityTeam(event);\n    }\n\n    // Store in persistent audit log\n    this.persistAuditLog();\n  }\n\n  /**\n   * Check for security threats\n   */\n  checkSecurityThreats() {\n    // Check for unusual access patterns\n    this.detectAnomalousAccess();\n\n    // Check for brute force attempts\n    this.detectBruteForceAttacks();\n\n    // Check for data exfiltration\n    this.detectDataExfiltration();\n\n    // Check for privilege escalation\n    this.detectPrivilegeEscalation();\n  }\n\n  /**\n   * Detect anomalous access patterns\n   */\n  detectAnomalousAccess() {\n    const recentEvents = this.securityEvents.filter(\n      event => new Date() - new Date(event.timestamp) < 3600000 // Last hour\n    );\n\n    // Check for multiple failed logins\n    const failedLogins = recentEvents.filter(e => e.type === 'login_failed');\n    if (failedLogins.length > 10) {\n      this.logSecurityEvent('anomalous_access', {\n        pattern: 'multiple_failed_logins',\n        count: failedLogins.length,\n        timeWindow: '1h'\n      });\n    }\n\n    // Check for access from unusual locations\n    const uniqueIPs = new Set(recentEvents.map(e => e.details.ip));\n    if (uniqueIPs.size > 5) {\n      this.logSecurityEvent('anomalous_access', {\n        pattern: 'multiple_ip_addresses',\n        count: uniqueIPs.size,\n        timeWindow: '1h'\n      });\n    }\n  }\n\n  /**\n   * Compliance monitoring and reporting\n   */\n  async runComplianceCheck(regulation = null) {\n    const results = new Map();\n    const regulations = regulation ? [regulation] : Array.from(this.complianceRules.keys());\n\n    for (const reg of regulations) {\n      const rule = this.complianceRules.get(reg);\n      if (!rule) continue;\n\n      const compliance = {\n        regulation: reg,\n        name: rule.name,\n        status: 'compliant',\n        issues: [],\n        recommendations: [],\n        lastChecked: new Date().toISOString()\n      };\n\n      // Check audit trail requirement\n      if (rule.requirements.auditTrail) {\n        const auditCoverage = this.checkAuditTrailCoverage();\n        if (auditCoverage < 0.95) { // 95% coverage required\n          compliance.status = 'non-compliant';\n          compliance.issues.push('Insufficient audit trail coverage');\n          compliance.recommendations.push('Ensure all critical actions are logged');\n        }\n      }\n\n      // Check data retention\n      const retentionCompliance = this.checkDataRetention(rule.retentionPeriod);\n      if (!retentionCompliance) {\n        compliance.status = 'non-compliant';\n        compliance.issues.push('Data retention policy violation');\n        compliance.recommendations.push('Update data retention procedures');\n      }\n\n      // Check access controls\n      if (rule.requirements.accessControls) {\n        const accessCompliance = this.checkAccessControls();\n        if (!accessCompliance) {\n          compliance.status = 'non-compliant';\n          compliance.issues.push('Inadequate access controls');\n          compliance.recommendations.push('Strengthen user access management');\n        }\n      }\n\n      results.set(reg, compliance);\n    }\n\n    // Generate compliance report\n    const report = this.generateComplianceReport(results);\n    this.logSecurityEvent('compliance_check', {\n      regulations,\n      overallStatus: this.getOverallComplianceStatus(results)\n    });\n\n    return report;\n  }\n\n  /**\n   * Generate security report\n   */\n  async generateSecurityReport(timeframe = '24h') {\n    const now = new Date();\n    const timeframeMs = this.parseTimeframe(timeframe);\n    const startTime = new Date(now - timeframeMs);\n\n    const relevantEvents = this.securityEvents.filter(\n      event => new Date(event.timestamp) >= startTime\n    );\n\n    const report = {\n      period: {\n        start: startTime.toISOString(),\n        end: now.toISOString(),\n        duration: timeframe\n      },\n      summary: {\n        totalEvents: relevantEvents.length,\n        criticalEvents: relevantEvents.filter(e => e.severity === 'critical').length,\n        highSeverityEvents: relevantEvents.filter(e => e.severity === 'high').length,\n        activeSessions: this.getActiveSessions().length,\n        failedLogins: relevantEvents.filter(e => e.type === 'login_failed').length\n      },\n      threatAnalysis: this.analyzeThreatLandscape(relevantEvents),\n      recommendations: this.generateSecurityRecommendations(relevantEvents),\n      complianceStatus: await this.runComplianceCheck()\n    };\n\n    return report;\n  }\n\n  /**\n   * Helper methods\n   */\n  getClientIP() {\n    // In a real implementation, this would get the actual client IP\n    return '127.0.0.1';\n  }\n\n  validatePassword(_username, password) {\n    // Mock password validation\n    return password && password.length >= 8;\n  }\n\n  requiresMFA(_username) {\n    const policy = this.securityPolicies.get('dataAccess');\n    return policy.requireMFA;\n  }\n\n  validateMFA(_username, code) {\n    // Mock MFA validation\n    return code && code.length === 6;\n  }\n\n  isAccountLocked(_username) {\n    // Check if account is locked due to failed attempts\n    return false; // Mock implementation\n  }\n\n  incrementFailedAttempts(username) {\n    // Track failed login attempts\n    console.log('Failed login attempt for:', username);\n  }\n\n  getUserPermissions(_username) {\n    // Return user permissions\n    return ['read', 'write', 'analyze'];\n  }\n\n  setSecureSessionCookie(sessionId) {\n    const policy = this.securityPolicies.get('session');\n    document.cookie = `session=${sessionId}; secure; httponly; samesite=strict; max-age=${policy.maxDuration / 1000}`;\n  }\n\n  terminateSession(sessionId, reason) {\n    const session = this.sessions.get(sessionId);\n    if (session) {\n      session.isActive = false;\n      session.terminatedAt = new Date().toISOString();\n      session.terminationReason = reason;\n\n      this.logSecurityEvent('session_terminated', {\n        sessionId,\n        reason,\n        duration: new Date() - new Date(session.createdAt)\n      });\n    }\n  }\n\n  getEventSeverity(type) {\n    const severityMap = {\n      login_failed: 'medium',\n      login_blocked: 'high',\n      anomalous_access: 'high',\n      data_breach: 'critical',\n      unauthorized_access: 'critical',\n      session_hijack: 'critical',\n      compliance_violation: 'high'\n    };\n    return severityMap[type] || 'low';\n  }\n\n  alertSecurityTeam(event) {\n    console.warn('SECURITY ALERT:', event);\n    // In production, this would send alerts to security team\n  }\n\n  persistAuditLog() {\n    try {\n      // Keep only recent events in memory\n      const maxEvents = 10000;\n      if (this.auditLog.length > maxEvents) {\n        this.auditLog = this.auditLog.slice(-maxEvents);\n      }\n\n      // In production, this would persist to secure storage\n      localStorage.setItem('financeanalyst_audit_log', JSON.stringify(this.auditLog.slice(-1000)));\n    } catch (error) {\n      console.error('Failed to persist audit log:', error);\n    }\n  }\n\n  detectBruteForceAttacks() {\n    // Implementation for brute force detection\n  }\n\n  detectDataExfiltration() {\n    // Implementation for data exfiltration detection\n  }\n\n  detectPrivilegeEscalation() {\n    // Implementation for privilege escalation detection\n  }\n\n  checkAuditTrailCoverage() {\n    return 0.98; // Mock 98% coverage\n  }\n\n  checkDataRetention(_period) {\n    return true; // Mock compliance\n  }\n\n  checkAccessControls() {\n    return true; // Mock compliance\n  }\n\n  generateComplianceReport(results) {\n    return {\n      summary: `Compliance check completed for ${results.size} regulations`,\n      details: Array.from(results.values()),\n      generatedAt: new Date().toISOString()\n    };\n  }\n\n  getOverallComplianceStatus(results) {\n    const statuses = Array.from(results.values()).map(r => r.status);\n    return statuses.every(s => s === 'compliant') ? 'compliant' : 'non-compliant';\n  }\n\n  parseTimeframe(timeframe) {\n    const units = { h: 3600000, d: 86400000, w: 604800000 };\n    const match = timeframe.match(/^(\\d+)([hdw])$/);\n    return match ? parseInt(match[1]) * units[match[2]] : 86400000;\n  }\n\n  getActiveSessions() {\n    return Array.from(this.sessions.values()).filter(s => s.isActive);\n  }\n\n  analyzeThreatLandscape(_events) {\n    return {\n      topThreats: ['brute_force', 'anomalous_access'],\n      riskLevel: 'medium',\n      trends: 'stable'\n    };\n  }\n\n  generateSecurityRecommendations(_events) {\n    return [\n      'Enable multi-factor authentication for all users',\n      'Regular security awareness training',\n      'Implement zero-trust architecture'\n    ];\n  }\n\n  validateSessions() {\n    // Validate all active sessions\n    this.sessions.forEach((session, sessionId) => {\n      if (!this.validateSession(sessionId)) {\n        this.terminateSession(sessionId, 'validation_failed');\n      }\n    });\n  }\n\n  cleanupExpiredData() {\n    const now = new Date();\n    const retentionPeriod = 90 * 24 * 60 * 60 * 1000; // 90 days\n\n    // Clean up old security events\n    this.securityEvents = this.securityEvents.filter(\n      event => now - new Date(event.timestamp) < retentionPeriod\n    );\n\n    // Clean up old audit log entries\n    this.auditLog = this.auditLog.filter(\n      entry => now - new Date(entry.timestamp) < retentionPeriod\n    );\n  }\n}\n\nexport default new SecurityService();\n","import { motion, AnimatePresence } from 'framer-motion';\nimport {\n  Shield,\n  AlertTriangle,\n  Eye,\n  Users,\n  Activity,\n  CheckCircle,\n  XCircle,\n  Clock,\n  Download,\n  RefreshCw\n} from 'lucide-react';\nimport React, { useState, useEffect } from 'react';\n\nimport securityService from '../../services/securityService';\n\nconst SecurityDashboard = () => {\n  const [securityReport, setSecurityReport] = useState(null);\n  const [complianceStatus, setComplianceStatus] = useState({});\n  const [activeSessions, setActiveSessions] = useState([]);\n  const [securityEvents, setSecurityEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTimeframe, setSelectedTimeframe] = useState('24h');\n  const [activeTab, setActiveTab] = useState('overview');\n\n  useEffect(() => {\n    loadSecurityData();\n\n    // Auto-refresh every 5 minutes\n    const interval = setInterval(loadSecurityData, 300000);\n    return () => clearInterval(interval);\n  }, [selectedTimeframe]);\n\n  const loadSecurityData = async() => {\n    setIsLoading(true);\n    try {\n      // Load security report\n      const report = await securityService.generateSecurityReport(selectedTimeframe);\n      setSecurityReport(report);\n\n      // Load compliance status\n      const compliance = await securityService.runComplianceCheck();\n      setComplianceStatus(compliance);\n\n      // Get active sessions (mock data for demo)\n      const sessions = [\n        {\n          id: 'session_1',\n          username: 'analyst_1',\n          ip: '192.168.1.100',\n          loginTime: new Date(Date.now() - 3600000).toISOString(),\n          lastActivity: new Date(Date.now() - 300000).toISOString(),\n          location: 'New York, NY'\n        },\n        {\n          id: 'session_2',\n          username: 'manager_1',\n          ip: '192.168.1.101',\n          loginTime: new Date(Date.now() - 7200000).toISOString(),\n          lastActivity: new Date(Date.now() - 120000).toISOString(),\n          location: 'San Francisco, CA'\n        }\n      ];\n      setActiveSessions(sessions);\n\n      // Get recent security events (mock data for demo)\n      const events = [\n        {\n          id: 'event_1',\n          type: 'login_success',\n          severity: 'low',\n          timestamp: new Date(Date.now() - 1800000).toISOString(),\n          description: 'Successful login from analyst_1',\n          ip: '192.168.1.100'\n        },\n        {\n          id: 'event_2',\n          type: 'data_access',\n          severity: 'medium',\n          timestamp: new Date(Date.now() - 3600000).toISOString(),\n          description: 'Financial data accessed by manager_1',\n          ip: '192.168.1.101'\n        },\n        {\n          id: 'event_3',\n          type: 'config_change',\n          severity: 'high',\n          timestamp: new Date(Date.now() - 5400000).toISOString(),\n          description: 'Security policy updated',\n          ip: '192.168.1.102'\n        }\n      ];\n      setSecurityEvents(events);\n\n    } catch (error) {\n      console.error('Error loading security data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getSeverityColor = (severity) => {\n    const colors = {\n      low: 'text-green-600 bg-green-100',\n      medium: 'text-yellow-600 bg-yellow-100',\n      high: 'text-orange-600 bg-orange-100',\n      critical: 'text-red-600 bg-red-100'\n    };\n    return colors[severity] || 'text-gray-600 bg-gray-100';\n  };\n\n  const getSeverityIcon = (severity) => {\n    const icons = {\n      low: CheckCircle,\n      medium: Clock,\n      high: AlertTriangle,\n      critical: XCircle\n    };\n    return icons[severity] || Clock;\n  };\n\n  const getComplianceIcon = (status) => {\n    return status === 'compliant' ? CheckCircle : XCircle;\n  };\n\n  const getComplianceColor = (status) => {\n    return status === 'compliant'\n      ? 'text-green-600 bg-green-100'\n      : 'text-red-600 bg-red-100';\n  };\n\n  const exportSecurityReport = () => {\n    const report = {\n      generatedAt: new Date().toISOString(),\n      timeframe: selectedTimeframe,\n      securityReport,\n      complianceStatus,\n      activeSessions,\n      securityEvents\n    };\n\n    const blob = new Blob([JSON.stringify(report, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `security_report_${new Date().toISOString().split('T')[0]}.json`;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const renderOverviewTab = () => (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      {/* Security Metrics */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n          <Shield className=\"mr-2\" size={24} />\n          Security Metrics\n        </h3>\n\n        {securityReport && (\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {securityReport.summary.totalEvents}\n              </div>\n              <div className=\"text-sm text-blue-700\">Total Events</div>\n            </div>\n            <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {securityReport.summary.activeSessions}\n              </div>\n              <div className=\"text-sm text-green-700\">Active Sessions</div>\n            </div>\n            <div className=\"text-center p-4 bg-yellow-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-yellow-600\">\n                {securityReport.summary.highSeverityEvents}\n              </div>\n              <div className=\"text-sm text-yellow-700\">High Severity</div>\n            </div>\n            <div className=\"text-center p-4 bg-red-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-red-600\">\n                {securityReport.summary.criticalEvents}\n              </div>\n              <div className=\"text-sm text-red-700\">Critical Events</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Compliance Status */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n          <CheckCircle className=\"mr-2\" size={24} />\n          Compliance Status\n        </h3>\n\n        {complianceStatus.details && (\n          <div className=\"space-y-3\">\n            {complianceStatus.details.map((compliance) => {\n              const Icon = getComplianceIcon(compliance.status);\n              return (\n                <div key={compliance.regulation} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                  <div>\n                    <div className=\"font-medium\">{compliance.name}</div>\n                    <div className=\"text-sm text-gray-600\">{compliance.regulation.toUpperCase()}</div>\n                  </div>\n                  <div className={`flex items-center space-x-1 px-2 py-1 rounded-full text-xs ${getComplianceColor(compliance.status)}`}>\n                    <Icon size={14} />\n                    <span className=\"capitalize\">{compliance.status}</span>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n\n      {/* Recent Security Events */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 lg:col-span-2\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n          <Activity className=\"mr-2\" size={24} />\n          Recent Security Events\n        </h3>\n\n        <div className=\"overflow-hidden\">\n          <div className=\"space-y-3\">\n            {securityEvents.slice(0, 5).map((event) => {\n              const SeverityIcon = getSeverityIcon(event.severity);\n              return (\n                <motion.div\n                  key={event.id}\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\"\n                >\n                  <div className=\"flex items-center space-x-3\">\n                    <div className={`p-2 rounded-lg ${getSeverityColor(event.severity)}`}>\n                      <SeverityIcon size={16} />\n                    </div>\n                    <div>\n                      <div className=\"font-medium\">{event.description}</div>\n                      <div className=\"text-sm text-gray-600\">\n                        {new Date(event.timestamp).toLocaleString()} • {event.ip}\n                      </div>\n                    </div>\n                  </div>\n                  <div className={`px-2 py-1 rounded-full text-xs ${getSeverityColor(event.severity)}`}>\n                    {event.severity.toUpperCase()}\n                  </div>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSessionsTab = () => (\n    <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n      <div className=\"p-6 border-b border-gray-200\">\n        <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n          <Users className=\"mr-2\" size={24} />\n          Active Sessions ({activeSessions.length})\n        </h3>\n      </div>\n\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                User\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                IP Address\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Location\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Login Time\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Last Activity\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {activeSessions.map((session) => (\n              <tr key={session.id} className=\"hover:bg-gray-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-sm font-medium\">\n                      {session.username.charAt(0).toUpperCase()}\n                    </div>\n                    <div className=\"ml-3\">\n                      <div className=\"text-sm font-medium text-gray-900\">{session.username}</div>\n                    </div>\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  {session.ip}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  {session.location}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  {new Date(session.loginTime).toLocaleString()}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  {new Date(session.lastActivity).toLocaleString()}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                  <button className=\"text-red-600 hover:text-red-900\">\n                    Terminate\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n\n  const renderEventsTab = () => (\n    <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n      <div className=\"p-6 border-b border-gray-200\">\n        <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n          <Eye className=\"mr-2\" size={24} />\n          Security Events ({securityEvents.length})\n        </h3>\n      </div>\n\n      <div className=\"divide-y divide-gray-200\">\n        {securityEvents.map((event) => {\n          const SeverityIcon = getSeverityIcon(event.severity);\n          return (\n            <div key={event.id} className=\"p-6 hover:bg-gray-50\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex items-start space-x-3\">\n                  <div className={`p-2 rounded-lg ${getSeverityColor(event.severity)}`}>\n                    <SeverityIcon size={20} />\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium text-gray-900\">{event.description}</h4>\n                    <div className=\"text-sm text-gray-600 mt-1\">\n                      Type: {event.type.replace('_', ' ')} • IP: {event.ip}\n                    </div>\n                    <div className=\"text-xs text-gray-500 mt-1\">\n                      {new Date(event.timestamp).toLocaleString()}\n                    </div>\n                  </div>\n                </div>\n                <div className={`px-3 py-1 rounded-full text-xs font-medium ${getSeverityColor(event.severity)}`}>\n                  {event.severity.toUpperCase()}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <RefreshCw className=\"animate-spin\" size={32} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 flex items-center\">\n            <Shield className=\"mr-3 text-blue-600\" size={36} />\n            Security Dashboard\n          </h1>\n          <p className=\"text-gray-600 mt-1\">\n            Monitor security events, compliance status, and system access\n          </p>\n        </div>\n\n        <div className=\"flex items-center space-x-3\">\n          <select\n            value={selectedTimeframe}\n            onChange={(e) => setSelectedTimeframe(e.target.value)}\n            className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"1h\">Last Hour</option>\n            <option value=\"24h\">Last 24 Hours</option>\n            <option value=\"7d\">Last 7 Days</option>\n            <option value=\"30d\">Last 30 Days</option>\n          </select>\n\n          <button\n            onClick={loadSecurityData}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\n          >\n            <RefreshCw size={16} />\n            <span>Refresh</span>\n          </button>\n\n          <button\n            onClick={exportSecurityReport}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            <Download size={16} />\n            <span>Export Report</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {[\n            { id: 'overview', name: 'Overview', icon: Activity },\n            { id: 'sessions', name: 'Active Sessions', icon: Users },\n            { id: 'events', name: 'Security Events', icon: Eye }\n          ].map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{tab.name}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Tab Content */}\n      <AnimatePresence mode=\"wait\">\n        <motion.div\n          key={activeTab}\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0, y: -20 }}\n          transition={{ duration: 0.2 }}\n        >\n          {activeTab === 'overview' && renderOverviewTab()}\n          {activeTab === 'sessions' && renderSessionsTab()}\n          {activeTab === 'events' && renderEventsTab()}\n        </motion.div>\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default SecurityDashboard;\n","/**\n * User Preferences and Workspace Customization Service\n * Manages user settings, preferences, and workspace personalization\n */\n\nclass UserPreferencesService {\n  constructor() {\n    this.preferences = new Map();\n    this.workspaces = new Map();\n    this.themes = new Map();\n    this.layouts = new Map();\n    this.shortcuts = new Map();\n    this.isInitialized = false;\n\n    this.defaultPreferences = {\n      // Appearance\n      theme: 'professional',\n      fontSize: 'medium',\n      density: 'comfortable',\n      colorScheme: 'light',\n      animations: true,\n\n      // Dashboard & Layout\n      defaultView: 'dashboard',\n      sidebarCollapsed: false,\n      gridSize: 'medium',\n      widgetAnimations: true,\n      autoSaveInterval: 30000, // 30 seconds\n\n      // Data & Analysis\n      currency: 'USD',\n      dateFormat: 'MM/DD/YYYY',\n      numberFormat: 'standard',\n      precision: 2,\n      autoRefreshData: true,\n      refreshInterval: 300000, // 5 minutes\n\n      // Notifications\n      enableNotifications: true,\n      emailNotifications: false,\n      soundEffects: true,\n      pushNotifications: true,\n\n      // Analysis & Modeling\n      defaultTimeHorizon: '5Y',\n      riskFreeRate: 0.03,\n      marketRiskPremium: 0.07,\n      defaultDiscountRate: 0.10,\n      confidenceLevel: 0.95,\n\n      // Collaboration\n      shareByDefault: false,\n      allowComments: true,\n      trackChanges: true,\n      notifyOnChanges: true,\n\n      // Performance & Data\n      enableCaching: true,\n      offlineMode: false,\n      dataValidation: true,\n      autoBackup: true,\n\n      // Keyboard & Navigation\n      keyboardShortcuts: true,\n      mouseNavigation: true,\n      touchGestures: true,\n      commandPalette: true\n    };\n\n    this.initializeService();\n  }\n\n  /**\n   * Initialize the preferences service\n   */\n  async initializeService() {\n    try {\n      await this.loadUserPreferences();\n      await this.loadWorkspaceConfigurations();\n      await this.initializeThemes();\n      await this.initializeLayouts();\n      await this.setupAutoSave();\n\n      this.isInitialized = true;\n      console.log('User preferences service initialized');\n    } catch (error) {\n      console.error('Error initializing preferences service:', error);\n    }\n  }\n\n  /**\n   * Load user preferences from storage\n   */\n  async loadUserPreferences() {\n    try {\n      const storedPrefs = localStorage.getItem('financeanalyst_user_preferences');\n      if (storedPrefs) {\n        const parsed = JSON.parse(storedPrefs);\n        this.preferences.set('current', {\n          ...this.defaultPreferences,\n          ...parsed,\n          lastUpdated: new Date().toISOString()\n        });\n      } else {\n        this.preferences.set('current', {\n          ...this.defaultPreferences,\n          createdAt: new Date().toISOString(),\n          lastUpdated: new Date().toISOString()\n        });\n      }\n    } catch (error) {\n      console.error('Error loading user preferences:', error);\n      this.preferences.set('current', this.defaultPreferences);\n    }\n  }\n\n  /**\n   * Load workspace configurations\n   */\n  async loadWorkspaceConfigurations() {\n    try {\n      const storedWorkspaces = localStorage.getItem('financeanalyst_workspaces');\n      if (storedWorkspaces) {\n        const parsed = JSON.parse(storedWorkspaces);\n        Object.entries(parsed).forEach(([id, workspace]) => {\n          this.workspaces.set(id, workspace);\n        });\n      }\n\n      // Ensure default workspace exists\n      if (!this.workspaces.has('default')) {\n        this.createDefaultWorkspace();\n      }\n    } catch (error) {\n      console.error('Error loading workspace configurations:', error);\n      this.createDefaultWorkspace();\n    }\n  }\n\n  /**\n   * Initialize available themes\n   */\n  async initializeThemes() {\n    const themes = {\n      light: {\n        id: 'light',\n        name: 'Light',\n        colors: {\n          primary: '#3b82f6',\n          secondary: '#64748b',\n          accent: '#06b6d4',\n          background: '#ffffff',\n          surface: '#f8fafc',\n          text: '#0f172a',\n          border: '#e2e8f0'\n        },\n        shadows: true,\n        borderRadius: '8px'\n      },\n      dark: {\n        id: 'dark',\n        name: 'Dark',\n        colors: {\n          primary: '#60a5fa',\n          secondary: '#94a3b8',\n          accent: '#22d3ee',\n          background: '#0f172a',\n          surface: '#1e293b',\n          text: '#f1f5f9',\n          border: '#334155'\n        },\n        shadows: false,\n        borderRadius: '8px'\n      },\n      professional: {\n        id: 'professional',\n        name: 'Professional',\n        colors: {\n          primary: '#1e40af',\n          secondary: '#475569',\n          accent: '#0ea5e9',\n          background: '#ffffff',\n          surface: '#f8fafc',\n          text: '#1e293b',\n          border: '#cbd5e1'\n        },\n        shadows: true,\n        borderRadius: '6px'\n      },\n      high_contrast: {\n        id: 'high_contrast',\n        name: 'High Contrast',\n        colors: {\n          primary: '#000000',\n          secondary: '#666666',\n          accent: '#0066cc',\n          background: '#ffffff',\n          surface: '#f5f5f5',\n          text: '#000000',\n          border: '#999999'\n        },\n        shadows: false,\n        borderRadius: '4px'\n      }\n    };\n\n    Object.entries(themes).forEach(([id, theme]) => {\n      this.themes.set(id, theme);\n    });\n  }\n\n  /**\n   * Initialize layout templates\n   */\n  async initializeLayouts() {\n    const layouts = {\n      dashboard: {\n        id: 'dashboard',\n        name: 'Dashboard',\n        grid: { rows: 6, cols: 12 },\n        widgets: [\n          { id: 'market_overview', x: 0, y: 0, w: 6, h: 2 },\n          { id: 'portfolio_summary', x: 6, y: 0, w: 6, h: 2 },\n          { id: 'watchlist', x: 0, y: 2, w: 4, h: 4 },\n          { id: 'news_feed', x: 4, y: 2, w: 4, h: 4 },\n          { id: 'performance_chart', x: 8, y: 2, w: 4, h: 4 }\n        ]\n      },\n      analysis: {\n        id: 'analysis',\n        name: 'Analysis Focused',\n        grid: { rows: 8, cols: 12 },\n        widgets: [\n          { id: 'financial_model', x: 0, y: 0, w: 8, h: 6 },\n          { id: 'assumptions', x: 8, y: 0, w: 4, h: 3 },\n          { id: 'results', x: 8, y: 3, w: 4, h: 3 },\n          { id: 'scenarios', x: 0, y: 6, w: 12, h: 2 }\n        ]\n      },\n      research: {\n        id: 'research',\n        name: 'Research',\n        grid: { rows: 6, cols: 12 },\n        widgets: [\n          { id: 'company_data', x: 0, y: 0, w: 6, h: 3 },\n          { id: 'peer_comparison', x: 6, y: 0, w: 6, h: 3 },\n          { id: 'analyst_notes', x: 0, y: 3, w: 8, h: 3 },\n          { id: 'documents', x: 8, y: 3, w: 4, h: 3 }\n        ]\n      },\n      minimal: {\n        id: 'minimal',\n        name: 'Minimal',\n        grid: { rows: 4, cols: 8 },\n        widgets: [\n          { id: 'key_metrics', x: 0, y: 0, w: 8, h: 2 },\n          { id: 'primary_chart', x: 0, y: 2, w: 8, h: 2 }\n        ]\n      }\n    };\n\n    Object.entries(layouts).forEach(([id, layout]) => {\n      this.layouts.set(id, layout);\n    });\n  }\n\n  /**\n   * Setup auto-save functionality\n   */\n  setupAutoSave() {\n    const prefs = this.getPreferences();\n    const interval = prefs.autoSaveInterval || 30000;\n\n    setInterval(() => {\n      this.saveToStorage();\n    }, interval);\n\n    // Save on browser unload\n    window.addEventListener('beforeunload', () => {\n      this.saveToStorage();\n    });\n  }\n\n  /**\n   * Get current user preferences\n   */\n  getPreferences() {\n    return this.preferences.get('current') || this.defaultPreferences;\n  }\n\n  /**\n   * Update user preferences\n   */\n  updatePreferences(updates) {\n    const current = this.getPreferences();\n    const updated = {\n      ...current,\n      ...updates,\n      lastUpdated: new Date().toISOString()\n    };\n\n    this.preferences.set('current', updated);\n    this.saveToStorage();\n    this.applyPreferences(updated);\n\n    return updated;\n  }\n\n  /**\n   * Reset preferences to default\n   */\n  resetPreferences() {\n    const reset = {\n      ...this.defaultPreferences,\n      createdAt: new Date().toISOString(),\n      lastUpdated: new Date().toISOString()\n    };\n\n    this.preferences.set('current', reset);\n    this.saveToStorage();\n    this.applyPreferences(reset);\n\n    return reset;\n  }\n\n  /**\n   * Create default workspace\n   */\n  createDefaultWorkspace() {\n    const defaultWorkspace = {\n      id: 'default',\n      name: 'Default Workspace',\n      layout: 'dashboard',\n      widgets: this.layouts.get('dashboard')?.widgets || [],\n      pinnedItems: [],\n      quickAccess: [\n        { id: 'private_analysis', name: 'Private Analysis', icon: 'BarChart3' },\n        { id: 'market_data', name: 'Market Data', icon: 'TrendingUp' },\n        { id: 'portfolio', name: 'Portfolio', icon: 'PieChart' },\n        { id: 'reports', name: 'Reports', icon: 'FileText' }\n      ],\n      customizations: {\n        showWelcome: true,\n        compactMode: false,\n        showTips: true\n      },\n      createdAt: new Date().toISOString(),\n      lastAccessed: new Date().toISOString()\n    };\n\n    this.workspaces.set('default', defaultWorkspace);\n  }\n\n  /**\n   * Create new workspace\n   */\n  createWorkspace(config) {\n    const id = config.id || `workspace_${Date.now()}`;\n    const workspace = {\n      id,\n      name: config.name || 'New Workspace',\n      layout: config.layout || 'dashboard',\n      widgets: config.widgets || this.layouts.get(config.layout || 'dashboard')?.widgets || [],\n      pinnedItems: config.pinnedItems || [],\n      quickAccess: config.quickAccess || [],\n      customizations: config.customizations || {},\n      createdAt: new Date().toISOString(),\n      lastAccessed: new Date().toISOString()\n    };\n\n    this.workspaces.set(id, workspace);\n    this.saveToStorage();\n\n    return workspace;\n  }\n\n  /**\n   * Update workspace\n   */\n  updateWorkspace(id, updates) {\n    const workspace = this.workspaces.get(id);\n    if (!workspace) {\n      throw new Error(`Workspace ${id} not found`);\n    }\n\n    const updated = {\n      ...workspace,\n      ...updates,\n      lastAccessed: new Date().toISOString()\n    };\n\n    this.workspaces.set(id, updated);\n    this.saveToStorage();\n\n    return updated;\n  }\n\n  /**\n   * Delete workspace\n   */\n  deleteWorkspace(id) {\n    if (id === 'default') {\n      throw new Error('Cannot delete default workspace');\n    }\n\n    this.workspaces.delete(id);\n    this.saveToStorage();\n  }\n\n  /**\n   * Get workspace by ID\n   */\n  getWorkspace(id) {\n    return this.workspaces.get(id);\n  }\n\n  /**\n   * Get all workspaces\n   */\n  getWorkspaces() {\n    return Array.from(this.workspaces.values());\n  }\n\n  /**\n   * Switch to workspace\n   */\n  switchWorkspace(id) {\n    const workspace = this.workspaces.get(id);\n    if (!workspace) {\n      throw new Error(`Workspace ${id} not found`);\n    }\n\n    // Update last accessed\n    workspace.lastAccessed = new Date().toISOString();\n    this.workspaces.set(id, workspace);\n\n    // Update current workspace preference\n    this.updatePreferences({ currentWorkspace: id });\n\n    return workspace;\n  }\n\n  /**\n   * Get available themes\n   */\n  getThemes() {\n    return Array.from(this.themes.values());\n  }\n\n  /**\n   * Get theme by ID\n   */\n  getTheme(id) {\n    return this.themes.get(id);\n  }\n\n  /**\n   * Get available layouts\n   */\n  getLayouts() {\n    return Array.from(this.layouts.values());\n  }\n\n  /**\n   * Get layout by ID\n   */\n  getLayout(id) {\n    return this.layouts.get(id);\n  }\n\n  /**\n   * Apply preferences to the application\n   */\n  applyPreferences(preferences) {\n    // Apply theme\n    this.applyTheme(preferences.theme);\n\n    // Apply font size\n    this.applyFontSize(preferences.fontSize);\n\n    // Apply animations setting\n    this.applyAnimationSettings(preferences.animations);\n\n    // Apply keyboard shortcuts\n    if (preferences.keyboardShortcuts) {\n      this.enableKeyboardShortcuts();\n    }\n\n    // Trigger preference change event\n    window.dispatchEvent(new CustomEvent('preferencesChanged', {\n      detail: preferences\n    }));\n  }\n\n  /**\n   * Apply theme to document\n   */\n  applyTheme(themeId) {\n    const theme = this.themes.get(themeId);\n    if (!theme) return;\n\n    const root = document.documentElement;\n\n    // Apply CSS custom properties\n    Object.entries(theme.colors).forEach(([key, value]) => {\n      root.style.setProperty(`--color-${key}`, value);\n    });\n\n    // Apply theme class\n    document.body.className = document.body.className.replace(/theme-\\w+/g, '');\n    document.body.classList.add(`theme-${themeId}`);\n  }\n\n  /**\n   * Apply font size setting\n   */\n  applyFontSize(size) {\n    const root = document.documentElement;\n    const sizes = {\n      small: '14px',\n      medium: '16px',\n      large: '18px',\n      extra_large: '20px'\n    };\n\n    root.style.setProperty('--base-font-size', sizes[size] || sizes.medium);\n    document.body.classList.remove('text-sm', 'text-base', 'text-lg', 'text-xl');\n\n    const classList = {\n      small: 'text-sm',\n      medium: 'text-base',\n      large: 'text-lg',\n      extra_large: 'text-xl'\n    };\n\n    document.body.classList.add(classList[size] || 'text-base');\n  }\n\n  /**\n   * Apply animation settings\n   */\n  applyAnimationSettings(enabled) {\n    document.body.classList.toggle('reduce-motion', !enabled);\n\n    if (!enabled) {\n      document.body.style.setProperty('--animation-duration', '0ms');\n      document.body.style.setProperty('--transition-duration', '0ms');\n    } else {\n      document.body.style.removeProperty('--animation-duration');\n      document.body.style.removeProperty('--transition-duration');\n    }\n  }\n\n  /**\n   * Enable keyboard shortcuts\n   */\n  enableKeyboardShortcuts() {\n    // This would integrate with a keyboard shortcut manager\n    console.log('Keyboard shortcuts enabled');\n  }\n\n  /**\n   * Save preferences and workspaces to storage\n   */\n  saveToStorage() {\n    try {\n      // Save preferences\n      const prefs = this.preferences.get('current');\n      if (prefs) {\n        localStorage.setItem('financeanalyst_user_preferences', JSON.stringify(prefs));\n      }\n\n      // Save workspaces\n      const workspacesObj = {};\n      this.workspaces.forEach((workspace, id) => {\n        workspacesObj[id] = workspace;\n      });\n      localStorage.setItem('financeanalyst_workspaces', JSON.stringify(workspacesObj));\n\n    } catch (error) {\n      console.error('Error saving to storage:', error);\n    }\n  }\n\n  /**\n   * Export preferences and workspace settings\n   */\n  exportSettings() {\n    const settings = {\n      preferences: this.preferences.get('current'),\n      workspaces: Array.from(this.workspaces.values()),\n      exportedAt: new Date().toISOString(),\n      version: '1.0'\n    };\n\n    return settings;\n  }\n\n  /**\n   * Import preferences and workspace settings\n   */\n  importSettings(settings) {\n    try {\n      if (settings.preferences) {\n        this.preferences.set('current', {\n          ...this.defaultPreferences,\n          ...settings.preferences,\n          lastUpdated: new Date().toISOString()\n        });\n      }\n\n      if (settings.workspaces) {\n        settings.workspaces.forEach(workspace => {\n          this.workspaces.set(workspace.id, workspace);\n        });\n      }\n\n      this.saveToStorage();\n      this.applyPreferences(this.getPreferences());\n\n      return true;\n    } catch (error) {\n      console.error('Error importing settings:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get preference categories for UI organization\n   */\n  getPreferenceCategories() {\n    return {\n      appearance: {\n        name: 'Appearance',\n        icon: 'Palette',\n        preferences: ['theme', 'fontSize', 'density', 'colorScheme', 'animations']\n      },\n      dashboard: {\n        name: 'Dashboard & Layout',\n        icon: 'Layout',\n        preferences: ['defaultView', 'sidebarCollapsed', 'gridSize', 'widgetAnimations', 'autoSaveInterval']\n      },\n      data: {\n        name: 'Data & Analysis',\n        icon: 'Database',\n        preferences: ['currency', 'dateFormat', 'numberFormat', 'precision', 'autoRefreshData', 'refreshInterval']\n      },\n      notifications: {\n        name: 'Notifications',\n        icon: 'Bell',\n        preferences: ['enableNotifications', 'emailNotifications', 'soundEffects', 'pushNotifications']\n      },\n      modeling: {\n        name: 'Analysis & Modeling',\n        icon: 'Calculator',\n        preferences: ['defaultTimeHorizon', 'riskFreeRate', 'marketRiskPremium', 'defaultDiscountRate', 'confidenceLevel']\n      },\n      collaboration: {\n        name: 'Collaboration',\n        icon: 'Users',\n        preferences: ['shareByDefault', 'allowComments', 'trackChanges', 'notifyOnChanges']\n      },\n      performance: {\n        name: 'Performance & Data',\n        icon: 'Zap',\n        preferences: ['enableCaching', 'offlineMode', 'dataValidation', 'autoBackup']\n      },\n      navigation: {\n        name: 'Keyboard & Navigation',\n        icon: 'Navigation',\n        preferences: ['keyboardShortcuts', 'mouseNavigation', 'touchGestures', 'commandPalette']\n      }\n    };\n  }\n}\n\nexport default new UserPreferencesService();\n","import { motion, AnimatePresence } from 'framer-motion';\nimport {\n  Settings,\n  Palette,\n  Layout,\n  Database,\n  Bell,\n  Calculator,\n  Users,\n  Zap,\n  Navigation,\n  X,\n  RefreshCw,\n  Download,\n  Upload,\n  RotateCcw,\n  Save\n} from 'lucide-react';\nimport React, { useState, useEffect } from 'react';\n\nimport userPreferencesService from '../../services/userPreferencesService';\n\nconst UserPreferences = ({ isOpen, onClose }) => {\n  const [preferences, setPreferences] = useState({});\n  const [activeCategory, setActiveCategory] = useState('appearance');\n  const [hasChanges, setHasChanges] = useState(false);\n  const [categories, setCategories] = useState({});\n  const [themes, setThemes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n\n  useEffect(() => {\n    if (isOpen) {\n      loadPreferences();\n    }\n  }, [isOpen]);\n\n  const loadPreferences = async() => {\n    setIsLoading(true);\n    try {\n      const prefs = userPreferencesService.getPreferences();\n      const cats = userPreferencesService.getPreferenceCategories();\n      const availableThemes = userPreferencesService.getThemes();\n\n      setPreferences(prefs);\n      setCategories(cats);\n      setThemes(availableThemes);\n      setHasChanges(false);\n    } catch (error) {\n      console.error('Error loading preferences:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updatePreference = (key, value) => {\n    const updated = { ...preferences, [key]: value };\n    setPreferences(updated);\n    setHasChanges(true);\n  };\n\n  const savePreferences = async() => {\n    setIsSaving(true);\n    try {\n      await userPreferencesService.updatePreferences(preferences);\n      setHasChanges(false);\n\n      // Show success notification\n      window.dispatchEvent(new CustomEvent('showNotification', {\n        detail: {\n          type: 'success',\n          message: 'Preferences saved successfully',\n          duration: 3000\n        }\n      }));\n    } catch (error) {\n      console.error('Error saving preferences:', error);\n      window.dispatchEvent(new CustomEvent('showNotification', {\n        detail: {\n          type: 'error',\n          message: 'Failed to save preferences',\n          duration: 5000\n        }\n      }));\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const resetPreferences = async() => {\n    if (window.confirm('Reset all preferences to default? This action cannot be undone.')) {\n      try {\n        const reset = await userPreferencesService.resetPreferences();\n        setPreferences(reset);\n        setHasChanges(false);\n\n        window.dispatchEvent(new CustomEvent('showNotification', {\n          detail: {\n            type: 'success',\n            message: 'Preferences reset to default',\n            duration: 3000\n          }\n        }));\n      } catch (error) {\n        console.error('Error resetting preferences:', error);\n      }\n    }\n  };\n\n  const exportSettings = () => {\n    const settings = userPreferencesService.exportSettings();\n    const blob = new Blob([JSON.stringify(settings, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `financeanalyst_settings_${new Date().toISOString().split('T')[0]}.json`;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const importSettings = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const settings = JSON.parse(e.target.result);\n        const success = userPreferencesService.importSettings(settings);\n\n        if (success) {\n          loadPreferences();\n          window.dispatchEvent(new CustomEvent('showNotification', {\n            detail: {\n              type: 'success',\n              message: 'Settings imported successfully',\n              duration: 3000\n            }\n          }));\n        } else {\n          throw new Error('Invalid settings file');\n        }\n      } catch (error) {\n        console.error('Error importing settings:', error);\n        window.dispatchEvent(new CustomEvent('showNotification', {\n          detail: {\n            type: 'error',\n            message: 'Failed to import settings',\n            duration: 5000\n          }\n        }));\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  const getCategoryIcon = (categoryKey) => {\n    const icons = {\n      appearance: Palette,\n      dashboard: Layout,\n      data: Database,\n      notifications: Bell,\n      modeling: Calculator,\n      collaboration: Users,\n      performance: Zap,\n      navigation: Navigation\n    };\n    return icons[categoryKey] || Settings;\n  };\n\n  const renderPreferenceInput = (key, value) => {\n    const inputProps = {\n      className: 'w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent',\n      value: value || '',\n      onChange: (e) => updatePreference(key, e.target.value)\n    };\n\n    switch (key) {\n      case 'theme':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            {themes.map(theme => (\n              <option key={theme.id} value={theme.id}>{theme.name}</option>\n            ))}\n          </select>\n        );\n\n      case 'fontSize':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            <option value=\"small\">Small</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"large\">Large</option>\n            <option value=\"extra_large\">Extra Large</option>\n          </select>\n        );\n\n      case 'density':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            <option value=\"compact\">Compact</option>\n            <option value=\"comfortable\">Comfortable</option>\n            <option value=\"spacious\">Spacious</option>\n          </select>\n        );\n\n      case 'colorScheme':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            <option value=\"light\">Light</option>\n            <option value=\"dark\">Dark</option>\n            <option value=\"auto\">Auto</option>\n          </select>\n        );\n\n      case 'currency':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            <option value=\"USD\">USD - US Dollar</option>\n            <option value=\"EUR\">EUR - Euro</option>\n            <option value=\"GBP\">GBP - British Pound</option>\n            <option value=\"JPY\">JPY - Japanese Yen</option>\n            <option value=\"CAD\">CAD - Canadian Dollar</option>\n          </select>\n        );\n\n      case 'dateFormat':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            <option value=\"MM/DD/YYYY\">MM/DD/YYYY</option>\n            <option value=\"DD/MM/YYYY\">DD/MM/YYYY</option>\n            <option value=\"YYYY-MM-DD\">YYYY-MM-DD</option>\n            <option value=\"MMM DD, YYYY\">MMM DD, YYYY</option>\n          </select>\n        );\n\n      case 'numberFormat':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            <option value=\"standard\">1,234.56</option>\n            <option value=\"european\">1.234,56</option>\n            <option value=\"indian\">1,23,456.78</option>\n            <option value=\"scientific\">1.23E+3</option>\n          </select>\n        );\n\n      case 'defaultTimeHorizon':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            <option value=\"1Y\">1 Year</option>\n            <option value=\"3Y\">3 Years</option>\n            <option value=\"5Y\">5 Years</option>\n            <option value=\"10Y\">10 Years</option>\n          </select>\n        );\n\n      case 'precision':\n      case 'autoSaveInterval':\n      case 'refreshInterval':\n      case 'riskFreeRate':\n      case 'marketRiskPremium':\n      case 'defaultDiscountRate':\n      case 'confidenceLevel':\n        return (\n          <input\n            {...inputProps}\n            type=\"number\"\n            step={key.includes('Rate') || key.includes('Level') ? '0.001' : '1'}\n            min={key.includes('Interval') ? '1000' : '0'}\n            max={key.includes('Level') ? '1' : undefined}\n            onChange={(e) => updatePreference(key, parseFloat(e.target.value) || 0)}\n          />\n        );\n\n      case 'animations':\n      case 'sidebarCollapsed':\n      case 'widgetAnimations':\n      case 'autoRefreshData':\n      case 'enableNotifications':\n      case 'emailNotifications':\n      case 'soundEffects':\n      case 'pushNotifications':\n      case 'shareByDefault':\n      case 'allowComments':\n      case 'trackChanges':\n      case 'notifyOnChanges':\n      case 'enableCaching':\n      case 'offlineMode':\n      case 'dataValidation':\n      case 'autoBackup':\n      case 'keyboardShortcuts':\n      case 'mouseNavigation':\n      case 'touchGestures':\n      case 'commandPalette':\n        return (\n          <input\n            type=\"checkbox\"\n            checked={value || false}\n            onChange={(e) => updatePreference(key, e.target.checked)}\n            className=\"w-5 h-5 text-blue-600 rounded focus:ring-blue-500\"\n          />\n        );\n\n      default:\n        return <input {...inputProps} type=\"text\" />;\n    }\n  };\n\n  const getPreferenceLabel = (key) => {\n    const labels = {\n      theme: 'Theme',\n      fontSize: 'Font Size',\n      density: 'Display Density',\n      colorScheme: 'Color Scheme',\n      animations: 'Enable Animations',\n      defaultView: 'Default View',\n      sidebarCollapsed: 'Collapse Sidebar',\n      gridSize: 'Grid Size',\n      widgetAnimations: 'Widget Animations',\n      autoSaveInterval: 'Auto Save Interval (ms)',\n      currency: 'Default Currency',\n      dateFormat: 'Date Format',\n      numberFormat: 'Number Format',\n      precision: 'Decimal Precision',\n      autoRefreshData: 'Auto Refresh Data',\n      refreshInterval: 'Refresh Interval (ms)',\n      enableNotifications: 'Enable Notifications',\n      emailNotifications: 'Email Notifications',\n      soundEffects: 'Sound Effects',\n      pushNotifications: 'Push Notifications',\n      defaultTimeHorizon: 'Default Time Horizon',\n      riskFreeRate: 'Risk-Free Rate',\n      marketRiskPremium: 'Market Risk Premium',\n      defaultDiscountRate: 'Default Discount Rate',\n      confidenceLevel: 'Confidence Level',\n      shareByDefault: 'Share by Default',\n      allowComments: 'Allow Comments',\n      trackChanges: 'Track Changes',\n      notifyOnChanges: 'Notify on Changes',\n      enableCaching: 'Enable Caching',\n      offlineMode: 'Offline Mode',\n      dataValidation: 'Data Validation',\n      autoBackup: 'Auto Backup',\n      keyboardShortcuts: 'Keyboard Shortcuts',\n      mouseNavigation: 'Mouse Navigation',\n      touchGestures: 'Touch Gestures',\n      commandPalette: 'Command Palette'\n    };\n    return labels[key] || key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n        onClick={onClose}\n      >\n        <motion.div\n          initial={{ scale: 0.9, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          exit={{ scale: 0.9, opacity: 0 }}\n          onClick={(e) => e.stopPropagation()}\n          className=\"bg-white rounded-xl shadow-2xl max-w-6xl max-h-[90vh] w-full mx-4 overflow-hidden\"\n        >\n          {/* Header */}\n          <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n            <div>\n              <h2 className=\"text-2xl font-bold text-gray-900 flex items-center\">\n                <Settings className=\"mr-3\" size={28} />\n                User Preferences\n              </h2>\n              <p className=\"text-gray-600 mt-1\">Customize your workspace and experience</p>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              {hasChanges && (\n                <motion.button\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={savePreferences}\n                  disabled={isSaving}\n                  className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {isSaving ? (\n                    <RefreshCw className=\"animate-spin\" size={16} />\n                  ) : (\n                    <Save size={16} />\n                  )}\n                  <span>Save Changes</span>\n                </motion.button>\n              )}\n              <button\n                onClick={onClose}\n                className=\"p-2 text-gray-500 hover:text-gray-700 rounded-lg hover:bg-gray-100\"\n              >\n                <X size={24} />\n              </button>\n            </div>\n          </div>\n\n          <div className=\"flex max-h-[calc(90vh-88px)]\">\n            {/* Sidebar */}\n            <div className=\"w-64 bg-gray-50 border-r border-gray-200 overflow-y-auto\">\n              <div className=\"p-4 space-y-2\">\n                {Object.entries(categories).map(([key, category]) => {\n                  const Icon = getCategoryIcon(key);\n                  return (\n                    <motion.button\n                      key={key}\n                      whileHover={{ x: 4 }}\n                      onClick={() => setActiveCategory(key)}\n                      className={`w-full flex items-center space-x-3 px-4 py-3 rounded-lg text-left transition-colors ${\n                        activeCategory === key\n                          ? 'bg-blue-100 text-blue-700 border border-blue-200'\n                          : 'text-gray-700 hover:bg-gray-100'\n                      }`}\n                    >\n                      <Icon size={20} />\n                      <span className=\"font-medium\">{category.name}</span>\n                    </motion.button>\n                  );\n                })}\n              </div>\n\n              {/* Import/Export Actions */}\n              <div className=\"border-t border-gray-200 p-4 space-y-2\">\n                <button\n                  onClick={exportSettings}\n                  className=\"w-full flex items-center space-x-2 px-4 py-2 text-gray-700 hover:bg-gray-100 rounded-lg\"\n                >\n                  <Download size={16} />\n                  <span>Export Settings</span>\n                </button>\n                <label className=\"w-full flex items-center space-x-2 px-4 py-2 text-gray-700 hover:bg-gray-100 rounded-lg cursor-pointer\">\n                  <Upload size={16} />\n                  <span>Import Settings</span>\n                  <input\n                    type=\"file\"\n                    accept=\".json\"\n                    onChange={importSettings}\n                    className=\"hidden\"\n                  />\n                </label>\n                <button\n                  onClick={resetPreferences}\n                  className=\"w-full flex items-center space-x-2 px-4 py-2 text-red-600 hover:bg-red-50 rounded-lg\"\n                >\n                  <RotateCcw size={16} />\n                  <span>Reset to Default</span>\n                </button>\n              </div>\n            </div>\n\n            {/* Main Content */}\n            <div className=\"flex-1 overflow-y-auto\">\n              {isLoading ? (\n                <div className=\"flex items-center justify-center h-full\">\n                  <RefreshCw className=\"animate-spin\" size={32} />\n                </div>\n              ) : (\n                <div className=\"p-6\">\n                  {activeCategory && categories[activeCategory] && (\n                    <motion.div\n                      key={activeCategory}\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      className=\"space-y-6\"\n                    >\n                      <div>\n                        <h3 className=\"text-xl font-semibold text-gray-900 flex items-center\">\n                          {React.createElement(getCategoryIcon(activeCategory), {\n                            size: 24,\n                            className: 'mr-2'\n                          })}\n                          {categories[activeCategory].name}\n                        </h3>\n                        <p className=\"text-gray-600 mt-1\">\n                          Configure {categories[activeCategory].name.toLowerCase()} settings\n                        </p>\n                      </div>\n\n                      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                        {categories[activeCategory].preferences.map(prefKey => (\n                          <motion.div\n                            key={prefKey}\n                            initial={{ opacity: 0, y: 10 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            className=\"space-y-2\"\n                          >\n                            <label className=\"block font-medium text-gray-900\">\n                              {getPreferenceLabel(prefKey)}\n                            </label>\n                            {renderPreferenceInput(prefKey, preferences[prefKey])}\n                          </motion.div>\n                        ))}\n                      </div>\n                    </motion.div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Footer */}\n          {hasChanges && (\n            <div className=\"border-t border-gray-200 bg-yellow-50 px-6 py-3\">\n              <div className=\"flex items-center justify-between\">\n                <p className=\"text-sm text-yellow-700\">\n                  You have unsaved changes\n                </p>\n                <div className=\"flex space-x-3\">\n                  <button\n                    onClick={loadPreferences}\n                    className=\"text-sm text-gray-600 hover:text-gray-800\"\n                  >\n                    Discard Changes\n                  </button>\n                  <button\n                    onClick={savePreferences}\n                    disabled={isSaving}\n                    className=\"text-sm bg-blue-600 text-white px-4 py-1 rounded hover:bg-blue-700 disabled:opacity-50\"\n                  >\n                    {isSaving ? 'Saving...' : 'Save Changes'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </motion.div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nexport default UserPreferences;\n","import { Settings as SettingsIcon, User, Shield, Bell, Palette } from 'lucide-react';\nimport React, { useState } from 'react';\n\nimport SecurityDashboard from '../components/Security/SecurityDashboard';\nimport SEOHead from '../components/SEO/SEOHead';\nimport UserPreferences from '../components/Settings/UserPreferences';\nimport { Card } from '../components/ui/Card';\nimport Header from '../components/ui/Header';\n\nconst Settings = () => {\n  const [activeTab, setActiveTab] = useState('preferences');\n\n  const tabs = [\n    { id: 'preferences', label: 'User Preferences', icon: User },\n    { id: 'security', label: 'Security & Access', icon: Shield },\n    { id: 'notifications', label: 'Notifications', icon: Bell },\n    { id: 'appearance', label: 'Appearance', icon: Palette }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-slate-50 dark:bg-slate-900\">\n      <SEOHead\n        title=\"Settings & Preferences | FinanceAnalyst Pro\"\n        description=\"Configure your user preferences, security settings, notifications, and platform customizations for optimal workflow and compliance.\"\n        canonical=\"/settings\"\n        keywords=\"user settings, security preferences, platform configuration, compliance settings, notifications, customization\"\n      />\n\n      <Header />\n\n      <main className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        {/* Page Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center mb-4\">\n            <SettingsIcon className=\"w-8 h-8 text-purple-600 mr-3\" />\n            <h1 className=\"text-3xl font-bold text-slate-900 dark:text-white\">\n              Settings & Preferences\n            </h1>\n          </div>\n          <p className=\"text-slate-600 dark:text-slate-400 max-w-3xl\">\n            Configure your workspace, security settings, and preferences to optimize your financial analysis workflow.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Sidebar Navigation */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"p-0 overflow-hidden\">\n              <nav className=\"space-y-1\">\n                {tabs.map((tab) => {\n                  const Icon = tab.icon;\n                  return (\n                    <button\n                      key={tab.id}\n                      onClick={() => setActiveTab(tab.id)}\n                      className={`w-full flex items-center px-4 py-3 text-sm font-medium transition-colors ${\n                        activeTab === tab.id\n                          ? 'bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300 border-r-2 border-blue-600'\n                          : 'text-slate-600 dark:text-slate-400 hover:bg-slate-50 dark:hover:bg-slate-700 hover:text-slate-900 dark:hover:text-slate-200'\n                      }`}\n                    >\n                      <Icon className=\"w-5 h-5 mr-3\" />\n                      {tab.label}\n                    </button>\n                  );\n                })}\n              </nav>\n            </Card>\n          </div>\n\n          {/* Content Area */}\n          <div className=\"lg:col-span-3\">\n            {activeTab === 'preferences' && (\n              <Card className=\"p-6\">\n                <h2 className=\"text-xl font-semibold text-slate-900 dark:text-white mb-6\">\n                  User Preferences\n                </h2>\n                <UserPreferences />\n              </Card>\n            )}\n\n            {activeTab === 'security' && (\n              <Card className=\"p-6\">\n                <h2 className=\"text-xl font-semibold text-slate-900 dark:text-white mb-6\">\n                  Security & Access Control\n                </h2>\n                <SecurityDashboard />\n              </Card>\n            )}\n\n            {activeTab === 'notifications' && (\n              <Card className=\"p-6\">\n                <h2 className=\"text-xl font-semibold text-slate-900 dark:text-white mb-6\">\n                  Notification Preferences\n                </h2>\n                <div className=\"space-y-4\">\n                  <div className=\"text-slate-600 dark:text-slate-400\">\n                    Configure alerts, email notifications, and system messages.\n                  </div>\n                  {/* Notification settings will be implemented */}\n                  <div className=\"bg-slate-100 dark:bg-slate-700 rounded-lg p-4 text-center text-slate-500 dark:text-slate-400\">\n                    Notification settings coming soon\n                  </div>\n                </div>\n              </Card>\n            )}\n\n            {activeTab === 'appearance' && (\n              <Card className=\"p-6\">\n                <h2 className=\"text-xl font-semibold text-slate-900 dark:text-white mb-6\">\n                  Appearance & Theme\n                </h2>\n                <div className=\"space-y-4\">\n                  <div className=\"text-slate-600 dark:text-slate-400\">\n                    Customize the platform appearance, themes, and layout preferences.\n                  </div>\n                  {/* Appearance settings will be implemented */}\n                  <div className=\"bg-slate-100 dark:bg-slate-700 rounded-lg p-4 text-center text-slate-500 dark:text-slate-400\">\n                    Appearance settings coming soon\n                  </div>\n                </div>\n              </Card>\n            )}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Settings;\n"],"names":["securityService","constructor","this","sessions","Map","auditLog","securityPolicies","complianceRules","threats","accessControls","encryptionKeys","securityEvents","isInitialized","initializeService","setupDefaultPolicies","setupComplianceRules","initializeEncryption","startSecurityMonitoring","error","set","minLength","requireUppercase","requireLowercase","requireNumbers","requireSpecialChars","maxAge","preventReuse","lockoutThreshold","lockoutDuration","maxDuration","idleTimeout","requireReauth","secureCookies","httpOnly","sameSite","requireMFA","logAllAccess","maskSensitiveData","requireApproval","retentionPeriod","rateLimiting","requestsPerMinute","requireAuthentication","validateInput","encryptPayload","logRequests","allowedTypes","maxFileSize","virusScanning","encryptStorage","name","requirements","auditTrail","dataIntegrity","changeManagement","periodicReview","auditFrequency","dataMinimization","consentManagement","rightToErasure","dataPortability","breachNotification","privacyByDesign","recordKeeping","reportingAccuracy","insiderTrading","marketManipulation","clientProtection","communicationMonitoring","tradingSurveillance","riskManagement","customerProtection","localStorage","getItem","masterKey","CryptoJS","lib","WordArray","random","toString","setItem","generateSessionKey","sessionKey","setInterval","checkSecurityThreats","validateSessions","cleanupExpiredData","setupSecurityEventListeners","window","addEventListener","event","logSecurityEvent","detail","authenticateUser","credentials","attempt","timestamp","Date","toISOString","ip","getClientIP","userAgent","navigator","success","validatePassword","username","password","reason","Error","isAccountLocked","requiresMFA","validateMFA","mfaCode","session","createSecureSession","sessionId","id","incrementFailedAttempts","createdAt","lastActivity","permissions","getUserPermissions","isActive","setSecureSessionCookie","validateSession","get","now","policy","terminateSession","encryptData","data","keyType","key","AES","encrypt","JSON","stringify","decryptData","encryptedData","decrypted","decrypt","enc","Utf8","parse","hashData","salt","saltToUse","hash","PBKDF2","keySize","iterations","type","details","severity","getEventSeverity","source","push","alertSecurityTeam","persistAuditLog","detectAnomalousAccess","detectBruteForceAttacks","detectDataExfiltration","detectPrivilegeEscalation","recentEvents","filter","failedLogins","e","length","pattern","count","timeWindow","uniqueIPs","Set","map","size","runComplianceCheck","regulation","results","regulations","Array","from","keys","reg","rule","compliance","status","issues","recommendations","lastChecked","checkAuditTrailCoverage","checkDataRetention","checkAccessControls","report","generateComplianceReport","overallStatus","getOverallComplianceStatus","generateSecurityReport","timeframe","timeframeMs","parseTimeframe","startTime","relevantEvents","period","start","end","duration","summary","totalEvents","criticalEvents","highSeverityEvents","activeSessions","getActiveSessions","threatAnalysis","analyzeThreatLandscape","generateSecurityRecommendations","complianceStatus","_username","code","document","cookie","terminatedAt","terminationReason","login_failed","login_blocked","anomalous_access","data_breach","unauthorized_access","session_hijack","compliance_violation","maxEvents","slice","_period","values","generatedAt","r","every","s","match","parseInt","h","d","w","_events","topThreats","riskLevel","trends","forEach","entry","SecurityDashboard","securityReport","setSecurityReport","useState","setComplianceStatus","setActiveSessions","setSecurityEvents","isLoading","setIsLoading","selectedTimeframe","setSelectedTimeframe","activeTab","setActiveTab","useEffect","loadSecurityData","interval","clearInterval","async","loginTime","location","events","description","getSeverityColor","low","medium","high","critical","getSeverityIcon","CheckCircle","Clock","AlertTriangle","XCircle","jsx","className","children","RefreshCw","jsxs","Shield","value","onChange","target","onClick","blob","Blob","url","URL","createObjectURL","link","createElement","href","download","split","click","revokeObjectURL","Download","icon","Activity","Users","Eye","tab","Icon","AnimatePresence","mode","motion","div","initial","opacity","y","animate","exit","transition","toUpperCase","SeverityIcon","x","toLocaleString","charAt","replace","userPreferencesService","preferences","workspaces","themes","layouts","shortcuts","defaultPreferences","theme","fontSize","density","colorScheme","animations","defaultView","sidebarCollapsed","gridSize","widgetAnimations","autoSaveInterval","currency","dateFormat","numberFormat","precision","autoRefreshData","refreshInterval","enableNotifications","emailNotifications","soundEffects","pushNotifications","defaultTimeHorizon","riskFreeRate","marketRiskPremium","defaultDiscountRate","confidenceLevel","shareByDefault","allowComments","trackChanges","notifyOnChanges","enableCaching","offlineMode","dataValidation","autoBackup","keyboardShortcuts","mouseNavigation","touchGestures","commandPalette","loadUserPreferences","loadWorkspaceConfigurations","initializeThemes","initializeLayouts","setupAutoSave","storedPrefs","parsed","lastUpdated","storedWorkspaces","Object","entries","workspace","has","createDefaultWorkspace","light","colors","primary","secondary","accent","background","surface","text","border","shadows","borderRadius","dark","professional","high_contrast","dashboard","grid","rows","cols","widgets","analysis","research","minimal","layout","getPreferences","saveToStorage","updatePreferences","updates","updated","applyPreferences","resetPreferences","reset","defaultWorkspace","pinnedItems","quickAccess","customizations","showWelcome","compactMode","showTips","lastAccessed","createWorkspace","config","updateWorkspace","deleteWorkspace","delete","getWorkspace","getWorkspaces","switchWorkspace","currentWorkspace","getThemes","getTheme","getLayouts","getLayout","applyTheme","applyFontSize","applyAnimationSettings","enableKeyboardShortcuts","dispatchEvent","CustomEvent","themeId","root","documentElement","style","setProperty","body","classList","add","sizes","small","large","extra_large","remove","enabled","toggle","removeProperty","prefs","workspacesObj","exportSettings","exportedAt","version","importSettings","settings","getPreferenceCategories","appearance","notifications","modeling","collaboration","performance","navigation","UserPreferences","isOpen","onClose","setPreferences","activeCategory","setActiveCategory","hasChanges","setHasChanges","categories","setCategories","setThemes","isSaving","setIsSaving","loadPreferences","cats","availableThemes","updatePreference","savePreferences","message","getCategoryIcon","categoryKey","Palette","Layout","Database","Bell","Calculator","Zap","Navigation","Settings","renderPreferenceInput","inputProps","step","includes","min","max","parseFloat","checked","scale","stopPropagation","button","whileHover","whileTap","disabled","Save","X","category","Upload","accept","file","files","reader","FileReader","onload","result","readAsText","confirm","RotateCcw","React","toLowerCase","prefKey","str","tabs","label","User","SEOHead","title","canonical","keywords","Header","SettingsIcon","Card"],"mappings":"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"}