{"version":3,"mappings":"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","names":["MonitoringDebugPanel","navigate","useNavigate","location","useLocation","logs","setLogs","useState","shouldCrash","setShouldCrash","env","useMemo","VITE_APP_ENV","VITE_ENABLE_ANALYTICS","VITE_ENABLE_ERROR_REPORTING","VITE_PERFORMANCE_MONITORING","VITE_GA_TRACKING_ID","VITE_HOTJAR_ID","VITE_SENTRY_DSN","addLog","useCallback","msg","l","ts","Date","toISOString","slice","triggerPageview","testPath","now","__vitePreload","import","__VITE_PRELOAD__","then","mod","default","trackPageView","catch","navigateAndTrack","newPath","pathname","replace","captureSentry","Error","e","trackError","crashComponent","CrashNow","jsxs","className","children","jsx","String","onClick","length","map","i"],"ignoreList":[],"sources":["../../src/components/MonitoringDebugPanel.jsx"],"sourcesContent":["import { useCallback, useMemo, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nconst isProd = import.meta.env.VITE_APP_ENV === 'production';\n\nexport default function MonitoringDebugPanel() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [logs, setLogs] = useState([]);\n  const [shouldCrash, setShouldCrash] = useState(false);\n\n  const env = useMemo(() => ({\n    VITE_APP_ENV: import.meta.env.VITE_APP_ENV,\n    VITE_ENABLE_ANALYTICS: import.meta.env.VITE_ENABLE_ANALYTICS,\n    VITE_ENABLE_ERROR_REPORTING: import.meta.env.VITE_ENABLE_ERROR_REPORTING,\n    VITE_PERFORMANCE_MONITORING: import.meta.env.VITE_PERFORMANCE_MONITORING,\n    VITE_GA_TRACKING_ID: import.meta.env.VITE_GA_TRACKING_ID,\n    VITE_HOTJAR_ID: import.meta.env.VITE_HOTJAR_ID,\n    VITE_SENTRY_DSN: import.meta.env.VITE_SENTRY_DSN ? 'SET' : 'MISSING'\n  }), []);\n\n  const addLog = useCallback((msg) => {\n    setLogs((l) => [{ ts: new Date().toISOString(), msg }, ...l].slice(0, 50));\n  }, []);\n\n  const triggerPageview = useCallback(() => {\n    const testPath = `/debug-path-${Date.now()}?from=monitoring-panel`;\n    // Dynamically import monitoring to avoid side effects\n    import('../utils/monitoring')\n      .then((mod) => {\n        if (mod?.default?.trackPageView) {\n          mod.default.trackPageView(testPath);\n          addLog(`Called monitoring.trackPageView('${testPath}')`);\n        }\n      })\n      .catch(() => {\n        addLog('Failed to load monitoring service');\n      });\n  }, [addLog]);\n\n  const navigateAndTrack = useCallback(() => {\n    const newPath = `${location.pathname}?pv=${Date.now()}`;\n    navigate(newPath, { replace: false });\n    addLog(`Navigated to '${newPath}' to test SPA pageview`);\n  }, [location.pathname, navigate, addLog]);\n\n  const captureSentry = useCallback(() => {\n    try {\n      throw new Error(`Sentry test error @ ${new Date().toISOString()}`);\n    } catch (e) {\n      // Dynamically import monitoring to avoid side effects\n      import('../utils/monitoring')\n        .then((mod) => {\n          if (mod?.default?.trackError) {\n            mod.default.trackError(e, 'debug_panel_capture');\n            addLog('Sent error via monitoring.trackError(...)');\n          }\n        })\n        .catch(() => {\n          addLog('Failed to load monitoring service for error tracking');\n        });\n    }\n  }, [addLog]);\n\n  const crashComponent = useCallback(() => {\n    // Cause an error during render so ErrorBoundary can catch it\n    addLog('Setting crash flag to render CrashNow component...');\n    setShouldCrash(true);\n  }, [addLog]);\n\n  const CrashNow = () => {\n    throw new Error('ErrorBoundary crash test from MonitoringDebugPanel (render phase)');\n  };\n\n  return (\n    <div className=\"max-w-3xl mx-auto p-6\">\n      {shouldCrash && <CrashNow />}\n      <h1 className=\"text-2xl font-semibold mb-2\">Monitoring Debug Panel</h1>\n      <p className=\"text-sm text-neutral-600 mb-4\">\n        Environment: <span className=\"font-mono\">{env.VITE_APP_ENV}</span>\n      </p>\n\n      {isProd && (\n        <div className=\"p-3 mb-4 rounded border border-yellow-300 bg-yellow-50 text-yellow-900\">\n          This panel is visible in production. Actions are still allowed, but use with caution.\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div className=\"p-4 rounded border bg-white\">\n          <h2 className=\"font-medium mb-2\">Flags & IDs</h2>\n          <ul className=\"text-sm space-y-1\">\n            <li>VITE_ENABLE_ANALYTICS: <b>{String(env.VITE_ENABLE_ANALYTICS)}</b></li>\n            <li>VITE_ENABLE_ERROR_REPORTING: <b>{String(env.VITE_ENABLE_ERROR_REPORTING)}</b></li>\n            <li>VITE_PERFORMANCE_MONITORING: <b>{String(env.VITE_PERFORMANCE_MONITORING)}</b></li>\n            <li>GA_TRACKING_ID: <b>{env.VITE_GA_TRACKING_ID || 'MISSING'}</b></li>\n            <li>HOTJAR_ID: <b>{env.VITE_HOTJAR_ID || 'MISSING'}</b></li>\n            <li>SENTRY_DSN: <b>{env.VITE_SENTRY_DSN}</b></li>\n          </ul>\n        </div>\n\n        <div className=\"p-4 rounded border bg-white\">\n          <h2 className=\"font-medium mb-2\">Actions</h2>\n          <div className=\"flex flex-col gap-2\">\n            <button className=\"px-3 py-2 rounded bg-blue-600 text-white\" onClick={triggerPageview}>\n              Trigger GA/Hotjar pageview (manual)\n            </button>\n            <button className=\"px-3 py-2 rounded bg-indigo-600 text-white\" onClick={navigateAndTrack}>\n              Navigate (SPA) to trigger route-based pageview\n            </button>\n            <button className=\"px-3 py-2 rounded bg-rose-600 text-white\" onClick={captureSentry}>\n              Capture Sentry error (non-crashing)\n            </button>\n            <button className=\"px-3 py-2 rounded bg-red-700 text-white\" onClick={crashComponent}>\n              Crash component to test ErrorBoundary\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mt-6 p-4 rounded border bg-white\">\n        <h2 className=\"font-medium mb-2\">Logs</h2>\n        <div className=\"max-h-64 overflow-auto text-sm font-mono space-y-1\">\n          {logs.length === 0 ? (\n            <div className=\"text-neutral-500\">No logs yet.</div>\n          ) : (\n            logs.map((l, i) => (\n              <div key={i}>\n                [{l.ts}] {l.msg}\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n\n      <div className=\"mt-6 text-sm text-neutral-600\">\n        Tips:\n        <ul className=\"list-disc ml-6 mt-2 space-y-1\">\n          <li>Open DevTools Network tab and filter by &quot;collect&quot; to see GA hits.</li>\n          <li>Look for WebSocket to <code>wss://*.hotjar.com</code> and requests to <code>in.hotjar.com</code>.</li>\n          <li>Confirm Sentry events arrive in your project dashboard.</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],"file":"assets/MonitoringDebugPanel-C6kaBCj4.js"}