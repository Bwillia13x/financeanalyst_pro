{"version":3,"file":"index-CnJRWCxt.js","sources":["../../src/pages/real-time-market-data-center/components/BulkOperationsPanel.jsx","../../src/pages/real-time-market-data-center/components/ConnectionStatus.jsx","../../src/pages/real-time-market-data-center/components/DataSourceToggle.jsx","../../src/pages/real-time-market-data-center/components/MarketDataWidget.jsx","../../src/pages/real-time-market-data-center/components/SymbolSearch.jsx","../../src/pages/real-time-market-data-center/components/WatchlistPanel.jsx","../../src/components/ui/Card.jsx","../../src/components/ui/Badge.jsx","../../src/components/ui/Progress.jsx","../../src/components/ui/Alert.jsx","../../src/pages/real-time-market-data-center/components/ApiStatusPanel.jsx","../../src/services/realTimeDataService.js","../../src/services/apiConfig.js","../../src/services/enhancedApiService.js","../../src/services/dataValidationService.js","../../src/pages/real-time-market-data-center/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\nimport Input from '../../../components/ui/Input';\n\nconst BulkOperationsPanel = ({ selectedSymbols, onBulkExport, onBulkAlert, onBulkHistorical }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [exportFormat, setExportFormat] = useState('csv');\n  const [alertThreshold, setAlertThreshold] = useState('');\n  const [historicalPeriod, setHistoricalPeriod] = useState('1y');\n\n  const handleBulkExport = () => {\n    onBulkExport({\n      symbols: selectedSymbols,\n      format: exportFormat,\n      timestamp: new Date().toISOString()\n    });\n  };\n\n  const handleBulkAlert = () => {\n    if (!alertThreshold) return;\n    onBulkAlert({\n      symbols: selectedSymbols,\n      threshold: parseFloat(alertThreshold),\n      type: 'price_change'\n    });\n    setAlertThreshold('');\n  };\n\n  const handleBulkHistorical = () => {\n    onBulkHistorical({\n      symbols: selectedSymbols,\n      period: historicalPeriod\n    });\n  };\n\n  if (selectedSymbols.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"bg-card border border-border rounded-lg shadow-elevation-1\">\n      {/* Header */}\n      <div\n        className=\"flex items-center justify-between p-4 cursor-pointer\"\n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-8 h-8 bg-primary rounded-lg flex items-center justify-center\">\n            <Icon name=\"Layers\" size={16} color=\"white\" />\n          </div>\n          <div>\n            <h3 className=\"font-semibold text-foreground\">Bulk Operations</h3>\n            <p className=\"text-sm text-muted-foreground\">\n              {selectedSymbols.length} symbol{selectedSymbols.length !== 1 ? 's' : ''} selected\n            </p>\n          </div>\n        </div>\n        <Icon\n          name={isExpanded ? 'ChevronUp' : 'ChevronDown'}\n          size={20}\n          className=\"text-muted-foreground\"\n        />\n      </div>\n\n      {/* Expanded Content */}\n      {isExpanded && (\n        <div className=\"border-t border-border\">\n          {/* Selected Symbols */}\n          <div className=\"p-4 border-b border-border\">\n            <h4 className=\"text-sm font-medium text-foreground mb-2\">Selected Symbols:</h4>\n            <div className=\"flex flex-wrap gap-2\">\n              {selectedSymbols.slice(0, 10).map(symbol => (\n                <span\n                  key={symbol}\n                  className=\"px-2 py-1 bg-muted text-muted-foreground text-xs rounded\"\n                >\n                  {symbol}\n                </span>\n              ))}\n              {selectedSymbols.length > 10 && (\n                <span className=\"px-2 py-1 bg-muted text-muted-foreground text-xs rounded\">\n                  +{selectedSymbols.length - 10} more\n                </span>\n              )}\n            </div>\n          </div>\n\n          {/* Operations */}\n          <div className=\"p-4 space-y-4\">\n            {/* Export Operation */}\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-foreground\">Data Export</h4>\n              <div className=\"flex items-center space-x-2\">\n                <select\n                  value={exportFormat}\n                  onChange={e => setExportFormat(e.target.value)}\n                  className=\"px-3 py-2 border border-border rounded-lg text-sm bg-input text-foreground\"\n                >\n                  <option value=\"csv\">CSV Format</option>\n                  <option value=\"xlsx\">Excel Format</option>\n                  <option value=\"json\">JSON Format</option>\n                  <option value=\"pdf\">PDF Report</option>\n                </select>\n                <Button variant=\"outline\" size=\"sm\" iconName=\"Download\" onClick={handleBulkExport}>\n                  Export Data\n                </Button>\n              </div>\n            </div>\n\n            {/* Alert Setup */}\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-foreground\">Price Alerts</h4>\n              <div className=\"flex items-center space-x-2\">\n                <Input\n                  type=\"number\"\n                  placeholder=\"Threshold %\"\n                  value={alertThreshold}\n                  onChange={e => setAlertThreshold(e.target.value)}\n                  className=\"flex-1\"\n                />\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  iconName=\"Bell\"\n                  onClick={handleBulkAlert}\n                  disabled={!alertThreshold}\n                >\n                  Set Alerts\n                </Button>\n              </div>\n            </div>\n\n            {/* Historical Data */}\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-foreground\">Historical Data</h4>\n              <div className=\"flex items-center space-x-2\">\n                <select\n                  value={historicalPeriod}\n                  onChange={e => setHistoricalPeriod(e.target.value)}\n                  className=\"px-3 py-2 border border-border rounded-lg text-sm bg-input text-foreground\"\n                >\n                  <option value=\"1d\">1 Day</option>\n                  <option value=\"1w\">1 Week</option>\n                  <option value=\"1m\">1 Month</option>\n                  <option value=\"3m\">3 Months</option>\n                  <option value=\"6m\">6 Months</option>\n                  <option value=\"1y\">1 Year</option>\n                  <option value=\"5y\">5 Years</option>\n                </select>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  iconName=\"BarChart3\"\n                  onClick={handleBulkHistorical}\n                >\n                  Get Historical\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* Quick Stats */}\n          <div className=\"p-4 border-t border-border bg-muted/30\">\n            <div className=\"grid grid-cols-3 gap-4 text-center\">\n              <div>\n                <div className=\"text-lg font-semibold text-foreground\">\n                  {selectedSymbols.length}\n                </div>\n                <div className=\"text-xs text-muted-foreground\">Symbols</div>\n              </div>\n              <div>\n                <div className=\"text-lg font-semibold text-foreground\">\n                  {Math.min(selectedSymbols.length * 50, 1000)}\n                </div>\n                <div className=\"text-xs text-muted-foreground\">Data Points</div>\n              </div>\n              <div>\n                <div className=\"text-lg font-semibold text-foreground\">\n                  ~{Math.ceil(selectedSymbols.length / 10)}s\n                </div>\n                <div className=\"text-xs text-muted-foreground\">Est. Time</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BulkOperationsPanel;\n","\nimport Icon from '../../../components/AppIcon';\n\nconst ConnectionStatus = ({ connectionHealth, lastUpdate }) => {\n  const getStatusColor = status => {\n    switch (status) {\n      case 'excellent':\n        return 'text-success';\n      case 'good':\n        return 'text-primary';\n      case 'warning':\n        return 'text-warning';\n      case 'error':\n        return 'text-error';\n      default:\n        return 'text-muted-foreground';\n    }\n  };\n\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'excellent':\n        return 'Wifi';\n      case 'good':\n        return 'Wifi';\n      case 'warning':\n        return 'WifiOff';\n      case 'error':\n        return 'AlertTriangle';\n      default:\n        return 'Wifi';\n    }\n  };\n\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <div className=\"flex items-center space-x-2\">\n        <Icon\n          name={getStatusIcon(connectionHealth.overall)}\n          size={16}\n          className={getStatusColor(connectionHealth.overall)}\n        />\n        <span className=\"text-sm font-medium text-foreground\">\n          Connection: {connectionHealth.overall}\n        </span>\n      </div>\n\n      <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n        <Icon name=\"Clock\" size={14} />\n        <span>Last update: {lastUpdate}</span>\n      </div>\n\n      <div className=\"flex items-center space-x-1\">\n        {Object.entries(connectionHealth.sources).map(([source, status]) => (\n          <div\n            key={source}\n            className={`w-3 h-3 rounded-full ${\n              status === 'connected'\n                ? 'bg-success'\n                : status === 'warning'\n                  ? 'bg-warning'\n                  : 'bg-error'\n            }`}\n            title={`${source}: ${status}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectionStatus;\n","\nconst DataSourceToggle = ({ dataSources, onToggle }) => {\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <span className=\"text-sm font-medium text-foreground\">Data Sources:</span>\n      <div className=\"flex items-center space-x-2\">\n        {dataSources.map(source => (\n          <button\n            key={source.id}\n            onClick={() => onToggle(source.id)}\n            className={`\n              flex items-center space-x-2 px-3 py-2 rounded-lg text-sm font-medium transition-smooth\n              ${\n                source.enabled\n                  ? 'bg-primary text-primary-foreground'\n                  : 'bg-muted text-muted-foreground hover:bg-muted/80'\n              }\n            `}\n          >\n            <div\n              className={`w-2 h-2 rounded-full ${\n                source.status === 'connected'\n                  ? 'bg-success'\n                  : source.status === 'warning'\n                    ? 'bg-warning'\n                    : 'bg-error'\n              }`}\n            />\n            <span>{source.name}</span>\n            <span className=\"text-xs opacity-75\">{source.latency}ms</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DataSourceToggle;\n","\nimport Icon from '../../../components/AppIcon';\n\nconst MarketDataWidget = ({ widget, onResize, onRemove }) => {\n  const getChangeColor = change => {\n    if (change > 0) return 'text-success';\n    if (change < 0) return 'text-error';\n    return 'text-muted-foreground';\n  };\n\n  const getChangeIcon = change => {\n    if (change > 0) return 'TrendingUp';\n    if (change < 0) return 'TrendingDown';\n    return 'Minus';\n  };\n\n  const formatValue = (value, type) => {\n    switch (type) {\n      case 'currency':\n        return `$${value.toLocaleString('en-US', { minimumFractionDigits: 2 })}`;\n      case 'percentage':\n        return `${value.toFixed(2)}%`;\n      case 'number':\n        return value.toLocaleString('en-US', { minimumFractionDigits: 2 });\n      default:\n        return value;\n    }\n  };\n\n  const getFreshnessColor = timestamp => {\n    const now = new Date();\n    const updateTime = new Date(timestamp);\n    const diffSeconds = (now - updateTime) / 1000;\n\n    if (diffSeconds < 5) return 'bg-success';\n    if (diffSeconds < 30) return 'bg-warning';\n    return 'bg-error';\n  };\n\n  return (\n    <div className=\"bg-card border border-border rounded-lg p-4 shadow-elevation-1 hover:shadow-elevation-2 transition-smooth\">\n      {/* Widget Header */}\n      <div className=\"flex items-center justify-between mb-3\">\n        <div className=\"flex items-center space-x-2\">\n          <h3 className=\"font-semibold text-foreground\">{widget.symbol}</h3>\n          <span className=\"text-sm text-muted-foreground\">{widget.name}</span>\n          <div\n            className={`w-2 h-2 rounded-full ${getFreshnessColor(widget.lastUpdate)}`}\n            title={`Last updated: ${new Date(widget.lastUpdate).toLocaleTimeString()}`}\n          />\n        </div>\n        <div className=\"flex items-center space-x-1\">\n          <button\n            onClick={() => onResize(widget.id)}\n            className=\"p-1 text-muted-foreground hover:text-foreground transition-smooth\"\n            title=\"Resize widget\"\n          >\n            <Icon name=\"Maximize2\" size={14} />\n          </button>\n          <button\n            onClick={() => onRemove(widget.id)}\n            className=\"p-1 text-muted-foreground hover:text-error transition-smooth\"\n            title=\"Remove widget\"\n          >\n            <Icon name=\"X\" size={14} />\n          </button>\n        </div>\n      </div>\n\n      {/* Current Value */}\n      <div className=\"mb-3\">\n        <div className=\"text-2xl font-bold text-foreground\">\n          {formatValue(widget.currentValue, widget.valueType)}\n        </div>\n        <div className={`flex items-center space-x-1 text-sm ${getChangeColor(widget.change)}`}>\n          <Icon name={getChangeIcon(widget.change)} size={14} />\n          <span>{formatValue(Math.abs(widget.change), widget.valueType)}</span>\n          <span>\n            ({widget.changePercent > 0 ? '+' : ''}\n            {widget.changePercent.toFixed(2)}%)\n          </span>\n        </div>\n      </div>\n\n      {/* Sparkline Chart */}\n      <div className=\"mb-3\">\n        <div className=\"h-16 bg-muted rounded flex items-end space-x-1 p-2\">\n          {widget.sparklineData.map((point, index) => (\n            <div\n              key={index}\n              className={`flex-1 rounded-sm ${\n                point > widget.sparklineData[0] ? 'bg-success' : 'bg-error'\n              }`}\n              style={{\n                height: `${(point / Math.max(...widget.sparklineData)) * 100}%`,\n                minHeight: '2px'\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Additional Metrics */}\n      <div className=\"grid grid-cols-2 gap-2 text-xs\">\n        <div>\n          <span className=\"text-muted-foreground\">High:</span>\n          <span className=\"ml-1 font-medium text-foreground\">\n            {formatValue(widget.dayHigh, widget.valueType)}\n          </span>\n        </div>\n        <div>\n          <span className=\"text-muted-foreground\">Low:</span>\n          <span className=\"ml-1 font-medium text-foreground\">\n            {formatValue(widget.dayLow, widget.valueType)}\n          </span>\n        </div>\n        <div>\n          <span className=\"text-muted-foreground\">Volume:</span>\n          <span className=\"ml-1 font-medium text-foreground\">\n            {widget.volume ? widget.volume.toLocaleString() : 'N/A'}\n          </span>\n        </div>\n        <div>\n          <span className=\"text-muted-foreground\">Source:</span>\n          <span className=\"ml-1 font-medium text-foreground\">{widget.source}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MarketDataWidget;\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Input from '../../../components/ui/Input';\n\nconst SymbolSearch = ({ onSymbolSelect, watchlist, onAddToWatchlist }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const searchRef = useRef(null);\n\n  // Mock symbol data\n  const symbolDatabase = [\n    { symbol: 'AAPL', name: 'Apple Inc.', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'MSFT', name: 'Microsoft Corporation', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'GOOGL', name: 'Alphabet Inc.', exchange: 'NASDAQ', sector: 'Technology' },\n    {\n      symbol: 'AMZN',\n      name: 'Amazon.com Inc.',\n      exchange: 'NASDAQ',\n      sector: 'Consumer Discretionary'\n    },\n    { symbol: 'TSLA', name: 'Tesla Inc.', exchange: 'NASDAQ', sector: 'Consumer Discretionary' },\n    { symbol: 'META', name: 'Meta Platforms Inc.', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'NVDA', name: 'NVIDIA Corporation', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'JPM', name: 'JPMorgan Chase & Co.', exchange: 'NYSE', sector: 'Financial Services' },\n    { symbol: 'JNJ', name: 'Johnson & Johnson', exchange: 'NYSE', sector: 'Healthcare' },\n    { symbol: 'V', name: 'Visa Inc.', exchange: 'NYSE', sector: 'Financial Services' }\n  ];\n\n  useEffect(() => {\n    if (searchTerm.length > 0) {\n      const filtered = symbolDatabase\n        .filter(\n          item =>\n            item.symbol.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            item.name.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n        .slice(0, 8);\n      setSuggestions(filtered);\n      setIsOpen(true);\n      setSelectedIndex(-1);\n    } else {\n      setSuggestions([]);\n      setIsOpen(false);\n    }\n  }, [searchTerm]);\n\n  const handleKeyDown = e => {\n    if (!isOpen) return;\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setSelectedIndex(prev => (prev < suggestions.length - 1 ? prev + 1 : prev));\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        setSelectedIndex(prev => (prev > 0 ? prev - 1 : -1));\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (selectedIndex >= 0) {\n          handleSymbolSelect(suggestions[selectedIndex]);\n        }\n        break;\n      case 'Escape':\n        setIsOpen(false);\n        setSelectedIndex(-1);\n        break;\n    }\n  };\n\n  const handleSymbolSelect = symbol => {\n    onSymbolSelect(symbol);\n    setSearchTerm('');\n    setIsOpen(false);\n    setSelectedIndex(-1);\n  };\n\n  const isInWatchlist = symbol => {\n    return watchlist.some(item => item.symbol === symbol);\n  };\n\n  return (\n    <div className=\"relative\" ref={searchRef}>\n      <div className=\"relative\">\n        <Input\n          type=\"text\"\n          placeholder=\"Search symbols (e.g., AAPL, Apple)...\"\n          value={searchTerm}\n          onChange={e => setSearchTerm(e.target.value)}\n          onKeyDown={handleKeyDown}\n          className=\"pl-10 pr-4\"\n        />\n        <Icon\n          name=\"Search\"\n          size={18}\n          className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\"\n        />\n      </div>\n\n      {/* Search Suggestions */}\n      {isOpen && suggestions.length > 0 && (\n        <div className=\"absolute top-full left-0 right-0 mt-1 bg-popover border border-border rounded-lg shadow-elevation-2 z-50 max-h-64 overflow-y-auto\">\n          {suggestions.map((item, index) => (\n            <div\n              key={item.symbol}\n              className={`\n                flex items-center justify-between p-3 cursor-pointer transition-smooth\n                ${index === selectedIndex ? 'bg-muted' : 'hover:bg-muted'}\n              `}\n              onClick={() => handleSymbolSelect(item)}\n            >\n              <div className=\"flex-1\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"font-semibold text-foreground\">{item.symbol}</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded text-muted-foreground\">\n                    {item.exchange}\n                  </span>\n                </div>\n                <div className=\"text-sm text-muted-foreground\">{item.name}</div>\n                <div className=\"text-xs text-muted-foreground\">{item.sector}</div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                {!isInWatchlist(item.symbol) && (\n                  <button\n                    onClick={e => {\n                      e.stopPropagation();\n                      onAddToWatchlist(item);\n                    }}\n                    className=\"p-1 text-muted-foreground hover:text-primary transition-smooth\"\n                    title=\"Add to watchlist\"\n                  >\n                    <Icon name=\"Star\" size={16} />\n                  </button>\n                )}\n                <Icon name=\"Plus\" size={16} className=\"text-muted-foreground\" />\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* No Results */}\n      {isOpen && searchTerm.length > 0 && suggestions.length === 0 && (\n        <div className=\"absolute top-full left-0 right-0 mt-1 bg-popover border border-border rounded-lg shadow-elevation-2 z-50 p-4 text-center\">\n          <div className=\"text-muted-foreground\">\n            <Icon name=\"Search\" size={24} className=\"mx-auto mb-2\" />\n            <p>No symbols found for \"{searchTerm}\"</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SymbolSearch;\n","import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst WatchlistPanel = ({ watchlist, onRemoveFromWatchlist, onSelectSymbol }) => {\n  const [sortBy, setSortBy] = useState('symbol');\n  const [sortOrder, setSortOrder] = useState('asc');\n\n  const sortedWatchlist = [...watchlist].sort((a, b) => {\n    let aValue = a[sortBy];\n    let bValue = b[sortBy];\n\n    if (typeof aValue === 'string') {\n      aValue = aValue.toLowerCase();\n      bValue = bValue.toLowerCase();\n    }\n\n    if (sortOrder === 'asc') {\n      return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n    } else {\n      return aValue > bValue ? -1 : aValue < bValue ? 1 : 0;\n    }\n  });\n\n  const handleSort = field => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('asc');\n    }\n  };\n\n  const getChangeColor = change => {\n    if (change > 0) return 'text-success';\n    if (change < 0) return 'text-error';\n    return 'text-muted-foreground';\n  };\n\n  const formatValue = (value, type) => {\n    switch (type) {\n      case 'currency':\n        return `$${value.toLocaleString('en-US', { minimumFractionDigits: 2 })}`;\n      case 'percentage':\n        return `${value.toFixed(2)}%`;\n      default:\n        return value;\n    }\n  };\n\n  return (\n    <div className=\"bg-card border border-border rounded-lg shadow-elevation-1\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-border\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"font-semibold text-foreground\">Watchlist</h3>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-muted-foreground\">{watchlist.length} symbols</span>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              iconName=\"MoreVertical\"\n              aria-label=\"Watchlist options\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Sort Controls */}\n      <div className=\"p-3 border-b border-border bg-muted/30\">\n        <div className=\"flex items-center space-x-2 text-xs\">\n          <span className=\"text-muted-foreground\">Sort by:</span>\n          {['symbol', 'name', 'price', 'change'].map(field => (\n            <button\n              key={field}\n              onClick={() => handleSort(field)}\n              className={`\n                flex items-center space-x-1 px-2 py-1 rounded transition-smooth\n                ${\n                  sortBy === field\n                    ? 'bg-primary text-primary-foreground'\n                    : 'text-muted-foreground hover:text-foreground'\n                }\n              `}\n            >\n              <span className=\"capitalize\">{field}</span>\n              {sortBy === field && (\n                <Icon name={sortOrder === 'asc' ? 'ChevronUp' : 'ChevronDown'} size={12} />\n              )}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Watchlist Items */}\n      <div className=\"max-h-96 overflow-y-auto\">\n        {sortedWatchlist.length === 0 ? (\n          <div className=\"p-8 text-center\">\n            <Icon name=\"Star\" size={32} className=\"mx-auto mb-3 text-muted-foreground\" />\n            <p className=\"text-muted-foreground\">No symbols in watchlist</p>\n            <p className=\"text-sm text-muted-foreground mt-1\">\n              Search and add symbols to track them here\n            </p>\n          </div>\n        ) : (\n          sortedWatchlist.map(item => (\n            <div\n              key={item.symbol}\n              className=\"flex items-center justify-between p-3 border-b border-border last:border-b-0 hover:bg-muted/50 cursor-pointer transition-smooth\"\n              onClick={() => onSelectSymbol(item)}\n            >\n              <div className=\"flex-1\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"font-semibold text-foreground\">{item.symbol}</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded text-muted-foreground\">\n                    {item.exchange}\n                  </span>\n                </div>\n                <div className=\"text-sm text-muted-foreground truncate\">{item.name}</div>\n              </div>\n\n              <div className=\"text-right mr-3\">\n                <div className=\"font-semibold text-foreground\">\n                  {formatValue(item.price || 150.25, 'currency')}\n                </div>\n                <div className={`text-sm ${getChangeColor(item.change || 2.15)}`}>\n                  {item.change > 0 ? '+' : ''}\n                  {formatValue(Math.abs(item.change || 2.15), 'currency')}(\n                  {item.changePercent > 0 ? '+' : ''}\n                  {(item.changePercent || 1.45).toFixed(2)}%)\n                </div>\n              </div>\n\n              <button\n                onClick={e => {\n                  e.stopPropagation();\n                  onRemoveFromWatchlist(item.symbol);\n                }}\n                className=\"p-1 text-muted-foreground hover:text-error transition-smooth\"\n                title=\"Remove from watchlist\"\n              >\n                <Icon name=\"X\" size={16} />\n              </button>\n            </div>\n          ))\n        )}\n      </div>\n\n      {/* Footer Actions */}\n      {watchlist.length > 0 && (\n        <div className=\"p-3 border-t border-border bg-muted/30\">\n          <div className=\"flex items-center justify-between\">\n            <Button variant=\"ghost\" size=\"sm\" iconName=\"Download\">\n              Export\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\" iconName=\"Bell\">\n              Set Alerts\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WatchlistPanel;\n","import React from \"react\";\nimport { cn } from \"../../utils/cn\";\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"rounded-lg border bg-card text-card-foreground shadow-sm\", className)}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...props} />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef(({ className, ...props }, ref) => (\n  <h3 ref={ref} className={cn(\"text-2xl font-semibold leading-none tracking-tight\", className)} {...props} />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p ref={ref} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center p-6 pt-0\", className)} {...props} />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };\n","import React from \"react\";\nimport { cn } from \"../../utils/cn\";\n\n/**\n * Minimal Badge component used only for tests / non-critical UI.\n * Provides a semantic <span> element with utility classes similar to shadcn/ui.\n */\nconst Badge = React.forwardRef(\n  (\n    {\n      className = \"inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium bg-muted text-foreground\",\n      variant = \"default\", // 'default' | 'outline'\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const variantClass =\n      variant === \"outline\"\n        ? \"border border-input bg-transparent\"\n        : \"bg-primary text-primary-foreground\";\n\n    return (\n      <span ref={ref} className={cn(className, variantClass)} {...props}>\n        {children}\n      </span>\n    );\n  }\n);\nBadge.displayName = \"Badge\";\n\nexport { Badge };\nexport default Badge;\n","import React from \"react\";\nimport { cn } from \"../../utils/cn\";\n\n/**\n * Simple progress bar component.\n * Accepts `value` (0-100) and optional className.\n */\nconst Progress = React.forwardRef(({ value = 0, className = \"h-1 bg-muted\", ...props }, ref) => {\n  const clamped = Math.min(100, Math.max(0, value));\n  return (\n    <div ref={ref} className={cn(\"w-full rounded bg-muted/50\", className)} {...props}>\n      <div\n        className=\"h-full rounded bg-primary transition-all\"\n        style={{ width: `${clamped}%` }}\n      />\n    </div>\n  );\n});\n\nProgress.displayName = \"Progress\";\n\nexport { Progress };\nexport default Progress;\n","import React from \"react\";\nimport { cn } from \"../../utils/cn\";\n\n/**\n * Minimal alert component group with shadcn-like API used only in a few internal pages.\n * Allows import { Alert, AlertDescription } from \"components/ui/Alert\".\n */\nconst Alert = React.forwardRef(({ className = \"relative w-full rounded-lg border p-4\", ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    {...props}\n    className={cn(\"bg-card text-card-foreground\", className)}\n  />\n));\nAlert.displayName = \"Alert\";\n\nconst AlertDescription = React.forwardRef(({ className = \"text-sm [&_p]:leading-relaxed\", ...props }, ref) => (\n  <div ref={ref} className={cn(className)} {...props} />\n));\nAlertDescription.displayName = \"AlertDescription\";\n\nexport { Alert, AlertDescription };\nexport default Alert;\n","import React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../components/ui/Card';\nimport { Badge } from '../../../components/ui/Badge';\nimport { Progress } from '../../../components/ui/Progress';\nimport { Alert, AlertDescription } from '../../../components/ui/Alert';\nimport { CheckCircle, XCircle, AlertTriangle, Key, Wifi } from 'lucide-react';\n\nconst ApiStatusPanel = ({ \n  apiHealthStatus = {}, \n  realDataEnabled = false, \n  dataSources = [],\n  dataQuality = {} \n}) => {\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'healthy':\n      case 'connected':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 'error':\n      case 'disconnected':\n        return <XCircle className=\"h-4 w-4 text-red-500\" />;\n      case 'warning':\n        return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\n      default:\n        return <AlertTriangle className=\"h-4 w-4 text-gray-400\" />;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'healthy':\n      case 'connected':\n        return 'bg-green-100 text-green-800';\n      case 'error':\n      case 'disconnected':\n        return 'bg-red-100 text-red-800';\n      case 'warning':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const connectedSources = dataSources.filter(source => source.status === 'connected').length;\n  const totalSources = dataSources.length;\n  const connectionPercentage = totalSources > 0 ? (connectedSources / totalSources) * 100 : 0;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Wifi className=\"h-5 w-5\" />\n          API Status & Data Quality\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Overall Status */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            {getStatusIcon(realDataEnabled ? 'connected' : 'disconnected')}\n            <span className=\"font-medium\">\n              Real Data: {realDataEnabled ? 'Enabled' : 'Disabled'}\n            </span>\n          </div>\n          <Badge className={getStatusColor(realDataEnabled ? 'connected' : 'disconnected')}>\n            {realDataEnabled ? 'Live' : 'Demo Mode'}\n          </Badge>\n        </div>\n\n        {/* Connection Health */}\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center justify-between text-sm\">\n            <span>Connection Health</span>\n            <span>{connectedSources}/{totalSources} sources</span>\n          </div>\n          <Progress value={connectionPercentage} className=\"h-2\" />\n        </div>\n\n        {/* Data Sources Status */}\n        <div className=\"space-y-2\">\n          <h4 className=\"text-sm font-medium\">Data Sources</h4>\n          <div className=\"space-y-2\">\n            {dataSources.map((source) => (\n              <div key={source.id} className=\"flex items-center justify-between text-sm\">\n                <div className=\"flex items-center gap-2\">\n                  {getStatusIcon(source.status)}\n                  <span>{source.name}</span>\n                  {source.requiresKey && (\n                    <Key className=\"h-3 w-3 text-gray-400\" title=\"Requires API Key\" />\n                  )}\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Badge \n                    variant=\"outline\" \n                    className={`text-xs ${getStatusColor(source.status)}`}\n                  >\n                    {source.status}\n                  </Badge>\n                  {source.status === 'connected' && (\n                    <span className=\"text-xs text-gray-500\">{source.latency}ms</span>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* API Health Details */}\n        {Object.keys(apiHealthStatus).length > 0 && (\n          <div className=\"space-y-2\">\n            <h4 className=\"text-sm font-medium\">API Health Details</h4>\n            <div className=\"space-y-1 text-xs\">\n              {Object.entries(apiHealthStatus).map(([source, health]) => (\n                <div key={source} className=\"flex items-center justify-between\">\n                  <span className=\"capitalize\">{source.toLowerCase().replace('_', ' ')}</span>\n                  <div className=\"flex items-center gap-2\">\n                    <span>Success: {(health.successRate * 100).toFixed(1)}%</span>\n                    <span>Avg: {health.avgResponseTime.toFixed(0)}ms</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Data Quality Metrics */}\n        {Object.keys(dataQuality).length > 0 && (\n          <div className=\"space-y-2\">\n            <h4 className=\"text-sm font-medium\">Data Quality</h4>\n            <div className=\"space-y-1\">\n              {Object.entries(dataQuality).map(([symbol, quality]) => (\n                <div key={symbol} className=\"flex items-center justify-between text-sm\">\n                  <span>{symbol}</span>\n                  <div className=\"flex items-center gap-2\">\n                    <Progress value={quality} className=\"h-1 w-16\" />\n                    <span className=\"text-xs\">{quality}%</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Alerts */}\n        {!realDataEnabled && (\n          <Alert>\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription className=\"text-sm\">\n              Running in demo mode. Add API keys to enable real-time data.\n              <br />\n              <span className=\"text-xs text-gray-600\">\n                Set VITE_ALPHA_VANTAGE_API_KEY or VITE_FMP_API_KEY in your .env file\n              </span>\n            </AlertDescription>\n          </Alert>\n        )}\n\n        {realDataEnabled && connectedSources < totalSources && (\n          <Alert>\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription className=\"text-sm\">\n              Some data sources are unavailable. Check your API keys and network connection.\n            </AlertDescription>\n          </Alert>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ApiStatusPanel;\n","import { dataFetchingService } from './dataFetching.js';\nimport { apiLogger } from '../utils/apiLogger.js';\n\n/**\n * Real-time data service for live market data feeds\n * Handles WebSocket connections, polling, and data streaming\n */\nclass RealTimeDataService {\n  constructor() {\n    this.subscribers = new Map();\n    this.activeStreams = new Map();\n    this.pollingIntervals = new Map();\n    this.connectionStatus = new Map();\n    this.lastUpdateTimes = new Map();\n    \n    // Configuration for different data types\n    this.updateIntervals = {\n      marketData: 5000,      // 5 seconds for market data\n      quotes: 1000,          // 1 second for real-time quotes\n      news: 30000,           // 30 seconds for news\n      fundamentals: 300000   // 5 minutes for fundamental data\n    };\n    \n    this.maxRetries = 3;\n    this.retryDelay = 2000;\n  }\n\n  /**\n   * Subscribe to real-time data for a symbol\n   * @param {string} symbol - Stock symbol\n   * @param {string} dataType - Type of data (marketData, quotes, news)\n   * @param {Function} callback - Callback function for data updates\n   * @returns {string} Subscription ID\n   */\n  subscribe(symbol, dataType, callback) {\n    const subscriptionId = `${symbol}_${dataType}_${Date.now()}`;\n    const key = `${symbol}_${dataType}`;\n    \n    if (!this.subscribers.has(key)) {\n      this.subscribers.set(key, new Map());\n    }\n    \n    this.subscribers.get(key).set(subscriptionId, callback);\n    \n    // Start streaming if this is the first subscriber for this symbol/dataType\n    if (this.subscribers.get(key).size === 1) {\n      this.startStream(symbol, dataType);\n    }\n    \n    apiLogger.log('INFO', `Subscribed to ${dataType} for ${symbol}`, {\n      subscriptionId,\n      totalSubscribers: this.subscribers.get(key).size\n    });\n    \n    return subscriptionId;\n  }\n\n  /**\n   * Unsubscribe from real-time data\n   * @param {string} subscriptionId - Subscription ID to remove\n   */\n  unsubscribe(subscriptionId) {\n    for (const [key, subscribers] of this.subscribers.entries()) {\n      if (subscribers.has(subscriptionId)) {\n        subscribers.delete(subscriptionId);\n        \n        // Stop streaming if no more subscribers\n        if (subscribers.size === 0) {\n          const [symbol, dataType] = key.split('_');\n          this.stopStream(symbol, dataType);\n          this.subscribers.delete(key); // Remove the key if no subscribers are left\n        }\n        \n        apiLogger.log('INFO', `Unsubscribed from ${key}`, {\n          subscriptionId,\n          remainingSubscribers: subscribers.size\n        });\n        break;\n      }\n    }\n  }\n\n  /**\n   * Start real-time data stream for a symbol and data type\n   * @param {string} symbol - Stock symbol\n   * @param {string} dataType - Type of data\n   */\n  async startStream(symbol, dataType) {\n    const key = `${symbol}_${dataType}`;\n    \n    if (this.activeStreams.has(key)) {\n      return; // Already streaming\n    }\n    \n    this.activeStreams.set(key, true);\n    this.connectionStatus.set(key, 'connecting');\n    \n    try {\n      // Try WebSocket connection first (if available)\n      if (this.supportsWebSocket(dataType)) {\n        await this.startWebSocketStream(symbol, dataType);\n      } else {\n        // Fallback to polling\n        await this.startPollingStream(symbol, dataType);\n      }\n      \n      this.connectionStatus.set(key, 'connected');\n      apiLogger.log('INFO', `Started real-time stream for ${symbol} ${dataType}`);\n      \n    } catch (error) {\n      this.connectionStatus.set(key, 'error');\n      apiLogger.log('ERROR', `Failed to start stream for ${symbol} ${dataType}`, { error: error.message });\n      \n      // Fallback to polling if WebSocket fails\n      if (this.supportsWebSocket(dataType)) {\n        await this.startPollingStream(symbol, dataType);\n      }\n    }\n  }\n\n  /**\n   * Stop real-time data stream\n   * @param {string} symbol - Stock symbol\n   * @param {string} dataType - Type of data\n   */\n  stopStream(symbol, dataType) {\n    const key = `${symbol}_${dataType}`;\n    \n    // Clear polling interval\n    if (this.pollingIntervals.has(key)) {\n      clearInterval(this.pollingIntervals.get(key));\n      this.pollingIntervals.delete(key);\n    }\n    \n    // Close WebSocket if exists\n    if (this.activeStreams.has(key)) {\n      this.activeStreams.delete(key);\n    }\n    \n    this.connectionStatus.set(key, 'disconnected');\n    apiLogger.log('INFO', `Stopped real-time stream for ${symbol} ${dataType}`);\n  }\n\n  /**\n   * Start WebSocket stream (placeholder for future WebSocket implementation)\n   * @param {string} symbol - Stock symbol\n   * @param {string} dataType - Type of data\n   */\n  async startWebSocketStream(symbol, dataType) {\n    // TODO: Implement WebSocket connections for real-time data\n    // This would connect to services like:\n    // - Alpha Vantage WebSocket API\n    // - IEX Cloud WebSocket\n    // - Polygon.io WebSocket\n    \n    throw new Error('WebSocket streaming not yet implemented');\n  }\n\n  /**\n   * Start polling-based stream\n   * @param {string} symbol - Stock symbol\n   * @param {string} dataType - Type of data\n   */\n  async startPollingStream(symbol, dataType) {\n    const key = `${symbol}_${dataType}`;\n    const interval = this.updateIntervals[dataType] || 10000;\n    \n    // Initial fetch\n    await this.fetchAndBroadcast(symbol, dataType);\n    \n    // Set up polling interval\n    const intervalId = setInterval(async () => {\n      try {\n        await this.fetchAndBroadcast(symbol, dataType);\n      } catch (error) {\n        apiLogger.log('ERROR', `Polling error for ${symbol} ${dataType}`, { error: error.message });\n      }\n    }, interval);\n    \n    this.pollingIntervals.set(key, intervalId);\n  }\n\n  /**\n   * Fetch data and broadcast to subscribers\n   * @param {string} symbol - Stock symbol\n   * @param {string} dataType - Type of data\n   */\n  async fetchAndBroadcast(symbol, dataType) {\n    const key = `${symbol}_${dataType}`;\n    \n    try {\n      let data;\n      \n      switch (dataType) {\n        case 'marketData':\n          data = await dataFetchingService.fetchMarketData(symbol);\n          break;\n        case 'quotes':\n          data = await dataFetchingService.fetchCompanyProfile(symbol);\n          break;\n        case 'fundamentals':\n          data = await dataFetchingService.fetchFinancialStatements(symbol, 'income-statement');\n          break;\n        default:\n          throw new Error(`Unknown data type: ${dataType}`);\n      }\n      \n      // Add metadata\n      const enrichedData = {\n        ...data,\n        symbol,\n        dataType,\n        timestamp: new Date().toISOString(),\n        source: 'realTimeDataService'\n      };\n      \n      // Broadcast to all subscribers\n      const subscribers = this.subscribers.get(key);\n      if (subscribers) {\n        subscribers.forEach(callback => {\n          try {\n            callback(enrichedData);\n          } catch (error) {\n            apiLogger.log('ERROR', `Subscriber callback error for ${key}`, { error: error.message });\n          }\n        });\n      }\n      \n      this.lastUpdateTimes.set(key, new Date());\n      \n    } catch (error) {\n      apiLogger.log('ERROR', `Failed to fetch data for ${symbol} ${dataType}`, { error: error.message });\n      throw error;\n    }\n  }\n\n  /**\n   * Check if WebSocket is supported for data type\n   * @param {string} dataType - Type of data\n   * @returns {boolean}\n   */\n  supportsWebSocket(dataType) {\n    // Currently no WebSocket implementation\n    // Future: return true for supported data types\n    return false;\n  }\n\n  /**\n   * Get connection status for all active streams\n   * @returns {Object} Connection status map\n   */\n  getConnectionStatus() {\n    const status = {};\n    for (const [key, connectionStatus] of this.connectionStatus.entries()) {\n      const [symbol, dataType] = key.split('_');\n      if (!status[symbol]) {\n        status[symbol] = {};\n      }\n      status[symbol][dataType] = {\n        status: connectionStatus,\n        lastUpdate: this.lastUpdateTimes.get(key),\n        subscriberCount: this.subscribers.get(key)?.size || 0\n      };\n    }\n    return status;\n  }\n\n  /**\n   * Get all active subscriptions\n   * @returns {Array} List of active subscriptions\n   */\n  getActiveSubscriptions() {\n    const subscriptions = [];\n    for (const [key, subscribers] of this.subscribers.entries()) {\n      const [symbol, dataType] = key.split('_');\n      subscriptions.push({\n        symbol,\n        dataType,\n        subscriberCount: subscribers.size,\n        status: this.connectionStatus.get(key) || 'unknown',\n        lastUpdate: this.lastUpdateTimes.get(key)\n      });\n    }\n    return subscriptions;\n  }\n\n  /**\n   * Cleanup all streams and subscriptions\n   */\n  cleanup() {\n    // Clear all intervals\n    for (const intervalId of this.pollingIntervals.values()) {\n      clearInterval(intervalId);\n    }\n    \n    // Clear all data structures\n    this.subscribers.clear();\n    this.activeStreams.clear();\n    this.pollingIntervals.clear();\n    this.connectionStatus.clear();\n    this.lastUpdateTimes.clear();\n    \n    apiLogger.log('INFO', 'Real-time data service cleaned up');\n  }\n}\n\n// Export singleton instance\nexport const realTimeDataService = new RealTimeDataService();\nexport default RealTimeDataService;\n","// API configuration and environment setup for data fetching services\n\nexport const API_CONFIG = {\n  // Alpha Vantage (Real-time market data, technical indicators)\n  ALPHA_VANTAGE: {\n    baseURL: 'https://www.alphavantage.co/query',\n    apiKey: import.meta.env.VITE_ALPHA_VANTAGE_API_KEY || 'demo', // Fixed for Vite\n    rateLimit: {\n      requests: 5,\n      period: 60000 // 5 requests per minute for free tier\n    },\n    endpoints: {\n      quote: 'GLOBAL_QUOTE',\n      dailyAdjusted: 'TIME_SERIES_DAILY_ADJUSTED',\n      company: 'OVERVIEW',\n      earnings: 'EARNINGS',\n      fundamentals: 'INCOME_STATEMENT'\n    }\n  },\n\n  // Financial Modeling Prep (Comprehensive financial data)\n  FMP: {\n    baseURL: 'https://financialmodelingprep.com/api/v3',\n    apiKey: import.meta.env.VITE_FMP_API_KEY || 'demo', // Fixed for Vite\n    rateLimit: {\n      requests: 250,\n      period: 86400000 // 250 requests per day for free tier\n    },\n    endpoints: {\n      profile: '/profile/',\n      incomeStatement: '/income-statement/',\n      balanceSheet: '/balance-sheet-statement/',\n      cashFlow: '/cash-flow-statement/',\n      ratios: '/ratios/',\n      peers: '/stock_peers',\n      dcf: '/discounted-cash-flow/',\n      enterprise: '/enterprise-values/'\n    }\n  },\n\n  // SEC EDGAR (Regulatory filings)\n  SEC_EDGAR: {\n    baseURL: 'https://data.sec.gov',\n    headers: {\n      'User-Agent': 'FinanceAnalyst-Pro contact@financeanalyst.com'\n    },\n    rateLimit: {\n      requests: 10,\n      period: 1000 // 10 requests per second\n    },\n    endpoints: {\n      submissions: '/submissions/CIK',\n      filings: '/Archives/edgar/data/'\n    }\n  },\n\n  // Yahoo Finance (Real-time quotes and market data)\n  YAHOO_FINANCE: {\n    baseURL: 'https://query1.finance.yahoo.com/v8/finance/chart',\n    fallbackURL: 'https://query2.finance.yahoo.com/v8/finance/chart',\n    rateLimit: {\n      requests: 100,\n      period: 60000 // Conservative limit\n    }\n  },\n\n  // Quandl/NASDAQ Data Link (Economic and financial datasets)\n  QUANDL: {\n    baseURL: 'https://data.nasdaq.com/api/v3',\n    apiKey: import.meta.env.VITE_QUANDL_API_KEY || 'demo', // Fixed for Vite\n    rateLimit: {\n      requests: 50,\n      period: 86400000 // 50 requests per day for free tier\n    }\n  },\n\n  // Federal Reserve Economic Data (FRED)\n  FRED: {\n    baseURL: 'https://api.stlouisfed.org/fred',\n    apiKey: import.meta.env.VITE_FRED_API_KEY || 'demo', // Fixed for Vite\n    rateLimit: {\n      requests: 120,\n      period: 60000 // 120 requests per minute\n    }\n  }\n};\n\n// Data source priority configuration\nexport const DATA_SOURCE_PRIORITY = {\n  marketData: ['YAHOO_FINANCE', 'ALPHA_VANTAGE'],\n  financialStatements: ['FMP', 'ALPHA_VANTAGE'],\n  companyProfile: ['FMP', 'ALPHA_VANTAGE'],\n  secFilings: ['SEC_EDGAR'],\n  economicData: ['FRED', 'QUANDL'],\n  peers: ['FMP']\n};\n\n// Cache configuration\nexport const CACHE_CONFIG = {\n  marketData: {\n    ttl: 15 * 60 * 1000, // 15 minutes\n    maxSize: 1000\n  },\n  financialStatements: {\n    ttl: 6 * 60 * 60 * 1000, // 6 hours\n    maxSize: 500\n  },\n  companyProfile: {\n    ttl: 24 * 60 * 60 * 1000, // 24 hours\n    maxSize: 200\n  },\n  secFilings: {\n    ttl: 12 * 60 * 60 * 1000, // 12 hours\n    maxSize: 100\n  },\n  peers: {\n    ttl: 4 * 60 * 60 * 1000, // 4 hours\n    maxSize: 100\n  }\n};\n\n// Error handling configuration\nexport const ERROR_CONFIG = {\n  retries: {\n    max: 3,\n    delay: 1000, // Initial delay in ms\n    factor: 2 // Exponential backoff factor\n  },\n  timeouts: {\n    default: 10000, // 10 seconds\n    sec: 15000, // 15 seconds for SEC filings\n    bulk: 30000 // 30 seconds for bulk operations\n  }\n};\n\n// Validation patterns\nexport const VALIDATION_PATTERNS = {\n  ticker: /^[A-Z]{1,5}$/,\n  cusip: /^[0-9]{8}[0-9A-Z]$/,\n  cik: /^[0-9]{1,10}$/,\n  email: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n};\n\n// API response status codes\nexport const API_STATUS = {\n  SUCCESS: 200,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  RATE_LIMITED: 429,\n  SERVER_ERROR: 500,\n  SERVICE_UNAVAILABLE: 503\n};\n\n// Default financial assumptions\nexport const FINANCIAL_DEFAULTS = {\n  dcf: {\n    projectionYears: 5,\n    terminalGrowthRate: 0.025, // 2.5%\n    riskFreeRate: 0.045, // 4.5%\n    marketPremium: 0.065, // 6.5%\n    taxRate: 0.21 // 21%\n  },\n  lbo: {\n    holdingPeriod: 5,\n    debtMultiple: 5,\n    managementFeeRate: 0.02, // 2%\n    carriedInterestRate: 0.2, // 20%\n    exitMultiple: null // Will use peer average\n  },\n  comparable: {\n    maxPeers: 10,\n    minMarketCap: 100000000, // $100M\n    sectorMatch: true\n  }\n};\n\n// Environment-specific configurations\nexport const getEnvironmentConfig = () => {\n  const env = import.meta.env.MODE || 'development'; // Fixed for Vite\n\n  const configs = {\n    development: {\n      debug: true,\n      logLevel: 'verbose',\n      cacheEnabled: true,\n      rateLimitingEnabled: false // Disable for development\n    },\n    production: {\n      debug: false,\n      logLevel: 'error',\n      cacheEnabled: true,\n      rateLimitingEnabled: true\n    },\n    test: {\n      debug: false,\n      logLevel: 'silent',\n      cacheEnabled: false,\n      rateLimitingEnabled: false\n    }\n  };\n\n  return configs[env] || configs.development;\n};\n\n// Helper function to get API key for a service\nexport const getApiKey = service => {\n  const keyMap = {\n    ALPHA_VANTAGE: import.meta.env.VITE_ALPHA_VANTAGE_API_KEY, // Fixed for Vite\n    FMP: import.meta.env.VITE_FMP_API_KEY, // Fixed for Vite\n    QUANDL: import.meta.env.VITE_QUANDL_API_KEY, // Fixed for Vite\n    FRED: import.meta.env.VITE_FRED_API_KEY // Fixed for Vite\n  };\n\n  return keyMap[service] || 'demo';\n};\n\n// Helper function to build request headers\nexport const buildHeaders = (service, customHeaders = {}) => {\n  const baseHeaders = {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  };\n\n  const serviceHeaders = {\n    SEC_EDGAR: {\n      'User-Agent': API_CONFIG.SEC_EDGAR.headers['User-Agent']\n    }\n  };\n\n  return {\n    ...baseHeaders,\n    ...serviceHeaders[service],\n    ...customHeaders\n  };\n};\n\nexport default API_CONFIG;\n","import { API_CONFIG, DATA_SOURCE_PRIORITY } from './apiConfig.js';\nimport { apiLogger } from '../utils/apiLogger.js';\nimport { dataFetchingService } from './dataFetching.js';\n\nclass RateLimiter {\n  constructor(requestsPerInterval, interval) {\n    this.requestsPerInterval = requestsPerInterval;\n    this.interval = interval;\n    this.requestTimestamps = [];\n  }\n\n  async acquire() {\n    const now = Date.now();\n\n    this.requestTimestamps = this.requestTimestamps.filter(\n      (timestamp) => now - timestamp < this.interval\n    );\n\n    if (this.requestTimestamps.length >= this.requestsPerInterval) {\n      const timeToWait = this.interval - (now - this.requestTimestamps[0]);\n      await new Promise(resolve => setTimeout(resolve, timeToWait));\n      return this.acquire();\n    }\n\n    this.requestTimestamps.push(now);\n  }\n}\n\n/**\n * Enhanced API service with intelligent data source selection and fallbacks\n * Provides real data integration with multiple providers\n */\nclass EnhancedApiService {\n  constructor() {\n    this.rateLimiters = new Map();\n    this.sourceHealth = new Map();\n    this.lastRequests = new Map();\n    this.apiKeys = this.loadApiKeys();\n    this.cache = new Map();\n    this.rateLimitInfo = { remaining: null, reset: null };\n    \n    // Initialize source health tracking\n    this.initializeSourceHealth();\n    this.rateLimiters.set('default', new RateLimiter(5, 1000));\n  }\n\n  /**\n   * Load and validate API keys from environment\n   */\n  loadApiKeys() {\n    const keys = {\n      ALPHA_VANTAGE: import.meta.env.VITE_ALPHA_VANTAGE_API_KEY,\n      FMP: import.meta.env.VITE_FMP_API_KEY,\n      QUANDL: import.meta.env.VITE_QUANDL_API_KEY,\n      FRED: import.meta.env.VITE_FRED_API_KEY\n    };\n\n    // Log available keys (without exposing actual values)\n    const availableKeys = Object.entries(keys)\n      .filter(([_, value]) => value && value !== 'demo')\n      .map(([key, _]) => key);\n    \n    apiLogger.log('INFO', 'API keys loaded', { \n      availableKeys,\n      totalKeys: availableKeys.length \n    });\n\n    return keys;\n  }\n\n  /**\n   * Initialize health tracking for all data sources\n   */\n  initializeSourceHealth() {\n    const sources = ['ALPHA_VANTAGE', 'FMP', 'YAHOO_FINANCE', 'SEC_EDGAR', 'QUANDL', 'FRED'];\n    \n    sources.forEach(source => {\n      this.sourceHealth.set(source, {\n        status: 'unknown',\n        successRate: 1.0,\n        avgResponseTime: 0,\n        lastError: null,\n        requestCount: 0,\n        errorCount: 0,\n        lastHealthCheck: null\n      });\n    });\n  }\n\n  /**\n   * Check if we have valid API key for a source\n   * @param {string} source - Data source name\n   * @returns {boolean}\n   */\n  hasValidApiKey(source) {\n    const key = this.apiKeys[source];\n    return key && key !== 'demo' && key.length > 5;\n  }\n\n  /**\n   * Get the best available data source for a data type\n   * @param {string} dataType - Type of data needed\n   * @returns {string} Best available source\n   */\n  getBestSource(dataType) {\n    const priorityList = DATA_SOURCE_PRIORITY[dataType] || [];\n    \n    for (const source of priorityList) {\n      const health = this.sourceHealth.get(source);\n      \n      // Check if source is healthy and has valid API key (if required)\n      if (health && health.status !== 'error') {\n        if (this.requiresApiKey(source)) {\n          if (this.hasValidApiKey(source)) {\n            return source;\n          }\n        } else {\n          return source;\n        }\n      }\n    }\n    \n    // Fallback to first available source\n    return priorityList[0] || 'YAHOO_FINANCE';\n  }\n\n  /**\n   * Check if source requires API key\n   * @param {string} source - Data source name\n   * @returns {boolean}\n   */\n  requiresApiKey(source) {\n    return ['ALPHA_VANTAGE', 'FMP', 'QUANDL', 'FRED'].includes(source);\n  }\n\n  /**\n   * Fetch real-time market data with intelligent source selection\n   * @param {string} symbol - Stock symbol\n   * @param {Object} options - Additional options\n   * @returns {Promise<Object>} Market data\n   */\n  async fetchRealTimeMarketData(symbol, options = {}) {\n    const source = this.getBestSource('marketData');\n    \n    try {\n      let data;\n      \n      switch (source) {\n        case 'YAHOO_FINANCE':\n          data = await this.fetchFromYahooFinance(symbol, options);\n          break;\n        case 'ALPHA_VANTAGE':\n          data = await this.fetchFromAlphaVantage(symbol, 'GLOBAL_QUOTE', options);\n          break;\n        default:\n          throw new Error(`Unsupported source for market data: ${source}`);\n      }\n      \n      this.updateSourceHealth(source, true, Date.now());\n      return this.normalizeMarketData(data, source);\n      \n    } catch (error) {\n      this.updateSourceHealth(source, false, Date.now(), error);\n      \n      // Try fallback source\n      const fallbackSources = DATA_SOURCE_PRIORITY.marketData.filter(s => s !== source);\n      if (fallbackSources.length > 0) {\n        apiLogger.log('WARN', `Primary source ${source} failed, trying fallback`, { error: error.message });\n        return this.fetchRealTimeMarketData(symbol, { ...options, excludeSource: source });\n      }\n      \n      throw error;\n    }\n  }\n\n  /**\n   * Fetch from Yahoo Finance API\n   * @param {string} symbol - Stock symbol\n   * @param {Object} options - Request options\n   * @returns {Promise<Object>} Raw data from Yahoo Finance\n   */\n  async fetchFromYahooFinance(symbol, options = {}) {\n    const url = `/v8/finance/chart/${symbol}`;\n    \n    const params = {\n      range: options.range || '1d',\n      interval: options.interval || '1m',\n      includePrePost: true,\n      events: 'div,splits'\n    };\n\n    const fullUrl = new URL(url, 'http://localhost:3000');\n    fullUrl.search = new URLSearchParams(params).toString();\n\n    const response = await fetch(fullUrl.pathname + fullUrl.search, {\n      signal: AbortSignal.timeout(10000),\n      headers: {\n        'User-Agent': 'FinanceAnalyst-Pro/1.0'\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Yahoo Finance API request failed with status ${response.status}`);\n    }\n\n    const responseData = await response.json();\n\n    if (!responseData?.chart?.result?.[0]) {\n      throw new Error(`No data found for symbol: ${symbol}`);\n    }\n\n    return responseData.chart.result[0];\n  }\n\n  /**\n   * Fetch from Alpha Vantage API\n   * @param {string} symbol - Stock symbol\n   * @param {string} function_name - Alpha Vantage function\n   * @param {Object} options - Request options\n   * @returns {Promise<Object>} Raw data from Alpha Vantage\n   */\n  async fetchFromAlphaVantage(symbol, function_name, options = {}) {\n    if (!this.hasValidApiKey('ALPHA_VANTAGE')) {\n      throw new Error('Alpha Vantage API key not available');\n    }\n\n    const config = API_CONFIG.ALPHA_VANTAGE;\n    \n    const params = {\n      function: function_name,\n      symbol,\n      apikey: this.apiKeys.ALPHA_VANTAGE,\n      ...options.params\n    };\n\n    const fullUrl = new URL(config.baseURL);\n    fullUrl.search = new URLSearchParams(params).toString();\n\n    const response = await fetch(fullUrl, {\n      signal: AbortSignal.timeout(15000)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Alpha Vantage API request failed with status ${response.status}`);\n    }\n\n    const responseData = await response.json();\n\n    // Check for API errors\n    if (responseData['Error Message']) {\n      throw new Error(`Alpha Vantage error: ${responseData['Error Message']}`);\n    }\n\n    if (responseData['Note']) {\n      throw new Error(`Alpha Vantage rate limit: ${responseData['Note']}`);\n    }\n\n    return responseData;\n  }\n\n  /**\n   * Fetch comprehensive financial data\n   * @param {string} symbol - Stock symbol\n   * @returns {Promise<Object>} Comprehensive financial data\n   */\n  async fetchComprehensiveData(symbol) {\n    const results = {};\n    const errors = {};\n\n    // Fetch multiple data types in parallel\n    const dataTypes = [\n      { key: 'marketData', method: 'fetchRealTimeMarketData' },\n      { key: 'profile', method: 'fetchCompanyProfile' },\n      { key: 'financials', method: 'fetchFinancialStatements' },\n      { key: 'peers', method: 'fetchPeerComparison' }\n    ];\n\n    const promises = dataTypes.map(async ({ key, method }) => {\n      try {\n        if (method === 'fetchFinancialStatements') {\n          results[key] = await dataFetchingService[method](symbol, 'income-statement');\n        } else if (method === 'fetchPeerComparison') {\n          results[key] = await dataFetchingService[method](symbol);\n        } else {\n          results[key] = await this[method](symbol);\n        }\n      } catch (error) {\n        errors[key] = error.message;\n        apiLogger.log('ERROR', `Failed to fetch ${key} for ${symbol}`, { error: error.message });\n      }\n    });\n\n    await Promise.allSettled(promises);\n\n    return {\n      symbol,\n      timestamp: new Date().toISOString(),\n      data: results,\n      errors: Object.keys(errors).length > 0 ? errors : null,\n      sources: this.getSourcesUsed(results)\n    };\n  }\n\n  /**\n   * Normalize market data from different sources\n   * @param {Object} rawData - Raw data from API\n   * @param {string} source - Data source\n   * @returns {Object} Normalized market data\n   */\n  normalizeMarketData(rawData, source) {\n    switch (source) {\n      case 'YAHOO_FINANCE':\n        return this.normalizeYahooData(rawData);\n      case 'ALPHA_VANTAGE':\n        return this.normalizeAlphaVantageData(rawData);\n      default:\n        return rawData;\n    }\n  }\n\n  /**\n   * Normalize Yahoo Finance data\n   * @param {Object} data - Raw Yahoo Finance data\n   * @returns {Object} Normalized data\n   */\n  normalizeYahooData(data) {\n    const meta = data.meta;\n    const quote = data.indicators?.quote?.[0];\n    const latest = quote ? {\n      open: quote.open[quote.open.length - 1],\n      high: quote.high[quote.high.length - 1],\n      low: quote.low[quote.low.length - 1],\n      close: quote.close[quote.close.length - 1],\n      volume: quote.volume[quote.volume.length - 1]\n    } : {};\n\n    return {\n      symbol: meta.symbol,\n      currentPrice: meta.regularMarketPrice || latest.close,\n      previousClose: meta.previousClose,\n      change: meta.regularMarketPrice - meta.previousClose,\n      changePercent: ((meta.regularMarketPrice - meta.previousClose) / meta.previousClose) * 100,\n      dayHigh: meta.regularMarketDayHigh || latest.high,\n      dayLow: meta.regularMarketDayLow || latest.low,\n      volume: meta.regularMarketVolume || latest.volume,\n      marketCap: meta.marketCap,\n      currency: meta.currency,\n      exchangeName: meta.exchangeName,\n      timestamp: new Date(meta.regularMarketTime * 1000).toISOString(),\n      source: 'YAHOO_FINANCE'\n    };\n  }\n\n  /**\n   * Normalize Alpha Vantage data\n   * @param {Object} data - Raw Alpha Vantage data\n   * @returns {Object} Normalized data\n   */\n  normalizeAlphaVantageData(data) {\n    const globalQuote = data['Global Quote'];\n    if (!globalQuote) {\n      throw new Error('Invalid Alpha Vantage response format');\n    }\n\n    return {\n      symbol: globalQuote['01. symbol'],\n      currentPrice: parseFloat(globalQuote['05. price']),\n      previousClose: parseFloat(globalQuote['08. previous close']),\n      change: parseFloat(globalQuote['09. change']),\n      changePercent: parseFloat(globalQuote['10. change percent'].replace('%', '')),\n      dayHigh: parseFloat(globalQuote['03. high']),\n      dayLow: parseFloat(globalQuote['04. low']),\n      volume: parseInt(globalQuote['06. volume']),\n      timestamp: globalQuote['07. latest trading day'],\n      source: 'ALPHA_VANTAGE'\n    };\n  }\n\n  /**\n   * Update source health metrics\n   * @param {string} source - Data source\n   * @param {boolean} success - Whether request was successful\n   * @param {number} responseTime - Response time in ms\n   * @param {Error} error - Error object if failed\n   */\n  updateSourceHealth(source, success, responseTime, error = null) {\n    const health = this.sourceHealth.get(source);\n    if (!health) return;\n\n    health.requestCount++;\n    if (!success) {\n      health.errorCount++;\n      health.lastError = error?.message || 'Unknown error';\n      health.status = 'error';\n    } else {\n      health.status = 'healthy';\n      health.lastError = null;\n    }\n\n    health.successRate = (health.requestCount - health.errorCount) / health.requestCount;\n    health.avgResponseTime = (health.avgResponseTime + responseTime) / 2;\n    health.lastHealthCheck = new Date().toISOString();\n\n    this.sourceHealth.set(source, health);\n  }\n\n  /**\n   * Get health status for all sources\n   * @returns {Object} Health status map\n   */\n  getSourceHealthStatus() {\n    const status = {};\n    for (const [source, health] of this.sourceHealth.entries()) {\n      status[source] = {\n        ...health,\n        hasValidApiKey: this.hasValidApiKey(source),\n        requiresApiKey: this.requiresApiKey(source)\n      };\n    }\n    return status;\n  }\n\n  /**\n   * Get sources used in a data fetch result\n   * @param {Object} results - Fetch results\n   * @returns {Array} List of sources used\n   */\n  getSourcesUsed(results) {\n    const sources = new Set();\n    Object.values(results).forEach(data => {\n      if (data?.source) {\n        sources.add(data.source);\n      }\n    });\n    return Array.from(sources);\n  }\n\n  // Additional API methods expected by tests\n\n  /**\n   * Configuration properties\n   */\n  baseUrl = 'https://api.example.com';\n  defaultHeaders = {};\n  timeout = 10000;\n  authToken = null;\n  cacheTTL = 300000; // 5 minutes\n  requestInterceptors = [];\n  responseInterceptors = [];\n  metrics = {\n    totalRequests: 0,\n    successfulRequests: 0,\n    failedRequests: 0,\n    avgResponseTime: 0\n  };\n\n  /**\n   * Make a generic API request\n   * @param {string} url - Request URL\n   * @param {Object} options - Request options\n   * @returns {Promise<Object>} Response data\n   */\n  async request(url, options = {}) {\n    const startTime = Date.now();\n    this.metrics.totalRequests++;\n\n    const limiter = this.rateLimiters.get('default');\n    await limiter.acquire();\n\n    const fullUrl = url.startsWith('http') ? url : `${this.baseUrl}${url}`;\n\n    const cacheKey = fullUrl;\n    if (this.cache.has(cacheKey)) {\n      const cached = this.cache.get(cacheKey);\n      if (Date.now() - cached.timestamp < this.cacheTTL) {\n        this.metrics.successfulRequests++;\n        return cached.data;\n      }\n    }\n\n    try {\n      let config = {\n        method: 'GET',\n        headers: { ...this.defaultHeaders },\n        ...options,\n      };\n\n      if (this.authToken) {\n        config.headers.Authorization = `Bearer ${this.authToken}`;\n      }\n\n      for (const interceptor of this.requestInterceptors) {\n        config = await interceptor(config);\n      }\n      \n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), this.timeout);\n      config.signal = controller.signal;\n\n      const response = await fetch(fullUrl, config);\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorData = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, body: ${errorData}`);\n      }\n\n      this.rateLimitInfo.remaining = parseInt(response.headers.get('X-RateLimit-Remaining'), 10);\n      this.rateLimitInfo.reset = parseInt(response.headers.get('X-RateLimit-Reset'), 10);\n      \n      let responseData = await response.json();\n\n      for (const interceptor of this.responseInterceptors) {\n        responseData = await interceptor(responseData, response);\n      }\n\n      this.cache.set(cacheKey, { data: responseData, timestamp: Date.now() });\n\n      const responseTime = Date.now() - startTime;\n      this.metrics.successfulRequests++;\n      this.metrics.avgResponseTime = (this.metrics.avgResponseTime + responseTime) / 2;\n\n      return responseData;\n    } catch (error) {\n      this.metrics.failedRequests++;\n      throw error;\n    }\n  }\n\n  /**\n   * Set authentication token\n   * @param {string} token - Auth token\n   */\n  setAuthToken(token) {\n    this.authToken = token;\n  }\n\n  /**\n   * Set cache TTL\n   * @param {number} ttl - Time to live in milliseconds\n   */\n  setCacheTTL(ttl) {\n    this.cacheTTL = ttl;\n  }\n\n  /**\n   * Batch multiple requests\n   * @param {Array} requests - Array of request configs or URLs\n   * @returns {Promise<Array>} Array of responses\n   */\n  async batchRequests(requests) {\n    const promises = requests.map(req => {\n      if (typeof req === 'string') {\n        return this.request(req);\n      }\n      return this.request(req.url, req.options);\n    });\n\n    const results = await Promise.allSettled(promises);\n\n    return results.map(result => {\n      if (result.status === 'fulfilled') {\n        return result.value;\n      }\n      return result.reason;\n    });\n  }\n\n  /**\n   * Add request interceptor\n   * @param {Function} interceptor - Interceptor function\n   */\n  addRequestInterceptor(interceptor) {\n    this.requestInterceptors.push(interceptor);\n  }\n\n  /**\n   * Add response interceptor\n   * @param {Function} interceptor - Interceptor function\n   */\n  addResponseInterceptor(interceptor) {\n    this.responseInterceptors.push(interceptor);\n  }\n\n  /**\n   * Make request with retry logic\n   * @param {string} url - Request URL\n   * @param {Object} options - Request options\n   * @param {number} retries - Number of retries\n   * @returns {Promise<Object>} Response data\n   */\n  async requestWithRetry(url, options = {}, retries = 3) {\n    let lastError;\n    \n    for (let i = 0; i <= retries; i++) {\n      try {\n        return await this.request(url, options);\n      } catch (error) {\n        lastError = error;\n        if (i < retries) {\n          const delay = Math.pow(2, i) * 100; // Exponential backoff\n          await new Promise(resolve => setTimeout(resolve, delay));\n        }\n      }\n    }\n    \n    throw lastError;\n  }\n\n  /**\n   * Set base URL\n   * @param {string} url - Base URL\n   */\n  setBaseUrl(url) {\n    this.baseUrl = url;\n  }\n\n  /**\n   * Get base URL\n   * @returns {string} Base URL\n   */\n  getBaseUrl() {\n    return this.baseUrl;\n  }\n\n  /**\n   * Set default headers\n   * @param {Object} headers - Default headers\n   */\n  setDefaultHeaders(headers) {\n    this.defaultHeaders = { ...headers };\n  }\n\n  /**\n   * Get default headers\n   * @returns {Object} Default headers\n   */\n  getDefaultHeaders() {\n    return { ...this.defaultHeaders };\n  }\n\n  /**\n   * Set timeout\n   * @param {number} timeout - Timeout in milliseconds\n   */\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Get timeout\n   * @returns {number} Timeout in milliseconds\n   */\n  getTimeout() {\n    return this.timeout;\n  }\n\n  /**\n   * Get metrics\n   * @returns {Object} Request metrics\n   */\n  getMetrics() {\n    return { ...this.metrics };\n  }\n\n  /**\n   * Reset metrics\n   */\n  resetMetrics() {\n    this.metrics = {\n      totalRequests: 0,\n      successfulRequests: 0,\n      failedRequests: 0,\n      avgResponseTime: 0\n    };\n  }\n\n  getRateLimitInfo() {\n    return this.rateLimitInfo;\n  }\n\n  clearCache() {\n    this.cache.clear();\n  }\n}\n\n// Export singleton instance\nexport const enhancedApiService = new EnhancedApiService();\nexport default EnhancedApiService;\n","import { apiLogger } from '../utils/apiLogger.js';\n\n/**\n * Data validation and quality assurance service\n * Ensures data integrity and consistency across different sources\n */\nclass DataValidationService {\n  constructor() {\n    this.validationRules = this.initializeValidationRules();\n    this.qualityMetrics = new Map();\n    this.anomalyDetection = new Map();\n  }\n\n  /**\n   * Initialize validation rules for different data types\n   */\n  initializeValidationRules() {\n    return {\n      marketData: {\n        required: ['symbol', 'currentPrice', 'volume'],\n        numeric: ['currentPrice', 'previousClose', 'change', 'changePercent', 'volume', 'marketCap'],\n        ranges: {\n          currentPrice: { min: 0, max: 100000 },\n          volume: { min: 0, max: 1e12 },\n          changePercent: { min: -50, max: 50 }\n        },\n        formats: {\n          symbol: /^[A-Z]{1,5}$/,\n          timestamp: /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/\n        }\n      },\n      financialStatements: {\n        required: ['revenue', 'netIncome'],\n        numeric: ['revenue', 'netIncome', 'totalDebt', 'cashAndCashEquivalents'],\n        ranges: {\n          revenue: { min: 0, max: 1e12 },\n          netIncome: { min: -1e11, max: 1e11 }\n        }\n      },\n      companyProfile: {\n        required: ['symbol', 'companyName', 'sector'],\n        numeric: ['mktCap', 'pe', 'pb', 'beta'],\n        ranges: {\n          pe: { min: 0, max: 1000 },\n          pb: { min: 0, max: 100 },\n          beta: { min: -5, max: 5 }\n        }\n      },\n      dcfModel: {\n        required: ['cashFlows', 'discountRate'],\n        numeric: ['discountRate', 'terminalGrowthRate', 'years'],\n        custom: (data) => {\n          const errors = [];\n          if (!Array.isArray(data.cashFlows) || data.cashFlows.length === 0) {\n            errors.push('Cash flows must be a non-empty array');\n          }\n          if (data.discountRate < 0) {\n            errors.push('Discount rate must be non-negative');\n          }\n          return { errors, warnings: [] };\n        }\n      },\n      lboModel: {\n        required: ['purchasePrice', 'debtFinancing', 'equityFinancing'],\n        numeric: ['purchasePrice', 'debtFinancing', 'equityFinancing', 'exitMultiple', 'holdingPeriod'],\n        custom: (data) => {\n          const errors = [];\n          const warnings = [];\n          if (data.debtFinancing && data.equityFinancing && data.purchasePrice) {\n            const total = data.debtFinancing + data.equityFinancing;\n            if (Math.abs(total - data.purchasePrice) > 0.01) {\n              errors.push('Debt + Equity must equal purchase price');\n            }\n            const debtRatio = data.debtFinancing / data.purchasePrice;\n            if (debtRatio > 0.9) {\n              warnings.push('High leverage ratio detected');\n            }\n          }\n          return { errors, warnings };\n        }\n      },\n      stockData: {\n        required: ['symbol', 'price'],\n        numeric: ['price', 'volume', 'change', 'changePercent'],\n        custom: (data) => {\n          const errors = [];\n          if (!data.symbol || typeof data.symbol !== 'string' || data.symbol.trim() === '') {\n            errors.push('Symbol is required and must be a non-empty string');\n          }\n          if (typeof data.price !== 'number' || data.price < 0) {\n            errors.push('Price must be a positive number');\n          }\n          return { errors, warnings: [] };\n        }\n      }\n    };\n  }\n\n  /**\n   * Validate data against defined rules\n   * @param {Object} data - Data to validate\n   * @param {string} dataType - Type of data\n   * @returns {Object} Validation result\n   */\n  validateData(data, dataType) {\n    try {\n      const rules = this.validationRules[dataType];\n      if (!rules) {\n        return { isValid: false, errors: [`Unknown data type: ${dataType}`] };\n      }\n\n      const errors = [];\n      const warnings = [];\n\n    // Check required fields\n    for (const field of rules.required || []) {\n      if (data[field] === undefined || data[field] === null) {\n        errors.push(`Missing required field: ${field}`);\n      }\n    }\n\n    // Validate numeric fields\n    for (const field of rules.numeric || []) {\n      if (data[field] !== undefined && data[field] !== null) {\n        const value = parseFloat(data[field]);\n        if (isNaN(value)) {\n          errors.push(`Field ${field} must be numeric, got: ${data[field]}`);\n        } else {\n          // Check ranges\n          const range = rules.ranges?.[field];\n          if (range) {\n            if (value < range.min || value > range.max) {\n              warnings.push(`Field ${field} value ${value} outside expected range [${range.min}, ${range.max}]`);\n            }\n          }\n        }\n      }\n    }\n\n    // Validate formats\n    for (const [field, pattern] of Object.entries(rules.formats || {})) {\n      if (data[field] && !pattern.test(data[field])) {\n        errors.push(`Field ${field} format invalid: ${data[field]}`);\n      }\n    }\n\n    // Additional business logic validations\n    const businessValidation = this.validateBusinessLogic(data, dataType);\n    errors.push(...businessValidation.errors);\n    warnings.push(...businessValidation.warnings);\n\n    // Custom validation function\n    if (rules.custom) {\n      const customValidation = rules.custom(data);\n      errors.push(...(customValidation.errors || []));\n      warnings.push(...(customValidation.warnings || []));\n    }\n\n    const isValid = errors.length === 0;\n    \n    // Log validation results\n    if (!isValid) {\n      apiLogger.log('ERROR', `Data validation failed for ${dataType}`, { errors, warnings });\n    } else if (warnings.length > 0) {\n      apiLogger.log('WARN', `Data validation warnings for ${dataType}`, { warnings });\n    }\n\n    return {\n      isValid,\n      errors,\n      warnings,\n      qualityScore: this.calculateQualityScore(errors, warnings)\n    };\n    } catch (error) {\n      return { isValid: false, errors: ['An unexpected error occurred during validation.'], warnings: [] };\n    }\n  }\n\n  /**\n   * Validate business logic rules\n   * @param {Object} data - Data to validate\n   * @param {string} dataType - Type of data\n   * @returns {Object} Business validation result\n   */\n  validateBusinessLogic(data, dataType) {\n    const errors = [];\n    const warnings = [];\n\n    switch (dataType) {\n      case 'marketData':\n        // Price consistency checks\n        if (data.currentPrice && data.previousClose) {\n          const calculatedChange = data.currentPrice - data.previousClose;\n          const calculatedChangePercent = (calculatedChange / data.previousClose) * 100;\n          \n          if (data.change && Math.abs(data.change - calculatedChange) > 0.01) {\n            warnings.push(`Price change inconsistency: reported ${data.change}, calculated ${calculatedChange.toFixed(2)}`);\n          }\n          \n          if (data.changePercent && Math.abs(data.changePercent - calculatedChangePercent) > 0.1) {\n            warnings.push(`Change percent inconsistency: reported ${data.changePercent}%, calculated ${calculatedChangePercent.toFixed(2)}%`);\n          }\n        }\n\n        // Day range validation\n        if (data.currentPrice && data.dayHigh && data.dayLow) {\n          if (data.currentPrice > data.dayHigh) {\n            warnings.push(`Current price ${data.currentPrice} exceeds day high ${data.dayHigh}`);\n          }\n          if (data.currentPrice < data.dayLow) {\n            warnings.push(`Current price ${data.currentPrice} below day low ${data.dayLow}`);\n          }\n          if (data.dayLow > data.dayHigh) {\n            errors.push(`Day low ${data.dayLow} greater than day high ${data.dayHigh}`);\n          }\n        }\n        break;\n\n      case 'financialStatements':\n        // Financial ratio validations\n        if (data.revenue && data.netIncome) {\n          const netMargin = (data.netIncome / data.revenue) * 100;\n          if (netMargin < -100 || netMargin > 100) {\n            warnings.push(`Unusual net profit margin: ${netMargin.toFixed(2)}%`);\n          }\n        }\n\n        // Balance sheet validations\n        if (data.totalCurrentAssets && data.totalCurrentLiabilities) {\n          const currentRatio = data.totalCurrentAssets / data.totalCurrentLiabilities;\n          if (currentRatio < 0.1 || currentRatio > 20) {\n            warnings.push(`Unusual current ratio: ${currentRatio.toFixed(2)}`);\n          }\n        }\n        break;\n\n      case 'companyProfile':\n        // Valuation metric validations\n        if (data.pe && (data.pe < 0 || data.pe > 500)) {\n          warnings.push(`Unusual P/E ratio: ${data.pe}`);\n        }\n        \n        if (data.pb && (data.pb < 0 || data.pb > 50)) {\n          warnings.push(`Unusual P/B ratio: ${data.pb}`);\n        }\n        break;\n    }\n\n    return { errors, warnings };\n  }\n\n  /**\n   * Calculate data quality score\n   * @param {Array} errors - Validation errors\n   * @param {Array} warnings - Validation warnings\n   * @returns {number} Quality score (0-100)\n   */\n  calculateQualityScore(errors, warnings) {\n    if (errors.length > 0) {\n      return Math.max(0, 50 - (errors.length * 10));\n    }\n    \n    return Math.max(70, 100 - (warnings.length * 5));\n  }\n\n  /**\n   * Cross-validate data from multiple sources\n   * @param {Array} dataSources - Array of data objects from different sources\n   * @param {string} dataType - Type of data\n   * @returns {Object} Cross-validation result\n   */\n  crossValidateData(dataSources, dataType) {\n    if (dataSources.length < 2) {\n      return { isConsistent: true, discrepancies: [], recommendedSource: dataSources[0]?.source };\n    }\n\n    const discrepancies = [];\n    const numericFields = this.validationRules[dataType]?.numeric || [];\n\n    // Compare numeric fields across sources\n    for (const field of numericFields) {\n      const values = dataSources\n        .filter(data => data[field] !== undefined && data[field] !== null)\n        .map(data => ({ value: parseFloat(data[field]), source: data.source }));\n\n      if (values.length > 1) {\n        const mean = values.reduce((sum, item) => sum + item.value, 0) / values.length;\n        const maxDeviation = Math.max(...values.map(item => Math.abs(item.value - mean)));\n        const threshold = mean * 0.05; // 5% threshold\n\n        if (maxDeviation > threshold) {\n          discrepancies.push({\n            field,\n            values,\n            mean,\n            maxDeviation,\n            threshold\n          });\n        }\n      }\n    }\n\n    // Determine recommended source based on quality scores\n    const sourceQuality = dataSources.map(data => {\n      const validation = this.validateData(data, dataType);\n      return {\n        source: data.source,\n        qualityScore: validation.qualityScore,\n        errorCount: validation.errors.length,\n        warningCount: validation.warnings.length\n      };\n    });\n\n    const recommendedSource = sourceQuality\n      .sort((a, b) => b.qualityScore - a.qualityScore)[0]?.source;\n\n    return {\n      isConsistent: discrepancies.length === 0,\n      discrepancies,\n      sourceQuality,\n      recommendedSource\n    };\n  }\n\n  /**\n   * Detect anomalies in time series data\n   * @param {Array} timeSeries - Array of data points with timestamps\n   * @param {string} field - Field to analyze\n   * @returns {Array} Detected anomalies\n   */\n  detectAnomalies(timeSeries, field) {\n    if (timeSeries.length < 10) {\n      return []; // Need sufficient data for anomaly detection\n    }\n\n    const values = timeSeries.map(point => parseFloat(point[field])).filter(v => !isNaN(v));\n    const mean = values.reduce((sum, val) => sum + val, 0) / values.length;\n    const variance = values.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / values.length;\n    const stdDev = Math.sqrt(variance);\n\n    const anomalies = [];\n    const threshold = 2.5; // 2.5 standard deviations\n\n    timeSeries.forEach((point, index) => {\n      const value = parseFloat(point[field]);\n      if (!isNaN(value)) {\n        const zScore = Math.abs((value - mean) / stdDev);\n        if (zScore > threshold) {\n          anomalies.push({\n            index,\n            timestamp: point.timestamp,\n            value,\n            zScore,\n            deviation: value - mean,\n            severity: zScore > 3 ? 'high' : 'medium'\n          });\n        }\n      }\n    });\n\n    return anomalies;\n  }\n\n  /**\n   * Get validation summary for a dataset\n   * @param {Object} data - Data to summarize\n   * @param {string} dataType - Type of data\n   * @returns {Object} Validation summary\n   */\n  getValidationSummary(data, dataType) {\n    const validation = this.validateData(data, dataType);\n    \n    return {\n      dataType,\n      timestamp: new Date().toISOString(),\n      isValid: validation.isValid,\n      qualityScore: validation.qualityScore,\n      errorCount: validation.errors.length,\n      warningCount: validation.warnings.length,\n      completeness: this.calculateCompleteness(data, dataType),\n      freshness: this.calculateFreshness(data),\n      source: data.source || 'unknown'\n    };\n  }\n\n  /**\n   * Calculate data completeness percentage\n   * @param {Object} data - Data to analyze\n   * @param {string} dataType - Type of data\n   * @returns {number} Completeness percentage\n   */\n  calculateCompleteness(data, dataType) {\n    const rules = this.validationRules[dataType];\n    if (!rules) return 0;\n\n    const allFields = [\n      ...(rules.required || []),\n      ...(rules.numeric || []),\n      ...Object.keys(rules.formats || {})\n    ];\n\n    const uniqueFields = [...new Set(allFields)];\n    const presentFields = uniqueFields.filter(field => \n      data[field] !== undefined && data[field] !== null && data[field] !== ''\n    );\n\n    return (presentFields.length / uniqueFields.length) * 100;\n  }\n\n  /**\n   * Calculate data freshness score\n   * @param {Object} data - Data to analyze\n   * @returns {number} Freshness score (0-100)\n   */\n  calculateFreshness(data) {\n    if (!data.timestamp) return 50; // Unknown freshness\n\n    const dataTime = new Date(data.timestamp);\n    const now = new Date();\n    const ageMinutes = (now - dataTime) / (1000 * 60);\n\n    // Score based on age (fresher = higher score)\n    if (ageMinutes < 5) return 100;\n    if (ageMinutes < 15) return 90;\n    if (ageMinutes < 60) return 80;\n    if (ageMinutes < 240) return 70;\n    if (ageMinutes < 1440) return 60;\n    return 40;\n  }\n\n\n  /**\n   * Sanitize input string\n   * @param {any} input - Input to sanitize\n   * @returns {string} Sanitized string\n   */\n  sanitizeInput(input) {\n    if (input === null || input === undefined) {\n      return '';\n    }\n\n    const str = String(input);\n    return str\n      .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n      .replace(/<[^>]*>/g, '')\n      .replace(/javascript:/gi, '')\n      .replace(/on\\w+\\s*=/gi, '');\n  }\n\n  /**\n   * Check if number is in range\n   * @param {number} value - Value to check\n   * @param {number} min - Minimum value\n   * @param {number} max - Maximum value\n   * @returns {boolean} True if in range\n   */\n  isInRange(value, min, max) {\n    return typeof value === 'number' && value >= min && value <= max;\n  }\n\n  /**\n   * Check if value is valid percentage (0-1)\n   * @param {number} value - Value to check\n   * @returns {boolean} True if valid percentage\n   */\n  isValidPercentage(value) {\n    return typeof value === 'number' && value >= 0 && value <= 1;\n  }\n\n  /**\n   * Check if value is a valid number\n   * @param {any} value - Value to check\n   * @returns {boolean} True if valid number\n   */\n  isValidNumber(value) {\n    return typeof value === 'number' && !isNaN(value) && isFinite(value);\n  }\n\n  /**\n   * Check if value is a valid array\n   * @param {any} value - Value to check\n   * @returns {boolean} True if valid array\n   */\n  isValidArray(value) {\n    return Array.isArray(value);\n  }\n\n  /**\n   * Check if value is a valid object\n   * @param {any} value - Value to check\n   * @returns {boolean} True if valid object\n   */\n  isValidObject(value) {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n  }\n\n  /**\n   * Validate financial ratios\n   * @param {Object} ratios - Financial ratios to validate\n   * @returns {Object} Validation result\n   */\n  validateFinancialRatios(ratios) {\n    const errors = [];\n    const warnings = [];\n\n    // Check for concerning ratios\n    if (ratios.currentRatio < 1.0) {\n      warnings.push('Current ratio below 1.0 indicates potential liquidity issues');\n    }\n\n    if (ratios.debtToEquity > 2.0) {\n      warnings.push('High debt-to-equity ratio indicates high leverage');\n    }\n\n    if (ratios.returnOnEquity < 0) {\n      warnings.push('Negative return on equity indicates poor performance');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings\n    };\n  }\n}\n\n// Export singleton instance\nexport const dataValidationService = new DataValidationService();\nexport default DataValidationService;\n","import React, { useState, useEffect } from 'react';\n\nimport Icon from '../../components/AppIcon';\nimport Button from '../../components/ui/Button';\nimport Header from '../../components/ui/Header';\n\nimport BulkOperationsPanel from './components/BulkOperationsPanel';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport DataSourceToggle from './components/DataSourceToggle';\nimport MarketDataWidget from './components/MarketDataWidget';\nimport SymbolSearch from './components/SymbolSearch';\nimport WatchlistPanel from './components/WatchlistPanel';\nimport ApiStatusPanel from './components/ApiStatusPanel';\n\n// Import real data services\nimport { realTimeDataService } from '../../services/realTimeDataService';\nimport { enhancedApiService } from '../../services/enhancedApiService';\nimport { dataValidationService } from '../../services/dataValidationService';\n\nconst RealTimeMarketDataCenter = () => {\n  const [dataSources, setDataSources] = useState([\n    { id: 'yahoo', name: 'Yahoo Finance', enabled: true, status: 'connected', latency: 12, requiresKey: false },\n    { id: 'alpha_vantage', name: 'Alpha Vantage', enabled: false, status: 'disconnected', latency: 25, requiresKey: true },\n    { id: 'fmp', name: 'Financial Modeling Prep', enabled: false, status: 'disconnected', latency: 18, requiresKey: true },\n    { id: 'sec_edgar', name: 'SEC EDGAR', enabled: true, status: 'connected', latency: 45, requiresKey: false }\n  ]);\n\n  const [connectionHealth, setConnectionHealth] = useState({\n    overall: 'good',\n    sources: {\n      yahoo: 'connected',\n      alpha_vantage: 'disconnected',\n      fmp: 'disconnected',\n      sec_edgar: 'connected'\n    }\n  });\n\n  const [realDataEnabled, setRealDataEnabled] = useState(false);\n  const [apiHealthStatus, setApiHealthStatus] = useState({});\n  const [dataQuality, setDataQuality] = useState({});\n\n  const [widgets, setWidgets] = useState([\n    {\n      id: 'widget-1',\n      symbol: 'AAPL',\n      name: 'Apple Inc.',\n      currentValue: 182.52,\n      change: 2.15,\n      changePercent: 1.19,\n      valueType: 'currency',\n      dayHigh: 184.3,\n      dayLow: 180.15,\n      volume: 52847392,\n      source: 'Bloomberg',\n      lastUpdate: new Date(Date.now() - 2000),\n      sparklineData: [180.25, 181.15, 180.95, 182.1, 181.85, 182.52]\n    },\n    {\n      id: 'widget-2',\n      symbol: 'MSFT',\n      name: 'Microsoft Corporation',\n      currentValue: 378.85,\n      change: -1.25,\n      changePercent: -0.33,\n      valueType: 'currency',\n      dayHigh: 381.2,\n      dayLow: 377.5,\n      volume: 28394751,\n      source: 'FactSet',\n      lastUpdate: new Date(Date.now() - 1500),\n      sparklineData: [380.15, 379.85, 378.95, 379.4, 378.2, 378.85]\n    },\n    {\n      id: 'widget-3',\n      symbol: 'GOOGL',\n      name: 'Alphabet Inc.',\n      currentValue: 2847.35,\n      change: 15.8,\n      changePercent: 0.56,\n      valueType: 'currency',\n      dayHigh: 2855.0,\n      dayLow: 2830.15,\n      volume: 1847392,\n      source: 'Bloomberg',\n      lastUpdate: new Date(Date.now() - 3000),\n      sparklineData: [2835.25, 2841.15, 2838.95, 2845.1, 2843.85, 2847.35]\n    },\n    {\n      id: 'widget-4',\n      symbol: 'US10Y',\n      name: 'US 10-Year Treasury',\n      currentValue: 4.285,\n      change: 0.025,\n      changePercent: 0.59,\n      valueType: 'percentage',\n      dayHigh: 4.295,\n      dayLow: 4.26,\n      volume: null,\n      source: 'Refinitiv',\n      lastUpdate: new Date(Date.now() - 5000),\n      sparklineData: [4.26, 4.27, 4.275, 4.28, 4.285, 4.285]\n    }\n  ]);\n\n  const [watchlist, setWatchlist] = useState([\n    {\n      symbol: 'AAPL',\n      name: 'Apple Inc.',\n      exchange: 'NASDAQ',\n      sector: 'Technology',\n      price: 182.52,\n      change: 2.15,\n      changePercent: 1.19\n    },\n    {\n      symbol: 'MSFT',\n      name: 'Microsoft Corporation',\n      exchange: 'NASDAQ',\n      sector: 'Technology',\n      price: 378.85,\n      change: -1.25,\n      changePercent: -0.33\n    },\n    {\n      symbol: 'TSLA',\n      name: 'Tesla Inc.',\n      exchange: 'NASDAQ',\n      sector: 'Consumer Discretionary',\n      price: 248.42,\n      change: 5.67,\n      changePercent: 2.34\n    }\n  ]);\n\n  const [selectedSymbols, setSelectedSymbols] = useState([]);\n  const [lastUpdate, setLastUpdate] = useState('2 min ago');\n  const [refreshInterval, setRefreshInterval] = useState(5000);\n  const [isAutoRefresh, setIsAutoRefresh] = useState(true);\n\n  // Initialize real data services and check API health\n  useEffect(() => {\n    const initializeRealData = async () => {\n      try {\n        // Check API health status\n        const healthStatus = enhancedApiService.getSourceHealthStatus();\n        setApiHealthStatus(healthStatus);\n\n        // Update data sources based on API availability\n        setDataSources(prevSources =>\n          prevSources.map(source => {\n            const health = healthStatus[source.id.toUpperCase()];\n            if (health) {\n              return {\n                ...source,\n                enabled: health.hasValidApiKey || !health.requiresApiKey,\n                status: health.hasValidApiKey || !health.requiresApiKey ? 'connected' : 'disconnected'\n              };\n            }\n            return source;\n          })\n        );\n\n        // Enable real data if we have at least one working API\n        const hasWorkingApi = Object.values(healthStatus).some(\n          health => health.hasValidApiKey || !health.requiresApiKey\n        );\n        setRealDataEnabled(hasWorkingApi);\n\n      } catch (error) {\n        console.error('Failed to initialize real data services:', error);\n      }\n    };\n\n    initializeRealData();\n  }, []);\n\n  // Real-time updates with actual data or simulation\n  useEffect(() => {\n    if (!isAutoRefresh) return;\n\n    const interval = setInterval(async () => {\n      if (realDataEnabled) {\n        // Fetch real data for each widget\n        const updatedWidgets = await Promise.all(\n          widgets.map(async (widget) => {\n            try {\n              const marketData = await enhancedApiService.fetchRealTimeMarketData(widget.symbol);\n              const validation = dataValidationService.validateData(marketData, 'marketData');\n\n              return {\n                ...widget,\n                currentValue: marketData.currentPrice,\n                change: marketData.change,\n                changePercent: marketData.changePercent,\n                dayHigh: marketData.dayHigh,\n                dayLow: marketData.dayLow,\n                volume: marketData.volume,\n                lastUpdate: new Date(),\n                source: marketData.source,\n                dataQuality: validation.qualityScore,\n                sparklineData: [\n                  ...widget.sparklineData.slice(1),\n                  marketData.currentPrice\n                ]\n              };\n            } catch (error) {\n              console.warn(`Failed to fetch real data for ${widget.symbol}, using simulation:`, error);\n              // Fallback to simulation\n              return {\n                ...widget,\n                currentValue: widget.currentValue + (Math.random() - 0.5) * 2,\n                change: (Math.random() - 0.5) * 5,\n                changePercent: (Math.random() - 0.5) * 2,\n                lastUpdate: new Date(),\n                source: 'Simulation',\n                sparklineData: [\n                  ...widget.sparklineData.slice(1),\n                  widget.currentValue + (Math.random() - 0.5) * 2\n                ]\n              };\n            }\n          })\n        );\n        setWidgets(updatedWidgets);\n      } else {\n        // Fallback to simulation\n        setWidgets(prevWidgets =>\n          prevWidgets.map(widget => ({\n            ...widget,\n            currentValue: widget.currentValue + (Math.random() - 0.5) * 2,\n            change: (Math.random() - 0.5) * 5,\n            changePercent: (Math.random() - 0.5) * 2,\n            lastUpdate: new Date(),\n            source: 'Simulation',\n            sparklineData: [\n              ...widget.sparklineData.slice(1),\n              widget.currentValue + (Math.random() - 0.5) * 2\n            ]\n          }))\n        );\n      }\n      setLastUpdate('Just now');\n    }, refreshInterval);\n\n    return () => clearInterval(interval);\n  }, [refreshInterval, isAutoRefresh, realDataEnabled, widgets]);\n\n  const handleDataSourceToggle = sourceId => {\n    setDataSources(prev =>\n      prev.map(source =>\n        source.id === sourceId ? { ...source, enabled: !source.enabled } : source\n      )\n    );\n  };\n\n  const handleSymbolSelect = async (symbol) => {\n    try {\n      let marketData;\n      let source = 'Simulation';\n      let dataQuality = 75;\n\n      if (realDataEnabled) {\n        try {\n          marketData = await enhancedApiService.fetchRealTimeMarketData(symbol.symbol);\n          const validation = dataValidationService.validateData(marketData, 'marketData');\n          source = marketData.source;\n          dataQuality = validation.qualityScore;\n        } catch (error) {\n          console.warn(`Failed to fetch real data for ${symbol.symbol}, using simulation:`, error);\n          marketData = null;\n        }\n      }\n\n      const newWidget = {\n        id: `widget-${Date.now()}`,\n        symbol: symbol.symbol,\n        name: symbol.name,\n        currentValue: marketData?.currentPrice || Math.random() * 1000 + 50,\n        change: marketData?.change || (Math.random() - 0.5) * 10,\n        changePercent: marketData?.changePercent || (Math.random() - 0.5) * 5,\n        valueType: 'currency',\n        dayHigh: marketData?.dayHigh || Math.random() * 1000 + 60,\n        dayLow: marketData?.dayLow || Math.random() * 1000 + 40,\n        volume: marketData?.volume || Math.floor(Math.random() * 100000000),\n        source,\n        dataQuality,\n        lastUpdate: new Date(),\n        sparklineData: Array.from({ length: 6 }, () =>\n          marketData?.currentPrice || Math.random() * 1000 + 50\n        )\n      };\n\n      setWidgets(prev => [...prev, newWidget]);\n\n      // Subscribe to real-time updates for this symbol\n      if (realDataEnabled) {\n        realTimeDataService.subscribe(symbol.symbol, 'marketData', (data) => {\n          setWidgets(prevWidgets =>\n            prevWidgets.map(widget =>\n              widget.symbol === symbol.symbol\n                ? {\n                    ...widget,\n                    currentValue: data.currentPrice,\n                    change: data.change,\n                    changePercent: data.changePercent,\n                    lastUpdate: new Date(data.timestamp),\n                    source: data.source\n                  }\n                : widget\n            )\n          );\n        });\n      }\n    } catch (error) {\n      console.error('Error adding symbol:', error);\n    }\n  };\n\n  const handleAddToWatchlist = symbol => {\n    if (!watchlist.some(item => item.symbol === symbol.symbol)) {\n      setWatchlist(prev => [\n        ...prev,\n        {\n          ...symbol,\n          price: Math.random() * 1000 + 50,\n          change: (Math.random() - 0.5) * 10,\n          changePercent: (Math.random() - 0.5) * 5\n        }\n      ]);\n    }\n  };\n\n  const handleRemoveFromWatchlist = symbol => {\n    setWatchlist(prev => prev.filter(item => item.symbol !== symbol));\n  };\n\n  const handleWidgetResize = widgetId => {\n    console.log('Resize widget:', widgetId);\n  };\n\n  const handleWidgetRemove = widgetId => {\n    setWidgets(prev => prev.filter(widget => widget.id !== widgetId));\n  };\n\n  const handleBulkExport = config => {\n    console.log('Bulk export:', config);\n    alert(`Exporting ${config.symbols.length} symbols in ${config.format.toUpperCase()} format`);\n  };\n\n  const handleBulkAlert = config => {\n    console.log('Bulk alert setup:', config);\n    alert(`Setting ${config.threshold}% alerts for ${config.symbols.length} symbols`);\n  };\n\n  const handleBulkHistorical = config => {\n    console.log('Bulk historical data:', config);\n    alert(`Fetching ${config.period} historical data for ${config.symbols.length} symbols`);\n  };\n\n  const handleRefresh = () => {\n    setLastUpdate('Just now');\n    // Trigger data refresh\n  };\n\n  const handleKeyboardShortcut = e => {\n    if (e.ctrlKey && e.key === 'f') {\n      e.preventDefault();\n      document.querySelector('input[placeholder*=\"Search symbols\"]')?.focus();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyboardShortcut);\n    return () => document.removeEventListener('keydown', handleKeyboardShortcut);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n\n      <div className=\"pt-[60px]\">\n        {/* Top Toolbar */}\n        <div className=\"bg-card border-b border-border p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-6\">\n              <DataSourceToggle dataSources={dataSources} onToggle={handleDataSourceToggle} />\n\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  iconName=\"RefreshCw\"\n                  onClick={handleRefresh}\n                  className={isAutoRefresh ? 'animate-spin' : ''}\n                >\n                  Refresh\n                </Button>\n                <Button\n                  variant={isAutoRefresh ? 'default' : 'outline'}\n                  size=\"sm\"\n                  iconName={isAutoRefresh ? 'Pause' : 'Play'}\n                  onClick={() => setIsAutoRefresh(!isAutoRefresh)}\n                >\n                  {isAutoRefresh ? 'Pause' : 'Resume'}\n                </Button>\n              </div>\n            </div>\n\n            <ConnectionStatus connectionHealth={connectionHealth} lastUpdate={lastUpdate} />\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"p-6\">\n          <div className=\"grid grid-cols-12 gap-6\">\n            {/* Left Sidebar */}\n            <div className=\"col-span-3 space-y-6\">\n              {/* Symbol Search */}\n              <div className=\"bg-card border border-border rounded-lg p-4 shadow-elevation-1\">\n                <h3 className=\"font-semibold text-foreground mb-4\">Add Symbols</h3>\n                <SymbolSearch\n                  onSymbolSelect={handleSymbolSelect}\n                  watchlist={watchlist}\n                  onAddToWatchlist={handleAddToWatchlist}\n                />\n                <div className=\"mt-3 text-xs text-muted-foreground\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Icon name=\"Keyboard\" size={12} />\n                    <span>Ctrl+F to focus search</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Watchlist */}\n              <WatchlistPanel\n                watchlist={watchlist}\n                onRemoveFromWatchlist={handleRemoveFromWatchlist}\n                onSelectSymbol={handleSymbolSelect}\n              />\n\n              {/* Bulk Operations */}\n              <BulkOperationsPanel\n                selectedSymbols={selectedSymbols}\n                onBulkExport={handleBulkExport}\n                onBulkAlert={handleBulkAlert}\n                onBulkHistorical={handleBulkHistorical}\n              />\n\n              {/* API Status & Data Quality */}\n              <ApiStatusPanel\n                apiHealthStatus={apiHealthStatus}\n                realDataEnabled={realDataEnabled}\n                dataSources={dataSources}\n                dataQuality={dataQuality}\n              />\n            </div>\n\n            {/* Main Data Grid */}\n            <div className=\"col-span-9\">\n              <div className=\"mb-4 flex items-center justify-between\">\n                <h2 className=\"text-xl font-semibold text-foreground\">\n                  Market Data Widgets ({widgets.length})\n                </h2>\n                <div className=\"flex items-center space-x-2\">\n                  <Button variant=\"outline\" size=\"sm\" iconName=\"Settings\">\n                    Layout\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" iconName=\"Save\">\n                    Save Dashboard\n                  </Button>\n                </div>\n              </div>\n\n              {/* Widgets Grid */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">\n                {widgets.map(widget => (\n                  <MarketDataWidget\n                    key={widget.id}\n                    widget={widget}\n                    onResize={handleWidgetResize}\n                    onRemove={handleWidgetRemove}\n                  />\n                ))}\n              </div>\n\n              {/* Empty State */}\n              {widgets.length === 0 && (\n                <div className=\"text-center py-12\">\n                  <Icon name=\"BarChart3\" size={48} className=\"mx-auto mb-4 text-muted-foreground\" />\n                  <h3 className=\"text-lg font-semibold text-foreground mb-2\">No Data Widgets</h3>\n                  <p className=\"text-muted-foreground mb-4\">\n                    Search and add symbols to start monitoring market data\n                  </p>\n                  <Button variant=\"outline\" iconName=\"Plus\">\n                    Add Your First Widget\n                  </Button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Status Bar */}\n        <div className=\"fixed bottom-0 left-0 right-0 bg-card border-t border-border p-2\">\n          <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n            <div className=\"flex items-center space-x-4\">\n              <span>Active Widgets: {widgets.length}</span>\n              <span>Watchlist: {watchlist.length}</span>\n              <span>Auto-refresh: {isAutoRefresh ? 'ON' : 'OFF'}</span>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <span>Market Hours: OPEN</span>\n              <span>Last Update: {lastUpdate}</span>\n              <div className=\"flex items-center space-x-1\">\n                <div className=\"w-2 h-2 bg-success rounded-full\" />\n                <span>All systems operational</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RealTimeMarketDataCenter;\n"],"names":["BulkOperationsPanel","selectedSymbols","onBulkExport","onBulkAlert","onBulkHistorical","isExpanded","setIsExpanded","useState","exportFormat","setExportFormat","alertThreshold","setAlertThreshold","historicalPeriod","setHistoricalPeriod","length","jsxs","className","children","onClick","jsx","Icon","name","size","color","slice","map","symbol","value","onChange","e","target","Button","variant","iconName","symbols","format","timestamp","Date","toISOString","Input","type","placeholder","threshold","parseFloat","disabled","period","Math","min","ceil","ConnectionStatus","connectionHealth","lastUpdate","status","getStatusIcon","overall","getStatusColor","entries","sources","source","title","DataSourceToggle","dataSources","onToggle","id","enabled","latency","MarketDataWidget","widget","onResize","onRemove","formatValue","toLocaleString","minimumFractionDigits","toFixed","diffSeconds","getFreshnessColor","toLocaleTimeString","currentValue","valueType","change","getChangeIcon","abs","changePercent","sparklineData","point","index","style","height","max","minHeight","dayHigh","dayLow","volume","SymbolSearch","onSymbolSelect","watchlist","onAddToWatchlist","searchTerm","setSearchTerm","suggestions","setSuggestions","isOpen","setIsOpen","selectedIndex","setSelectedIndex","searchRef","useRef","symbolDatabase","exchange","sector","useEffect","filtered","filter","item","toLowerCase","includes","handleSymbolSelect","ref","onKeyDown","key","preventDefault","prev","some","stopPropagation","WatchlistPanel","onRemoveFromWatchlist","onSelectSymbol","sortBy","setSortBy","sortOrder","setSortOrder","sortedWatchlist","sort","a","b","aValue","bValue","field","handleSort","price","Card","React","forwardRef","props","cn","displayName","CardHeader","CardTitle","CardContent","Badge","variantClass","Progress","clamped","width","Alert","role","AlertDescription","ApiStatusPanel","apiHealthStatus","realDataEnabled","dataQuality","CheckCircle","XCircle","AlertTriangle","connectedSources","totalSources","connectionPercentage","Wifi","requiresKey","Key","Object","keys","health","replace","successRate","avgResponseTime","quality","realTimeDataService","constructor","this","subscribers","Map","activeStreams","pollingIntervals","connectionStatus","lastUpdateTimes","updateIntervals","marketData","quotes","news","fundamentals","maxRetries","retryDelay","subscribe","dataType","callback","subscriptionId","now","has","set","get","startStream","apiLogger","log","totalSubscribers","unsubscribe","delete","split","stopStream","remainingSubscribers","supportsWebSocket","startWebSocketStream","startPollingStream","error","message","clearInterval","Error","interval","fetchAndBroadcast","intervalId","setInterval","async","data","dataFetchingService","fetchMarketData","fetchCompanyProfile","fetchFinancialStatements","enrichedData","forEach","getConnectionStatus","subscriberCount","getActiveSubscriptions","subscriptions","push","cleanup","values","clear","API_CONFIG","baseURL","DATA_SOURCE_PRIORITY","financialStatements","companyProfile","secFilings","economicData","peers","RateLimiter","requestsPerInterval","requestTimestamps","acquire","timeToWait","Promise","resolve","setTimeout","enhancedApiService","rateLimiters","sourceHealth","lastRequests","apiKeys","loadApiKeys","cache","rateLimitInfo","remaining","reset","initializeSourceHealth","ALPHA_VANTAGE","FMP","QUANDL","undefined","FRED","availableKeys","_","totalKeys","lastError","requestCount","errorCount","lastHealthCheck","hasValidApiKey","getBestSource","priorityList","requiresApiKey","fetchRealTimeMarketData","options","fetchFromYahooFinance","fetchFromAlphaVantage","updateSourceHealth","normalizeMarketData","s","excludeSource","url","params","range","includePrePost","events","fullUrl","URL","search","URLSearchParams","toString","response","fetch","pathname","signal","AbortSignal","timeout","headers","ok","responseData","json","chart","result","function_name","config","function","apikey","fetchComprehensiveData","results","errors","promises","method","allSettled","getSourcesUsed","rawData","normalizeYahooData","normalizeAlphaVantageData","meta","quote","indicators","latest","open","high","low","close","currentPrice","regularMarketPrice","previousClose","regularMarketDayHigh","regularMarketDayLow","regularMarketVolume","marketCap","currency","exchangeName","regularMarketTime","globalQuote","parseInt","success","responseTime","getSourceHealthStatus","Set","add","Array","from","baseUrl","defaultHeaders","authToken","cacheTTL","requestInterceptors","responseInterceptors","metrics","totalRequests","successfulRequests","failedRequests","request","startTime","limiter","startsWith","cacheKey","cached","Authorization","interceptor","controller","AbortController","timeoutId","abort","clearTimeout","errorData","text","setAuthToken","token","setCacheTTL","ttl","batchRequests","requests","req","reason","addRequestInterceptor","addResponseInterceptor","requestWithRetry","retries","i","delay","pow","setBaseUrl","getBaseUrl","setDefaultHeaders","getDefaultHeaders","getTimeout","getMetrics","resetMetrics","getRateLimitInfo","clearCache","dataValidationService","validationRules","initializeValidationRules","qualityMetrics","anomalyDetection","required","numeric","ranges","formats","revenue","netIncome","pe","pb","beta","dcfModel","custom","isArray","cashFlows","discountRate","warnings","lboModel","debtFinancing","equityFinancing","purchasePrice","total","stockData","trim","validateData","rules","isValid","isNaN","pattern","test","businessValidation","validateBusinessLogic","customValidation","qualityScore","calculateQualityScore","calculatedChange","calculatedChangePercent","netMargin","totalCurrentAssets","totalCurrentLiabilities","currentRatio","crossValidateData","isConsistent","discrepancies","recommendedSource","numericFields","mean","reduce","sum","maxDeviation","sourceQuality","validation","warningCount","detectAnomalies","timeSeries","v","val","variance","stdDev","sqrt","anomalies","zScore","deviation","severity","getValidationSummary","completeness","calculateCompleteness","freshness","calculateFreshness","allFields","uniqueFields","dataTime","ageMinutes","sanitizeInput","input","String","isInRange","isValidPercentage","isValidNumber","isFinite","isValidArray","isValidObject","validateFinancialRatios","ratios","debtToEquity","returnOnEquity","RealTimeMarketDataCenter","setDataSources","setConnectionHealth","yahoo","alpha_vantage","fmp","sec_edgar","setRealDataEnabled","setApiHealthStatus","setDataQuality","widgets","setWidgets","setWatchlist","setSelectedSymbols","setLastUpdate","refreshInterval","setRefreshInterval","isAutoRefresh","setIsAutoRefresh","healthStatus","prevSources","toUpperCase","hasWorkingApi","initializeRealData","updatedWidgets","all","random","prevWidgets","newWidget","floor","handleWidgetResize","widgetId","handleWidgetRemove","handleKeyboardShortcut","ctrlKey","document","querySelector","focus","addEventListener","removeEventListener","Header","sourceId","alert"],"mappings":"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"}