{"version":3,"file":"FinancialInputsDemo-C8gfm3sX.js","sources":["../../src/components/ui/EditableCell.jsx","../../src/components/ui/LoadingState.jsx","../../src/components/ui/ValidationFeedback.jsx","../../src/components/FinancialInputsDemo.jsx"],"sourcesContent":["import { Check, X, Edit2, Calculator, AlertCircle } from 'lucide-react';\nimport React, { useState, useEffect, useRef } from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst EditableCell = ({\n  value,\n  onChange,\n  onSave,\n  onCancel,\n  className,\n  type = 'currency', // 'currency', 'percentage', 'number', 'text'\n  placeholder = '0.00',\n  isFormula = false,\n  isEditing = false,\n  onEdit,\n  disabled = false,\n  loading = false,\n  error,\n  locale = 'en-US',\n  currency = 'USD',\n  decimals = 2,\n  allowNegative = true,\n  min,\n  max,\n  autoFocus = true,\n  showEditIcon = true,\n  variant = 'default', // 'default', 'adjusted', 'formula'\n  ..._props\n}) => {\n  const [editingValue, setEditingValue] = useState('');\n  const [localError, setLocalError] = useState('');\n  const [isHovered, setIsHovered] = useState(false);\n  const inputRef = useRef(null);\n\n  // Format value for display\n  const formatValue = (val) => {\n    if (!val && val !== 0) return '—';\n\n    const numValue = typeof val === 'string' ? parseFloat(val) : val;\n    if (isNaN(numValue)) return '—';\n\n    switch (type) {\n      case 'currency': {\n        const formatted = new Intl.NumberFormat(locale, {\n          style: 'currency',\n          currency,\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals\n        }).format(numValue);\n\n        // For large numbers, add suffix\n        const absValue = Math.abs(numValue);\n        if (absValue >= 1000000) {\n          return new Intl.NumberFormat(locale, {\n            minimumFractionDigits: 1,\n            maximumFractionDigits: 1\n          }).format(numValue / 1000000) + 'M';\n        } else if (absValue >= 1000) {\n          return new Intl.NumberFormat(locale, {\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n          }).format(numValue);\n        }\n        return formatted.replace(/\\.00$/, '');\n      }\n\n      case 'percentage':\n        return new Intl.NumberFormat(locale, {\n          style: 'percent',\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals\n        }).format(numValue / 100);\n\n      case 'number':\n        return new Intl.NumberFormat(locale, {\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals\n        }).format(numValue);\n\n      default:\n        return val?.toString() || '';\n    }\n  };\n\n  // Parse display value to raw number\n  const parseValue = (val) => {\n    if (!val) return 0;\n\n    // Remove currency symbols, commas, and spaces\n    const cleanValue = val\n      .replace(/[^\\d.-]/g, '')\n      .replace(/,/g, '');\n\n    const numValue = parseFloat(cleanValue);\n    return isNaN(numValue) ? 0 : numValue;\n  };\n\n  // Validate input\n  const validateInput = (val) => {\n    const numValue = type === 'text' ? val : parseValue(val);\n\n    if (type === 'text') return true;\n\n    if (!allowNegative && numValue < 0) {\n      setLocalError('Negative values are not allowed');\n      return false;\n    }\n\n    if (min !== undefined && numValue < min) {\n      setLocalError(`Value must be at least ${formatValue(min)}`);\n      return false;\n    }\n\n    if (max !== undefined && numValue > max) {\n      setLocalError(`Value must not exceed ${formatValue(max)}`);\n      return false;\n    }\n\n    setLocalError('');\n    return true;\n  };\n\n  // Handle edit start\n  const handleEdit = () => {\n    if (disabled || isFormula) return;\n\n    setEditingValue(value ? value.toString() : '');\n    setLocalError('');\n\n    if (onEdit) {\n      onEdit(true);\n    }\n  };\n\n  // Handle save\n  const handleSave = () => {\n    const finalValue = type === 'text' ? editingValue : parseValue(editingValue);\n\n    if (!validateInput(editingValue)) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(finalValue);\n    }\n\n    if (onSave) {\n      onSave(finalValue);\n    }\n\n    if (onEdit) {\n      onEdit(false);\n    }\n  };\n\n  // Handle cancel\n  const handleCancel = () => {\n    setEditingValue('');\n    setLocalError('');\n\n    if (onCancel) {\n      onCancel();\n    }\n\n    if (onEdit) {\n      onEdit(false);\n    }\n  };\n\n  // Handle input change\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n\n    if (type !== 'text') {\n      const numericRegex = allowNegative ? /^-?\\d*\\.?\\d*$/ : /^\\d*\\.?\\d*$/;\n      if (numericRegex.test(newValue) || newValue === '') {\n        setEditingValue(newValue);\n      }\n    } else {\n      setEditingValue(newValue);\n    }\n  };\n\n  // Handle key press\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSave();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      handleCancel();\n    } else if (e.key === 'Tab') {\n      e.preventDefault();\n      handleSave();\n    }\n  };\n\n  // Auto-focus input when editing starts\n  useEffect(() => {\n    if (isEditing && inputRef.current && autoFocus) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, [isEditing, autoFocus]);\n\n  // Get variant styles\n  const getVariantStyles = () => {\n    switch (variant) {\n      case 'adjusted':\n        return {\n          container: 'bg-gradient-to-r from-amber-50 to-yellow-50 border-amber-200',\n          text: isFormula ? 'text-amber-900' : 'text-slate-700',\n          hover: 'hover:bg-amber-100 hover:border-amber-300',\n          input: 'border-amber-400 focus:ring-amber-100 focus:border-amber-500',\n          editIcon: 'text-amber-500'\n        };\n      case 'formula':\n        return {\n          container: 'bg-gradient-to-r from-blue-50 to-blue-100 border-blue-200',\n          text: 'text-blue-900',\n          hover: 'cursor-not-allowed',\n          input: 'border-blue-400 focus:ring-blue-100 focus:border-blue-500',\n          editIcon: 'text-blue-500'\n        };\n      default:\n        return {\n          container: 'bg-background border-transparent',\n          text: isFormula ? 'text-blue-900' : 'text-slate-700',\n          hover: 'hover:bg-slate-50 hover:border-slate-200',\n          input: 'border-input focus:ring-ring focus:border-ring',\n          editIcon: 'text-slate-400'\n        };\n    }\n  };\n\n  const styles = getVariantStyles();\n\n  if (isEditing) {\n    return (\n      <div className=\"relative\">\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={editingValue}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          placeholder={placeholder}\n          disabled={loading}\n          className={cn(\n            'w-full px-3 py-2.5 bg-white border-2 rounded-lg text-slate-900 text-right font-mono text-sm',\n            'focus:outline-none focus:ring-4 shadow-lg transition-all duration-200',\n            styles.input,\n            loading && 'animate-pulse',\n            localError && 'border-destructive focus:ring-destructive/20',\n            className\n          )}\n        />\n\n        {/* Action buttons */}\n        <div className=\"absolute -top-2 -right-2 flex gap-1\">\n          <button\n            onClick={handleSave}\n            disabled={loading || !!localError}\n            className={cn(\n              'w-5 h-5 bg-success hover:bg-success/90 text-white rounded-full',\n              'flex items-center justify-center text-xs transition-colors',\n              'disabled:opacity-50 disabled:cursor-not-allowed'\n            )}\n            title=\"Save changes\"\n          >\n            <Check size={12} />\n          </button>\n          <button\n            onClick={handleCancel}\n            disabled={loading}\n            className={cn(\n              'w-5 h-5 bg-destructive hover:bg-destructive/90 text-white rounded-full',\n              'flex items-center justify-center text-xs transition-colors',\n              'disabled:opacity-50 disabled:cursor-not-allowed'\n            )}\n            title=\"Cancel changes\"\n          >\n            <X size={12} />\n          </button>\n        </div>\n\n        {/* Loading indicator */}\n        {loading && (\n          <div className=\"absolute left-2 top-1/2 -translate-y-1/2\">\n            <div className=\"w-3 h-3 border-2 border-muted-foreground border-t-transparent rounded-full animate-spin\" />\n          </div>\n        )}\n\n        {/* Local error */}\n        {localError && (\n          <div className=\"absolute -bottom-6 left-0 right-0 text-xs text-destructive flex items-center gap-1\">\n            <AlertCircle size={10} />\n            {localError}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      onClick={handleEdit}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter' || e.key === ' ') {\n          e.preventDefault();\n          handleEdit();\n        }\n      }}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      className={cn(\n        'px-3 py-2.5 rounded-lg font-mono text-sm transition-all duration-200',\n        'min-h-[40px] flex items-center justify-end relative group',\n        styles.container,\n        !disabled && !isFormula && styles.hover,\n        !disabled && !isFormula && 'cursor-pointer',\n        isFormula && 'font-semibold shadow-sm',\n        disabled && 'opacity-50 cursor-not-allowed',\n        error && 'border-destructive',\n        className\n      )}\n    >\n      <span className={styles.text}>\n        {formatValue(value)}\n      </span>\n\n      {/* Formula indicator */}\n      {isFormula && (\n        <Calculator size={12} className=\"ml-2 text-blue-500/80\" />\n      )}\n\n      {/* Edit icon */}\n      {!isFormula && !disabled && showEditIcon && (\n        <Edit2\n          size={12}\n          className={cn(\n            'ml-2 transition-opacity',\n            isHovered ? 'opacity-60' : 'opacity-0',\n            styles.editIcon\n          )}\n        />\n      )}\n\n      {/* Error indicator */}\n      {error && (\n        <AlertCircle size={12} className=\"ml-2 text-destructive\" />\n      )}\n\n      {/* Loading indicator */}\n      {loading && (\n        <div className=\"ml-2\">\n          <div className=\"w-3 h-3 border-2 border-current border-t-transparent rounded-full animate-spin opacity-50\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditableCell;\n","import { Calculator, TrendingUp, DollarSign, Percent } from 'lucide-react';\nimport React from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst LoadingState = ({\n  type = 'default', // 'default', 'calculation', 'financial', 'inline'\n  size = 'default', // 'sm', 'default', 'lg'\n  message,\n  className,\n  showIcon = true,\n  variant = 'default', // 'default', 'subtle', 'pulsing'\n  ...props\n}) => {\n  // Get appropriate icon based on type\n  const getIcon = () => {\n    switch (type) {\n      case 'calculation':\n        return Calculator;\n      case 'financial':\n        return DollarSign;\n      case 'trend':\n        return TrendingUp;\n      case 'percentage':\n        return Percent;\n      default:\n        return Calculator;\n    }\n  };\n\n  const Icon = getIcon();\n\n  // Size configurations\n  const sizeConfig = {\n    sm: {\n      spinner: 'w-3 h-3 border',\n      icon: 12,\n      text: 'text-xs',\n      gap: 'gap-1',\n      padding: 'p-1'\n    },\n    default: {\n      spinner: 'w-4 h-4 border-2',\n      icon: 16,\n      text: 'text-sm',\n      gap: 'gap-2',\n      padding: 'p-2'\n    },\n    lg: {\n      spinner: 'w-6 h-6 border-2',\n      icon: 20,\n      text: 'text-base',\n      gap: 'gap-3',\n      padding: 'p-3'\n    }\n  };\n\n  const config = sizeConfig[size];\n\n  // Variant styles\n  const variantStyles = {\n    default: 'text-muted-foreground',\n    subtle: 'text-muted-foreground/70',\n    pulsing: 'text-muted-foreground animate-pulse'\n  };\n\n  // Inline variant for table cells and small spaces\n  if (type === 'inline') {\n    return (\n      <div className={cn('flex items-center justify-center', config.gap, className)} {...props}>\n        <div\n          className={cn(\n            config.spinner,\n            'border-muted-foreground border-t-transparent rounded-full animate-spin',\n            variantStyles[variant]\n          )}\n        />\n        {message && (\n          <span className={cn(config.text, variantStyles[variant])}>\n            {message}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  // Default card-style loading state\n  const defaultMessage = {\n    calculation: 'Calculating...',\n    financial: 'Processing financial data...',\n    trend: 'Analyzing trends...',\n    percentage: 'Computing percentages...',\n    default: 'Loading...'\n  };\n\n  const displayMessage = message || defaultMessage[type];\n\n  return (\n    <div\n      className={cn(\n        'flex flex-col items-center justify-center',\n        config.padding,\n        config.gap,\n        'bg-muted/30 rounded-lg border border-dashed border-muted-foreground/30',\n        className\n      )} {...props}\n    >\n      <div className=\"flex items-center gap-2\">\n        {/* Animated spinner */}\n        <div\n          className={cn(\n            config.spinner,\n            'border-muted-foreground border-t-transparent rounded-full animate-spin',\n            variantStyles[variant]\n          )}\n        />\n\n        {/* Icon with subtle animation */}\n        {showIcon && (\n          <Icon\n            size={config.icon}\n            className={cn(\n              'animate-pulse',\n              variantStyles[variant]\n            )}\n          />\n        )}\n      </div>\n\n      {/* Loading message */}\n      {displayMessage && (\n        <p\n          className={cn(\n            config.text,\n            'font-medium text-center',\n            variantStyles[variant]\n          )}\n        >\n          {displayMessage}\n        </p>\n      )}\n    </div>\n  );\n};\n\n// Skeleton component for table cells and consistent spacing\nconst LoadingSkeleton = ({\n  width = 'w-20',\n  height = 'h-6',\n  className,\n  variant = 'default', // 'default', 'currency', 'percentage'\n  ...props\n}) => {\n  const variantClasses = {\n    default: 'bg-muted',\n    currency: 'bg-emerald-100',\n    percentage: 'bg-blue-100'\n  };\n\n  return (\n    <div\n      className={cn(\n        'animate-pulse rounded-md',\n        width,\n        height,\n        variantClasses[variant],\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\n// Pulse component for subtle loading indicators\nconst LoadingPulse = ({\n  children,\n  className,\n  isLoading = false,\n  ...props\n}) => {\n  if (!isLoading) {\n    return children;\n  }\n\n  return (\n    <div className={cn('animate-pulse opacity-50', className)} {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Dots animation for minimal loading states\nconst LoadingDots = ({\n  size = 'default',\n  className,\n  variant = 'default',\n  ...props\n}) => {\n  const sizeClasses = {\n    sm: 'w-1 h-1',\n    default: 'w-1.5 h-1.5',\n    lg: 'w-2 h-2'\n  };\n\n  const variantClasses = {\n    default: 'bg-muted-foreground',\n    primary: 'bg-primary',\n    success: 'bg-success',\n    warning: 'bg-warning'\n  };\n\n  return (\n    <div\n      className={cn('flex items-center gap-1', className)}\n      {...props}\n    >\n      {[0, 1, 2].map((i) => (\n        <div\n          key={i}\n          className={cn(\n            'rounded-full animate-pulse',\n            sizeClasses[size],\n            variantClasses[variant]\n          )}\n          style={{\n            animationDelay: `${i * 0.2}s`,\n            animationDuration: '1.4s'\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\n// Export all components\nexport default LoadingState;\nexport { LoadingSkeleton, LoadingPulse, LoadingDots };\n","import { AlertCircle, CheckCircle, AlertTriangle, Info, X } from 'lucide-react';\nimport React from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst ValidationFeedback = ({\n  type = 'error', // 'error', 'warning', 'success', 'info'\n  message,\n  className,\n  size = 'default', // 'sm', 'default', 'lg'\n  variant = 'default', // 'default', 'inline', 'floating', 'subtle'\n  showIcon = true,\n  dismissible = false,\n  onDismiss,\n  position = 'bottom', // 'top', 'bottom', 'left', 'right' (for floating)\n  children,\n  ...props\n}) => {\n  // Icon mapping\n  const iconMap = {\n    error: AlertCircle,\n    warning: AlertTriangle,\n    success: CheckCircle,\n    info: Info\n  };\n\n  const Icon = iconMap[type];\n\n  // Size configurations\n  const sizeConfig = {\n    sm: {\n      text: 'text-xs',\n      icon: 12,\n      padding: 'p-2',\n      gap: 'gap-1'\n    },\n    default: {\n      text: 'text-sm',\n      icon: 14,\n      padding: 'p-3',\n      gap: 'gap-2'\n    },\n    lg: {\n      text: 'text-base',\n      icon: 16,\n      padding: 'p-4',\n      gap: 'gap-3'\n    }\n  };\n\n  const config = sizeConfig[size];\n\n  // Type-based styling\n  const typeStyles = {\n    error: {\n      bg: 'bg-destructive/10',\n      border: 'border-destructive/20',\n      text: 'text-destructive',\n      icon: 'text-destructive'\n    },\n    warning: {\n      bg: 'bg-warning/10',\n      border: 'border-warning/20',\n      text: 'text-warning-foreground',\n      icon: 'text-warning'\n    },\n    success: {\n      bg: 'bg-success/10',\n      border: 'border-success/20',\n      text: 'text-success-foreground',\n      icon: 'text-success'\n    },\n    info: {\n      bg: 'bg-blue-50',\n      border: 'border-blue-200',\n      text: 'text-blue-700',\n      icon: 'text-blue-500'\n    }\n  };\n\n  const styles = typeStyles[type];\n\n  // Variant-specific classes\n  const getVariantClasses = () => {\n    switch (variant) {\n      case 'inline':\n        return 'flex items-center';\n      case 'floating':\n        return cn(\n          'absolute z-50 shadow-lg rounded-lg',\n          position === 'top' && 'bottom-full mb-2',\n          position === 'bottom' && 'top-full mt-2',\n          position === 'left' && 'right-full mr-2',\n          position === 'right' && 'left-full ml-2'\n        );\n      case 'subtle':\n        return 'border-0 bg-transparent';\n      default:\n        return 'rounded-lg border';\n    }\n  };\n\n  // Don't render if no message and no children\n  if (!message && !children) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        'flex items-start',\n        config.gap,\n        config.padding,\n        styles.bg,\n        styles.border,\n        getVariantClasses(),\n        className\n      )}\n      {...props}\n    >\n      {/* Icon */}\n      {showIcon && Icon && (\n        <Icon\n          size={config.icon}\n          className={cn('flex-shrink-0 mt-0.5', styles.icon)}\n        />\n      )}\n\n      {/* Content */}\n      <div className=\"flex-1 min-w-0\">\n        {message && (\n          <p className={cn(config.text, styles.text, 'font-medium')}>\n            {message}\n          </p>\n        )}\n        {children && (\n          <div className={cn(config.text, styles.text)}>\n            {children}\n          </div>\n        )}\n      </div>\n\n      {/* Dismiss button */}\n      {dismissible && onDismiss && (\n        <button\n          onClick={onDismiss}\n          className={cn(\n            'flex-shrink-0 ml-2 p-1 rounded-full hover:bg-black/10 transition-colors',\n            styles.text\n          )}\n          aria-label=\"Dismiss\"\n        >\n          <X size={config.icon} />\n        </button>\n      )}\n    </div>\n  );\n};\n\n// Field-specific validation component\nconst FieldValidation = ({\n  error,\n  warning,\n  success,\n  info,\n  className,\n  ...props\n}) => {\n  // Determine the highest priority message\n  let type, message;\n\n  if (error) {\n    type = 'error';\n    message = error;\n  } else if (warning) {\n    type = 'warning';\n    message = warning;\n  } else if (success) {\n    type = 'success';\n    message = success;\n  } else if (info) {\n    type = 'info';\n    message = info;\n  } else {\n    return null;\n  }\n\n  return (\n    <ValidationFeedback\n      type={type}\n      message={message}\n      size=\"sm\"\n      variant=\"inline\"\n      className={className}\n      {...props}\n    />\n  );\n};\n\n// List of validation errors/warnings\nconst ValidationList = ({\n  items = [],\n  className,\n  showNumbers = false,\n  ...props\n}) => {\n  if (!items.length) return null;\n\n  return (\n    <div className={cn('space-y-2', className)} {...props}>\n      {items.map((item, index) => (\n        <ValidationFeedback\n          key={index}\n          type={item.type || 'error'}\n          message={showNumbers ? `${index + 1}. ${item.message}` : item.message}\n          size=\"sm\"\n          variant=\"inline\"\n        />\n      ))}\n    </div>\n  );\n};\n\n// Summary validation component for forms\nconst ValidationSummary = ({\n  errors = [],\n  warnings = [],\n  className,\n  title = 'Please fix the following issues:',\n  collapsible = false,\n  ...props\n}) => {\n  const [isCollapsed, setIsCollapsed] = React.useState(collapsible);\n\n  const totalIssues = errors.length + warnings.length;\n\n  if (totalIssues === 0) return null;\n\n  const allItems = [\n    ...errors.map(error => ({ type: 'error', message: error })),\n    ...warnings.map(warning => ({ type: 'warning', message: warning }))\n  ];\n\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <h4 className=\"text-sm font-semibold text-foreground\">\n          {title}\n        </h4>\n        {collapsible && (\n          <button\n            onClick={() => setIsCollapsed(!isCollapsed)}\n            className=\"text-xs text-muted-foreground hover:text-foreground transition-colors\"\n          >\n            {isCollapsed ? `Show ${totalIssues} issues` : 'Hide'}\n          </button>\n        )}\n      </div>\n\n      {/* Issues list */}\n      {!isCollapsed && (\n        <ValidationList\n          items={allItems}\n          showNumbers\n        />\n      )}\n\n      {/* Collapsed summary */}\n      {isCollapsed && (\n        <p className=\"text-sm text-muted-foreground\">\n          {errors.length > 0 && `${errors.length} error${errors.length > 1 ? 's' : ''}`}\n          {errors.length > 0 && warnings.length > 0 && ', '}\n          {warnings.length > 0 && `${warnings.length} warning${warnings.length > 1 ? 's' : ''}`}\n        </p>\n      )}\n    </div>\n  );\n};\n\n// Real-time validation status indicator\nconst ValidationStatus = ({\n  isValidating = false,\n  isValid = true,\n  className,\n  size = 'default',\n  ...props\n}) => {\n  const sizeClasses = {\n    sm: 'w-3 h-3',\n    default: 'w-4 h-4',\n    lg: 'w-5 h-5'\n  };\n\n  if (isValidating) {\n    return (\n      <div\n        className={cn(\n          'border-2 border-blue-500 border-t-transparent rounded-full animate-spin',\n          sizeClasses[size],\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n\n  if (isValid) {\n    return (\n      <CheckCircle\n        className={cn('text-success', className)}\n        size={size === 'sm' ? 12 : size === 'lg' ? 20 : 16}\n        {...props}\n      />\n    );\n  }\n\n  return (\n    <AlertCircle\n      className={cn('text-destructive', className)}\n      size={size === 'sm' ? 12 : size === 'lg' ? 20 : 16}\n      {...props}\n    />\n  );\n};\n\nexport default ValidationFeedback;\nexport { FieldValidation, ValidationList, ValidationSummary, ValidationStatus };\n","import { Calculator, TrendingUp, DollarSign } from 'lucide-react';\nimport React, { useState } from 'react';\n\nimport {\n  FinancialInput,\n  EditableCell,\n  CurrencyInput,\n  LoadingState,\n  LoadingSkeleton,\n  LoadingDots,\n  ValidationFeedback,\n  FieldValidation,\n  ValidationSummary\n} from './ui';\nimport { Card } from './ui/Card';\n\nconst FinancialInputsDemo = () => {\n  const [values, setValues] = useState({\n    revenue: 1250000,\n    expenses: 850000,\n    growth: 12.5,\n    margin: 32.1,\n    editableValue: 450000,\n    currency: 2400000\n  });\n\n  const [isLoading, setIsLoading] = useState({\n    calculation: false,\n    validation: false\n  });\n\n  const [errors, setErrors] = useState([]);\n  const [isEditingCell, setIsEditingCell] = useState(false);\n\n  // Simulate calculation loading\n  const simulateCalculation = () => {\n    setIsLoading(prev => ({ ...prev, calculation: true }));\n    setTimeout(() => {\n      setIsLoading(prev => ({ ...prev, calculation: false }));\n    }, 2000);\n  };\n\n  const handleValueChange = (key) => (newValue) => {\n    setValues(prev => ({ ...prev, [key]: newValue }));\n  };\n\n  const validateInput = (value, min, max) => {\n    const newErrors = [];\n    if (value < min) newErrors.push(`Value must be at least ${min}`);\n    if (value > max) newErrors.push(`Value must not exceed ${max}`);\n    setErrors(newErrors);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 p-8\">\n      <div className=\"max-w-6xl mx-auto space-y-8\">\n        {/* Header */}\n        <div className=\"text-center space-y-4\">\n          <div className=\"flex items-center justify-center gap-3\">\n            <div className=\"p-3 bg-blue-100 rounded-xl\">\n              <Calculator className=\"w-8 h-8 text-blue-600\" />\n            </div>\n            <h1 className=\"text-3xl font-bold text-slate-900\">Enhanced Financial Input Components</h1>\n          </div>\n          <p className=\"text-lg text-slate-600 max-w-2xl mx-auto\">\n            Professional financial input components with smart formatting, validation, and seamless user experience\n          </p>\n        </div>\n\n        {/* Main Demo Grid */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n\n          {/* Financial Input Component */}\n          <Card className=\"p-6 space-y-6\">\n            <div className=\"flex items-center gap-3\">\n              <DollarSign className=\"w-5 h-5 text-emerald-600\" />\n              <h2 className=\"text-xl font-semibold text-slate-900\">FinancialInput Component</h2>\n            </div>\n\n            <div className=\"space-y-4\">\n              <FinancialInput\n                label=\"Annual Revenue\"\n                value={values.revenue}\n                onChange={handleValueChange('revenue')}\n                type=\"currency\"\n                currency=\"USD\"\n                description=\"Enter the company's annual revenue\"\n                required\n                onValidation={(isValid, message) => console.log('Validation:', isValid, message)}\n              />\n\n              <FinancialInput\n                label=\"Operating Expenses\"\n                value={values.expenses}\n                onChange={handleValueChange('expenses')}\n                type=\"currency\"\n                currency=\"USD\"\n                error={values.expenses > values.revenue ? 'Expenses cannot exceed revenue' : null}\n              />\n\n              <FinancialInput\n                label=\"Growth Rate\"\n                value={values.growth}\n                onChange={handleValueChange('growth')}\n                type=\"percentage\"\n                suffix=\"%\"\n                decimals={1}\n                description=\"Year-over-year growth percentage\"\n              />\n\n              <FinancialInput\n                label=\"Profit Margin\"\n                value={values.margin}\n                onChange={handleValueChange('margin')}\n                type=\"number\"\n                suffix=\"%\"\n                decimals={2}\n                min={0}\n                max={100}\n                loading={isLoading.validation}\n              />\n            </div>\n          </Card>\n\n          {/* Currency Input Component */}\n          <Card className=\"p-6 space-y-6\">\n            <div className=\"flex items-center gap-3\">\n              <TrendingUp className=\"w-5 h-5 text-blue-600\" />\n              <h2 className=\"text-xl font-semibold text-slate-900\">CurrencyInput Component</h2>\n            </div>\n\n            <div className=\"space-y-4\">\n              <CurrencyInput\n                label=\"Market Valuation\"\n                value={values.currency}\n                onChange={handleValueChange('currency')}\n                currency=\"USD\"\n                abbreviateDisplay={true}\n                showTrend={true}\n                previousValue={2100000}\n                description=\"Company market valuation with trend indicator\"\n              />\n\n              <CurrencyInput\n                label=\"Investment Amount (EUR)\"\n                value={850000}\n                onChange={(val) => console.log('EUR Value:', val)}\n                currency=\"EUR\"\n                locale=\"de-DE\"\n                size=\"lg\"\n              />\n\n              <CurrencyInput\n                label=\"Small Investment\"\n                value={25000}\n                onChange={(val) => console.log('Small Investment:', val)}\n                currency=\"USD\"\n                size=\"sm\"\n                variant=\"filled\"\n              />\n\n              <CurrencyInput\n                label=\"Japanese Investment\"\n                value={15000000}\n                onChange={(val) => console.log('JPY Value:', val)}\n                currency=\"JPY\"\n                locale=\"ja-JP\"\n                abbreviateDisplay={true}\n              />\n            </div>\n          </Card>\n\n          {/* Editable Cells */}\n          <Card className=\"p-6 space-y-6\">\n            <h2 className=\"text-xl font-semibold text-slate-900\">EditableCell Component</h2>\n\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-3 gap-4 p-4 bg-slate-50 rounded-lg\">\n                <div className=\"text-sm font-medium text-slate-600\">Account</div>\n                <div className=\"text-sm font-medium text-slate-600\">Current</div>\n                <div className=\"text-sm font-medium text-slate-600\">Adjusted</div>\n\n                <div className=\"text-sm text-slate-700\">Revenue</div>\n                <EditableCell\n                  value={values.editableValue}\n                  onChange={handleValueChange('editableValue')}\n                  type=\"currency\"\n                  isEditing={isEditingCell}\n                  onEdit={setIsEditingCell}\n                  variant=\"default\"\n                />\n                <EditableCell\n                  value={values.editableValue * 1.15}\n                  onChange={(val) => console.log('Adjusted:', val)}\n                  type=\"currency\"\n                  variant=\"adjusted\"\n                />\n\n                <div className=\"text-sm text-slate-700\">Growth Rate</div>\n                <EditableCell\n                  value={15.5}\n                  onChange={(val) => console.log('Growth:', val)}\n                  type=\"percentage\"\n                />\n                <EditableCell\n                  value={18.2}\n                  onChange={(val) => console.log('Adj Growth:', val)}\n                  type=\"percentage\"\n                  variant=\"adjusted\"\n                />\n\n                <div className=\"text-sm text-slate-700\">Calculated</div>\n                <EditableCell\n                  value={values.editableValue * 0.25}\n                  isFormula={true}\n                  variant=\"formula\"\n                />\n                <EditableCell\n                  value={values.editableValue * 1.15 * 0.25}\n                  isFormula={true}\n                  variant=\"formula\"\n                />\n              </div>\n            </div>\n          </Card>\n\n          {/* Loading States */}\n          <Card className=\"p-6 space-y-6\">\n            <h2 className=\"text-xl font-semibold text-slate-900\">Loading States</h2>\n\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <LoadingState\n                  type=\"calculation\"\n                  message=\"Calculating DCF...\"\n                  size=\"default\"\n                />\n                <LoadingState\n                  type=\"financial\"\n                  message=\"Processing data...\"\n                  size=\"default\"\n                  variant=\"subtle\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Inline Loading States</h4>\n                <div className=\"flex items-center gap-4\">\n                  <LoadingState type=\"inline\" message=\"Loading...\" size=\"sm\" />\n                  <LoadingDots size=\"default\" variant=\"primary\" />\n                  <LoadingSkeleton width=\"w-24\" height=\"h-4\" variant=\"currency\" />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Interactive Loading Demo</h4>\n                <button\n                  onClick={simulateCalculation}\n                  disabled={isLoading.calculation}\n                  className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white rounded-lg transition-colors\"\n                >\n                  {isLoading.calculation ? 'Calculating...' : 'Run Calculation'}\n                </button>\n                {isLoading.calculation && (\n                  <LoadingState\n                    type=\"calculation\"\n                    message=\"Computing financial metrics...\"\n                    size=\"sm\"\n                    variant=\"pulsing\"\n                  />\n                )}\n              </div>\n            </div>\n          </Card>\n\n          {/* Validation Feedback */}\n          <Card className=\"p-6 space-y-6 lg:col-span-2\">\n            <h2 className=\"text-xl font-semibold text-slate-900\">Validation & Feedback</h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Individual Validation Messages</h4>\n\n                <ValidationFeedback\n                  type=\"error\"\n                  message=\"Revenue cannot be negative\"\n                  size=\"default\"\n                />\n\n                <ValidationFeedback\n                  type=\"warning\"\n                  message=\"Growth rate seems unusually high\"\n                  size=\"default\"\n                />\n\n                <ValidationFeedback\n                  type=\"success\"\n                  message=\"All financial metrics are within expected ranges\"\n                  size=\"default\"\n                />\n\n                <ValidationFeedback\n                  type=\"info\"\n                  message=\"Consider adjusting the discount rate based on market conditions\"\n                  size=\"default\"\n                />\n              </div>\n\n              <div className=\"space-y-4\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Field Validation</h4>\n\n                <div className=\"space-y-2\">\n                  <label htmlFor=\"test-validation\" className=\"text-sm font-medium text-slate-700\">Test Validation</label>\n                  <input\n                    id=\"test-validation\"\n                    type=\"number\"\n                    value={-50}\n                    onChange={(e) => validateInput(parseFloat(e.target.value), 0, 1000)}\n                    className=\"w-full px-3 py-2 border border-input rounded-lg\"\n                  />\n                  <FieldValidation\n                    error={errors.length > 0 ? errors[0] : null}\n                    info={errors.length === 0 ? 'Value is within acceptable range' : null}\n                  />\n                </div>\n\n                <ValidationSummary\n                  errors={[\n                    'Operating expenses exceed revenue',\n                    'Growth rate must be between 0% and 100%'\n                  ]}\n                  warnings={[\n                    'Margin seems low for this industry',\n                    'Consider reviewing the assumptions'\n                  ]}\n                  collapsible={true}\n                />\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Usage Examples */}\n        <Card className=\"p-6\">\n          <h2 className=\"text-xl font-semibold text-slate-900 mb-4\">Quick Usage Examples</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 text-sm\">\n            <div className=\"p-4 bg-slate-50 rounded-lg\">\n              <h4 className=\"font-medium text-slate-700 mb-2\">Basic Currency Input</h4>\n              <code className=\"text-xs text-slate-600 block whitespace-pre\">{`<CurrencyInput\n  value={1000000}\n  onChange={setValue}\n  currency=\"USD\"\n  label=\"Revenue\"\n/>`}\n              </code>\n            </div>\n\n            <div className=\"p-4 bg-slate-50 rounded-lg\">\n              <h4 className=\"font-medium text-slate-700 mb-2\">Editable Table Cell</h4>\n              <code className=\"text-xs text-slate-600 block whitespace-pre\">{`<EditableCell\n  value={value}\n  onChange={onChange}\n  type=\"currency\"\n  variant=\"adjusted\"\n/>`}\n              </code>\n            </div>\n\n            <div className=\"p-4 bg-slate-50 rounded-lg\">\n              <h4 className=\"font-medium text-slate-700 mb-2\">Validation Feedback</h4>\n              <code className=\"text-xs text-slate-600 block whitespace-pre\">{`<FieldValidation\n  error=\"Invalid input\"\n  warning=\"Check value\"\n  success=\"Valid input\"\n/>`}\n              </code>\n            </div>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default FinancialInputsDemo;\n"],"names":["EditableCell","value","onChange","onSave","onCancel","className","type","placeholder","isFormula","isEditing","onEdit","disabled","loading","error","locale","currency","decimals","allowNegative","min","max","autoFocus","showEditIcon","variant","_props","editingValue","setEditingValue","useState","localError","setLocalError","isHovered","setIsHovered","inputRef","useRef","formatValue","val","numValue","parseFloat","isNaN","formatted","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","absValue","Math","abs","replace","toString","parseValue","cleanValue","handleEdit","handleSave","finalValue","validateInput","handleCancel","handleChange","e","newValue","target","test","handleKeyPress","key","preventDefault","useEffect","current","focus","select","styles","container","text","hover","input","editIcon","getVariantStyles","jsxs","children","jsx","ref","onKeyDown","cn","onClick","title","Check","size","X","AlertCircle","role","tabIndex","onMouseEnter","onMouseLeave","Calculator","Edit2","LoadingState","message","showIcon","props","Icon","DollarSign","TrendingUp","Percent","getIcon","config","sm","spinner","icon","gap","padding","default","lg","variantStyles","subtle","pulsing","displayMessage","calculation","financial","trend","percentage","LoadingSkeleton","width","height","LoadingDots","sizeClasses","variantClasses","primary","success","warning","map","i","animationDelay","animationDuration","ValidationFeedback","dismissible","onDismiss","position","AlertTriangle","CheckCircle","info","Info","bg","border","getVariantClasses","FieldValidation","ValidationList","items","showNumbers","length","item","index","ValidationSummary","errors","warnings","collapsible","isCollapsed","setIsCollapsed","React","totalIssues","allItems","FinancialInputsDemo","values","setValues","revenue","expenses","growth","margin","editableValue","isLoading","setIsLoading","validation","setErrors","isEditingCell","setIsEditingCell","handleValueChange","prev","Card","FinancialInput","label","description","required","onValidation","isValid","suffix","CurrencyInput","abbreviateDisplay","showTrend","previousValue","setTimeout","htmlFor","id","newErrors","push"],"mappings":"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"}