{"version":3,"file":"EnhancedScenarioAnalysis-CliW5f3Q.js","sources":["../../src/components/PrivateAnalysis/EnhancedScenarioAnalysis.jsx"],"sourcesContent":["import { motion } from 'framer-motion';\nimport {\n  BarChart3, Plus, Trash2,\n  Play, AlertTriangle\n} from 'lucide-react';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar } from 'recharts';\n\nconst EnhancedScenarioAnalysis = ({ data, _onDataChange, calculateDCF, lboModelingEngine }) => {\n  const [_activeView, _setActiveView] = useState('scenarios');\n  const [scenarios, setScenarios] = useState([\n    {\n      id: 1,\n      name: 'Base Case',\n      probability: 40,\n      revenueGrowth: 5.0,\n      marginExpansion: 0.5,\n      exitMultiple: 10.0,\n      capexIntensity: 3.0,\n      isBase: true\n    },\n    {\n      id: 2,\n      name: 'Bull Case',\n      probability: 30,\n      revenueGrowth: 8.0,\n      marginExpansion: 1.5,\n      exitMultiple: 12.0,\n      capexIntensity: 2.5,\n      isBase: false\n    },\n    {\n      id: 3,\n      name: 'Bear Case',\n      probability: 30,\n      revenueGrowth: 2.0,\n      marginExpansion: -0.5,\n      exitMultiple: 8.0,\n      capexIntensity: 4.0,\n      isBase: false\n    }\n  ]);\n\n  const [analysisSettings, setAnalysisSettings] = useState({\n    modelType: 'dcf', // 'dcf', 'lbo', '3statement'\n    outputMetric: 'enterpriseValue',\n    includeCorrelations: false,\n    numSimulations: 1000\n  });\n\n  const [results, setResults] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n\n  const formatCurrency = useCallback((value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    return `${(value || 0).toFixed(1)}%`;\n  }, []);\n\n  const runScenarioAnalysis = useCallback(async() => {\n    setIsCalculating(true);\n\n    try {\n      const scenarioResults = [];\n\n      for (const scenario of scenarios) {\n        let result = null;\n\n        if (analysisSettings.modelType === 'dcf') {\n          // Run DCF analysis for each scenario\n          const scenarioData = {\n            ...data,\n            statements: {\n              ...data.statements,\n              incomeStatement: {\n                ...data.statements.incomeStatement,\n                // Apply scenario assumptions to modify data\n                totalRevenue: data.statements.incomeStatement.totalRevenue?.map((rev, idx) => {\n                  if (idx === 0) return rev; // Base year unchanged\n                  return rev * Math.pow(1 + scenario.revenueGrowth / 100, idx);\n                })\n              }\n            }\n          };\n\n          result = calculateDCF ? calculateDCF(scenarioData) : null;\n        } else if (analysisSettings.modelType === 'lbo' && lboModelingEngine) {\n          // Run LBO analysis for each scenario\n          const lboInputs = {\n            symbol: data.symbol || 'COMPANY',\n            companyName: data.companyName || 'Target Company',\n            purchasePrice: 500000000,\n            ebitda: 75000000,\n            revenue: 500000000,\n            assumptions: {\n              operating: {\n                ebitdaGrowthRate: scenario.revenueGrowth / 100,\n                capexAsPercentOfRevenue: scenario.capexIntensity / 100\n              },\n              exit: {\n                exitMultiple: scenario.exitMultiple\n              }\n            }\n          };\n\n          result = lboModelingEngine.buildLBOModel(lboInputs);\n        }\n\n        scenarioResults.push({\n          ...scenario,\n          result,\n          enterpriseValue: result?.enterpriseValue || result?.baseCase?.exitAnalysis?.enterpriseValue || 0,\n          equityValue: result?.equityValue || result?.baseCase?.exitAnalysis?.equityProceeds || 0,\n          irr: result?.irr || result?.baseCase?.returnsAnalysis?.irr || 0,\n          moic: result?.moic || result?.baseCase?.returnsAnalysis?.moic || 0\n        });\n      }\n\n      // Calculate probability-weighted metrics\n      const weightedValue = scenarioResults.reduce((sum, s) =>\n        sum + (s.enterpriseValue * s.probability / 100), 0\n      );\n\n      const valueRange = {\n        min: Math.min(...scenarioResults.map(s => s.enterpriseValue)),\n        max: Math.max(...scenarioResults.map(s => s.enterpriseValue)),\n        range: Math.max(...scenarioResults.map(s => s.enterpriseValue)) -\n               Math.min(...scenarioResults.map(s => s.enterpriseValue))\n      };\n\n      // Risk metrics\n      const standardDeviation = Math.sqrt(\n        scenarioResults.reduce((sum, s) => {\n          const deviation = s.enterpriseValue - weightedValue;\n          return sum + (deviation * deviation * s.probability / 100);\n        }, 0)\n      );\n\n      const coefficientOfVariation = standardDeviation / weightedValue;\n\n      setResults({\n        scenarios: scenarioResults,\n        summary: {\n          weightedValue,\n          valueRange,\n          standardDeviation,\n          coefficientOfVariation,\n          probabilityOfPositiveReturn: scenarioResults\n            .filter(s => s.enterpriseValue > (data.currentMarketCap || 1000000000))\n            .reduce((sum, s) => sum + s.probability, 0)\n        },\n        chartData: scenarioResults.map(s => ({\n          name: s.name,\n          value: s.enterpriseValue,\n          probability: s.probability,\n          irr: s.irr * 100,\n          moic: s.moic\n        }))\n      });\n\n    } catch (error) {\n      console.error('Scenario analysis error:', error);\n      alert(`Error running scenario analysis: ${error.message}`);\n    } finally {\n      setIsCalculating(false);\n    }\n  }, [scenarios, analysisSettings, data, calculateDCF, lboModelingEngine]);\n\n  const addScenario = useCallback(() => {\n    const newScenario = {\n      id: Date.now(),\n      name: `Scenario ${scenarios.length + 1}`,\n      probability: Math.max(0, 100 - scenarios.reduce((sum, s) => sum + s.probability, 0)),\n      revenueGrowth: 5.0,\n      marginExpansion: 0.0,\n      exitMultiple: 10.0,\n      capexIntensity: 3.0,\n      isBase: false\n    };\n    setScenarios(prev => [...prev, newScenario]);\n  }, [scenarios]);\n\n  const updateScenario = useCallback((id, field, value) => {\n    setScenarios(prev => prev.map(scenario =>\n      scenario.id === id ? { ...scenario, [field]: parseFloat(value) || value } : scenario\n    ));\n  }, []);\n\n  const deleteScenario = useCallback((id) => {\n    setScenarios(prev => prev.filter(scenario => scenario.id !== id && !scenario.isBase));\n  }, []);\n\n  const totalProbability = useMemo(() =>\n    scenarios.reduce((sum, s) => sum + s.probability, 0), [scenarios]\n  );\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <BarChart3 className=\"text-purple-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Enhanced Scenario Analysis</h2>\n            <p className=\"text-gray-600\">Cross-model scenario planning & risk assessment</p>\n          </div>\n        </div>\n\n        <div className=\"flex space-x-3\">\n          <motion.button\n            onClick={runScenarioAnalysis}\n            disabled={isCalculating || totalProbability !== 100}\n            className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n              isCalculating || totalProbability !== 100\n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                : 'bg-purple-600 hover:bg-purple-700 text-white'\n            }`}\n            whileHover={!isCalculating && totalProbability === 100 ? { scale: 1.02 } : {}}\n          >\n            <Play size={18} />\n            <span>{isCalculating ? 'Running...' : 'Run Analysis'}</span>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Model Selection & Settings */}\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div>\n            <label htmlFor=\"modelType\" className=\"block text-sm font-medium text-gray-700 mb-2\">Model Type</label>\n            <select\n              id=\"modelType\"\n              value={analysisSettings.modelType}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, modelType: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            >\n              <option value=\"dcf\">DCF Valuation</option>\n              <option value=\"lbo\">LBO Analysis</option>\n              <option value=\"3statement\">3-Statement Model</option>\n            </select>\n          </div>\n\n          <div>\n            <label htmlFor=\"outputMetric\" className=\"block text-sm font-medium text-gray-700 mb-2\">Output Metric</label>\n            <select\n              id=\"outputMetric\"\n              value={analysisSettings.outputMetric}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, outputMetric: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            >\n              <option value=\"enterpriseValue\">Enterprise Value</option>\n              <option value=\"equityValue\">Equity Value</option>\n              <option value=\"irr\">IRR</option>\n              <option value=\"moic\">MOIC</option>\n            </select>\n          </div>\n\n          <div>\n            <label htmlFor=\"simulations\" className=\"block text-sm font-medium text-gray-700 mb-2\">Simulations</label>\n            <input\n              id=\"simulations\"\n              type=\"number\"\n              value={analysisSettings.numSimulations}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, numSimulations: parseInt(e.target.value) || 1000 }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            />\n          </div>\n\n          <div className=\"flex items-end\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={analysisSettings.includeCorrelations}\n                onChange={(e) => setAnalysisSettings(prev => ({ ...prev, includeCorrelations: e.target.checked }))}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Include Correlations</span>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Probability Warning */}\n      {totalProbability !== 100 && (\n        <div className=\"mb-6 p-3 bg-amber-50 border border-amber-200 rounded-lg flex items-center\">\n          <AlertTriangle className=\"text-amber-500 mr-2\" size={20} />\n          <span className=\"text-amber-800\">\n            Total probability is {totalProbability}%. Adjust scenarios to sum to 100%.\n          </span>\n        </div>\n      )}\n\n      {/* Scenarios Table */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold\">Scenarios</h3>\n          <motion.button\n            onClick={addScenario}\n            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <Plus size={16} />\n            <span>Add Scenario</span>\n          </motion.button>\n        </div>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead>\n              <tr className=\"border-b-2 border-gray-300\">\n                <th className=\"text-left py-3 px-4\">Scenario</th>\n                <th className=\"text-right py-3 px-4\">Probability (%)</th>\n                <th className=\"text-right py-3 px-4\">Revenue Growth (%)</th>\n                <th className=\"text-right py-3 px-4\">Margin Expansion (bps)</th>\n                <th className=\"text-right py-3 px-4\">Exit Multiple</th>\n                <th className=\"text-right py-3 px-4\">CapEx Intensity (%)</th>\n                <th className=\"text-center py-3 px-4\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {scenarios.map((scenario) => (\n                <tr key={scenario.id} className={`border-b border-gray-200 ${scenario.isBase ? 'bg-blue-50' : ''}`}>\n                  <td className=\"py-3 px-4\">\n                    <input\n                      type=\"text\"\n                      value={scenario.name}\n                      onChange={(e) => updateScenario(scenario.id, 'name', e.target.value)}\n                      disabled={scenario.isBase}\n                      className={`border border-gray-300 rounded px-2 py-1 ${scenario.isBase ? 'bg-gray-100' : ''}`}\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"1\"\n                      value={scenario.probability}\n                      onChange={(e) => updateScenario(scenario.id, 'probability', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.revenueGrowth}\n                      onChange={(e) => updateScenario(scenario.id, 'revenueGrowth', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.marginExpansion}\n                      onChange={(e) => updateScenario(scenario.id, 'marginExpansion', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.exitMultiple}\n                      onChange={(e) => updateScenario(scenario.id, 'exitMultiple', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.capexIntensity}\n                      onChange={(e) => updateScenario(scenario.id, 'capexIntensity', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-center py-3 px-4\">\n                    {!scenario.isBase && (\n                      <button\n                        onClick={() => deleteScenario(scenario.id)}\n                        className=\"text-red-600 hover:text-red-800\"\n                      >\n                        <Trash2 size={16} />\n                      </button>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Results */}\n      {results && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"space-y-6\"\n        >\n          {/* Summary Metrics */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {formatCurrency(results.summary.weightedValue)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Expected Value</div>\n            </div>\n            <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {formatCurrency(results.summary.valueRange.max)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Best Case</div>\n            </div>\n            <div className=\"bg-red-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-red-600\">\n                {formatCurrency(results.summary.valueRange.min)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Worst Case</div>\n            </div>\n            <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {formatPercent(results.summary.probabilityOfPositiveReturn)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Success Probability</div>\n            </div>\n          </div>\n\n          {/* Scenario Results Chart */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Scenario Results</h3>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={results.chartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis tickFormatter={(value) => formatCurrency(value)} />\n                  <Tooltip formatter={(value) => [formatCurrency(value), 'Enterprise Value']} />\n                  <Bar dataKey=\"value\" fill=\"#8884d8\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Risk Analysis */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h4 className=\"font-semibold mb-3\">Risk Metrics</h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span>Standard Deviation:</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.standardDeviation)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Coefficient of Variation:</span>\n                  <span className=\"font-medium\">{(results.summary.coefficientOfVariation * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Value at Risk (5%):</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.valueRange.min)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Upside Potential:</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.valueRange.range)}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h4 className=\"font-semibold mb-3\">Scenario Returns</h4>\n              <div className=\"space-y-2 text-sm\">\n                {results.scenarios.map((scenario) => (\n                  <div key={scenario.id} className=\"flex justify-between\">\n                    <span>{scenario.name}:</span>\n                    <span className=\"font-medium\">\n                      {analysisSettings.outputMetric === 'irr' ? formatPercent(scenario.irr) :\n                        analysisSettings.outputMetric === 'moic' ? `${scenario.moic.toFixed(1)}x` :\n                          formatCurrency(scenario[analysisSettings.outputMetric])}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {!results && (\n        <div className=\"text-center py-12 text-gray-500\">\n          <BarChart3 size={48} className=\"mx-auto mb-4 opacity-50\" />\n          <p>Configure scenarios and run analysis to see results</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EnhancedScenarioAnalysis;\n"],"names":["EnhancedScenarioAnalysis","data","_onDataChange","calculateDCF","lboModelingEngine","_activeView","_setActiveView","useState","scenarios","setScenarios","id","name","probability","revenueGrowth","marginExpansion","exitMultiple","capexIntensity","isBase","analysisSettings","setAnalysisSettings","modelType","outputMetric","includeCorrelations","numSimulations","results","setResults","isCalculating","setIsCalculating","formatCurrency","useCallback","value","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercent","toFixed","runScenarioAnalysis","async","scenarioResults","scenario","result","scenarioData","statements","incomeStatement","totalRevenue","map","rev","idx","Math","pow","lboInputs","symbol","companyName","purchasePrice","ebitda","revenue","assumptions","operating","ebitdaGrowthRate","capexAsPercentOfRevenue","exit","buildLBOModel","push","enterpriseValue","baseCase","exitAnalysis","equityValue","equityProceeds","irr","returnsAnalysis","moic","weightedValue","reduce","sum","s","valueRange","min","max","range","standardDeviation","sqrt","deviation","summary","coefficientOfVariation","probabilityOfPositiveReturn","filter","currentMarketCap","chartData","error","alert","message","addScenario","newScenario","Date","now","length","prev","updateScenario","field","parseFloat","deleteScenario","totalProbability","useMemo","jsxs","className","children","jsx","BarChart3","size","motion","button","onClick","disabled","whileHover","scale","Play","htmlFor","onChange","e","target","type","parseInt","checked","AlertTriangle","Plus","step","Trash2","div","initial","opacity","y","animate","ResponsiveContainer","width","height","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","tickFormatter","Tooltip","formatter","Bar","fill"],"mappings":"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"}