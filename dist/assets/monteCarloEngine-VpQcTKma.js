import{a as t}from"./apiLogger-D987Un6Q.js";const e=new class{constructor(){this.workers=[],this.isRunning=!1,this.currentSimulation=null}async runDCFSimulation(e,r,a={}){const{iterations:n=1e4,confidenceLevel:o=.95,correlationMatrix:s=null,randomSeed:i=null}=a;t.log("INFO","Starting DCF Monte Carlo simulation",{iterations:n,variables:Object.keys(r).length}),this.isRunning=!0;const l=Date.now();try{i&&this.setSeed(i);const c=this.generateCorrelatedSamples(r,n,s),h=[],u=a.onProgress;for(let t=0;t<n;t++){if(!this.isRunning)throw new Error("Simulation cancelled");const a=this.createScenarioInputs(e,c[t],r),o=this.calculateDCFScenario(a);h.push({iteration:t+1,pricePerShare:o.pricePerShare,enterpriseValue:o.enterpriseValue,upside:o.upside,inputs:a}),u&&t%Math.floor(n/100)===0&&u(t/n*100)}const m=this.analyzeResults(h,o),p=Date.now();return t.log("INFO","DCF Monte Carlo simulation completed",{iterations:n,duration:p-l,meanPrice:m.statistics.mean}),{type:"DCF_MONTE_CARLO",timestamp:(new Date).toISOString(),parameters:{iterations:n,confidenceLevel:o,randomSeed:i},results:h,analysis:m,duration:p-l}}catch(c){throw this.isRunning=!1,t.log("ERROR","DCF Monte Carlo simulation failed",{error:c.message}),c}finally{this.isRunning=!1}}async runLBOSimulation(e,r,a={}){const{iterations:n=1e4,confidenceLevel:o=.95,correlationMatrix:s=null,randomSeed:i=null}=a;t.log("INFO","Starting LBO Monte Carlo simulation",{iterations:n,variables:Object.keys(r).length}),this.isRunning=!0;const l=Date.now();try{i&&this.setSeed(i);const c=this.generateCorrelatedSamples(r,n,s),h=[],u=a.onProgress;for(let t=0;t<n;t++){if(!this.isRunning)throw new Error("Simulation cancelled");const a=this.createScenarioInputs(e,c[t],r),o=this.calculateLBOScenario(a);h.push({iteration:t+1,irr:o.irr,moic:o.moic,totalReturn:o.totalReturn,inputs:a}),u&&t%Math.floor(n/100)===0&&u(t/n*100)}const m=this.analyzeResults(h,o,["irr","moic","totalReturn"]),p=Date.now();return t.log("INFO","LBO Monte Carlo simulation completed",{iterations:n,duration:p-l,meanIRR:m.statistics.irr?.mean}),{type:"LBO_MONTE_CARLO",timestamp:(new Date).toISOString(),parameters:{iterations:n,confidenceLevel:o,randomSeed:i},results:h,analysis:m,duration:p-l}}catch(c){throw this.isRunning=!1,t.log("ERROR","LBO Monte Carlo simulation failed",{error:c.message}),c}finally{this.isRunning=!1}}generateCorrelatedSamples(t,e,r){const a=Object.keys(t),n=a.length,o=[],s=[];for(let i=0;i<e;i++){const e={};a.forEach(r=>{const a=t[r];e[r]=this.sampleFromDistribution(a)}),s.push(e)}if(r&&r.length===n){const t=this.choleskyDecomposition(r);for(let r=0;r<e;r++){const e={},n=a.map(t=>s[r][t]),i=this.applyCorrelation(n,t);a.forEach((t,r)=>{e[t]=i[r]}),o.push(e)}}else o.push(...s);return o}sampleFromDistribution(t){const{type:e,parameters:r}=t;switch(e){case"normal":return this.normalRandom(r.mean,r.stdDev);case"lognormal":{const t=this.normalRandom(r.mu,r.sigma);return Math.exp(t)}case"uniform":return r.min+Math.random()*(r.max-r.min);case"triangular":return this.triangularRandom(r.min,r.mode,r.max);case"beta":return this.betaRandom(r.alpha,r.beta);case"exponential":return this.exponentialRandom(r.lambda);case"weibull":return this.weibullRandom(r.shape,r.scale);case"pareto":return this.paretoRandom(r.scale,r.shape);case"student_t":return this.studentTRandom(r.df);case"chi_squared":return this.chiSquaredRandom(r.df);default:throw new Error(`Unsupported distribution type: ${e}`)}}exponentialRandom(t){return-Math.log(1-Math.random())/t}weibullRandom(t,e){const r=Math.random();return e*Math.pow(-Math.log(1-r),1/t)}paretoRandom(t,e){const r=Math.random();return t/Math.pow(r,1/e)}studentTRandom(t){if(t<=0)throw new Error("Degrees of freedom must be positive");const e=this.normalRandom(0,1),r=this.chiSquaredRandom(t);return e/Math.sqrt(r/t)}chiSquaredRandom(t){if(t<=0)throw new Error("Degrees of freedom must be positive");return 2*this.gammaRandom(t/2)}normalRandom(t=0,e=1){if(void 0!==this.spareNormal){const r=this.spareNormal;return this.spareNormal=void 0,r*e+t}const r=Math.random(),a=Math.random(),n=Math.sqrt(-2*Math.log(r))*Math.cos(2*Math.PI*a),o=Math.sqrt(-2*Math.log(r))*Math.sin(2*Math.PI*a);return this.spareNormal=o,n*e+t}triangularRandom(t,e,r){const a=Math.random();return a<(e-t)/(r-t)?t+Math.sqrt(a*(r-t)*(e-t)):r-Math.sqrt((1-a)*(r-t)*(r-e))}betaRandom(t,e){const r=this.gammaRandom(t);return r/(r+this.gammaRandom(e))}gammaRandom(t){if(!(t>=1))return this.gammaRandom(t+1)*Math.pow(Math.random(),1/t);{const e=t-1/3,r=1/Math.sqrt(9*e);for(;;){let t,a;do{t=this.normalRandom(),a=1+r*t}while(a<=0);a*=a*a;const n=Math.random();if(n<1-.0331*t*t*t*t)return e*a;if(Math.log(n)<.5*t*t+e*(1-a+Math.log(a)))return e*a}}}choleskyDecomposition(t){const e=t.length,r=Array(e).fill().map(()=>Array(e).fill(0));for(let a=0;a<e;a++)for(let e=0;e<=a;e++)if(a===e){let a=0;for(let t=0;t<e;t++)a+=r[e][t]*r[e][t];r[e][e]=Math.sqrt(t[e][e]-a)}else{let n=0;for(let t=0;t<e;t++)n+=r[a][t]*r[e][t];r[a][e]=(t[a][e]-n)/r[e][e]}return r}applyCorrelation(t,e){const r=t.length,a=Array(r).fill(0);for(let n=0;n<r;n++)for(let r=0;r<=n;r++)a[n]+=e[n][r]*t[r];return a}createScenarioInputs(t,e,r){const a={...t};return Object.entries(e).forEach(([t,e])=>{const n=r[t];n.applyTo?a[n.applyTo]=e:a[t]=e}),a}calculateDCFScenario(t){const{currentRevenue:e=1e9,revenueGrowthRate:r=.1,fcfMargin:a=.15,wacc:n=.1,terminalGrowthRate:o=.025,sharesOutstanding:s=1e8,currentPrice:i=100}=t;let l=0,c=e;for(let m=1;m<=5;m++)c*=1+r,l+=c*a/Math.pow(1+n,m);const h=l+c*a*(1+o)/(n-o)/Math.pow(1+n,5),u=h/s;return{pricePerShare:u,enterpriseValue:h,upside:(u-i)/i*100}}calculateLBOScenario(t){const{ebitda:e=1e8,ebitdaGrowthRate:r=.05,exitMultiple:a=10,debtMultiple:n=5,holdingPeriod:o=5}=t,s=e*n,i=10*e-s,l=e*Math.pow(1+r,o)*a-.5*s,c=l/i;return{irr:Math.pow(c,1/o)-1,moic:c,totalReturn:l}}analyzeResults(t,e,r=["pricePerShare","enterpriseValue","upside"]){const a={statistics:{},percentiles:{},confidenceIntervals:{},riskMetrics:{},distributionTests:{},correlations:{}};return r.forEach(r=>{const n=t.map(t=>t[r]).filter(t=>null!==t&&!isNaN(t)).sort((t,e)=>t-e);if(0===n.length)return;const o=n.reduce((t,e)=>t+e,0)/n.length,s=n.reduce((t,e)=>t+Math.pow(e-o,2),0)/n.length,i=Math.sqrt(s),l=Math.sqrt(s*n.length/(n.length-1));a.statistics[r]={mean:o,median:this.percentile(n,.5),mode:this.calculateMode(n),stdDev:i,sampleStdDev:l,variance:s,min:n[0],max:n[n.length-1],range:n[n.length-1]-n[0],count:n.length,trimmedMean:this.calculateTrimmedMean(n,.1),mad:this.calculateMAD(n),iqr:this.percentile(n,.75)-this.percentile(n,.25)},a.percentiles[r]={p1:this.percentile(n,.01),p5:this.percentile(n,.05),p10:this.percentile(n,.1),p25:this.percentile(n,.25),p50:this.percentile(n,.5),p75:this.percentile(n,.75),p90:this.percentile(n,.9),p95:this.percentile(n,.95),p99:this.percentile(n,.99)};const c=1-e,h=this.percentile(n,c/2),u=this.percentile(n,1-c/2);a.confidenceIntervals[r]={level:e,lowerBound:h,upperBound:u,width:u-h,bootstrapCI:this.calculateBootstrapCI(n,e)};const m=this.percentile(n,.05),p=this.percentile(n,.01),d=n.slice(0,Math.floor(.05*n.length)).reduce((t,e)=>t+e,0)/Math.floor(.05*n.length),M=n.slice(0,Math.floor(.01*n.length)).reduce((t,e)=>t+e,0)/Math.floor(.01*n.length);a.riskMetrics[r]={var95:m,var99:p,cvar95:d,cvar99:M,skewness:this.calculateSkewness(n,o,i),kurtosis:this.calculateKurtosis(n,o,i),excessKurtosis:this.calculateKurtosis(n,o,i)-3,expectedShortfall:d,maxDrawdown:this.calculateMaxDrawdown(n),sharpeRatio:this.calculateSharpeRatio(n,.02),sortinoRatio:this.calculateSortinoRatio(n,o)},a.distributionTests[r]={jarqueBera:this.jarqueBeraTest(n),kolmogorovSmirnov:this.ksTestNormality(n),shapiroWilk:n.length<=5e3?this.shapiroWilkTest(n):null}}),r.length>1&&(a.correlations=this.calculateCorrelationMatrix(t,r)),a}calculateMode(t){const e={};t.forEach(t=>{const r=Math.round(100*t)/100;e[r]=(e[r]||0)+1});const r=Math.max(...Object.values(e)),a=Object.keys(e).filter(t=>e[t]===r);return 1===a.length?parseFloat(a[0]):null}calculateTrimmedMean(t,e=.1){const r=Math.floor(t.length*e),a=t.slice(r,-r||void 0);return a.reduce((t,e)=>t+e,0)/a.length}calculateMAD(t){const e=this.percentile(t,.5),r=t.map(t=>Math.abs(t-e)).sort((t,e)=>t-e);return this.percentile(r,.5)}calculateBootstrapCI(t,e,r=1e3){const a=[];for(let o=0;o<r;o++){const e=[];for(let r=0;r<t.length;r++)e.push(t[Math.floor(Math.random()*t.length)]);a.push(e.reduce((t,e)=>t+e,0)/e.length)}a.sort((t,e)=>t-e);const n=1-e;return{lowerBound:this.percentile(a,n/2),upperBound:this.percentile(a,1-n/2)}}calculateMaxDrawdown(t){let e=t[0],r=0;for(const a of t){a>e&&(e=a);const t=(e-a)/e;t>r&&(r=t)}return r}calculateSharpeRatio(t,e=.02){const r=t.reduce((t,e)=>t+e,0)/t.length,a=t.reduce((t,e)=>t+Math.pow(e-r,2),0)/t.length,n=Math.sqrt(a);return n>0?(r-e)/n:0}calculateSortinoRatio(t,e){const r=t.map(t=>t-e),a=r.filter(t=>t<0);if(0===a.length)return 1/0;const n=Math.sqrt(a.reduce((t,e)=>t+e*e,0)/a.length),o=r.reduce((t,e)=>t+e,0)/r.length;return n>0?o/n:0}jarqueBeraTest(t){const e=t.length,r=t.reduce((t,e)=>t+e,0)/e,a=t.reduce((t,e)=>t+Math.pow(e-r,2),0)/e,n=Math.sqrt(a),o=this.calculateSkewness(t,r,n),s=this.calculateKurtosis(t,r,n),i=e/6*(Math.pow(o,2)+Math.pow(s-3,2)/4),l=1-this.chiSquaredCDF(i,2);return{statistic:i,pValue:l,isNormal:l>.05}}chiSquaredCDF(t,e){return t<=0?0:this.incompleteGamma(e/2,t/2)}incompleteGamma(t,e){if(0===e)return 0;if(e<0)return 0;if(t<=0)return 0;if(e<t+1){let r=1/t,a=1/t;for(let n=1;n<100&&(a*=e/(t+n),r+=a,!(Math.abs(a)<1e-15));n++);return Math.exp(-e+t*Math.log(e)-this.logGamma(t))*r}{let r=e+1-t,a=1e30,n=1/r,o=n;for(let e=1;e<=100;e++){const s=-e*(e-t);r+=2,n=s*n+r,Math.abs(n)<1e-30&&(n=1e-30),a=r+s/a,Math.abs(a)<1e-30&&(a=1e-30),n=1/n;const i=n*a;if(o*=i,Math.abs(i-1)<1e-15)break}return 1-Math.exp(-e+t*Math.log(e)-this.logGamma(t))*o}}logGamma(t){const e=[76.18009172947144,-86.50532032941676,24.01409824083091,-1.231739572450155,.001208650973866179,-5395239384953e-18];let r=0,a=1.0000000001900151,n=t,o=n=t,s=t+5.5;for(s-=(t+.5)*Math.log(s);r<6;r++)a+=e[r]/++o;return-s+Math.log(2.506628274631001*a/n)}ksTestNormality(t){const e=t.length,r=t.reduce((t,e)=>t+e,0)/e,a=t.reduce((t,e)=>t+Math.pow(e-r,2),0)/e,n=Math.sqrt(a);let o=0;for(let i=0;i<e;i++){const a=(i+1)/e,s=this.normalCDF((t[i]-r)/n),l=Math.abs(a-s);l>o&&(o=l)}const s=1.36/Math.sqrt(e);return{statistic:o,critical:s,isNormal:o<s}}normalCDF(t){return.5*(1+this.erf(t/Math.sqrt(2)))}erf(t){const e=t<0?-1:1,r=1/(1+.3275911*(t=Math.abs(t)));return e*(1-((((1.061405429*r-1.453152027)*r+1.421413741)*r-.284496736)*r+.254829592)*r*Math.exp(-t*t))}shapiroWilkTest(t){const e=t.length;if(e<3||e>5e3)return null;const r=[...t].sort((t,e)=>t-e),a=t.reduce((t,e)=>t+e,0)/e;let n=0;for(let s=0;s<e;s++)n+=Math.pow(r[s]-a,2);const o=0/n;return{statistic:o,isNormal:o>.9}}calculateCorrelationMatrix(t,e){const r={};for(let a=0;a<e.length;a++){r[e[a]]={};for(let n=0;n<e.length;n++)if(a===n)r[e[a]][e[n]]=1;else{const o=t.map(t=>t[e[a]]).filter(t=>null!==t&&!isNaN(t)),s=t.map(t=>t[e[n]]).filter(t=>null!==t&&!isNaN(t));r[e[a]][e[n]]=this.calculateCorrelation(o,s)}}return r}calculateCorrelation(t,e){if(t.length!==e.length||0===t.length)return 0;const r=t.length,a=t.reduce((t,e)=>t+e,0)/r,n=e.reduce((t,e)=>t+e,0)/r;let o=0,s=0,i=0;for(let c=0;c<r;c++){const r=t[c]-a,l=e[c]-n;o+=r*l,s+=r*r,i+=l*l}const l=Math.sqrt(s*i);return l>0?o/l:0}percentile(t,e){const r=e*(t.length-1),a=Math.floor(r),n=Math.ceil(r),o=r-a;return a===n?t[a]:t[a]*(1-o)+t[n]*o}calculateSkewness(t,e,r){const a=t.length;return a/((a-1)*(a-2))*t.reduce((t,a)=>t+Math.pow((a-e)/r,3),0)}calculateKurtosis(t,e,r){const a=t.length;return a*(a+1)/((a-1)*(a-2)*(a-3))*t.reduce((t,a)=>t+Math.pow((a-e)/r,4),0)-3*Math.pow(a-1,2)/((a-2)*(a-3))}setSeed(t){this.seed=t,this.random=()=>(this.seed=(9301*this.seed+49297)%233280,this.seed/233280),Math.random=this.random}stopSimulation(){this.isRunning=!1}isSimulationRunning(){return this.isRunning}};export{e as m};
//# sourceMappingURL=monteCarloEngine-VpQcTKma.js.map
