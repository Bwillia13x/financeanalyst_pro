{"version":3,"file":"Analytics-CdBlttA3.js","sources":["../../src/services/analyticsService.js","../../src/components/Analytics/UserAnalyticsDashboard.jsx","../../src/pages/Analytics.jsx"],"sourcesContent":["/**\n * User Analytics and Usage Tracking Service\n * Comprehensive analytics for user behavior, feature usage, and performance monitoring\n */\n\nclass AnalyticsService {\n  constructor() {\n    this.events = new Map();\n    this.userSessions = new Map();\n    this.featureUsage = new Map();\n    this.performanceMetrics = new Map();\n    this.userBehavior = new Map();\n    this.isInitialized = false;\n    this.currentSession = null;\n    this.trackingEnabled = true;\n\n    // Configuration\n    this.config = {\n      sessionTimeout: 30 * 60 * 1000, // 30 minutes\n      batchSize: 50,\n      flushInterval: 60 * 1000, // 1 minute\n      storageKey: 'financeanalyst_analytics',\n      enableLocalStorage: true,\n      enableRemoteTracking: false\n    };\n\n    // Event queue for batch processing\n    this.eventQueue = [];\n    this.flushTimer = null;\n\n    // Initialize service\n    this.initialize();\n  }\n\n  /**\n   * Initialize analytics service\n   */\n  initialize() {\n    try {\n      // Load stored data\n      this.loadStoredData();\n\n      // Start new session\n      this.startSession();\n\n      // Set up periodic data flushing\n      this.startFlushTimer();\n\n      // Set up page visibility tracking\n      this.setupVisibilityTracking();\n\n      // Set up performance monitoring\n      this.setupPerformanceMonitoring();\n\n      this.isInitialized = true;\n      this.trackEvent('analytics_initialized', { timestamp: Date.now() });\n\n      console.log('AnalyticsService initialized successfully');\n    } catch (error) {\n      console.error('Failed to initialize AnalyticsService:', error);\n    }\n  }\n\n  /**\n   * Load stored analytics data from localStorage\n   */\n  loadStoredData() {\n    if (!this.config.enableLocalStorage) return;\n\n    try {\n      const stored = localStorage.getItem(this.config.storageKey);\n      if (stored) {\n        const data = JSON.parse(stored);\n\n        // Restore feature usage data\n        if (data.featureUsage) {\n          this.featureUsage = new Map(Object.entries(data.featureUsage));\n        }\n\n        // Restore user behavior data\n        if (data.userBehavior) {\n          this.userBehavior = new Map(Object.entries(data.userBehavior));\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load stored analytics data:', error);\n    }\n  }\n\n  /**\n   * Save analytics data to localStorage\n   */\n  saveData() {\n    if (!this.config.enableLocalStorage) return;\n\n    try {\n      const data = {\n        featureUsage: Object.fromEntries(this.featureUsage),\n        userBehavior: Object.fromEntries(this.userBehavior),\n        lastSaved: Date.now()\n      };\n\n      localStorage.setItem(this.config.storageKey, JSON.stringify(data));\n    } catch (error) {\n      console.error('Failed to save analytics data:', error);\n    }\n  }\n\n  /**\n   * Start a new user session\n   */\n  startSession() {\n    const sessionId = `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n    this.currentSession = {\n      id: sessionId,\n      startTime: Date.now(),\n      lastActivity: Date.now(),\n      pageViews: 0,\n      events: [],\n      features: new Set(),\n      errors: [],\n      performance: {\n        loadTime: performance.timing ? (performance.timing.loadEventEnd - performance.timing.navigationStart) : 0,\n        interactions: 0,\n        scrollDepth: 0\n      }\n    };\n\n    this.userSessions.set(sessionId, this.currentSession);\n    this.trackEvent('session_started', { sessionId });\n  }\n\n  /**\n   * End current session\n   */\n  endSession() {\n    if (!this.currentSession) return;\n\n    const sessionDuration = Date.now() - this.currentSession.startTime;\n\n    this.trackEvent('session_ended', {\n      sessionId: this.currentSession.id,\n      duration: sessionDuration,\n      pageViews: this.currentSession.pageViews,\n      eventsCount: this.currentSession.events.length,\n      featuresUsed: Array.from(this.currentSession.features)\n    });\n\n    this.currentSession = null;\n  }\n\n  /**\n   * Track a custom event\n   */\n  trackEvent(eventName, properties = {}) {\n    if (!this.trackingEnabled) return;\n\n    const event = {\n      id: `event_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      name: eventName,\n      timestamp: Date.now(),\n      sessionId: this.currentSession?.id,\n      properties: {\n        ...properties,\n        url: window.location.href,\n        userAgent: navigator.userAgent,\n        screenSize: `${screen.width}x${screen.height}`,\n        viewport: `${window.innerWidth}x${window.innerHeight}`\n      }\n    };\n\n    // Add to event queue\n    this.eventQueue.push(event);\n\n    // Add to current session\n    if (this.currentSession) {\n      this.currentSession.events.push(event);\n      this.currentSession.lastActivity = Date.now();\n    }\n\n    // Store in events map\n    this.events.set(event.id, event);\n\n    // Process for feature usage tracking\n    this.processFeatureUsage(eventName, properties);\n\n    // Process for user behavior analysis\n    this.processUserBehavior(eventName, properties);\n\n    // Flush if queue is full\n    if (this.eventQueue.length >= this.config.batchSize) {\n      this.flushEvents();\n    }\n  }\n\n  /**\n   * Track page view\n   */\n  trackPageView(page, properties = {}) {\n    if (this.currentSession) {\n      this.currentSession.pageViews++;\n    }\n\n    this.trackEvent('page_view', {\n      page,\n      title: document.title,\n      referrer: document.referrer,\n      ...properties\n    });\n  }\n\n  /**\n   * Track feature usage\n   */\n  trackFeatureUsage(feature, action = 'used', properties = {}) {\n    const key = `${feature}_${action}`;\n\n    // Update feature usage stats\n    const usage = this.featureUsage.get(key) || {\n      feature,\n      action,\n      count: 0,\n      firstUsed: Date.now(),\n      lastUsed: Date.now(),\n      sessions: new Set(),\n      avgTimeSpent: 0,\n      totalTimeSpent: 0\n    };\n\n    usage.count++;\n    usage.lastUsed = Date.now();\n\n    if (this.currentSession) {\n      usage.sessions.add(this.currentSession.id);\n      this.currentSession.features.add(feature);\n    }\n\n    this.featureUsage.set(key, usage);\n\n    this.trackEvent('feature_usage', {\n      feature,\n      action,\n      usageCount: usage.count,\n      ...properties\n    });\n  }\n\n  /**\n   * Track user interaction\n   */\n  trackInteraction(element, action, properties = {}) {\n    if (this.currentSession) {\n      this.currentSession.performance.interactions++;\n    }\n\n    this.trackEvent('user_interaction', {\n      element,\n      action,\n      ...properties\n    });\n  }\n\n  /**\n   * Track error occurrences\n   */\n  trackError(error, context = {}) {\n    const errorData = {\n      message: error.message,\n      stack: error.stack,\n      type: error.name,\n      context,\n      timestamp: Date.now()\n    };\n\n    if (this.currentSession) {\n      this.currentSession.errors.push(errorData);\n    }\n\n    this.trackEvent('error_occurred', errorData);\n  }\n\n  /**\n   * Track performance metrics\n   */\n  trackPerformance(metric, value, properties = {}) {\n    const performanceData = {\n      metric,\n      value,\n      timestamp: Date.now(),\n      ...properties\n    };\n\n    this.performanceMetrics.set(`${metric}_${Date.now()}`, performanceData);\n    this.trackEvent('performance_metric', performanceData);\n  }\n\n  /**\n   * Process feature usage patterns\n   */\n  processFeatureUsage(eventName, properties) {\n    if (eventName === 'feature_usage') {\n      const { feature, action: _action } = properties;\n\n      // Track feature adoption over time\n      const adoptionKey = `adoption_${feature}`;\n      const adoption = this.userBehavior.get(adoptionKey) || {\n        type: 'feature_adoption',\n        feature,\n        firstUsage: Date.now(),\n        usageDays: new Set(),\n        totalUsage: 0\n      };\n\n      adoption.totalUsage++;\n      adoption.usageDays.add(new Date().toDateString());\n      this.userBehavior.set(adoptionKey, adoption);\n    }\n  }\n\n  /**\n   * Process user behavior patterns\n   */\n  processUserBehavior(eventName, properties) {\n    // Track navigation patterns\n    if (eventName === 'page_view') {\n      this.trackNavigationPattern(properties.page);\n    }\n\n    // Track workflow patterns\n    if (eventName === 'feature_usage') {\n      this.trackWorkflowPattern(properties.feature, properties.action);\n    }\n\n    // Track time-based patterns\n    this.trackTimePattern(eventName);\n  }\n\n  /**\n   * Track navigation patterns\n   */\n  trackNavigationPattern(page) {\n    const navKey = 'navigation_pattern';\n    const pattern = this.userBehavior.get(navKey) || {\n      type: 'navigation',\n      sequences: [],\n      pageFrequency: new Map(),\n      currentSequence: []\n    };\n\n    // Update page frequency\n    const pageCount = pattern.pageFrequency.get(page) || 0;\n    pattern.pageFrequency.set(page, pageCount + 1);\n\n    // Track navigation sequence\n    pattern.currentSequence.push({\n      page,\n      timestamp: Date.now()\n    });\n\n    // Keep sequence length manageable\n    if (pattern.currentSequence.length > 10) {\n      pattern.sequences.push([...pattern.currentSequence]);\n      pattern.currentSequence = pattern.currentSequence.slice(-3);\n    }\n\n    this.userBehavior.set(navKey, pattern);\n  }\n\n  /**\n   * Track workflow patterns\n   */\n  trackWorkflowPattern(feature, action) {\n    const workflowKey = 'workflow_pattern';\n    const workflow = this.userBehavior.get(workflowKey) || {\n      type: 'workflow',\n      sequences: [],\n      featureChains: new Map(),\n      currentChain: []\n    };\n\n    workflow.currentChain.push({\n      feature,\n      action,\n      timestamp: Date.now()\n    });\n\n    // Analyze feature chains\n    if (workflow.currentChain.length >= 2) {\n      const chainKey = workflow.currentChain.slice(-2).map(item => `${item.feature}_${item.action}`).join(' -> ');\n      const chainCount = workflow.featureChains.get(chainKey) || 0;\n      workflow.featureChains.set(chainKey, chainCount + 1);\n    }\n\n    // Keep chain length manageable\n    if (workflow.currentChain.length > 20) {\n      workflow.sequences.push([...workflow.currentChain]);\n      workflow.currentChain = workflow.currentChain.slice(-5);\n    }\n\n    this.userBehavior.set(workflowKey, workflow);\n  }\n\n  /**\n   * Track time-based usage patterns\n   */\n  trackTimePattern(_eventName) {\n    const timeKey = 'time_pattern';\n    const pattern = this.userBehavior.get(timeKey) || {\n      type: 'time_usage',\n      hourlyActivity: new Array(24).fill(0),\n      dailyActivity: new Array(7).fill(0),\n      monthlyActivity: new Array(12).fill(0),\n      peakHours: [],\n      totalSessions: 0\n    };\n\n    const now = new Date();\n    pattern.hourlyActivity[now.getHours()]++;\n    pattern.dailyActivity[now.getDay()]++;\n    pattern.monthlyActivity[now.getMonth()]++;\n\n    this.userBehavior.set(timeKey, pattern);\n  }\n\n  /**\n   * Set up page visibility tracking\n   */\n  setupVisibilityTracking() {\n    let visibilityStart = Date.now();\n\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        const timeVisible = Date.now() - visibilityStart;\n        this.trackEvent('page_hidden', { timeVisible });\n      } else {\n        visibilityStart = Date.now();\n        this.trackEvent('page_visible');\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n  }\n\n  /**\n   * Set up performance monitoring\n   */\n  setupPerformanceMonitoring() {\n    // Monitor initial page load\n    if (performance.timing) {\n      window.addEventListener('load', () => {\n        const timing = performance.timing;\n        const loadTime = timing.loadEventEnd - timing.navigationStart;\n        const domReady = timing.domContentLoadedEventEnd - timing.navigationStart;\n\n        this.trackPerformance('page_load_time', loadTime);\n        this.trackPerformance('dom_ready_time', domReady);\n      });\n    }\n\n    // Monitor long tasks\n    if ('PerformanceObserver' in window) {\n      try {\n        const observer = new PerformanceObserver((list) => {\n          list.getEntries().forEach((entry) => {\n            if (entry.duration > 50) { // Tasks longer than 50ms\n              this.trackPerformance('long_task', entry.duration, {\n                startTime: entry.startTime,\n                name: entry.name\n              });\n            }\n          });\n        });\n        observer.observe({ entryTypes: ['longtask'] });\n      } catch {\n        // PerformanceObserver not supported\n      }\n    }\n  }\n\n  /**\n   * Start periodic event flushing\n   */\n  startFlushTimer() {\n    this.flushTimer = setInterval(() => {\n      this.flushEvents();\n      this.saveData();\n    }, this.config.flushInterval);\n  }\n\n  /**\n   * Flush events to storage/remote endpoint\n   */\n  flushEvents() {\n    if (this.eventQueue.length === 0) return;\n\n    const events = [...this.eventQueue];\n    this.eventQueue = [];\n\n    // Save to local storage\n    this.saveData();\n\n    // Send to remote endpoint if enabled\n    if (this.config.enableRemoteTracking) {\n      this.sendToRemote(events);\n    }\n\n    console.log(`Flushed ${events.length} analytics events`);\n  }\n\n  /**\n   * Send events to remote analytics endpoint\n   */\n  async sendToRemote(events) {\n    try {\n      // This would typically send to your analytics backend\n      console.log('Would send events to remote endpoint:', events.length);\n    } catch (error) {\n      console.error('Failed to send events to remote endpoint:', error);\n      // Re-queue events for retry\n      this.eventQueue.unshift(...events);\n    }\n  }\n\n  /**\n   * Get analytics dashboard data\n   */\n  getDashboardData() {\n    return {\n      summary: this.getSummaryMetrics(),\n      featureUsage: this.getFeatureUsageMetrics(),\n      userBehavior: this.getUserBehaviorMetrics(),\n      performance: this.getPerformanceMetrics(),\n      sessions: this.getSessionMetrics(),\n      trends: this.getTrendAnalysis()\n    };\n  }\n\n  /**\n   * Get summary metrics\n   */\n  getSummaryMetrics() {\n    const totalEvents = this.events.size;\n    const totalSessions = this.userSessions.size;\n    const activeFeaturesCount = this.featureUsage.size;\n    const errorCount = Array.from(this.userSessions.values())\n      .reduce((sum, session) => sum + session.errors.length, 0);\n\n    return {\n      totalEvents,\n      totalSessions,\n      activeFeaturesCount,\n      errorCount,\n      averageSessionLength: this.getAverageSessionLength(),\n      mostUsedFeature: this.getMostUsedFeature(),\n      currentSession: this.currentSession\n    };\n  }\n\n  /**\n   * Get feature usage metrics\n   */\n  getFeatureUsageMetrics() {\n    const features = Array.from(this.featureUsage.values())\n      .sort((a, b) => b.count - a.count);\n\n    return {\n      topFeatures: features.slice(0, 10),\n      totalFeatures: features.length,\n      featureAdoption: this.calculateFeatureAdoption(),\n      unusedFeatures: this.getUnusedFeatures()\n    };\n  }\n\n  /**\n   * Get user behavior metrics\n   */\n  getUserBehaviorMetrics() {\n    const navigation = this.userBehavior.get('navigation_pattern');\n    const workflow = this.userBehavior.get('workflow_pattern');\n    const timePattern = this.userBehavior.get('time_pattern');\n\n    return {\n      navigation: navigation ? {\n        topPages: Array.from(navigation.pageFrequency.entries())\n          .sort((a, b) => b[1] - a[1])\n          .slice(0, 10),\n        navigationSequences: navigation.sequences.slice(-10)\n      } : null,\n      workflow: workflow ? {\n        topWorkflows: Array.from(workflow.featureChains.entries())\n          .sort((a, b) => b[1] - a[1])\n          .slice(0, 10),\n        workflowSequences: workflow.sequences.slice(-5)\n      } : null,\n      timePattern: timePattern || null\n    };\n  }\n\n  /**\n   * Get performance metrics\n   */\n  getPerformanceMetrics() {\n    const metrics = Array.from(this.performanceMetrics.values());\n\n    return {\n      averageLoadTime: this.calculateAverageMetric(metrics, 'page_load_time'),\n      averageDomReady: this.calculateAverageMetric(metrics, 'dom_ready_time'),\n      longTasks: metrics.filter(m => m.metric === 'long_task').length,\n      performanceTrends: this.getPerformanceTrends(metrics)\n    };\n  }\n\n  /**\n   * Get session metrics\n   */\n  getSessionMetrics() {\n    const sessions = Array.from(this.userSessions.values());\n\n    return {\n      totalSessions: sessions.length,\n      averageDuration: this.getAverageSessionLength(),\n      averagePageViews: sessions.reduce((sum, s) => sum + s.pageViews, 0) / sessions.length,\n      bounceRate: this.calculateBounceRate(sessions),\n      sessionDistribution: this.getSessionDistribution(sessions)\n    };\n  }\n\n  /**\n   * Get trend analysis\n   */\n  getTrendAnalysis() {\n    const oneDay = 24 * 60 * 60 * 1000;\n    const oneWeek = 7 * oneDay;\n\n    return {\n      dailyGrowth: this.calculateGrowthRate(oneDay),\n      weeklyGrowth: this.calculateGrowthRate(oneWeek),\n      featureAdoptionTrend: this.getFeatureAdoptionTrend(),\n      usagePatternChanges: this.getUsagePatternChanges()\n    };\n  }\n\n  // Helper methods for calculations\n  getAverageSessionLength() {\n    const sessions = Array.from(this.userSessions.values());\n    if (sessions.length === 0) return 0;\n\n    const totalDuration = sessions.reduce((sum, session) => {\n      const duration = session.lastActivity - session.startTime;\n      return sum + duration;\n    }, 0);\n\n    return totalDuration / sessions.length;\n  }\n\n  getMostUsedFeature() {\n    const features = Array.from(this.featureUsage.values());\n    if (features.length === 0) return null;\n\n    return features.reduce((max, feature) =>\n      feature.count > max.count ? feature : max\n    );\n  }\n\n  calculateFeatureAdoption() {\n    // This would calculate adoption rates over time\n    return {\n      rate: 0.75, // Placeholder\n      trend: 'increasing'\n    };\n  }\n\n  getUnusedFeatures() {\n    // This would identify features that haven't been used\n    return [];\n  }\n\n  calculateAverageMetric(metrics, metricName) {\n    const filtered = metrics.filter(m => m.metric === metricName);\n    if (filtered.length === 0) return 0;\n\n    return filtered.reduce((sum, m) => sum + m.value, 0) / filtered.length;\n  }\n\n  getPerformanceTrends(_metrics) {\n    // This would analyze performance trends over time\n    return {\n      loadTimetrend: 'stable',\n      errorRatetrend: 'decreasing'\n    };\n  }\n\n  calculateBounceRate(sessions) {\n    const singlePageSessions = sessions.filter(s => s.pageViews <= 1).length;\n    return sessions.length > 0 ? singlePageSessions / sessions.length : 0;\n  }\n\n  getSessionDistribution(sessions) {\n    const distribution = {\n      short: 0, // < 1 minute\n      medium: 0, // 1-10 minutes\n      long: 0 // > 10 minutes\n    };\n\n    sessions.forEach(session => {\n      const duration = session.lastActivity - session.startTime;\n      const minutes = duration / (60 * 1000);\n\n      if (minutes < 1) distribution.short++;\n      else if (minutes < 10) distribution.medium++;\n      else distribution.long++;\n    });\n\n    return distribution;\n  }\n\n  calculateGrowthRate(_timeframe) {\n    // This would calculate growth rate over the specified timeframe\n    return Math.random() * 20 - 10; // Placeholder: -10% to +10%\n  }\n\n  getFeatureAdoptionTrend() {\n    // This would analyze feature adoption trends\n    return { trend: 'positive', rate: 15 };\n  }\n\n  getUsagePatternChanges() {\n    // This would identify changes in usage patterns\n    return [];\n  }\n\n  /**\n   * Enable/disable tracking\n   */\n  setTrackingEnabled(enabled) {\n    this.trackingEnabled = enabled;\n    if (enabled) {\n      this.trackEvent('tracking_enabled');\n    } else {\n      this.trackEvent('tracking_disabled');\n    }\n  }\n\n  /**\n   * Clear all analytics data\n   */\n  clearData() {\n    this.events.clear();\n    this.userSessions.clear();\n    this.featureUsage.clear();\n    this.performanceMetrics.clear();\n    this.userBehavior.clear();\n    this.eventQueue = [];\n\n    if (this.config.enableLocalStorage) {\n      localStorage.removeItem(this.config.storageKey);\n    }\n\n    this.trackEvent('analytics_data_cleared');\n  }\n\n  /**\n   * Cleanup and shutdown\n   */\n  cleanup() {\n    if (this.flushTimer) {\n      clearInterval(this.flushTimer);\n    }\n\n    this.endSession();\n    this.flushEvents();\n    this.saveData();\n\n    console.log('AnalyticsService cleaned up');\n  }\n}\n\n// Export singleton instance\nexport default new AnalyticsService();\n","import { motion } from 'framer-motion';\nimport {\n  BarChart3,\n  Users,\n  Clock,\n  Activity,\n  Target,\n  Eye,\n  Zap,\n  Calendar\n} from 'lucide-react';\nimport React, { useState, useEffect } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  PieChart,\n  Pie,\n  Cell,\n  Area,\n  AreaChart\n} from 'recharts';\n\nimport analyticsService from '../../services/analyticsService';\n\n/**\n * Comprehensive user analytics and usage tracking dashboard\n */\n\nconst UserAnalyticsDashboard = ({ className = '' }) => {\n  const [dashboardData, setDashboardData] = useState(null);\n  const [selectedTimeframe, setSelectedTimeframe] = useState('7d');\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadDashboardData();\n\n    // Set up auto-refresh\n    const interval = setInterval(loadDashboardData, 30000); // Refresh every 30 seconds\n    return () => clearInterval(interval);\n  }, [selectedTimeframe]);\n\n  const loadDashboardData = () => {\n    setIsLoading(true);\n\n    // Simulate loading delay for real-world feel\n    setTimeout(() => {\n      const data = analyticsService.getDashboardData();\n      setDashboardData(data);\n      setIsLoading(false);\n    }, 500);\n  };\n\n  const formatDuration = (ms) => {\n    const minutes = Math.floor(ms / 60000);\n    const seconds = Math.floor((ms % 60000) / 1000);\n    return `${minutes}m ${seconds}s`;\n  };\n\n  const formatNumber = (num) => {\n    if (num >= 1000000) return `${(num / 1000000).toFixed(1)}M`;\n    if (num >= 1000) return `${(num / 1000).toFixed(1)}K`;\n    return num.toString();\n  };\n\n  const getGrowthColor = (value) => {\n    if (value > 0) return 'text-green-600 dark:text-green-400';\n    if (value < 0) return 'text-red-600 dark:text-red-400';\n    return 'text-slate-600 dark:text-slate-400';\n  };\n\n  const generateFeatureUsageChart = () => {\n    if (!dashboardData?.featureUsage?.topFeatures) return [];\n\n    return dashboardData.featureUsage.topFeatures.slice(0, 8).map(feature => ({\n      name: feature.feature.replace('_', ' ').toUpperCase(),\n      usage: feature.count,\n      sessions: feature.sessions.size\n    }));\n  };\n\n  const generateTimePatternChart = () => {\n    if (!dashboardData?.userBehavior?.timePattern?.hourlyActivity) return [];\n\n    return dashboardData.userBehavior.timePattern.hourlyActivity.map((activity, hour) => ({\n      hour: `${hour}:00`,\n      activity\n    }));\n  };\n\n  const generateSessionDistributionChart = () => {\n    if (!dashboardData?.sessions?.sessionDistribution) return [];\n\n    const dist = dashboardData.sessions.sessionDistribution;\n    return [\n      { name: 'Short (< 1m)', value: dist.short, color: '#ef4444' },\n      { name: 'Medium (1-10m)', value: dist.medium, color: '#f59e0b' },\n      { name: 'Long (> 10m)', value: dist.long, color: '#10b981' }\n    ];\n  };\n\n  if (isLoading) {\n    return (\n      <div className={`bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6 ${className}`}>\n        <div className=\"animate-pulse\">\n          <div className=\"h-6 bg-slate-200 dark:bg-slate-700 rounded mb-4\" />\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n            {[...Array(4)].map((_, i) => (\n              <div key={i} className=\"h-24 bg-slate-200 dark:bg-slate-700 rounded\" />\n            ))}\n          </div>\n          <div className=\"h-64 bg-slate-200 dark:bg-slate-700 rounded\" />\n        </div>\n      </div>\n    );\n  }\n\n  if (!dashboardData) {\n    return (\n      <div className={`bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6 ${className}`}>\n        <div className=\"text-center py-8\">\n          <BarChart3 className=\"w-12 h-12 text-slate-300 dark:text-slate-600 mx-auto mb-3\" />\n          <p className=\"text-slate-500 dark:text-slate-400\">\n            No analytics data available\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`bg-white dark:bg-slate-800 rounded-lg shadow-lg ${className}`}>\n      {/* Header */}\n      <div className=\"p-6 border-b border-slate-200 dark:border-slate-700\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\">\n              <BarChart3 className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\n            </div>\n            <div>\n              <h2 className=\"text-xl font-bold text-slate-900 dark:text-white\">\n                User Analytics Dashboard\n              </h2>\n              <p className=\"text-sm text-slate-500 dark:text-slate-400\">\n                Real-time usage insights and performance metrics\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <select\n              value={selectedTimeframe}\n              onChange={(e) => setSelectedTimeframe(e.target.value)}\n              className=\"px-3 py-1 border border-slate-300 dark:border-slate-600 rounded-lg text-sm bg-white dark:bg-slate-700 text-slate-900 dark:text-white\"\n            >\n              <option value=\"1d\">Last 24 hours</option>\n              <option value=\"7d\">Last 7 days</option>\n              <option value=\"30d\">Last 30 days</option>\n              <option value=\"90d\">Last 90 days</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Key Metrics */}\n      <div className=\"p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\">\n          {/* Total Sessions */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"bg-gradient-to-r from-blue-50 to-blue-100 dark:from-blue-900/50 dark:to-blue-800/50 rounded-lg p-4\"\n          >\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-blue-600 dark:text-blue-400\">\n                  Total Sessions\n                </p>\n                <p className=\"text-2xl font-bold text-blue-900 dark:text-blue-100\">\n                  {formatNumber(dashboardData.summary.totalSessions)}\n                </p>\n                <p className={`text-sm ${getGrowthColor(dashboardData.trends.dailyGrowth)}`}>\n                  {dashboardData.trends.dailyGrowth > 0 ? '+' : ''}\n                  {dashboardData.trends.dailyGrowth.toFixed(1)}% today\n                </p>\n              </div>\n              <Users className=\"w-8 h-8 text-blue-600 dark:text-blue-400\" />\n            </div>\n          </motion.div>\n\n          {/* Average Session Length */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.1 }}\n            className=\"bg-gradient-to-r from-green-50 to-green-100 dark:from-green-900/50 dark:to-green-800/50 rounded-lg p-4\"\n          >\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-green-600 dark:text-green-400\">\n                  Avg Session\n                </p>\n                <p className=\"text-2xl font-bold text-green-900 dark:text-green-100\">\n                  {formatDuration(dashboardData.summary.averageSessionLength)}\n                </p>\n                <p className=\"text-sm text-green-600 dark:text-green-400\">\n                  {dashboardData.sessions.averagePageViews.toFixed(1)} pages/session\n                </p>\n              </div>\n              <Clock className=\"w-8 h-8 text-green-600 dark:text-green-400\" />\n            </div>\n          </motion.div>\n\n          {/* Feature Usage */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.2 }}\n            className=\"bg-gradient-to-r from-purple-50 to-purple-100 dark:from-purple-900/50 dark:to-purple-800/50 rounded-lg p-4\"\n          >\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-purple-600 dark:text-purple-400\">\n                  Active Features\n                </p>\n                <p className=\"text-2xl font-bold text-purple-900 dark:text-purple-100\">\n                  {dashboardData.summary.activeFeaturesCount}\n                </p>\n                <p className=\"text-sm text-purple-600 dark:text-purple-400\">\n                  {dashboardData.summary.mostUsedFeature?.feature || 'N/A'} most used\n                </p>\n              </div>\n              <Target className=\"w-8 h-8 text-purple-600 dark:text-purple-400\" />\n            </div>\n          </motion.div>\n\n          {/* Performance Score */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.3 }}\n            className=\"bg-gradient-to-r from-orange-50 to-orange-100 dark:from-orange-900/50 dark:to-orange-800/50 rounded-lg p-4\"\n          >\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-orange-600 dark:text-orange-400\">\n                  Perf Score\n                </p>\n                <p className=\"text-2xl font-bold text-orange-900 dark:text-orange-100\">\n                  {Math.round(dashboardData.performance.averageLoadTime || 0)}ms\n                </p>\n                <p className=\"text-sm text-orange-600 dark:text-orange-400\">\n                  {dashboardData.summary.errorCount} errors\n                </p>\n              </div>\n              <Zap className=\"w-8 h-8 text-orange-600 dark:text-orange-400\" />\n            </div>\n          </motion.div>\n        </div>\n\n        {/* Charts Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n          {/* Feature Usage Chart */}\n          <div className=\"bg-slate-50 dark:bg-slate-700 rounded-lg p-4\">\n            <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-4 flex items-center\">\n              <Activity className=\"w-5 h-5 mr-2\" />\n              Feature Usage\n            </h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={generateFeatureUsageChart()}>\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\n                <XAxis\n                  dataKey=\"name\"\n                  tick={{ fontSize: 12 }}\n                  angle={-45}\n                  textAnchor=\"end\"\n                  height={80}\n                />\n                <YAxis tick={{ fontSize: 12 }} />\n                <Tooltip\n                  contentStyle={{\n                    backgroundColor: 'rgba(15, 23, 42, 0.9)',\n                    border: 'none',\n                    borderRadius: '8px',\n                    color: 'white'\n                  }}\n                />\n                <Bar dataKey=\"usage\" fill=\"#3b82f6\" radius={[4, 4, 0, 0]} />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n\n          {/* Session Distribution */}\n          <div className=\"bg-slate-50 dark:bg-slate-700 rounded-lg p-4\">\n            <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-4 flex items-center\">\n              <PieChart className=\"w-5 h-5 mr-2\" />\n              Session Duration\n            </h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={generateSessionDistributionChart()}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                >\n                  {generateSessionDistributionChart().map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Hourly Activity Chart */}\n        <div className=\"bg-slate-50 dark:bg-slate-700 rounded-lg p-4 mb-8\">\n          <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-4 flex items-center\">\n            <Calendar className=\"w-5 h-5 mr-2\" />\n            Usage Patterns (24 Hours)\n          </h3>\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <AreaChart data={generateTimePatternChart()}>\n              <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\n              <XAxis dataKey=\"hour\" tick={{ fontSize: 12 }} />\n              <YAxis tick={{ fontSize: 12 }} />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: 'rgba(15, 23, 42, 0.9)',\n                  border: 'none',\n                  borderRadius: '8px',\n                  color: 'white'\n                }}\n              />\n              <Area\n                type=\"monotone\"\n                dataKey=\"activity\"\n                stroke=\"#8b5cf6\"\n                fill=\"#8b5cf6\"\n                fillOpacity={0.3}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Current Session Info */}\n        {dashboardData.summary.currentSession && (\n          <div className=\"bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4 border border-blue-200 dark:border-blue-800\">\n            <h3 className=\"text-lg font-semibold text-blue-900 dark:text-blue-100 mb-3 flex items-center\">\n              <Eye className=\"w-5 h-5 mr-2\" />\n              Current Session\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div>\n                <p className=\"text-sm text-blue-600 dark:text-blue-400\">Duration</p>\n                <p className=\"font-semibold text-blue-900 dark:text-blue-100\">\n                  {formatDuration(Date.now() - dashboardData.summary.currentSession.startTime)}\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm text-blue-600 dark:text-blue-400\">Page Views</p>\n                <p className=\"font-semibold text-blue-900 dark:text-blue-100\">\n                  {dashboardData.summary.currentSession.pageViews}\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm text-blue-600 dark:text-blue-400\">Features Used</p>\n                <p className=\"font-semibold text-blue-900 dark:text-blue-100\">\n                  {dashboardData.summary.currentSession.features.size}\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserAnalyticsDashboard;\n","import { BarChart3, Activity, Eye, Users, TrendingUp } from 'lucide-react';\nimport React, { useState } from 'react';\n\nimport UserAnalyticsDashboard from '../components/Analytics/UserAnalyticsDashboard';\nimport PerformanceDashboard from '../components/PerformanceDashboard/PerformanceDashboard';\nimport SEOHead from '../components/SEO/SEOHead';\nimport { Card } from '../components/ui/Card';\nimport Header from '../components/ui/Header';\n\nconst Analytics = () => {\n  const [activeTab, setActiveTab] = useState('usage');\n\n  const tabs = [\n    { id: 'usage', label: 'Usage Analytics', icon: Eye },\n    { id: 'performance', label: 'Performance', icon: Activity },\n    { id: 'users', label: 'User Insights', icon: Users },\n    { id: 'business', label: 'Business Intelligence', icon: TrendingUp }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-slate-50 dark:bg-slate-900\">\n      <SEOHead\n        title=\"Platform Analytics | FinanceAnalyst Pro\"\n        description=\"Monitor platform usage, performance metrics, user engagement, and business intelligence with comprehensive analytics dashboards.\"\n        canonical=\"/analytics\"\n        keywords=\"platform analytics, usage metrics, performance monitoring, user insights, business intelligence, financial analytics\"\n      />\n\n      <Header />\n\n      <main className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        {/* Page Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center mb-4\">\n            <BarChart3 className=\"w-8 h-8 text-emerald-600 mr-3\" />\n            <h1 className=\"text-3xl font-bold text-slate-900 dark:text-white\">\n              Platform Analytics\n            </h1>\n          </div>\n          <p className=\"text-slate-600 dark:text-slate-400 max-w-3xl\">\n            Comprehensive analytics and insights into platform usage, performance metrics,\n            and user engagement patterns to optimize your financial analysis workflow.\n          </p>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"mb-6\">\n          <div className=\"border-b border-slate-200 dark:border-slate-700\">\n            <nav className=\"-mb-px flex space-x-8\" aria-label=\"Analytics tabs\">\n              {tabs.map((tab) => {\n                const Icon = tab.icon;\n                return (\n                  <button\n                    key={tab.id}\n                    onClick={() => setActiveTab(tab.id)}\n                    className={`group inline-flex items-center py-4 px-1 border-b-2 font-medium text-sm ${\n                      activeTab === tab.id\n                        ? 'border-emerald-500 text-emerald-600 dark:text-emerald-400'\n                        : 'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300 dark:text-slate-400 dark:hover:text-slate-300'\n                    }`}\n                  >\n                    <Icon\n                      className={`-ml-0.5 mr-2 h-5 w-5 ${\n                        activeTab === tab.id\n                          ? 'text-emerald-500'\n                          : 'text-slate-400 group-hover:text-slate-500'\n                      }`}\n                    />\n                    {tab.label}\n                  </button>\n                );\n              })}\n            </nav>\n          </div>\n        </div>\n\n        {/* Content Area */}\n        <div>\n          {activeTab === 'usage' && (\n            <Card className=\"p-6\">\n              <div className=\"flex items-center mb-6\">\n                <Eye className=\"w-6 h-6 text-emerald-600 mr-2\" />\n                <h2 className=\"text-xl font-semibold text-slate-900 dark:text-white\">\n                  Usage Analytics Dashboard\n                </h2>\n              </div>\n              <UserAnalyticsDashboard />\n            </Card>\n          )}\n\n          {activeTab === 'performance' && (\n            <Card className=\"p-6\">\n              <div className=\"flex items-center mb-6\">\n                <Activity className=\"w-6 h-6 text-emerald-600 mr-2\" />\n                <h2 className=\"text-xl font-semibold text-slate-900 dark:text-white\">\n                  Performance Monitoring\n                </h2>\n              </div>\n              <PerformanceDashboard />\n            </Card>\n          )}\n\n          {activeTab === 'users' && (\n            <Card className=\"p-6\">\n              <div className=\"flex items-center mb-6\">\n                <Users className=\"w-6 h-6 text-emerald-600 mr-2\" />\n                <h2 className=\"text-xl font-semibold text-slate-900 dark:text-white\">\n                  User Insights & Engagement\n                </h2>\n              </div>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                {/* User Metrics Cards */}\n                <div className=\"bg-slate-50 dark:bg-slate-700 rounded-lg p-4\">\n                  <div className=\"text-2xl font-bold text-slate-900 dark:text-white\">2,847</div>\n                  <div className=\"text-sm text-slate-600 dark:text-slate-400\">Active Users</div>\n                  <div className=\"text-xs text-green-600 mt-1\">+12.3% from last month</div>\n                </div>\n\n                <div className=\"bg-slate-50 dark:bg-slate-700 rounded-lg p-4\">\n                  <div className=\"text-2xl font-bold text-slate-900 dark:text-white\">4.2</div>\n                  <div className=\"text-sm text-slate-600 dark:text-slate-400\">Avg Session Duration</div>\n                  <div className=\"text-xs text-green-600 mt-1\">+0.3 hours</div>\n                </div>\n\n                <div className=\"bg-slate-50 dark:bg-slate-700 rounded-lg p-4\">\n                  <div className=\"text-2xl font-bold text-slate-900 dark:text-white\">847</div>\n                  <div className=\"text-sm text-slate-600 dark:text-slate-400\">Models Created</div>\n                  <div className=\"text-xs text-blue-600 mt-1\">This week</div>\n                </div>\n\n                <div className=\"bg-slate-50 dark:bg-slate-700 rounded-lg p-4\">\n                  <div className=\"text-2xl font-bold text-slate-900 dark:text-white\">94.2%</div>\n                  <div className=\"text-sm text-slate-600 dark:text-slate-400\">User Satisfaction</div>\n                  <div className=\"text-xs text-green-600 mt-1\">+2.1% improvement</div>\n                </div>\n              </div>\n\n              <div className=\"mt-6 text-center\">\n                <div className=\"bg-slate-100 dark:bg-slate-700 rounded-lg p-8 text-slate-500 dark:text-slate-400\">\n                  <Users className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n                  Detailed user analytics and engagement metrics coming soon\n                </div>\n              </div>\n            </Card>\n          )}\n\n          {activeTab === 'business' && (\n            <Card className=\"p-6\">\n              <div className=\"flex items-center mb-6\">\n                <TrendingUp className=\"w-6 h-6 text-emerald-600 mr-2\" />\n                <h2 className=\"text-xl font-semibold text-slate-900 dark:text-white\">\n                  Business Intelligence\n                </h2>\n              </div>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                {/* Revenue Metrics */}\n                <div className=\"bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-4\">Revenue Metrics</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-slate-600 dark:text-slate-400\">ARR</span>\n                      <span className=\"font-semibold text-slate-900 dark:text-white\">$2.4M</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-slate-600 dark:text-slate-400\">MRR Growth</span>\n                      <span className=\"font-semibold text-green-600\">+18.5%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-slate-600 dark:text-slate-400\">Churn Rate</span>\n                      <span className=\"font-semibold text-red-600\">2.1%</span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Feature Usage */}\n                <div className=\"bg-gradient-to-br from-green-50 to-emerald-100 dark:from-green-900/20 dark:to-emerald-900/20 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-4\">Feature Adoption</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-slate-600 dark:text-slate-400\">DCF Models</span>\n                      <span className=\"font-semibold text-slate-900 dark:text-white\">89%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-slate-600 dark:text-slate-400\">Portfolio Tools</span>\n                      <span className=\"font-semibold text-slate-900 dark:text-white\">67%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-slate-600 dark:text-slate-400\">AI Insights</span>\n                      <span className=\"font-semibold text-slate-900 dark:text-white\">45%</span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Support Metrics */}\n                <div className=\"bg-gradient-to-br from-purple-50 to-violet-100 dark:from-purple-900/20 dark:to-violet-900/20 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold text-slate-900 dark:text-white mb-4\">Support Quality</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-slate-600 dark:text-slate-400\">Response Time</span>\n                      <span className=\"font-semibold text-slate-900 dark:text-white\">2.1h</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-slate-600 dark:text-slate-400\">Resolution Rate</span>\n                      <span className=\"font-semibold text-green-600\">96.3%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-slate-600 dark:text-slate-400\">Satisfaction</span>\n                      <span className=\"font-semibold text-slate-900 dark:text-white\">4.8/5</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Card>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Analytics;\n"],"names":["analyticsService","constructor","this","events","Map","userSessions","featureUsage","performanceMetrics","userBehavior","isInitialized","currentSession","trackingEnabled","config","sessionTimeout","batchSize","flushInterval","storageKey","enableLocalStorage","enableRemoteTracking","eventQueue","flushTimer","initialize","loadStoredData","startSession","startFlushTimer","setupVisibilityTracking","setupPerformanceMonitoring","trackEvent","timestamp","Date","now","error","stored","localStorage","getItem","data","JSON","parse","Object","entries","saveData","fromEntries","lastSaved","setItem","stringify","sessionId","Math","random","toString","substr","id","startTime","lastActivity","pageViews","features","Set","errors","performance","loadTime","timing","loadEventEnd","navigationStart","interactions","scrollDepth","set","endSession","sessionDuration","duration","eventsCount","length","featuresUsed","Array","from","eventName","properties","event","name","url","window","location","href","userAgent","navigator","screenSize","screen","width","height","viewport","innerWidth","innerHeight","push","processFeatureUsage","processUserBehavior","flushEvents","trackPageView","page","title","document","referrer","trackFeatureUsage","feature","action","key","usage","get","count","firstUsed","lastUsed","sessions","avgTimeSpent","totalTimeSpent","add","usageCount","trackInteraction","element","trackError","context","errorData","message","stack","type","trackPerformance","metric","value","performanceData","_action","adoptionKey","adoption","firstUsage","usageDays","totalUsage","toDateString","trackNavigationPattern","trackWorkflowPattern","trackTimePattern","navKey","pattern","sequences","pageFrequency","currentSequence","pageCount","slice","workflowKey","workflow","featureChains","currentChain","chainKey","map","item","join","chainCount","_eventName","timeKey","hourlyActivity","fill","dailyActivity","monthlyActivity","peakHours","totalSessions","getHours","getDay","getMonth","visibilityStart","addEventListener","hidden","timeVisible","domReady","domContentLoadedEventEnd","PerformanceObserver","list","getEntries","forEach","entry","observe","entryTypes","setInterval","sendToRemote","getDashboardData","summary","getSummaryMetrics","getFeatureUsageMetrics","getUserBehaviorMetrics","getPerformanceMetrics","getSessionMetrics","trends","getTrendAnalysis","totalEvents","size","activeFeaturesCount","errorCount","values","reduce","sum","session","averageSessionLength","getAverageSessionLength","mostUsedFeature","getMostUsedFeature","sort","a","b","topFeatures","totalFeatures","featureAdoption","calculateFeatureAdoption","unusedFeatures","getUnusedFeatures","navigation","timePattern","topPages","navigationSequences","topWorkflows","workflowSequences","metrics","averageLoadTime","calculateAverageMetric","averageDomReady","longTasks","filter","m","performanceTrends","getPerformanceTrends","averageDuration","averagePageViews","s","bounceRate","calculateBounceRate","sessionDistribution","getSessionDistribution","oneDay","oneWeek","dailyGrowth","calculateGrowthRate","weeklyGrowth","featureAdoptionTrend","getFeatureAdoptionTrend","usagePatternChanges","getUsagePatternChanges","max","rate","trend","metricName","filtered","_metrics","loadTimetrend","errorRatetrend","singlePageSessions","distribution","short","medium","long","minutes","_timeframe","setTrackingEnabled","enabled","clearData","clear","removeItem","cleanup","clearInterval","UserAnalyticsDashboard","className","dashboardData","setDashboardData","useState","selectedTimeframe","setSelectedTimeframe","isLoading","setIsLoading","useEffect","loadDashboardData","interval","setTimeout","formatDuration","ms","floor","generateSessionDistributionChart","dist","color","jsx","children","jsxs","_","i","BarChart3","onChange","e","target","motion","div","initial","opacity","y","animate","num","toFixed","Users","transition","delay","Clock","Target","round","Zap","Activity","ResponsiveContainer","BarChart","replace","toUpperCase","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","fontSize","angle","textAnchor","YAxis","Tooltip","contentStyle","backgroundColor","border","borderRadius","Bar","radius","PieChart","Pie","cx","cy","labelLine","label","percent","outerRadius","index","Cell","Calendar","AreaChart","activity","hour","Area","stroke","fillOpacity","Eye","Analytics","activeTab","setActiveTab","tabs","icon","TrendingUp","SEOHead","description","canonical","keywords","Header","tab","Icon","onClick","Card","PerformanceDashboard"],"mappings":"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"}