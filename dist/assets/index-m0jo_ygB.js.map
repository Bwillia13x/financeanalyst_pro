{"version":3,"file":"index-m0jo_ygB.js","sources":["../../src/pages/financial-model-workspace/components/AuditTrail.jsx","../../src/pages/financial-model-workspace/components/CalculationResults.jsx","../../src/pages/financial-model-workspace/components/FormulaBuilder.jsx","../../src/pages/financial-model-workspace/components/ModelTemplates.jsx","../../src/utils/dataTransformation.js","../../src/pages/financial-model-workspace/components/TerminalInterface.jsx","../../src/pages/financial-model-workspace/components/VariableInputs.jsx","../../src/pages/financial-model-workspace/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst AuditTrail = ({ calculations, errors, warnings }) => {\n  const [activeTab, setActiveTab] = useState('calculations');\n  const [expandedItems, setExpandedItems] = useState(new Set());\n  const [filterLevel, setFilterLevel] = useState('all');\n\n  const mockAuditData = {\n    calculations: [\n      {\n        id: 1,\n        timestamp: new Date(Date.now() - 300000),\n        type: 'calculation',\n        operation: 'DCF Valuation',\n        formula: 'NPV(FCFF_2024:2028, WACC)',\n        result: 2547.5,\n        inputs: {\n          FCFF_2024: 187.5,\n          FCFF_2025: 206.3,\n          FCFF_2026: 226.9,\n          FCFF_2027: 249.6,\n          FCFF_2028: 274.6,\n          WACC: 0.098\n        },\n        executionTime: 0.045,\n        status: 'success'\n      },\n      {\n        id: 2,\n        timestamp: new Date(Date.now() - 600000),\n        type: 'calculation',\n        operation: 'WACC Calculation',\n        formula: 'WACC(cost_equity, cost_debt, tax_rate, debt_ratio)',\n        result: 0.098,\n        inputs: {\n          cost_equity: 0.123,\n          cost_debt: 0.045,\n          tax_rate: 0.25,\n          debt_ratio: 0.4\n        },\n        executionTime: 0.012,\n        status: 'success'\n      },\n      {\n        id: 3,\n        timestamp: new Date(Date.now() - 900000),\n        type: 'calculation',\n        operation: 'Terminal Value',\n        formula: 'TERMINAL_VALUE(FCF_final, terminal_growth, WACC)',\n        result: 1247.3,\n        inputs: {\n          FCF_final: 274.6,\n          terminal_growth: 0.025,\n          WACC: 0.098\n        },\n        executionTime: 0.008,\n        status: 'success'\n      }\n    ],\n    errors: [\n      {\n        id: 1,\n        timestamp: new Date(Date.now() - 1200000),\n        type: 'error',\n        severity: 'high',\n        message: 'Division by zero in WACC calculation',\n        formula: 'WACC(cost_equity, cost_debt, tax_rate, debt_ratio)',\n        location: 'Cell B15',\n        suggestion: 'Ensure debt_ratio is not equal to 1.0',\n        resolved: true\n      }\n    ],\n    warnings: [\n      {\n        id: 1,\n        timestamp: new Date(Date.now() - 180000),\n        type: 'warning',\n        severity: 'medium',\n        message: 'Beta coefficient (1.15) is above industry average (0.95)',\n        formula: 'CAPM(risk_free, beta, market_premium)',\n        location: 'Assumptions',\n        suggestion: 'Consider reviewing beta calculation or using industry average',\n        acknowledged: false\n      },\n      {\n        id: 2,\n        timestamp: new Date(Date.now() - 420000),\n        type: 'warning',\n        severity: 'low',\n        message: 'Terminal growth rate (2.5%) close to discount rate component',\n        formula: 'TERMINAL_VALUE(FCF_final, terminal_growth, WACC)',\n        location: 'Terminal Value',\n        suggestion: 'Ensure terminal growth rate is reasonable for long-term GDP growth',\n        acknowledged: true\n      }\n    ],\n    validations: [\n      {\n        id: 1,\n        timestamp: new Date(Date.now() - 60000),\n        type: 'validation',\n        check: 'Circular Reference Check',\n        status: 'passed',\n        details: 'No circular references detected in model'\n      },\n      {\n        id: 2,\n        timestamp: new Date(Date.now() - 120000),\n        type: 'validation',\n        check: 'Balance Sheet Check',\n        status: 'passed',\n        details: 'Assets = Liabilities + Equity for all projection years'\n      },\n      {\n        id: 3,\n        timestamp: new Date(Date.now() - 240000),\n        type: 'validation',\n        check: 'Cash Flow Consistency',\n        status: 'warning',\n        details: 'Minor rounding differences in cash flow statements (<$0.1M)'\n      }\n    ]\n  };\n\n  const tabs = [\n    {\n      id: 'calculations',\n      label: 'Calculations',\n      icon: 'Calculator',\n      count: mockAuditData.calculations.length\n    },\n    { id: 'errors', label: 'Errors', icon: 'XCircle', count: mockAuditData.errors.length },\n    {\n      id: 'warnings',\n      label: 'Warnings',\n      icon: 'AlertTriangle',\n      count: mockAuditData.warnings.length\n    },\n    {\n      id: 'validations',\n      label: 'Validations',\n      icon: 'CheckCircle',\n      count: mockAuditData.validations.length\n    }\n  ];\n\n  const toggleExpanded = id => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(id)) {\n      newExpanded.delete(id);\n    } else {\n      newExpanded.add(id);\n    }\n    setExpandedItems(newExpanded);\n  };\n\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'success':\n        return { icon: 'CheckCircle', color: 'text-success' };\n      case 'error':\n        return { icon: 'XCircle', color: 'text-destructive' };\n      case 'warning':\n        return { icon: 'AlertTriangle', color: 'text-warning' };\n      case 'passed':\n        return { icon: 'CheckCircle', color: 'text-success' };\n      default:\n        return { icon: 'Info', color: 'text-muted-foreground' };\n    }\n  };\n\n  const getSeverityColor = severity => {\n    switch (severity) {\n      case 'high':\n        return 'text-destructive bg-destructive/10';\n      case 'medium':\n        return 'text-warning bg-warning/10';\n      case 'low':\n        return 'text-muted-foreground bg-muted';\n      default:\n        return 'text-muted-foreground bg-muted';\n    }\n  };\n\n  const formatExecutionTime = time => {\n    if (time < 0.001) return '<1ms';\n    if (time < 1) return `${(time * 1000).toFixed(0)}ms`;\n    return `${time.toFixed(2)}s`;\n  };\n\n  const renderCalculations = () => (\n    <div className=\"space-y-3\">\n      {mockAuditData.calculations.map(calc => (\n        <div key={calc.id} className=\"p-4 bg-background border border-border rounded-lg\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <Icon name=\"Calculator\" size={16} className=\"text-primary\" />\n                <span className=\"font-medium text-foreground\">{calc.operation}</span>\n                <span\n                  className={`px-2 py-1 rounded-full text-xs ${getStatusIcon(calc.status).color} bg-current/10`}\n                >\n                  {calc.status}\n                </span>\n              </div>\n              <code className=\"text-sm bg-muted px-2 py-1 rounded font-mono text-foreground block mb-2\">\n                {calc.formula}\n              </code>\n              <div className=\"flex items-center space-x-4 text-xs text-muted-foreground\">\n                <span>{calc.timestamp.toLocaleTimeString()}</span>\n                <span>Execution: {formatExecutionTime(calc.executionTime)}</span>\n                <span>Result: ${calc.result.toFixed(2)}M</span>\n              </div>\n            </div>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              iconName={expandedItems.has(calc.id) ? 'ChevronUp' : 'ChevronDown'}\n              onClick={() => toggleExpanded(calc.id)}\n            />\n          </div>\n\n          {expandedItems.has(calc.id) && (\n            <div className=\"mt-4 pt-4 border-t border-border\">\n              <h5 className=\"text-sm font-medium text-foreground mb-2\">Input Values</h5>\n              <div className=\"grid grid-cols-2 gap-2\">\n                {Object.entries(calc.inputs).map(([key, value]) => (\n                  <div key={key} className=\"flex justify-between text-sm\">\n                    <span className=\"text-muted-foreground\">{key}:</span>\n                    <span className=\"text-foreground font-mono\">\n                      {typeof value === 'number' ? value.toFixed(3) : value}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderErrors = () => (\n    <div className=\"space-y-3\">\n      {mockAuditData.errors.map(error => (\n        <div key={error.id} className=\"p-4 bg-background border border-destructive/20 rounded-lg\">\n          <div className=\"flex items-start space-x-3\">\n            <Icon name=\"XCircle\" size={16} className=\"text-destructive mt-0.5\" />\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <span className=\"font-medium text-foreground\">{error.message}</span>\n                <span\n                  className={`px-2 py-1 rounded-full text-xs ${getSeverityColor(error.severity)}`}\n                >\n                  {error.severity}\n                </span>\n                {error.resolved && (\n                  <span className=\"px-2 py-1 rounded-full text-xs text-success bg-success/10\">\n                    Resolved\n                  </span>\n                )}\n              </div>\n              <code className=\"text-sm bg-muted px-2 py-1 rounded font-mono text-foreground block mb-2\">\n                {error.formula}\n              </code>\n              <div className=\"text-sm text-muted-foreground mb-2\">Location: {error.location}</div>\n              <div className=\"text-sm text-foreground bg-muted/50 p-2 rounded\">\n                <strong>Suggestion:</strong> {error.suggestion}\n              </div>\n              <div className=\"text-xs text-muted-foreground mt-2\">\n                {error.timestamp.toLocaleString()}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderWarnings = () => (\n    <div className=\"space-y-3\">\n      {mockAuditData.warnings.map(warning => (\n        <div key={warning.id} className=\"p-4 bg-background border border-warning/20 rounded-lg\">\n          <div className=\"flex items-start space-x-3\">\n            <Icon name=\"AlertTriangle\" size={16} className=\"text-warning mt-0.5\" />\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <span className=\"font-medium text-foreground\">{warning.message}</span>\n                <span\n                  className={`px-2 py-1 rounded-full text-xs ${getSeverityColor(warning.severity)}`}\n                >\n                  {warning.severity}\n                </span>\n                {warning.acknowledged && (\n                  <span className=\"px-2 py-1 rounded-full text-xs text-muted-foreground bg-muted\">\n                    Acknowledged\n                  </span>\n                )}\n              </div>\n              <code className=\"text-sm bg-muted px-2 py-1 rounded font-mono text-foreground block mb-2\">\n                {warning.formula}\n              </code>\n              <div className=\"text-sm text-muted-foreground mb-2\">Location: {warning.location}</div>\n              <div className=\"text-sm text-foreground bg-muted/50 p-2 rounded\">\n                <strong>Suggestion:</strong> {warning.suggestion}\n              </div>\n              <div className=\"flex items-center justify-between mt-3\">\n                <div className=\"text-xs text-muted-foreground\">\n                  {warning.timestamp.toLocaleString()}\n                </div>\n                {!warning.acknowledged && (\n                  <Button variant=\"outline\" size=\"sm\">\n                    Acknowledge\n                  </Button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderValidations = () => (\n    <div className=\"space-y-3\">\n      {mockAuditData.validations.map(validation => (\n        <div key={validation.id} className=\"p-4 bg-background border border-border rounded-lg\">\n          <div className=\"flex items-start space-x-3\">\n            <Icon\n              name={getStatusIcon(validation.status).icon}\n              size={16}\n              className={`${getStatusIcon(validation.status).color} mt-0.5`}\n            />\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <span className=\"font-medium text-foreground\">{validation.check}</span>\n                <span\n                  className={`px-2 py-1 rounded-full text-xs ${getStatusIcon(validation.status).color} bg-current/10`}\n                >\n                  {validation.status}\n                </span>\n              </div>\n              <div className=\"text-sm text-muted-foreground mb-2\">{validation.details}</div>\n              <div className=\"text-xs text-muted-foreground\">\n                {validation.timestamp.toLocaleString()}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'calculations':\n        return renderCalculations();\n      case 'errors':\n        return renderErrors();\n      case 'warnings':\n        return renderWarnings();\n      case 'validations':\n        return renderValidations();\n      default:\n        return renderCalculations();\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-card\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-border\">\n        <div className=\"flex items-center space-x-2\">\n          <Icon name=\"FileText\" size={20} className=\"text-primary\" />\n          <h3 className=\"text-lg font-semibold text-foreground\">Audit Trail</h3>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button variant=\"outline\" size=\"sm\" iconName=\"Download\">\n            Export Log\n          </Button>\n          <Button variant=\"outline\" size=\"sm\" iconName=\"RefreshCw\">\n            Refresh\n          </Button>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"flex border-b border-border overflow-x-auto\">\n        {tabs.map(tab => (\n          <button\n            key={tab.id}\n            onClick={() => setActiveTab(tab.id)}\n            className={`flex items-center space-x-2 px-4 py-3 text-sm font-medium whitespace-nowrap transition-smooth ${\n              activeTab === tab.id\n                ? 'bg-primary text-primary-foreground border-b-2 border-primary'\n                : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n            }`}\n          >\n            <Icon name={tab.icon} size={16} />\n            <span>{tab.label}</span>\n            {tab.count > 0 && (\n              <span className=\"px-2 py-1 bg-current/20 rounded-full text-xs\">{tab.count}</span>\n            )}\n          </button>\n        ))}\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-y-auto p-4\">{renderTabContent()}</div>\n\n      {/* Footer */}\n      <div className=\"p-4 border-t border-border bg-muted/50\">\n        <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n          <div className=\"flex items-center space-x-4\">\n            <span>Last updated: {new Date().toLocaleTimeString()}</span>\n            <span>•</span>\n            <span>Auto-refresh: ON</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-2 h-2 bg-success rounded-full\" />\n            <span>Audit logging active</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuditTrail;\n","import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst CalculationResults = ({ results, onExport }) => {\n  const [activeTab, setActiveTab] = useState('summary');\n  const [expandedSections, setExpandedSections] = useState(new Set(['valuation']));\n\n  const mockResults = {\n    summary: {\n      enterpriseValue: 2847.5,\n      equityValue: 2547.5,\n      sharePrice: 127.38,\n      impliedReturn: 0.156,\n      confidence: 0.87\n    },\n    cashFlows: [\n      { year: 2024, revenue: 1250, ebitda: 312.5, fcf: 187.5, pv: 170.5 },\n      { year: 2025, revenue: 1375, ebitda: 343.8, fcf: 206.3, pv: 172.8 },\n      { year: 2026, revenue: 1513, ebitda: 378.2, fcf: 226.9, pv: 175.2 },\n      { year: 2027, revenue: 1664, ebitda: 416.0, fcf: 249.6, pv: 177.7 },\n      { year: 2028, revenue: 1830, ebitda: 457.6, fcf: 274.6, pv: 180.3 }\n    ],\n    sensitivity: {\n      wacc: [0.08, 0.09, 0.1, 0.11, 0.12],\n      growth: [0.015, 0.02, 0.025, 0.03, 0.035],\n      matrix: [\n        [145.2, 138.7, 132.8, 127.4, 122.5],\n        [152.1, 144.9, 138.2, 132.1, 126.4],\n        [159.8, 151.9, 144.6, 137.8, 131.6],\n        [168.4, 159.7, 151.8, 144.4, 137.6],\n        [178.1, 168.4, 159.7, 151.8, 144.4]\n      ]\n    },\n    scenarios: [\n      { name: 'Base Case', probability: 0.6, sharePrice: 127.38, irr: 0.156 },\n      { name: 'Bull Case', probability: 0.25, sharePrice: 145.67, irr: 0.189 },\n      { name: 'Bear Case', probability: 0.15, sharePrice: 98.42, irr: 0.087 }\n    ],\n    multiples: [\n      { metric: 'EV/Revenue', current: 2.3, peer_avg: 2.8, premium: -17.9 },\n      { metric: 'EV/EBITDA', current: 9.1, peer_avg: 11.2, premium: -18.8 },\n      { metric: 'P/E Ratio', current: 18.5, peer_avg: 22.1, premium: -16.3 },\n      { metric: 'P/B Ratio', current: 2.1, peer_avg: 2.6, premium: -19.2 }\n    ]\n  };\n\n  const tabs = [\n    { id: 'summary', label: 'Summary', icon: 'BarChart3' },\n    { id: 'cashflows', label: 'Cash Flows', icon: 'TrendingUp' },\n    { id: 'sensitivity', label: 'Sensitivity', icon: 'Target' },\n    { id: 'scenarios', label: 'Scenarios', icon: 'GitBranch' },\n    { id: 'multiples', label: 'Multiples', icon: 'Layers' }\n  ];\n\n  const toggleSection = section => {\n    const newExpanded = new Set(expandedSections);\n    if (newExpanded.has(section)) {\n      newExpanded.delete(section);\n    } else {\n      newExpanded.add(section);\n    }\n    setExpandedSections(newExpanded);\n  };\n\n  const formatCurrency = (value, decimals = 2) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    }).format(value);\n  };\n\n  const formatPercent = (value, decimals = 1) => {\n    return `${(value * 100).toFixed(decimals)}%`;\n  };\n\n  const renderSummary = () => (\n    <div className=\"space-y-6\">\n      {/* Key Metrics */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"p-4 bg-muted rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-muted-foreground\">Enterprise Value</span>\n            <Icon name=\"Building\" size={16} className=\"text-muted-foreground\" />\n          </div>\n          <div className=\"mt-2\">\n            <span className=\"text-2xl font-bold text-foreground\">\n              {formatCurrency(mockResults.summary.enterpriseValue, 1)}M\n            </span>\n          </div>\n        </div>\n\n        <div className=\"p-4 bg-muted rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-muted-foreground\">Equity Value</span>\n            <Icon name=\"PieChart\" size={16} className=\"text-muted-foreground\" />\n          </div>\n          <div className=\"mt-2\">\n            <span className=\"text-2xl font-bold text-foreground\">\n              {formatCurrency(mockResults.summary.equityValue, 1)}M\n            </span>\n          </div>\n        </div>\n\n        <div className=\"p-4 bg-muted rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-muted-foreground\">Share Price</span>\n            <Icon name=\"DollarSign\" size={16} className=\"text-muted-foreground\" />\n          </div>\n          <div className=\"mt-2\">\n            <span className=\"text-2xl font-bold text-foreground\">\n              {formatCurrency(mockResults.summary.sharePrice)}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"p-4 bg-muted rounded-lg\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm text-muted-foreground\">Implied Return</span>\n            <Icon name=\"TrendingUp\" size={16} className=\"text-success\" />\n          </div>\n          <div className=\"mt-2\">\n            <span className=\"text-2xl font-bold text-success\">\n              {formatPercent(mockResults.summary.impliedReturn)}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Confidence Indicator */}\n      <div className=\"p-4 bg-background border border-border rounded-lg\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <span className=\"text-sm font-medium text-foreground\">Model Confidence</span>\n          <span className=\"text-sm text-muted-foreground\">\n            {formatPercent(mockResults.summary.confidence)}\n          </span>\n        </div>\n        <div className=\"w-full bg-muted rounded-full h-2\">\n          <div\n            className=\"bg-success h-2 rounded-full transition-all duration-300\"\n            style={{ width: `${mockResults.summary.confidence * 100}%` }}\n          />\n        </div>\n        <p className=\"text-xs text-muted-foreground mt-2\">\n          Based on data quality, assumption validity, and sensitivity analysis\n        </p>\n      </div>\n    </div>\n  );\n\n  const renderCashFlows = () => (\n    <div className=\"space-y-4\">\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full text-sm\">\n          <thead>\n            <tr className=\"border-b border-border\">\n              <th className=\"text-left py-2 text-muted-foreground font-medium\">Year</th>\n              <th className=\"text-right py-2 text-muted-foreground font-medium\">Revenue</th>\n              <th className=\"text-right py-2 text-muted-foreground font-medium\">EBITDA</th>\n              <th className=\"text-right py-2 text-muted-foreground font-medium\">FCF</th>\n              <th className=\"text-right py-2 text-muted-foreground font-medium\">Present Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {mockResults.cashFlows.map((cf, index) => (\n              <tr key={index} className=\"border-b border-border/50\">\n                <td className=\"py-3 text-foreground font-medium\">{cf.year}</td>\n                <td className=\"py-3 text-right text-foreground\">\n                  {formatCurrency(cf.revenue, 0)}M\n                </td>\n                <td className=\"py-3 text-right text-foreground\">{formatCurrency(cf.ebitda, 1)}M</td>\n                <td className=\"py-3 text-right text-foreground\">{formatCurrency(cf.fcf, 1)}M</td>\n                <td className=\"py-3 text-right text-success font-medium\">\n                  {formatCurrency(cf.pv, 1)}M\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"p-4 bg-muted rounded-lg\">\n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-sm font-medium text-foreground\">Terminal Value</span>\n          <span className=\"text-lg font-bold text-foreground\">{formatCurrency(1247.3, 1)}M</span>\n        </div>\n        <p className=\"text-xs text-muted-foreground mt-1\">\n          2.5% perpetual growth rate applied to 2028 FCF\n        </p>\n      </div>\n    </div>\n  );\n\n  const renderSensitivity = () => (\n    <div className=\"space-y-4\">\n      <div className=\"text-center\">\n        <h4 className=\"text-sm font-medium text-foreground mb-2\">\n          Share Price Sensitivity Analysis\n        </h4>\n        <p className=\"text-xs text-muted-foreground\">WACC vs Terminal Growth Rate</p>\n      </div>\n\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full text-xs\">\n          <thead>\n            <tr>\n              <th className=\"p-2 text-left text-muted-foreground\">WACC \\ Growth</th>\n              {mockResults.sensitivity.growth.map((growth, index) => (\n                <th key={index} className=\"p-2 text-center text-muted-foreground\">\n                  {formatPercent(growth)}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {mockResults.sensitivity.wacc.map((wacc, rowIndex) => (\n              <tr key={rowIndex} className=\"border-t border-border/50\">\n                <td className=\"p-2 text-muted-foreground font-medium\">{formatPercent(wacc)}</td>\n                {mockResults.sensitivity.matrix[rowIndex].map((value, colIndex) => (\n                  <td\n                    key={colIndex}\n                    className={`p-2 text-center font-medium ${\n                      Math.abs(value - 127.38) < 5\n                        ? 'bg-primary/20 text-primary'\n                        : 'text-foreground'\n                    }`}\n                  >\n                    {formatCurrency(value)}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n\n  const renderScenarios = () => (\n    <div className=\"space-y-4\">\n      {mockResults.scenarios.map((scenario, index) => (\n        <div key={index} className=\"p-4 bg-muted rounded-lg\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"font-medium text-foreground\">{scenario.name}</span>\n              <span className=\"text-xs bg-background px-2 py-1 rounded text-muted-foreground\">\n                {formatPercent(scenario.probability)} probability\n              </span>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"text-lg font-bold text-foreground\">\n                {formatCurrency(scenario.sharePrice)}\n              </div>\n              <div className=\"text-sm text-muted-foreground\">{formatPercent(scenario.irr)} IRR</div>\n            </div>\n          </div>\n          <div className=\"w-full bg-background rounded-full h-1\">\n            <div\n              className=\"bg-primary h-1 rounded-full\"\n              style={{ width: `${scenario.probability * 100}%` }}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n\n  const renderMultiples = () => (\n    <div className=\"space-y-4\">\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full text-sm\">\n          <thead>\n            <tr className=\"border-b border-border\">\n              <th className=\"text-left py-2 text-muted-foreground font-medium\">Multiple</th>\n              <th className=\"text-right py-2 text-muted-foreground font-medium\">Current</th>\n              <th className=\"text-right py-2 text-muted-foreground font-medium\">Peer Avg</th>\n              <th className=\"text-right py-2 text-muted-foreground font-medium\">\n                Premium/Discount\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {mockResults.multiples.map((multiple, index) => (\n              <tr key={index} className=\"border-b border-border/50\">\n                <td className=\"py-3 text-foreground font-medium\">{multiple.metric}</td>\n                <td className=\"py-3 text-right text-foreground\">{multiple.current}x</td>\n                <td className=\"py-3 text-right text-foreground\">{multiple.peer_avg}x</td>\n                <td\n                  className={`py-3 text-right font-medium ${\n                    multiple.premium > 0 ? 'text-success' : 'text-destructive'\n                  }`}\n                >\n                  {multiple.premium > 0 ? '+' : ''}\n                  {multiple.premium.toFixed(1)}%\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'summary':\n        return renderSummary();\n      case 'cashflows':\n        return renderCashFlows();\n      case 'sensitivity':\n        return renderSensitivity();\n      case 'scenarios':\n        return renderScenarios();\n      case 'multiples':\n        return renderMultiples();\n      default:\n        return renderSummary();\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-card\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-border\">\n        <div className=\"flex items-center space-x-2\">\n          <Icon name=\"Calculator\" size={20} className=\"text-primary\" />\n          <h3 className=\"text-lg font-semibold text-foreground\">Calculation Results</h3>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            iconName=\"Download\"\n            onClick={() => onExport && onExport('excel')}\n          >\n            Export\n          </Button>\n          <Button variant=\"outline\" size=\"sm\" iconName=\"Share2\">\n            Share\n          </Button>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"flex border-b border-border overflow-x-auto\">\n        {tabs.map(tab => (\n          <button\n            key={tab.id}\n            onClick={() => setActiveTab(tab.id)}\n            className={`flex items-center space-x-2 px-4 py-3 text-sm font-medium whitespace-nowrap transition-smooth ${\n              activeTab === tab.id\n                ? 'bg-primary text-primary-foreground border-b-2 border-primary'\n                : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n            }`}\n          >\n            <Icon name={tab.icon} size={16} />\n            <span>{tab.label}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-y-auto p-4\">{renderTabContent()}</div>\n\n      {/* Footer */}\n      <div className=\"p-4 border-t border-border bg-muted/50\">\n        <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n          <div className=\"flex items-center space-x-4\">\n            <span>Last Updated: {new Date().toLocaleTimeString()}</span>\n            <span>•</span>\n            <span>Auto-refresh: ON</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-2 h-2 bg-success rounded-full\" />\n            <span>Calculations current</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CalculationResults;\n","import React, { useState, useRef } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst FormulaBuilder = ({ onFormulaCreate, variables }) => {\n  const [selectedCategory, setSelectedCategory] = useState('valuation');\n  const [draggedFunction, setDraggedFunction] = useState(null);\n  const [currentFormula, setCurrentFormula] = useState('');\n  const [formulaName, setFormulaName] = useState('');\n  const [isBuilding, setIsBuilding] = useState(false);\n  const dropZoneRef = useRef(null);\n\n  const functionCategories = {\n    valuation: {\n      name: 'Valuation',\n      icon: 'TrendingUp',\n      functions: [\n        {\n          name: 'DCF',\n          syntax: 'DCF(fcf_array, discount_rate, terminal_growth)',\n          description: 'Discounted Cash Flow valuation'\n        },\n        {\n          name: 'NPV',\n          syntax: 'NPV(cash_flows, discount_rate)',\n          description: 'Net Present Value calculation'\n        },\n        { name: 'IRR', syntax: 'IRR(cash_flows)', description: 'Internal Rate of Return' },\n        {\n          name: 'TERMINAL_VALUE',\n          syntax: 'TERMINAL_VALUE(final_fcf, growth_rate, discount_rate)',\n          description: 'Terminal value calculation'\n        },\n        {\n          name: 'WACC',\n          syntax: 'WACC(cost_equity, cost_debt, tax_rate, debt_ratio)',\n          description: 'Weighted Average Cost of Capital'\n        }\n      ]\n    },\n    financial: {\n      name: 'Financial Ratios',\n      icon: 'Calculator',\n      functions: [\n        {\n          name: 'ROE',\n          syntax: 'ROE(net_income, shareholders_equity)',\n          description: 'Return on Equity'\n        },\n        { name: 'ROA', syntax: 'ROA(net_income, total_assets)', description: 'Return on Assets' },\n        {\n          name: 'DEBT_TO_EQUITY',\n          syntax: 'DEBT_TO_EQUITY(total_debt, total_equity)',\n          description: 'Debt to Equity ratio'\n        },\n        {\n          name: 'CURRENT_RATIO',\n          syntax: 'CURRENT_RATIO(current_assets, current_liabilities)',\n          description: 'Current ratio calculation'\n        },\n        {\n          name: 'QUICK_RATIO',\n          syntax: 'QUICK_RATIO(quick_assets, current_liabilities)',\n          description: 'Quick ratio calculation'\n        }\n      ]\n    },\n    statistical: {\n      name: 'Statistical',\n      icon: 'BarChart3',\n      functions: [\n        {\n          name: 'CORRELATION',\n          syntax: 'CORRELATION(dataset1, dataset2)',\n          description: 'Correlation coefficient'\n        },\n        {\n          name: 'REGRESSION',\n          syntax: 'REGRESSION(dependent_var, independent_var)',\n          description: 'Linear regression analysis'\n        },\n        {\n          name: 'VOLATILITY',\n          syntax: 'VOLATILITY(returns, period)',\n          description: 'Historical volatility'\n        },\n        {\n          name: 'BETA',\n          syntax: 'BETA(stock_returns, market_returns)',\n          description: 'Beta coefficient calculation'\n        },\n        {\n          name: 'SHARPE_RATIO',\n          syntax: 'SHARPE_RATIO(returns, risk_free_rate)',\n          description: 'Risk-adjusted return metric'\n        }\n      ]\n    },\n    mathematical: {\n      name: 'Mathematical',\n      icon: 'Sigma',\n      functions: [\n        { name: 'SUM', syntax: 'SUM(range)', description: 'Sum of values' },\n        { name: 'AVERAGE', syntax: 'AVERAGE(range)', description: 'Average of values' },\n        { name: 'MEDIAN', syntax: 'MEDIAN(range)', description: 'Median value' },\n        { name: 'STDEV', syntax: 'STDEV(range)', description: 'Standard deviation' },\n        {\n          name: 'PERCENTILE',\n          syntax: 'PERCENTILE(range, percentile)',\n          description: 'Percentile calculation'\n        }\n      ]\n    }\n  };\n\n  const savedFormulas = [\n    {\n      name: 'Custom_DCF_Tech',\n      formula: 'DCF(FCFF_PROJECTIONS, WACC(0.12, 0.04, 0.25, 0.3), 0.025)',\n      category: 'Custom'\n    },\n    {\n      name: 'LBO_Returns',\n      formula: 'IRR([INITIAL_INVESTMENT * -1, EXIT_VALUE])',\n      category: 'Custom'\n    },\n    {\n      name: 'Comp_Multiple',\n      formula: 'AVERAGE(PEER_EV_REVENUE) * TARGET_REVENUE',\n      category: 'Custom'\n    }\n  ];\n\n  const handleDragStart = (e, func) => {\n    setDraggedFunction(func);\n    e.dataTransfer.effectAllowed = 'copy';\n  };\n\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'copy';\n  };\n\n  const handleDrop = e => {\n    e.preventDefault();\n    if (draggedFunction) {\n      const newFormula = currentFormula + (currentFormula ? ' + ' : '') + draggedFunction.syntax;\n      setCurrentFormula(newFormula);\n      setDraggedFunction(null);\n    }\n  };\n\n  const addFunction = func => {\n    const newFormula = currentFormula + (currentFormula ? ' + ' : '') + func.syntax;\n    setCurrentFormula(newFormula);\n  };\n\n  const clearFormula = () => {\n    setCurrentFormula('');\n    setFormulaName('');\n  };\n\n  const saveFormula = () => {\n    if (formulaName && currentFormula) {\n      if (onFormulaCreate) {\n        onFormulaCreate({\n          name: formulaName,\n          formula: currentFormula,\n          timestamp: new Date()\n        });\n      }\n      setFormulaName('');\n      setCurrentFormula('');\n      setIsBuilding(false);\n    }\n  };\n\n  const validateFormula = () => {\n    // Simple validation - check for balanced parentheses\n    const openParens = (currentFormula.match(/\\(/g) || []).length;\n    const closeParens = (currentFormula.match(/\\)/g) || []).length;\n    return openParens === closeParens;\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-card\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-border\">\n        <div className=\"flex items-center space-x-2\">\n          <Icon name=\"Wrench\" size={20} className=\"text-primary\" />\n          <h3 className=\"text-lg font-semibold text-foreground\">Formula Builder</h3>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            iconName=\"Plus\"\n            onClick={() => setIsBuilding(!isBuilding)}\n          >\n            New Formula\n          </Button>\n        </div>\n      </div>\n\n      {/* Function Categories */}\n      <div className=\"flex border-b border-border\">\n        {Object.entries(functionCategories).map(([key, category]) => (\n          <button\n            key={key}\n            onClick={() => setSelectedCategory(key)}\n            className={`flex items-center space-x-2 px-4 py-3 text-sm font-medium transition-smooth ${\n              selectedCategory === key\n                ? 'bg-primary text-primary-foreground border-b-2 border-primary'\n                : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n            }`}\n          >\n            <Icon name={category.icon} size={16} />\n            <span>{category.name}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* Function Library */}\n      <div className=\"flex-1 overflow-y-auto\">\n        <div className=\"p-4 space-y-3\">\n          {functionCategories[selectedCategory].functions.map((func, index) => (\n            <div\n              key={index}\n              draggable\n              onDragStart={e => handleDragStart(e, func)}\n              className=\"p-3 bg-muted rounded-lg border border-border cursor-move hover:bg-muted/80 transition-smooth group\"\n            >\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Icon\n                      name=\"Move\"\n                      size={14}\n                      className=\"text-muted-foreground group-hover:text-foreground\"\n                    />\n                    <span className=\"font-medium text-foreground\">{func.name}</span>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground mt-1\">{func.description}</p>\n                  <code className=\"text-xs bg-background px-2 py-1 rounded mt-2 block font-mono text-foreground\">\n                    {func.syntax}\n                  </code>\n                </div>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  iconName=\"Plus\"\n                  onClick={() => addFunction(func)}\n                  className=\"opacity-0 group-hover:opacity-100 transition-opacity\"\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Saved Formulas */}\n        <div className=\"border-t border-border p-4\">\n          <h4 className=\"text-sm font-medium text-foreground mb-3 flex items-center space-x-2\">\n            <Icon name=\"BookOpen\" size={16} />\n            <span>Saved Formulas</span>\n          </h4>\n          <div className=\"space-y-2\">\n            {savedFormulas.map((formula, index) => (\n              <div\n                key={index}\n                className=\"p-3 bg-background rounded-lg border border-border hover:bg-muted/50 transition-smooth cursor-pointer\"\n                onClick={() => setCurrentFormula(formula.formula)}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"font-medium text-foreground\">{formula.name}</span>\n                  <span className=\"text-xs text-muted-foreground bg-muted px-2 py-1 rounded\">\n                    {formula.category}\n                  </span>\n                </div>\n                <code className=\"text-xs text-muted-foreground mt-1 block font-mono\">\n                  {formula.formula}\n                </code>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Formula Builder Panel */}\n      {isBuilding && (\n        <div className=\"border-t border-border bg-background\">\n          <div className=\"p-4 space-y-4\">\n            <div>\n              <label className=\"text-sm font-medium text-foreground mb-2 block\">Formula Name</label>\n              <input\n                type=\"text\"\n                value={formulaName}\n                onChange={e => setFormulaName(e.target.value)}\n                placeholder=\"Enter formula name...\"\n                className=\"w-full px-3 py-2 bg-input border border-border rounded-lg text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring\"\n              />\n            </div>\n\n            <div>\n              <label className=\"text-sm font-medium text-foreground mb-2 block\">\n                Formula Expression\n              </label>\n              <div\n                ref={dropZoneRef}\n                onDragOver={handleDragOver}\n                onDrop={handleDrop}\n                className=\"min-h-[100px] p-3 bg-input border-2 border-dashed border-border rounded-lg focus-within:border-ring transition-colors\"\n              >\n                <textarea\n                  value={currentFormula}\n                  onChange={e => setCurrentFormula(e.target.value)}\n                  placeholder=\"Drag functions here or type formula manually...\"\n                  className=\"w-full h-20 bg-transparent text-foreground placeholder-muted-foreground resize-none outline-none font-mono text-sm\"\n                />\n              </div>\n              <div className=\"flex items-center justify-between mt-2\">\n                <div className=\"flex items-center space-x-2\">\n                  {validateFormula() ? (\n                    <div className=\"flex items-center space-x-1 text-success\">\n                      <Icon name=\"CheckCircle\" size={14} />\n                      <span className=\"text-xs\">Valid syntax</span>\n                    </div>\n                  ) : (\n                    <div className=\"flex items-center space-x-1 text-destructive\">\n                      <Icon name=\"XCircle\" size={14} />\n                      <span className=\"text-xs\">Invalid syntax</span>\n                    </div>\n                  )}\n                </div>\n                <span className=\"text-xs text-muted-foreground\">\n                  {currentFormula.length} characters\n                </span>\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <Button\n                variant=\"outline\" size=\"sm\" iconName=\"Trash2\"\n                onClick={clearFormula}\n              >\n                Clear\n              </Button>\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\" size=\"sm\" iconName=\"Eye\"\n                  disabled={!validateFormula()}\n                >\n                  Preview\n                </Button>\n                <Button\n                  variant=\"default\"\n                  size=\"sm\"\n                  iconName=\"Save\"\n                  onClick={saveFormula}\n                  disabled={!formulaName || !currentFormula || !validateFormula()}\n                >\n                  Save Formula\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FormulaBuilder;\n","import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst ModelTemplates = ({ onTemplateSelect, onTemplateCreate }) => {\n  const [selectedCategory, setSelectedCategory] = useState('valuation');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showCreateModal, setShowCreateModal] = useState(false);\n\n  const templateCategories = {\n    valuation: {\n      name: 'Valuation Models',\n      icon: 'TrendingUp',\n      templates: [\n        {\n          id: 'dcf_standard',\n          name: 'DCF - Standard',\n          description:\n            'Traditional discounted cash flow model with 5-year projections and terminal value',\n          complexity: 'Intermediate',\n          timeToComplete: '45 min',\n          lastUsed: '2024-07-10',\n          popularity: 95,\n          features: [\n            '5-year projections',\n            'Terminal value',\n            'Sensitivity analysis',\n            'WACC calculation'\n          ]\n        },\n        {\n          id: 'dcf_tech',\n          name: 'DCF - Technology',\n          description: 'Specialized DCF for high-growth technology companies with adjusted metrics',\n          complexity: 'Advanced',\n          timeToComplete: '60 min',\n          lastUsed: '2024-07-08',\n          popularity: 87,\n          features: ['SaaS metrics', 'User-based projections', 'Churn analysis', 'Rule of 40']\n        },\n        {\n          id: 'sum_of_parts',\n          name: 'Sum-of-the-Parts',\n          description: 'Multi-business valuation with segment-specific assumptions and multiples',\n          complexity: 'Advanced',\n          timeToComplete: '90 min',\n          lastUsed: '2024-07-05',\n          popularity: 73,\n          features: [\n            'Segment analysis',\n            'Multiple approaches',\n            'Holding company discount',\n            'Synergy modeling'\n          ]\n        }\n      ]\n    },\n    lbo: {\n      name: 'LBO Models',\n      icon: 'Layers',\n      templates: [\n        {\n          id: 'lbo_standard',\n          name: 'LBO - Standard',\n          description: 'Complete leveraged buyout model with debt sizing and returns analysis',\n          complexity: 'Advanced',\n          timeToComplete: '120 min',\n          lastUsed: '2024-07-09',\n          popularity: 91,\n          features: ['Debt capacity', 'Returns waterfall', 'Management rollover', 'Exit scenarios']\n        },\n        {\n          id: 'lbo_growth',\n          name: 'LBO - Growth Equity',\n          description: 'Growth-focused LBO with minority investment and expansion capital',\n          complexity: 'Advanced',\n          timeToComplete: '100 min',\n          lastUsed: '2024-07-06',\n          popularity: 68,\n          features: [\n            'Growth capital',\n            'Minority stake',\n            'Management incentives',\n            'Expansion modeling'\n          ]\n        }\n      ]\n    },\n    comps: {\n      name: 'Comparable Analysis',\n      icon: 'BarChart3',\n      templates: [\n        {\n          id: 'trading_comps',\n          name: 'Trading Comparables',\n          description: 'Public company multiple analysis with statistical benchmarking',\n          complexity: 'Beginner',\n          timeToComplete: '30 min',\n          lastUsed: '2024-07-11',\n          popularity: 98,\n          features: [\n            'Multiple analysis',\n            'Statistical metrics',\n            'Peer screening',\n            'Premium/discount analysis'\n          ]\n        },\n        {\n          id: 'transaction_comps',\n          name: 'Transaction Comparables',\n          description: 'M&A transaction analysis with control premiums and synergies',\n          complexity: 'Intermediate',\n          timeToComplete: '45 min',\n          lastUsed: '2024-07-07',\n          popularity: 82,\n          features: [\n            'M&A multiples',\n            'Control premiums',\n            'Synergy analysis',\n            'Transaction screening'\n          ]\n        }\n      ]\n    },\n    merger: {\n      name: 'M&A Models',\n      icon: 'GitMerge',\n      templates: [\n        {\n          id: 'merger_model',\n          name: 'Merger Model',\n          description:\n            'Comprehensive merger analysis with accretion/dilution and pro forma statements',\n          complexity: 'Expert',\n          timeToComplete: '180 min',\n          lastUsed: '2024-07-04',\n          popularity: 76,\n          features: [\n            'Accretion/dilution',\n            'Pro forma statements',\n            'Synergy modeling',\n            'Financing structure'\n          ]\n        },\n        {\n          id: 'acquisition_model',\n          name: 'Acquisition Model',\n          description: 'Strategic acquisition analysis with integration costs and value creation',\n          complexity: 'Expert',\n          timeToComplete: '150 min',\n          lastUsed: '2024-07-03',\n          popularity: 71,\n          features: ['Integration costs', 'Value creation', 'Financing options', 'Risk analysis']\n        }\n      ]\n    }\n  };\n\n  const recentTemplates = [\n    { id: 'dcf_standard', name: 'DCF - Standard', lastUsed: '2024-07-11 14:30' },\n    { id: 'trading_comps', name: 'Trading Comparables', lastUsed: '2024-07-11 09:15' },\n    { id: 'lbo_standard', name: 'LBO - Standard', lastUsed: '2024-07-10 16:45' }\n  ];\n\n  const getComplexityColor = complexity => {\n    switch (complexity) {\n      case 'Beginner':\n        return 'text-success bg-success/10';\n      case 'Intermediate':\n        return 'text-warning bg-warning/10';\n      case 'Advanced':\n        return 'text-accent bg-accent/10';\n      case 'Expert':\n        return 'text-destructive bg-destructive/10';\n      default:\n        return 'text-muted-foreground bg-muted';\n    }\n  };\n\n  const filteredTemplates = () => {\n    const templates = templateCategories[selectedCategory]?.templates || [];\n    if (!searchTerm) return templates;\n\n    return templates.filter(\n      template =>\n        template.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        template.description.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  };\n\n  const handleTemplateSelect = template => {\n    if (onTemplateSelect) {\n      onTemplateSelect(template);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-card\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-border\">\n        <div className=\"flex items-center space-x-2\">\n          <Icon name=\"FileTemplate\" size={20} className=\"text-primary\" />\n          <h3 className=\"text-lg font-semibold text-foreground\">Model Templates</h3>\n        </div>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          iconName=\"Plus\"\n          onClick={() => setShowCreateModal(true)}\n        >\n          Create Template\n        </Button>\n      </div>\n\n      {/* Search */}\n      <div className=\"p-4 border-b border-border\">\n        <div className=\"relative\">\n          <Icon\n            name=\"Search\"\n            size={16}\n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\"\n          />\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={e => setSearchTerm(e.target.value)}\n            placeholder=\"Search templates...\"\n            className=\"w-full pl-10 pr-4 py-2 bg-input border border-border rounded-lg text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring\"\n          />\n        </div>\n      </div>\n\n      {/* Categories */}\n      <div className=\"flex border-b border-border overflow-x-auto\">\n        {Object.entries(templateCategories).map(([key, category]) => (\n          <button\n            key={key}\n            onClick={() => setSelectedCategory(key)}\n            className={`flex items-center space-x-2 px-4 py-3 text-sm font-medium whitespace-nowrap transition-smooth ${\n              selectedCategory === key\n                ? 'bg-primary text-primary-foreground border-b-2 border-primary'\n                : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n            }`}\n          >\n            <Icon name={category.icon} size={16} />\n            <span>{category.name}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* Templates Grid */}\n      <div className=\"flex-1 overflow-y-auto p-4\">\n        {/* Recent Templates */}\n        {!searchTerm && (\n          <div className=\"mb-6\">\n            <h4 className=\"text-sm font-medium text-foreground mb-3 flex items-center space-x-2\">\n              <Icon name=\"Clock\" size={16} />\n              <span>Recently Used</span>\n            </h4>\n            <div className=\"grid grid-cols-1 gap-2\">\n              {recentTemplates.map(template => (\n                <div\n                  key={template.id}\n                  className=\"flex items-center justify-between p-3 bg-muted rounded-lg hover:bg-muted/80 transition-smooth cursor-pointer\"\n                  onClick={() => handleTemplateSelect(template)}\n                >\n                  <div>\n                    <span className=\"font-medium text-foreground\">{template.name}</span>\n                    <p className=\"text-xs text-muted-foreground\">Last used: {template.lastUsed}</p>\n                  </div>\n                  <Icon name=\"ChevronRight\" size={16} className=\"text-muted-foreground\" />\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Template Cards */}\n        <div className=\"space-y-4\">\n          {filteredTemplates().map(template => (\n            <div\n              key={template.id}\n              className=\"p-4 bg-background border border-border rounded-lg hover:border-primary/50 transition-smooth cursor-pointer group\"\n              onClick={() => handleTemplateSelect(template)}\n            >\n              <div className=\"flex items-start justify-between mb-3\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2 mb-1\">\n                    <h5 className=\"font-semibold text-foreground group-hover:text-primary transition-colors\">\n                      {template.name}\n                    </h5>\n                    <span\n                      className={`px-2 py-1 rounded-full text-xs font-medium ${getComplexityColor(template.complexity)}`}\n                    >\n                      {template.complexity}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground\">{template.description}</p>\n                </div>\n                <div className=\"flex items-center space-x-2 ml-4\">\n                  <div className=\"flex items-center space-x-1 text-xs text-muted-foreground\">\n                    <Icon name=\"Star\" size={12} />\n                    <span>{template.popularity}%</span>\n                  </div>\n                  <Icon\n                    name=\"ChevronRight\"\n                    size={16}\n                    className=\"text-muted-foreground group-hover:text-primary transition-colors\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex items-center justify-between mb-3\">\n                <div className=\"flex items-center space-x-4 text-xs text-muted-foreground\">\n                  <div className=\"flex items-center space-x-1\">\n                    <Icon name=\"Clock\" size={12} />\n                    <span>{template.timeToComplete}</span>\n                  </div>\n                  <div className=\"flex items-center space-x-1\">\n                    <Icon name=\"Calendar\" size={12} />\n                    <span>Last used: {template.lastUsed}</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex flex-wrap gap-2\">\n                {template.features.map((feature, index) => (\n                  <span\n                    key={index}\n                    className=\"px-2 py-1 bg-muted text-xs text-muted-foreground rounded\"\n                  >\n                    {feature}\n                  </span>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {filteredTemplates().length === 0 && (\n          <div className=\"text-center py-12\">\n            <Icon name=\"FileX\" size={48} className=\"text-muted-foreground mx-auto mb-4\" />\n            <h4 className=\"text-lg font-medium text-foreground mb-2\">No templates found</h4>\n            <p className=\"text-muted-foreground\">\n              {searchTerm\n                ? 'Try adjusting your search terms'\n                : 'No templates available in this category'}\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Create Template Modal */}\n      {showCreateModal && (\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n          <div className=\"bg-card border border-border rounded-lg shadow-elevation-2 w-full max-w-md mx-4\">\n            <div className=\"flex items-center justify-between p-4 border-b border-border\">\n              <h3 className=\"text-lg font-semibold text-foreground\">Create New Template</h3>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                iconName=\"X\"\n                onClick={() => setShowCreateModal(false)}\n              />\n            </div>\n            <div className=\"p-4 space-y-4\">\n              <div>\n                <label className=\"text-sm font-medium text-foreground mb-2 block\">\n                  Template Name\n                </label>\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter template name...\"\n                  className=\"w-full px-3 py-2 bg-input border border-border rounded-lg text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring\"\n                />\n              </div>\n              <div>\n                <label className=\"text-sm font-medium text-foreground mb-2 block\">\n                  Description\n                </label>\n                <textarea\n                  placeholder=\"Describe your template...\"\n                  rows={3}\n                  className=\"w-full px-3 py-2 bg-input border border-border rounded-lg text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring resize-none\"\n                />\n              </div>\n              <div>\n                <label className=\"text-sm font-medium text-foreground mb-2 block\">Category</label>\n                <select className=\"w-full px-3 py-2 bg-input border border-border rounded-lg text-foreground focus:outline-none focus:ring-2 focus:ring-ring\">\n                  <option value=\"valuation\">Valuation Models</option>\n                  <option value=\"lbo\">LBO Models</option>\n                  <option value=\"comps\">Comparable Analysis</option>\n                  <option value=\"merger\">M&A Models</option>\n                </select>\n              </div>\n            </div>\n            <div className=\"flex items-center justify-end space-x-2 p-4 border-t border-border\">\n              <Button variant=\"outline\" size=\"sm\" onClick={() => setShowCreateModal(false)}>\n                Cancel\n              </Button>\n              <Button\n                variant=\"default\"\n                size=\"sm\"\n                onClick={() => {\n                  setShowCreateModal(false);\n                  if (onTemplateCreate) onTemplateCreate();\n                }}\n              >\n                Create Template\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ModelTemplates;\n","// Data transformation utilities for financial calculations\n\nexport const formatCurrency = (value, currency = 'USD', compact = false) => {\n  if (value === null || value === undefined || isNaN(value)) return 'N/A';\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n    notation: compact ? 'compact' : 'standard',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2\n  });\n\n  return formatter.format(value);\n};\n\nexport const formatPercentage = (value, decimals = 1) => {\n  if (value === null || value === undefined || isNaN(value)) return 'N/A';\n  return `${(value * 100).toFixed(decimals)}%`;\n};\n\nexport const formatNumber = (value, decimals = 2, compact = false) => {\n  if (value === null || value === undefined || isNaN(value)) return 'N/A';\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    notation: compact ? 'compact' : 'standard',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: decimals\n  });\n\n  return formatter.format(value);\n};\n\nexport const calculateCAGR = (beginningValue, endingValue, years) => {\n  if (beginningValue <= 0 || endingValue <= 0 || years <= 0) return 0;\n  return Math.pow(endingValue / beginningValue, 1 / years) - 1;\n};\n\nexport const calculateNPV = (cashFlows, discountRate) => {\n  return cashFlows.reduce((npv, cashFlow, index) => {\n    return npv + cashFlow / Math.pow(1 + discountRate, index + 1);\n  }, 0);\n};\n\nexport const calculateIRR = (cashFlows, guess = 0.1) => {\n  // Handle edge cases\n  if (!cashFlows || cashFlows.length === 0 || cashFlows.length === 1) {\n    return 0;\n  }\n\n  const maxIterations = 100;\n  const tolerance = 1e-6;\n\n  let rate = guess;\n\n  for (let i = 0; i < maxIterations; i++) {\n    let npv = cashFlows[0]; // Initial investment (negative)\n    let derivative = 0;\n\n    for (let j = 1; j < cashFlows.length; j++) {\n      const factor = Math.pow(1 + rate, j);\n      npv += cashFlows[j] / factor;\n      derivative -= (j * cashFlows[j]) / (factor * (1 + rate));\n    }\n\n    if (Math.abs(npv) < tolerance) {\n      return rate;\n    }\n\n    if (Math.abs(derivative) < tolerance) {\n      break; // Avoid division by zero\n    }\n\n    rate = rate - npv / derivative;\n  }\n\n  return rate;\n};\n\nexport const calculateWACC = (costOfEquity, costOfDebt, taxRate, debtRatio) => {\n  const equityWeight = 1 - debtRatio;\n  return costOfEquity * equityWeight + costOfDebt * debtRatio * (1 - taxRate);\n};\n\nexport const calculateTerminalValue = (finalCashFlow, terminalGrowthRate, discountRate) => {\n  return (finalCashFlow * (1 + terminalGrowthRate)) / (discountRate - terminalGrowthRate);\n};\n\nexport const projectCashFlows = (baseCashFlow, growthRates, years = 5) => {\n  const cashFlows = [];\n  let currentCashFlow = baseCashFlow;\n\n  for (let i = 0; i < years; i++) {\n    const growthRate = Array.isArray(growthRates)\n      ? growthRates[i] || growthRates[growthRates.length - 1]\n      : growthRates;\n    currentCashFlow *= 1 + growthRate;\n    cashFlows.push(currentCashFlow);\n  }\n\n  return cashFlows;\n};\n\nexport const calculateDCFValuation = inputs => {\n  const {\n    currentRevenue,\n    revenueGrowthRate,\n    fcfMargin,\n    wacc,\n    terminalGrowthRate,\n    sharesOutstanding,\n    totalDebt,\n    cash,\n    projectionYears = 5\n  } = inputs;\n\n  // Project revenues\n  const projectedRevenues = projectCashFlows(currentRevenue, revenueGrowthRate, projectionYears);\n\n  // Calculate free cash flows\n  const projectedFCFs = projectedRevenues.map(revenue => revenue * fcfMargin);\n\n  // Calculate terminal value\n  const terminalValue = calculateTerminalValue(\n    projectedFCFs[projectedFCFs.length - 1],\n    terminalGrowthRate,\n    wacc\n  );\n\n  // Calculate present values\n  const pvOfCashFlows = calculateNPV(projectedFCFs, wacc);\n  const pvOfTerminalValue = terminalValue / Math.pow(1 + wacc, projectionYears);\n\n  // Calculate enterprise and equity value\n  const enterpriseValue = pvOfCashFlows + pvOfTerminalValue;\n  const equityValue = enterpriseValue - totalDebt + cash;\n  const pricePerShare = equityValue / sharesOutstanding;\n\n  return {\n    enterpriseValue,\n    equityValue,\n    pricePerShare,\n    pvOfCashFlows,\n    pvOfTerminalValue,\n    terminalValue,\n    projectedRevenues,\n    projectedFCFs,\n    wacc,\n    terminalGrowthRate\n  };\n};\n\nexport const calculateLBOReturns = inputs => {\n  const {\n    purchasePrice,\n    ebitda,\n    debtMultiple = 5,\n    exitMultiple,\n    exitYear = 5,\n    managementFeeRate = 0.02,\n    carriedInterestRate = 0.2\n  } = inputs;\n\n  // Calculate purchase structure\n  const totalDebt = ebitda * debtMultiple;\n  const equityInvestment = purchasePrice - totalDebt;\n\n  // Project EBITDA growth (simplified)\n  const ebitdaGrowthRate = 0.05; // 5% annual growth assumption\n  const exitEbitda = ebitda * Math.pow(1 + ebitdaGrowthRate, exitYear);\n\n  // Calculate exit value\n  const exitEnterpriseValue = exitEbitda * exitMultiple;\n  const remainingDebt = totalDebt * 0.5; // Assume 50% debt paydown\n  const exitEquityValue = exitEnterpriseValue - remainingDebt;\n\n  // Calculate returns\n  const totalReturn = exitEquityValue / equityInvestment;\n  const irr = Math.pow(totalReturn, 1 / exitYear) - 1;\n  const moic = totalReturn; // Multiple of Invested Capital\n\n  // Calculate fees (simplified)\n  const totalManagementFees = equityInvestment * managementFeeRate * exitYear;\n  const carriedInterest = Math.max(0, (exitEquityValue - equityInvestment) * carriedInterestRate);\n\n  return {\n    equityInvestment,\n    totalDebt,\n    exitEquityValue,\n    totalReturn,\n    irr,\n    moic,\n    exitEbitda,\n    exitEnterpriseValue,\n    managementFees: totalManagementFees,\n    carriedInterest,\n    netReturn: exitEquityValue - totalManagementFees - carriedInterest\n  };\n};\n\nexport const calculateComparableMetrics = (companyData, peerData) => {\n  const calculateStatistics = values => {\n    const validValues = values.filter(v => v !== null && v !== undefined && !isNaN(v));\n    if (validValues.length === 0) return { median: null, mean: null, min: null, max: null };\n\n    validValues.sort((a, b) => a - b);\n    const median =\n      validValues.length % 2 === 0\n        ? (validValues[validValues.length / 2 - 1] + validValues[validValues.length / 2]) / 2\n        : validValues[Math.floor(validValues.length / 2)];\n\n    const mean = validValues.reduce((sum, v) => sum + v, 0) / validValues.length;\n\n    return {\n      median,\n      mean,\n      min: Math.min(...validValues),\n      max: Math.max(...validValues),\n      count: validValues.length\n    };\n  };\n\n  const metrics = ['marketCap', 'peRatio', 'evToEbitda', 'priceToBook', 'debtToEquity'];\n  const peerStats = {};\n\n  metrics.forEach(metric => {\n    const peerValues = peerData.map(peer => peer[metric]);\n    peerStats[metric] = calculateStatistics(peerValues);\n  });\n\n  return {\n    company: companyData,\n    peerStatistics: peerStats,\n    relativeValuation: {\n      marketCapPercentile: calculatePercentile(\n        companyData.marketCap,\n        peerData.map(p => p.marketCap)\n      ),\n      peRatioRelative: companyData.peRatio / peerStats.peRatio.median,\n      evEbitdaRelative: companyData.evToEbitda / peerStats.evToEbitda.median,\n      priceToBookRelative: companyData.priceToBook / peerStats.priceToBook.median\n    }\n  };\n};\n\nexport const calculatePercentile = (value, dataset) => {\n  const validDataset = dataset.filter(v => v !== null && v !== undefined && !isNaN(v));\n  if (validDataset.length === 0 || value === null || value === undefined || isNaN(value))\n    return null;\n\n  validDataset.sort((a, b) => a - b);\n  const belowCount = validDataset.filter(v => v < value).length;\n  return belowCount / validDataset.length;\n};\n\nexport const generateMonteCarloScenarios = (baseInputs, variableRanges, iterations = 1000) => {\n  const scenarios = [];\n\n  for (let i = 0; i < iterations; i++) {\n    const scenario = { ...baseInputs };\n\n    Object.keys(variableRanges).forEach(variable => {\n      const range = variableRanges[variable];\n      const randomValue = range.min + Math.random() * (range.max - range.min);\n      scenario[variable] = randomValue;\n    });\n\n    scenarios.push(scenario);\n  }\n\n  return scenarios;\n};\n\nexport const calculateSensitivityAnalysis = (\n  baseInputs,\n  sensitivityVariable,\n  range,\n  steps = 10\n) => {\n  const results = [];\n  const stepSize = (range.max - range.min) / (steps - 1);\n\n  for (let i = 0; i < steps; i++) {\n    const variableValue = range.min + stepSize * i;\n    const inputs = { ...baseInputs, [sensitivityVariable]: variableValue };\n\n    results.push({\n      [sensitivityVariable]: variableValue,\n      inputs\n    });\n  }\n\n  return results;\n};\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport { dataFetchingService } from '../../../services/dataFetching';\nimport {\n  calculateDCFValuation,\n  calculateLBOReturns,\n  calculateComparableMetrics,\n  formatCurrency,\n  formatPercentage,\n  formatNumber\n} from '../../../utils/dataTransformation';\n\nconst TerminalInterface = ({ onCommandExecute, calculationResults }) => {\n  const [commands, setCommands] = useState([\n    {\n      id: 1,\n      type: 'system',\n      content: 'FinanceAnalyst Pro Terminal v2.3.1 - Ready for financial modeling',\n      timestamp: new Date()\n    },\n    {\n      id: 2,\n      type: 'system',\n      content:\n        'Type \"help\" for available commands or start with DCF(AAPL), LBO(TSLA), or COMP(MSFT)',\n      timestamp: new Date()\n    }\n  ]);\n  const [currentInput, setCurrentInput] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [selectedSuggestion, setSelectedSuggestion] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const terminalRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const financialFunctions = [\n    'DCF(ticker) - Discounted Cash Flow with real data',\n    'LBO(ticker) - Leveraged Buyout analysis with real data',\n    'COMP(ticker) - Comparable company analysis',\n    'FETCH(ticker) - Get comprehensive company data',\n    'PROFILE(ticker) - Company profile and metrics',\n    'FINANCIALS(ticker, statement) - Financial statements',\n    'MARKET(ticker) - Real-time market data',\n    'PEERS(ticker) - Peer company analysis',\n    'SEC(ticker, filing_type) - SEC filings data',\n    'NPV(cash_flows, discount_rate)',\n    'IRR(cash_flows)',\n    'WACC(cost_equity, cost_debt, tax_rate, debt_ratio)',\n    'CAPM(risk_free, beta, market_return)',\n    'SENSITIVITY(ticker, variable, range)',\n    'MONTE_CARLO(ticker, iterations)',\n    'BETA(ticker)',\n    'SHARPE_RATIO(ticker)',\n    'VAR(ticker, confidence_level)',\n    'CORRELATION(ticker1, ticker2)',\n    'VOLATILITY(ticker)',\n    'BLACK_SCHOLES(spot, strike, time, rate, volatility)',\n    'BOND_PRICE(face_value, coupon_rate, yield, maturity)'\n  ];\n\n  const sampleCommands = [\n    'help',\n    'clear',\n    'history',\n    'export excel',\n    'export pdf',\n    'save model',\n    'load template',\n    'set currency USD',\n    'set precision 2',\n    'show variables',\n    'validate model',\n    'run simulation',\n    'status',\n    'cache clear',\n    'rate limits'\n  ];\n\n  useEffect(() => {\n    if (terminalRef.current) {\n      terminalRef.current.scrollTop = terminalRef.current.scrollHeight;\n    }\n  }, [commands]);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setCurrentInput(value);\n\n    if (value.length > 0) {\n      const allSuggestions = [...financialFunctions, ...sampleCommands];\n      const filtered = allSuggestions.filter(item =>\n        item.toLowerCase().includes(value.toLowerCase())\n      );\n      setSuggestions(filtered.slice(0, 8));\n      setShowSuggestions(filtered.length > 0);\n      setSelectedSuggestion(0);\n    } else {\n      setShowSuggestions(false);\n    }\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      executeCommand();\n    } else if (e.key === 'ArrowUp' && showSuggestions) {\n      e.preventDefault();\n      setSelectedSuggestion(prev => Math.max(0, prev - 1));\n    } else if (e.key === 'ArrowDown' && showSuggestions) {\n      e.preventDefault();\n      setSelectedSuggestion(prev => Math.min(suggestions.length - 1, prev + 1));\n    } else if (e.key === 'Tab' && showSuggestions) {\n      e.preventDefault();\n      setCurrentInput(suggestions[selectedSuggestion]);\n      setShowSuggestions(false);\n    } else if (e.key === 'Escape') {\n      setShowSuggestions(false);\n    }\n  };\n\n  const executeCommand = async() => {\n    if (!currentInput.trim()) return;\n\n    const newCommand = {\n      id: commands.length + 1,\n      type: 'user',\n      content: currentInput,\n      timestamp: new Date()\n    };\n\n    setCommands(prev => [...prev, newCommand]);\n    setIsLoading(true);\n    setCurrentInput('');\n    setShowSuggestions(false);\n\n    try {\n      const response = await processCommand(currentInput);\n\n      const responseCommand = {\n        id: commands.length + 2,\n        type: response.type,\n        content: response.content,\n        timestamp: new Date(),\n        data: response.data\n      };\n\n      setCommands(prev => [...prev, responseCommand]);\n\n      if (onCommandExecute) {\n        onCommandExecute(currentInput, response);\n      }\n    } catch (error) {\n      const errorCommand = {\n        id: commands.length + 2,\n        type: 'error',\n        content: `Error: ${error.message}`,\n        timestamp: new Date()\n      };\n      setCommands(prev => [...prev, errorCommand]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const processCommand = async command => {\n    const cmd = command.toLowerCase().trim();\n\n    if (cmd === 'help') {\n      return {\n        type: 'system',\n        content: `Available Commands:\n\n📊 Real-Time Data Functions:\n• DCF(AAPL) - Discounted Cash Flow with live data\n• LBO(TSLA) - Leveraged Buyout analysis\n• COMP(MSFT) - Comparable company analysis\n• FETCH(GOOGL) - Get comprehensive company data\n• PROFILE(AMZN) - Company profile and metrics\n• MARKET(NFLX) - Real-time market data\n• PEERS(META) - Peer company analysis\n• SEC(AAPL, 10-K) - SEC filings data\n\n🧮 Classic Financial Functions:\n• NPV([cf1,cf2,cf3], 0.10) - Net Present Value\n• IRR([cf1,cf2,cf3]) - Internal Rate of Return\n• WACC(0.12, 0.05, 0.25, 0.3) - Cost of Capital\n\n🔬 Analysis Tools:\n• SENSITIVITY(AAPL, wacc, [0.08,0.12]) - Sensitivity analysis\n• MONTE_CARLO(AAPL, 1000) - Monte Carlo simulation\n\n🛠️ Utility Commands:\n• clear - Clear terminal\n• status - Show system and API status\n• validate - Validate API keys\n• cache clear - Clear data cache\n• export excel/pdf - Export current model\n• save model - Save current work\n\n💡 Examples:\n• DCF(AAPL) - Runs full DCF with live Apple data\n• validate - Check your API key configuration\n• status - See current system status\n\n${dataFetchingService.demoMode ? '🚨 Note: Currently running in demo mode. Use \"validate\" to check API keys.' : '✅ Live data mode active'}`\n      };\n    }\n\n    if (cmd === 'clear') {\n      setTimeout(() => setCommands([]), 100);\n      return { type: 'system', content: 'Terminal cleared.' };\n    }\n\n    if (cmd === 'status') {\n      try {\n        const apiStatus = await dataFetchingService.getApiStatus();\n        const validation = apiStatus.validation;\n\n        let statusContent = `System Status:\n\n📊 Data Sources: ${apiStatus.demoMode ? 'Demo Mode (Mock Data)' : 'Live APIs Connected'}\n🔄 Cache: ${apiStatus.cacheSize} entries\n⏱️ Rate Limits: ${apiStatus.demoMode ? 'Disabled (Demo)' : 'Active'}\n🌐 Network: Connected\n💾 Cache TTL: 15min-24hrs depending on data type\n🎯 Overall API Status: ${validation.overall.toUpperCase()}\n\n🔑 API Key Validation:`;\n\n        // Add status for each service\n        Object.entries(validation.services).forEach(([service, result]) => {\n          const statusIcon =\n            result.status === 'valid'\n              ? '✅'\n              : result.status === 'missing'\n                ? '❌'\n                : result.status === 'invalid'\n                  ? '🚫'\n                  : result.status === 'rate_limited'\n                    ? '⚠️'\n                    : '❓';\n          statusContent += `\\n• ${service}: ${statusIcon} ${result.message}`;\n        });\n\n        if (validation.recommendations.length > 0) {\n          statusContent += '\\n\\n💡 Recommendations:';\n          validation.recommendations.forEach(rec => {\n            statusContent += `\\n• ${rec}`;\n          });\n        }\n\n        statusContent += `\\n\\nLast Updated: ${new Date().toLocaleTimeString()}`;\n\n        return {\n          type: 'info',\n          content: statusContent\n        };\n      } catch (error) {\n        return {\n          type: 'error',\n          content: `Error checking system status: ${error.message}`\n        };\n      }\n    }\n\n    if (cmd === 'validate') {\n      try {\n        const validation = await dataFetchingService.validateApiKeys();\n\n        let content = `🔍 API Key Validation Results:\n\nOverall Status: ${validation.overall.toUpperCase()}\n\nService Details:`;\n\n        Object.entries(validation.services).forEach(([service, result]) => {\n          const statusIcon =\n            result.status === 'valid'\n              ? '✅'\n              : result.status === 'missing'\n                ? '❌'\n                : result.status === 'invalid'\n                  ? '🚫'\n                  : result.status === 'rate_limited'\n                    ? '⚠️'\n                    : result.status === 'network_error'\n                      ? '🌐'\n                      : '❓';\n          content += `\\n• ${service}: ${statusIcon} ${result.message}`;\n        });\n\n        if (validation.recommendations.length > 0) {\n          content += '\\n\\n💡 Recommendations:';\n          validation.recommendations.forEach(rec => {\n            content += `\\n• ${rec}`;\n          });\n        }\n\n        content += `\\n\\nValidation completed at: ${validation.timestamp.toLocaleTimeString()}`;\n\n        return {\n          type:\n            validation.overall === 'complete'\n              ? 'success'\n              : validation.overall === 'demo'\n                ? 'warning'\n                : 'info',\n          content\n        };\n      } catch (error) {\n        return {\n          type: 'error',\n          content: `Validation failed: ${error.message}`\n        };\n      }\n    }\n\n    if (cmd === 'cache clear') {\n      dataFetchingService.cache.clear();\n      dataFetchingService.cacheExpiry.clear();\n      return { type: 'success', content: 'Data cache cleared successfully.' };\n    }\n\n    // DCF with real data\n    if (cmd.match(/^dcf\\s*\\(\\s*([A-Z]{1,5})\\s*\\)$/i)) {\n      const ticker = cmd.match(/^dcf\\s*\\(\\s*([A-Z]{1,5})\\s*\\)$/i)[1].toUpperCase();\n\n      const loadingCommand = {\n        id: commands.length + 2,\n        type: 'info',\n        content: `🔄 Fetching comprehensive data for ${ticker}...\\n• Company profile and metrics\\n• 5 years of financial statements\\n• Market data and pricing\\n• Calculating DCF valuation...\\n${dataFetchingService.demoMode ? '\\n⚠️  Using demo data - configure API keys for live data' : '\\n✅ Using live market data'}`,\n        timestamp: new Date()\n      };\n      setCommands(prev => [...prev, loadingCommand]);\n\n      try {\n        const dcfInputs = await dataFetchingService.fetchDCFInputs(ticker);\n        const dcfResult = calculateDCFValuation(dcfInputs);\n\n        const upside =\n          ((dcfResult.pricePerShare - dcfInputs.currentPrice) / dcfInputs.currentPrice) * 100;\n\n        return {\n          type: 'success',\n          content: `DCF Analysis Complete for ${dcfInputs.companyName} (${ticker})\\n\\n📈 VALUATION RESULTS:\\n• Current Price: ${formatCurrency(dcfInputs.currentPrice)}\\n• DCF Fair Value: ${formatCurrency(dcfResult.pricePerShare)}\\n• Upside/(Downside): ${formatPercentage(upside / 100)}\\n\\n💰 VALUE BREAKDOWN:\\n• Enterprise Value: ${formatCurrency(dcfResult.enterpriseValue, 'USD', true)}\\n• Equity Value: ${formatCurrency(dcfResult.equityValue, 'USD', true)}\\n• PV of Cash Flows: ${formatCurrency(dcfResult.pvOfCashFlows, 'USD', true)}\\n• PV of Terminal Value: ${formatCurrency(dcfResult.pvOfTerminalValue, 'USD', true)}\\n\\n🔢 KEY ASSUMPTIONS:\\n• Revenue Growth: ${formatPercentage(dcfInputs.revenueGrowthRate)}\\n• FCF Margin: ${formatPercentage(dcfInputs.fcfMargin)}\\n• WACC: ${formatPercentage(dcfInputs.wacc)}\\n• Terminal Growth: ${formatPercentage(dcfInputs.terminalGrowthRate)}\\n• Beta: ${formatNumber(dcfInputs.beta, 2)}\\n\\n📊 Current Metrics:\\n• Market Cap: ${formatCurrency(dcfInputs.marketCap, 'USD', true)}\\n• P/E Ratio: ${formatNumber(dcfInputs.peRatio, 1)}x\\n• Net Debt: ${formatCurrency(dcfInputs.totalDebt - dcfInputs.cash, 'USD', true)}\\n\\n${dataFetchingService.demoMode ? '⚠️  Demo data used - results are illustrative only' : '✅ Analysis based on live market data'}`,\n          data: { dcfInputs, dcfResult, analysis: 'dcf' }\n        };\n      } catch (error) {\n        return {\n          type: 'error',\n          content: `DCF Analysis Failed: ${error.message}\\n\\nTroubleshooting:\\n• Check ticker symbol spelling\\n• Ensure internet connection\\n• Verify API keys are configured (if not using demo mode)\\n• Try 'status' command to check system status`\n        };\n      }\n    }\n\n    // LBO with real data\n    if (cmd.match(/^lbo\\s*\\(\\s*([A-Z]{1,5})\\s*\\)$/i)) {\n      const ticker = cmd.match(/^lbo\\s*\\(\\s*([A-Z]{1,5})\\s*\\)$/i)[1].toUpperCase();\n\n      const loadingCommand = {\n        id: commands.length + 2,\n        type: 'info',\n        content: `🔄 Analyzing LBO potential for ${ticker}...\\n• Fetching financial statements\\n• Calculating debt capacity\\n• Analyzing peer multiples\\n• Computing returns scenarios...\\n${dataFetchingService.demoMode ? '\\n⚠️  Using demo data - configure API keys for live data' : '\\n✅ Using live market data'}`,\n        timestamp: new Date()\n      };\n      setCommands(prev => [...prev, loadingCommand]);\n\n      try {\n        const lboInputs = await dataFetchingService.fetchLBOInputs(ticker);\n\n        // Calculate multiple scenarios\n        const scenarios = [\n          { name: 'Conservative', exitMultiple: lboInputs.avgPeerMultiple * 0.9, debtMultiple: 4 },\n          { name: 'Base Case', exitMultiple: lboInputs.avgPeerMultiple, debtMultiple: 5 },\n          { name: 'Aggressive', exitMultiple: lboInputs.avgPeerMultiple * 1.1, debtMultiple: 6 }\n        ];\n\n        const results = scenarios.map(scenario => {\n          const purchasePrice = lboInputs.suggestedPurchasePrice;\n          return {\n            scenario: scenario.name,\n            ...calculateLBOReturns({\n              purchasePrice,\n              ebitda: lboInputs.ebitda,\n              debtMultiple: scenario.debtMultiple,\n              exitMultiple: scenario.exitMultiple\n            })\n          };\n        });\n\n        const baseCase = results[1];\n\n        return {\n          type: 'success',\n          content: `LBO Analysis Complete for ${lboInputs.companyName} (${ticker})\\n\\n🎯 BASE CASE SCENARIO:\\n• Purchase Price: ${formatCurrency(lboInputs.suggestedPurchasePrice, 'USD', true)}\\n• Equity Investment: ${formatCurrency(baseCase.equityInvestment, 'USD', true)}\\n• Total Debt: ${formatCurrency(baseCase.totalDebt, 'USD', true)}\\n• 5-Year IRR: ${formatPercentage(baseCase.irr)}\\n• Money Multiple: ${formatNumber(baseCase.moic, 1)}x\\n\\n📊 TRANSACTION METRICS:\\n• Current EV/EBITDA: ${formatNumber(lboInputs.evEbitdaMultiple, 1)}x\\n• Purchase Multiple: ${formatNumber(lboInputs.suggestedPurchasePrice / lboInputs.ebitda, 1)}x\\n• Debt/EBITDA: ${formatNumber(baseCase.totalDebt / lboInputs.ebitda, 1)}x\\n• Current Debt/EBITDA: ${formatNumber(lboInputs.debtToEbitda, 1)}x\\n\\n💼 SCENARIO ANALYSIS:\\n• Conservative IRR: ${formatPercentage(results[0].irr)} (${formatNumber(results[0].moic, 1)}x)\\n• Base Case IRR: ${formatPercentage(results[1].irr)} (${formatNumber(results[1].moic, 1)}x)\\n• Aggressive IRR: ${formatPercentage(results[2].irr)} (${formatNumber(results[2].moic, 1)}x)\\n\\n⚠️  KEY RISKS:\\n• Interest Coverage: ${formatNumber(lboInputs.interestCoverage, 1)}x\\n• Max Debt Capacity: ${formatCurrency(lboInputs.maxDebtCapacity, 'USD', true)}\\n• Current Market Cap: ${formatCurrency(lboInputs.marketCap, 'USD', true)}\\n\\n${dataFetchingService.demoMode ? '⚠️  Demo data used - results are illustrative only' : '✅ Analysis based on live market data'}`,\n          data: { lboInputs, results, analysis: 'lbo' }\n        };\n      } catch (error) {\n        return {\n          type: 'error',\n          content: `LBO Analysis Failed: ${error.message}\\n\\nTroubleshooting:\\n• Check ticker symbol spelling\\n• Ensure internet connection\\n• Verify API keys are configured (if not using demo mode)\\n• Try 'status' command to check system status`\n        };\n      }\n    }\n\n    // Comparable company analysis\n    if (cmd.match(/^comp\\s*\\(\\s*([A-Z]{1,5})\\s*\\)$/i)) {\n      const ticker = cmd.match(/^comp\\s*\\(\\s*([A-Z]{1,5})\\s*\\)$/i)[1].toUpperCase();\n\n      const loadingCommand = {\n        id: commands.length + 2,\n        type: 'info',\n        content: `🔄 Building comparable company analysis for ${ticker}...\\n• Identifying peer companies\\n• Fetching peer financial data\\n• Calculating valuation multiples\\n• Generating relative analysis...\\n${dataFetchingService.demoMode ? '\\n⚠️  Using demo data - configure API keys for live data' : '\\n✅ Using live market data'}`,\n        timestamp: new Date()\n      };\n      setCommands(prev => [...prev, loadingCommand]);\n\n      try {\n        const [profile, peers] = await Promise.all([\n          dataFetchingService.fetchCompanyProfile(ticker),\n          dataFetchingService.fetchPeerComparables(ticker)\n        ]);\n\n        const companyData = {\n          symbol: ticker,\n          name: profile.companyName,\n          marketCap: profile.mktCap,\n          peRatio: profile.pe,\n          evToEbitda: profile.enterpriseValueOverEBITDA,\n          priceToBook: profile.pb,\n          debtToEquity: profile.debtToEquity\n        };\n\n        const compAnalysis = calculateComparableMetrics(companyData, peers);\n\n        return {\n          type: 'success',\n          content: `Comparable Company Analysis for ${profile.companyName} (${ticker})\\n\\n🏢 PEER GROUP (${peers.length} companies):\\n${peers\n            .slice(0, 5)\n            .map(peer => `• ${peer.symbol}: ${peer.name}`)\n            .join(\n              '\\n'\n            )}\\n\\n📊 VALUATION MULTIPLES vs PEERS:\\n• P/E Ratio: ${formatNumber(companyData.peRatio, 1)}x (Median: ${formatNumber(compAnalysis.peerStatistics.peRatio.median, 1)}x)\\n• EV/EBITDA: ${formatNumber(companyData.evToEbitda, 1)}x (Median: ${formatNumber(compAnalysis.peerStatistics.evToEbitda.median, 1)}x)\\n• Price/Book: ${formatNumber(companyData.priceToBook, 1)}x (Median: ${formatNumber(compAnalysis.peerStatistics.priceToBook.median, 1)}x)\\n• Debt/Equity: ${formatNumber(companyData.debtToEquity, 1)}x (Median: ${formatNumber(compAnalysis.peerStatistics.debtToEquity.median, 1)}x)\\n\\n📈 RELATIVE VALUATION:\\n• P/E vs Peers: ${formatPercentage(compAnalysis.relativeValuation.peRatioRelative - 1)} ${compAnalysis.relativeValuation.peRatioRelative > 1 ? 'premium' : 'discount'}\\n• EV/EBITDA vs Peers: ${formatPercentage(compAnalysis.relativeValuation.evEbitdaRelative - 1)} ${compAnalysis.relativeValuation.evEbitdaRelative > 1 ? 'premium' : 'discount'}\\n• Market Cap Percentile: ${formatPercentage(compAnalysis.relativeValuation.marketCapPercentile)}\\n\\n💰 PEER STATISTICS:\\n• P/E Range: ${formatNumber(compAnalysis.peerStatistics.peRatio.min, 1)}x - ${formatNumber(compAnalysis.peerStatistics.peRatio.max, 1)}x\\n• EV/EBITDA Range: ${formatNumber(compAnalysis.peerStatistics.evToEbitda.min, 1)}x - ${formatNumber(compAnalysis.peerStatistics.evToEbitda.max, 1)}x\\n• Average Market Cap: ${formatCurrency(compAnalysis.peerStatistics.marketCap.mean, 'USD', true)}\\n\\n${dataFetchingService.demoMode ? '⚠️  Demo data used - results are illustrative only' : '✅ Analysis based on live market data'}`,\n          data: { companyData, peers, compAnalysis, analysis: 'comparable' }\n        };\n      } catch (error) {\n        return {\n          type: 'error',\n          content: `Comparable Analysis Failed: ${error.message}\\n\\nTroubleshooting:\\n• Check ticker symbol spelling\\n• Ensure internet connection\\n• Verify API keys are configured (if not using demo mode)\\n• Try 'status' command to check system status`\n        };\n      }\n    }\n\n    // Fetch comprehensive company data\n    if (cmd.match(/^fetch\\s*\\(\\s*([A-Z]{1,5})\\s*\\)$/i)) {\n      const ticker = cmd.match(/^fetch\\s*\\(\\s*([A-Z]{1,5})\\s*\\)$/i)[1].toUpperCase();\n\n      try {\n        const profile = await dataFetchingService.fetchCompanyProfile(ticker);\n        const marketData = await dataFetchingService.fetchMarketData(ticker);\n\n        return {\n          type: 'success',\n          content: `Company Data for ${profile.companyName} (${ticker})\\n\\n💼 PROFILE:\\n• Sector: ${profile.sector}\\n• Industry: ${profile.industry}\\n• Employees: ${formatNumber(profile.fullTimeEmployees, 0)}\\n• Founded: ${profile.ipoDate}\\n\\n📊 MARKET DATA:\\n• Current Price: ${formatCurrency(marketData.currentPrice)}\\n• Market Cap: ${formatCurrency(profile.mktCap, 'USD', true)}\\n• 52W Range: ${profile.range} \\n• Volume: ${formatNumber(marketData.volume, 0, true)}\\n• Beta: ${formatNumber(profile.beta, 2)}\\n\\n📈 VALUATION:\\n• P/E Ratio: ${formatNumber(profile.pe, 1)}x\\n• P/B Ratio: ${formatNumber(profile.pb, 1)}x\\n• EV/EBITDA: ${formatNumber(profile.enterpriseValueOverEBITDA, 1)}x\\n• Debt/Equity: ${formatNumber(profile.debtToEquity, 1)}x\\n\\n💰 PROFITABILITY:\\n• Revenue TTM: ${formatCurrency(profile.revenueTTM, 'USD', true)}\\n• Gross Margin: ${formatPercentage(profile.grossProfitMargin)}\\n• Net Margin: ${formatPercentage(profile.netProfitMargin)}\\n• ROE: ${formatPercentage(profile.returnOnEquityTTM)}\\n• ROA: ${formatPercentage(profile.returnOnAssetsTTM)}\\n\\n${dataFetchingService.demoMode ? '⚠️  Demo data used - results are illustrative only' : '✅ Data based on live market feeds'}`,\n          data: { profile, marketData, analysis: 'comprehensive' }\n        };\n      } catch (error) {\n        return {\n          type: 'error',\n          content: `Data Fetch Failed: ${error.message}\\n\\nTroubleshooting:\\n• Check ticker symbol spelling\\n• Ensure internet connection\\n• Verify API keys are configured (if not using demo mode)\\n• Try 'status' command to check system status`\n        };\n      }\n    }\n\n    // Classic NPV calculation\n    if (cmd.match(/^npv\\s*\\(\\s*\\[([^\\]]+)\\]\\s*,\\s*([\\d.]+)\\s*\\)$/i)) {\n      const match = cmd.match(/^npv\\s*\\(\\s*\\[([^\\]]+)\\]\\s*,\\s*([\\d.]+)\\s*\\)$/i);\n      const cashFlows = match[1].split(',').map(cf => parseFloat(cf.trim()));\n      const discountRate = parseFloat(match[2]);\n\n      let npv = 0;\n      const pvBreakdown = cashFlows.map((cf, index) => {\n        const pv = cf / Math.pow(1 + discountRate, index + 1);\n        npv += pv;\n        return { year: index + 1, cashFlow: cf, presentValue: pv };\n      });\n\n      return {\n        type: 'success',\n        content: `NPV Calculation:\\n\\nCash Flows: [${cashFlows.map(cf => formatCurrency(cf)).join(', ')}]\\nDiscount Rate: ${formatPercentage(discountRate)}\\n\\nNet Present Value: ${formatCurrency(npv)}\\n\\nYear-by-Year Breakdown:\\n${pvBreakdown.map(item => `Year ${item.year}: ${formatCurrency(item.cashFlow)} → PV: ${formatCurrency(item.presentValue)}`).join('\\n')}`,\n        data: { npv, cashFlows, discountRate, pvBreakdown }\n      };\n    }\n\n    if (cmd === 'show variables') {\n      return {\n        type: 'info',\n        content: `Current Model Variables:\\n\\n• Revenue Growth: 5.2%\\n• EBITDA Margin: 23.5%\\n• Tax Rate: 25.0%\\n• WACC: 9.8%\\n• Terminal Growth: 2.5%\\n• Debt/Equity: 0.4x\\n• Beta: 1.15\\n• Risk-free Rate: 3.2%\\n• Market Premium: 6.5%\\n\\n🔄 Data Sources Active:\\n${dataFetchingService.demoMode ? '• Demo Mode: Mock data for all sources' : '• Alpha Vantage: Market data\\n• FMP: Financial statements\\n• SEC EDGAR: Regulatory filings\\n• Yahoo Finance: Real-time quotes'}`\n      };\n    }\n\n    if (cmd === 'validate model') {\n      return {\n        type: 'warning',\n        content: `Model Validation Results:\\n\\n✓ All formulas syntactically correct\\n✓ No circular references detected\\n${dataFetchingService.demoMode ? '⚠ Demo mode: Using mock data' : '✓ Data sources responding normally'}\\n${dataFetchingService.demoMode ? '⚠ Configure API keys for live validation' : '✓ Rate limits within acceptable range'}\\n✓ Cache functioning properly\\n✓ All required inputs available\\n\\nOverall Status: ${dataFetchingService.demoMode ? 'Valid (Demo Mode)' : 'Valid with live data'}\\nLast validation: ${new Date().toLocaleTimeString()}`\n      };\n    }\n\n    return {\n      type: 'error',\n      content: `Unknown command: \"${command}\"\\n\\nTry these real-data commands:\\n• DCF(AAPL) - Apple DCF analysis\\n• LBO(TSLA) - Tesla LBO analysis\\n• COMP(MSFT) - Microsoft comparables\\n• FETCH(GOOGL) - Google company data\\n\\nType \"help\" for full command list.\\n\\n${dataFetchingService.demoMode ? '💡 Tip: Configure API keys in your .env file for live data analysis' : ''}`\n    };\n  };\n\n  const selectSuggestion = suggestion => {\n    setCurrentInput(suggestion);\n    setShowSuggestions(false);\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-gray-900 text-green-400 font-mono text-sm\">\n      {/* Terminal Header */}\n      <div className=\"flex items-center justify-between px-4 py-2 bg-gray-800 border-b border-gray-700\">\n        <div className=\"flex items-center space-x-2\">\n          <Icon name=\"Terminal\" size={16} className=\"text-green-400\" />\n          <span className=\"text-green-400 font-medium\">Financial Terminal</span>\n          <span className=\"text-xs text-blue-400\">• Live Data Enabled</span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <div\n            className={`w-2 h-2 rounded-full ${isLoading ? 'bg-yellow-400 animate-pulse' : 'bg-green-400'}`}\n          />\n          <span className=\"text-xs text-gray-400\">{isLoading ? 'Processing...' : 'Connected'}</span>\n        </div>\n      </div>\n\n      {/* Terminal Content */}\n      <div\n        ref={terminalRef}\n        className=\"flex-1 overflow-y-auto p-4 space-y-2\"\n        onClick={() => inputRef.current?.focus()}\n      >\n        {commands.map(command => (\n          <div key={command.id} className=\"space-y-1\">\n            <div className=\"flex items-start space-x-2\">\n              {command.type === 'user' && (\n                <span className=\"text-blue-400 shrink-0\">analyst@finpro:~$</span>\n              )}\n              {command.type === 'system' && (\n                <Icon name=\"Info\" size={14} className=\"text-yellow-400 mt-0.5 shrink-0\" />\n              )}\n              {command.type === 'success' && (\n                <Icon name=\"CheckCircle\" size={14} className=\"text-green-400 mt-0.5 shrink-0\" />\n              )}\n              {command.type === 'error' && (\n                <Icon name=\"XCircle\" size={14} className=\"text-red-400 mt-0.5 shrink-0\" />\n              )}\n              {command.type === 'warning' && (\n                <Icon name=\"AlertTriangle\" size={14} className=\"text-yellow-400 mt-0.5 shrink-0\" />\n              )}\n              {command.type === 'info' && (\n                <Icon name=\"Info\" size={14} className=\"text-blue-400 mt-0.5 shrink-0\" />\n              )}\n              <div className=\"flex-1\">\n                <pre className=\"whitespace-pre-wrap break-words\">{command.content}</pre>\n                {command.data && (\n                  <div className=\"mt-2 p-2 bg-gray-800 rounded border border-gray-700\">\n                    <div className=\"text-xs text-gray-400\">\n                      Real-time calculation data available • Analysis:{' '}\n                      {command.data.analysis || 'financial'}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n\n        {/* Loading indicator */}\n        {isLoading && (\n          <div className=\"flex items-center space-x-2 text-yellow-400\">\n            <div className=\"animate-spin w-4 h-4 border-2 border-yellow-400 border-t-transparent rounded-full\" />\n            <span>Fetching real-time data...</span>\n          </div>\n        )}\n\n        {/* Input Line */}\n        <div className=\"flex items-center space-x-2 relative\">\n          <span className=\"text-blue-400 shrink-0\">analyst@finpro:~$</span>\n          <div className=\"flex-1 relative\">\n            <input\n              ref={inputRef}\n              type=\"text\"\n              value={currentInput}\n              onChange={handleInputChange}\n              onKeyDown={handleKeyDown}\n              className=\"w-full bg-transparent text-green-400 outline-none border-none\"\n              placeholder=\"Enter command with ticker (e.g., DCF(AAPL))...\"\n              autoComplete=\"off\"\n              disabled={isLoading}\n            />\n\n            {/* Suggestions Dropdown */}\n            {showSuggestions && (\n              <div className=\"absolute top-full left-0 right-0 mt-1 bg-gray-800 border border-gray-600 rounded-lg shadow-lg z-10 max-h-48 overflow-y-auto\">\n                {suggestions.map((suggestion, index) => (\n                  <div\n                    key={index}\n                    className={`px-3 py-2 cursor-pointer text-sm ${\n                      index === selectedSuggestion\n                        ? 'bg-gray-700 text-green-300'\n                        : 'text-gray-300 hover:bg-gray-700'\n                    }`}\n                    onClick={() => selectSuggestion(suggestion)}\n                  >\n                    {suggestion}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Terminal Footer */}\n      <div className=\"px-4 py-2 bg-gray-800 border-t border-gray-700\">\n        <div className=\"flex items-center justify-between text-xs text-gray-400\">\n          <div className=\"flex items-center space-x-4\">\n            <span>Tab: Autocomplete</span>\n            <span>Ctrl+C: Cancel</span>\n            <span>↑↓: Navigate suggestions</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <span>Commands: {commands.filter(c => c.type === 'user').length}</span>\n            <span>•</span>\n            <span>Cache: {dataFetchingService?.cache?.size || 0}</span>\n            <span>•</span>\n            <span>{new Date().toLocaleTimeString()}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TerminalInterface;\n","import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst VariableInputs = ({ onVariableChange, onBulkEdit }) => {\n  const [activeSection, setActiveSection] = useState('assumptions');\n  const [editMode, setEditMode] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const [variables, setVariables] = useState({\n    assumptions: {\n      revenue_growth: {\n        value: 0.052,\n        unit: '%',\n        description: 'Annual revenue growth rate',\n        category: 'Growth'\n      },\n      ebitda_margin: {\n        value: 0.235,\n        unit: '%',\n        description: 'EBITDA as % of revenue',\n        category: 'Profitability'\n      },\n      tax_rate: { value: 0.25, unit: '%', description: 'Corporate tax rate', category: 'Tax' },\n      capex_revenue: {\n        value: 0.035,\n        unit: '%',\n        description: 'CapEx as % of revenue',\n        category: 'Investment'\n      },\n      working_capital_revenue: {\n        value: 0.02,\n        unit: '%',\n        description: 'Working capital as % of revenue',\n        category: 'Working Capital'\n      },\n      terminal_growth: {\n        value: 0.025,\n        unit: '%',\n        description: 'Long-term growth rate',\n        category: 'Terminal'\n      }\n    },\n    cost_of_capital: {\n      risk_free_rate: {\n        value: 0.032,\n        unit: '%',\n        description: 'Risk-free rate (10Y Treasury)',\n        category: 'Market'\n      },\n      market_premium: {\n        value: 0.065,\n        unit: '%',\n        description: 'Equity risk premium',\n        category: 'Market'\n      },\n      beta: { value: 1.15, unit: 'x', description: 'Asset beta coefficient', category: 'Risk' },\n      cost_of_debt: {\n        value: 0.045,\n        unit: '%',\n        description: 'Pre-tax cost of debt',\n        category: 'Debt'\n      },\n      debt_equity_ratio: {\n        value: 0.4,\n        unit: 'x',\n        description: 'Target debt-to-equity ratio',\n        category: 'Capital Structure'\n      }\n    },\n    market_data: {\n      current_share_price: {\n        value: 125.5,\n        unit: '$',\n        description: 'Current trading price',\n        category: 'Market'\n      },\n      shares_outstanding: {\n        value: 20.0,\n        unit: 'M',\n        description: 'Shares outstanding',\n        category: 'Equity'\n      },\n      market_cap: {\n        value: 2510,\n        unit: '$M',\n        description: 'Current market capitalization',\n        category: 'Valuation'\n      },\n      enterprise_value: {\n        value: 2810,\n        unit: '$M',\n        description: 'Current enterprise value',\n        category: 'Valuation'\n      },\n      net_debt: { value: 300, unit: '$M', description: 'Net debt position', category: 'Debt' }\n    }\n  });\n\n  const sections = [\n    { id: 'assumptions', label: 'Key Assumptions', icon: 'Settings' },\n    { id: 'cost_of_capital', label: 'Cost of Capital', icon: 'Percent' },\n    { id: 'market_data', label: 'Market Data', icon: 'TrendingUp' }\n  ];\n\n  const handleVariableChange = (section, key, newValue) => {\n    const updatedVariables = {\n      ...variables,\n      [section]: {\n        ...variables[section],\n        [key]: {\n          ...variables[section][key],\n          value: parseFloat(newValue) || 0\n        }\n      }\n    };\n    setVariables(updatedVariables);\n\n    if (onVariableChange) {\n      onVariableChange(section, key, newValue);\n    }\n  };\n\n  const formatValue = (value, unit) => {\n    if (unit === '%') {\n      return (value * 100).toFixed(1);\n    } else if (unit === '$' || unit === '$M') {\n      return value.toFixed(2);\n    } else {\n      return value.toFixed(3);\n    }\n  };\n\n  const getVariablesByCategory = sectionData => {\n    const categories = {};\n    Object.entries(sectionData).forEach(([key, variable]) => {\n      const category = variable.category || 'Other';\n      if (!categories[category]) {\n        categories[category] = [];\n      }\n      categories[category].push({ key, ...variable });\n    });\n    return categories;\n  };\n\n  const filteredVariables = sectionData => {\n    if (!searchTerm) return sectionData;\n\n    const filtered = {};\n    Object.entries(sectionData).forEach(([key, variable]) => {\n      if (\n        key.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        variable.description.toLowerCase().includes(searchTerm.toLowerCase())\n      ) {\n        filtered[key] = variable;\n      }\n    });\n    return filtered;\n  };\n\n  const resetToDefaults = () => {\n    // Reset to default values\n    const defaultVariables = { ...variables };\n    // This would typically reset to saved defaults\n    setVariables(defaultVariables);\n  };\n\n  const exportVariables = () => {\n    const exportData = JSON.stringify(variables, null, 2);\n    const blob = new Blob([exportData], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'model_variables.json';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"flex flex-col h-full bg-card\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-border\">\n        <div className=\"flex items-center space-x-2\">\n          <Icon name=\"Sliders\" size={20} className=\"text-primary\" />\n          <h3 className=\"text-lg font-semibold text-foreground\">Variable Inputs</h3>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            iconName={editMode ? 'Check' : 'Edit'}\n            onClick={() => setEditMode(!editMode)}\n          >\n            {editMode ? 'Done' : 'Edit'}\n          </Button>\n          <Button\n            variant=\"outline\" size=\"sm\" iconName=\"Download\"\n            onClick={exportVariables}\n          >\n            Export\n          </Button>\n        </div>\n      </div>\n\n      {/* Search */}\n      <div className=\"p-4 border-b border-border\">\n        <div className=\"relative\">\n          <Icon\n            name=\"Search\"\n            size={16}\n            className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\"\n          />\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={e => setSearchTerm(e.target.value)}\n            placeholder=\"Search variables...\"\n            className=\"w-full pl-10 pr-4 py-2 bg-input border border-border rounded-lg text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring\"\n          />\n        </div>\n      </div>\n\n      {/* Section Tabs */}\n      <div className=\"flex border-b border-border overflow-x-auto\">\n        {sections.map(section => (\n          <button\n            key={section.id}\n            onClick={() => setActiveSection(section.id)}\n            className={`flex items-center space-x-2 px-4 py-3 text-sm font-medium whitespace-nowrap transition-smooth ${\n              activeSection === section.id\n                ? 'bg-primary text-primary-foreground border-b-2 border-primary'\n                : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n            }`}\n          >\n            <Icon name={section.icon} size={16} />\n            <span>{section.label}</span>\n          </button>\n        ))}\n      </div>\n\n      {/* Variables Content */}\n      <div className=\"flex-1 overflow-y-auto p-4\">\n        {Object.entries(getVariablesByCategory(filteredVariables(variables[activeSection]))).map(\n          ([category, categoryVariables]) => (\n            <div key={category} className=\"mb-6\">\n              <h4 className=\"text-sm font-medium text-foreground mb-3 flex items-center space-x-2\">\n                <Icon name=\"Folder\" size={16} />\n                <span>{category}</span>\n              </h4>\n              <div className=\"space-y-3\">\n                {categoryVariables.map(variable => (\n                  <div\n                    key={variable.key}\n                    className=\"p-3 bg-background border border-border rounded-lg\"\n                  >\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className=\"flex-1\">\n                        <label className=\"text-sm font-medium text-foreground capitalize\">\n                          {variable.key.replace(/_/g, ' ')}\n                        </label>\n                        <p className=\"text-xs text-muted-foreground\">{variable.description}</p>\n                      </div>\n                      <div className=\"flex items-center space-x-2 ml-4\">\n                        {editMode ? (\n                          <div className=\"flex items-center space-x-1\">\n                            <input\n                              type=\"number\"\n                              value={formatValue(variable.value, variable.unit)}\n                              onChange={e =>\n                                handleVariableChange(activeSection, variable.key, e.target.value)\n                              }\n                              step={variable.unit === '%' ? '0.1' : '0.01'}\n                              className=\"w-20 px-2 py-1 text-sm bg-input border border-border rounded text-foreground focus:outline-none focus:ring-1 focus:ring-ring\"\n                            />\n                            <span className=\"text-sm text-muted-foreground\">{variable.unit}</span>\n                          </div>\n                        ) : (\n                          <div className=\"text-right\">\n                            <span className=\"text-lg font-semibold text-foreground\">\n                              {formatValue(variable.value, variable.unit)}\n                            </span>\n                            <span className=\"text-sm text-muted-foreground ml-1\">\n                              {variable.unit}\n                            </span>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n\n                    {/* Variable Impact Indicator */}\n                    <div className=\"flex items-center justify-between text-xs\">\n                      <div className=\"flex items-center space-x-2\">\n                        <div className=\"w-2 h-2 bg-success rounded-full\" />\n                        <span className=\"text-muted-foreground\">Within range</span>\n                      </div>\n                      <div className=\"flex items-center space-x-1 text-muted-foreground\">\n                        <Icon name=\"TrendingUp\" size={12} />\n                        <span>High impact</span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )\n        )}\n\n        {Object.keys(filteredVariables(variables[activeSection])).length === 0 && (\n          <div className=\"text-center py-12\">\n            <Icon name=\"Search\" size={48} className=\"text-muted-foreground mx-auto mb-4\" />\n            <h4 className=\"text-lg font-medium text-foreground mb-2\">No variables found</h4>\n            <p className=\"text-muted-foreground\">Try adjusting your search terms</p>\n          </div>\n        )}\n      </div>\n\n      {/* Footer Actions */}\n      <div className=\"p-4 border-t border-border bg-muted/50\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\n            <Icon name=\"Info\" size={12} />\n            <span>Changes auto-save every 30 seconds</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              variant=\"outline\" size=\"sm\" iconName=\"RotateCcw\"\n              onClick={resetToDefaults}\n            >\n              Reset\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              iconName=\"Grid\"\n              onClick={() => onBulkEdit && onBulkEdit()}\n            >\n              Bulk Edit\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VariableInputs;\n","import React, { useState, useEffect } from 'react';\n\nimport Icon from '../../components/AppIcon';\nimport Button from '../../components/ui/Button';\nimport Header from '../../components/ui/Header';\n\nimport AuditTrail from './components/AuditTrail';\nimport CalculationResults from './components/CalculationResults';\nimport FormulaBuilder from './components/FormulaBuilder';\nimport ModelTemplates from './components/ModelTemplates';\nimport TerminalInterface from './components/TerminalInterface';\nimport VariableInputs from './components/VariableInputs';\n\nconst FinancialModelWorkspace = () => {\n  const [activeLayout, setActiveLayout] = useState('dual-pane');\n  const [leftPanelContent, setLeftPanelContent] = useState('terminal');\n  const [rightPanelContent, setRightPanelContent] = useState('results');\n  const [isCollaborationOpen, setIsCollaborationOpen] = useState(false);\n  const [modelState, setModelState] = useState({\n    name: 'DCF_Analysis_v2.3',\n    saved: true,\n    calculating: false,\n    lastSaved: new Date()\n  });\n  const [calculationResults, setCalculationResults] = useState(null);\n  const [showTemplates, setShowTemplates] = useState(false);\n\n  const layoutOptions = [\n    { id: 'dual-pane', label: 'Dual Pane', icon: 'Columns' },\n    { id: 'terminal-focus', label: 'Terminal Focus', icon: 'Terminal' },\n    { id: 'results-focus', label: 'Results Focus', icon: 'BarChart3' },\n    { id: 'full-screen', label: 'Full Screen', icon: 'Maximize' }\n  ];\n\n  const leftPanelOptions = [\n    { id: 'terminal', label: 'Terminal', icon: 'Terminal' },\n    { id: 'formula-builder', label: 'Formula Builder', icon: 'Wrench' },\n    { id: 'templates', label: 'Templates', icon: 'FileTemplate' }\n  ];\n\n  const rightPanelOptions = [\n    { id: 'results', label: 'Results', icon: 'Calculator' },\n    { id: 'variables', label: 'Variables', icon: 'Sliders' },\n    { id: 'audit', label: 'Audit Trail', icon: 'FileText' }\n  ];\n\n  const collaborators = [\n    {\n      id: 1,\n      name: 'Sarah Chen',\n      role: 'Senior Analyst',\n      status: 'active',\n      avatar: 'https://randomuser.me/api/portraits/women/1.jpg'\n    },\n    {\n      id: 2,\n      name: 'Michael Rodriguez',\n      role: 'VP Finance',\n      status: 'viewing',\n      avatar: 'https://randomuser.me/api/portraits/men/2.jpg'\n    },\n    {\n      id: 3,\n      name: 'Emily Johnson',\n      role: 'Junior Analyst',\n      status: 'idle',\n      avatar: 'https://randomuser.me/api/portraits/women/3.jpg'\n    }\n  ];\n\n  useEffect(() => {\n    // Auto-save functionality\n    const autoSaveInterval = setInterval(() => {\n      if (!modelState.saved) {\n        setModelState(prev => ({\n          ...prev,\n          saved: true,\n          lastSaved: new Date()\n        }));\n      }\n    }, 30000);\n\n    return () => clearInterval(autoSaveInterval);\n  }, [modelState.saved]);\n\n  const handleCommandExecute = (command, response) => {\n    setModelState(prev => ({ ...prev, saved: false }));\n\n    if (response.data) {\n      setCalculationResults(response.data);\n    }\n  };\n\n  const handleTemplateSelect = template => {\n    setModelState(prev => ({\n      ...prev,\n      name: `${template.name}_${new Date().toISOString().split('T')[0]}`,\n      saved: false\n    }));\n    setShowTemplates(false);\n    setLeftPanelContent('terminal');\n  };\n\n  const handleVariableChange = (section, key, value) => {\n    setModelState(prev => ({ ...prev, saved: false }));\n  };\n\n  const handleExport = format => {\n    // Export functionality\n    console.log(`Exporting model in ${format} format`);\n  };\n\n  const saveModel = () => {\n    setModelState(prev => ({\n      ...prev,\n      saved: true,\n      lastSaved: new Date()\n    }));\n  };\n\n  const getLayoutClasses = () => {\n    switch (activeLayout) {\n      case 'dual-pane':\n        return 'grid grid-cols-[60%_40%] gap-4';\n      case 'terminal-focus':\n        return 'grid grid-cols-[80%_20%] gap-4';\n      case 'results-focus':\n        return 'grid grid-cols-[30%_70%] gap-4';\n      case 'full-screen':\n        return 'grid grid-cols-1';\n      default:\n        return 'grid grid-cols-[60%_40%] gap-4';\n    }\n  };\n\n  const renderLeftPanel = () => {\n    switch (leftPanelContent) {\n      case 'terminal':\n        return (\n          <TerminalInterface\n            onCommandExecute={handleCommandExecute}\n            calculationResults={calculationResults}\n          />\n        );\n      case 'formula-builder':\n        return (\n          <FormulaBuilder\n            onFormulaCreate={formula => console.log('Formula created:', formula)}\n            variables={[]}\n          />\n        );\n      case 'templates':\n        return (\n          <ModelTemplates\n            onTemplateSelect={handleTemplateSelect}\n            onTemplateCreate={() => console.log('Template created')}\n          />\n        );\n      default:\n        return <TerminalInterface onCommandExecute={handleCommandExecute} />;\n    }\n  };\n\n  const renderRightPanel = () => {\n    switch (rightPanelContent) {\n      case 'results':\n        return <CalculationResults results={calculationResults} onExport={handleExport} />;\n      case 'variables':\n        return (\n          <VariableInputs\n            onVariableChange={handleVariableChange}\n            onBulkEdit={() => console.log('Bulk edit')}\n          />\n        );\n      case 'audit':\n        return <AuditTrail calculations={[]} errors={[]} warnings={[]} />;\n      default:\n        return <CalculationResults results={calculationResults} onExport={handleExport} />;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n\n      <div className=\"pt-[60px] h-screen flex flex-col\">\n        {/* Workspace Toolbar */}\n        <div className=\"flex items-center justify-between p-4 bg-card border-b border-border\">\n          <div className=\"flex items-center space-x-4\">\n            {/* Layout Controls */}\n            <div className=\"flex items-center space-x-1 bg-muted rounded-lg p-1\">\n              {layoutOptions.map(layout => (\n                <button\n                  key={layout.id}\n                  onClick={() => setActiveLayout(layout.id)}\n                  className={`flex items-center space-x-1 px-3 py-2 text-sm font-medium rounded-md transition-smooth ${\n                    activeLayout === layout.id\n                      ? 'bg-primary text-primary-foreground'\n                      : 'text-muted-foreground hover:text-foreground hover:bg-background'\n                  }`}\n                  title={layout.label}\n                >\n                  <Icon name={layout.icon} size={16} />\n                  <span className=\"hidden lg:inline\">{layout.label}</span>\n                </button>\n              ))}\n            </div>\n\n            {/* Panel Controls */}\n            <div className=\"flex items-center space-x-2\">\n              <label htmlFor=\"left-panel-select\" className=\"sr-only\">\n                Left Panel Content\n              </label>\n              <select\n                id=\"left-panel-select\"\n                value={leftPanelContent}\n                onChange={e => setLeftPanelContent(e.target.value)}\n                className=\"px-3 py-2 bg-input border border-border rounded-lg text-foreground text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n              >\n                {leftPanelOptions.map(option => (\n                  <option key={option.id} value={option.id}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n\n              {activeLayout !== 'full-screen' && (\n                <>\n                  <label htmlFor=\"right-panel-select\" className=\"sr-only\">\n                    Right Panel Content\n                  </label>\n                  <select\n                    id=\"right-panel-select\"\n                    value={rightPanelContent}\n                    onChange={e => setRightPanelContent(e.target.value)}\n                    className=\"px-3 py-2 bg-input border border-border rounded-lg text-foreground text-sm focus:outline-none focus:ring-2 focus:ring-ring\"\n                  >\n                    {rightPanelOptions.map(option => (\n                      <option key={option.id} value={option.id}>\n                        {option.label}\n                      </option>\n                    ))}\n                  </select>\n                </>\n              )}\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            {/* Model Status */}\n            <div className=\"flex items-center space-x-2 px-3 py-2 bg-muted rounded-lg\">\n              <div\n                className={`w-2 h-2 rounded-full ${modelState.saved ? 'bg-success' : 'bg-warning'}`}\n              />\n              <span className=\"text-sm font-medium text-foreground\">{modelState.name}</span>\n              {!modelState.saved && (\n                <span className=\"text-xs text-muted-foreground\">Unsaved changes</span>\n              )}\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                iconName=\"Save\"\n                onClick={saveModel}\n                disabled={modelState.saved}\n              >\n                Save\n              </Button>\n\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                iconName=\"FileTemplate\"\n                onClick={() => setShowTemplates(true)}\n              >\n                Templates\n              </Button>\n\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                iconName=\"Users\"\n                onClick={() => setIsCollaborationOpen(!isCollaborationOpen)}\n              >\n                Collaborate\n              </Button>\n\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                iconName=\"Download\"\n                onClick={() => handleExport('excel')}\n              >\n                Export\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/* Main Workspace */}\n        <div className=\"flex-1 p-4 overflow-hidden\">\n          <div className={`h-full ${getLayoutClasses()}`}>\n            {/* Left Panel */}\n            <div className=\"h-full border border-border rounded-lg overflow-hidden\">\n              {renderLeftPanel()}\n            </div>\n\n            {/* Right Panel */}\n            {activeLayout !== 'full-screen' && (\n              <div className=\"h-full border border-border rounded-lg overflow-hidden\">\n                {renderRightPanel()}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Collaboration Sidebar */}\n        {isCollaborationOpen && (\n          <div className=\"fixed right-0 top-[60px] bottom-0 w-80 bg-card border-l border-border shadow-elevation-2 z-40\">\n            <div className=\"flex items-center justify-between p-4 border-b border-border\">\n              <h3 className=\"text-lg font-semibold text-foreground\">Collaboration</h3>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                iconName=\"X\"\n                onClick={() => setIsCollaborationOpen(false)}\n              />\n            </div>\n\n            <div className=\"p-4\">\n              <h4 className=\"text-sm font-medium text-foreground mb-3\">Active Collaborators</h4>\n              <div className=\"space-y-3\">\n                {collaborators.map(collaborator => (\n                  <div key={collaborator.id} className=\"flex items-center space-x-3\">\n                    <img\n                      src={collaborator.avatar}\n                      alt={collaborator.name}\n                      className=\"w-8 h-8 rounded-full\"\n                    />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm font-medium text-foreground\">{collaborator.name}</p>\n                      <p className=\"text-xs text-muted-foreground\">{collaborator.role}</p>\n                    </div>\n                    <div\n                      className={`w-2 h-2 rounded-full ${\n                        collaborator.status === 'active'\n                          ? 'bg-success'\n                          : collaborator.status === 'viewing'\n                            ? 'bg-warning'\n                            : 'bg-muted-foreground'\n                      }`}\n                    />\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"mt-6\">\n                <Button\n                  variant=\"outline\" size=\"sm\" iconName=\"UserPlus\"\n                  fullWidth\n                >\n                  Invite Collaborator\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Templates Modal */}\n        {showTemplates && (\n          <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n            <div className=\"bg-card border border-border rounded-lg shadow-elevation-2 w-full max-w-4xl mx-4 h-[80vh]\">\n              <div className=\"flex items-center justify-between p-4 border-b border-border\">\n                <h3 className=\"text-lg font-semibold text-foreground\">Select Model Template</h3>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  iconName=\"X\"\n                  onClick={() => setShowTemplates(false)}\n                />\n              </div>\n              <div className=\"h-[calc(80vh-80px)]\">\n                <ModelTemplates\n                  onTemplateSelect={handleTemplateSelect}\n                  onTemplateCreate={() => console.log('Template created')}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FinancialModelWorkspace;\n"],"names":["AuditTrail","calculations","errors","warnings","activeTab","setActiveTab","useState","expandedItems","setExpandedItems","Set","filterLevel","setFilterLevel","mockAuditData","id","timestamp","Date","now","type","operation","formula","result","inputs","FCFF_2024","FCFF_2025","FCFF_2026","FCFF_2027","FCFF_2028","WACC","executionTime","status","cost_equity","cost_debt","tax_rate","debt_ratio","FCF_final","terminal_growth","severity","message","location","suggestion","resolved","acknowledged","validations","check","details","tabs","label","icon","count","length","getStatusIcon","color","getSeverityColor","renderCalculations","jsx","className","children","map","calc","jsxs","Icon","name","size","toLocaleTimeString","time","toFixed","Button","variant","iconName","has","onClick","newExpanded","delete","add","toggleExpanded","Object","entries","key","value","tab","error","toLocaleString","warning","validation","CalculationResults","results","onExport","expandedSections","setExpandedSections","mockResults","summary","enterpriseValue","equityValue","sharePrice","impliedReturn","confidence","cashFlows","year","revenue","ebitda","fcf","pv","sensitivity","wacc","growth","matrix","scenarios","probability","irr","multiples","metric","current","peer_avg","premium","formatCurrency","decimals","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercent","renderSummary","width","cf","index","rowIndex","colIndex","Math","abs","scenario","multiple","FormulaBuilder","onFormulaCreate","variables","selectedCategory","setSelectedCategory","draggedFunction","setDraggedFunction","currentFormula","setCurrentFormula","formulaName","setFormulaName","isBuilding","setIsBuilding","dropZoneRef","useRef","functionCategories","valuation","functions","syntax","description","financial","statistical","mathematical","validateFormula","match","category","func","draggable","onDragStart","e","dataTransfer","effectAllowed","handleDragStart","newFormula","addFunction","onChange","target","placeholder","ref","onDragOver","preventDefault","dropEffect","onDrop","disabled","ModelTemplates","onTemplateSelect","onTemplateCreate","searchTerm","setSearchTerm","showCreateModal","setShowCreateModal","templateCategories","templates","complexity","timeToComplete","lastUsed","popularity","features","lbo","comps","merger","getComplexityColor","filteredTemplates","filter","template","toLowerCase","includes","handleTemplateSelect","feature","rows","compact","isNaN","notation","formatPercentage","formatNumber","calculateDCFValuation","currentRevenue","revenueGrowthRate","fcfMargin","terminalGrowthRate","sharesOutstanding","totalDebt","cash","projectionYears","projectedRevenues","baseCashFlow","growthRates","years","currentCashFlow","i","Array","isArray","push","projectCashFlows","projectedFCFs","terminalValue","finalCashFlow","discountRate","calculateTerminalValue","pvOfCashFlows","reduce","npv","cashFlow","pow","pvOfTerminalValue","pricePerShare","calculateLBOReturns","purchasePrice","debtMultiple","exitMultiple","exitYear","managementFeeRate","carriedInterestRate","equityInvestment","exitEbitda","exitEnterpriseValue","exitEquityValue","totalReturn","moic","totalManagementFees","carriedInterest","max","managementFees","netReturn","calculateComparableMetrics","companyData","peerData","peerStats","forEach","peerValues","peer","values","validValues","v","median","mean","min","sort","a","b","floor","sum","calculateStatistics","company","peerStatistics","relativeValuation","marketCapPercentile","calculatePercentile","marketCap","p","peRatioRelative","peRatio","evEbitdaRelative","evToEbitda","priceToBookRelative","priceToBook","dataset","validDataset","TerminalInterface","onCommandExecute","calculationResults","commands","setCommands","content","currentInput","setCurrentInput","suggestions","setSuggestions","showSuggestions","setShowSuggestions","selectedSuggestion","setSelectedSuggestion","isLoading","setIsLoading","terminalRef","inputRef","financialFunctions","sampleCommands","useEffect","scrollTop","scrollHeight","focus","executeCommand","async","trim","newCommand","prev","response","processCommand","responseCommand","data","errorCommand","command","cmd","dataFetchingService","demoMode","setTimeout","apiStatus","getApiStatus","statusContent","cacheSize","overall","toUpperCase","services","service","statusIcon","recommendations","rec","validateApiKeys","cache","clear","cacheExpiry","ticker","loadingCommand","dcfInputs","fetchDCFInputs","dcfResult","upside","currentPrice","companyName","beta","analysis","lboInputs","fetchLBOInputs","avgPeerMultiple","suggestedPurchasePrice","baseCase","evEbitdaMultiple","debtToEbitda","interestCoverage","maxDebtCapacity","profile","peers","Promise","all","fetchCompanyProfile","fetchPeerComparables","symbol","mktCap","pe","enterpriseValueOverEBITDA","pb","debtToEquity","compAnalysis","slice","join","marketData","fetchMarketData","sector","industry","fullTimeEmployees","ipoDate","range","volume","revenueTTM","grossProfitMargin","netProfitMargin","returnOnEquityTTM","returnOnAssetsTTM","split","parseFloat","pvBreakdown","presentValue","item","filtered","onKeyDown","autoComplete","selectSuggestion","c","VariableInputs","onVariableChange","onBulkEdit","activeSection","setActiveSection","editMode","setEditMode","setVariables","assumptions","revenue_growth","unit","ebitda_margin","capex_revenue","working_capital_revenue","cost_of_capital","risk_free_rate","market_premium","cost_of_debt","debt_equity_ratio","market_data","current_share_price","shares_outstanding","market_cap","enterprise_value","net_debt","formatValue","filteredVariables","sectionData","variable","exportData","JSON","stringify","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","section","categories","getVariablesByCategory","categoryVariables","replace","newValue","updatedVariables","handleVariableChange","step","keys","defaultVariables","FinancialModelWorkspace","activeLayout","setActiveLayout","leftPanelContent","setLeftPanelContent","rightPanelContent","setRightPanelContent","isCollaborationOpen","setIsCollaborationOpen","modelState","setModelState","saved","calculating","lastSaved","setCalculationResults","showTemplates","setShowTemplates","autoSaveInterval","setInterval","clearInterval","handleCommandExecute","toISOString","handleExport","Header","layout","title","htmlFor","option","Fragment","getLayoutClasses","renderLeftPanel","role","avatar","collaborator","src","alt","fullWidth"],"mappings":"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"}