{"version":3,"file":"index-pbz89lVx.js","sources":["../../src/services/dataValidationService.js","../../src/services/enhancedApiService.js","../../src/services/normalizers/marketDataNormalizer.js","../../src/pages/real-time-market-data-center/components/ApiStatusPanel.jsx","../../src/pages/real-time-market-data-center/components/BulkOperationsPanel.jsx","../../src/pages/real-time-market-data-center/components/ConnectionStatus.jsx","../../src/pages/real-time-market-data-center/components/DataSourceToggle.jsx","../../src/pages/real-time-market-data-center/components/MarketDataWidget.jsx","../../src/pages/real-time-market-data-center/components/SymbolSearch.jsx","../../src/pages/real-time-market-data-center/components/WatchlistPanel.jsx","../../src/pages/real-time-market-data-center/index.jsx"],"sourcesContent":["import { apiLogger } from '../utils/apiLogger.js';\n\n/**\n * Data validation and quality assurance service\n * Ensures data integrity and consistency across different sources\n */\nclass DataValidationService {\n  constructor() {\n    this.validationRules = this.initializeValidationRules();\n    this.qualityMetrics = new Map();\n    this.anomalyDetection = new Map();\n  }\n\n  /**\n   * Initialize validation rules for different data types\n   */\n  initializeValidationRules() {\n    return {\n      marketData: {\n        required: ['symbol', 'currentPrice', 'volume'],\n        numeric: ['currentPrice', 'previousClose', 'change', 'changePercent', 'volume', 'marketCap'],\n        ranges: {\n          currentPrice: { min: 0, max: 100000 },\n          volume: { min: 0, max: 1e12 },\n          changePercent: { min: -50, max: 50 }\n        },\n        formats: {\n          symbol: /^[A-Z]{1,5}$/,\n          timestamp: /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}/\n        }\n      },\n      financialStatements: {\n        required: ['revenue', 'netIncome'],\n        numeric: ['revenue', 'netIncome', 'totalDebt', 'cashAndCashEquivalents'],\n        ranges: {\n          revenue: { min: 0, max: 1e12 },\n          netIncome: { min: -1e11, max: 1e11 }\n        }\n      },\n      companyProfile: {\n        required: ['symbol', 'companyName', 'sector'],\n        numeric: ['mktCap', 'pe', 'pb', 'beta'],\n        ranges: {\n          pe: { min: 0, max: 1000 },\n          pb: { min: 0, max: 100 },\n          beta: { min: -5, max: 5 }\n        }\n      },\n      dcfModel: {\n        required: ['cashFlows', 'discountRate'],\n        numeric: ['discountRate', 'terminalGrowthRate', 'years'],\n        custom: (data) => {\n          const errors = [];\n          if (!Array.isArray(data.cashFlows) || data.cashFlows.length === 0) {\n            errors.push('Cash flows must be a non-empty array');\n          }\n          if (data.discountRate < 0) {\n            errors.push('Discount rate must be non-negative');\n          }\n          return { errors, warnings: [] };\n        }\n      },\n      lboModel: {\n        required: ['purchasePrice', 'debtFinancing', 'equityFinancing'],\n        numeric: ['purchasePrice', 'debtFinancing', 'equityFinancing', 'exitMultiple', 'holdingPeriod'],\n        custom: (data) => {\n          const errors = [];\n          const warnings = [];\n          if (data.debtFinancing && data.equityFinancing && data.purchasePrice) {\n            const total = data.debtFinancing + data.equityFinancing;\n            if (Math.abs(total - data.purchasePrice) > 0.01) {\n              errors.push('Debt + Equity must equal purchase price');\n            }\n            const debtRatio = data.debtFinancing / data.purchasePrice;\n            if (debtRatio > 0.9) {\n              warnings.push('High leverage ratio detected');\n            }\n          }\n          return { errors, warnings };\n        }\n      },\n      stockData: {\n        required: ['symbol', 'price'],\n        numeric: ['price', 'volume', 'change', 'changePercent'],\n        custom: (data) => {\n          const errors = [];\n          if (!data.symbol || typeof data.symbol !== 'string' || data.symbol.trim() === '') {\n            errors.push('Symbol is required and must be a non-empty string');\n          }\n          if (typeof data.price !== 'number' || data.price < 0) {\n            errors.push('Price must be a positive number');\n          }\n          return { errors, warnings: [] };\n        }\n      }\n    };\n  }\n\n  /**\n   * Validate data against defined rules\n   * @param {Object} data - Data to validate\n   * @param {string} dataType - Type of data\n   * @returns {Object} Validation result\n   */\n  validateData(data, dataType) {\n    try {\n      const rules = this.validationRules[dataType];\n      if (!rules) {\n        return { isValid: false, errors: [`Unknown data type: ${dataType}`] };\n      }\n\n      const errors = [];\n      const warnings = [];\n\n      // Check required fields\n      for (const field of rules.required || []) {\n        if (data[field] === undefined || data[field] === null) {\n          errors.push(`Missing required field: ${field}`);\n        }\n      }\n\n      // Validate numeric fields\n      for (const field of rules.numeric || []) {\n        if (data[field] !== undefined && data[field] !== null) {\n          const value = parseFloat(data[field]);\n          if (isNaN(value)) {\n            errors.push(`Field ${field} must be numeric, got: ${data[field]}`);\n          } else {\n          // Check ranges\n            const range = rules.ranges?.[field];\n            if (range) {\n              if (value < range.min || value > range.max) {\n                warnings.push(`Field ${field} value ${value} outside expected range [${range.min}, ${range.max}]`);\n              }\n            }\n          }\n        }\n      }\n\n      // Validate formats\n      for (const [field, pattern] of Object.entries(rules.formats || {})) {\n        if (data[field] && !pattern.test(data[field])) {\n          errors.push(`Field ${field} format invalid: ${data[field]}`);\n        }\n      }\n\n      // Additional business logic validations\n      const businessValidation = this.validateBusinessLogic(data, dataType);\n      errors.push(...businessValidation.errors);\n      warnings.push(...businessValidation.warnings);\n\n      // Custom validation function\n      if (rules.custom) {\n        const customValidation = rules.custom(data);\n        errors.push(...(customValidation.errors || []));\n        warnings.push(...(customValidation.warnings || []));\n      }\n\n      const isValid = errors.length === 0;\n\n      // Log validation results\n      if (!isValid) {\n        apiLogger.log('ERROR', `Data validation failed for ${dataType}`, { errors, warnings });\n      } else if (warnings.length > 0) {\n        apiLogger.log('WARN', `Data validation warnings for ${dataType}`, { warnings });\n      }\n\n      return {\n        isValid,\n        errors,\n        warnings,\n        qualityScore: this.calculateQualityScore(errors, warnings)\n      };\n    } catch {\n      return { isValid: false, errors: ['An unexpected error occurred during validation.'], warnings: [] };\n    }\n  }\n\n  /**\n   * Validate business logic rules\n   * @param {Object} data - Data to validate\n   * @param {string} dataType - Type of data\n   * @returns {Object} Business validation result\n   */\n  validateBusinessLogic(data, dataType) {\n    const errors = [];\n    const warnings = [];\n\n    switch (dataType) {\n      case 'marketData':\n        // Price consistency checks\n        if (data.currentPrice && data.previousClose) {\n          const calculatedChange = data.currentPrice - data.previousClose;\n          const calculatedChangePercent = (calculatedChange / data.previousClose) * 100;\n\n          if (data.change && Math.abs(data.change - calculatedChange) > 0.01) {\n            warnings.push(`Price change inconsistency: reported ${data.change}, calculated ${calculatedChange.toFixed(2)}`);\n          }\n\n          if (data.changePercent && Math.abs(data.changePercent - calculatedChangePercent) > 0.1) {\n            warnings.push(`Change percent inconsistency: reported ${data.changePercent}%, calculated ${calculatedChangePercent.toFixed(2)}%`);\n          }\n        }\n\n        // Day range validation\n        if (data.currentPrice && data.dayHigh && data.dayLow) {\n          if (data.currentPrice > data.dayHigh) {\n            warnings.push(`Current price ${data.currentPrice} exceeds day high ${data.dayHigh}`);\n          }\n          if (data.currentPrice < data.dayLow) {\n            warnings.push(`Current price ${data.currentPrice} below day low ${data.dayLow}`);\n          }\n          if (data.dayLow > data.dayHigh) {\n            errors.push(`Day low ${data.dayLow} greater than day high ${data.dayHigh}`);\n          }\n        }\n        break;\n\n      case 'financialStatements':\n        // Financial ratio validations\n        if (data.revenue && data.netIncome) {\n          const netMargin = (data.netIncome / data.revenue) * 100;\n          if (netMargin < -100 || netMargin > 100) {\n            warnings.push(`Unusual net profit margin: ${netMargin.toFixed(2)}%`);\n          }\n        }\n\n        // Balance sheet validations\n        if (data.totalCurrentAssets && data.totalCurrentLiabilities) {\n          const currentRatio = data.totalCurrentAssets / data.totalCurrentLiabilities;\n          if (currentRatio < 0.1 || currentRatio > 20) {\n            warnings.push(`Unusual current ratio: ${currentRatio.toFixed(2)}`);\n          }\n        }\n        break;\n\n      case 'companyProfile':\n        // Valuation metric validations\n        if (data.pe && (data.pe < 0 || data.pe > 500)) {\n          warnings.push(`Unusual P/E ratio: ${data.pe}`);\n        }\n\n        if (data.pb && (data.pb < 0 || data.pb > 50)) {\n          warnings.push(`Unusual P/B ratio: ${data.pb}`);\n        }\n        break;\n    }\n\n    return { errors, warnings };\n  }\n\n  /**\n   * Calculate data quality score\n   * @param {Array} errors - Validation errors\n   * @param {Array} warnings - Validation warnings\n   * @returns {number} Quality score (0-100)\n   */\n  calculateQualityScore(errors, warnings) {\n    if (errors.length > 0) {\n      return Math.max(0, 50 - (errors.length * 10));\n    }\n\n    return Math.max(70, 100 - (warnings.length * 5));\n  }\n\n  /**\n   * Cross-validate data from multiple sources\n   * @param {Array} dataSources - Array of data objects from different sources\n   * @param {string} dataType - Type of data\n   * @returns {Object} Cross-validation result\n   */\n  crossValidateData(dataSources, dataType) {\n    if (dataSources.length < 2) {\n      return { isConsistent: true, discrepancies: [], recommendedSource: dataSources[0]?.source };\n    }\n\n    const discrepancies = [];\n    const numericFields = this.validationRules[dataType]?.numeric || [];\n\n    // Compare numeric fields across sources\n    for (const field of numericFields) {\n      const values = dataSources\n        .filter(data => data[field] !== undefined && data[field] !== null)\n        .map(data => ({ value: parseFloat(data[field]), source: data.source }));\n\n      if (values.length > 1) {\n        const mean = values.reduce((sum, item) => sum + item.value, 0) / values.length;\n        const maxDeviation = Math.max(...values.map(item => Math.abs(item.value - mean)));\n        const threshold = mean * 0.05; // 5% threshold\n\n        if (maxDeviation > threshold) {\n          discrepancies.push({\n            field,\n            values,\n            mean,\n            maxDeviation,\n            threshold\n          });\n        }\n      }\n    }\n\n    // Determine recommended source based on quality scores\n    const sourceQuality = dataSources.map(data => {\n      const validation = this.validateData(data, dataType);\n      return {\n        source: data.source,\n        qualityScore: validation.qualityScore,\n        errorCount: validation.errors.length,\n        warningCount: validation.warnings.length\n      };\n    });\n\n    const recommendedSource = sourceQuality\n      .sort((a, b) => b.qualityScore - a.qualityScore)[0]?.source;\n\n    return {\n      isConsistent: discrepancies.length === 0,\n      discrepancies,\n      sourceQuality,\n      recommendedSource\n    };\n  }\n\n  /**\n   * Detect anomalies in time series data\n   * @param {Array} timeSeries - Array of data points with timestamps\n   * @param {string} field - Field to analyze\n   * @returns {Array} Detected anomalies\n   */\n  detectAnomalies(timeSeries, field) {\n    if (timeSeries.length < 10) {\n      return []; // Need sufficient data for anomaly detection\n    }\n\n    const values = timeSeries.map(point => parseFloat(point[field])).filter(v => !isNaN(v));\n    const mean = values.reduce((sum, val) => sum + val, 0) / values.length;\n    const variance = values.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / values.length;\n    const stdDev = Math.sqrt(variance);\n\n    const anomalies = [];\n    const threshold = 2.5; // 2.5 standard deviations\n\n    timeSeries.forEach((point, index) => {\n      const value = parseFloat(point[field]);\n      if (!isNaN(value)) {\n        const zScore = Math.abs((value - mean) / stdDev);\n        if (zScore > threshold) {\n          anomalies.push({\n            index,\n            timestamp: point.timestamp,\n            value,\n            zScore,\n            deviation: value - mean,\n            severity: zScore > 3 ? 'high' : 'medium'\n          });\n        }\n      }\n    });\n\n    return anomalies;\n  }\n\n  /**\n   * Get validation summary for a dataset\n   * @param {Object} data - Data to summarize\n   * @param {string} dataType - Type of data\n   * @returns {Object} Validation summary\n   */\n  getValidationSummary(data, dataType) {\n    const validation = this.validateData(data, dataType);\n\n    return {\n      dataType,\n      timestamp: new Date().toISOString(),\n      isValid: validation.isValid,\n      qualityScore: validation.qualityScore,\n      errorCount: validation.errors.length,\n      warningCount: validation.warnings.length,\n      completeness: this.calculateCompleteness(data, dataType),\n      freshness: this.calculateFreshness(data),\n      source: data.source || 'unknown'\n    };\n  }\n\n  /**\n   * Calculate data completeness percentage\n   * @param {Object} data - Data to analyze\n   * @param {string} dataType - Type of data\n   * @returns {number} Completeness percentage\n   */\n  calculateCompleteness(data, dataType) {\n    const rules = this.validationRules[dataType];\n    if (!rules) return 0;\n\n    const allFields = [\n      ...(rules.required || []),\n      ...(rules.numeric || []),\n      ...Object.keys(rules.formats || {})\n    ];\n\n    const uniqueFields = [...new Set(allFields)];\n    const presentFields = uniqueFields.filter(field =>\n      data[field] !== undefined && data[field] !== null && data[field] !== ''\n    );\n\n    return (presentFields.length / uniqueFields.length) * 100;\n  }\n\n  /**\n   * Calculate data freshness score\n   * @param {Object} data - Data to analyze\n   * @returns {number} Freshness score (0-100)\n   */\n  calculateFreshness(data) {\n    if (!data.timestamp) return 50; // Unknown freshness\n\n    const dataTime = new Date(data.timestamp);\n    const now = new Date();\n    const ageMinutes = (now - dataTime) / (1000 * 60);\n\n    // Score based on age (fresher = higher score)\n    if (ageMinutes < 5) return 100;\n    if (ageMinutes < 15) return 90;\n    if (ageMinutes < 60) return 80;\n    if (ageMinutes < 240) return 70;\n    if (ageMinutes < 1440) return 60;\n    return 40;\n  }\n\n\n  /**\n   * Sanitize input string\n   * @param {any} input - Input to sanitize\n   * @returns {string} Sanitized string\n   */\n  sanitizeInput(input) {\n    if (input === null || input === undefined) {\n      return '';\n    }\n\n    const str = String(input);\n    return str\n      .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n      .replace(/<[^>]*>/g, '')\n      .replace(/javascript:/gi, '')\n      .replace(/on\\w+\\s*=/gi, '');\n  }\n\n  /**\n   * Check if number is in range\n   * @param {number} value - Value to check\n   * @param {number} min - Minimum value\n   * @param {number} max - Maximum value\n   * @returns {boolean} True if in range\n   */\n  isInRange(value, min, max) {\n    return typeof value === 'number' && value >= min && value <= max;\n  }\n\n  /**\n   * Check if value is valid percentage (0-1)\n   * @param {number} value - Value to check\n   * @returns {boolean} True if valid percentage\n   */\n  isValidPercentage(value) {\n    return typeof value === 'number' && value >= 0 && value <= 1;\n  }\n\n  /**\n   * Check if value is a valid number\n   * @param {any} value - Value to check\n   * @returns {boolean} True if valid number\n   */\n  isValidNumber(value) {\n    return typeof value === 'number' && !isNaN(value) && isFinite(value);\n  }\n\n  /**\n   * Check if value is a valid array\n   * @param {any} value - Value to check\n   * @returns {boolean} True if valid array\n   */\n  isValidArray(value) {\n    return Array.isArray(value);\n  }\n\n  /**\n   * Check if value is a valid object\n   * @param {any} value - Value to check\n   * @returns {boolean} True if valid object\n   */\n  isValidObject(value) {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n  }\n\n  /**\n   * Validate financial ratios\n   * @param {Object} ratios - Financial ratios to validate\n   * @returns {Object} Validation result\n   */\n  validateFinancialRatios(ratios) {\n    const errors = [];\n    const warnings = [];\n\n    // Check for concerning ratios\n    if (ratios.currentRatio < 1.0) {\n      warnings.push('Current ratio below 1.0 indicates potential liquidity issues');\n    }\n\n    if (ratios.debtToEquity > 2.0) {\n      warnings.push('High debt-to-equity ratio indicates high leverage');\n    }\n\n    if (ratios.returnOnEquity < 0) {\n      warnings.push('Negative return on equity indicates poor performance');\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      warnings\n    };\n  }\n}\n\n// Export singleton instance\nexport const dataValidationService = new DataValidationService();\nexport default DataValidationService;\n","import { apiLogger } from '../utils/apiLogger.js';\n\nimport secureApiClient from './secureApiClient.js';\n\nclass RateLimiter {\n  constructor(requestsPerInterval, interval) {\n    this.requestsPerInterval = requestsPerInterval;\n    this.interval = interval;\n    this.requestTimestamps = [];\n  }\n\n  async acquire() {\n    const now = Date.now();\n\n    this.requestTimestamps = this.requestTimestamps.filter(\n      (timestamp) => now - timestamp < this.interval\n    );\n\n    if (this.requestTimestamps.length >= this.requestsPerInterval) {\n      const timeToWait = this.interval - (now - this.requestTimestamps[0]);\n      await new Promise(resolve => setTimeout(resolve, timeToWait));\n      return this.acquire();\n    }\n\n    this.requestTimestamps.push(now);\n  }\n}\n\n/**\n * Enhanced API service with intelligent data source selection and fallbacks\n * Provides real data integration with multiple providers\n */\nclass EnhancedApiService {\n  constructor() {\n    this.rateLimiters = new Map();\n    this.sourceHealth = new Map();\n    this.lastRequests = new Map();\n    this.cache = new Map();\n    this.rateLimitInfo = { remaining: null, reset: null };\n\n    // Initialize secure client and source health tracking\n    this.initializeSecureClient();\n    this.initializeSourceHealth();\n    this.rateLimiters.set('default', new RateLimiter(5, 1000));\n  }\n\n  /**\n   * SECURITY NOTE: API keys are now handled securely by backend\n   * This service routes all requests through secure backend proxy\n   */\n  initializeSecureClient() {\n    this.client = secureApiClient;\n\n    apiLogger.log('INFO', 'EnhancedApiService initialized with secure backend proxy');\n  }\n\n  /**\n   * Initialize health tracking for all data sources\n   */\n  initializeSourceHealth() {\n    const sources = ['BACKEND_PROXY', 'ALPHA_VANTAGE', 'FMP', 'YAHOO_FINANCE', 'SEC_EDGAR', 'QUANDL', 'FRED'];\n\n    sources.forEach(source => {\n      this.sourceHealth.set(source, {\n        status: 'unknown',\n        successRate: 1.0,\n        avgResponseTime: 0,\n        lastError: null,\n        requestCount: 0,\n        errorCount: 0,\n        lastHealthCheck: null\n      });\n    });\n  }\n\n  /**\n   * DEPRECATED: API keys are now handled by secure backend\n   * @param {string} source - Data source name\n   * @returns {boolean}\n   */\n  hasValidApiKey(_source) {\n    // Always return true as backend handles authentication\n    return true;\n  }\n\n  /**\n   * All requests now route through secure backend proxy\n   * @param {string} dataType - Type of data needed\n   * @returns {string} Always returns 'BACKEND_PROXY'\n   */\n  getBestSource(_dataType) {\n    return 'BACKEND_PROXY';\n  }\n\n  /**\n   * Check if source requires API key\n   * @param {string} source - Data source name\n   * @returns {boolean}\n   */\n  requiresApiKey(source) {\n    return ['ALPHA_VANTAGE', 'FMP', 'QUANDL', 'FRED'].includes(source);\n  }\n\n  /**\n   * Fetch real-time market data via secure backend proxy\n   * @param {string} symbol - Stock symbol\n   * @param {Object} options - Additional options\n   * @returns {Promise<Object>} Market data\n   */\n  async fetchRealTimeMarketData(symbol, _options = {}) {\n    const t0 = Date.now();\n    try {\n      const data = await this.client.getQuote(symbol);\n      this.updateSourceHealth('BACKEND_PROXY', true, Date.now() - t0);\n      return data;\n    } catch (error) {\n      this.updateSourceHealth('BACKEND_PROXY', false, Date.now() - t0, error);\n      apiLogger.log('ERROR', 'Failed to fetch real-time market data', { symbol, error: error.message });\n      throw error;\n    }\n  }\n\n  /**\n   * Fetch historical market data (backend-first with fallbacks)\n   * @param {string} symbol\n   * @param {{range?: string, interval?: string}} options\n   * @returns {Promise<Object>}\n   */\n  async fetchHistoricalMarketData(symbol, options = {}) {\n    const range = options.range || '1mo';\n    const interval = options.interval || '1d';\n    const qs = new URLSearchParams({ range, interval }).toString();\n    // Try backend proxy first\n    const t0 = Date.now();\n    try {\n      const backendData = await this.request(`/market-data/historical/${symbol.toUpperCase()}?${qs}`);\n      const result = {\n        ...(typeof backendData === 'object' ? backendData : { data: backendData }),\n        symbol: backendData?.symbol || symbol.toUpperCase(),\n        range,\n        interval,\n        source: (backendData?.source || 'backend_proxy').toUpperCase()\n      };\n      this.updateSourceHealth('BACKEND_PROXY', true, Date.now() - t0);\n      return result;\n    } catch (backendError) {\n      this.updateSourceHealth('BACKEND_PROXY', false, Date.now() - t0, backendError);\n      apiLogger.log('WARN', 'Backend historical data failed, falling back to direct sources', { error: backendError.message });\n    }\n    // Fallback to Yahoo Finance\n    try {\n      const yf = await this.fetchFromYahooFinance(symbol, { range, interval });\n      const timestamps = yf.timestamp || [];\n      const quote = yf.indicators?.quote?.[0] || {};\n      const data = timestamps.map((t, i) => ({\n        timestamp: new Date(t * 1000).toISOString(),\n        open: quote.open?.[i] ?? null,\n        high: quote.high?.[i] ?? null,\n        low: quote.low?.[i] ?? null,\n        close: quote.close?.[i] ?? null,\n        volume: quote.volume?.[i] ?? null\n      }));\n      return {\n        symbol: yf.meta?.symbol || symbol.toUpperCase(),\n        range,\n        interval,\n        data,\n        meta: yf.meta,\n        source: 'YAHOO_FINANCE'\n      };\n    } catch (yahooError) {\n      this.updateSourceHealth('YAHOO_FINANCE', false, Date.now(), yahooError);\n      apiLogger.log('WARN', 'Yahoo Finance historical fallback failed, trying Alpha Vantage', { error: yahooError.message });\n    }\n    // Fallback to Alpha Vantage (daily adjusted)\n    try {\n      const av = await this.fetchFromAlphaVantage(symbol, 'TIME_SERIES_DAILY_ADJUSTED', options);\n      const series = av['Time Series (Daily)'] || av['Time Series (Daily)'.toLowerCase()];\n      if (!series) throw new Error('Alpha Vantage daily series missing');\n      const data = Object.entries(series)\n        .map(([date, values]) => ({\n          timestamp: new Date(date).toISOString(),\n          open: parseFloat(values['1. open']),\n          high: parseFloat(values['2. high']),\n          low: parseFloat(values['3. low']),\n          close: parseFloat(values['4. close']),\n          volume: parseInt(values['6. volume'])\n        }))\n        .sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      return {\n        symbol: symbol.toUpperCase(),\n        range,\n        interval: '1d',\n        data,\n        source: 'ALPHA_VANTAGE'\n      };\n    } catch (alphaError) {\n      this.updateSourceHealth('ALPHA_VANTAGE', false, Date.now(), alphaError);\n      throw alphaError;\n    }\n  }\n\n  /**\n   * Fetch intraday market data (backend-first with fallbacks)\n   * @param {string} symbol\n   * @param {{interval?: string}} options\n   * @returns {Promise<Object>}\n   */\n  async fetchIntradayMarketData(symbol, options = {}) {\n    const interval = options.interval || '5min';\n    const qs = new URLSearchParams({ interval }).toString();\n    // Try backend proxy first\n    const t0 = Date.now();\n    try {\n      const backendData = await this.request(`/market-data/intraday/${symbol.toUpperCase()}?${qs}`);\n      const result = {\n        ...(typeof backendData === 'object' ? backendData : { data: backendData }),\n        symbol: backendData?.symbol || symbol.toUpperCase(),\n        interval,\n        source: (backendData?.source || 'backend_proxy').toUpperCase()\n      };\n      this.updateSourceHealth('BACKEND_PROXY', true, Date.now() - t0);\n      return result;\n    } catch (backendError) {\n      this.updateSourceHealth('BACKEND_PROXY', false, Date.now() - t0, backendError);\n      apiLogger.log('WARN', 'Backend intraday data failed, falling back to direct sources', { error: backendError.message });\n    }\n    // Fallback to Yahoo Finance (use 1d range)\n    try {\n      const range = '1d';\n      const yf = await this.fetchFromYahooFinance(symbol, { range, interval: interval.replace('min', 'm') });\n      const timestamps = yf.timestamp || [];\n      const quote = yf.indicators?.quote?.[0] || {};\n      const data = timestamps.map((t, i) => ({\n        timestamp: new Date(t * 1000).toISOString(),\n        open: quote.open?.[i] ?? null,\n        high: quote.high?.[i] ?? null,\n        low: quote.low?.[i] ?? null,\n        close: quote.close?.[i] ?? null,\n        volume: quote.volume?.[i] ?? null\n      }));\n      return {\n        symbol: yf.meta?.symbol || symbol.toUpperCase(),\n        range,\n        interval,\n        data,\n        meta: yf.meta,\n        source: 'YAHOO_FINANCE'\n      };\n    } catch (yahooError) {\n      this.updateSourceHealth('YAHOO_FINANCE', false, Date.now(), yahooError);\n      apiLogger.log('WARN', 'Yahoo Finance intraday fallback failed, trying Alpha Vantage', { error: yahooError.message });\n    }\n    // Fallback to Alpha Vantage intraday\n    try {\n      const av = await this.fetchFromAlphaVantage(symbol, 'TIME_SERIES_INTRADAY', { params: { interval } });\n      const seriesKey = Object.keys(av).find(k => k.startsWith('Time Series'));\n      const series = av[seriesKey];\n      if (!series) throw new Error('Alpha Vantage intraday series missing');\n      const data = Object.entries(series)\n        .map(([ts, values]) => ({\n          timestamp: new Date(ts).toISOString(),\n          open: parseFloat(values['1. open']),\n          high: parseFloat(values['2. high']),\n          low: parseFloat(values['3. low']),\n          close: parseFloat(values['4. close']),\n          volume: parseInt(values['5. volume'])\n        }))\n        .sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n      return {\n        symbol: symbol.toUpperCase(),\n        interval,\n        data,\n        source: 'ALPHA_VANTAGE'\n      };\n    } catch (alphaError) {\n      this.updateSourceHealth('ALPHA_VANTAGE', false, Date.now(), alphaError);\n      throw alphaError;\n    }\n  }\n\n  /**\n   * Fetch from Yahoo Finance API\n   * @param {string} symbol - Stock symbol\n   * @param {Object} options - Request options\n   * @returns {Promise<Object>} Raw data from Yahoo Finance\n   */\n  async fetchFromYahooFinance(symbol, options = {}) {\n    const url = `/v8/finance/chart/${symbol}`;\n\n    const params = {\n      range: options.range || '1d',\n      interval: options.interval || '1m',\n      includePrePost: true,\n      events: 'div,splits'\n    };\n\n    const fullUrl = new URL(url, 'http://localhost:3000');\n    fullUrl.search = new URLSearchParams(params).toString();\n\n    const response = await fetch(fullUrl.pathname + fullUrl.search, {\n      signal: AbortSignal.timeout(10000),\n      headers: {\n        'User-Agent': 'FinanceAnalyst-Pro/1.0'\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Yahoo Finance API request failed with status ${response.status}`);\n    }\n\n    const responseData = await response.json();\n\n    if (!responseData?.chart?.result?.[0]) {\n      throw new Error(`No data found for symbol: ${symbol}`);\n    }\n\n    return responseData.chart.result[0];\n  }\n\n  /**\n   * Fetch from Alpha Vantage API\n   * @param {string} symbol - Stock symbol\n   * @param {string} function_name - Alpha Vantage function\n   * @param {Object} options - Request options\n   * @returns {Promise<Object>} Raw data from Alpha Vantage\n   */\n  async fetchFromAlphaVantage(symbol, functionName, options = {}) {\n    if (!this.hasValidApiKey('ALPHA_VANTAGE')) {\n      throw new Error('Alpha Vantage API key not available');\n    }\n\n    const config = this.apiConfigs?.ALPHA_VANTAGE || { baseURL: 'https://www.alphavantage.co/query' };\n\n    const params = {\n      function: functionName,\n      symbol,\n      apikey: this.apiKeys.ALPHA_VANTAGE,\n      ...options.params\n    };\n\n    const fullUrl = new URL(config.baseURL);\n    fullUrl.search = new URLSearchParams(params).toString();\n\n    const response = await fetch(fullUrl, {\n      signal: AbortSignal.timeout(15000)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Alpha Vantage API request failed with status ${response.status}`);\n    }\n\n    const responseData = await response.json();\n\n    // Check for API errors\n    if (responseData['Error Message']) {\n      throw new Error(`Alpha Vantage error: ${responseData['Error Message']}`);\n    }\n\n    if (responseData['Note']) {\n      throw new Error(`Alpha Vantage rate limit: ${responseData['Note']}`);\n    }\n\n    return responseData;\n  }\n\n  /**\n   * Fetch comprehensive financial data via secure backend proxy\n   * @param {string} symbol - Stock symbol\n   * @returns {Promise<Object>} Comprehensive financial data\n   */\n  async fetchComprehensiveData(symbol) {\n    const results = {};\n    const errors = {};\n\n    // Fetch multiple data types in parallel via secure client\n    const dataTypes = [\n      { key: 'marketData', method: 'getQuote' },\n      { key: 'profile', method: 'getCompanyProfile' },\n      { key: 'financials', method: 'getIncomeStatement' },\n      { key: 'peers', method: 'getPeerCompanies' }\n    ];\n\n    const promises = dataTypes.map(async({ key, method }) => {\n      try {\n        results[key] = await this.client[method](symbol);\n      } catch (error) {\n        errors[key] = error.message;\n        apiLogger.log('ERROR', `Failed to fetch ${key} for ${symbol}`, { error: error.message });\n      }\n    });\n\n    await Promise.allSettled(promises);\n\n    return {\n      symbol,\n      timestamp: new Date().toISOString(),\n      data: results,\n      errors: Object.keys(errors).length > 0 ? errors : null,\n      sources: ['BACKEND_PROXY']\n    };\n  }\n\n  /**\n   * Normalize market data from different sources\n   * @param {Object} rawData - Raw data from API\n   * @param {string} source - Data source\n   * @returns {Object} Normalized market data\n   */\n  normalizeMarketData(rawData, source) {\n    switch (source) {\n      case 'YAHOO_FINANCE':\n        return this.normalizeYahooData(rawData);\n      case 'ALPHA_VANTAGE':\n        return this.normalizeAlphaVantageData(rawData);\n      default:\n        return rawData;\n    }\n  }\n\n  /**\n   * Normalize Yahoo Finance data\n   * @param {Object} data - Raw Yahoo Finance data\n   * @returns {Object} Normalized data\n   */\n  normalizeYahooData(data) {\n    const meta = data.meta;\n    const quote = data.indicators?.quote?.[0];\n    const latest = quote ? {\n      open: quote.open[quote.open.length - 1],\n      high: quote.high[quote.high.length - 1],\n      low: quote.low[quote.low.length - 1],\n      close: quote.close[quote.close.length - 1],\n      volume: quote.volume[quote.volume.length - 1]\n    } : {};\n\n    return {\n      symbol: meta.symbol,\n      currentPrice: meta.regularMarketPrice || latest.close,\n      previousClose: meta.previousClose,\n      change: meta.regularMarketPrice - meta.previousClose,\n      changePercent: ((meta.regularMarketPrice - meta.previousClose) / meta.previousClose) * 100,\n      dayHigh: meta.regularMarketDayHigh || latest.high,\n      dayLow: meta.regularMarketDayLow || latest.low,\n      volume: meta.regularMarketVolume || latest.volume,\n      marketCap: meta.marketCap,\n      currency: meta.currency,\n      exchangeName: meta.exchangeName,\n      timestamp: new Date(meta.regularMarketTime * 1000).toISOString(),\n      source: 'YAHOO_FINANCE'\n    };\n  }\n\n  /**\n   * Normalize Alpha Vantage data\n   * @param {Object} data - Raw Alpha Vantage data\n   * @returns {Object} Normalized data\n   */\n  normalizeAlphaVantageData(data) {\n    const globalQuote = data['Global Quote'];\n    if (!globalQuote) {\n      throw new Error('Invalid Alpha Vantage response format');\n    }\n\n    return {\n      symbol: globalQuote['01. symbol'],\n      currentPrice: parseFloat(globalQuote['05. price']),\n      previousClose: parseFloat(globalQuote['08. previous close']),\n      change: parseFloat(globalQuote['09. change']),\n      changePercent: parseFloat(globalQuote['10. change percent'].replace('%', '')),\n      dayHigh: parseFloat(globalQuote['03. high']),\n      dayLow: parseFloat(globalQuote['04. low']),\n      volume: parseInt(globalQuote['06. volume']),\n      timestamp: globalQuote['07. latest trading day'],\n      source: 'ALPHA_VANTAGE'\n    };\n  }\n\n  /**\n   * Update source health metrics\n   * @param {string} source - Data source\n   * @param {boolean} success - Whether request was successful\n   * @param {number} responseTime - Response time in ms\n   * @param {Error} error - Error object if failed\n   */\n  updateSourceHealth(source, success, responseTime, error = null) {\n    const health = this.sourceHealth.get(source);\n    if (!health) return;\n\n    health.requestCount++;\n    if (!success) {\n      health.errorCount++;\n      health.lastError = error?.message || 'Unknown error';\n      health.status = 'error';\n    } else {\n      health.status = 'healthy';\n      health.lastError = null;\n    }\n\n    health.successRate = (health.requestCount - health.errorCount) / health.requestCount;\n    health.avgResponseTime = (health.avgResponseTime + responseTime) / 2;\n    health.lastHealthCheck = new Date().toISOString();\n\n    this.sourceHealth.set(source, health);\n  }\n\n  /**\n   * Get health status for all sources\n   * @returns {Object} Health status map\n   */\n  getSourceHealthStatus() {\n    const status = {};\n    for (const [source, health] of this.sourceHealth.entries()) {\n      status[source] = {\n        ...health,\n        hasValidApiKey: this.hasValidApiKey(source),\n        requiresApiKey: this.requiresApiKey(source)\n      };\n    }\n    return status;\n  }\n\n  /**\n   * Get sources used in a data fetch result\n   * @param {Object} results - Fetch results\n   * @returns {Array} List of sources used\n   */\n  getSourcesUsed(results) {\n    const sources = new Set();\n    Object.values(results).forEach(data => {\n      if (data?.source) {\n        sources.add(data.source);\n      }\n    });\n    return Array.from(sources);\n  }\n\n  // Additional API methods expected by tests\n\n  /**\n   * Configuration properties\n   */\n  baseUrl = import.meta.env.VITE_API_BASE_URL || 'http://localhost:3001/api';\n  defaultHeaders = {};\n  timeout = 10000;\n  authToken = null;\n  cacheTTL = 300000; // 5 minutes\n  requestInterceptors = [];\n  responseInterceptors = [];\n  metrics = {\n    totalRequests: 0,\n    successfulRequests: 0,\n    failedRequests: 0,\n    avgResponseTime: 0\n  };\n\n  /**\n   * Make a generic API request\n   * @param {string} url - Request URL\n   * @param {Object} options - Request options\n   * @returns {Promise<Object>} Response data\n   */\n  async request(url, options = {}) {\n    const startTime = Date.now();\n    this.metrics.totalRequests++;\n\n    const limiter = this.rateLimiters.get('default');\n    await limiter.acquire();\n\n    const fullUrl = url.startsWith('http') ? url : `${this.baseUrl}${url}`;\n\n    const cacheKey = fullUrl;\n    if (this.cache.has(cacheKey)) {\n      const cached = this.cache.get(cacheKey);\n      if (Date.now() - cached.timestamp < this.cacheTTL) {\n        this.metrics.successfulRequests++;\n        return cached.data;\n      }\n    }\n\n    try {\n      let config = {\n        method: 'GET',\n        headers: { ...this.defaultHeaders },\n        ...options\n      };\n\n      if (this.authToken) {\n        config.headers.Authorization = `Bearer ${this.authToken}`;\n      }\n\n      for (const interceptor of this.requestInterceptors) {\n        config = await interceptor(config);\n      }\n\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), this.timeout);\n      config.signal = controller.signal;\n\n      const response = await fetch(fullUrl, config);\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorData = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, body: ${errorData}`);\n      }\n\n      this.rateLimitInfo.remaining = parseInt(response.headers.get('X-RateLimit-Remaining'), 10);\n      this.rateLimitInfo.reset = parseInt(response.headers.get('X-RateLimit-Reset'), 10);\n\n      let responseData = await response.json();\n\n      for (const interceptor of this.responseInterceptors) {\n        responseData = await interceptor(responseData, response);\n      }\n\n      this.cache.set(cacheKey, { data: responseData, timestamp: Date.now() });\n\n      const responseTime = Date.now() - startTime;\n      this.metrics.successfulRequests++;\n      this.metrics.avgResponseTime = (this.metrics.avgResponseTime + responseTime) / 2;\n\n      return responseData;\n    } catch (error) {\n      this.metrics.failedRequests++;\n      throw error;\n    }\n  }\n\n  /**\n   * Set authentication token\n   * @param {string} token - Auth token\n   */\n  setAuthToken(token) {\n    this.authToken = token;\n  }\n\n  /**\n   * Set cache TTL\n   * @param {number} ttl - Time to live in milliseconds\n   */\n  setCacheTTL(ttl) {\n    this.cacheTTL = ttl;\n  }\n\n  /**\n   * Batch multiple requests\n   * @param {Array} requests - Array of request configs or URLs\n   * @returns {Promise<Array>} Array of responses\n   */\n  async batchRequests(requests) {\n    const promises = requests.map(req => {\n      if (typeof req === 'string') {\n        return this.request(req);\n      }\n      return this.request(req.url, req.options);\n    });\n\n    const results = await Promise.allSettled(promises);\n\n    return results.map(result => {\n      if (result.status === 'fulfilled') {\n        return result.value;\n      }\n      return result.reason;\n    });\n  }\n\n  /**\n   * Add request interceptor\n   * @param {Function} interceptor - Interceptor function\n   */\n  addRequestInterceptor(interceptor) {\n    this.requestInterceptors.push(interceptor);\n  }\n\n  /**\n   * Add response interceptor\n   * @param {Function} interceptor - Interceptor function\n   */\n  addResponseInterceptor(interceptor) {\n    this.responseInterceptors.push(interceptor);\n  }\n\n  /**\n   * Make request with retry logic\n   * @param {string} url - Request URL\n   * @param {Object} options - Request options\n   * @param {number} retries - Number of retries\n   * @returns {Promise<Object>} Response data\n   */\n  async requestWithRetry(url, options = {}, retries = 3) {\n    let lastError;\n\n    for (let i = 0; i <= retries; i++) {\n      try {\n        return await this.request(url, options);\n      } catch (error) {\n        lastError = error;\n        if (i < retries) {\n          const delay = Math.pow(2, i) * 100; // Exponential backoff\n          await new Promise(resolve => setTimeout(resolve, delay));\n        }\n      }\n    }\n\n    throw lastError;\n  }\n\n  /**\n   * Set base URL\n   * @param {string} url - Base URL\n   */\n  setBaseUrl(url) {\n    this.baseUrl = url;\n  }\n\n  /**\n   * Get base URL\n   * @returns {string} Base URL\n   */\n  getBaseUrl() {\n    return this.baseUrl;\n  }\n\n  /**\n   * Set default headers\n   * @param {Object} headers - Default headers\n   */\n  setDefaultHeaders(headers) {\n    this.defaultHeaders = { ...headers };\n  }\n\n  /**\n   * Get default headers\n   * @returns {Object} Default headers\n   */\n  getDefaultHeaders() {\n    return { ...this.defaultHeaders };\n  }\n\n  /**\n   * Set timeout\n   * @param {number} timeout - Timeout in milliseconds\n   */\n  setTimeout(timeout) {\n    this.timeout = timeout;\n  }\n\n  /**\n   * Get timeout\n   * @returns {number} Timeout in milliseconds\n   */\n  getTimeout() {\n    return this.timeout;\n  }\n\n  /**\n   * Get metrics\n   * @returns {Object} Request metrics\n   */\n  getMetrics() {\n    return { ...this.metrics };\n  }\n\n  /**\n   * Reset metrics\n   */\n  resetMetrics() {\n    this.metrics = {\n      totalRequests: 0,\n      successfulRequests: 0,\n      failedRequests: 0,\n      avgResponseTime: 0\n    };\n  }\n\n  getRateLimitInfo() {\n    return this.rateLimitInfo;\n  }\n\n  clearCache() {\n    this.cache.clear();\n  }\n}\n\n// Export singleton instance\nexport const enhancedApiService = new EnhancedApiService();\nexport default EnhancedApiService;\n","// Market Data Normalizer\n// Maps backend/RT payload shapes into the widget/validator expected shape\n// - Maps price -> currentPrice\n// - Derives change and changePercent when missing\n// - Provides fallbacks for dayHigh/dayLow/volume/marketCap\n\nexport const normalizeQuote = (raw = {}, prevWidget = {}) => {\n  const price = typeof raw.price === 'number'\n    ? raw.price\n    : (typeof raw.currentPrice === 'number' ? raw.currentPrice : undefined);\n\n  const previousClose = typeof raw.previousClose === 'number'\n    ? raw.previousClose\n    : (typeof prevWidget.currentValue === 'number' ? prevWidget.currentValue : undefined);\n\n  const change = typeof raw.change === 'number'\n    ? raw.change\n    : (typeof price === 'number' && typeof previousClose === 'number'\n      ? price - previousClose\n      : undefined);\n\n  const changePercent = typeof raw.changePercent === 'number'\n    ? raw.changePercent\n    : (typeof change === 'number' && typeof previousClose === 'number' && previousClose !== 0\n      ? (change / previousClose) * 100\n      : undefined);\n\n  return {\n    symbol: raw.symbol || prevWidget.symbol,\n    currentPrice: price,\n    previousClose,\n    change,\n    changePercent,\n    volume: raw.volume ?? prevWidget.volume ?? null,\n    marketCap: raw.marketCap ?? prevWidget.marketCap ?? null,\n    dayHigh: raw.dayHigh ?? prevWidget.dayHigh ?? null,\n    dayLow: raw.dayLow ?? prevWidget.dayLow ?? null,\n    source: raw.source || 'BACKEND_PROXY',\n    timestamp: raw.timestamp || new Date().toISOString()\n  };\n};\n\nexport default { normalizeQuote };\n","import { CheckCircle, XCircle, AlertTriangle, Key, Wifi } from 'lucide-react';\nimport React from 'react';\n\nimport { Alert, AlertDescription } from '../../../components/ui/Alert';\nimport { Badge } from '../../../components/ui/Badge';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../../components/ui/Card';\nimport { Progress } from '../../../components/ui/Progress';\n\nconst ApiStatusPanel = ({\n  apiHealthStatus = {},\n  realDataEnabled = false,\n  dataSources = [],\n  dataQuality = {}\n}) => {\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'healthy':\n      case 'connected':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 'error':\n      case 'disconnected':\n        return <XCircle className=\"h-4 w-4 text-red-500\" />;\n      case 'warning':\n        return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\n      default:\n        return <AlertTriangle className=\"h-4 w-4 text-gray-400\" />;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'healthy':\n      case 'connected':\n        return 'bg-green-100 text-green-800';\n      case 'error':\n      case 'disconnected':\n        return 'bg-red-100 text-red-800';\n      case 'warning':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const connectedSources = dataSources.filter(source => source.status === 'connected').length;\n  const totalSources = dataSources.length;\n  const connectionPercentage = totalSources > 0 ? (connectedSources / totalSources) * 100 : 0;\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Wifi className=\"h-5 w-5\" />\n          API Status & Data Quality\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Overall Status */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            {getStatusIcon(realDataEnabled ? 'connected' : 'disconnected')}\n            <span className=\"font-medium\">\n              Real Data: {realDataEnabled ? 'Enabled' : 'Disabled'}\n            </span>\n          </div>\n          <Badge className={getStatusColor(realDataEnabled ? 'connected' : 'disconnected')}>\n            {realDataEnabled ? 'Live' : 'Demo Mode'}\n          </Badge>\n        </div>\n\n        {/* Connection Health */}\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center justify-between text-sm\">\n            <span>Connection Health</span>\n            <span>{connectedSources}/{totalSources} sources</span>\n          </div>\n          <Progress value={connectionPercentage} className=\"h-2\" />\n        </div>\n\n        {/* Data Sources Status */}\n        <div className=\"space-y-2\">\n          <h4 className=\"text-sm font-medium\">Data Sources</h4>\n          <div className=\"space-y-2\">\n            {dataSources.map((source) => (\n              <div key={source.id} className=\"flex items-center justify-between text-sm\">\n                <div className=\"flex items-center gap-2\">\n                  {getStatusIcon(source.status)}\n                  <span>{source.name}</span>\n                  {source.requiresKey && (\n                    <Key className=\"h-3 w-3 text-gray-400\" title=\"Requires API Key\" />\n                  )}\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Badge\n                    variant=\"outline\"\n                    className={`text-xs ${getStatusColor(source.status)}`}\n                  >\n                    {source.status}\n                  </Badge>\n                  {source.status === 'connected' && (\n                    <span className=\"text-xs text-gray-500\">{source.latency}ms</span>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* API Health Details */}\n        {Object.keys(apiHealthStatus).length > 0 && (\n          <div className=\"space-y-2\">\n            <h4 className=\"text-sm font-medium\">API Health Details</h4>\n            <div className=\"space-y-1 text-xs\">\n              {Object.entries(apiHealthStatus).map(([source, health]) => (\n                <div key={source} className=\"flex items-center justify-between\">\n                  <span className=\"capitalize\">{source.toLowerCase().replace('_', ' ')}</span>\n                  <div className=\"flex items-center gap-2\">\n                    <span>Success: {(health.successRate * 100).toFixed(1)}%</span>\n                    <span>Avg: {health.avgResponseTime.toFixed(0)}ms</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Data Quality Metrics */}\n        {Object.keys(dataQuality).length > 0 && (\n          <div className=\"space-y-2\">\n            <h4 className=\"text-sm font-medium\">Data Quality</h4>\n            <div className=\"space-y-1\">\n              {Object.entries(dataQuality).map(([symbol, quality]) => (\n                <div key={symbol} className=\"flex items-center justify-between text-sm\">\n                  <span>{symbol}</span>\n                  <div className=\"flex items-center gap-2\">\n                    <Progress value={quality} className=\"h-1 w-16\" />\n                    <span className=\"text-xs\">{quality}%</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Alerts */}\n        {!realDataEnabled && (\n          <Alert>\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription className=\"text-sm\">\n              Running in demo mode. Add API keys to enable real-time data.\n              <br />\n              <span className=\"text-xs text-gray-600\">\n                Set VITE_ALPHA_VANTAGE_API_KEY or VITE_FMP_API_KEY in your .env file\n              </span>\n            </AlertDescription>\n          </Alert>\n        )}\n\n        {realDataEnabled && connectedSources < totalSources && (\n          <Alert>\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription className=\"text-sm\">\n              Some data sources are unavailable. Check your API keys and network connection.\n            </AlertDescription>\n          </Alert>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ApiStatusPanel;\n","import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\nimport Input from '../../../components/ui/Input';\n\nconst BulkOperationsPanel = ({ selectedSymbols, onBulkExport, onBulkAlert, onBulkHistorical }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [exportFormat, setExportFormat] = useState('csv');\n  const [alertThreshold, setAlertThreshold] = useState('');\n  const [historicalPeriod, setHistoricalPeriod] = useState('1y');\n\n  const handleBulkExport = () => {\n    onBulkExport({\n      symbols: selectedSymbols,\n      format: exportFormat,\n      timestamp: new Date().toISOString()\n    });\n  };\n\n  const handleBulkAlert = () => {\n    if (!alertThreshold) return;\n    onBulkAlert({\n      symbols: selectedSymbols,\n      threshold: parseFloat(alertThreshold),\n      type: 'price_change'\n    });\n    setAlertThreshold('');\n  };\n\n  const handleBulkHistorical = () => {\n    onBulkHistorical({\n      symbols: selectedSymbols,\n      period: historicalPeriod\n    });\n  };\n\n  if (selectedSymbols.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"bg-card border border-border rounded-lg shadow-elevation-1\">\n      {/* Header */}\n      <button\n        type=\"button\"\n        className=\"w-full flex items-center justify-between p-4 cursor-pointer text-left bg-transparent\"\n        onClick={() => setIsExpanded(!isExpanded)}\n        aria-expanded={isExpanded}\n        aria-controls=\"bulk-ops-panel-content\"\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            e.preventDefault();\n            setIsExpanded(prev => !prev);\n          }\n        }}\n      >\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-8 h-8 bg-primary rounded-lg flex items-center justify-center\">\n            <Icon name=\"Layers\" size={16} color=\"white\" />\n          </div>\n          <div>\n            <h3 className=\"font-semibold text-foreground\">Bulk Operations</h3>\n            <p className=\"text-sm text-muted-foreground\">\n              {selectedSymbols.length} symbol{selectedSymbols.length !== 1 ? 's' : ''} selected\n            </p>\n          </div>\n        </div>\n        <Icon\n          name={isExpanded ? 'ChevronUp' : 'ChevronDown'}\n          size={20}\n          className=\"text-muted-foreground\"\n        />\n      </button>\n\n      {/* Expanded Content */}\n      {isExpanded && (\n        <div className=\"border-t border-border\" id=\"bulk-ops-panel-content\">\n          {/* Selected Symbols */}\n          <div className=\"p-4 border-b border-border\">\n            <h4 className=\"text-sm font-medium text-foreground mb-2\">Selected Symbols:</h4>\n            <div className=\"flex flex-wrap gap-2\">\n              {selectedSymbols.slice(0, 10).map(symbol => (\n                <span\n                  key={symbol}\n                  className=\"px-2 py-1 bg-muted text-muted-foreground text-xs rounded\"\n                >\n                  {symbol}\n                </span>\n              ))}\n              {selectedSymbols.length > 10 && (\n                <span className=\"px-2 py-1 bg-muted text-muted-foreground text-xs rounded\">\n                  +{selectedSymbols.length - 10} more\n                </span>\n              )}\n            </div>\n          </div>\n\n          {/* Operations */}\n          <div className=\"p-4 space-y-4\">\n            {/* Export Operation */}\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-foreground\">Data Export</h4>\n              <div className=\"flex items-center space-x-2\">\n                <select\n                  value={exportFormat}\n                  onChange={e => setExportFormat(e.target.value)}\n                  className=\"px-3 py-2 border border-border rounded-lg text-sm bg-input text-foreground\"\n                >\n                  <option value=\"csv\">CSV Format</option>\n                  <option value=\"xlsx\">Excel Format</option>\n                  <option value=\"json\">JSON Format</option>\n                  <option value=\"pdf\">PDF Report</option>\n                </select>\n                <Button\n                  variant=\"outline\" size=\"sm\" iconName=\"Download\"\n                  onClick={handleBulkExport}\n                >\n                  Export Data\n                </Button>\n              </div>\n            </div>\n\n            {/* Alert Setup */}\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-foreground\">Price Alerts</h4>\n              <div className=\"flex items-center space-x-2\">\n                <Input\n                  type=\"number\"\n                  placeholder=\"Threshold %\"\n                  value={alertThreshold}\n                  onChange={e => setAlertThreshold(e.target.value)}\n                  className=\"flex-1\"\n                />\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  iconName=\"Bell\"\n                  onClick={handleBulkAlert}\n                  disabled={!alertThreshold}\n                >\n                  Set Alerts\n                </Button>\n              </div>\n            </div>\n\n            {/* Historical Data */}\n            <div className=\"space-y-2\">\n              <h4 className=\"text-sm font-medium text-foreground\">Historical Data</h4>\n              <div className=\"flex items-center space-x-2\">\n                <select\n                  value={historicalPeriod}\n                  onChange={e => setHistoricalPeriod(e.target.value)}\n                  className=\"px-3 py-2 border border-border rounded-lg text-sm bg-input text-foreground\"\n                >\n                  <option value=\"1d\">1 Day</option>\n                  <option value=\"1w\">1 Week</option>\n                  <option value=\"1m\">1 Month</option>\n                  <option value=\"3m\">3 Months</option>\n                  <option value=\"6m\">6 Months</option>\n                  <option value=\"1y\">1 Year</option>\n                  <option value=\"5y\">5 Years</option>\n                </select>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  iconName=\"BarChart3\"\n                  onClick={handleBulkHistorical}\n                >\n                  Get Historical\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* Quick Stats */}\n          <div className=\"p-4 border-t border-border bg-muted/30\">\n            <div className=\"grid grid-cols-3 gap-4 text-center\">\n              <div>\n                <div className=\"text-lg font-semibold text-foreground\">\n                  {selectedSymbols.length}\n                </div>\n                <div className=\"text-xs text-muted-foreground\">Symbols</div>\n              </div>\n              <div>\n                <div className=\"text-lg font-semibold text-foreground\">\n                  {Math.min(selectedSymbols.length * 50, 1000)}\n                </div>\n                <div className=\"text-xs text-muted-foreground\">Data Points</div>\n              </div>\n              <div>\n                <div className=\"text-lg font-semibold text-foreground\">\n                  ~{Math.ceil(selectedSymbols.length / 10)}s\n                </div>\n                <div className=\"text-xs text-muted-foreground\">Est. Time</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BulkOperationsPanel;\n","\nimport Icon from '../../../components/AppIcon';\n\nconst ConnectionStatus = ({ connectionHealth, lastUpdate }) => {\n  const getStatusColor = status => {\n    switch (status) {\n      case 'excellent':\n        return 'text-success';\n      case 'good':\n        return 'text-primary';\n      case 'warning':\n        return 'text-warning';\n      case 'error':\n        return 'text-error';\n      default:\n        return 'text-muted-foreground';\n    }\n  };\n\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'excellent':\n        return 'Wifi';\n      case 'good':\n        return 'Wifi';\n      case 'warning':\n        return 'WifiOff';\n      case 'error':\n        return 'AlertTriangle';\n      default:\n        return 'Wifi';\n    }\n  };\n\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <div className=\"flex items-center space-x-2\">\n        <Icon\n          name={getStatusIcon(connectionHealth.overall)}\n          size={16}\n          className={getStatusColor(connectionHealth.overall)}\n        />\n        <span className=\"text-sm font-medium text-foreground\">\n          Connection: {connectionHealth.overall}\n        </span>\n      </div>\n\n      <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n        <Icon name=\"Clock\" size={14} />\n        <span>Last update: {lastUpdate}</span>\n      </div>\n\n      <div className=\"flex items-center space-x-1\">\n        {Object.entries(connectionHealth.sources).map(([source, status]) => (\n          <div\n            key={source}\n            className={`w-3 h-3 rounded-full ${\n              status === 'connected'\n                ? 'bg-success'\n                : status === 'warning'\n                  ? 'bg-warning'\n                  : 'bg-error'\n            }`}\n            title={`${source}: ${status}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectionStatus;\n","\nconst DataSourceToggle = ({ dataSources, onToggle }) => {\n  return (\n    <div className=\"flex items-center space-x-4\">\n      <span className=\"text-sm font-medium text-foreground\">Data Sources:</span>\n      <div className=\"flex items-center space-x-2\">\n        {dataSources.map(source => (\n          <button\n            key={source.id}\n            onClick={() => onToggle(source.id)}\n            className={`\n              flex items-center space-x-2 px-3 py-2 rounded-lg text-sm font-medium transition-smooth\n              ${\n          source.enabled\n            ? 'bg-primary text-primary-foreground'\n            : 'bg-muted text-muted-foreground hover:bg-muted/80'\n          }\n            `}\n          >\n            <div\n              className={`w-2 h-2 rounded-full ${\n                source.status === 'connected'\n                  ? 'bg-success'\n                  : source.status === 'warning'\n                    ? 'bg-warning'\n                    : 'bg-error'\n              }`}\n            />\n            <span>{source.name}</span>\n            <span className=\"text-xs opacity-75\">{source.latency}ms</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default DataSourceToggle;\n","\nimport Icon from '../../../components/AppIcon';\n\nconst MarketDataWidget = ({ widget, onResize, onRemove }) => {\n  const getChangeColor = change => {\n    if (change > 0) return 'text-success';\n    if (change < 0) return 'text-error';\n    return 'text-muted-foreground';\n  };\n\n  const getChangeIcon = change => {\n    if (change > 0) return 'TrendingUp';\n    if (change < 0) return 'TrendingDown';\n    return 'Minus';\n  };\n\n  const formatValue = (value, type) => {\n    switch (type) {\n      case 'currency':\n        return `$${value.toLocaleString('en-US', { minimumFractionDigits: 2 })}`;\n      case 'percentage':\n        return `${value.toFixed(2)}%`;\n      case 'number':\n        return value.toLocaleString('en-US', { minimumFractionDigits: 2 });\n      default:\n        return value;\n    }\n  };\n\n  const getFreshnessColor = timestamp => {\n    const now = new Date();\n    const updateTime = new Date(timestamp);\n    const diffSeconds = (now - updateTime) / 1000;\n\n    if (diffSeconds < 5) return 'bg-success';\n    if (diffSeconds < 30) return 'bg-warning';\n    return 'bg-error';\n  };\n\n  return (\n    <div className=\"bg-card border border-border rounded-lg p-4 shadow-elevation-1 hover:shadow-elevation-2 transition-smooth\">\n      {/* Widget Header */}\n      <div className=\"flex items-center justify-between mb-3\">\n        <div className=\"flex items-center space-x-2\">\n          <h3 className=\"font-semibold text-foreground\">{widget.symbol}</h3>\n          <span className=\"text-sm text-muted-foreground\">{widget.name}</span>\n          <div\n            className={`w-2 h-2 rounded-full ${getFreshnessColor(widget.lastUpdate)}`}\n            title={`Last updated: ${new Date(widget.lastUpdate).toLocaleTimeString()}`}\n          />\n        </div>\n        <div className=\"flex items-center space-x-1\">\n          <button\n            onClick={() => onResize(widget.id)}\n            className=\"p-1 text-muted-foreground hover:text-foreground transition-smooth\"\n            title=\"Resize widget\"\n          >\n            <Icon name=\"Maximize2\" size={14} />\n          </button>\n          <button\n            onClick={() => onRemove(widget.id)}\n            className=\"p-1 text-muted-foreground hover:text-error transition-smooth\"\n            title=\"Remove widget\"\n          >\n            <Icon name=\"X\" size={14} />\n          </button>\n        </div>\n      </div>\n\n      {/* Current Value */}\n      <div className=\"mb-3\">\n        <div className=\"text-2xl font-bold text-foreground\">\n          {formatValue(widget.currentValue, widget.valueType)}\n        </div>\n        <div className={`flex items-center space-x-1 text-sm ${getChangeColor(widget.change)}`}>\n          <Icon name={getChangeIcon(widget.change)} size={14} />\n          <span>{formatValue(Math.abs(widget.change), widget.valueType)}</span>\n          <span>\n            ({widget.changePercent > 0 ? '+' : ''}\n            {widget.changePercent.toFixed(2)}%)\n          </span>\n        </div>\n      </div>\n\n      {/* Sparkline Chart */}\n      <div className=\"mb-3\">\n        <div className=\"h-16 bg-muted rounded flex items-end space-x-1 p-2\">\n          {widget.sparklineData.map((point, index) => (\n            <div\n              key={index}\n              className={`flex-1 rounded-sm ${\n                point > widget.sparklineData[0] ? 'bg-success' : 'bg-error'\n              }`}\n              style={{\n                height: `${(point / Math.max(...widget.sparklineData)) * 100}%`,\n                minHeight: '2px'\n              }}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Additional Metrics */}\n      <div className=\"grid grid-cols-2 gap-2 text-xs\">\n        <div>\n          <span className=\"text-muted-foreground\">High:</span>\n          <span className=\"ml-1 font-medium text-foreground\">\n            {formatValue(widget.dayHigh, widget.valueType)}\n          </span>\n        </div>\n        <div>\n          <span className=\"text-muted-foreground\">Low:</span>\n          <span className=\"ml-1 font-medium text-foreground\">\n            {formatValue(widget.dayLow, widget.valueType)}\n          </span>\n        </div>\n        <div>\n          <span className=\"text-muted-foreground\">Volume:</span>\n          <span className=\"ml-1 font-medium text-foreground\">\n            {widget.volume ? widget.volume.toLocaleString() : 'N/A'}\n          </span>\n        </div>\n        <div>\n          <span className=\"text-muted-foreground\">Source:</span>\n          <span className=\"ml-1 font-medium text-foreground\">{widget.source}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MarketDataWidget;\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Input from '../../../components/ui/Input';\n\nconst SymbolSearch = ({ onSymbolSelect, watchlist, onAddToWatchlist }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const searchRef = useRef(null);\n\n  // Mock symbol data\n  const symbolDatabase = [\n    { symbol: 'AAPL', name: 'Apple Inc.', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'MSFT', name: 'Microsoft Corporation', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'GOOGL', name: 'Alphabet Inc.', exchange: 'NASDAQ', sector: 'Technology' },\n    {\n      symbol: 'AMZN',\n      name: 'Amazon.com Inc.',\n      exchange: 'NASDAQ',\n      sector: 'Consumer Discretionary'\n    },\n    { symbol: 'TSLA', name: 'Tesla Inc.', exchange: 'NASDAQ', sector: 'Consumer Discretionary' },\n    { symbol: 'META', name: 'Meta Platforms Inc.', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'NVDA', name: 'NVIDIA Corporation', exchange: 'NASDAQ', sector: 'Technology' },\n    { symbol: 'JPM', name: 'JPMorgan Chase & Co.', exchange: 'NYSE', sector: 'Financial Services' },\n    { symbol: 'JNJ', name: 'Johnson & Johnson', exchange: 'NYSE', sector: 'Healthcare' },\n    { symbol: 'V', name: 'Visa Inc.', exchange: 'NYSE', sector: 'Financial Services' }\n  ];\n\n  useEffect(() => {\n    if (searchTerm.length > 0) {\n      const filtered = symbolDatabase\n        .filter(\n          item =>\n            item.symbol.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            item.name.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n        .slice(0, 8);\n      setSuggestions(filtered);\n      setIsOpen(true);\n      setSelectedIndex(-1);\n    } else {\n      setSuggestions([]);\n      setIsOpen(false);\n    }\n  }, [searchTerm]);\n\n  const handleKeyDown = e => {\n    if (!isOpen) return;\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setSelectedIndex(prev => (prev < suggestions.length - 1 ? prev + 1 : prev));\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        setSelectedIndex(prev => (prev > 0 ? prev - 1 : -1));\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (selectedIndex >= 0) {\n          handleSymbolSelect(suggestions[selectedIndex]);\n        }\n        break;\n      case 'Escape':\n        setIsOpen(false);\n        setSelectedIndex(-1);\n        break;\n    }\n  };\n\n  const handleSymbolSelect = symbol => {\n    onSymbolSelect(symbol);\n    setSearchTerm('');\n    setIsOpen(false);\n    setSelectedIndex(-1);\n  };\n\n  const isInWatchlist = symbol => {\n    return watchlist.some(item => item.symbol === symbol);\n  };\n\n  return (\n    <div className=\"relative\" ref={searchRef}>\n      <div className=\"relative\">\n        <Input\n          type=\"text\"\n          placeholder=\"Search symbols (e.g., AAPL, Apple)...\"\n          value={searchTerm}\n          onChange={e => setSearchTerm(e.target.value)}\n          onKeyDown={handleKeyDown}\n          className=\"pl-10 pr-4\"\n        />\n        <Icon\n          name=\"Search\"\n          size={18}\n          className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground\"\n        />\n      </div>\n\n      {/* Search Suggestions */}\n      {isOpen && suggestions.length > 0 && (\n        <div className=\"absolute top-full left-0 right-0 mt-1 bg-popover border border-border rounded-lg shadow-elevation-2 z-50 max-h-64 overflow-y-auto\">\n          {suggestions.map((item, index) => (\n            <div\n              key={item.symbol}\n              className={`\n                flex items-center justify-between p-3 cursor-pointer transition-smooth\n                ${index === selectedIndex ? 'bg-muted' : 'hover:bg-muted'}\n              `}\n              onClick={() => handleSymbolSelect(item)}\n              role=\"button\"\n              tabIndex={0}\n              onKeyDown={e => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault();\n                  handleSymbolSelect(item);\n                }\n              }}\n            >\n              <div className=\"flex-1\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"font-semibold text-foreground\">{item.symbol}</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded text-muted-foreground\">\n                    {item.exchange}\n                  </span>\n                </div>\n                <div className=\"text-sm text-muted-foreground\">{item.name}</div>\n                <div className=\"text-xs text-muted-foreground\">{item.sector}</div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                {!isInWatchlist(item.symbol) && (\n                  <button\n                    onClick={e => {\n                      e.stopPropagation();\n                      onAddToWatchlist(item);\n                    }}\n                    className=\"p-1 text-muted-foreground hover:text-primary transition-smooth\"\n                    title=\"Add to watchlist\"\n                  >\n                    <Icon name=\"Star\" size={16} />\n                  </button>\n                )}\n                <Icon name=\"Plus\" size={16} className=\"text-muted-foreground\" />\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* No Results */}\n      {isOpen && searchTerm.length > 0 && suggestions.length === 0 && (\n        <div className=\"absolute top-full left-0 right-0 mt-1 bg-popover border border-border rounded-lg shadow-elevation-2 z-50 p-4 text-center\">\n          <div className=\"text-muted-foreground\">\n            <Icon name=\"Search\" size={24} className=\"mx-auto mb-2\" />\n            <p>No symbols found for &ldquo;{searchTerm}&rdquo;</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SymbolSearch;\n","import React, { useState } from 'react';\n\nimport Icon from '../../../components/AppIcon';\nimport Button from '../../../components/ui/Button';\n\nconst WatchlistPanel = ({ watchlist, onRemoveFromWatchlist, onSelectSymbol }) => {\n  const [sortBy, setSortBy] = useState('symbol');\n  const [sortOrder, setSortOrder] = useState('asc');\n\n  const sortedWatchlist = [...watchlist].sort((a, b) => {\n    let aValue = a[sortBy];\n    let bValue = b[sortBy];\n\n    if (typeof aValue === 'string') {\n      aValue = aValue.toLowerCase();\n      bValue = bValue.toLowerCase();\n    }\n\n    if (sortOrder === 'asc') {\n      return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n    } else {\n      return aValue > bValue ? -1 : aValue < bValue ? 1 : 0;\n    }\n  });\n\n  const handleSort = field => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('asc');\n    }\n  };\n\n  const getChangeColor = change => {\n    if (change > 0) return 'text-success';\n    if (change < 0) return 'text-error';\n    return 'text-muted-foreground';\n  };\n\n  const formatValue = (value, type) => {\n    switch (type) {\n      case 'currency':\n        return `$${value.toLocaleString('en-US', { minimumFractionDigits: 2 })}`;\n      case 'percentage':\n        return `${value.toFixed(2)}%`;\n      default:\n        return value;\n    }\n  };\n\n  return (\n    <div className=\"bg-card border border-border rounded-lg shadow-elevation-1\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-border\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"font-semibold text-foreground\">Watchlist</h3>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-muted-foreground\">{watchlist.length} symbols</span>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              iconName=\"MoreVertical\"\n              aria-label=\"Watchlist options\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Sort Controls */}\n      <div className=\"p-3 border-b border-border bg-muted/30\">\n        <div className=\"flex items-center space-x-2 text-xs\">\n          <span className=\"text-muted-foreground\">Sort by:</span>\n          {['symbol', 'name', 'price', 'change'].map(field => (\n            <button\n              key={field}\n              onClick={() => handleSort(field)}\n              className={`\n                flex items-center space-x-1 px-2 py-1 rounded transition-smooth\n                ${\n            sortBy === field\n              ? 'bg-primary text-primary-foreground'\n              : 'text-muted-foreground hover:text-foreground'\n            }\n              `}\n            >\n              <span className=\"capitalize\">{field}</span>\n              {sortBy === field && (\n                <Icon name={sortOrder === 'asc' ? 'ChevronUp' : 'ChevronDown'} size={12} />\n              )}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Watchlist Items */}\n      <div className=\"max-h-96 overflow-y-auto\">\n        {sortedWatchlist.length === 0 ? (\n          <div className=\"p-8 text-center\">\n            <Icon name=\"Star\" size={32} className=\"mx-auto mb-3 text-muted-foreground\" />\n            <p className=\"text-muted-foreground\">No symbols in watchlist</p>\n            <p className=\"text-sm text-muted-foreground mt-1\">\n              Search and add symbols to track them here\n            </p>\n          </div>\n        ) : (\n          sortedWatchlist.map(item => (\n            <div\n              key={item.symbol}\n              className=\"flex items-center justify-between p-3 border-b border-border last:border-b-0 hover:bg-muted/50 cursor-pointer transition-smooth\"\n              onClick={() => onSelectSymbol(item)}\n              role=\"button\"\n              tabIndex={0}\n              onKeyDown={e => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault();\n                  onSelectSymbol(item);\n                }\n              }}\n            >\n              <div className=\"flex-1\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className=\"font-semibold text-foreground\">{item.symbol}</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded text-muted-foreground\">\n                    {item.exchange}\n                  </span>\n                </div>\n                <div className=\"text-sm text-muted-foreground truncate\">{item.name}</div>\n              </div>\n\n              <div className=\"text-right mr-3\">\n                <div className=\"font-semibold text-foreground\">\n                  {formatValue(item.price || 150.25, 'currency')}\n                </div>\n                <div className={`text-sm ${getChangeColor(item.change || 2.15)}`}>\n                  {item.change > 0 ? '+' : ''}\n                  {formatValue(Math.abs(item.change || 2.15), 'currency')}(\n                  {item.changePercent > 0 ? '+' : ''}\n                  {(item.changePercent || 1.45).toFixed(2)}%)\n                </div>\n              </div>\n\n              <button\n                onClick={e => {\n                  e.stopPropagation();\n                  onRemoveFromWatchlist(item.symbol);\n                }}\n                className=\"p-1 text-muted-foreground hover:text-error transition-smooth\"\n                title=\"Remove from watchlist\"\n              >\n                <Icon name=\"X\" size={16} />\n              </button>\n            </div>\n          ))\n        )}\n      </div>\n\n      {/* Footer Actions */}\n      {watchlist.length > 0 && (\n        <div className=\"p-3 border-t border-border bg-muted/30\">\n          <div className=\"flex items-center justify-between\">\n            <Button variant=\"ghost\" size=\"sm\" iconName=\"Download\">\n              Export\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\" iconName=\"Bell\">\n              Set Alerts\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WatchlistPanel;\n","import React, { useState, useEffect } from 'react';\n\nimport Icon from '../../components/AppIcon';\nimport Button from '../../components/ui/Button';\nimport Header from '../../components/ui/Header';\nimport { useFinancialAccessibility } from '../../hooks/useAccessibility';\nimport { dataValidationService } from '../../services/dataValidationService';\nimport { enhancedApiService } from '../../services/enhancedApiService';\nimport { normalizeQuote } from '../../services/normalizers/marketDataNormalizer';\nimport realTimeDataService from '../../services/realTimeDataService';\n\nimport ApiStatusPanel from './components/ApiStatusPanel';\nimport BulkOperationsPanel from './components/BulkOperationsPanel';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport DataSourceToggle from './components/DataSourceToggle';\nimport MarketDataWidget from './components/MarketDataWidget';\nimport SymbolSearch from './components/SymbolSearch';\nimport WatchlistPanel from './components/WatchlistPanel';\n\n// Import real data services\n\nconst RealTimeMarketDataCenter = () => {\n  // Add accessibility and performance monitoring\n  const { elementRef: _elementRef, testFinancialFeatures: _testFinancialFeatures } = useFinancialAccessibility('market-data-center');\n\n  const [dataSources, setDataSources] = useState([\n    { id: 'yahoo', name: 'Yahoo Finance', enabled: true, status: 'connected', latency: 12, requiresKey: false },\n    { id: 'alpha_vantage', name: 'Alpha Vantage', enabled: false, status: 'disconnected', latency: 25, requiresKey: true },\n    { id: 'fmp', name: 'Financial Modeling Prep', enabled: false, status: 'disconnected', latency: 18, requiresKey: true },\n    { id: 'sec_edgar', name: 'SEC EDGAR', enabled: true, status: 'connected', latency: 45, requiresKey: false }\n  ]);\n\n  const [connectionHealth, _setConnectionHealth] = useState({\n    overall: 'good',\n    sources: {\n      yahoo: 'connected',\n      alpha_vantage: 'disconnected',\n      fmp: 'disconnected',\n      sec_edgar: 'connected'\n    }\n  });\n\n  const [realDataEnabled, setRealDataEnabled] = useState(false);\n  const [apiHealthStatus, setApiHealthStatus] = useState({});\n  const [dataQuality, _setDataQuality] = useState({});\n\n  const [widgets, setWidgets] = useState([\n    {\n      id: 'widget-1',\n      symbol: 'AAPL',\n      name: 'Apple Inc.',\n      currentValue: 182.52,\n      change: 2.15,\n      changePercent: 1.19,\n      valueType: 'currency',\n      dayHigh: 184.3,\n      dayLow: 180.15,\n      volume: 52847392,\n      source: 'Bloomberg',\n      lastUpdate: new Date(Date.now() - 2000),\n      sparklineData: [180.25, 181.15, 180.95, 182.1, 181.85, 182.52]\n    },\n    {\n      id: 'widget-2',\n      symbol: 'MSFT',\n      name: 'Microsoft Corporation',\n      currentValue: 378.85,\n      change: -1.25,\n      changePercent: -0.33,\n      valueType: 'currency',\n      dayHigh: 381.2,\n      dayLow: 377.5,\n      volume: 28394751,\n      source: 'FactSet',\n      lastUpdate: new Date(Date.now() - 1500),\n      sparklineData: [380.15, 379.85, 378.95, 379.4, 378.2, 378.85]\n    },\n    {\n      id: 'widget-3',\n      symbol: 'GOOGL',\n      name: 'Alphabet Inc.',\n      currentValue: 2847.35,\n      change: 15.8,\n      changePercent: 0.56,\n      valueType: 'currency',\n      dayHigh: 2855.0,\n      dayLow: 2830.15,\n      volume: 1847392,\n      source: 'Bloomberg',\n      lastUpdate: new Date(Date.now() - 3000),\n      sparklineData: [2835.25, 2841.15, 2838.95, 2845.1, 2843.85, 2847.35]\n    },\n    {\n      id: 'widget-4',\n      symbol: 'US10Y',\n      name: 'US 10-Year Treasury',\n      currentValue: 4.285,\n      change: 0.025,\n      changePercent: 0.59,\n      valueType: 'percentage',\n      dayHigh: 4.295,\n      dayLow: 4.26,\n      volume: null,\n      source: 'Refinitiv',\n      lastUpdate: new Date(Date.now() - 5000),\n      sparklineData: [4.26, 4.27, 4.275, 4.28, 4.285, 4.285]\n    }\n  ]);\n\n  const [watchlist, setWatchlist] = useState([\n    {\n      symbol: 'AAPL',\n      name: 'Apple Inc.',\n      exchange: 'NASDAQ',\n      sector: 'Technology',\n      price: 182.52,\n      change: 2.15,\n      changePercent: 1.19\n    },\n    {\n      symbol: 'MSFT',\n      name: 'Microsoft Corporation',\n      exchange: 'NASDAQ',\n      sector: 'Technology',\n      price: 378.85,\n      change: -1.25,\n      changePercent: -0.33\n    },\n    {\n      symbol: 'TSLA',\n      name: 'Tesla Inc.',\n      exchange: 'NASDAQ',\n      sector: 'Consumer Discretionary',\n      price: 248.42,\n      change: 5.67,\n      changePercent: 2.34\n    }\n  ]);\n\n  const [selectedSymbols, _setSelectedSymbols] = useState([]);\n  const [lastUpdate, setLastUpdate] = useState('2 min ago');\n  const [refreshInterval, _setRefreshInterval] = useState(5000);\n  const [isAutoRefresh, setIsAutoRefresh] = useState(true);\n\n  // Initialize real data services and check API health\n  useEffect(() => {\n    const initializeRealData = async() => {\n      try {\n        // Ensure backend base URL is initialized from environment at runtime\n        const base = import.meta.env.VITE_API_BASE_URL || 'http://localhost:3001/api';\n        enhancedApiService.setBaseUrl(base);\n\n        // Check API health status\n        const healthStatus = enhancedApiService.getSourceHealthStatus();\n        setApiHealthStatus(healthStatus);\n\n        // Update data sources based on API availability\n        setDataSources(prevSources =>\n          prevSources.map(source => {\n            const health = healthStatus[source.id.toUpperCase()];\n            if (health) {\n              return {\n                ...source,\n                enabled: health.hasValidApiKey || !health.requiresApiKey,\n                status: health.hasValidApiKey || !health.requiresApiKey ? 'connected' : 'disconnected'\n              };\n            }\n            return source;\n          })\n        );\n\n        // Enable real data if we have at least one working API\n        const hasWorkingApi = Object.values(healthStatus).some(\n          health => health.hasValidApiKey || !health.requiresApiKey\n        );\n        setRealDataEnabled(hasWorkingApi);\n\n      } catch (error) {\n        console.error('Failed to initialize real data services:', error);\n      }\n    };\n\n    initializeRealData();\n  }, []);\n\n  // Real-time updates with actual data or simulation\n  useEffect(() => {\n    if (!isAutoRefresh) return;\n\n    const interval = setInterval(async() => {\n      if (realDataEnabled) {\n        // Fetch real data for each widget\n        const updatedWidgets = await Promise.all(\n          widgets.map(async(widget) => {\n            try {\n              const marketData = await enhancedApiService.fetchRealTimeMarketData(widget.symbol);\n              const normalized = normalizeQuote(marketData, widget);\n              const validation = dataValidationService.validateData(normalized, 'marketData');\n\n              return {\n                ...widget,\n                currentValue: normalized.currentPrice,\n                change: normalized.change,\n                changePercent: normalized.changePercent,\n                dayHigh: normalized.dayHigh,\n                dayLow: normalized.dayLow,\n                volume: normalized.volume,\n                lastUpdate: new Date(normalized.timestamp),\n                source: normalized.source,\n                dataQuality: validation.qualityScore,\n                sparklineData: [\n                  ...widget.sparklineData.slice(1),\n                  normalized.currentPrice\n                ]\n              };\n            } catch (error) {\n              console.warn(`Failed to fetch real data for ${widget.symbol}, using simulation:`, error);\n              // Fallback to simulation\n              return {\n                ...widget,\n                currentValue: widget.currentValue + (Math.random() - 0.5) * 2,\n                change: (Math.random() - 0.5) * 5,\n                changePercent: (Math.random() - 0.5) * 2,\n                lastUpdate: new Date(),\n                source: 'Simulation',\n                sparklineData: [\n                  ...widget.sparklineData.slice(1),\n                  widget.currentValue + (Math.random() - 0.5) * 2\n                ]\n              };\n            }\n          })\n        );\n        setWidgets(updatedWidgets);\n      } else {\n        // Fallback to simulation\n        setWidgets(prevWidgets =>\n          prevWidgets.map(widget => ({\n            ...widget,\n            currentValue: widget.currentValue + (Math.random() - 0.5) * 2,\n            change: (Math.random() - 0.5) * 5,\n            changePercent: (Math.random() - 0.5) * 2,\n            lastUpdate: new Date(),\n            source: 'Simulation',\n            sparklineData: [\n              ...widget.sparklineData.slice(1),\n              widget.currentValue + (Math.random() - 0.5) * 2\n            ]\n          }))\n        );\n      }\n      setLastUpdate('Just now');\n    }, refreshInterval);\n\n    return () => clearInterval(interval);\n  }, [refreshInterval, isAutoRefresh, realDataEnabled, widgets]);\n\n  const handleDataSourceToggle = sourceId => {\n    setDataSources(prev =>\n      prev.map(source =>\n        source.id === sourceId ? { ...source, enabled: !source.enabled } : source\n      )\n    );\n  };\n\n  const handleSymbolSelect = async(symbol) => {\n    try {\n      let marketData;\n      let source = 'Simulation';\n      let dataQuality = 75;\n\n      if (realDataEnabled) {\n        try {\n          marketData = await enhancedApiService.fetchRealTimeMarketData(symbol.symbol);\n          const normalized = normalizeQuote(marketData);\n          const validation = dataValidationService.validateData(normalized, 'marketData');\n          source = normalized.source;\n          dataQuality = validation.qualityScore;\n        } catch (error) {\n          console.warn(`Failed to fetch real data for ${symbol.symbol}, using simulation:`, error);\n          marketData = null;\n        }\n      }\n\n      const normalizedInitial = normalizeQuote(marketData || {}, {});\n      const newWidget = {\n        id: `widget-${Date.now()}`,\n        symbol: symbol.symbol,\n        name: symbol.name,\n        currentValue: normalizedInitial.currentPrice || Math.random() * 1000 + 50,\n        change: normalizedInitial.change || (Math.random() - 0.5) * 10,\n        changePercent: normalizedInitial.changePercent || (Math.random() - 0.5) * 5,\n        valueType: 'currency',\n        dayHigh: normalizedInitial.dayHigh || Math.random() * 1000 + 60,\n        dayLow: normalizedInitial.dayLow || Math.random() * 1000 + 40,\n        volume: normalizedInitial.volume || Math.floor(Math.random() * 100000000),\n        source,\n        dataQuality,\n        lastUpdate: new Date(),\n        sparklineData: Array.from({ length: 6 }, () =>\n          normalizedInitial.currentPrice || Math.random() * 1000 + 50\n        )\n      };\n\n      setWidgets(prev => [...prev, newWidget]);\n\n      // Subscribe to real-time updates for this symbol\n      if (realDataEnabled) {\n        realTimeDataService.subscribe('stock_price', symbol.symbol, (data) => {\n          setWidgets(prevWidgets =>\n            prevWidgets.map(widget => {\n              if (widget.symbol !== symbol.symbol) return widget;\n              const normalized = normalizeQuote({ ...data, symbol: widget.symbol, source: data.source || widget.source || 'SIM_FEED' }, widget);\n              return {\n                ...widget,\n                currentValue: normalized.currentPrice ?? widget.currentValue,\n                change: normalized.change ?? widget.change,\n                changePercent: normalized.changePercent ?? widget.changePercent,\n                lastUpdate: new Date(normalized.timestamp),\n                source: normalized.source,\n                sparklineData: [\n                  ...widget.sparklineData.slice(1),\n                  normalized.currentPrice ?? widget.currentValue\n                ]\n              };\n            })\n          );\n        });\n      }\n    } catch (error) {\n      console.error('Error adding symbol:', error);\n    }\n  };\n\n  const handleAddToWatchlist = symbol => {\n    if (!watchlist.some(item => item.symbol === symbol.symbol)) {\n      setWatchlist(prev => [\n        ...prev,\n        {\n          ...symbol,\n          price: Math.random() * 1000 + 50,\n          change: (Math.random() - 0.5) * 10,\n          changePercent: (Math.random() - 0.5) * 5\n        }\n      ]);\n    }\n  };\n\n  const handleRemoveFromWatchlist = symbol => {\n    setWatchlist(prev => prev.filter(item => item.symbol !== symbol));\n  };\n\n  const handleWidgetResize = widgetId => {\n    console.log('Resize widget:', widgetId);\n  };\n\n  const handleWidgetRemove = widgetId => {\n    setWidgets(prev => prev.filter(widget => widget.id !== widgetId));\n  };\n\n  const handleBulkExport = config => {\n    console.log('Bulk export:', config);\n    alert(`Exporting ${config.symbols.length} symbols in ${config.format.toUpperCase()} format`);\n  };\n\n  const handleBulkAlert = config => {\n    console.log('Bulk alert setup:', config);\n    alert(`Setting ${config.threshold}% alerts for ${config.symbols.length} symbols`);\n  };\n\n  const handleBulkHistorical = config => {\n    console.log('Bulk historical data:', config);\n    alert(`Fetching ${config.period} historical data for ${config.symbols.length} symbols`);\n  };\n\n  const handleRefresh = () => {\n    setLastUpdate('Just now');\n    // Trigger data refresh\n  };\n\n  const handleKeyboardShortcut = e => {\n    if (e.ctrlKey && e.key === 'f') {\n      e.preventDefault();\n      document.querySelector('input[placeholder*=\"Search symbols\"]')?.focus();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyboardShortcut);\n    return () => document.removeEventListener('keydown', handleKeyboardShortcut);\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n\n      <div className=\"pt-[60px]\">\n        {/* Top Toolbar */}\n        <div className=\"bg-card border-b border-border p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-6\">\n              <DataSourceToggle dataSources={dataSources} onToggle={handleDataSourceToggle} />\n\n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  iconName=\"RefreshCw\"\n                  onClick={handleRefresh}\n                  className={isAutoRefresh ? 'animate-spin' : ''}\n                >\n                  Refresh\n                </Button>\n                <Button\n                  variant={isAutoRefresh ? 'default' : 'outline'}\n                  size=\"sm\"\n                  iconName={isAutoRefresh ? 'Pause' : 'Play'}\n                  onClick={() => setIsAutoRefresh(!isAutoRefresh)}\n                >\n                  {isAutoRefresh ? 'Pause' : 'Resume'}\n                </Button>\n              </div>\n            </div>\n\n            <ConnectionStatus connectionHealth={connectionHealth} lastUpdate={lastUpdate} />\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"p-6\">\n          <div className=\"grid grid-cols-12 gap-6\">\n            {/* Left Sidebar */}\n            <div className=\"col-span-3 space-y-6\">\n              {/* Symbol Search */}\n              <div className=\"bg-card border border-border rounded-lg p-4 shadow-elevation-1\">\n                <h3 className=\"font-semibold text-foreground mb-4\">Add Symbols</h3>\n                <SymbolSearch\n                  onSymbolSelect={handleSymbolSelect}\n                  watchlist={watchlist}\n                  onAddToWatchlist={handleAddToWatchlist}\n                />\n                <div className=\"mt-3 text-xs text-muted-foreground\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Icon name=\"Keyboard\" size={12} />\n                    <span>Ctrl+F to focus search</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Watchlist */}\n              <WatchlistPanel\n                watchlist={watchlist}\n                onRemoveFromWatchlist={handleRemoveFromWatchlist}\n                onSelectSymbol={handleSymbolSelect}\n              />\n\n              {/* Bulk Operations */}\n              <BulkOperationsPanel\n                selectedSymbols={selectedSymbols}\n                onBulkExport={handleBulkExport}\n                onBulkAlert={handleBulkAlert}\n                onBulkHistorical={handleBulkHistorical}\n              />\n\n              {/* API Status & Data Quality */}\n              <ApiStatusPanel\n                apiHealthStatus={apiHealthStatus}\n                realDataEnabled={realDataEnabled}\n                dataSources={dataSources}\n                dataQuality={dataQuality}\n              />\n            </div>\n\n            {/* Main Data Grid */}\n            <div className=\"col-span-9\">\n              <div className=\"mb-4 flex items-center justify-between\">\n                <h2 className=\"text-xl font-semibold text-foreground\">\n                  Market Data Widgets ({widgets.length})\n                </h2>\n                <div className=\"flex items-center space-x-2\">\n                  <Button variant=\"outline\" size=\"sm\" iconName=\"Settings\">\n                    Layout\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" iconName=\"Save\">\n                    Save Dashboard\n                  </Button>\n                </div>\n              </div>\n\n              {/* Widgets Grid */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">\n                {widgets.map(widget => (\n                  <MarketDataWidget\n                    key={widget.id}\n                    widget={widget}\n                    onResize={handleWidgetResize}\n                    onRemove={handleWidgetRemove}\n                  />\n                ))}\n              </div>\n\n              {/* Empty State */}\n              {widgets.length === 0 && (\n                <div className=\"text-center py-12\">\n                  <Icon name=\"BarChart3\" size={48} className=\"mx-auto mb-4 text-muted-foreground\" />\n                  <h3 className=\"text-lg font-semibold text-foreground mb-2\">No Data Widgets</h3>\n                  <p className=\"text-muted-foreground mb-4\">\n                    Search and add symbols to start monitoring market data\n                  </p>\n                  <Button variant=\"outline\" iconName=\"Plus\">\n                    Add Your First Widget\n                  </Button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Status Bar */}\n        <div className=\"fixed bottom-0 left-0 right-0 bg-card border-t border-border p-2\">\n          <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n            <div className=\"flex items-center space-x-4\">\n              <span>Active Widgets: {widgets.length}</span>\n              <span>Watchlist: {watchlist.length}</span>\n              <span>Auto-refresh: {isAutoRefresh ? 'ON' : 'OFF'}</span>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <span>Market Hours: OPEN</span>\n              <span>Last Update: {lastUpdate}</span>\n              <div className=\"flex items-center space-x-1\">\n                <div className=\"w-2 h-2 bg-success rounded-full\" />\n                <span>All systems operational</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RealTimeMarketDataCenter;\n"],"names":["dataValidationService","constructor","this","validationRules","initializeValidationRules","qualityMetrics","Map","anomalyDetection","marketData","required","numeric","ranges","currentPrice","min","max","volume","changePercent","formats","symbol","timestamp","financialStatements","revenue","netIncome","companyProfile","pe","pb","beta","dcfModel","custom","data","errors","Array","isArray","cashFlows","length","push","discountRate","warnings","lboModel","debtFinancing","equityFinancing","purchasePrice","total","Math","abs","stockData","trim","price","validateData","dataType","rules","isValid","field","undefined","value","parseFloat","isNaN","range","pattern","Object","entries","test","businessValidation","validateBusinessLogic","customValidation","apiLogger","log","qualityScore","calculateQualityScore","previousClose","calculatedChange","calculatedChangePercent","change","toFixed","dayHigh","dayLow","netMargin","totalCurrentAssets","totalCurrentLiabilities","currentRatio","crossValidateData","dataSources","isConsistent","discrepancies","recommendedSource","source","numericFields","values","filter","map","mean","reduce","sum","item","maxDeviation","threshold","sourceQuality","validation","errorCount","warningCount","sort","a","b","detectAnomalies","timeSeries","point","v","val","variance","pow","stdDev","sqrt","anomalies","forEach","index","zScore","deviation","severity","getValidationSummary","Date","toISOString","completeness","calculateCompleteness","freshness","calculateFreshness","allFields","keys","uniqueFields","Set","dataTime","ageMinutes","sanitizeInput","input","String","replace","isInRange","isValidPercentage","isValidNumber","isFinite","isValidArray","isValidObject","validateFinancialRatios","ratios","debtToEquity","returnOnEquity","RateLimiter","requestsPerInterval","interval","requestTimestamps","acquire","now","timeToWait","Promise","resolve","setTimeout","enhancedApiService","rateLimiters","sourceHealth","lastRequests","cache","rateLimitInfo","remaining","reset","initializeSecureClient","initializeSourceHealth","set","client","secureApiClient","status","successRate","avgResponseTime","lastError","requestCount","lastHealthCheck","hasValidApiKey","_source","getBestSource","_dataType","requiresApiKey","includes","fetchRealTimeMarketData","_options","t0","getQuote","updateSourceHealth","error","message","fetchHistoricalMarketData","options","qs","URLSearchParams","toString","backendData","request","toUpperCase","result","backendError","yf","fetchFromYahooFinance","timestamps","quote","indicators","t","i","open","high","low","close","meta","yahooError","av","fetchFromAlphaVantage","series","toLowerCase","Error","date","parseInt","alphaError","fetchIntradayMarketData","params","find","k","startsWith","ts","url","includePrePost","events","fullUrl","URL","search","response","fetch","pathname","signal","AbortSignal","timeout","headers","ok","responseData","json","chart","functionName","config","apiConfigs","ALPHA_VANTAGE","baseURL","function","apikey","apiKeys","fetchComprehensiveData","results","promises","key","method","async","allSettled","sources","normalizeMarketData","rawData","normalizeYahooData","normalizeAlphaVantageData","latest","regularMarketPrice","regularMarketDayHigh","regularMarketDayLow","regularMarketVolume","marketCap","currency","exchangeName","regularMarketTime","globalQuote","success","responseTime","health","get","getSourceHealthStatus","getSourcesUsed","add","from","baseUrl","defaultHeaders","authToken","cacheTTL","requestInterceptors","responseInterceptors","metrics","totalRequests","successfulRequests","failedRequests","startTime","limiter","cacheKey","has","cached","Authorization","interceptor","controller","AbortController","timeoutId","abort","clearTimeout","errorData","text","setAuthToken","token","setCacheTTL","ttl","batchRequests","requests","req","reason","addRequestInterceptor","addResponseInterceptor","requestWithRetry","retries","delay","setBaseUrl","getBaseUrl","setDefaultHeaders","getDefaultHeaders","getTimeout","getMetrics","resetMetrics","getRateLimitInfo","clearCache","clear","normalizeQuote","raw","prevWidget","currentValue","ApiStatusPanel","apiHealthStatus","realDataEnabled","dataQuality","getStatusIcon","jsx","CheckCircle","className","XCircle","AlertTriangle","getStatusColor","connectedSources","totalSources","connectionPercentage","Card","children","CardHeader","jsxs","CardTitle","Wifi","CardContent","Badge","Progress","name","requiresKey","Key","title","variant","latency","id","quality","Alert","AlertDescription","BulkOperationsPanel","selectedSymbols","onBulkExport","onBulkAlert","onBulkHistorical","isExpanded","setIsExpanded","useState","exportFormat","setExportFormat","alertThreshold","setAlertThreshold","historicalPeriod","setHistoricalPeriod","type","onClick","onKeyDown","e","preventDefault","prev","Icon","size","color","slice","onChange","target","Button","iconName","symbols","format","Input","placeholder","disabled","period","ceil","ConnectionStatus","connectionHealth","lastUpdate","overall","DataSourceToggle","onToggle","enabled","MarketDataWidget","widget","onResize","onRemove","formatValue","toLocaleString","minimumFractionDigits","diffSeconds","getFreshnessColor","toLocaleTimeString","valueType","getChangeIcon","sparklineData","style","height","minHeight","SymbolSearch","onSymbolSelect","watchlist","onAddToWatchlist","searchTerm","setSearchTerm","suggestions","setSuggestions","isOpen","setIsOpen","selectedIndex","setSelectedIndex","searchRef","useRef","symbolDatabase","exchange","sector","useEffect","filtered","handleSymbolSelect","ref","role","tabIndex","some","stopPropagation","WatchlistPanel","onRemoveFromWatchlist","onSelectSymbol","sortBy","setSortBy","sortOrder","setSortOrder","sortedWatchlist","aValue","bValue","handleSort","RealTimeMarketDataCenter","useFinancialAccessibility","setDataSources","_setConnectionHealth","yahoo","alpha_vantage","fmp","sec_edgar","setRealDataEnabled","setApiHealthStatus","_setDataQuality","widgets","setWidgets","setWatchlist","_setSelectedSymbols","setLastUpdate","refreshInterval","_setRefreshInterval","isAutoRefresh","setIsAutoRefresh","base","healthStatus","prevSources","hasWorkingApi","initializeRealData","setInterval","updatedWidgets","all","normalized","random","prevWidgets","clearInterval","normalizedInitial","newWidget","floor","realTimeDataService","subscribe","handleWidgetResize","widgetId","handleWidgetRemove","handleKeyboardShortcut","ctrlKey","document","querySelector","focus","addEventListener","removeEventListener","Header","sourceId","alert"],"mappings":"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"}