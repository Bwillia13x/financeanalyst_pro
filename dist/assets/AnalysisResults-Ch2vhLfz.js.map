{"version":3,"file":"AnalysisResults-Ch2vhLfz.js","sources":["../../src/components/PrivateAnalysis/AnalysisResults.jsx"],"sourcesContent":["import {\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  Percent,\n  Activity,\n  AlertTriangle,\n  CheckCircle,\n  BarChart3,\n  Target,\n  PieChart,\n  Zap,\n  Shield,\n  Award,\n  Eye,\n  Timer,\n  Gauge,\n  CreditCard,\n  Users\n} from 'lucide-react';\nimport React, { useMemo } from 'react';\n\nconst AnalysisResults = ({\n  data,\n  adjustedValues,\n  modelInputs: _modelInputs,\n  calculateDCF,\n  formatCurrency,\n  formatPercentage: _formatPercentage\n}) => {\n  // Calculate comprehensive financial metrics\n  const analysis = useMemo(() => {\n    try {\n      if (!data?.statements?.incomeStatement) return null;\n\n      const income = data.statements.incomeStatement;\n      const periods = Object.keys(income.totalRevenue || {}).sort((a, b) => parseInt(a) - parseInt(b));\n\n      if (periods.length < 2) return null;\n\n      const latest = periods[periods.length - 1];\n      const previous = periods[periods.length - 2];\n      const earliest = periods[0];\n\n      // Financial Performance Analysis - Use adjusted values for latest period when available\n      const revenueLatest = adjustedValues?.totalRevenue || income.totalRevenue?.[latest] || 0;\n      const revenuePrevious = income.totalRevenue?.[previous] || 0;\n      const revenueEarliest = income.totalRevenue?.[earliest] || 0;\n\n      const grossProfitLatest = adjustedValues?.grossProfit || income.grossProfit?.[latest] || 0;\n      const grossProfitPrevious = income.grossProfit?.[previous] || 0;\n\n      const operatingIncomeLatest = adjustedValues?.operatingIncome || income.operatingIncome?.[latest] || 0;\n      const operatingIncomePrevious = income.operatingIncome?.[previous] || 0;\n\n      const _totalCOGSLatest = adjustedValues?.totalCostOfGoodsSold || income.totalCostOfGoodsSold?.[latest] || 0;\n      const _totalCOGSPrevious = income.totalCostOfGoodsSold?.[previous] || 0;\n\n      // Growth Calculations\n      const revenueGrowthYoY = revenuePrevious ? ((revenueLatest - revenuePrevious) / revenuePrevious) * 100 : 0;\n      const revenueCAGR = revenueEarliest && periods.length > 2 ?\n        (Math.pow(revenueLatest / revenueEarliest, 1 / (periods.length - 1)) - 1) * 100 : 0;\n\n      const _grossProfitGrowth = grossProfitPrevious ? ((grossProfitLatest - grossProfitPrevious) / grossProfitPrevious) * 100 : 0;\n      const operatingIncomeGrowth = operatingIncomePrevious ? ((operatingIncomeLatest - operatingIncomePrevious) / operatingIncomePrevious) * 100 : 0;\n\n      // Profitability Ratios (with safe calculations)\n      const grossMarginLatest = (revenueLatest && revenueLatest !== 0) ? (grossProfitLatest / revenueLatest) * 100 : 0;\n      const grossMarginPrevious = (revenuePrevious && revenuePrevious !== 0) ? (grossProfitPrevious / revenuePrevious) * 100 : 0;\n      const operatingMarginLatest = (revenueLatest && revenueLatest !== 0) ? (operatingIncomeLatest / revenueLatest) * 100 : 0;\n      const operatingMarginPrevious = (revenuePrevious && revenuePrevious !== 0) ? (operatingIncomePrevious / revenuePrevious) * 100 : 0;\n\n      const marginImprovement = isFinite(grossMarginLatest) && isFinite(grossMarginPrevious) ? grossMarginLatest - grossMarginPrevious : 0;\n      const operatingMarginChange = isFinite(operatingMarginLatest) && isFinite(operatingMarginPrevious) ? operatingMarginLatest - operatingMarginPrevious : 0;\n\n      // DCF Analysis\n      let dcfResults = null;\n      if (calculateDCF) {\n        try {\n          dcfResults = calculateDCF(data);\n        } catch (error) {\n          console.error('DCF calculation error:', error);\n        }\n      }\n\n      // Business Unit Analysis (Revenue Breakdown) - with safe value access\n      const revenueBreakdown = [\n        { name: 'Energy Devices', value: Number(income.energyDevices?.[latest]) || 0 },\n        { name: 'Injectables', value: Number(income.injectables?.[latest]) || 0 },\n        { name: 'Wellness', value: Number(income.wellness?.[latest]) || 0 },\n        { name: 'Weightloss', value: Number(income.weightloss?.[latest]) || 0 },\n        { name: 'Retail Sales', value: Number(income.retailSales?.[latest]) || 0 },\n        { name: 'Surgery', value: Number(income.surgery?.[latest]) || 0 }\n      ].filter(item => item.value > 0 && isFinite(item.value));\n\n      // Advanced Financial Ratios and Metrics\n      const totalAssets = income.totalAssets?.[latest] || revenueLatest * 1.2; // Estimate if not provided\n      const totalEquity = income.totalEquity?.[latest] || totalAssets * 0.6; // Estimate if not provided\n      const totalDebt = income.totalDebt?.[latest] || totalAssets * 0.3; // Estimate if not provided\n      const currentAssets = income.currentAssets?.[latest] || totalAssets * 0.4; // Estimate if not provided\n      const currentLiabilities = income.currentLiabilities?.[latest] || totalAssets * 0.2; // Estimate if not provided\n      const inventory = income.inventory?.[latest] || revenueLatest * 0.15; // Estimate if not provided\n      const accountsReceivable = income.accountsReceivable?.[latest] || revenueLatest * 0.1; // Estimate if not provided\n      const cashAndEquivalents = income.cashAndEquivalents?.[latest] || totalAssets * 0.1; // Estimate if not provided\n\n      // Advanced Ratios\n      const returnOnAssets = (totalAssets && totalAssets !== 0) ? (operatingIncomeLatest / totalAssets) * 100 : 0;\n      const returnOnEquity = (totalEquity && totalEquity !== 0) ? (operatingIncomeLatest / totalEquity) * 100 : 0;\n      const debtToEquity = (totalEquity && totalEquity !== 0) ? totalDebt / totalEquity : 0;\n      const currentRatio = (currentLiabilities && currentLiabilities !== 0) ? currentAssets / currentLiabilities : 0;\n      const quickRatio = (currentLiabilities && currentLiabilities !== 0) ? (currentAssets - inventory) / currentLiabilities : 0;\n      const assetTurnover = (totalAssets && totalAssets !== 0) ? revenueLatest / totalAssets : 0;\n      const inventoryTurnover = (inventory && inventory !== 0) ? (revenueLatest * 0.7) / inventory : 0; // Assuming COGS is 70% of revenue\n      const receivablesTurnover = (accountsReceivable && accountsReceivable !== 0) ? revenueLatest / accountsReceivable : 0;\n      const cashRatio = (currentLiabilities && currentLiabilities !== 0) ? cashAndEquivalents / currentLiabilities : 0;\n      const workingCapital = currentAssets - currentLiabilities;\n      const workingCapitalRatio = (revenueLatest && revenueLatest !== 0) ? workingCapital / revenueLatest : 0;\n\n      // Efficiency Metrics\n      const operatingCycle = inventoryTurnover > 0 && receivablesTurnover > 0 ? (365 / inventoryTurnover) + (365 / receivablesTurnover) : 0;\n      const cashConversionCycle = operatingCycle > 0 ? operatingCycle - 30 : 0; // Assuming 30 days payable period\n\n      // Growth Quality Metrics\n      const operatingLeverage = grossProfitPrevious !== 0 ? (operatingIncomeGrowth / revenueGrowthYoY) : 0;\n      const profitabilityTrend = (operatingMarginLatest - operatingMarginPrevious) * 100;\n\n      // Risk Metrics\n      const financialLeverage = (totalEquity && totalEquity !== 0) ? totalAssets / totalEquity : 0;\n      const interestCoverage = income.interestExpense?.[latest] ? operatingIncomeLatest / income.interestExpense[latest] : 0;\n      const debtServiceCoverage = income.debtService?.[latest] ? operatingIncomeLatest / income.debtService[latest] : 0;\n\n      // Market & Valuation Metrics (estimated)\n      const revenuePerEmployee = income.employeeCount?.[latest] ? revenueLatest / income.employeeCount[latest] : 0;\n      const revenuePerShare = income.sharesOutstanding?.[latest] ? revenueLatest / income.sharesOutstanding[latest] : 0;\n      const bookValuePerShare = income.sharesOutstanding?.[latest] && totalEquity ? totalEquity / income.sharesOutstanding[latest] : 0;\n\n      // Industry Benchmarks (Healthcare/Medical Device estimates)\n      const industryBenchmarks = {\n        grossMargin: 65,\n        operatingMargin: 18,\n        returnOnAssets: 8,\n        returnOnEquity: 15,\n        currentRatio: 2.5,\n        debtToEquity: 0.4,\n        assetTurnover: 0.8,\n        revenueGrowth: 8\n      };\n\n      // Performance vs Benchmarks\n      const benchmarkComparison = {\n        grossMargin: grossMarginLatest - industryBenchmarks.grossMargin,\n        operatingMargin: operatingMarginLatest - industryBenchmarks.operatingMargin,\n        returnOnAssets: returnOnAssets - industryBenchmarks.returnOnAssets,\n        returnOnEquity: returnOnEquity - industryBenchmarks.returnOnEquity,\n        currentRatio: currentRatio - industryBenchmarks.currentRatio,\n        debtToEquity: industryBenchmarks.debtToEquity - debtToEquity, // Lower is better\n        assetTurnover: assetTurnover - industryBenchmarks.assetTurnover,\n        revenueGrowth: revenueGrowthYoY - industryBenchmarks.revenueGrowth\n      };\n\n      // Comprehensive KPI Suite\n      const kpis = [\n        {\n          title: 'Revenue Growth',\n          value: `${revenueGrowthYoY > 0 ? '+' : ''}${isFinite(revenueGrowthYoY) ? revenueGrowthYoY.toFixed(1) : '0.0'}%`,\n          trend: revenueGrowthYoY > 0 ? 'up' : 'down',\n          description: 'Year-over-year revenue growth rate',\n          icon: TrendingUp,\n          benchmark: industryBenchmarks.revenueGrowth,\n          performance: benchmarkComparison.revenueGrowth\n        },\n        {\n          title: 'Gross Margin',\n          value: `${isFinite(grossMarginLatest) ? grossMarginLatest.toFixed(1) : '0.0'}%`,\n          trend: marginImprovement > 0 ? 'up' : 'down',\n          description: `${marginImprovement > 0 ? '+' : ''}${isFinite(marginImprovement) ? marginImprovement.toFixed(1) : '0.0'}% vs prior year`,\n          icon: Percent,\n          benchmark: industryBenchmarks.grossMargin,\n          performance: benchmarkComparison.grossMargin\n        },\n        {\n          title: 'Operating Margin',\n          value: `${isFinite(operatingMarginLatest) ? operatingMarginLatest.toFixed(1) : '0.0'}%`,\n          trend: operatingMarginChange > 0 ? 'up' : 'down',\n          description: `${operatingMarginChange > 0 ? '+' : ''}${isFinite(operatingMarginChange) ? operatingMarginChange.toFixed(1) : '0.0'}% vs prior year`,\n          icon: BarChart3,\n          benchmark: industryBenchmarks.operatingMargin,\n          performance: benchmarkComparison.operatingMargin\n        },\n        {\n          title: 'Return on Assets',\n          value: `${isFinite(returnOnAssets) ? returnOnAssets.toFixed(1) : '0.0'}%`,\n          trend: returnOnAssets > industryBenchmarks.returnOnAssets ? 'up' : 'down',\n          description: 'Asset utilization efficiency',\n          icon: Target,\n          benchmark: industryBenchmarks.returnOnAssets,\n          performance: benchmarkComparison.returnOnAssets\n        },\n        {\n          title: 'Return on Equity',\n          value: `${isFinite(returnOnEquity) ? returnOnEquity.toFixed(1) : '0.0'}%`,\n          trend: returnOnEquity > industryBenchmarks.returnOnEquity ? 'up' : 'down',\n          description: 'Shareholder value generation',\n          icon: Award,\n          benchmark: industryBenchmarks.returnOnEquity,\n          performance: benchmarkComparison.returnOnEquity\n        },\n        {\n          title: 'Current Ratio',\n          value: `${isFinite(currentRatio) ? currentRatio.toFixed(1) : '0.0'}x`,\n          trend: currentRatio > 2.0 ? 'up' : currentRatio > 1.5 ? 'neutral' : 'down',\n          description: 'Short-term liquidity strength',\n          icon: Shield,\n          benchmark: industryBenchmarks.currentRatio,\n          performance: benchmarkComparison.currentRatio\n        },\n        {\n          title: 'Asset Turnover',\n          value: `${isFinite(assetTurnover) ? assetTurnover.toFixed(1) : '0.0'}x`,\n          trend: assetTurnover > industryBenchmarks.assetTurnover ? 'up' : 'down',\n          description: 'Revenue per dollar of assets',\n          icon: Zap,\n          benchmark: industryBenchmarks.assetTurnover,\n          performance: benchmarkComparison.assetTurnover\n        },\n        {\n          title: 'Debt-to-Equity',\n          value: `${isFinite(debtToEquity) ? debtToEquity.toFixed(1) : '0.0'}x`,\n          trend: debtToEquity < industryBenchmarks.debtToEquity ? 'up' : 'down',\n          description: 'Financial leverage position',\n          icon: CreditCard,\n          benchmark: industryBenchmarks.debtToEquity,\n          performance: benchmarkComparison.debtToEquity\n        }\n      ];\n\n      // Liquidity Analysis\n      const liquidityMetrics = [\n        {\n          name: 'Current Ratio',\n          value: currentRatio,\n          formatted: `${currentRatio.toFixed(2)}x`,\n          benchmark: 2.5,\n          status: currentRatio >= 2.5 ? 'excellent' : currentRatio >= 2.0 ? 'good' : currentRatio >= 1.5 ? 'fair' : 'poor'\n        },\n        {\n          name: 'Quick Ratio',\n          value: quickRatio,\n          formatted: `${quickRatio.toFixed(2)}x`,\n          benchmark: 1.5,\n          status: quickRatio >= 1.5 ? 'excellent' : quickRatio >= 1.0 ? 'good' : quickRatio >= 0.8 ? 'fair' : 'poor'\n        },\n        {\n          name: 'Cash Ratio',\n          value: cashRatio,\n          formatted: `${cashRatio.toFixed(2)}x`,\n          benchmark: 0.5,\n          status: cashRatio >= 0.5 ? 'excellent' : cashRatio >= 0.3 ? 'good' : cashRatio >= 0.2 ? 'fair' : 'poor'\n        },\n        {\n          name: 'Working Capital',\n          value: workingCapital,\n          formatted: formatCurrency(workingCapital),\n          benchmark: revenueLatest * 0.15,\n          status: workingCapital >= revenueLatest * 0.15 ? 'excellent' : workingCapital >= 0 ? 'good' : 'poor'\n        }\n      ];\n\n      // Efficiency Analysis\n      const efficiencyMetrics = [\n        {\n          name: 'Asset Turnover',\n          value: assetTurnover,\n          formatted: `${assetTurnover.toFixed(2)}x`,\n          description: 'Revenue generation per asset dollar'\n        },\n        {\n          name: 'Inventory Turnover',\n          value: inventoryTurnover,\n          formatted: `${inventoryTurnover.toFixed(1)}x`,\n          description: 'Inventory management efficiency'\n        },\n        {\n          name: 'Receivables Turnover',\n          value: receivablesTurnover,\n          formatted: `${receivablesTurnover.toFixed(1)}x`,\n          description: 'Collection efficiency'\n        },\n        {\n          name: 'Operating Cycle',\n          value: operatingCycle,\n          formatted: `${operatingCycle.toFixed(0)} days`,\n          description: 'Cash-to-cash cycle duration'\n        }\n      ];\n\n      // Risk Assessment\n      const riskMetrics = [\n        {\n          name: 'Financial Leverage',\n          value: financialLeverage,\n          formatted: `${financialLeverage.toFixed(1)}x`,\n          level: financialLeverage < 2 ? 'low' : financialLeverage < 3 ? 'moderate' : 'high'\n        },\n        {\n          name: 'Debt-to-Equity',\n          value: debtToEquity,\n          formatted: `${debtToEquity.toFixed(2)}x`,\n          level: debtToEquity < 0.3 ? 'low' : debtToEquity < 0.6 ? 'moderate' : 'high'\n        },\n        {\n          name: 'Interest Coverage',\n          value: interestCoverage,\n          formatted: `${interestCoverage.toFixed(1)}x`,\n          level: interestCoverage > 10 ? 'low' : interestCoverage > 5 ? 'moderate' : 'high'\n        }\n      ];\n\n      return {\n        periods,\n        latest,\n        previous,\n        revenue: {\n          latest: revenueLatest,\n          previous: revenuePrevious,\n          growth: revenueGrowthYoY,\n          cagr: revenueCAGR\n        },\n        profitability: {\n          grossMargin: grossMarginLatest,\n          grossMarginChange: marginImprovement,\n          operatingMargin: operatingMarginLatest,\n          operatingMarginChange,\n          operatingLeverage,\n          profitabilityTrend\n        },\n        financial: {\n          returnOnAssets,\n          returnOnEquity,\n          assetTurnover,\n          totalAssets,\n          totalEquity,\n          totalDebt,\n          workingCapital,\n          workingCapitalRatio\n        },\n        liquidity: {\n          currentRatio,\n          quickRatio,\n          cashRatio,\n          cashAndEquivalents,\n          currentAssets,\n          currentLiabilities\n        },\n        efficiency: {\n          inventoryTurnover,\n          receivablesTurnover,\n          operatingCycle,\n          cashConversionCycle\n        },\n        risk: {\n          debtToEquity,\n          financialLeverage,\n          interestCoverage,\n          debtServiceCoverage\n        },\n        market: {\n          revenuePerEmployee,\n          revenuePerShare,\n          bookValuePerShare\n        },\n        benchmarks: {\n          industry: industryBenchmarks,\n          comparison: benchmarkComparison\n        },\n        dcf: dcfResults,\n        revenueBreakdown,\n        kpis,\n        liquidityMetrics,\n        efficiencyMetrics,\n        riskMetrics\n      };\n    } catch (error) {\n      console.error('Error in AnalysisResults analysis calculation:', error);\n      return null;\n    }\n  }, [data, calculateDCF]);\n\n  if (!analysis) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <AlertTriangle className=\"mx-auto h-12 w-12 text-yellow-400 mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Insufficient Data</h3>\n          <p className=\"text-gray-500\">Please ensure financial data is loaded to generate analysis results.</p>\n        </div>\n      </div>\n    );\n  }\n\n  const MetricCard = ({ title, value, trend, description, icon: Icon, benchmark, performance }) => (\n    <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700 hover:border-gray-600 transition-all duration-200\">\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex items-center gap-3\">\n          <div\n            className={`p-2 rounded-lg ${\n              trend === 'up' ? 'bg-green-900/30 text-green-400' :\n                trend === 'down' ? 'bg-red-900/30 text-red-400' :\n                  'bg-gray-700 text-gray-400'\n            }`}\n          >\n            <Icon className=\"h-5 w-5\" />\n          </div>\n          <div>\n            <div className=\"text-sm font-medium text-gray-300\">{title}</div>\n            <div className=\"text-xs text-gray-500 mt-1\">{description}</div>\n          </div>\n        </div>\n        {trend === 'up' && <TrendingUp className=\"h-5 w-5 text-green-400 flex-shrink-0\" />}\n        {trend === 'down' && <TrendingDown className=\"h-5 w-5 text-red-400 flex-shrink-0\" />}\n      </div>\n      <div className=\"text-3xl font-bold text-white mb-2\">{value}</div>\n      {benchmark && (\n        <div className=\"border-t border-gray-700 pt-3 mt-3\">\n          <div className=\"flex justify-between text-xs\">\n            <span className=\"text-gray-400\">Industry Avg:</span>\n            <span className=\"text-gray-300\">{typeof benchmark === 'number' ? benchmark.toFixed(1) + (title.includes('%') ? '%' : title.includes('x') ? 'x' : '') : benchmark}</span>\n          </div>\n          <div className=\"flex justify-between text-xs mt-1\">\n            <span className=\"text-gray-400\">vs Industry:</span>\n            <span\n              className={`font-medium ${\n                performance > 0 ? 'text-green-400' : performance < 0 ? 'text-red-400' : 'text-gray-300'\n              }`}\n            >\n              {performance > 0 ? '+' : ''}{performance?.toFixed(1) || '0.0'}\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-6 p-6 bg-gray-900 text-white h-full\">\n      {/* Header */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h2 className=\"text-2xl font-bold text-white mb-6 flex items-center\">\n          <BarChart3 className=\"h-6 w-6 text-blue-400 mr-3\" />\n          Financial Analysis Results\n        </h2>\n        <p className=\"text-gray-400\">\n          Comprehensive analysis of your company&#39;s financial performance and valuation\n        </p>\n      </div>\n\n      {/* Key Performance Indicators */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {analysis.kpis.map((kpi, index) => (\n          <MetricCard key={index} {...kpi} />\n        ))}\n      </div>\n\n      {/* Advanced Financial Analysis Tabs */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 overflow-hidden\">\n        <div className=\"flex border-b border-gray-700\">\n          <button className=\"px-6 py-3 text-sm font-medium text-white bg-blue-600 border-r border-gray-700\">\n            Liquidity Analysis\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white border-r border-gray-700\">\n            Efficiency Metrics\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white border-r border-gray-700\">\n            Risk Assessment\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white\">\n            Benchmarking\n          </button>\n        </div>\n\n        {/* Liquidity Analysis Panel */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center mb-4\">\n            <Shield className=\"h-5 w-5 text-blue-400 mr-2\" />\n            <h3 className=\"text-lg font-semibold text-white\">Liquidity Position Analysis</h3>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {analysis.liquidityMetrics.map((metric, index) => (\n              <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium text-gray-200\">{metric.name}</span>\n                  <span\n                    className={`px-2 py-1 rounded text-xs font-medium ${\n                      metric.status === 'excellent' ? 'bg-green-900/30 text-green-400' :\n                        metric.status === 'good' ? 'bg-blue-900/30 text-blue-400' :\n                          metric.status === 'fair' ? 'bg-yellow-900/30 text-yellow-400' :\n                            'bg-red-900/30 text-red-400'\n                    }`}\n                  >\n                    {metric.status}\n                  </span>\n                </div>\n                <div className=\"text-xl font-bold text-white mb-1\">{metric.formatted}</div>\n                <div className=\"text-xs text-gray-400\">\n                  Benchmark: {typeof metric.benchmark === 'number' ? metric.benchmark.toFixed(1) + 'x' : formatCurrency(metric.benchmark)}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"mt-6 p-4 bg-gray-750 rounded-lg border border-gray-600\">\n            <h4 className=\"font-medium text-gray-200 mb-3 flex items-center\">\n              <Eye className=\"h-4 w-4 text-blue-400 mr-2\" />\n              Liquidity Analysis Summary\n            </h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-400\">Working Capital:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.financial.workingCapital)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Cash Position:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.cashAndEquivalents)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Current Assets:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.currentAssets)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Current Liabilities:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.currentLiabilities)}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Efficiency & Operations Analysis */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <div className=\"flex items-center mb-6\">\n          <Zap className=\"h-5 w-5 text-orange-400 mr-2\" />\n          <h3 className=\"text-lg font-semibold text-white\">Operational Efficiency Metrics</h3>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {analysis.efficiencyMetrics.map((metric, index) => (\n            <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n              <div className=\"text-sm font-medium text-gray-200 mb-2\">{metric.name}</div>\n              <div className=\"text-xl font-bold text-white mb-1\">{metric.formatted}</div>\n              <div className=\"text-xs text-gray-400\">{metric.description}</div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Timer className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Cash Conversion</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">{analysis.efficiency.cashConversionCycle.toFixed(0)} days</div>\n            <div className=\"text-xs text-gray-400\">Time to convert inventory to cash</div>\n          </div>\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Gauge className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Asset Productivity</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">{analysis.financial.assetTurnover.toFixed(2)}x</div>\n            <div className=\"text-xs text-gray-400\">Revenue per dollar of assets</div>\n          </div>\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Users className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Revenue/Employee</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">\n              {analysis.market.revenuePerEmployee > 0 ? formatCurrency(analysis.market.revenuePerEmployee) : 'N/A'}\n            </div>\n            <div className=\"text-xs text-gray-400\">Productivity per employee</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Risk Assessment Dashboard */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <div className=\"flex items-center mb-6\">\n          <AlertTriangle className=\"h-5 w-5 text-red-400 mr-2\" />\n          <h3 className=\"text-lg font-semibold text-white\">Financial Risk Assessment</h3>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {analysis.riskMetrics.map((metric, index) => (\n            <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-sm font-medium text-gray-200\">{metric.name}</span>\n                <span\n                  className={`px-2 py-1 rounded text-xs font-medium ${\n                    metric.level === 'low' ? 'bg-green-900/30 text-green-400' :\n                      metric.level === 'moderate' ? 'bg-yellow-900/30 text-yellow-400' :\n                        'bg-red-900/30 text-red-400'\n                  }`}\n                >\n                  {metric.level} risk\n                </span>\n              </div>\n              <div className=\"text-xl font-bold text-white\">{metric.formatted}</div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-6 p-4 bg-gray-750 rounded-lg border border-gray-600\">\n          <h4 className=\"font-medium text-gray-200 mb-3 flex items-center\">\n            <Shield className=\"h-4 w-4 text-red-400 mr-2\" />\n            Risk Analysis Summary\n          </h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-400\">Financial Leverage:</span>\n              <span\n                className={`ml-2 font-medium ${\n                  analysis.risk.financialLeverage < 2 ? 'text-green-400' :\n                    analysis.risk.financialLeverage < 3 ? 'text-yellow-400' : 'text-red-400'\n                }`}\n              >\n                {analysis.risk.financialLeverage.toFixed(1)}x\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Interest Coverage:</span>\n              <span\n                className={`ml-2 font-medium ${\n                  analysis.risk.interestCoverage > 10 ? 'text-green-400' :\n                    analysis.risk.interestCoverage > 5 ? 'text-yellow-400' : 'text-red-400'\n                }`}\n              >\n                {analysis.risk.interestCoverage.toFixed(1)}x\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Financial Performance Summary */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Financial Performance Trends */}\n        <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n          <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n            <Activity className=\"h-5 w-5 text-purple-400 mr-2\" />\n            Performance Trends\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h4 className=\"font-medium text-gray-200 mb-3\">Revenue Analysis</h4>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Latest Period:</span>\n                  <span className=\"font-semibold text-white\">{formatCurrency(analysis.revenue.latest)}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">YoY Growth:</span>\n                  <span\n                    className={`font-semibold ${\n                      analysis.revenue.growth > 0 ? 'text-green-400' : 'text-red-400'\n                    }`}\n                  >\n                    {analysis.revenue.growth > 0 ? '+' : ''}{analysis.revenue.growth.toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">CAGR:</span>\n                  <span className=\"font-semibold text-gray-200\">{analysis.revenue.cagr.toFixed(1)}%</span>\n                </div>\n              </div>\n            </div>\n            <div>\n              <h4 className=\"font-medium text-gray-200 mb-3\">Profitability Margins</h4>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Gross Margin:</span>\n                  <span className=\"font-semibold text-white\">{analysis.profitability.grossMargin.toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Operating Margin:</span>\n                  <span className=\"font-semibold text-white\">{analysis.profitability.operatingMargin.toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Margin Change:</span>\n                  <span\n                    className={`font-semibold ${\n                      analysis.profitability.grossMarginChange > 0 ? 'text-green-400' : 'text-red-400'\n                    }`}\n                  >\n                    {analysis.profitability.grossMarginChange > 0 ? '+' : ''}{analysis.profitability.grossMarginChange.toFixed(1)}pp\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Valuation Summary */}\n        {analysis.dcf && (\n          <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n            <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n              <DollarSign className=\"h-5 w-5 text-green-400 mr-2\" />\n              DCF Valuation Summary\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"text-center p-4 bg-green-900/30 border border-green-700 rounded-lg\">\n                <div className=\"text-2xl font-bold text-green-400\">\n                  {formatCurrency(analysis.dcf.enterpriseValue)}\n                </div>\n                <div className=\"text-sm text-green-300\">Enterprise Value</div>\n              </div>\n              <div className=\"text-center p-4 bg-blue-900/30 border border-blue-700 rounded-lg\">\n                <div className=\"text-2xl font-bold text-blue-400\">\n                  {formatCurrency(analysis.dcf.sharePrice)}\n                </div>\n                <div className=\"text-sm text-blue-300\">Price per Share</div>\n              </div>\n              <div className=\"text-center p-4 bg-gray-700 border border-gray-600 rounded-lg\">\n                <div className=\"text-2xl font-bold text-gray-300\">\n                  {formatCurrency(analysis.dcf.terminalValue)}\n                </div>\n                <div className=\"text-sm text-gray-400\">Terminal Value</div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Revenue Breakdown */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n          <PieChart className=\"h-5 w-5 text-orange-400 mr-2\" />\n          Business Unit Performance\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {analysis.revenueBreakdown.map((unit, index) => {\n            const percentage = analysis.revenue.latest ? (unit.value / analysis.revenue.latest) * 100 : 0;\n            return (\n              <div key={index} className=\"p-4 bg-gray-700 border border-gray-600 rounded-lg\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"font-medium text-gray-200\">{unit.name}</span>\n                  <span className=\"text-sm text-gray-400\">{percentage.toFixed(1)}%</span>\n                </div>\n                <div className=\"text-lg font-semibold text-white mb-1\">\n                  {formatCurrency(unit.value)}\n                </div>\n                <div className=\"w-full bg-gray-600 rounded-full h-2\">\n                  <div\n                    className=\"bg-blue-500 h-2 rounded-full\"\n                    style={{ width: `${Math.min(percentage, 100)}%` }}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Key Insights */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n          <CheckCircle className=\"h-5 w-5 text-green-400 mr-2\" />\n          Key Financial Insights\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <h4 className=\"font-medium text-gray-200 mb-2\">Strengths</h4>\n            <ul className=\"space-y-1 text-sm text-gray-400\">\n              {analysis.revenue.growth > 0 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Positive revenue growth trajectory\n                </li>\n              )}\n              {analysis.profitability.grossMargin > 60 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Strong gross margin above 60%\n                </li>\n              )}\n              {analysis.profitability.grossMarginChange > 0 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Improving profitability margins\n                </li>\n              )}\n              <li className=\"flex items-center\">\n                <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                Diversified healthcare revenue streams\n              </li>\n            </ul>\n          </div>\n          <div>\n            <h4 className=\"font-medium text-gray-200 mb-2\">Areas for Focus</h4>\n            <ul className=\"space-y-1 text-sm text-gray-400\">\n              {analysis.revenue.growth < 5 && (\n                <li className=\"flex items-center\">\n                  <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                  Revenue growth below industry benchmarks\n                </li>\n              )}\n              {analysis.profitability.operatingMargin < 20 && (\n                <li className=\"flex items-center\">\n                  <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                  Operating margin optimization opportunities\n                </li>\n              )}\n              <li className=\"flex items-center\">\n                <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                Monitor competitive positioning in key segments\n              </li>\n              <li className=\"flex items-center\">\n                <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                Consider strategic initiatives for growth acceleration\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnalysisResults;\n"],"names":["AnalysisResults","data","adjustedValues","modelInputs","_modelInputs","calculateDCF","formatCurrency","formatPercentage","_formatPercentage","analysis","useMemo","statements","incomeStatement","income","periods","Object","keys","totalRevenue","sort","a","b","parseInt","length","latest","previous","earliest","revenueLatest","revenuePrevious","revenueEarliest","grossProfitLatest","grossProfit","grossProfitPrevious","operatingIncomeLatest","operatingIncome","operatingIncomePrevious","revenueGrowthYoY","totalCostOfGoodsSold","revenueCAGR","Math","pow","operatingIncomeGrowth","grossMarginLatest","grossMarginPrevious","operatingMarginLatest","operatingMarginPrevious","marginImprovement","isFinite","operatingMarginChange","dcfResults","error","revenueBreakdown","name","value","Number","energyDevices","injectables","wellness","weightloss","retailSales","surgery","filter","item","totalAssets","totalEquity","totalDebt","currentAssets","currentLiabilities","inventory","accountsReceivable","cashAndEquivalents","returnOnAssets","returnOnEquity","debtToEquity","currentRatio","quickRatio","assetTurnover","inventoryTurnover","receivablesTurnover","cashRatio","workingCapital","workingCapitalRatio","operatingCycle","cashConversionCycle","operatingLeverage","profitabilityTrend","financialLeverage","interestCoverage","interestExpense","debtServiceCoverage","debtService","revenuePerEmployee","employeeCount","revenuePerShare","sharesOutstanding","bookValuePerShare","industryBenchmarks","grossMargin","operatingMargin","revenueGrowth","benchmarkComparison","kpis","title","toFixed","trend","description","icon","TrendingUp","benchmark","performance","Percent","BarChart3","Target","Award","Shield","Zap","CreditCard","liquidityMetrics","formatted","status","efficiencyMetrics","riskMetrics","level","revenue","growth","cagr","profitability","grossMarginChange","financial","liquidity","efficiency","risk","market","benchmarks","industry","comparison","dcf","className","children","jsxs","jsx","AlertTriangle","MetricCard","Icon","TrendingDown","includes","map","kpi","index","metric","Eye","Timer","Gauge","Users","Activity","DollarSign","enterpriseValue","sharePrice","terminalValue","PieChart","unit","percentage","style","width","min","CheckCircle"],"mappings":"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"}