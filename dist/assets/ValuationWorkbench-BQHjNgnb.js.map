{"version":3,"file":"ValuationWorkbench-BQHjNgnb.js","sources":["../../src/components/ValuationWorkbench/AssumptionsPanel.jsx","../../src/components/ValuationWorkbench/AxisPicker.jsx","../../src/utils/valuationUtils.js","../../src/components/ValuationWorkbench/ErrorHandler.jsx","../../src/components/ValuationWorkbench/MonteCarloAnalysis.jsx","../../src/components/ValuationWorkbench/ProjectionsTable.jsx","../../src/components/ValuationWorkbench/ReverseDCF.jsx","../../src/components/ValuationWorkbench/ScenarioLibrary.jsx","../../src/components/ValuationWorkbench/SensitivityAnalysis.jsx","../../src/components/ValuationWorkbench/TestsPanel.jsx","../../src/components/ValuationWorkbench/TornadoChart.jsx","../../src/components/ValuationWorkbench/ValuationSummary.jsx","../../src/pages/ValuationWorkbench.jsx"],"sourcesContent":["import { Card, Pill, NumberInput, Switch } from 'src/components/ui/UIHelpers.jsx';\n\nconst AssumptionsPanel = ({ assumptions, setAssumptions }) => {\n  const set = (key) => (value) => setAssumptions({ ...assumptions, [key]: value });\n\n  return (\n    <Card title=\"Assumptions\" right={<Pill tone=\"blue\">{assumptions.currency}</Pill>}>\n      <div className=\"grid grid-cols-12 gap-4\">\n        {/* Business Fundamentals */}\n        <div className=\"col-span-12\">\n          <div className=\"grid grid-cols-2 gap-3\">\n            <NumberInput\n              label=\"Shares\"\n              value={assumptions.shares}\n              onChange={set('shares')}\n              suffix=\"sh\"\n              step={1000}\n              min={1}\n            />\n            <NumberInput\n              label=\"Price\"\n              value={assumptions.price}\n              onChange={set('price')}\n              suffix={assumptions.currency}\n              step={0.01}\n              min={0}\n            />\n            <NumberInput\n              label=\"Net Debt\"\n              value={assumptions.netDebt}\n              onChange={set('netDebt')}\n              suffix={assumptions.currency}\n              step={1_000_000}\n            />\n            <NumberInput\n              label=\"Minority Interest\"\n              value={assumptions.minorityInterest}\n              onChange={set('minorityInterest')}\n              suffix={assumptions.currency}\n              step={1_000_000}\n            />\n            <NumberInput\n              label=\"Cash Adj.\"\n              value={assumptions.cashAdjust}\n              onChange={set('cashAdjust')}\n              suffix={assumptions.currency}\n              step={1_000_000}\n            />\n          </div>\n        </div>\n\n        {/* Operating Assumptions */}\n        <div className=\"col-span-12 border-t pt-3\">\n          <div className=\"grid grid-cols-2 gap-3\">\n            <NumberInput\n              label=\"Revenue₀\"\n              value={assumptions.rev0}\n              onChange={set('rev0')}\n              suffix={assumptions.currency}\n              step={1_000_000}\n            />\n            <NumberInput\n              label=\"Tax rate\"\n              value={assumptions.taxRate}\n              onChange={set('taxRate')}\n              suffix=\"ratio\"\n              step={0.005}\n              min={0}\n              max={0.6}\n            />\n            <NumberInput\n              label=\"EBIT margin₀\"\n              value={assumptions.ebitMargin0}\n              onChange={set('ebitMargin0')}\n              suffix=\"ratio\"\n              step={0.005}\n              min={0}\n              max={0.6}\n            />\n            <NumberInput\n              label=\"EBIT margin_T\"\n              value={assumptions.ebitMarginT}\n              onChange={set('ebitMarginT')}\n              suffix=\"ratio\"\n              step={0.005}\n              min={0}\n              max={0.6}\n            />\n            <NumberInput\n              label=\"Projection years\"\n              value={assumptions.years}\n              onChange={set('years')}\n              step={1}\n              min={3}\n              max={30}\n            />\n            <NumberInput\n              label=\"Growth horizon (yrs)\"\n              value={assumptions.growthYears}\n              onChange={set('growthYears')}\n              step={1}\n              min={1}\n              max={assumptions.years}\n            />\n          </div>\n        </div>\n\n        {/* Reinvestment */}\n        <div className=\"col-span-12 border-t pt-3\">\n          <div className=\"mb-1 text-[12px] font-semibold text-slate-700\">Reinvestment</div>\n          <div className=\"grid grid-cols-2 gap-3\">\n            <Switch\n              label=\"Use Sales‑to‑Capital\"\n              on={assumptions.reinvMethod === 'salesToCapital'}\n              setOn={(v) => set('reinvMethod')(v ? 'salesToCapital' : 'components')}\n            />\n            {assumptions.reinvMethod === 'salesToCapital' ? (\n              <NumberInput\n                label=\"Sales‑to‑Capital\"\n                value={assumptions.salesToCapital}\n                onChange={set('salesToCapital')}\n                step={0.1}\n                min={0.2}\n                max={10}\n              />\n            ) : (\n              <>\n                <NumberInput\n                  label=\"Capex % sales\"\n                  value={assumptions.capexPctSales}\n                  onChange={set('capexPctSales')}\n                  step={0.005}\n                  min={0}\n                  max={0.2}\n                />\n                <NumberInput\n                  label=\"D&A % sales\"\n                  value={assumptions.depPctSales}\n                  onChange={set('depPctSales')}\n                  step={0.005}\n                  min={0}\n                  max={0.2}\n                />\n                <NumberInput\n                  label=\"NWC % sales\"\n                  value={assumptions.nwcPctSales}\n                  onChange={set('nwcPctSales')}\n                  step={0.005}\n                  min={0}\n                  max={0.5}\n                />\n              </>\n            )}\n          </div>\n        </div>\n\n        {/* Capital Costs */}\n        <div className=\"col-span-12 border-t pt-3\">\n          <div className=\"mb-1 text-[12px] font-semibold text-slate-700\">Capital costs</div>\n          <div className=\"grid grid-cols-2 gap-3\">\n            <Switch\n              label=\"Use CAPM for Ke\"\n              on={assumptions.capmMode === 'capm'}\n              setOn={(v) => set('capmMode')(v ? 'capm' : 'manualKe')}\n            />\n            {assumptions.capmMode === 'capm' ? (\n              <>\n                <NumberInput\n                  label=\"Risk‑free (rf)\"\n                  value={assumptions.rf}\n                  onChange={set('rf')}\n                  step={0.0025}\n                  min={0}\n                  max={0.2}\n                />\n                <NumberInput\n                  label=\"Beta\"\n                  value={assumptions.beta}\n                  onChange={set('beta')}\n                  step={0.05}\n                  min={-1}\n                  max={3}\n                />\n                <NumberInput\n                  label=\"ERP\"\n                  value={assumptions.erp}\n                  onChange={set('erp')}\n                  step={0.005}\n                  min={0}\n                  max={0.15}\n                />\n              </>\n            ) : (\n              <NumberInput\n                label=\"Ke (manual)\"\n                value={assumptions.keManual}\n                onChange={set('keManual')}\n                step={0.0025}\n                min={0.02}\n                max={0.30}\n              />\n            )}\n            <NumberInput\n              label=\"Kd (pre‑tax)\"\n              value={assumptions.kd}\n              onChange={set('kd')}\n              step={0.0025}\n              min={0.01}\n              max={0.20}\n            />\n            <NumberInput\n              label=\"W_d\"\n              value={assumptions.wd}\n              onChange={set('wd')}\n              step={0.01}\n              min={0}\n              max={1}\n            />\n            <NumberInput\n              label=\"W_e\"\n              value={assumptions.we}\n              onChange={set('we')}\n              step={0.01}\n              min={0}\n              max={1}\n            />\n          </div>\n        </div>\n\n        {/* Terminal Value */}\n        <div className=\"col-span-12 border-t pt-3\">\n          <div className=\"mb-1 text-[12px] font-semibold text-slate-700\">Terminal</div>\n          <div className=\"grid grid-cols-2 gap-3\">\n            <Switch\n              label=\"Gordon Growth\"\n              on={assumptions.terminalMethod === 'gordon'}\n              setOn={(v) => set('terminalMethod')(v ? 'gordon' : 'exitMultiple')}\n            />\n            {assumptions.terminalMethod === 'gordon' ? (\n              <NumberInput\n                label=\"Terminal g\"\n                value={assumptions.tg}\n                onChange={set('tg')}\n                step={0.001}\n                min={-0.02}\n                max={0.05}\n              />\n            ) : (\n              <>\n                <NumberInput\n                  label=\"Exit EV Multiple\"\n                  value={assumptions.exitEVMultiple}\n                  onChange={set('exitEVMultiple')}\n                  step={0.25}\n                  min={2}\n                  max={25}\n                />\n                <label className=\"flex items-center justify-between text-[13px]\">\n                  <span className=\"text-slate-600\">Metric</span>\n                  <select\n                    className=\"rounded-md border border-slate-300 bg-white px-2 py-1\"\n                    value={assumptions.exitMetric}\n                    onChange={(e) => set('exitMetric')(e.target.value)}\n                  >\n                    <option value=\"EBITDA\">EBITDA</option>\n                    <option value=\"EBIT\">EBIT</option>\n                  </select>\n                </label>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default AssumptionsPanel;\n","import { useState } from 'react';\n\nimport { NumberInput, Card } from 'src/components/ui/UIHelpers.jsx';\n\n// Axis configuration for sensitivity analysis\nexport const AxisPicker = ({ onAxisChange, currentConfig }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [config, setConfig] = useState(currentConfig || {\n    wacc: { min: 0.06, max: 0.14, steps: 5 },\n    growth: { min: 0.015, max: 0.035, steps: 5 },\n    exitMultiple: { min: 8, max: 16, steps: 5 }\n  });\n\n  const updateConfig = (axis, field, value) => {\n    const newConfig = {\n      ...config,\n      [axis]: { ...config[axis], [field]: value }\n    };\n    setConfig(newConfig);\n    onAxisChange?.(newConfig);\n  };\n\n  const presets = {\n    conservative: {\n      wacc: { min: 0.08, max: 0.12, steps: 5 },\n      growth: { min: 0.02, max: 0.03, steps: 5 },\n      exitMultiple: { min: 10, max: 14, steps: 5 }\n    },\n    aggressive: {\n      wacc: { min: 0.06, max: 0.16, steps: 7 },\n      growth: { min: 0.01, max: 0.05, steps: 7 },\n      exitMultiple: { min: 6, max: 20, steps: 7 }\n    },\n    tight: {\n      wacc: { min: 0.075, max: 0.105, steps: 4 },\n      growth: { min: 0.02, max: 0.03, steps: 4 },\n      exitMultiple: { min: 10, max: 14, steps: 4 }\n    }\n  };\n\n  const applyPreset = (presetName) => {\n    const preset = presets[presetName];\n    setConfig(preset);\n    onAxisChange?.(preset);\n  };\n\n  if (!isExpanded) {\n    return (\n      <Card className=\"p-3\">\n        <button\n          onClick={() => setIsExpanded(true)}\n          className=\"w-full text-left text-[13px] text-slate-600 hover:text-slate-800 transition-colors\"\n        >\n          ⚙️ Customize Sensitivity Ranges\n        </button>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"p-4 space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-[14px] font-semibold text-slate-800\">Sensitivity Axis Configuration</h3>\n        <button\n          onClick={() => setIsExpanded(false)}\n          className=\"text-[12px] text-slate-500 hover:text-slate-700\"\n        >\n          ✕\n        </button>\n      </div>\n\n      {/* Quick Presets */}\n      <div className=\"space-y-2\">\n        <div className=\"text-[12px] font-medium text-slate-700\">Quick Presets</div>\n        <div className=\"flex gap-2\">\n          {Object.keys(presets).map(preset => (\n            <button\n              key={preset}\n              onClick={() => applyPreset(preset)}\n              className=\"px-3 py-1 text-[11px] font-medium bg-slate-100 hover:bg-slate-200 rounded-md transition-colors capitalize\"\n            >\n              {preset}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* WACC Range */}\n      <div className=\"space-y-2\">\n        <div className=\"text-[12px] font-medium text-slate-700\">WACC Range</div>\n        <div className=\"grid grid-cols-3 gap-2\">\n          <NumberInput\n            label=\"Min\"\n            value={config.wacc.min}\n            onChange={(val) => updateConfig('wacc', 'min', val)}\n            step={0.005}\n            min={0.01}\n            max={0.5}\n            format=\"percent\"\n            placeholder=\"6%\"\n          />\n          <NumberInput\n            label=\"Max\"\n            value={config.wacc.max}\n            onChange={(val) => updateConfig('wacc', 'max', val)}\n            step={0.005}\n            min={0.01}\n            max={0.5}\n            format=\"percent\"\n            placeholder=\"14%\"\n          />\n          <NumberInput\n            label=\"Steps\"\n            value={config.wacc.steps}\n            onChange={(val) => updateConfig('wacc', 'steps', val)}\n            step={1}\n            min={3}\n            max={10}\n            format=\"integer\"\n            placeholder=\"5\"\n          />\n        </div>\n      </div>\n\n      {/* Growth Range */}\n      <div className=\"space-y-2\">\n        <div className=\"text-[12px] font-medium text-slate-700\">Terminal Growth Range</div>\n        <div className=\"grid grid-cols-3 gap-2\">\n          <NumberInput\n            label=\"Min\"\n            value={config.growth.min}\n            onChange={(val) => updateConfig('growth', 'min', val)}\n            step={0.0025}\n            min={-0.02}\n            max={0.1}\n            format=\"percent\"\n            placeholder=\"1.5%\"\n          />\n          <NumberInput\n            label=\"Max\"\n            value={config.growth.max}\n            onChange={(val) => updateConfig('growth', 'max', val)}\n            step={0.0025}\n            min={-0.02}\n            max={0.1}\n            format=\"percent\"\n            placeholder=\"3.5%\"\n          />\n          <NumberInput\n            label=\"Steps\"\n            value={config.growth.steps}\n            onChange={(val) => updateConfig('growth', 'steps', val)}\n            step={1}\n            min={3}\n            max={10}\n            format=\"integer\"\n            placeholder=\"5\"\n          />\n        </div>\n      </div>\n\n      {/* Exit Multiple Range */}\n      <div className=\"space-y-2\">\n        <div className=\"text-[12px] font-medium text-slate-700\">Exit Multiple Range</div>\n        <div className=\"grid grid-cols-3 gap-2\">\n          <NumberInput\n            label=\"Min\"\n            value={config.exitMultiple.min}\n            onChange={(val) => updateConfig('exitMultiple', 'min', val)}\n            step={0.5}\n            min={1}\n            max={50}\n            format=\"number\"\n            placeholder=\"8x\"\n          />\n          <NumberInput\n            label=\"Max\"\n            value={config.exitMultiple.max}\n            onChange={(val) => updateConfig('exitMultiple', 'max', val)}\n            step={0.5}\n            min={1}\n            max={50}\n            format=\"number\"\n            placeholder=\"16x\"\n          />\n          <NumberInput\n            label=\"Steps\"\n            value={config.exitMultiple.steps}\n            onChange={(val) => updateConfig('exitMultiple', 'steps', val)}\n            step={1}\n            min={3}\n            max={10}\n            format=\"integer\"\n            placeholder=\"5\"\n          />\n        </div>\n      </div>\n\n      {/* Current Ranges Preview */}\n      <div className=\"pt-2 border-t border-slate-200\">\n        <div className=\"text-[11px] text-slate-600 space-y-1\">\n          <div>WACC: {(config.wacc.min * 100).toFixed(1)}% → {(config.wacc.max * 100).toFixed(1)}% ({config.wacc.steps} steps)</div>\n          <div>Growth: {(config.growth.min * 100).toFixed(1)}% → {(config.growth.max * 100).toFixed(1)}% ({config.growth.steps} steps)</div>\n          <div>Exit Multiple: {config.exitMultiple.min.toFixed(1)}x → {config.exitMultiple.max.toFixed(1)}x ({config.exitMultiple.steps} steps)</div>\n        </div>\n      </div>\n    </Card>\n  );\n};\n","// Valuation Workbench - Core utilities and mathematical functions\n// Formatting utilities\nexport const Num = new Intl.NumberFormat(undefined, { maximumFractionDigits: 2 });\nexport const Cur = (x, c = 0) => (x >= 1e9 ? `$${(x / 1e9).toFixed(c)}B` : x >= 1e6 ? `$${(x / 1e6).toFixed(c)}M` : `$${x.toFixed(c)}`);\nexport const Pct = (x, d = 1) => `${(100 * x).toFixed(d)}%`;\nexport const clamp = (x, a, b) => Math.max(a, Math.min(b, x));\n\n// Core valuation math functions\nexport function wacc(assumptions) {\n  const ke = assumptions.capmMode === 'capm'\n    ? (assumptions.rf + assumptions.beta * assumptions.erp)\n    : assumptions.keManual;\n  return assumptions.wd * assumptions.kd * (1 - assumptions.taxRate) + assumptions.we * ke;\n}\n\nexport function project(assumptions, growthPath) {\n  const rows = [];\n  let rev = assumptions.rev0;\n  const years = assumptions.years;\n\n  for (let y = 1; y <= years; y++) {\n    const g = growthPath[Math.min(y - 1, growthPath.length - 1)] || 0;\n    const revPrev = rev;\n    rev = rev * (1 + g);\n\n    // margin glide: linear from ebitMargin0 → ebitMarginT over growthYears, then flat\n    const t = clamp((y - 1) / Math.max(1, assumptions.growthYears - 1), 0, 1);\n    const ebitMargin = assumptions.ebitMargin0 * (1 - t) + assumptions.ebitMarginT * t;\n    const ebit = rev * ebitMargin;\n    const nopat = ebit * (1 - assumptions.taxRate);\n\n    let reinvest = 0, dep = rev * assumptions.depPctSales, capex = rev * assumptions.capexPctSales, dNWC = (rev - revPrev) * assumptions.nwcPctSales;\n\n    if (assumptions.reinvMethod === 'salesToCapital') {\n      const deltaSales = rev - revPrev;\n      const reinvSales = deltaSales / (assumptions.salesToCapital || 1e-9);\n      reinvest = Math.max(0, reinvSales);\n      // Treat reinvestment as inclusive of ΔNWC; for display, infer components proportionally\n      dNWC = Math.max(0, (rev - revPrev) * assumptions.nwcPctSales);\n      const capMaint = Math.max(0, reinvest - dNWC);\n      capex = capMaint + dep; // simple split\n      dep = rev * assumptions.depPctSales;\n    } else {\n      reinvest = Math.max(0, capex - dep + dNWC); // components method: Reinv = (Capex - D&A) + ΔNWC\n    }\n\n    const fcff = nopat - reinvest;\n    const metricForExit = (assumptions.exitMetric === 'EBITDA') ? (ebit + dep) : ebit;\n\n    rows.push({\n      year: y,\n      revenue: rev,\n      ebitMargin,\n      ebit,\n      nopat,\n      reinvest,\n      fcff,\n      dep,\n      capex,\n      dNWC,\n      metricForExit\n    });\n  }\n  return rows;\n}\n\nexport function terminalValue(assumptions, rows, disc) {\n  const last = rows[rows.length - 1];\n  if (assumptions.terminalMethod === 'gordon') {\n    const fcf1 = last.fcff * (1 + assumptions.tg);\n    const tv = fcf1 / (disc - assumptions.tg);\n    return { tv, basis: 'FCFF', label: 'Gordon: FCFFₙ₊₁/(WACC−g)' };\n  } else {\n    const tv = last.metricForExit * assumptions.exitEVMultiple;\n    const label = `Exit ${assumptions.exitMetric}×`;\n    return { tv, basis: assumptions.exitMetric, label };\n  }\n}\n\nexport function discount(rows, disc) {\n  let pv = 0;\n  const pvSeries = [];\n  for (let i = 0; i < rows.length; i++) {\n    const t = i + 1;\n    const p = rows[i].fcff / ((1 + disc) ** t);\n    pv += p;\n    pvSeries.push(p);\n  }\n  return { pv, pvSeries };\n}\n\nexport function valueEquity(assumptions, rows) {\n  const disc = wacc(assumptions);\n  const { pv } = discount(rows, disc);\n  const { tv } = terminalValue(assumptions, rows, disc);\n  const pvTV = tv / ((1 + disc) ** rows.length);\n\n  const ev = pv + pvTV;\n  const equity = ev - assumptions.netDebt - assumptions.minorityInterest + assumptions.cashAdjust;\n  const perShare = equity / (assumptions.shares || 1e-9);\n  const mos = (perShare - assumptions.price) / (assumptions.price || 1e-9);\n\n  return { ev, pvTV, pvFCFF: pv, tv, equity, perShare, mos };\n}\n\n// Build growth vector: first growthYears use gMid, then fade to 0 by Year 10 unless user specifies\nexport function growthVector(gStart, years, fadeAfter) {\n  const v = [];\n  for (let y = 1; y <= years; y++) {\n    const t = y <= fadeAfter ? 1 : Math.max(0, 1 - (y - fadeAfter) / (years - fadeAfter));\n    v.push(gStart * t);\n  }\n  return v;\n}\n","import React from 'react';\n\nimport { wacc } from '../../utils/valuationUtils';\n\n// Error validation and user guidance system\nexport function validateAssumptions(assumptions) {\n  const errors = [];\n  const warnings = [];\n  const disc = wacc(assumptions);\n\n  // Critical errors that prevent valuation\n  if (assumptions.terminalMethod === 'gordon' && disc <= assumptions.tg) {\n    errors.push({\n      type: 'gordon_constraint',\n      message: 'WACC ≤ Terminal Growth Rate',\n      guidance: `WACC (${(disc * 100).toFixed(1)}%) must exceed terminal growth (${(assumptions.tg * 100).toFixed(1)}%). Try lowering terminal growth or increasing WACC components.`,\n      severity: 'critical'\n    });\n  }\n\n  if (assumptions.shares <= 0) {\n    errors.push({\n      type: 'shares_invalid',\n      message: 'Invalid Share Count',\n      guidance: 'Shares outstanding must be positive to calculate per-share value.',\n      severity: 'critical'\n    });\n  }\n\n  if (assumptions.price <= 0) {\n    warnings.push({\n      type: 'price_zero',\n      message: 'Zero Stock Price',\n      guidance: 'Margin of Safety calculation may be unreliable with zero price.',\n      severity: 'warning'\n    });\n  }\n\n  // Business logic warnings\n  if (assumptions.salesToCapital < 0.5) {\n    warnings.push({\n      type: 'low_stc',\n      message: 'Very Low Sales-to-Capital',\n      guidance: `Sales-to-Capital of ${assumptions.salesToCapital.toFixed(1)}x implies very high reinvestment needs. Consider if this is realistic.`,\n      severity: 'warning'\n    });\n  }\n\n  if (assumptions.ebitMarginT > 0.4) {\n    warnings.push({\n      type: 'high_margin',\n      message: 'Very High Terminal Margin',\n      guidance: `Terminal EBIT margin of ${(assumptions.ebitMarginT * 100).toFixed(1)}% is unusually high. Verify competitive sustainability.`,\n      severity: 'warning'\n    });\n  }\n\n  // Terminal value sanity checks\n  if (assumptions.terminalMethod === 'exitMultiple' && assumptions.exitEVMultiple > 20) {\n    warnings.push({\n      type: 'high_multiple',\n      message: 'High Exit Multiple',\n      guidance: `Exit multiple of ${assumptions.exitEVMultiple.toFixed(1)}x may produce unrealistic terminal values.`,\n      severity: 'warning'\n    });\n  }\n\n  if (assumptions.rf < 0) {\n    warnings.push({\n      type: 'negative_rf',\n      message: 'Negative Risk-Free Rate',\n      guidance: 'Negative risk-free rates can create unusual WACC dynamics. Verify your rate source.',\n      severity: 'warning'\n    });\n  }\n\n  return { errors, warnings, isValid: errors.length === 0 };\n}\n\nexport const ErrorDisplay = ({ validation }) => {\n  if (!validation || (validation.errors.length === 0 && validation.warnings.length === 0)) {\n    return null;\n  }\n\n  return (\n    <div className=\"space-y-2\">\n      {validation.errors.map((error, index) => (\n        <div key={`error-${index}`} className=\"rounded-lg border border-rose-200 bg-rose-50 p-3\">\n          <div className=\"flex items-start gap-2\">\n            <div className=\"mt-0.5 h-4 w-4 rounded-full bg-rose-500 flex items-center justify-center\">\n              <span className=\"text-white text-[10px] font-bold\">!</span>\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"text-[13px] font-semibold text-rose-800\">{error.message}</div>\n              <div className=\"text-[12px] text-rose-700 mt-1\">{error.guidance}</div>\n            </div>\n          </div>\n        </div>\n      ))}\n\n      {validation.warnings.map((warning, index) => (\n        <div key={`warning-${index}`} className=\"rounded-lg border border-amber-200 bg-amber-50 p-3\">\n          <div className=\"flex items-start gap-2\">\n            <div className=\"mt-0.5 h-4 w-4 rounded-full bg-amber-500 flex items-center justify-center\">\n              <span className=\"text-white text-[10px] font-bold\">?</span>\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"text-[13px] font-semibold text-amber-800\">{warning.message}</div>\n              <div className=\"text-[12px] text-amber-700 mt-1\">{warning.guidance}</div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { project, valueEquity, growthVector, clamp } from '../../utils/valuationUtils';\n\n// Histogram component for Monte Carlo results\nexport const Histogram = ({ data }) => {\n  const bins = 24;\n  if (data.length === 0) return null;\n\n  const lo = data[0], hi = data[data.length - 1];\n  const step = (hi - lo) / (bins || 1);\n  const counts = new Array(bins).fill(0);\n\n  for (const v of data) {\n    const i = Math.min(bins - 1, Math.max(0, Math.floor((v - lo) / (step || 1))));\n    counts[i]++;\n  }\n\n  const maxC = Math.max(...counts, 1);\n\n  return (\n    <svg width={360} height={160} className=\"text-slate-600\">\n      {counts.map((c, i) => {\n        const x = 10 + (i * (340 / bins));\n        const h = (140) * (c / maxC);\n        return (\n          <rect\n            key={i}\n            x={x}\n            y={150 - h}\n            width={340 / bins - 2}\n            height={h}\n            fill=\"#60a5fa\"\n          />\n        );\n      })}\n    </svg>\n  );\n};\n\n// Triangular distribution random number generator\nfunction triRand(t) {\n  const u = Math.random();\n  const c = (t.mid - t.min) / (t.max - t.min + 1e-9);\n  if (u < c) {\n    return t.min + Math.sqrt(u * (t.max - t.min) * (t.mid - t.min));\n  }\n  return t.max - Math.sqrt((1 - u) * (t.max - t.min) * (t.max - t.mid));\n}\n\n// Monte Carlo simulation function\nexport function runMonteCarlo(assumptions, priors, n = 1000) {\n  const vals = [];\n\n  for (let i = 0; i < n; i++) {\n    const aa = { ...assumptions };\n    const g = triRand(priors.g);\n    const path = growthVector(g, aa.years, aa.growthYears);\n    aa.ebitMarginT = clamp(triRand(priors.marginT), 0, 0.6);\n\n    // WACC shift: apply to rf (capm) or keManual\n    const wShift = triRand(priors.waccShifter);\n    if (aa.capmMode === 'capm') {\n      aa.rf = Math.max(0, aa.rf + wShift);\n    } else {\n      aa.keManual = Math.max(0.01, aa.keManual + wShift);\n    }\n\n    aa.salesToCapital = Math.max(0.2, triRand(priors.stc));\n\n    if (aa.terminalMethod === 'gordon') {\n      aa.tg = clamp(triRand(priors.tgOrExit), -0.01, 0.05);\n    } else {\n      aa.exitEVMultiple = Math.max(2, triRand(priors.tgOrExit));\n    }\n\n    const rows = project(aa, path);\n    vals.push(valueEquity(aa, rows).perShare);\n  }\n\n  vals.sort((x, y) => x - y);\n  const p = (q) => vals[Math.max(0, Math.min(vals.length - 1, Math.floor(q * (vals.length - 1))))];\n\n  return {\n    vals,\n    p5: p(0.05),\n    p50: p(0.50),\n    p95: p(0.95)\n  };\n}\n\n// Generate default priors for Monte Carlo\nexport function generatePriors(assumptions) {\n  return {\n    g: { min: 0.02, mid: 0.05, max: 0.08 },\n    marginT: {\n      min: assumptions.ebitMargin0,\n      mid: assumptions.ebitMarginT,\n      max: Math.max(assumptions.ebitMarginT + 0.05, 0.25)\n    },\n    waccShifter: { min: -0.01, mid: 0, max: 0.01 },\n    stc: { min: 1.5, mid: assumptions.salesToCapital, max: 3.5 },\n    tgOrExit: assumptions.terminalMethod === 'gordon'\n      ? { min: 0.00, mid: assumptions.tg, max: 0.04 }\n      : { min: 6, mid: assumptions.exitEVMultiple, max: 12 }\n  };\n}\n","import React from 'react';\n\nimport { Cur, Pct } from '../../utils/valuationUtils';\n\nconst ProjectionsTable = ({ _projections, _onUpdate, _currency = 'USD', _financialMetrics }) => {\n  // Mock data for demonstration\n  const rows = [\n    { year: 2024, revenue: 100000, ebitMargin: 0.25, ebit: 25000, nopat: 18750, reinvest: 5000, fcff: 13750, dep: 3000, capex: 6000, dNWC: 2000 },\n    { year: 2025, revenue: 110000, ebitMargin: 0.26, ebit: 28600, nopat: 21450, reinvest: 5500, fcff: 15950, dep: 3300, capex: 6600, dNWC: 2200 },\n    { year: 2026, revenue: 121000, ebitMargin: 0.27, ebit: 32670, nopat: 24502, reinvest: 6050, fcff: 18452, dep: 3630, capex: 7260, dNWC: 2420 }\n  ];\n  return (\n    <div className=\"overflow-auto rounded-xl border border-slate-200\">\n      <table className=\"min-w-[720px] text-right text-[12px]\">\n        <thead className=\"bg-slate-50 text-slate-600\">\n          <tr>\n            <th className=\"px-2 py-1 text-left\">Year</th>\n            <th className=\"px-2 py-1\">Revenue</th>\n            <th className=\"px-2 py-1\">EBIT%</th>\n            <th className=\"px-2 py-1\">EBIT</th>\n            <th className=\"px-2 py-1\">NOPAT</th>\n            <th className=\"px-2 py-1\">Reinvest</th>\n            <th className=\"px-2 py-1\">FCFF</th>\n            <th className=\"px-2 py-1\">D&A</th>\n            <th className=\"px-2 py-1\">Capex</th>\n            <th className=\"px-2 py-1\">ΔNWC</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map(r => (\n            <tr key={r.year} className=\"odd:bg-white even:bg-slate-50/40\">\n              <td className=\"px-2 py-1 text-left\">{r.year}</td>\n              <td className=\"px-2 py-1\">{Cur(r.revenue, 0)}</td>\n              <td className=\"px-2 py-1\">{Pct(r.ebitMargin, 1)}</td>\n              <td className=\"px-2 py-1\">{Cur(r.ebit, 0)}</td>\n              <td className=\"px-2 py-1\">{Cur(r.nopat, 0)}</td>\n              <td className=\"px-2 py-1\">{Cur(r.reinvest, 0)}</td>\n              <td className=\"px-2 py-1 font-semibold\">{Cur(r.fcff, 0)}</td>\n              <td className=\"px-2 py-1\">{Cur(r.dep, 0)}</td>\n              <td className=\"px-2 py-1\">{Cur(r.capex, 0)}</td>\n              <td className=\"px-2 py-1\">{Cur(r.dNWC, 0)}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ProjectionsTable;\n","import { useState } from 'react';\n\nimport { Card, NumberInput } from 'src/components/ui/UIHelpers.jsx';\n\n\nimport { project, valueEquity, growthVector, wacc } from '../../utils/valuationUtils';\n\n// Solver functions for reverse DCF\nfunction solveForImpliedGrowth(assumptions, targetPrice, tolerance = 1e-6, maxIterations = 100) {\n  let low = -0.05, high = 0.20;\n  let iteration = 0;\n\n  while (Math.abs(high - low) > tolerance && iteration < maxIterations) {\n    const mid = (low + high) / 2;\n    const testAssumptions = { ...assumptions, tg: mid, terminalMethod: 'gordon' };\n    const growth = growthVector(0.05, testAssumptions.years, testAssumptions.growthYears);\n    const rows = project(testAssumptions, growth);\n    const valuation = valueEquity(testAssumptions, rows);\n\n    if (valuation.perShare > targetPrice) {\n      high = mid;\n    } else {\n      low = mid;\n    }\n    iteration++;\n  }\n\n  return (low + high) / 2;\n}\n\nfunction solveForImpliedWACC(assumptions, targetPrice, tolerance = 1e-6, maxIterations = 100) {\n  let low = 0.01, high = 0.30;\n  let iteration = 0;\n\n  while (Math.abs(high - low) > tolerance && iteration < maxIterations) {\n    const mid = (low + high) / 2;\n    const testAssumptions = { ...assumptions, capmMode: 'manualKe', keManual: mid };\n    const growth = growthVector(0.05, testAssumptions.years, testAssumptions.growthYears);\n    const rows = project(testAssumptions, growth);\n    const valuation = valueEquity(testAssumptions, rows);\n\n    if (valuation.perShare > targetPrice) {\n      low = mid;\n    } else {\n      high = mid;\n    }\n    iteration++;\n  }\n\n  return (low + high) / 2;\n}\n\nfunction solveForImpliedMargin(assumptions, targetPrice, tolerance = 1e-6, maxIterations = 100) {\n  let low = 0.01, high = 0.50;\n  let iteration = 0;\n\n  while (Math.abs(high - low) > tolerance && iteration < maxIterations) {\n    const mid = (low + high) / 2;\n    const testAssumptions = { ...assumptions, ebitMarginT: mid };\n    const growth = growthVector(0.05, testAssumptions.years, testAssumptions.growthYears);\n    const rows = project(testAssumptions, growth);\n    const valuation = valueEquity(testAssumptions, rows);\n\n    if (valuation.perShare > targetPrice) {\n      high = mid;\n    } else {\n      low = mid;\n    }\n    iteration++;\n  }\n\n  return (low + high) / 2;\n}\n\nfunction calculateTargetPrice(assumptions, targetMOS) {\n  return assumptions.price * (1 + targetMOS);\n}\n\nconst ReverseDCF = ({ _symbol, _onBack, _currentValuation }) => {\n  // Default assumptions for reverse DCF\n  const assumptions = {\n    price: 150,\n    shares: 1000000,\n    cashAndInvestments: 50000000,\n    debt: 25000000,\n    tg: 0.025,\n    years: 5,\n    growthYears: 5\n  };\n\n  const [targetPrice, setTargetPrice] = useState(150);\n  const [targetMOS, setTargetMOS] = useState(0);\n  const [solveFor, setSolveFor] = useState('growth');\n  const [results, setResults] = useState(null);\n  const [_assumptionsState, setAssumptions] = useState(assumptions);\n\n  const runReverseDCF = () => {\n    try {\n      let impliedValue, label, currentValue;\n\n      switch (solveFor) {\n        case 'growth':\n          impliedValue = solveForImpliedGrowth(assumptions, targetPrice);\n          label = 'Implied Terminal Growth';\n          currentValue = assumptions.tg;\n          break;\n        case 'wacc':\n          impliedValue = solveForImpliedWACC(assumptions, targetPrice);\n          label = 'Implied WACC (Ke)';\n          currentValue = wacc(assumptions);\n          break;\n        case 'margin':\n          impliedValue = solveForImpliedMargin(assumptions, targetPrice);\n          label = 'Implied Terminal Margin';\n          currentValue = assumptions.ebitMarginT;\n          break;\n        case 'targetPrice':\n          impliedValue = calculateTargetPrice(assumptions, targetMOS);\n          label = 'Target Price for MOS';\n          currentValue = assumptions.price;\n          break;\n        default:\n          return;\n      }\n\n      setResults({ impliedValue, label, currentValue });\n    } catch (error) {\n      console.error('Reverse DCF solver error:', error);\n      setResults({ error: 'Unable to solve - check assumptions' });\n    }\n  };\n\n  const applyImpliedValue = () => {\n    if (!results || results.error || solveFor === 'targetPrice') return;\n\n    const newAssumptions = { ...assumptions };\n\n    switch (solveFor) {\n      case 'growth':\n        newAssumptions.tg = results.impliedValue;\n        newAssumptions.terminalMethod = 'gordon';\n        break;\n      case 'wacc':\n        newAssumptions.keManual = results.impliedValue;\n        newAssumptions.capmMode = 'manualKe';\n        break;\n      case 'margin':\n        newAssumptions.ebitMarginT = results.impliedValue;\n        break;\n    }\n\n    setAssumptions(newAssumptions);\n  };\n\n  const formatValue = (value, type) => {\n    if (type === 'targetPrice') return `$${value.toFixed(2)}`;\n    return `${(100 * value).toFixed(2)}%`;\n  };\n\n  return (\n    <Card title=\"Reverse DCF / Implied Expectations\">\n      <div className=\"space-y-4\">\n        {/* Target Price Input */}\n        <div className=\"grid grid-cols-2 gap-3\">\n          <NumberInput\n            label=\"Target Price\"\n            value={targetPrice}\n            onChange={setTargetPrice}\n            suffix={assumptions.currency}\n            step={0.01}\n            min={0.01}\n          />\n          <NumberInput\n            label=\"Target MOS\"\n            value={targetMOS}\n            onChange={setTargetMOS}\n            suffix=\"ratio\"\n            step={0.01}\n            min={-0.50}\n            max={2.00}\n          />\n        </div>\n\n        {/* Solve For Selection */}\n        <div className=\"space-y-2\">\n          <div className=\"text-[12px] font-semibold text-slate-700\">Solve For:</div>\n          <div className=\"grid grid-cols-2 gap-2\">\n            {[\n              { value: 'growth', label: 'Terminal Growth' },\n              { value: 'wacc', label: 'WACC (Ke)' },\n              { value: 'margin', label: 'Terminal Margin' },\n              { value: 'targetPrice', label: 'Price for MOS' }\n            ].map(option => (\n              <button\n                key={option.value}\n                onClick={() => setSolveFor(option.value)}\n                className={`px-3 py-2 text-[12px] rounded-md border transition-colors ${\n                  solveFor === option.value\n                    ? 'bg-blue-500 text-white border-blue-500'\n                    : 'bg-white text-slate-600 border-slate-300 hover:bg-slate-50'\n                }`}\n              >\n                {option.label}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Solve Button */}\n        <button\n          onClick={runReverseDCF}\n          className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n        >\n          Solve Reverse DCF\n        </button>\n\n        {/* Results */}\n        {results && (\n          <div className=\"rounded-lg border border-slate-200 p-3\">\n            {results.error ? (\n              <div className=\"text-rose-600 text-[12px]\">{results.error}</div>\n            ) : (\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between text-[13px]\">\n                  <span className=\"text-slate-600\">{results.label}</span>\n                  <span className=\"font-mono font-semibold text-blue-600\">\n                    {formatValue(results.impliedValue, solveFor)}\n                  </span>\n                </div>\n\n                {solveFor !== 'targetPrice' && (\n                  <>\n                    <div className=\"flex items-center justify-between text-[12px] text-slate-500\">\n                      <span>Current Value</span>\n                      <span className=\"font-mono\">\n                        {formatValue(results.currentValue, solveFor)}\n                      </span>\n                    </div>\n\n                    <div className=\"flex items-center justify-between text-[12px] text-slate-500\">\n                      <span>Difference</span>\n                      <span\n                        className={`font-mono ${\n                          results.impliedValue > results.currentValue\n                            ? 'text-emerald-600'\n                            : 'text-rose-600'\n                        }`}\n                      >\n                        {results.impliedValue > results.currentValue ? '+' : ''}\n                        {formatValue(results.impliedValue - results.currentValue, solveFor)}\n                      </span>\n                    </div>\n\n                    <button\n                      onClick={applyImpliedValue}\n                      className=\"w-full mt-2 px-3 py-1 bg-emerald-500 text-white text-[12px] rounded-md hover:bg-emerald-600 transition-colors\"\n                    >\n                      Apply to Assumptions\n                    </button>\n                  </>\n                )}\n\n                {solveFor === 'targetPrice' && (\n                  <div className=\"text-[11px] text-slate-500\">\n                    Price needed for {(targetMOS * 100).toFixed(1)}% margin of safety\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n\n        <div className=\"text-[11px] text-slate-500\">\n          Solves for the implied value that makes DCF per-share equal target price,\n          or calculates target price for desired margin of safety.\n        </div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ReverseDCF;\n","import { Card } from 'src/components/ui/UIHelpers.jsx';\n\nconst ScenarioLibrary = ({ scenarios, setScenarios, assumptions, setAssumptions, rows, valuation }) => {\n  const save = () => {\n    const id = Math.random().toString(36).slice(2);\n    const scenario = {\n      id,\n      name: `${assumptions.name} • ${new Date().toISOString().slice(0, 10)}`,\n      assumptions: { ...assumptions },\n      created: new Date().toISOString()\n    };\n    setScenarios([scenario, ...scenarios].slice(0, 10));\n  };\n\n  const load = (scenario) => setAssumptions({ ...scenario.assumptions });\n\n  const del = (id) => setScenarios(scenarios.filter(x => x.id !== id));\n\n  const exportCSV = () => {\n    const head = 'year,revenue,ebit%,ebit,nopat,reinvest,fcff,dep,capex,dnwc\\n';\n    const body = rows.map(r =>\n      `${r.year},${r.revenue.toFixed(2)},${(100 * r.ebitMargin).toFixed(2)}%,${r.ebit.toFixed(2)},${r.nopat.toFixed(2)},${r.reinvest.toFixed(2)},${r.fcff.toFixed(2)},${r.dep.toFixed(2)},${r.capex.toFixed(2)},${r.dNWC.toFixed(2)}`\n    ).join('\\n');\n    const foot = `\\nEV,${valuation.ev.toFixed(2)}\\nEquity,${valuation.equity.toFixed(2)}\\nPerShare,${valuation.perShare.toFixed(2)}\\n`;\n\n    const blob = new Blob([head + body + foot], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const aEl = document.createElement('a');\n    aEl.href = url;\n    aEl.download = 'valuation.csv';\n    aEl.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const exportJSON = () => {\n    const blob = new Blob([JSON.stringify({ scenarios }, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const aEl = document.createElement('a');\n    aEl.href = url;\n    aEl.download = 'scenarios.json';\n    aEl.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const importJSON = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const data = JSON.parse(e.target.result);\n        if (data.scenarios && Array.isArray(data.scenarios)) {\n          // Merge imported scenarios with existing ones, avoiding duplicates\n          const existingIds = new Set(scenarios.map(s => s.id));\n          const newScenarios = data.scenarios.filter(s => !existingIds.has(s.id));\n          setScenarios([...newScenarios, ...scenarios].slice(0, 20)); // Keep max 20 scenarios\n        }\n      } catch (error) {\n        console.error('Failed to import JSON:', error);\n        alert('Invalid JSON file format');\n      }\n    };\n    reader.readAsText(file);\n    // Reset file input\n    event.target.value = '';\n  };\n\n  return (\n    <Card\n      title=\"Scenario Library\"\n      right={\n        <button\n          onClick={save}\n          className=\"rounded-md border border-slate-200 bg-white px-2 py-1 text-[12px] hover:bg-slate-50\"\n        >\n          Save Current\n        </button>\n      }\n    >\n      <div className=\"flex items-center justify-between text-[12px] mb-2\">\n        <div className=\"text-slate-600\">{scenarios.length} saved</div>\n        <div className=\"flex items-center gap-2\">\n          <button\n            onClick={exportCSV}\n            className=\"rounded-md border border-slate-200 bg-white px-2 py-1 hover:bg-slate-50\"\n          >\n            Export CSV\n          </button>\n          <button\n            onClick={exportJSON}\n            className=\"rounded-md border border-slate-200 bg-white px-2 py-1 hover:bg-slate-50\"\n          >\n            Export JSON\n          </button>\n          <label className=\"rounded-md border border-slate-200 bg-white px-2 py-1 hover:bg-slate-50 cursor-pointer\">\n            Import JSON\n            <input\n              type=\"file\"\n              accept=\".json\"\n              onChange={importJSON}\n              className=\"hidden\"\n            />\n          </label>\n        </div>\n      </div>\n      <ul className=\"space-y-1 text-[12px]\">\n        {scenarios.map(s => (\n          <li key={s.id} className=\"flex items-center justify-between rounded border border-slate-200 px-2 py-1\">\n            <div className=\"flex flex-col\">\n              <span className=\"font-medium text-slate-800\">{s.name}</span>\n              <span className=\"text-slate-500\">{new Date(s.created).toLocaleString()}</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                onClick={() => load(s)}\n                className=\"rounded-md border border-slate-200 bg-white px-2 py-1 hover:bg-slate-50\"\n              >\n                Load\n              </button>\n              <button\n                onClick={() => del(s.id)}\n                className=\"text-rose-600 hover:text-rose-800\"\n              >\n                Delete\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default ScenarioLibrary;\n","import React from 'react';\n\nimport { project, valueEquity, growthVector } from '../../utils/valuationUtils';\n\n// Heatmap component for visualizing sensitivity analysis\nexport const Heatmap = ({ grid, xLabels, yLabels }) => {\n  const vMin = Math.min(...grid.flat());\n  const vMax = Math.max(...grid.flat());\n\n  const color = (v) => {\n    const t = (v - vMin) / (vMax - vMin + 1e-9);\n    const h = 220 - 220 * t;\n    return `hsl(${h} 80% 55%)`;\n  };\n\n  return (\n    <div className=\"overflow-hidden rounded-xl border border-slate-200\">\n      <div className=\"grid\" style={{ gridTemplateColumns: `auto repeat(${xLabels.length}, minmax(0,1fr))` }}>\n        <div className=\"bg-slate-50 px-2 py-1 text-[11px] text-slate-600\" />\n        {xLabels.map((x, i) => (\n          <div key={i} className=\"bg-slate-50 px-2 py-1 text-center text-[11px] text-slate-600\">\n            {x}\n          </div>\n        ))}\n        {yLabels.map((y, ri) => (\n          <React.Fragment key={ri}>\n            <div className=\"bg-slate-50 px-2 py-1 text-[11px] text-slate-600\">{y}</div>\n            {grid[ri].map((v, ci) => (\n              <div\n                key={ci}\n                className=\"h-7 text-center text-[11px] flex items-center justify-center text-white font-medium\"\n                style={{ background: color(v) }}\n              >\n                {v.toFixed(2)}\n              </div>\n            ))}\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Helper to generate range arrays\nfunction generateRange(min, max, steps) {\n  if (steps === 1) return [min];\n  const step = (max - min) / (steps - 1);\n  return Array.from({ length: steps }, (_, i) => min + i * step);\n}\n\n// Function to generate heatmap data for sensitivity analysis\nexport function generateHeatmap(assumptions, waccVals, termVals, termIsGrowth) {\n  const grid = [];\n\n  for (let i = 0; i < waccVals.length; i++) {\n    const row = [];\n    for (let j = 0; j < termVals.length; j++) {\n      const aa = { ...assumptions };\n      const growth = growthVector(\n        aa.growthYears > 0 ? (aa.ebitMarginT > aa.ebitMargin0 ? 0.06 : 0.03) : 0,\n        aa.years,\n        aa.growthYears\n      );\n\n      if (termIsGrowth) {\n        aa.terminalMethod = 'gordon';\n        aa.tg = termVals[j];\n      } else {\n        aa.terminalMethod = 'exitMultiple';\n        aa.exitEVMultiple = termVals[j];\n      }\n\n      // Force wacc for the run by overriding keManual to hit target\n      const ke = aa.capmMode === 'capm' ? (aa.rf + aa.beta * aa.erp) : aa.keManual;\n      const _curW = aa.wd * aa.kd * (1 - aa.taxRate) + aa.we * ke;\n      const deltaKe = (waccVals[i] - (aa.wd * aa.kd * (1 - aa.taxRate))) / (aa.we || 1e-9);\n      aa.capmMode = 'manualKe';\n      aa.keManual = deltaKe;\n\n      const rows = project(aa, growth);\n      const val = valueEquity(aa, rows).perShare;\n      row.push(val);\n    }\n    grid.push(row);\n  }\n  return grid;\n}\n\n// Enhanced heatmap generation with custom axis configuration\nexport function generateHeatmapsWithConfig(assumptions, axisConfig = null) {\n  const config = axisConfig || {\n    wacc: { min: 0.06, max: 0.14, steps: 5 },\n    growth: { min: 0.015, max: 0.035, steps: 5 },\n    exitMultiple: { min: 8, max: 16, steps: 5 }\n  };\n\n  const waccVals = generateRange(config.wacc.min, config.wacc.max, config.wacc.steps);\n  const growthVals = generateRange(config.growth.min, config.growth.max, config.growth.steps);\n  const exitMultipleVals = generateRange(config.exitMultiple.min, config.exitMultiple.max, config.exitMultiple.steps);\n\n  return {\n    waccGrowth: {\n      grid: generateHeatmap(assumptions, waccVals, growthVals, true),\n      xLabels: growthVals.map(g => (g * 100).toFixed(1) + '%'),\n      yLabels: waccVals.map(w => (w * 100).toFixed(1) + '%'),\n      title: 'WACC × Terminal Growth'\n    },\n    waccExit: {\n      grid: generateHeatmap(assumptions, waccVals, exitMultipleVals, false),\n      xLabels: exitMultipleVals.map(m => m.toFixed(1) + 'x'),\n      yLabels: waccVals.map(w => (w * 100).toFixed(1) + '%'),\n      title: 'WACC × Exit Multiple'\n    }\n  };\n}\n","import { Card } from 'src/components/ui/UIHelpers.jsx';\n\nimport { wacc, terminalValue, project, valueEquity, growthVector } from '../../utils/valuationUtils';\n\nexport function runTests(assumptions, rows, valuation) {\n  const tests = [];\n  const disc = wacc(assumptions);\n\n  // Identity: EV ≈ PV(FCFF)+PV(TV)\n  const pvFCFF = rows.reduce((acc, r, i) => acc + r.fcff / ((1 + disc) ** (i + 1)), 0);\n  const tv = terminalValue(assumptions, rows, disc).tv;\n  const pvTV = tv / ((1 + disc) ** rows.length);\n  tests.push({\n    name: 'EV identity (PV_FCFF + PV_TV)',\n    pass: Math.abs((pvFCFF + pvTV) - valuation.ev) < 1e-6\n  });\n\n  // Gordon constraint if used: WACC>g\n  if (assumptions.terminalMethod === 'gordon') {\n    tests.push({\n      name: 'WACC > g (Gordon)',\n      pass: disc > assumptions.tg\n    });\n  }\n\n  // WACC monotonicity (±50 bps)\n  const aUp = { ...assumptions, rf: assumptions.rf + 0.005 };\n  const aDn = { ...assumptions, rf: Math.max(0, assumptions.rf - 0.005) };\n  const vsUp = valueEquity(aUp, project(aUp, growthVector(0.05, aUp.years, aUp.growthYears))).perShare;\n  const vsDn = valueEquity(aDn, project(aDn, growthVector(0.05, aDn.years, aDn.growthYears))).perShare;\n  tests.push({\n    name: 'Per‑share ↓ when WACC ↑',\n    pass: vsUp < valuation.perShare && vsDn > valuation.perShare\n  });\n\n  // Non‑negative reinvestment, FCFF defined\n  tests.push({\n    name: 'Reinvestment non‑negative',\n    pass: rows.every(r => r.reinvest >= -1e-9)\n  });\n  tests.push({\n    name: 'FCFF finite',\n    pass: rows.every(r => Number.isFinite(r.fcff))\n  });\n\n  // Currency-scale invariance\n  const scaledAssumptions = {\n    ...assumptions,\n    rev0: assumptions.rev0 * 10,\n    netDebt: assumptions.netDebt * 10,\n    minorityInterest: assumptions.minorityInterest * 10,\n    cashAdjust: assumptions.cashAdjust * 10,\n    price: assumptions.price * 10\n  };\n  const scaledRows = project(scaledAssumptions, growthVector(0.05, scaledAssumptions.years, scaledAssumptions.growthYears));\n  const scaledValuation = valueEquity(scaledAssumptions, scaledRows);\n  tests.push({\n    name: 'Currency-scale invariance',\n    pass: Math.abs(scaledValuation.perShare / 10 - valuation.perShare) < 1e-6\n  });\n\n  // Net cash case (negative net debt raises equity)\n  if (assumptions.netDebt < 0) {\n    const zeroCashAssumptions = { ...assumptions, netDebt: 0 };\n    const zeroCashRows = project(zeroCashAssumptions, growthVector(0.05, zeroCashAssumptions.years, zeroCashAssumptions.growthYears));\n    const zeroCashValuation = valueEquity(zeroCashAssumptions, zeroCashRows);\n    tests.push({\n      name: 'Net cash increases equity',\n      pass: valuation.equity > zeroCashValuation.equity\n    });\n  }\n\n  // Shares guard\n  tests.push({\n    name: 'Shares > 0 (division safe)',\n    pass: assumptions.shares > 0\n  });\n\n  // Terminal method parity smoke test\n  if (assumptions.terminalMethod === 'gordon' && assumptions.tg > 0 && disc > assumptions.tg) {\n    const impliedMultiple = tv / rows[rows.length - 1].metricForExit;\n    const multipleAssumptions = {\n      ...assumptions,\n      terminalMethod: 'exitMultiple',\n      exitEVMultiple: impliedMultiple\n    };\n    const multipleRows = project(multipleAssumptions, growthVector(0.05, multipleAssumptions.years, multipleAssumptions.growthYears));\n    const multipleValuation = valueEquity(multipleAssumptions, multipleRows);\n    tests.push({\n      name: 'Terminal method parity',\n      pass: Math.abs(multipleValuation.perShare - valuation.perShare) < 0.01 // 1 cent tolerance\n    });\n  }\n\n  return tests;\n}\n\nconst TestsPanel = ({ tests }) => {\n  return (\n    <Card title=\"Dev / Sanity Tests\">\n      <ul className=\"space-y-1 text-[13px]\">\n        {tests.map(t => (\n          <li key={t.name} className=\"flex items-center justify-between\">\n            <span className=\"text-slate-700\">{t.name}</span>\n            <span className={`ml-2 ${t.pass ? 'text-emerald-600' : 'text-rose-600'}`}>\n              {t.pass ? 'PASS' : 'FAIL'}\n            </span>\n          </li>\n        ))}\n      </ul>\n    </Card>\n  );\n};\n\nexport default TestsPanel;\n","import React from 'react';\n\nimport { project, valueEquity, growthVector } from '../../utils/valuationUtils';\n\nexport const TornadoChart = ({ items }) => {\n  const max = Math.max(...items.map(x => Math.abs(x.delta)), 1);\n\n  return (\n    <div className=\"space-y-1\">\n      {items.map((item, i) => {\n        const w = Math.abs(item.delta) / max;\n        const pos = item.delta >= 0;\n        return (\n          <div key={i} className=\"flex items-center gap-2 text-[12px]\">\n            <div className=\"w-40 text-slate-700\">{item.label}</div>\n            <div className=\"relative h-5 flex-1 rounded bg-slate-100\">\n              <div\n                className={`absolute top-0 h-5 rounded ${pos ? 'bg-emerald-400' : 'bg-rose-400'}`}\n                style={{\n                  width: `${w * 100}%`,\n                  left: pos ? '50%' : `${50 - w * 50}%`\n                }}\n              />\n              <div className=\"absolute left-1/2 top-0 h-5 w-px bg-white/60\" />\n            </div>\n            <div className={`w-20 text-right ${pos ? 'text-emerald-700' : 'text-rose-700'}`}>\n              {item.delta >= 0 ? '+' : ''}{item.delta.toFixed(2)}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport function generateTornadoData(assumptions, baseRows, basePerShare) {\n  const one = (label, tweak) => {\n    const aa = { ...assumptions };\n    tweak(aa);\n    const rows = project(aa, growthVector(\n      aa.growthYears > 0 ? (aa.ebitMarginT > aa.ebitMargin0 ? 0.06 : 0.03) : 0,\n      aa.years,\n      aa.growthYears\n    ));\n    const v = valueEquity(aa, rows).perShare;\n    return { label, delta: v - basePerShare };\n  };\n\n  const items = [\n    one('WACC +100 bps', x => {\n      if (x.capmMode === 'capm') x.rf += 0.01; else x.keManual += 0.01;\n    }),\n    one('WACC −100 bps', x => {\n      if (x.capmMode === 'capm') x.rf -= 0.01; else x.keManual -= 0.01;\n    }),\n    one('Terminal g +50 bps', x => {\n      x.terminalMethod = 'gordon'; x.tg += 0.005;\n    }),\n    one('Terminal g −50 bps', x => {\n      x.terminalMethod = 'gordon'; x.tg -= 0.005;\n    }),\n    one('Exit multiple +1x', x => {\n      x.terminalMethod = 'exitMultiple'; x.exitEVMultiple += 1;\n    }),\n    one('Exit multiple −1x', x => {\n      x.terminalMethod = 'exitMultiple'; x.exitEVMultiple -= 1;\n    }),\n    one('EBIT margin +100 bps', x => {\n      x.ebitMarginT += 0.01;\n    }),\n    one('EBIT margin −100 bps', x => {\n      x.ebitMarginT -= 0.01;\n    }),\n    one('Sales‑to‑Capital +0.5', x => {\n      x.reinvMethod = 'salesToCapital'; x.salesToCapital += 0.5;\n    }),\n    one('Sales‑to‑Capital −0.5', x => {\n      x.reinvMethod = 'salesToCapital'; x.salesToCapital = Math.max(0.1, x.salesToCapital - 0.5);\n    })\n  ];\n\n  // Sort by absolute impact desc\n  return items.sort((a, b) => Math.abs(b.delta) - Math.abs(a.delta));\n}\n","import React from 'react';\n\nimport { Cur, Pct } from '../../utils/valuationUtils';\n\nconst ValuationSummary = ({ valuation, assumptions }) => {\n  const tvEvRatio = valuation.tv / (valuation.ev || 1e-9);\n  const getTvEvColor = (ratio) => {\n    if (ratio > 0.8) return 'text-amber-600'; // High TV dependency - warning\n    if (ratio > 0.6) return 'text-slate-600'; // Moderate\n    return 'text-emerald-600'; // Conservative\n  };\n\n  return (\n    <div className=\"grid grid-cols-2 gap-3 text-[13px]\">\n      <div className=\"rounded-xl border border-slate-200 p-3\">\n        <div className=\"text-slate-500\">PV(FCFF)</div>\n        <div className=\"text-lg font-semibold\">{Cur(valuation.pvFCFF, 0)}</div>\n        <div className=\"text-slate-500\">PV(Terminal)</div>\n        <div className=\"text-lg font-semibold\">{Cur(valuation.pvTV, 0)}</div>\n        <div className=\"text-slate-500\">EV</div>\n        <div className=\"text-lg font-semibold\">{Cur(valuation.ev, 0)}</div>\n        <div className=\"text-slate-500\">TV/EV Ratio</div>\n        <div className={`text-sm font-medium ${getTvEvColor(tvEvRatio)}`}>\n          {Pct(tvEvRatio, 1)}\n        </div>\n      </div>\n      <div className=\"rounded-xl border border-slate-200 p-3\">\n        <div className=\"text-slate-500\">EV − Net Debt − MI + Cash Adj.</div>\n        <div className=\"text-lg font-semibold\">{Cur(valuation.equity, 0)}</div>\n        <div className=\"text-slate-500\">Per Share</div>\n        <div className={`text-2xl font-bold ${valuation.perShare >= assumptions.price ? 'text-emerald-600' : 'text-rose-600'}`}>\n          {assumptions.currency} {valuation.perShare.toFixed(2)}\n        </div>\n        <div className=\"text-slate-500\">Margin of Safety vs Price</div>\n        <div className={`text-lg font-semibold ${valuation.mos >= 0 ? 'text-emerald-700' : 'text-rose-700'}`}>\n          {Pct(valuation.mos, 1)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ValuationSummary;\n","import { useState, useMemo, useEffect } from 'react';\n\nimport { Card, Pill } from 'src/components/ui/UIHelpers.jsx';\n\nimport Header from '../components/ui/Header';\nimport AssumptionsPanel from '../components/ValuationWorkbench/AssumptionsPanel';\nimport { AuditTrail, useAuditTrail } from '../components/ValuationWorkbench/AuditTrail';\nimport { AxisPicker } from '../components/ValuationWorkbench/AxisPicker';\nimport { validateAssumptions, ErrorDisplay } from '../components/ValuationWorkbench/ErrorHandler';\nimport { Histogram, runMonteCarlo, generatePriors } from '../components/ValuationWorkbench/MonteCarloAnalysis';\nimport ProjectionsTable from '../components/ValuationWorkbench/ProjectionsTable';\nimport ReverseDCF from '../components/ValuationWorkbench/ReverseDCF';\nimport ScenarioLibrary from '../components/ValuationWorkbench/ScenarioLibrary';\nimport { Heatmap, generateHeatmapsWithConfig } from '../components/ValuationWorkbench/SensitivityAnalysis';\nimport TestsPanel, { runTests } from '../components/ValuationWorkbench/TestsPanel';\nimport { TornadoChart, generateTornadoData } from '../components/ValuationWorkbench/TornadoChart';\nimport ValuationSummary from '../components/ValuationWorkbench/ValuationSummary';\nimport { project, valueEquity, growthVector, wacc, Pct } from '../utils/valuationUtils';\n\n// Default assumptions\nconst defaults = {\n  name: 'VALR demo',\n  currency: 'USD',\n  shares: 300_000_000,\n  price: 25,\n  netDebt: 2_000_000_000,\n  minorityInterest: 0,\n  cashAdjust: 0,\n  rev0: 5_000_000_000,\n  growthYears: 5,\n  years: 10,\n  taxRate: 0.23,\n  ebitMargin0: 0.12,\n  ebitMarginT: 0.18,\n  reinvMethod: 'salesToCapital',\n  salesToCapital: 2.5,\n  capexPctSales: 0.05,\n  depPctSales: 0.04,\n  nwcPctSales: 0.10,\n  capmMode: 'capm',\n  rf: 0.04,\n  beta: 1.1,\n  erp: 0.05,\n  keManual: 0.10,\n  kd: 0.06,\n  wd: 0.25,\n  we: 0.75,\n  terminalMethod: 'gordon',\n  tg: 0.025,\n  exitEVMultiple: 9.0,\n  exitMetric: 'EBITDA'\n};\n\nconst ValuationWorkbench = () => {\n  const [assumptions, setAssumptions] = useState({ ...defaults });\n  const [scenarios, setScenarios] = useState([]);\n  const [mc, setMc] = useState(null);\n  const [axisConfig, setAxisConfig] = useState({\n    wacc: { min: 0.06, max: 0.14, steps: 5 },\n    growth: { min: 0.015, max: 0.035, steps: 5 },\n    exitMultiple: { min: 8, max: 16, steps: 5 }\n  });\n\n  // Audit trail integration\n  const { auditLog, updateAssumptions, clearAuditLog, exportAuditLog } = useAuditTrail(assumptions, setAssumptions);\n\n  // Core calculations\n  const growth = useMemo(() => growthVector(0.05, assumptions.years, assumptions.growthYears), [assumptions.years, assumptions.growthYears]);\n  const rows = useMemo(() => project(assumptions, growth), [assumptions, growth]);\n  const valuation = useMemo(() => valueEquity(assumptions, rows), [assumptions, rows]);\n  const disc = useMemo(() => wacc(assumptions), [assumptions]);\n\n  // Sensitivity analysis data with custom axis configuration\n  const heatmapData = useMemo(() => generateHeatmapsWithConfig(assumptions, axisConfig), [assumptions, axisConfig]);\n\n  // Tornado analysis\n  const tornData = useMemo(() => generateTornadoData(assumptions, rows, valuation.perShare), [assumptions, rows, valuation.perShare]);\n\n  // Monte Carlo priors\n  const priors = useMemo(() => generatePriors(assumptions), [assumptions]);\n\n  // Tests\n  const tests = useMemo(() => runTests(assumptions, rows, valuation), [assumptions, rows, valuation]);\n\n  // Validation\n  const validation = useMemo(() => validateAssumptions(assumptions), [assumptions]);\n\n  // Reset MC when assumptions change\n  useEffect(() => {\n    setMc(null);\n  }, [assumptions]);\n\n  return (\n    <div className=\"min-h-[100dvh] bg-background text-foreground\">\n      <Header />\n\n      <div className=\"pt-[60px]\">\n        {/* Page Header */}\n        <div className=\"border-b border-border bg-card\">\n          <div className=\"flex items-center justify-between p-4\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"flex h-8 w-8 items-center justify-center rounded-md bg-primary\">\n                <svg viewBox=\"0 0 24 24\" className=\"h-4 w-4 text-white\">\n                  <path\n                    d=\"M4 6h16M4 12h10M4 18h7\" stroke=\"currentColor\" strokeWidth=\"2\"\n                    fill=\"none\" strokeLinecap=\"round\"\n                  />\n                </svg>\n              </div>\n              <div>\n                <div className=\"text-xs tracking-wide text-muted-foreground\">FinanceAnalyst Pro</div>\n                <div className=\"text-[13px] font-semibold text-foreground\">Valuation Workbench</div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-3 text-[12px]\">\n              <Pill tone=\"green\">{`WACC ${Pct(disc, 1)}`}</Pill>\n              <Pill tone=\"amber\">\n                {assumptions.terminalMethod === 'gordon'\n                  ? `g ${Pct(assumptions.tg, 1)}`\n                  : `Exit ×${assumptions.exitEVMultiple.toFixed(1)} ${assumptions.exitMetric}`}\n              </Pill>\n              <Pill tone=\"blue\">\n                {valuation.perShare >= assumptions.price ? 'Undervalued' : 'Overvalued'}\n              </Pill>\n            </div>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"p-6\">\n          <div className=\"mb-4 grid grid-cols-12 gap-6\">\n\n            {/* Left Column: Assumptions & Scenarios */}\n            <div className=\"col-span-12 lg:col-span-4 space-y-4\">\n              <AssumptionsPanel assumptions={assumptions} setAssumptions={updateAssumptions} />\n\n              {/* Error Handling & Validation */}\n              <ErrorDisplay validation={validation} />\n\n              <ReverseDCF\n                assumptions={assumptions}\n                setAssumptions={updateAssumptions}\n                currentValuation={valuation}\n              />\n\n              {/* Audit Trail */}\n              <AuditTrail\n                auditLog={auditLog}\n                onClear={clearAuditLog}\n                onExport={exportAuditLog}\n              />\n\n              <ScenarioLibrary\n                scenarios={scenarios}\n                setScenarios={setScenarios}\n                assumptions={assumptions}\n                setAssumptions={updateAssumptions}\n                rows={rows}\n                valuation={valuation}\n              />\n            </div>\n\n            {/* Center Column: Projections & Valuation */}\n            <div className=\"col-span-12 lg:col-span-5 space-y-4\">\n              <Card title=\"10‑Year Projections (FCFF)\">\n                <ProjectionsTable rows={rows} currency={assumptions.currency} />\n              </Card>\n\n              <Card title=\"Enterprise → Equity Bridge\">\n                <ValuationSummary valuation={valuation} assumptions={assumptions} />\n              </Card>\n            </div>\n\n            {/* Right Column: Results & Analysis */}\n            <div className=\"col-span-12 lg:col-span-3 space-y-4\">\n              {/* Sensitivity Analysis */}\n              <Card className=\"p-4\">\n                <h3 className=\"text-[16px] font-semibold text-foreground mb-4\">Sensitivity Analysis</h3>\n\n                {/* Axis Configuration */}\n                <div className=\"mb-4\">\n                  <AxisPicker\n                    currentConfig={axisConfig}\n                    onAxisChange={setAxisConfig}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-4\">\n                  <div>\n                    <h4 className=\"text-[14px] font-medium text-foreground mb-2\">{heatmapData.waccGrowth.title}</h4>\n                    <Heatmap\n                      grid={heatmapData.waccGrowth.grid}\n                      xLabels={heatmapData.waccGrowth.xLabels}\n                      yLabels={heatmapData.waccGrowth.yLabels}\n                    />\n                  </div>\n                  <div>\n                    <h4 className=\"text-[14px] font-medium text-foreground mb-2\">{heatmapData.waccExit.title}</h4>\n                    <Heatmap\n                      grid={heatmapData.waccExit.grid}\n                      xLabels={heatmapData.waccExit.xLabels}\n                      yLabels={heatmapData.waccExit.yLabels}\n                    />\n                  </div>\n                </div>\n              </Card>\n\n              <Card title=\"Tornado (Δ per‑share)\">\n                <TornadoChart items={tornData} />\n              </Card>\n\n              <Card\n                title=\"Monte Carlo (1000 runs)\"\n                right={\n                  <button\n                    onClick={() => setMc(runMonteCarlo(assumptions, priors, 1000))}\n                    className=\"rounded-md border border-border bg-card px-2 py-1 text-[12px] hover:bg-muted\"\n                  >\n                    Run\n                  </button>\n                }\n              >\n                {mc ? (\n                  <div className=\"space-y-2 text-[12px]\">\n                    <div className=\"flex items-center justify-between\">\n                      <span>P5</span>\n                      <span className=\"font-mono\">{mc.p5.toFixed(2)}</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span>P50</span>\n                      <span className=\"font-mono\">{mc.p50.toFixed(2)}</span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span>P95</span>\n                      <span className=\"font-mono\">{mc.p95.toFixed(2)}</span>\n                    </div>\n                    <Histogram data={mc.vals} />\n                  </div>\n                ) : (\n                  <div className=\"text-[12px] text-muted-foreground\">\n                    Stochastic valuation with triangular priors on g, margins, WACC shift, S/C, terminal. Click Run.\n                  </div>\n                )}\n              </Card>\n            </div>\n          </div>\n\n          <TestsPanel tests={tests} />\n          <div className=\"mt-2 text-[11px] text-muted-foreground\">\n            Tip: to feed real tickers, pipe reported revenue, margins, share count, and balance sheet into the assumptions; set priors from historical distributions.\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ValuationWorkbench;\n"],"names":["AssumptionsPanel","assumptions","setAssumptions","set","key","value","jsx","Card","title","right","Pill","tone","children","currency","jsxs","className","NumberInput","label","shares","onChange","suffix","step","min","price","netDebt","minorityInterest","cashAdjust","rev0","taxRate","max","ebitMargin0","ebitMarginT","years","growthYears","Switch","on","reinvMethod","setOn","v","salesToCapital","Fragment","capexPctSales","depPctSales","nwcPctSales","capmMode","rf","beta","erp","keManual","kd","wd","we","terminalMethod","tg","exitEVMultiple","exitMetric","e","target","AxisPicker","onAxisChange","currentConfig","isExpanded","setIsExpanded","useState","config","setConfig","wacc","steps","growth","exitMultiple","updateConfig","axis","field","newConfig","presets","conservative","aggressive","tight","onClick","keys","map","preset","presetName","applyPreset","val","format","placeholder","toFixed","Cur","x","c","Pct","d","clamp","a","b","Math","ke","project","growthPath","rows","rev","y","revPrev","length","t","ebitMargin","ebit","nopat","reinvest","dep","capex","dNWC","reinvSales","fcff","metricForExit","push","year","revenue","terminalValue","disc","last","tv","basis","valueEquity","pv","pvSeries","i","p","discount","pvTV","ev","equity","perShare","pvFCFF","mos","growthVector","gStart","fadeAfter","ErrorDisplay","validation","errors","warnings","error","index","message","guidance","warning","Histogram","data","lo","counts","Array","fill","bins","floor","maxC","width","height","h","triRand","u","random","mid","sqrt","ProjectionsTable","_projections","_onUpdate","_currency","_financialMetrics","r","ReverseDCF","_symbol","_onBack","_currentValuation","cashAndInvestments","debt","targetPrice","setTargetPrice","targetMOS","setTargetMOS","solveFor","setSolveFor","results","setResults","_assumptionsState","formatValue","type","option","impliedValue","currentValue","tolerance","maxIterations","low","high","iteration","abs","testAssumptions","solveForImpliedGrowth","solveForImpliedWACC","solveForImpliedMargin","calculateTargetPrice","newAssumptions","ScenarioLibrary","scenarios","setScenarios","valuation","scenario","id","toString","slice","name","Date","toISOString","created","body","join","foot","blob","Blob","url","URL","createObjectURL","aEl","document","createElement","href","download","click","revokeObjectURL","JSON","stringify","accept","event","file","files","reader","FileReader","onload","parse","result","isArray","existingIds","Set","s","newScenarios","filter","has","alert","readAsText","toLocaleString","del","Heatmap","grid","xLabels","yLabels","vMin","flat","vMax","color","style","gridTemplateColumns","ri","React","ci","background","generateRange","from","_","generateHeatmap","waccVals","termVals","termIsGrowth","row","j","aa","deltaKe","TestsPanel","tests","pass","TornadoChart","items","delta","item","w","pos","left","ValuationSummary","tvEvRatio","ratio","defaults","ValuationWorkbench","mc","setMc","axisConfig","setAxisConfig","auditLog","updateAssumptions","clearAuditLog","exportAuditLog","useAuditTrail","useMemo","heatmapData","growthVals","exitMultipleVals","waccGrowth","g","waccExit","m","generateHeatmapsWithConfig","tornData","baseRows","basePerShare","one","tweak","sort","generateTornadoData","priors","marginT","waccShifter","stc","tgOrExit","generatePriors","reduce","acc","aUp","aDn","vsUp","vsDn","every","Number","isFinite","scaledAssumptions","scaledValuation","zeroCashAssumptions","zeroCashValuation","impliedMultiple","multipleAssumptions","multipleValuation","runTests","severity","isValid","validateAssumptions","useEffect","Header","viewBox","stroke","strokeWidth","strokeLinecap","currentValuation","AuditTrail","onClear","onExport","n","vals","path","wShift","q","p5","p50","p95","runMonteCarlo"],"mappings":"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"}