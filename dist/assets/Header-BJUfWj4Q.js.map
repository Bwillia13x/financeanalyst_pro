{"version":3,"file":"Header-BJUfWj4Q.js","sources":["../../src/components/BusinessIntelligence/BusinessIntelligenceDashboard.jsx","../../src/hooks/useBusinessIntelligence.js","../../src/components/ui/SkipLink.jsx","../../src/components/ui/Header.jsx"],"sourcesContent":["/**\n * Business Intelligence Dashboard\n * Comprehensive analytics, insights, and automated intelligence for financial platform\n */\n\nimport { motion } from 'framer-motion';\nimport {\n  BarChart3,\n  Activity,\n  Target,\n  Brain,\n  Lightbulb,\n  Download,\n  AlertTriangle,\n  Users,\n  Zap,\n  RefreshCw,\n  ArrowUp,\n  ArrowDown,\n  Minus,\n  CheckCircle\n} from 'lucide-react';\nimport { useState } from 'react';\n\nimport {\n  useBusinessIntelligence,\n  useUsageAnalytics,\n  usePerformanceAnalytics,\n  useAutomatedInsights\n} from '../../hooks/useBusinessIntelligence';\nimport SEOHead from '../SEO/SEOHead';\n\nconst BusinessIntelligenceDashboard = ({ isVisible = true, onClose }) => {\n  const [activeTab, setActiveTab] = useState('overview');\n  const [refreshing, setRefreshing] = useState(false);\n\n  // Disable BI during testing to prevent infinite re-renders\n  const isTestEnvironment = typeof window !== 'undefined' && (\n    window.navigator?.webdriver === true ||\n    window.location?.search?.includes('lhci') ||\n    window.location?.search?.includes('ci') ||\n    window.location?.search?.includes('audit')\n  );\n\n  const { generateReport, exportData } = isTestEnvironment ? { generateReport: () => {}, exportData: () => {} } : useBusinessIntelligence();\n  const { usageMetrics } = isTestEnvironment ? { usageMetrics: {} } : useUsageAnalytics();\n  const { performanceMetrics, benchmarks, alerts } = isTestEnvironment ? { performanceMetrics: {}, benchmarks: {}, alerts: [] } : usePerformanceAnalytics();\n  const { insights: automatedInsights, recommendations } = isTestEnvironment ? { insights: [], recommendations: [] } : useAutomatedInsights();\n\n  const handleRefresh = async() => {\n    setRefreshing(true);\n    try {\n      await generateReport();\n      setTimeout(() => setRefreshing(false), 1000);\n    } catch (_error) {\n      console.error('Error fetching insights:', _error);\n    }\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className=\"fixed inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center z-50 p-4\"\n    >\n      <SEOHead\n        title=\"Business Intelligence Analytics - FinanceAnalyst Pro\"\n        description=\"Advanced business intelligence, usage analytics, performance insights, and automated recommendations\"\n      />\n\n      <motion.div\n        initial={{ scale: 0.95 }}\n        animate={{ scale: 1 }}\n        className=\"bg-white rounded-xl shadow-2xl w-full max-w-7xl max-h-[95vh] overflow-hidden\"\n      >\n        {/* Header */}\n        <div className=\"bg-gradient-to-r from-purple-600 to-indigo-600 px-6 py-4 text-white\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <Brain className=\"w-6 h-6\" />\n              <div>\n                <h2 className=\"text-xl font-bold\">Business Intelligence</h2>\n                <p className=\"text-purple-200 text-sm\">Advanced analytics and automated insights</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <button onClick={handleRefresh} disabled={refreshing} className=\"p-2 bg-white bg-opacity-20 rounded-lg\">\n                <RefreshCw className={`w-4 h-4 ${refreshing ? 'animate-spin' : ''}`} />\n              </button>\n              <button onClick={() => exportData()} className=\"p-2 bg-white bg-opacity-20 rounded-lg\">\n                <Download className=\"w-4 h-4\" />\n              </button>\n              <button onClick={onClose} className=\"p-2 rounded-lg hover:bg-white hover:bg-opacity-10\">âœ•</button>\n            </div>\n          </div>\n        </div>\n\n        {/* Tabs */}\n        <div className=\"border-b border-gray-200 px-6\">\n          <div className=\"flex space-x-8\">\n            {[\n              { id: 'overview', label: 'Overview', icon: BarChart3 },\n              { id: 'usage', label: 'Usage', icon: Users },\n              { id: 'performance', label: 'Performance', icon: Activity },\n              { id: 'insights', label: 'AI Insights', icon: Lightbulb }\n            ].map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`flex items-center space-x-2 py-4 px-2 border-b-2 transition-colors ${\n                    activeTab === tab.id ? 'border-purple-500 text-purple-600' : 'border-transparent text-gray-500'\n                  }`}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span className=\"font-medium\">{tab.label}</span>\n                </button>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 overflow-y-auto max-h-[calc(95vh-200px)]\">\n          {/* Overview Tab */}\n          {activeTab === 'overview' && (\n            <div className=\"space-y-6\">\n              {/* Key Metrics */}\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <div className=\"bg-gradient-to-br from-blue-50 to-blue-100 rounded-lg p-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-blue-600 text-sm font-medium\">Total Users</p>\n                      <p className=\"text-2xl font-bold text-blue-900\">{usageMetrics.users?.toLocaleString() || '892'}</p>\n                      <p className=\"text-xs text-blue-600 flex items-center mt-1\">\n                        <ArrowUp className=\"w-3 h-3 mr-1\" />+12.5%\n                      </p>\n                    </div>\n                    <Users className=\"w-8 h-8 text-blue-500\" />\n                  </div>\n                </div>\n\n                <div className=\"bg-gradient-to-br from-green-50 to-green-100 rounded-lg p-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-green-600 text-sm font-medium\">Sessions</p>\n                      <p className=\"text-2xl font-bold text-green-900\">{usageMetrics.sessions?.toLocaleString() || '1,247'}</p>\n                      <p className=\"text-xs text-green-600 flex items-center mt-1\">\n                        <ArrowUp className=\"w-3 h-3 mr-1\" />+8.7%\n                      </p>\n                    </div>\n                    <Activity className=\"w-8 h-8 text-green-500\" />\n                  </div>\n                </div>\n\n                <div className=\"bg-gradient-to-br from-purple-50 to-purple-100 rounded-lg p-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-purple-600 text-sm font-medium\">Response Time</p>\n                      <p className=\"text-2xl font-bold text-purple-900\">{performanceMetrics.responseTime?.average || 284}ms</p>\n                      <p className=\"text-xs text-purple-600 flex items-center mt-1\">\n                        <ArrowDown className=\"w-3 h-3 mr-1\" />-5.2%\n                      </p>\n                    </div>\n                    <Zap className=\"w-8 h-8 text-purple-500\" />\n                  </div>\n                </div>\n\n                <div className=\"bg-gradient-to-br from-orange-50 to-orange-100 rounded-lg p-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-orange-600 text-sm font-medium\">Uptime</p>\n                      <p className=\"text-2xl font-bold text-orange-900\">{performanceMetrics.uptime || 99.87}%</p>\n                      <p className=\"text-xs text-orange-600 flex items-center mt-1\">\n                        <Minus className=\"w-3 h-3 mr-1\" />Stable\n                      </p>\n                    </div>\n                    <Target className=\"w-8 h-8 text-orange-500\" />\n                  </div>\n                </div>\n              </div>\n\n              {/* Insights & Recommendations */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Latest AI Insights</h3>\n                  <div className=\"space-y-4\">\n                    {automatedInsights.slice(0, 3).map((insight) => (\n                      <div key={insight.id} className=\"flex items-start space-x-3 p-4 bg-gray-50 rounded-lg\">\n                        <div\n                          className={`w-2 h-2 rounded-full mt-2 ${\n                            insight.impact === 'high' ? 'bg-red-500' : insight.impact === 'medium' ? 'bg-yellow-500' : 'bg-green-500'\n                          }`}\n                        />\n                        <div className=\"flex-1\">\n                          <h4 className=\"font-medium text-gray-900\">{insight.title}</h4>\n                          <p className=\"text-sm text-gray-600 mt-1\">{insight.description}</p>\n                          <div className=\"flex items-center space-x-4 mt-2 text-xs text-gray-500\">\n                            <span>Confidence: {Math.round(insight.confidence * 100)}%</span>\n                            <span>Impact: {insight.impact}</span>\n                          </div>\n                        </div>\n                        {insight.actionable && <CheckCircle className=\"w-5 h-5 text-green-500\" />}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Top Recommendations</h3>\n                  <div className=\"space-y-3\">\n                    {recommendations.slice(0, 4).map((rec) => (\n                      <div key={rec.id} className=\"flex items-center space-x-3\">\n                        <div className=\"flex-shrink-0 w-6 h-6 bg-purple-100 rounded-full flex items-center justify-center\">\n                          <span className=\"text-xs font-medium text-purple-600\">{rec.priority}</span>\n                        </div>\n                        <div className=\"flex-1\">\n                          <p className=\"text-sm font-medium text-gray-900\">{rec.title}</p>\n                          <p className=\"text-xs text-gray-500\">{rec.effort} effort â€¢ {rec.impact} impact</p>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Usage Analytics Tab */}\n          {activeTab === 'usage' && (\n            <div className=\"space-y-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Usage Analytics</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n                  <h4 className=\"font-medium text-gray-900 mb-4\">Engagement</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">Session Duration</span>\n                      <span className=\"text-sm font-medium\">31m</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">Pages/Session</span>\n                      <span className=\"text-sm font-medium\">4.2</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">Bounce Rate</span>\n                      <span className=\"text-sm font-medium\">24%</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n                  <h4 className=\"font-medium text-gray-900 mb-4\">Features</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">Portfolio Analysis</span>\n                      <span className=\"text-sm font-medium\">456</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">Risk Modeling</span>\n                      <span className=\"text-sm font-medium\">324</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">AI Analytics</span>\n                      <span className=\"text-sm font-medium\">234</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n                  <h4 className=\"font-medium text-gray-900 mb-4\">Growth</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">New Users</span>\n                      <span className=\"text-sm font-medium text-green-600\">+23.1%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">Active Users</span>\n                      <span className=\"text-sm font-medium text-green-600\">+15.3%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">Retention</span>\n                      <span className=\"text-sm font-medium text-blue-600\">68%</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Performance Tab */}\n          {activeTab === 'performance' && (\n            <div className=\"space-y-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Performance Analytics</h3>\n\n              {alerts?.length > 0 && (\n                <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                  <div className=\"flex items-center mb-3\">\n                    <AlertTriangle className=\"w-5 h-5 text-yellow-600 mr-2\" />\n                    <h4 className=\"font-medium text-yellow-800\">Performance Alerts</h4>\n                  </div>\n                  {alerts.map((alert) => (\n                    <div key={alert.id} className=\"text-sm text-yellow-700\">{alert.message}</div>\n                  ))}\n                </div>\n              )}\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n                  <h4 className=\"font-medium text-gray-900 mb-4\">Response Times</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">Average</span>\n                      <span className=\"text-sm font-medium\">284ms</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">95th Percentile</span>\n                      <span className=\"text-sm font-medium\">567ms</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">Error Rate</span>\n                      <span className=\"text-sm font-medium text-green-600\">0.23%</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n                  <h4 className=\"font-medium text-gray-900 mb-4\">Resources</h4>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">Memory Usage</span>\n                      <span className=\"text-sm font-medium\">67%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">CPU Usage</span>\n                      <span className=\"text-sm font-medium\">42%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-gray-600\">Throughput</span>\n                      <span className=\"text-sm font-medium\">1.2k req/min</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n                  <h4 className=\"font-medium text-gray-900 mb-4\">Benchmarks</h4>\n                  <div className=\"space-y-3\">\n                    {Object.entries(benchmarks).map(([metric, data]) => (\n                      <div key={metric} className=\"flex justify-between\">\n                        <span className=\"text-sm text-gray-600 capitalize\">{metric.replace('_', ' ')}</span>\n                        <span\n                          className={`text-sm font-medium ${\n                            data.status === 'excellent' ? 'text-green-600' : 'text-blue-600'\n                          }`}\n                        >{data.status}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* AI Insights Tab */}\n          {activeTab === 'insights' && (\n            <div className=\"space-y-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">AI-Powered Insights</h3>\n\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n                  <h4 className=\"font-medium text-gray-900 mb-4\">Automated Insights</h4>\n                  <div className=\"space-y-4\">\n                    {automatedInsights.map((insight) => (\n                      <div key={insight.id} className=\"border-l-4 border-purple-500 pl-4\">\n                        <h5 className=\"font-medium text-gray-900\">{insight.title}</h5>\n                        <p className=\"text-sm text-gray-600 mt-1\">{insight.description}</p>\n                        <div className=\"flex items-center space-x-4 mt-2 text-xs text-gray-500\">\n                          <span>Confidence: {Math.round(insight.confidence * 100)}%</span>\n                          <span\n                            className={`px-2 py-1 rounded-full ${\n                              insight.impact === 'high' ? 'bg-red-100 text-red-800' :\n                                insight.impact === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                                  'bg-green-100 text-green-800'\n                            }`}\n                          >{insight.impact} impact\n                          </span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"bg-white border border-gray-200 rounded-lg p-6\">\n                  <h4 className=\"font-medium text-gray-900 mb-4\">Smart Recommendations</h4>\n                  <div className=\"space-y-4\">\n                    {recommendations.map((rec) => (\n                      <div key={rec.id} className=\"flex items-start space-x-3 p-3 bg-gray-50 rounded-lg\">\n                        <div className=\"flex-shrink-0 w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center\">\n                          <span className=\"text-sm font-bold text-purple-600\">{rec.priority}</span>\n                        </div>\n                        <div className=\"flex-1\">\n                          <h5 className=\"font-medium text-gray-900\">{rec.title}</h5>\n                          <p className=\"text-sm text-gray-600 mt-1\">{rec.description}</p>\n                          <div className=\"flex items-center space-x-3 mt-2 text-xs text-gray-500\">\n                            <span className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded-full\">{rec.effort} effort</span>\n                            <span className=\"bg-green-100 text-green-800 px-2 py-1 rounded-full\">{rec.impact} impact</span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default BusinessIntelligenceDashboard;\n","/**\n * React Hook for Business Intelligence\n * Provides easy integration with BusinessIntelligenceService for React components\n */\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\n\nimport businessIntelligenceService from '../services/businessIntelligenceService';\n// import { performanceMonitoring } from '../utils/performanceMonitoring'; // Missing module\n\n/**\n * Main Business Intelligence hook\n */\nexport function useBusinessIntelligence(config = {}) {\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [analytics, setAnalytics] = useState({});\n  const [insights, setInsights] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [benchmarks, _setBenchmarks] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const initialized = useRef(false);\n\n  // Initialize Business Intelligence service\n  useEffect(() => {\n    if (initialized.current) return;\n\n    const initializeService = async() => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        await businessIntelligenceService.initialize(config);\n        setIsInitialized(true);\n        initialized.current = true;\n\n        // Track initialization success\n        if (typeof performanceMonitoring !== 'undefined') {\n          // performanceMonitoring.trackCustomMetric('bi_hook_init_success', 1);\n        }\n      } catch (err) {\n        setError(err.message);\n        console.error('Failed to initialize business intelligence:', err);\n\n        if (typeof performanceMonitoring !== 'undefined') {\n          // performanceMonitoring.trackCustomMetric('bi_hook_init_error', 1);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initializeService();\n\n    // Cleanup on unmount\n    return () => {\n      if (initialized.current) {\n        businessIntelligenceService.cleanup();\n        initialized.current = false;\n      }\n    };\n  }, []); // Remove config dependency to prevent re-initialization\n\n  // Set up event listeners\n  useEffect(() => {\n    if (!isInitialized) return;\n\n    const handleAutomatedReport = (report) => {\n      setReports(prev => [report, ...prev.slice(0, 19)]); // Keep last 20 reports\n    };\n\n    const handleIntelligentInsights = (newInsights) => {\n      setInsights(prev => [newInsights, ...prev.slice(0, 9)]); // Keep last 10 insights\n    };\n\n    const handleAnalyticsUpdate = (data) => {\n      setAnalytics(prev => ({ ...prev, ...data }));\n    };\n\n    // Add event listeners\n    businessIntelligenceService.on('automatedReportGenerated', handleAutomatedReport);\n    businessIntelligenceService.on('intelligentInsightsGenerated', handleIntelligentInsights);\n    businessIntelligenceService.on('analyticsUpdate', handleAnalyticsUpdate);\n\n    // Load initial data\n    const loadInitialData = async() => {\n      try {\n        const currentAnalytics = businessIntelligenceService.getCurrentAnalytics();\n        setAnalytics(currentAnalytics);\n\n        const actionableInsights = businessIntelligenceService.getActionableInsights();\n        setInsights([{ insights: actionableInsights, timestamp: Date.now() }]);\n      } catch (err) {\n        console.error('Failed to load initial BI data:', err);\n      }\n    };\n\n    loadInitialData();\n\n    // Cleanup listeners\n    return () => {\n      businessIntelligenceService.off('automatedReportGenerated', handleAutomatedReport);\n      businessIntelligenceService.off('intelligentInsightsGenerated', handleIntelligentInsights);\n      businessIntelligenceService.off('analyticsUpdate', handleAnalyticsUpdate);\n    };\n  }, [isInitialized]);\n\n  // Track page view\n  const trackPageView = useCallback((page, metadata = {}) => {\n    if (isInitialized && businessIntelligenceService.trackPageView) {\n      businessIntelligenceService.trackPageView(page, metadata);\n    }\n  }, [isInitialized]);\n\n  // Track feature usage\n  const trackFeatureUsage = useCallback((feature, action, metadata = {}) => {\n    if (isInitialized && businessIntelligenceService.trackFeatureUsage) {\n      businessIntelligenceService.trackFeatureUsage(feature, action, metadata);\n    }\n  }, [isInitialized]);\n\n  // Track user interaction\n  const trackUserInteraction = useCallback((interaction, target, metadata = {}) => {\n    if (isInitialized && businessIntelligenceService.trackUserInteraction) {\n      businessIntelligenceService.trackUserInteraction(interaction, target, metadata);\n    }\n  }, [isInitialized]);\n\n  // Generate report on demand\n  const generateReport = useCallback(async() => {\n    if (!isInitialized) return null;\n\n    try {\n      setIsLoading(true);\n      const report = await businessIntelligenceService.generateAutomatedReports();\n      return report;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [isInitialized]);\n\n  // Get historical trends\n  const getHistoricalTrends = useCallback((metric, period = '30d') => {\n    if (!isInitialized) return [];\n\n    return businessIntelligenceService.getHistoricalTrends(metric, period);\n  }, [isInitialized]);\n\n  // Export data\n  const exportData = useCallback((format = 'json', filters = {}) => {\n    if (!isInitialized) return null;\n\n    return businessIntelligenceService.exportData(format, filters);\n  }, [isInitialized]);\n\n  return {\n    isInitialized,\n    analytics,\n    insights,\n    reports,\n    benchmarks,\n    isLoading,\n    error,\n    trackPageView,\n    trackFeatureUsage,\n    trackUserInteraction,\n    generateReport,\n    getHistoricalTrends,\n    exportData\n  };\n}\n\n/**\n * Hook for usage analytics\n */\nexport function useUsageAnalytics() {\n  const [usageMetrics, setUsageMetrics] = useState({\n    sessions: 0,\n    users: 0,\n    pageViews: 0,\n    features: {},\n    engagement: {}\n  });\n  const [trends, setTrends] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const loadUsageData = async() => {\n      setIsLoading(true);\n      try {\n        // Simulate loading usage analytics\n        const mockUsageData = {\n          sessions: 1247,\n          users: 892,\n          pageViews: 5673,\n          features: {\n            'portfolio_analysis': 456,\n            'risk_modeling': 324,\n            'market_data': 789,\n            'ai_analytics': 234,\n            'collaboration': 123\n          },\n          engagement: {\n            avgSessionDuration: 1856, // seconds\n            bounceRate: 0.24,\n            pagesPerSession: 4.2,\n            returnRate: 0.68\n          }\n        };\n\n        const mockTrends = Array.from({ length: 30 }, (_, i) => ({\n          date: new Date(Date.now() - (29 - i) * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n          sessions: Math.floor(40 + Math.random() * 20 + Math.sin(i / 7) * 10),\n          users: Math.floor(30 + Math.random() * 15 + Math.sin(i / 7) * 8),\n          engagement: 0.6 + Math.random() * 0.3 + Math.sin(i / 7) * 0.1\n        }));\n\n        setUsageMetrics(mockUsageData);\n        setTrends(mockTrends);\n      } catch (error) {\n        console.error('Failed to load usage analytics:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadUsageData();\n  }, []);\n\n  return {\n    usageMetrics,\n    trends,\n    isLoading\n  };\n}\n\n/**\n * Hook for performance analytics\n */\nexport function usePerformanceAnalytics() {\n  const [performanceMetrics, setPerformanceMetrics] = useState({});\n  const [benchmarks, setBenchmarks] = useState({});\n  const [alerts, setAlerts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const loadPerformanceData = async() => {\n      setIsLoading(true);\n      try {\n        // Simulate loading performance analytics\n        const mockPerformanceData = {\n          responseTime: {\n            average: 284,\n            p95: 567,\n            p99: 892\n          },\n          errorRate: 0.0023,\n          uptime: 99.87,\n          throughput: 1247,\n          memoryUsage: 67.3,\n          cpuUsage: 42.1\n        };\n\n        const mockBenchmarks = {\n          responseTime: { target: 300, current: 284, status: 'good' },\n          errorRate: { target: 0.005, current: 0.0023, status: 'excellent' },\n          uptime: { target: 99.5, current: 99.87, status: 'excellent' }\n        };\n\n        const mockAlerts = [\n          {\n            id: 'alert_1',\n            type: 'warning',\n            metric: 'response_time',\n            message: 'Response time increased by 15% in the last hour',\n            timestamp: Date.now() - 3600000,\n            severity: 'medium'\n          }\n        ];\n\n        setPerformanceMetrics(mockPerformanceData);\n        setBenchmarks(mockBenchmarks);\n        setAlerts(mockAlerts);\n      } catch (error) {\n        console.error('Failed to load performance analytics:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadPerformanceData();\n  }, []);\n\n  return {\n    performanceMetrics,\n    benchmarks,\n    alerts,\n    isLoading\n  };\n}\n\n/**\n * Hook for market intelligence\n */\nexport function useMarketIntelligence() {\n  const [marketData, setMarketData] = useState({});\n  const [trends, setTrends] = useState([]);\n  const [signals, setSignals] = useState([]);\n  const [correlations, setCorrelations] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const loadMarketIntelligence = async() => {\n      setIsLoading(true);\n      try {\n        // Simulate loading market intelligence\n        const mockMarketData = {\n          sentiment: 0.67, // 0-1 scale\n          volatility: 0.23,\n          trendStrength: 0.78,\n          volume: 1.34, // relative to average\n          momentum: 0.45\n        };\n\n        const mockTrends = [\n          { symbol: 'AAPL', trend: 'bullish', strength: 0.78, duration: '5 days' },\n          { symbol: 'GOOGL', trend: 'bearish', strength: 0.56, duration: '2 days' },\n          { symbol: 'MSFT', trend: 'neutral', strength: 0.34, duration: '1 day' }\n        ];\n\n        const mockSignals = [\n          {\n            type: 'buy',\n            symbol: 'TSLA',\n            confidence: 0.72,\n            reason: 'Golden cross pattern detected',\n            timestamp: Date.now() - 1800000\n          },\n          {\n            type: 'sell',\n            symbol: 'NVDA',\n            confidence: 0.64,\n            reason: 'Overbought conditions',\n            timestamp: Date.now() - 3600000\n          }\n        ];\n\n        const mockCorrelations = [\n          { assets: ['SPY', 'QQQ'], correlation: 0.89, period: '30d' },\n          { assets: ['GLD', 'USD'], correlation: -0.67, period: '30d' },\n          { assets: ['BTC', 'TECH'], correlation: 0.45, period: '30d' }\n        ];\n\n        setMarketData(mockMarketData);\n        setTrends(mockTrends);\n        setSignals(mockSignals);\n        setCorrelations(mockCorrelations);\n      } catch (error) {\n        console.error('Failed to load market intelligence:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadMarketIntelligence();\n  }, []);\n\n  return {\n    marketData,\n    trends,\n    signals,\n    correlations,\n    isLoading\n  };\n}\n\n/**\n * Hook for user behavior analytics\n */\nexport function useUserBehaviorAnalytics() {\n  const [behaviorMetrics, setBehaviorMetrics] = useState({});\n  const [userSegments, setUserSegments] = useState([]);\n  const [journeyAnalysis, setJourneyAnalysis] = useState({});\n  const [churnRisk, setChurnRisk] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const loadBehaviorData = async() => {\n      setIsLoading(true);\n      try {\n        // Simulate loading behavior analytics\n        const mockBehaviorMetrics = {\n          avgSessionDuration: 1856,\n          pagesPerSession: 4.2,\n          bounceRate: 0.24,\n          returnVisitorRate: 0.68,\n          conversionRate: 0.034,\n          featureAdoptionRate: 0.67\n        };\n\n        const mockUserSegments = [\n          { name: 'Power Users', count: 156, engagement: 'high', retention: 0.92 },\n          { name: 'Regular Users', count: 423, engagement: 'medium', retention: 0.74 },\n          { name: 'New Users', count: 234, engagement: 'low', retention: 0.45 },\n          { name: 'At Risk', count: 67, engagement: 'declining', retention: 0.23 }\n        ];\n\n        const mockJourneyAnalysis = {\n          commonPaths: [\n            ['login', 'dashboard', 'portfolio', 'analysis'],\n            ['login', 'market_data', 'charts', 'alerts'],\n            ['login', 'collaboration', 'workspace', 'models']\n          ],\n          dropoffPoints: [\n            { step: 'registration', rate: 0.23 },\n            { step: 'first_analysis', rate: 0.18 },\n            { step: 'model_creation', rate: 0.15 }\n          ],\n          conversionFunnels: {\n            'trial_to_paid': 0.12,\n            'visitor_to_signup': 0.08,\n            'signup_to_active': 0.67\n          }\n        };\n\n        const mockChurnRisk = [\n          { userId: 'user_123', risk: 0.78, lastActive: '2 weeks ago', reason: 'low_engagement' },\n          { userId: 'user_456', risk: 0.65, lastActive: '1 week ago', reason: 'feature_abandonment' },\n          { userId: 'user_789', risk: 0.72, lastActive: '10 days ago', reason: 'support_issues' }\n        ];\n\n        setBehaviorMetrics(mockBehaviorMetrics);\n        setUserSegments(mockUserSegments);\n        setJourneyAnalysis(mockJourneyAnalysis);\n        setChurnRisk(mockChurnRisk);\n      } catch (error) {\n        console.error('Failed to load behavior analytics:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadBehaviorData();\n  }, []);\n\n  return {\n    behaviorMetrics,\n    userSegments,\n    journeyAnalysis,\n    churnRisk,\n    isLoading\n  };\n}\n\n/**\n * Hook for automated insights\n */\nexport function useAutomatedInsights() {\n  const [insights, setInsights] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n  const [predictions, setPredictions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const loadInsights = async() => {\n      setIsLoading(true);\n      try {\n        // Simulate loading automated insights\n        const mockInsights = [\n          {\n            id: 'insight_1',\n            type: 'performance',\n            title: 'Response Time Optimization Opportunity',\n            description: 'API response times can be improved by 23% through query optimization',\n            impact: 'high',\n            confidence: 0.87,\n            actionable: true,\n            timestamp: Date.now() - 3600000\n          },\n          {\n            id: 'insight_2',\n            type: 'user_behavior',\n            title: 'Feature Adoption Pattern',\n            description: 'Users who complete portfolio analysis are 3x more likely to upgrade',\n            impact: 'medium',\n            confidence: 0.92,\n            actionable: true,\n            timestamp: Date.now() - 7200000\n          },\n          {\n            id: 'insight_3',\n            type: 'market',\n            title: 'Correlation Anomaly Detected',\n            description: 'Unusual correlation between tech stocks and commodities detected',\n            impact: 'medium',\n            confidence: 0.74,\n            actionable: false,\n            timestamp: Date.now() - 10800000\n          }\n        ];\n\n        const mockRecommendations = [\n          {\n            id: 'rec_1',\n            category: 'performance',\n            title: 'Implement Database Indexing',\n            description: 'Add composite indexes on frequently queried columns',\n            effort: 'medium',\n            impact: 'high',\n            priority: 9\n          },\n          {\n            id: 'rec_2',\n            category: 'user_experience',\n            title: 'Streamline Onboarding Flow',\n            description: 'Reduce registration steps from 5 to 3',\n            effort: 'low',\n            impact: 'medium',\n            priority: 7\n          },\n          {\n            id: 'rec_3',\n            category: 'feature',\n            title: 'Add Portfolio Comparison Tool',\n            description: 'Enable side-by-side portfolio performance comparison',\n            effort: 'high',\n            impact: 'high',\n            priority: 8\n          }\n        ];\n\n        const mockPredictions = [\n          {\n            metric: 'user_growth',\n            timeframe: '30d',\n            prediction: 15.7, // % growth\n            confidence: 0.84,\n            factors: ['seasonal_trends', 'marketing_campaign', 'feature_releases']\n          },\n          {\n            metric: 'churn_rate',\n            timeframe: '30d',\n            prediction: 4.2, // % churn\n            confidence: 0.76,\n            factors: ['engagement_decline', 'support_tickets', 'usage_patterns']\n          },\n          {\n            metric: 'revenue',\n            timeframe: '90d',\n            prediction: 23.4, // % increase\n            confidence: 0.69,\n            factors: ['user_growth', 'conversion_rate', 'market_conditions']\n          }\n        ];\n\n        setInsights(mockInsights);\n        setRecommendations(mockRecommendations);\n        setPredictions(mockPredictions);\n      } catch (error) {\n        console.error('Failed to load automated insights:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadInsights();\n  }, []);\n\n  return {\n    insights,\n    recommendations,\n    predictions,\n    isLoading\n  };\n}\n\nexport default useBusinessIntelligence;\n","import React from 'react';\n\nconst SkipLink = ({ href = '#main-content', children = 'Skip to main content' }) => {\n  return (\n    <a\n      href={href}\n      className=\"\n        sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4\n        bg-primary text-primary-foreground px-4 py-2 rounded-md z-[9999]\n        font-medium shadow-lg transition-all duration-200\n        focus:outline-2 focus:outline-blue-500 focus:outline-offset-2\n      \"\n    >\n      {children}\n    </a>\n  );\n};\n\nexport default SkipLink;\n","import { Menu, X } from 'lucide-react';\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Icon from '../AppIcon';\nimport BusinessIntelligenceDashboard from '../BusinessIntelligence/BusinessIntelligenceDashboard';\n\nimport Button from './Button';\nimport { useKeyboardShortcutsContext } from './KeyboardShortcutsProvider';\nimport SecondaryNav from './SecondaryNav';\nimport SkipLink from './SkipLink';\n\n\nconst Header = () => {\n  const location = useLocation();\n  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isBiDashboardOpen, setIsBiDashboardOpen] = useState(false);\n  const { showCommandPalette, updateCommandContext } = useKeyboardShortcutsContext();\n  const isMac = typeof navigator !== 'undefined'\n    ? /(Mac|iPhone|iPod|iPad)/i.test((navigator.platform || ''))\n    : true;\n  const cmdHint = isMac ? 'âŒ˜K' : 'Ctrl+K';\n\n  const navigationTabs = [\n    {\n      id: 'workspace',\n      label: 'Workspace',\n      path: '/financial-model-workspace',\n      tooltip: 'Primary financial modeling environment with terminal interface and formula builder',\n      isPrimary: true\n    },\n    {\n      id: 'portfolio-management',\n      label: 'Portfolio',\n      path: '/portfolio-management',\n      tooltip: 'Comprehensive portfolio management dashboard with real-time tracking and analytics',\n      isPrimary: true\n    },\n    {\n      id: 'ai-insights',\n      label: 'AI Insights',\n      path: '/ai-insights',\n      tooltip: 'AI-powered financial analysis and intelligent investment recommendations',\n      isPrimary: true\n    },\n    {\n      id: 'private-analysis',\n      label: 'Private Analysis',\n      path: '/private-analysis',\n      tooltip: 'Manual financial data input and sophisticated modeling with spreadsheet-style interface',\n      isPrimary: true\n    }\n  ];\n\n  const secondaryTabs = [\n    {\n      id: 'valuation-workbench',\n      label: 'Valuation Workbench',\n      path: '/valuation-workbench',\n      tooltip: 'World-class DCF valuation studio with sensitivity analysis, Monte Carlo, and scenario modeling'\n    },\n    {\n      id: 'model-lab',\n      label: 'Model Lab',\n      path: '/model-lab',\n      tooltip: 'Reusable model library with DCF, LBO, Comps, and EPV templates for quick financial modeling'\n    },\n    {\n      id: 'canvas',\n      label: 'Canvas',\n      path: '/canvas',\n      tooltip: 'Interactive investment thesis builder and visualization canvas for strategic analysis'\n    },\n    {\n      id: 'advanced-charts',\n      label: 'Advanced Charts',\n      path: '/advanced-charts',\n      tooltip: 'Professional-grade charting and data visualization with real-time updates and customizable dashboards'\n    },\n    {\n      id: 'market-analysis',\n      label: 'Market Analysis',\n      path: '/market-analysis',\n      tooltip: 'Real-time market data analysis with live price feeds and comprehensive market intelligence'\n    },\n    {\n      id: 'reports',\n      label: 'Reports',\n      path: '/reports',\n      tooltip: 'Generate professional investment reports and IC memos with customizable templates'\n    },\n    {\n      id: 'ai-insights',\n      label: 'AI Insights',\n      path: '/ai-insights',\n      tooltip: 'AI-powered financial analysis and intelligent investment recommendations'\n    },\n    {\n      id: 'analytics',\n      label: 'Analytics',\n      path: '/analytics',\n      tooltip: 'Platform usage analytics, performance monitoring, and business intelligence'\n    },\n    {\n      id: 'advanced-analytics',\n      label: 'Advanced Analytics',\n      path: '/advanced-analytics',\n      tooltip: 'Professional-grade pricing models and risk analytics for complex financial instruments'\n    },\n    {\n      id: 'valuation-tools',\n      label: 'Valuation Tools',\n      path: '/valuation-tool',\n      tooltip: 'Professional DCF, LBO, and comparative valuation tools',\n      isSubmenu: true,\n      submenu: [\n        { id: 'valuation-tool', label: 'Valuation Tool', path: '/valuation-tool' },\n        { id: 'valuation-docs', label: 'Documentation', path: '/valuation-tool/docs' },\n        { id: 'valuation-demo', label: 'Demo', path: '/valuation-tool/demo' }\n      ]\n    },\n    {\n      id: 'settings',\n      label: 'Settings',\n      path: '/settings',\n      tooltip: 'Configure preferences, security settings, and platform customizations'\n    }\n  ];\n\n  const quickActions = [\n    { id: 'export', icon: 'Download', label: 'Export' },\n    { id: 'share', icon: 'Share2', label: 'Share' },\n    { id: 'template', icon: 'FileTemplate', label: 'Template' }\n  ];\n\n  const getActiveTab = () => {\n    return navigationTabs.find(tab => location.pathname === tab.path);\n  };\n\n  const getDataSyncStatus = () => {\n    return {\n      status: 'connected',\n      lastUpdate: '2 min ago',\n      sources: {\n        bloomberg: 'connected',\n        factset: 'connected',\n        refinitiv: 'warning'\n      }\n    };\n  };\n\n  const getModelState = () => {\n    return {\n      name: 'DCF_Analysis_v2.3',\n      saved: true,\n      calculating: false,\n      version: '2.3'\n    };\n  };\n\n  const dataSyncStatus = getDataSyncStatus();\n  const modelState = getModelState();\n  const _activeTab = getActiveTab();\n\n  // Publish basic context for command palette suggestions\n  useEffect(() => {\n    updateCommandContext({\n      route: location.pathname,\n      activeTab: _activeTab?.id || null\n    });\n  }, [location.pathname, _activeTab?.id]); // Removed updateCommandContext dependency to prevent infinite re-renders\n\n  return (\n    <>\n      <SkipLink />\n      <BusinessIntelligenceDashboard isVisible={isBiDashboardOpen} onClose={() => setIsBiDashboardOpen(false)} />\n      <header className=\"fixed top-0 left-0 right-0 z-[1000] bg-card border-b border-border h-[60px]\" role=\"banner\">\n        <div className=\"flex items-center justify-between h-full px-4 sm:px-6\">\n          {/* Logo */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-primary rounded-lg flex items-center justify-center\">\n                <Icon\n                  name=\"TrendingUp\" size={16} color=\"white\"\n                  className=\"sm:w-5 sm:h-5\"\n                />\n              </div>\n              <span className=\"text-lg sm:text-xl font-semibold text-foreground\">\n                <span className=\"hidden sm:inline\">FinanceAnalyst Pro</span>\n                <span className=\"sm:hidden\">FinanceAnalyst</span>\n              </span>\n            </div>\n          </div>\n\n          {/* Mobile Menu Button */}\n          <button\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n            className=\"lg:hidden flex items-center justify-center w-10 h-10 rounded-lg text-muted-foreground hover:text-foreground hover:bg-muted focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2\"\n            aria-label=\"Toggle mobile menu\"\n            aria-expanded={isMobileMenuOpen}\n          >\n            {isMobileMenuOpen ? <X size={20} /> : <Menu size={20} />}\n          </button>\n\n          {/* Desktop Navigation */}\n          <nav className=\"hidden lg:flex items-center ml-8 space-x-1\" role=\"navigation\" aria-label=\"Main navigation\">\n            {navigationTabs.map(tab => (\n              <Link\n                key={tab.id}\n                to={tab.path}\n                className={`\n                relative px-6 py-3 text-sm font-medium transition-smooth rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2\n                ${\n              location.pathname === tab.path\n                ? 'bg-primary text-primary-foreground'\n                : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n              }\n              `}\n                title={tab.tooltip}\n                aria-current={location.pathname === tab.path ? 'page' : undefined}\n              >\n                {tab.label}\n                {location.pathname === tab.path && (\n                  <div className=\"absolute bottom-0 left-1/2 transform -translate-x-1/2 w-1 h-1 bg-primary-foreground rounded-full\" />\n                )}\n              </Link>\n            ))}\n          </nav>\n          <SecondaryNav\n            variant=\"dropdown\"\n            items={secondaryTabs}\n            className=\"ml-2 hidden lg:block\"\n            ariaLabel=\"Advanced tools\"\n          />\n\n          {/* Desktop Right Side */}\n          <div className=\"hidden lg:flex items-center ml-auto space-x-4\">\n            {/* Command Palette Trigger */}\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              iconName=\"Command\"\n              className=\"text-muted-foreground hover:text-foreground\"\n              title={`Command Palette (${cmdHint})`}\n              onClick={showCommandPalette}\n            >\n              <span className=\"sr-only\">Open Command Palette</span>\n              <span className=\"ml-1 hidden xl:inline text-xs text-muted-foreground\">{cmdHint}</span>\n            </Button>\n\n            {/* Model State Indicator */}\n            <div className=\"flex items-center px-3 py-1 bg-muted rounded-lg\">\n              <div className=\"flex items-center space-x-2\">\n                <div\n                  className={`w-2 h-2 rounded-full ${modelState.saved ? 'bg-success' : 'bg-warning'}`}\n                />\n                <span className=\"text-sm font-mono text-muted-foreground\">{modelState.name}</span>\n                <span className=\"text-xs text-muted-foreground\">v{modelState.version}</span>\n              </div>\n            </div>\n            {/* Data Sync Status */}\n            <div className=\"flex items-center space-x-2 px-3 py-1 bg-muted rounded-lg\">\n              <div\n                className={`w-2 h-2 rounded-full ${\n                  dataSyncStatus.status === 'connected'\n                    ? 'bg-success'\n                    : dataSyncStatus.status === 'warning'\n                      ? 'bg-warning'\n                      : 'bg-error'\n                }`}\n              />\n              <span className=\"text-xs text-muted-foreground\">Data: {dataSyncStatus.lastUpdate}</span>\n              <Icon name=\"Wifi\" size={14} className=\"text-muted-foreground\" />\n            </div>\n\n            {/* Quick Actions */}\n            <div className=\"flex items-center space-x-1\">\n              {quickActions.map(action => (\n                <Button\n                  key={action.id}\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  iconName={action.icon}\n                  className=\"text-muted-foreground hover:text-foreground\"\n                  title={action.label}\n                >\n                  <span className=\"sr-only\">{action.label}</span>\n                </Button>\n              ))}\n            </div>\n\n            {/* BI Dashboard Button */}\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              iconName=\"BarChart3\"\n              className=\"text-muted-foreground hover:text-foreground\"\n              title=\"Business Intelligence\"\n              onClick={() => setIsBiDashboardOpen(true)}\n            >\n              <span className=\"sr-only\">Business Intelligence</span>\n            </Button>\n\n            {/* User Context Panel */}\n            <div className=\"relative\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setIsUserMenuOpen(!isUserMenuOpen)}\n                className=\"flex items-center space-x-2 text-muted-foreground hover:text-foreground\"\n              >\n                <div className=\"w-8 h-8 bg-secondary rounded-full flex items-center justify-center\">\n                  <Icon name=\"User\" size={16} color=\"white\" />\n                </div>\n                <div className=\"hidden md:flex flex-col items-start\">\n                  <span className=\"text-sm font-medium\">Senior Analyst</span>\n                  <span className=\"text-xs text-muted-foreground\">Active Session</span>\n                </div>\n                <Icon name=\"ChevronDown\" size={16} />\n              </Button>\n\n              {/* User Dropdown */}\n              {isUserMenuOpen && (\n                <div className=\"absolute right-0 top-full mt-2 w-64 bg-popover border border-border rounded-lg shadow-elevation-2 z-[1100]\">\n                  <div className=\"p-4 border-b border-border\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-10 h-10 bg-secondary rounded-full flex items-center justify-center\">\n                        <Icon name=\"User\" size={20} color=\"white\" />\n                      </div>\n                      <div>\n                        <p className=\"font-medium text-popover-foreground\">John Anderson</p>\n                        <p className=\"text-sm text-muted-foreground\">Senior Investment Analyst</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"p-2\">\n                    <div className=\"space-y-1\">\n                      <button className=\"w-full text-left px-3 py-2 text-sm text-popover-foreground hover:bg-muted rounded-md transition-smooth\">\n                        Profile Settings\n                      </button>\n                      <button className=\"w-full text-left px-3 py-2 text-sm text-popover-foreground hover:bg-muted rounded-md transition-smooth\">\n                        Permissions\n                      </button>\n                      <button className=\"w-full text-left px-3 py-2 text-sm text-popover-foreground hover:bg-muted rounded-md transition-smooth\">\n                        Active Collaborators (3)\n                      </button>\n                      <div className=\"border-t border-border my-1\" />\n                      <button className=\"w-full text-left px-3 py-2 text-sm text-destructive hover:bg-muted rounded-md transition-smooth\">\n                        Sign Out\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Mobile Navigation Menu */}\n        {isMobileMenuOpen && (\n          <div className=\"lg:hidden absolute top-[60px] left-0 right-0 bg-card border-b border-border shadow-lg z-50\">\n            <nav className=\"px-4 py-2\" role=\"navigation\" aria-label=\"Mobile navigation\">\n              <div className=\"space-y-1\">\n                {navigationTabs.map(tab => (\n                  <Link\n                    key={tab.id}\n                    to={tab.path}\n                    onClick={() => setIsMobileMenuOpen(false)}\n                    className={`\n                      block px-4 py-3 text-sm font-medium rounded-lg transition-smooth focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2\n                      ${\n                  location.pathname === tab.path\n                    ? 'bg-primary text-primary-foreground'\n                    : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n                  }\n                    `}\n                    aria-current={location.pathname === tab.path ? 'page' : undefined}\n                  >\n                    {tab.label}\n                  </Link>\n                ))}\n              </div>\n\n              {/* Command Palette Quick Access */}\n              <div className=\"mt-3\">\n                <button\n                  onClick={() => {\n                    setIsMobileMenuOpen(false); showCommandPalette();\n                  }}\n                  className=\"w-full flex items-center px-4 py-3 text-sm font-medium rounded-lg transition-smooth text-foreground bg-muted hover:bg-muted/80 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2\"\n                >\n                  <Icon name=\"Command\" size={16} className=\"mr-2\" />\n                  <span>Open Command Palette</span>\n                  <span className=\"ml-auto text-xs text-muted-foreground\">{cmdHint}</span>\n                </button>\n              </div>\n\n              {/* Advanced Tools (Secondary Navigation) */}\n              <div className=\"mt-4 pt-4 border-t border-border\">\n                <div className=\"px-4 pb-2 text-xs font-semibold text-muted-foreground uppercase tracking-wide\">Advanced Tools</div>\n                <div className=\"space-y-1\">\n                  {secondaryTabs.map(item => (\n                    <Link\n                      key={item.id}\n                      to={item.path}\n                      onClick={() => setIsMobileMenuOpen(false)}\n                      className={`\n                        block px-4 py-3 text-sm font-medium rounded-lg transition-smooth focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2\n                        ${\n                    location.pathname === item.path\n                      ? 'bg-muted text-foreground'\n                      : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n                    }\n                      `}\n                      aria-current={location.pathname === item.path ? 'page' : undefined}\n                      title={item.tooltip}\n                    >\n                      {item.label}\n                    </Link>\n                  ))}\n                </div>\n              </div>\n\n              {/* Mobile Status Indicators */}\n              <div className=\"mt-4 pt-4 border-t border-border space-y-3\">\n                <div className=\"flex items-center justify-between px-4 py-2 bg-muted rounded-lg\">\n                  <span className=\"text-xs text-muted-foreground\">Model Status</span>\n                  <div className=\"flex items-center space-x-2\">\n                    <div className={`w-2 h-2 rounded-full ${modelState.saved ? 'bg-success' : 'bg-warning'}`} />\n                    <span className=\"text-xs font-mono text-muted-foreground\">{modelState.name}</span>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center justify-between px-4 py-2 bg-muted rounded-lg\">\n                  <span className=\"text-xs text-muted-foreground\">Data Sync</span>\n                  <div className=\"flex items-center space-x-2\">\n                    <div\n                      className={`w-2 h-2 rounded-full ${\n                        dataSyncStatus.status === 'connected' ? 'bg-success' :\n                          dataSyncStatus.status === 'warning' ? 'bg-warning' : 'bg-error'\n                      }`}\n                    />\n                    <span className=\"text-xs text-muted-foreground\">{dataSyncStatus.lastUpdate}</span>\n                  </div>\n                </div>\n              </div>\n            </nav>\n          </div>\n        )}\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n"],"names":["BusinessIntelligenceDashboard","isVisible","onClose","activeTab","setActiveTab","useState","refreshing","setRefreshing","isTestEnvironment","window","navigator","webdriver","location","search","includes","generateReport","exportData","config","isInitialized","setIsInitialized","analytics","setAnalytics","insights","setInsights","reports","setReports","benchmarks","_setBenchmarks","isLoading","setIsLoading","error","setError","initialized","useRef","useEffect","current","async","businessIntelligenceService","initialize","err","message","initializeService","cleanup","handleAutomatedReport","report","prev","slice","handleIntelligentInsights","newInsights","handleAnalyticsUpdate","data","on","currentAnalytics","getCurrentAnalytics","actionableInsights","getActionableInsights","timestamp","Date","now","loadInitialData","off","trackPageView","useCallback","page","metadata","trackFeatureUsage","feature","action","trackUserInteraction","interaction","target","generateAutomatedReports","getHistoricalTrends","metric","period","format","filters","useBusinessIntelligence","usageMetrics","setUsageMetrics","sessions","users","pageViews","features","engagement","trends","setTrends","mockUsageData","portfolio_analysis","risk_modeling","market_data","ai_analytics","collaboration","avgSessionDuration","bounceRate","pagesPerSession","returnRate","mockTrends","Array","from","length","_","i","date","toISOString","split","Math","floor","random","sin","loadUsageData","useUsageAnalytics","performanceMetrics","alerts","setPerformanceMetrics","setBenchmarks","setAlerts","mockPerformanceData","responseTime","average","p95","p99","errorRate","uptime","throughput","memoryUsage","cpuUsage","mockBenchmarks","status","mockAlerts","id","type","severity","loadPerformanceData","usePerformanceAnalytics","automatedInsights","recommendations","setRecommendations","predictions","setPredictions","mockInsights","title","description","impact","confidence","actionable","mockRecommendations","category","effort","priority","mockPredictions","timeframe","prediction","factors","loadInsights","useAutomatedInsights","jsxs","motion","div","initial","opacity","y","animate","className","children","jsx","SEOHead","scale","Brain","onClick","setTimeout","_error","disabled","RefreshCw","Download","label","icon","BarChart3","Users","Activity","Lightbulb","map","tab","Icon","toLocaleString","ArrowUp","ArrowDown","Zap","Minus","Target","insight","round","CheckCircle","rec","AlertTriangle","alert","Object","entries","replace","SkipLink","href","Header","useLocation","isUserMenuOpen","setIsUserMenuOpen","isMobileMenuOpen","setIsMobileMenuOpen","isBiDashboardOpen","setIsBiDashboardOpen","showCommandPalette","updateCommandContext","useKeyboardShortcutsContext","cmdHint","test","platform","navigationTabs","path","tooltip","isPrimary","secondaryTabs","isSubmenu","submenu","dataSyncStatus","modelState","_activeTab","find","pathname","route","Fragment","role","name","size","color","X","Menu","Link","to","SecondaryNav","variant","items","ariaLabel","Button","iconName","item"],"mappings":"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"}