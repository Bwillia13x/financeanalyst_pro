{"version":3,"file":"advanced-analytics-BnJTTEAv.js","sources":["../../src/components/AppIcon.jsx","../../src/utils/cn.js","../../src/components/ui/Button.jsx","../../src/components/ErrorBoundary/ProductionErrorBoundary.jsx","../../src/components/ui/Card.jsx","../../src/components/ui/Input.jsx","../../src/components/ui/Select.jsx","../../src/components/AdvancedAnalytics/OptionsPricing.jsx","../../src/components/AdvancedAnalytics/FixedIncomeAnalytics.jsx","../../src/components/AdvancedAnalytics/CreditModeling.jsx","../../src/components/AdvancedAnalytics/DerivativesModeling.jsx","../../src/pages/AdvancedAnalytics.jsx"],"sourcesContent":["import * as LucideIcons from 'lucide-react';\nimport { HelpCircle } from 'lucide-react';\nimport PropTypes from 'prop-types';\n\nfunction Icon({\n  name,\n  size = 24,\n  color = 'currentColor',\n  className = '',\n  strokeWidth = 2,\n  ...props\n}) {\n  const IconComponent = LucideIcons[name];\n\n  if (!IconComponent) {\n    return (\n      <HelpCircle\n        size={size}\n        color=\"gray\"\n        strokeWidth={strokeWidth}\n        className={className}\n        {...props}\n      />\n    );\n  }\n\n  return (\n    <IconComponent\n      size={size}\n      color={color}\n      strokeWidth={strokeWidth}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  strokeWidth: PropTypes.number\n};\n\nexport default Icon;\n","import { clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n","import { Slot } from '@radix-ui/react-slot';\nimport { cva } from 'class-variance-authority';\nimport React from 'react';\n\nimport { cn } from '../../utils/cn';\nimport Icon from '../AppIcon';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-smooth focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 active:scale-95',\n  {\n    variants: {\n      variant: {\n        primary: 'bg-primary text-primary-foreground hover:bg-primary/90 shadow-sm hover:shadow',\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90 shadow-sm hover:shadow',\n        destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90 shadow-sm hover:shadow',\n        outline: 'border border-border bg-background hover:bg-muted hover:text-foreground shadow-sm',\n        secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/90 shadow-sm hover:shadow',\n        ghost: 'hover:bg-muted hover:text-foreground',\n        link: 'text-primary underline-offset-4 hover:underline p-0 h-auto',\n        success: 'bg-success text-success-foreground hover:bg-success/90 shadow-sm hover:shadow',\n        warning: 'bg-warning text-warning-foreground hover:bg-warning/90 shadow-sm hover:shadow',\n        danger: 'bg-error text-error-foreground hover:bg-error/90 shadow-sm hover:shadow',\n        minimal: 'text-muted-foreground hover:text-foreground hover:bg-muted/50'\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n        xs: 'h-8 rounded-md px-2 text-xs',\n        xl: 'h-12 rounded-md px-10 text-base'\n      }\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default'\n    }\n  }\n);\n\nconst Button = React.forwardRef(\n  (\n    {\n      className,\n      variant,\n      size,\n      asChild = false,\n      children,\n      loading = false,\n      iconName = null,\n      iconPosition = 'left',\n      iconSize = null,\n      fullWidth = false,\n      disabled = false,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : 'button';\n\n    // Icon size mapping based on button size\n    const iconSizeMap = {\n      xs: 12,\n      sm: 14,\n      default: 16,\n      lg: 18,\n      xl: 20,\n      icon: 16\n    };\n\n    const calculatedIconSize = iconSize || iconSizeMap[size] || 16;\n\n    // Loading spinner\n    const LoadingSpinner = () => (\n      <svg\n        className=\"animate-spin -ml-1 mr-2 h-4 w-4\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        data-loading=\"true\"\n      >\n        <circle\n          className=\"opacity-25\"\n          cx=\"12\"\n          cy=\"12\"\n          r=\"10\"\n          stroke=\"currentColor\"\n          strokeWidth=\"4\"\n        />\n        <path\n          className=\"opacity-75\"\n          fill=\"currentColor\"\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        />\n      </svg>\n    );\n\n    // Icon rendering\n    const renderIcon = () => {\n      if (!iconName) return null;\n\n      return (\n        <Icon\n          name={iconName}\n          size={calculatedIconSize}\n          className={cn(\n            children && iconPosition === 'left' && 'mr-2',\n            children && iconPosition === 'right' && 'ml-2'\n          )}\n        />\n      );\n    };\n\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }), fullWidth && 'w-full')}\n        ref={ref}\n        disabled={disabled || loading}\n        {...props}\n      >\n        {loading && <LoadingSpinner />}\n        {iconName && iconPosition === 'left' && renderIcon()}\n        {children}\n        {iconName && iconPosition === 'right' && renderIcon()}\n      </Comp>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n\nexport default Button;\n","import React from 'react';\nimport { AlertTriangle, RefreshCw, Home, MessageCircle } from 'lucide-react';\nimport Button from '../ui/Button';\n\nclass ProductionErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    const errorId = this.generateErrorId();\n    \n    this.setState({\n      error,\n      errorInfo,\n      errorId\n    });\n\n    // Log to monitoring service\n    this.logToMonitoring(error, errorInfo, errorId);\n\n    // Development logging\n    if (process.env.NODE_ENV === 'development') {\n      console.group('ðŸš¨ Error Boundary Caught Error');\n      console.error('Error:', error);\n      console.error('Error Info:', errorInfo);\n      console.error('Component Stack:', errorInfo.componentStack);\n      console.groupEnd();\n    }\n  }\n\n  generateErrorId() {\n    return `ERR-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n  }\n\n  logToMonitoring(error, errorInfo, errorId) {\n    try {\n      // Send to Sentry if available\n      if (window.Sentry) {\n        window.Sentry.withScope((scope) => {\n          scope.setTag('errorBoundary', true);\n          scope.setContext('errorInfo', errorInfo);\n          scope.setContext('errorId', errorId);\n          scope.setLevel('error');\n          window.Sentry.captureException(error);\n        });\n      }\n\n      // Send to custom monitoring endpoint\n      fetch('/api/errors', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          errorId,\n          message: error.message,\n          stack: error.stack,\n          componentStack: errorInfo.componentStack,\n          timestamp: new Date().toISOString(),\n          userAgent: navigator.userAgent,\n          url: window.location.href,\n          userId: this.props.userId || 'anonymous'\n        })\n      }).catch(err => {\n        console.warn('Failed to send error to monitoring:', err);\n      });\n\n    } catch (monitoringError) {\n      console.warn('Error in monitoring:', monitoringError);\n    }\n  }\n\n  handleRetry = () => {\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: null\n    });\n  };\n\n  handleReload = () => {\n    window.location.reload();\n  };\n\n  handleGoHome = () => {\n    window.location.href = '/';\n  };\n\n  handleReportIssue = () => {\n    const subject = encodeURIComponent(`Error Report - ${this.state.errorId}`);\n    const body = encodeURIComponent(`\nError ID: ${this.state.errorId}\nError: ${this.state.error?.message}\nURL: ${window.location.href}\nTime: ${new Date().toISOString()}\n\nPlease describe what you were doing when this error occurred:\n[Your description here]\n    `);\n    \n    window.open(`mailto:support@financeanalystpro.com?subject=${subject}&body=${body}`);\n  };\n\n  render() {\n    if (this.state.hasError) {\n      const { fallback: Fallback, level = 'component' } = this.props;\n\n      // If custom fallback provided, use it\n      if (Fallback) {\n        return (\n          <Fallback\n            error={this.state.error}\n            errorInfo={this.state.errorInfo}\n            errorId={this.state.errorId}\n            onRetry={this.handleRetry}\n          />\n        );\n      }\n\n      // Component-level error (smaller footprint)\n      if (level === 'component') {\n        return (\n          <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-start space-x-3\">\n              <AlertTriangle className=\"w-5 h-5 text-red-500 mt-0.5 flex-shrink-0\" />\n              <div className=\"flex-1 min-w-0\">\n                <h3 className=\"text-sm font-medium text-red-800\">\n                  Component Error\n                </h3>\n                <p className=\"text-sm text-red-600 mt-1\">\n                  This component encountered an error and couldn't be displayed.\n                </p>\n                <div className=\"mt-3 flex space-x-3\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    onClick={this.handleRetry}\n                    className=\"text-red-700 border-red-300 hover:bg-red-100\"\n                  >\n                    <RefreshCw className=\"w-4 h-4 mr-1\" />\n                    Retry\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n\n      // Page-level error (full page)\n      return (\n        <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\n          <div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-6\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <AlertTriangle className=\"w-8 h-8 text-red-500\" />\n              </div>\n              \n              <h1 className=\"text-xl font-semibold text-gray-900 mb-2\">\n                Something went wrong\n              </h1>\n              \n              <p className=\"text-gray-600 mb-6\">\n                We apologize for the inconvenience. An unexpected error occurred while loading this page.\n              </p>\n\n              <div className=\"bg-gray-50 rounded-lg p-3 mb-6 text-left\">\n                <div className=\"text-xs text-gray-500 mb-1\">Error ID</div>\n                <div className=\"text-sm font-mono text-gray-800\">{this.state.errorId}</div>\n              </div>\n\n              <div className=\"space-y-3\">\n                <Button\n                  onClick={this.handleRetry}\n                  className=\"w-full\"\n                  variant=\"primary\"\n                >\n                  <RefreshCw className=\"w-4 h-4 mr-2\" />\n                  Try Again\n                </Button>\n\n                <div className=\"flex space-x-3\">\n                  <Button\n                    onClick={this.handleGoHome}\n                    variant=\"secondary\"\n                    className=\"flex-1\"\n                  >\n                    <Home className=\"w-4 h-4 mr-2\" />\n                    Go Home\n                  </Button>\n\n                  <Button\n                    onClick={this.handleReportIssue}\n                    variant=\"outline\"\n                    className=\"flex-1\"\n                  >\n                    <MessageCircle className=\"w-4 h-4 mr-2\" />\n                    Report\n                  </Button>\n                </div>\n\n                <Button\n                  onClick={this.handleReload}\n                  variant=\"ghost\"\n                  className=\"w-full text-sm\"\n                >\n                  Reload Page\n                </Button>\n              </div>\n\n              {process.env.NODE_ENV === 'development' && (\n                <details className=\"mt-6 text-left\">\n                  <summary className=\"text-sm text-gray-500 cursor-pointer hover:text-gray-700\">\n                    Debug Information\n                  </summary>\n                  <div className=\"mt-2 p-3 bg-gray-100 rounded text-xs font-mono overflow-auto max-h-40\">\n                    <div className=\"mb-2\">\n                      <strong>Error:</strong> {this.state.error?.message}\n                    </div>\n                    <div className=\"mb-2\">\n                      <strong>Stack:</strong>\n                      <pre className=\"mt-1 whitespace-pre-wrap\">{this.state.error?.stack}</pre>\n                    </div>\n                    <div>\n                      <strong>Component Stack:</strong>\n                      <pre className=\"mt-1 whitespace-pre-wrap\">{this.state.errorInfo?.componentStack}</pre>\n                    </div>\n                  </div>\n                </details>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ProductionErrorBoundary;","import React from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst Card = React.forwardRef(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('rounded-lg border bg-card text-card-foreground shadow-sm', className)}\n    {...props}\n  />\n));\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('flex flex-col space-y-1.5 p-6', className)} {...props} />\n));\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef(({ className, ...props }, _ref) => (\n  <h3 className={cn('text-2xl font-semibold leading-none tracking-tight', className)} {...props}>\n    {props.children || 'Card Title'}\n  </h3>\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef(({ className, ...props }, ref) => (\n  <p ref={ref} className={cn('text-sm text-muted-foreground', className)} {...props} />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n));\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('flex items-center p-6 pt-0', className)} {...props} />\n));\nCardFooter.displayName = 'CardFooter';\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };\n","import React from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst Input = React.forwardRef(\n  (\n    { className, type = 'text', label, description, error, required = false, id, ...props },\n    ref\n  ) => {\n    // Generate unique ID if not provided\n    const inputId = id || `input-${Math.random().toString(36).substr(2, 9)}`;\n\n    // Base input classes\n    const baseInputClasses =\n      'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50';\n\n    // Checkbox-specific styles\n    if (type === 'checkbox') {\n      return (\n        <input\n          type=\"checkbox\"\n          className={cn(\n            'h-4 w-4 rounded border border-input bg-background text-primary focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n            className\n          )}\n          ref={ref}\n          id={inputId}\n          {...props}\n        />\n      );\n    }\n\n    // Radio button-specific styles\n    if (type === 'radio') {\n      return (\n        <input\n          type=\"radio\"\n          className={cn(\n            'h-4 w-4 rounded-full border border-input bg-background text-primary focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n            className\n          )}\n          ref={ref}\n          id={inputId}\n          {...props}\n        />\n      );\n    }\n\n    // For regular inputs with wrapper structure\n    return (\n      <div className=\"space-y-2\">\n        {label && (\n          <label\n            htmlFor={inputId}\n            className={cn(\n              'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n              error ? 'text-destructive' : 'text-foreground'\n            )}\n          >\n            {label}\n            {required && <span className=\"text-destructive ml-1\">*</span>}\n          </label>\n        )}\n\n        <input\n          type={type}\n          className={cn(\n            baseInputClasses,\n            error && 'border-destructive focus-visible:ring-destructive',\n            className\n          )}\n          ref={ref}\n          id={inputId}\n          {...props}\n        />\n\n        {description && !error && <p className=\"text-sm text-muted-foreground\">{description}</p>}\n\n        {error && <p className=\"text-sm text-destructive\">{error}</p>}\n      </div>\n    );\n  }\n);\n\nInput.displayName = 'Input';\n\nexport default Input;\n","// components/ui/Select.jsx - Shadcn style Select\nimport { ChevronDown, Check, Search, X } from 'lucide-react';\nimport React, { useState } from 'react';\n\nimport { cn } from '../../utils/cn';\n\nimport Button from './Button';\nimport Input from './Input';\n\nconst Select = React.forwardRef(\n  (\n    {\n      className,\n      options = [],\n      value,\n      _defaultValue,\n      placeholder = 'Select an option',\n      multiple = false,\n      disabled = false,\n      required = false,\n      label,\n      description,\n      error,\n      searchable = false,\n      clearable = false,\n      loading = false,\n      id,\n      name,\n      onChange,\n      onOpenChange,\n      ...props\n    },\n    ref\n  ) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    // Generate unique ID if not provided\n    const selectId = id || `select-${Math.random().toString(36).substr(2, 9)}`;\n\n    // Filter options based on search\n    const filteredOptions =\n      searchable && searchTerm\n        ? options.filter(\n          option =>\n            option.label.toLowerCase().includes(searchTerm.toLowerCase()) ||\n              (option.value &&\n                option.value.toString().toLowerCase().includes(searchTerm.toLowerCase()))\n        )\n        : options;\n\n    // Get selected option(s) for display\n    const getSelectedDisplay = () => {\n      if (!value) return placeholder;\n\n      if (multiple) {\n        const selectedOptions = options.filter(opt => value.includes(opt.value));\n        if (selectedOptions.length === 0) return placeholder;\n        if (selectedOptions.length === 1) return selectedOptions[0].label;\n        return `${selectedOptions.length} items selected`;\n      }\n\n      const selectedOption = options.find(opt => opt.value === value);\n      return selectedOption ? selectedOption.label : placeholder;\n    };\n\n    const handleToggle = () => {\n      if (!disabled) {\n        const newIsOpen = !isOpen;\n        setIsOpen(newIsOpen);\n        onOpenChange?.(newIsOpen);\n        if (!newIsOpen) {\n          setSearchTerm('');\n        }\n      }\n    };\n\n    const handleOptionSelect = option => {\n      if (multiple) {\n        const newValue = value || [];\n        const updatedValue = newValue.includes(option.value)\n          ? newValue.filter(v => v !== option.value)\n          : [...newValue, option.value];\n        onChange?.(updatedValue);\n      } else {\n        onChange?.(option.value);\n        setIsOpen(false);\n        onOpenChange?.(false);\n      }\n    };\n\n    const handleClear = e => {\n      e.stopPropagation();\n      onChange?.(multiple ? [] : '');\n    };\n\n    const handleSearchChange = e => {\n      setSearchTerm(e.target.value);\n    };\n\n    const isSelected = optionValue => {\n      if (multiple) {\n        return value?.includes(optionValue) || false;\n      }\n      return value === optionValue;\n    };\n\n    const hasValue = multiple ? value?.length > 0 : value !== undefined && value !== '';\n\n    return (\n      <div className={cn('relative', className)}>\n        {label && (\n          <label\n            htmlFor={selectId}\n            className={cn(\n              'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 mb-2 block',\n              error ? 'text-destructive' : 'text-foreground'\n            )}\n          >\n            {label}\n            {required && <span className=\"text-destructive ml-1\">*</span>}\n          </label>\n        )}\n\n        <div className=\"relative\">\n          <button\n            ref={ref}\n            id={selectId}\n            type=\"button\"\n            className={cn(\n              'flex h-10 w-full items-center justify-between rounded-md border border-input bg-white text-black px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n              error && 'border-destructive focus:ring-destructive',\n              !hasValue && 'text-muted-foreground'\n            )}\n            onClick={handleToggle}\n            disabled={disabled}\n            aria-expanded={isOpen}\n            aria-haspopup=\"listbox\"\n            {...props}\n          >\n            <span className=\"truncate\">{getSelectedDisplay()}</span>\n\n            <div className=\"flex items-center gap-1\">\n              {loading && (\n                <svg className=\"animate-spin h-4 w-4\" viewBox=\"0 0 24 24\">\n                  <circle\n                    className=\"opacity-25\"\n                    cx=\"12\"\n                    cy=\"12\"\n                    r=\"10\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"4\"\n                    fill=\"none\"\n                  />\n                  <path\n                    className=\"opacity-75\"\n                    fill=\"currentColor\"\n                    d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                  />\n                </svg>\n              )}\n\n              {clearable && hasValue && !loading && (\n                <Button\n                  variant=\"ghost\" size=\"icon\" className=\"h-4 w-4\"\n                  onClick={handleClear}\n                >\n                  <X className=\"h-3 w-3\" />\n                </Button>\n              )}\n\n              <ChevronDown className={cn('h-4 w-4 transition-transform', isOpen && 'rotate-180')} />\n            </div>\n          </button>\n\n          {/* Hidden native select for form submission */}\n          <select\n            name={name}\n            value={value || ''}\n            onChange={() => {}} // Controlled by our custom logic\n            className=\"sr-only\"\n            tabIndex={-1}\n            multiple={multiple}\n            required={required}\n          >\n            <option value=\"\">Select...</option>\n            {options.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n\n          {/* Dropdown */}\n          {isOpen && (\n            <div className=\"absolute z-50 w-full mt-1 bg-white text-black border border-border rounded-md shadow-md\">\n              {searchable && (\n                <div className=\"p-2 border-b\">\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                    <Input\n                      placeholder=\"Search options...\"\n                      value={searchTerm}\n                      onChange={handleSearchChange}\n                      className=\"pl-8\"\n                    />\n                  </div>\n                </div>\n              )}\n\n              <div className=\"py-1 max-h-60 overflow-auto\">\n                {filteredOptions.length === 0 ? (\n                  <div className=\"px-3 py-2 text-sm text-muted-foreground\">\n                    {searchTerm ? 'No options found' : 'No options available'}\n                  </div>\n                ) : (\n                  filteredOptions.map(option => (\n                    <div\n                      key={option.value}\n                      role=\"option\"\n                      tabIndex={0}\n                      aria-selected={isSelected(option.value)}\n                      className={cn(\n                        'relative flex cursor-pointer select-none items-center rounded-sm px-3 py-2 text-sm outline-none hover:bg-accent hover:text-accent-foreground',\n                        isSelected(option.value) && 'bg-primary text-primary-foreground',\n                        option.disabled && 'pointer-events-none opacity-50'\n                      )}\n                      onClick={() => !option.disabled && handleOptionSelect(option)}\n                      onKeyDown={(e) => {\n                        if (e.key === 'Enter' || e.key === ' ') {\n                          e.preventDefault();\n                          if (!option.disabled) handleOptionSelect(option);\n                        }\n                      }}\n                    >\n                      <span className=\"flex-1\">{option.label}</span>\n                      {multiple && isSelected(option.value) && <Check className=\"h-4 w-4\" />}\n                      {option.description && (\n                        <span className=\"text-xs text-muted-foreground ml-2\">\n                          {option.description}\n                        </span>\n                      )}\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {description && !error && (\n          <p className=\"text-sm text-muted-foreground mt-1\">{description}</p>\n        )}\n\n        {error && <p className=\"text-sm text-destructive mt-1\">{error}</p>}\n      </div>\n    );\n  }\n);\n\nSelect.displayName = 'Select';\n\nexport default Select;\n","import { useState, useMemo } from 'react';\nimport { Card } from '../ui/Card';\nimport Button from '../ui/Button';\nimport Input from '../ui/Input';\nimport Select from '../ui/Select';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst OptionsPricing = () => {\n  const [inputs, setInputs] = useState({\n    spotPrice: 100,\n    strikePrice: 100,\n    timeToExpiry: 0.25, // 3 months\n    riskFreeRate: 0.05,\n    volatility: 0.20,\n    optionType: 'call',\n    dividendYield: 0\n  });\n\n  const [model, setModel] = useState('black-scholes');\n\n  // Black-Scholes calculation\n  const blackScholes = useMemo(() => {\n    const { spotPrice: S, strikePrice: K, timeToExpiry: T, riskFreeRate: r, volatility: vol, optionType, dividendYield: q } = inputs;\n    \n    if (!S || !K || !T || !vol) return null;\n\n    const d1 = (Math.log(S / K) + (r - q + 0.5 * vol * vol) * T) / (vol * Math.sqrt(T));\n    const d2 = d1 - vol * Math.sqrt(T);\n\n    const normalCDF = (x) => {\n      return 0.5 * (1 + erf(x / Math.sqrt(2)));\n    };\n\n    const erf = (x) => {\n      const a1 =  0.254829592;\n      const a2 = -0.284496736;\n      const a3 =  1.421413741;\n      const a4 = -1.453152027;\n      const a5 =  1.061405429;\n      const p  =  0.3275911;\n      const sign = x < 0 ? -1 : 1;\n      x = Math.abs(x);\n      const t = 1.0 / (1.0 + p * x);\n      const y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n      return sign * y;\n    };\n\n    const Nd1 = normalCDF(d1);\n    const Nd2 = normalCDF(d2);\n    const NminusD1 = normalCDF(-d1);\n    const NminusD2 = normalCDF(-d2);\n\n    let price, delta, gamma, theta, vega, rho;\n\n    if (optionType === 'call') {\n      price = S * Math.exp(-q * T) * Nd1 - K * Math.exp(-r * T) * Nd2;\n      delta = Math.exp(-q * T) * Nd1;\n      rho = K * T * Math.exp(-r * T) * Nd2 / 100;\n    } else {\n      price = K * Math.exp(-r * T) * NminusD2 - S * Math.exp(-q * T) * NminusD1;\n      delta = -Math.exp(-q * T) * NminusD1;\n      rho = -K * T * Math.exp(-r * T) * NminusD2 / 100;\n    }\n\n    const normalPDF = (x) => Math.exp(-0.5 * x * x) / Math.sqrt(2 * Math.PI);\n    \n    gamma = Math.exp(-q * T) * normalPDF(d1) / (S * vol * Math.sqrt(T));\n    theta = (-S * Math.exp(-q * T) * normalPDF(d1) * vol / (2 * Math.sqrt(T)) \n            - r * K * Math.exp(-r * T) * (optionType === 'call' ? Nd2 : NminusD2)\n            + q * S * Math.exp(-q * T) * (optionType === 'call' ? Nd1 : NminusD1)) / 365;\n    vega = S * Math.exp(-q * T) * normalPDF(d1) * Math.sqrt(T) / 100;\n\n    return { price, delta, gamma, theta, vega, rho };\n  }, [inputs]);\n\n  // Binomial tree calculation\n  const binomialTree = useMemo(() => {\n    const { spotPrice: S, strikePrice: K, timeToExpiry: T, riskFreeRate: r, volatility: vol, optionType } = inputs;\n    const steps = 100;\n    \n    if (!S || !K || !T || !vol) return null;\n\n    const dt = T / steps;\n    const u = Math.exp(vol * Math.sqrt(dt));\n    const d = 1 / u;\n    const p = (Math.exp(r * dt) - d) / (u - d);\n\n    // Build tree\n    const tree = Array(steps + 1).fill(null).map(() => Array(steps + 1).fill(0));\n    \n    // Calculate terminal payoffs\n    for (let i = 0; i <= steps; i++) {\n      const ST = S * Math.pow(u, 2 * i - steps);\n      tree[steps][i] = optionType === 'call' \n        ? Math.max(ST - K, 0)\n        : Math.max(K - ST, 0);\n    }\n\n    // Backward induction\n    for (let j = steps - 1; j >= 0; j--) {\n      for (let i = 0; i <= j; i++) {\n        tree[j][i] = Math.exp(-r * dt) * (p * tree[j + 1][i + 1] + (1 - p) * tree[j + 1][i]);\n      }\n    }\n\n    return { price: tree[0][0] };\n  }, [inputs]);\n\n  const handleInputChange = (field, value) => {\n    setInputs(prev => ({\n      ...prev,\n      [field]: parseFloat(value) || 0\n    }));\n  };\n\n  // Generate volatility surface data\n  const volSurfaceData = useMemo(() => {\n    const strikes = [80, 90, 100, 110, 120];\n    const expiries = [0.083, 0.167, 0.25, 0.5, 1]; // 1M, 2M, 3M, 6M, 1Y\n    \n    return expiries.map(T => ({\n      expiry: `${Math.round(T * 12)}M`,\n      ...strikes.reduce((acc, K) => {\n        const vol = 0.20 + 0.05 * Math.abs(K - 100) / 100 + 0.02 * Math.exp(-T);\n        acc[`K${K}`] = vol;\n        return acc;\n      }, {})\n    }));\n  }, []);\n\n  const result = model === 'black-scholes' ? blackScholes : binomialTree;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <Card className=\"lg:col-span-1\">\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Option Parameters</h3>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Model Type\n                </label>\n                <Select\n                  value={model}\n                  onChange={(e) => setModel(e.target.value)}\n                  options={[\n                    { value: 'black-scholes', label: 'Black-Scholes' },\n                    { value: 'binomial', label: 'Binomial Tree' }\n                  ]}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Option Type\n                </label>\n                <Select\n                  value={inputs.optionType}\n                  onChange={(e) => handleInputChange('optionType', e.target.value)}\n                  options={[\n                    { value: 'call', label: 'Call' },\n                    { value: 'put', label: 'Put' }\n                  ]}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Spot Price ($)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={inputs.spotPrice}\n                  onChange={(e) => handleInputChange('spotPrice', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Strike Price ($)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={inputs.strikePrice}\n                  onChange={(e) => handleInputChange('strikePrice', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Time to Expiry (Years)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={inputs.timeToExpiry}\n                  onChange={(e) => handleInputChange('timeToExpiry', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Risk-Free Rate (%)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"0.001\"\n                  value={inputs.riskFreeRate * 100}\n                  onChange={(e) => handleInputChange('riskFreeRate', e.target.value / 100)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Volatility (%)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={inputs.volatility * 100}\n                  onChange={(e) => handleInputChange('volatility', e.target.value / 100)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Dividend Yield (%)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={inputs.dividendYield * 100}\n                  onChange={(e) => handleInputChange('dividendYield', e.target.value / 100)}\n                />\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        <Card className=\"lg:col-span-2\">\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Pricing Results</h3>\n            \n            {result && (\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Option Price</div>\n                  <div className=\"text-2xl font-bold text-blue-600\">\n                    ${result.price?.toFixed(4) || 'N/A'}\n                  </div>\n                </div>\n                \n                {blackScholes && model === 'black-scholes' && (\n                  <>\n                    <div className=\"bg-green-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-600\">Delta</div>\n                      <div className=\"text-xl font-semibold text-green-600\">\n                        {blackScholes.delta?.toFixed(4) || 'N/A'}\n                      </div>\n                    </div>\n                    \n                    <div className=\"bg-purple-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-600\">Gamma</div>\n                      <div className=\"text-xl font-semibold text-purple-600\">\n                        {blackScholes.gamma?.toFixed(4) || 'N/A'}\n                      </div>\n                    </div>\n                    \n                    <div className=\"bg-red-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-600\">Theta</div>\n                      <div className=\"text-xl font-semibold text-red-600\">\n                        {blackScholes.theta?.toFixed(4) || 'N/A'}\n                      </div>\n                    </div>\n                    \n                    <div className=\"bg-yellow-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-600\">Vega</div>\n                      <div className=\"text-xl font-semibold text-yellow-600\">\n                        {blackScholes.vega?.toFixed(4) || 'N/A'}\n                      </div>\n                    </div>\n                    \n                    <div className=\"bg-indigo-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-600\">Rho</div>\n                      <div className=\"text-xl font-semibold text-indigo-600\">\n                        {blackScholes.rho?.toFixed(4) || 'N/A'}\n                      </div>\n                    </div>\n                  </>\n                )}\n              </div>\n            )}\n\n            <div className=\"mt-6\">\n              <h4 className=\"text-md font-semibold mb-3\">Implied Volatility Surface</h4>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <LineChart data={volSurfaceData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"expiry\" />\n                  <YAxis tickFormatter={(value) => `${(value * 100).toFixed(0)}%`} />\n                  <Tooltip formatter={(value) => `${(value * 100).toFixed(2)}%`} />\n                  <Legend />\n                  <Line type=\"monotone\" dataKey=\"K80\" stroke=\"#ef4444\" name=\"K=80\" />\n                  <Line type=\"monotone\" dataKey=\"K90\" stroke=\"#f97316\" name=\"K=90\" />\n                  <Line type=\"monotone\" dataKey=\"K100\" stroke=\"#22c55e\" name=\"K=100\" />\n                  <Line type=\"monotone\" dataKey=\"K110\" stroke=\"#3b82f6\" name=\"K=110\" />\n                  <Line type=\"monotone\" dataKey=\"K120\" stroke=\"#8b5cf6\" name=\"K=120\" />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default OptionsPricing;","import { useState, useMemo } from 'react';\nimport { Card } from '../ui/Card';\nimport Button from '../ui/Button';\nimport Input from '../ui/Input';\nimport Select from '../ui/Select';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from 'recharts';\n\nconst FixedIncomeAnalytics = () => {\n  const [inputs, setInputs] = useState({\n    faceValue: 1000,\n    couponRate: 0.05,\n    maturity: 5,\n    paymentFrequency: 2, // Semi-annual\n    marketYield: 0.045,\n    daysToSettlement: 0\n  });\n\n  const [yieldCurveInputs, setYieldCurveInputs] = useState([\n    { maturity: 0.25, yield: 0.02 },\n    { maturity: 0.5, yield: 0.025 },\n    { maturity: 1, yield: 0.03 },\n    { maturity: 2, yield: 0.035 },\n    { maturity: 5, yield: 0.04 },\n    { maturity: 10, yield: 0.045 },\n    { maturity: 30, yield: 0.05 }\n  ]);\n\n  // Bond pricing calculations\n  const bondAnalytics = useMemo(() => {\n    const { faceValue: FV, couponRate: C, maturity: T, paymentFrequency: n, marketYield: Y } = inputs;\n    \n    if (!FV || !T || !n) return null;\n\n    const periodsPerYear = n;\n    const totalPeriods = T * periodsPerYear;\n    const couponPayment = (C * FV) / periodsPerYear;\n    const periodYield = Y / periodsPerYear;\n\n    // Present value of coupon payments\n    let pvCoupons = 0;\n    for (let i = 1; i <= totalPeriods; i++) {\n      pvCoupons += couponPayment / Math.pow(1 + periodYield, i);\n    }\n\n    // Present value of principal\n    const pvPrincipal = FV / Math.pow(1 + periodYield, totalPeriods);\n    \n    // Bond price\n    const price = pvCoupons + pvPrincipal;\n\n    // Modified Duration calculation\n    let durationSum = 0;\n    for (let i = 1; i <= totalPeriods; i++) {\n      const cf = i === totalPeriods ? couponPayment + FV : couponPayment;\n      const pv = cf / Math.pow(1 + periodYield, i);\n      durationSum += (i / periodsPerYear) * pv;\n    }\n    const macaulayDuration = durationSum / price;\n    const modifiedDuration = macaulayDuration / (1 + periodYield);\n\n    // Convexity calculation\n    let convexitySum = 0;\n    for (let i = 1; i <= totalPeriods; i++) {\n      const cf = i === totalPeriods ? couponPayment + FV : couponPayment;\n      const pv = cf / Math.pow(1 + periodYield, i);\n      const timePeriod = i / periodsPerYear;\n      convexitySum += pv * timePeriod * (timePeriod + 1 / periodsPerYear);\n    }\n    const convexity = convexitySum / (price * Math.pow(1 + periodYield, 2));\n\n    // DV01 (Dollar Value of a 01)\n    const dv01 = modifiedDuration * price * 0.0001;\n\n    // Yield to Maturity (approximation for display)\n    const ytm = Y;\n\n    // Current Yield\n    const currentYield = (C * FV) / price;\n\n    return {\n      price,\n      ytm,\n      currentYield,\n      macaulayDuration,\n      modifiedDuration,\n      convexity,\n      dv01,\n      pvCoupons,\n      pvPrincipal\n    };\n  }, [inputs]);\n\n  // Risk analytics\n  const riskAnalytics = useMemo(() => {\n    if (!bondAnalytics) return null;\n\n    const { price, modifiedDuration, convexity } = bondAnalytics;\n    const yieldShocks = [-0.02, -0.01, -0.005, 0, 0.005, 0.01, 0.02];\n\n    return yieldShocks.map(shock => {\n      // First-order approximation (duration only)\n      const durationEffect = -modifiedDuration * shock * price;\n      const priceChange1st = durationEffect;\n      \n      // Second-order approximation (duration + convexity)\n      const convexityEffect = 0.5 * convexity * shock * shock * price;\n      const priceChange2nd = durationEffect + convexityEffect;\n\n      return {\n        yieldShock: shock * 100, // Convert to bps\n        priceChange1st: (priceChange1st / price) * 100,\n        priceChange2nd: (priceChange2nd / price) * 100,\n        newPrice1st: price + priceChange1st,\n        newPrice2nd: price + priceChange2nd\n      };\n    });\n  }, [bondAnalytics]);\n\n  const handleInputChange = (field, value) => {\n    setInputs(prev => ({\n      ...prev,\n      [field]: parseFloat(value) || 0\n    }));\n  };\n\n  const handleYieldCurveChange = (index, field, value) => {\n    setYieldCurveInputs(prev => \n      prev.map((item, i) => \n        i === index ? { ...item, [field]: parseFloat(value) || 0 } : item\n      )\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <Card className=\"lg:col-span-1\">\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Bond Parameters</h3>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Face Value ($)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"1\"\n                  value={inputs.faceValue}\n                  onChange={(e) => handleInputChange('faceValue', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Coupon Rate (%)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"0.001\"\n                  value={inputs.couponRate * 100}\n                  onChange={(e) => handleInputChange('couponRate', e.target.value / 100)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Maturity (Years)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"0.25\"\n                  value={inputs.maturity}\n                  onChange={(e) => handleInputChange('maturity', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Payment Frequency\n                </label>\n                <Select\n                  value={inputs.paymentFrequency}\n                  onChange={(e) => handleInputChange('paymentFrequency', e.target.value)}\n                  options={[\n                    { value: 1, label: 'Annual' },\n                    { value: 2, label: 'Semi-Annual' },\n                    { value: 4, label: 'Quarterly' },\n                    { value: 12, label: 'Monthly' }\n                  ]}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Market Yield (%)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"0.001\"\n                  value={inputs.marketYield * 100}\n                  onChange={(e) => handleInputChange('marketYield', e.target.value / 100)}\n                />\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        <Card className=\"lg:col-span-2\">\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Bond Analytics</h3>\n            \n            {bondAnalytics && (\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Bond Price</div>\n                  <div className=\"text-xl font-bold text-blue-600\">\n                    ${bondAnalytics.price?.toFixed(2) || 'N/A'}\n                  </div>\n                </div>\n                \n                <div className=\"bg-green-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">YTM</div>\n                  <div className=\"text-lg font-semibold text-green-600\">\n                    {(bondAnalytics.ytm * 100)?.toFixed(3) || 'N/A'}%\n                  </div>\n                </div>\n                \n                <div className=\"bg-purple-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Modified Duration</div>\n                  <div className=\"text-lg font-semibold text-purple-600\">\n                    {bondAnalytics.modifiedDuration?.toFixed(3) || 'N/A'}\n                  </div>\n                </div>\n                \n                <div className=\"bg-orange-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Convexity</div>\n                  <div className=\"text-lg font-semibold text-orange-600\">\n                    {bondAnalytics.convexity?.toFixed(2) || 'N/A'}\n                  </div>\n                </div>\n                \n                <div className=\"bg-red-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">DV01</div>\n                  <div className=\"text-lg font-semibold text-red-600\">\n                    ${bondAnalytics.dv01?.toFixed(4) || 'N/A'}\n                  </div>\n                </div>\n                \n                <div className=\"bg-yellow-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Current Yield</div>\n                  <div className=\"text-lg font-semibold text-yellow-600\">\n                    {(bondAnalytics.currentYield * 100)?.toFixed(3) || 'N/A'}%\n                  </div>\n                </div>\n                \n                <div className=\"bg-indigo-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">PV Coupons</div>\n                  <div className=\"text-lg font-semibold text-indigo-600\">\n                    ${bondAnalytics.pvCoupons?.toFixed(2) || 'N/A'}\n                  </div>\n                </div>\n                \n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">PV Principal</div>\n                  <div className=\"text-lg font-semibold text-gray-600\">\n                    ${bondAnalytics.pvPrincipal?.toFixed(2) || 'N/A'}\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </Card>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Interest Rate Sensitivity</h3>\n            {riskAnalytics && (\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <LineChart data={riskAnalytics}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis \n                    dataKey=\"yieldShock\" \n                    tickFormatter={(value) => `${value > 0 ? '+' : ''}${value}`}\n                  />\n                  <YAxis tickFormatter={(value) => `${value.toFixed(1)}%`} />\n                  <Tooltip \n                    formatter={(value, name) => [\n                      `${value.toFixed(2)}%`, \n                      name === 'priceChange1st' ? 'Duration Only' : 'Duration + Convexity'\n                    ]}\n                    labelFormatter={(value) => `Yield Shock: ${value > 0 ? '+' : ''}${value} bps`}\n                  />\n                  <Legend />\n                  <Line \n                    type=\"monotone\" \n                    dataKey=\"priceChange1st\" \n                    stroke=\"#ef4444\" \n                    name=\"Duration Only\"\n                    strokeDasharray=\"5 5\"\n                  />\n                  <Line \n                    type=\"monotone\" \n                    dataKey=\"priceChange2nd\" \n                    stroke=\"#3b82f6\" \n                    name=\"Duration + Convexity\"\n                    strokeWidth={2}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            )}\n          </div>\n        </Card>\n\n        <Card>\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Yield Curve</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={yieldCurveInputs}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"maturity\" \n                  tickFormatter={(value) => `${value}Y`}\n                />\n                <YAxis \n                  tickFormatter={(value) => `${(value * 100).toFixed(1)}%`}\n                />\n                <Tooltip \n                  formatter={(value) => [`${(value * 100).toFixed(2)}%`, 'Yield']}\n                  labelFormatter={(value) => `Maturity: ${value} Years`}\n                />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"yield\" \n                  stroke=\"#22c55e\" \n                  strokeWidth={3}\n                  dot={{ fill: '#22c55e', strokeWidth: 2, r: 4 }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n            \n            <div className=\"mt-4\">\n              <h4 className=\"text-sm font-semibold mb-2\">Edit Yield Curve Points</h4>\n              <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                {yieldCurveInputs.map((point, index) => (\n                  <div key={index} className=\"flex items-center space-x-2\">\n                    <span className=\"w-8\">{point.maturity}Y:</span>\n                    <Input\n                      type=\"number\"\n                      step=\"0.001\"\n                      value={point.yield * 100}\n                      onChange={(e) => handleYieldCurveChange(index, 'yield', e.target.value / 100)}\n                      className=\"text-xs h-8\"\n                    />\n                    <span className=\"text-gray-500\">%</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default FixedIncomeAnalytics;","import { useState, useMemo } from 'react';\nimport { Card } from '../ui/Card';\nimport Button from '../ui/Button';\nimport Input from '../ui/Input';\nimport Select from '../ui/Select';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar, PieChart, Pie, Cell } from 'recharts';\n\nconst CreditModeling = () => {\n  const [inputs, setInputs] = useState({\n    exposureAmount: 1000000,\n    timeHorizon: 1,\n    lgd: 0.45, // Loss Given Default\n    pd: 0.02, // Probability of Default\n    correlationFactor: 0.15,\n    confidenceLevel: 0.999\n  });\n\n  const [scorecardInputs, setScorecardInputs] = useState({\n    revenue: 50000000,\n    debt: 15000000,\n    ebitda: 8000000,\n    currentRatio: 1.5,\n    quickRatio: 1.2,\n    industryRisk: 'medium',\n    managementQuality: 'good',\n    marketPosition: 'strong'\n  });\n\n  // Credit risk calculations\n  const creditRiskMetrics = useMemo(() => {\n    const { exposureAmount: EAD, lgd: LGD, pd: PD, timeHorizon, correlationFactor, confidenceLevel } = inputs;\n    \n    // Expected Loss\n    const expectedLoss = EAD * PD * LGD;\n    \n    // Unexpected Loss (single asset)\n    const unexpectedLoss = EAD * LGD * Math.sqrt(PD * (1 - PD));\n    \n    // Economic Capital (using normal approximation)\n    const normalInverse = (p) => {\n      // Approximation of inverse normal CDF\n      const c0 = 2.515517;\n      const c1 = 0.802853;\n      const c2 = 0.010328;\n      const d1 = 1.432788;\n      const d2 = 0.189269;\n      const d3 = 0.001308;\n      \n      const t = Math.sqrt(-2 * Math.log(1 - p));\n      return t - (c0 + c1 * t + c2 * t * t) / (1 + d1 * t + d2 * t * t + d3 * t * t * t);\n    };\n    \n    const economicCapital = normalInverse(confidenceLevel) * unexpectedLoss;\n    \n    // Value at Risk\n    const valueAtRisk = expectedLoss + economicCapital;\n    \n    // RAROC (Risk-Adjusted Return on Capital)\n    const assumedSpread = 0.025; // 250 bps spread\n    const revenue = EAD * assumedSpread;\n    const raroc = (revenue - expectedLoss) / economicCapital;\n    \n    // Cumulative default probability over time horizon\n    const cumulativePD = 1 - Math.pow(1 - PD, timeHorizon);\n    \n    return {\n      expectedLoss,\n      unexpectedLoss,\n      economicCapital,\n      valueAtRisk,\n      raroc,\n      cumulativePD,\n      lossRate: expectedLoss / EAD,\n      capitalRatio: economicCapital / EAD\n    };\n  }, [inputs]);\n\n  // Credit scorecard calculation\n  const creditScore = useMemo(() => {\n    const { revenue, debt, ebitda, currentRatio, quickRatio, industryRisk, managementQuality, marketPosition } = scorecardInputs;\n    \n    let score = 0;\n    let maxScore = 0;\n    \n    // Financial ratios (60% weight)\n    const debtToEbitda = debt / ebitda;\n    const ebitdaMargin = ebitda / revenue;\n    \n    // Debt/EBITDA scoring (20 points)\n    maxScore += 20;\n    if (debtToEbitda < 1) score += 20;\n    else if (debtToEbitda < 2) score += 15;\n    else if (debtToEbitda < 3) score += 10;\n    else if (debtToEbitda < 4) score += 5;\n    \n    // EBITDA Margin scoring (20 points)\n    maxScore += 20;\n    if (ebitdaMargin > 0.20) score += 20;\n    else if (ebitdaMargin > 0.15) score += 15;\n    else if (ebitdaMargin > 0.10) score += 10;\n    else if (ebitdaMargin > 0.05) score += 5;\n    \n    // Current Ratio scoring (10 points)\n    maxScore += 10;\n    if (currentRatio > 2) score += 10;\n    else if (currentRatio > 1.5) score += 8;\n    else if (currentRatio > 1.2) score += 6;\n    else if (currentRatio > 1) score += 4;\n    \n    // Quick Ratio scoring (10 points)\n    maxScore += 10;\n    if (quickRatio > 1.5) score += 10;\n    else if (quickRatio > 1.2) score += 8;\n    else if (quickRatio > 1) score += 6;\n    else if (quickRatio > 0.8) score += 4;\n    \n    // Industry Risk (15 points)\n    maxScore += 15;\n    const industryScores = { low: 15, medium: 10, high: 5 };\n    score += industryScores[industryRisk] || 0;\n    \n    // Management Quality (15 points)\n    maxScore += 15;\n    const mgmtScores = { excellent: 15, good: 12, fair: 8, poor: 3 };\n    score += mgmtScores[managementQuality] || 0;\n    \n    // Market Position (10 points)\n    maxScore += 10;\n    const marketScores = { dominant: 10, strong: 8, competitive: 6, weak: 3 };\n    score += marketScores[marketPosition] || 0;\n    \n    const scorePercentage = (score / maxScore) * 100;\n    \n    // Convert to rating\n    let rating;\n    if (scorePercentage >= 90) rating = 'AAA';\n    else if (scorePercentage >= 85) rating = 'AA';\n    else if (scorePercentage >= 80) rating = 'A';\n    else if (scorePercentage >= 75) rating = 'BBB';\n    else if (scorePercentage >= 65) rating = 'BB';\n    else if (scorePercentage >= 55) rating = 'B';\n    else if (scorePercentage >= 45) rating = 'CCC';\n    else rating = 'D';\n    \n    // Estimate PD based on rating\n    const ratingPDs = {\n      'AAA': 0.0001, 'AA': 0.0005, 'A': 0.002, 'BBB': 0.01,\n      'BB': 0.04, 'B': 0.12, 'CCC': 0.35, 'D': 1.0\n    };\n    \n    return {\n      score,\n      maxScore,\n      scorePercentage,\n      rating,\n      estimatedPD: ratingPDs[rating],\n      debtToEbitda,\n      ebitdaMargin\n    };\n  }, [scorecardInputs]);\n\n  // Portfolio risk simulation data\n  const portfolioRiskData = useMemo(() => {\n    const scenarios = [];\n    const numScenarios = 1000;\n    \n    for (let i = 0; i < 50; i++) { // Show 50 sample scenarios\n      const randomPD = Math.random() * 0.1; // 0-10% PD range\n      const loss = inputs.exposureAmount * randomPD * inputs.lgd;\n      scenarios.push({\n        scenario: i + 1,\n        pd: randomPD,\n        loss: loss / 1000, // Convert to thousands\n        lossPercentage: (loss / inputs.exposureAmount) * 100\n      });\n    }\n    \n    return scenarios.sort((a, b) => a.loss - b.loss);\n  }, [inputs]);\n\n  const handleInputChange = (field, value) => {\n    setInputs(prev => ({\n      ...prev,\n      [field]: parseFloat(value) || 0\n    }));\n  };\n\n  const handleScorecardChange = (field, value) => {\n    setScorecardInputs(prev => ({\n      ...prev,\n      [field]: isNaN(parseFloat(value)) ? value : parseFloat(value)\n    }));\n  };\n\n  const COLORS = ['#3b82f6', '#ef4444', '#22c55e', '#f59e0b', '#8b5cf6'];\n\n  const lossDistributionData = [\n    { range: '0-1%', count: 850, probability: 0.85 },\n    { range: '1-3%', count: 100, probability: 0.10 },\n    { range: '3-5%', count: 30, probability: 0.03 },\n    { range: '5-10%', count: 15, probability: 0.015 },\n    { range: '>10%', count: 5, probability: 0.005 }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <Card className=\"lg:col-span-1\">\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Credit Risk Parameters</h3>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Exposure Amount ($)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"1000\"\n                  value={inputs.exposureAmount}\n                  onChange={(e) => handleInputChange('exposureAmount', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Probability of Default (%)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"0.001\"\n                  value={inputs.pd * 100}\n                  onChange={(e) => handleInputChange('pd', e.target.value / 100)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Loss Given Default (%)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"0.01\"\n                  value={inputs.lgd * 100}\n                  onChange={(e) => handleInputChange('lgd', e.target.value / 100)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Time Horizon (Years)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"0.25\"\n                  value={inputs.timeHorizon}\n                  onChange={(e) => handleInputChange('timeHorizon', e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Confidence Level (%)\n                </label>\n                <Input\n                  type=\"number\"\n                  step=\"0.001\"\n                  value={inputs.confidenceLevel * 100}\n                  onChange={(e) => handleInputChange('confidenceLevel', e.target.value / 100)}\n                />\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        <Card className=\"lg:col-span-2\">\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Credit Risk Metrics</h3>\n            \n            {creditRiskMetrics && (\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n                <div className=\"bg-red-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Expected Loss</div>\n                  <div className=\"text-xl font-bold text-red-600\">\n                    ${creditRiskMetrics.expectedLoss?.toLocaleString() || 'N/A'}\n                  </div>\n                </div>\n                \n                <div className=\"bg-orange-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Unexpected Loss</div>\n                  <div className=\"text-lg font-semibold text-orange-600\">\n                    ${creditRiskMetrics.unexpectedLoss?.toLocaleString() || 'N/A'}\n                  </div>\n                </div>\n                \n                <div className=\"bg-blue-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Economic Capital</div>\n                  <div className=\"text-lg font-semibold text-blue-600\">\n                    ${creditRiskMetrics.economicCapital?.toLocaleString() || 'N/A'}\n                  </div>\n                </div>\n                \n                <div className=\"bg-purple-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Value at Risk</div>\n                  <div className=\"text-lg font-semibold text-purple-600\">\n                    ${creditRiskMetrics.valueAtRisk?.toLocaleString() || 'N/A'}\n                  </div>\n                </div>\n                \n                <div className=\"bg-green-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">RAROC</div>\n                  <div className=\"text-lg font-semibold text-green-600\">\n                    {(creditRiskMetrics.raroc * 100)?.toFixed(1) || 'N/A'}%\n                  </div>\n                </div>\n                \n                <div className=\"bg-yellow-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Cumulative PD</div>\n                  <div className=\"text-lg font-semibold text-yellow-600\">\n                    {(creditRiskMetrics.cumulativePD * 100)?.toFixed(3) || 'N/A'}%\n                  </div>\n                </div>\n                \n                <div className=\"bg-indigo-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Loss Rate</div>\n                  <div className=\"text-lg font-semibold text-indigo-600\">\n                    {(creditRiskMetrics.lossRate * 100)?.toFixed(3) || 'N/A'}%\n                  </div>\n                </div>\n                \n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Capital Ratio</div>\n                  <div className=\"text-lg font-semibold text-gray-600\">\n                    {(creditRiskMetrics.capitalRatio * 100)?.toFixed(2) || 'N/A'}%\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </Card>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Credit Scorecard</h3>\n            \n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Revenue ($)</label>\n                <Input\n                  type=\"number\"\n                  value={scorecardInputs.revenue}\n                  onChange={(e) => handleScorecardChange('revenue', e.target.value)}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Total Debt ($)</label>\n                <Input\n                  type=\"number\"\n                  value={scorecardInputs.debt}\n                  onChange={(e) => handleScorecardChange('debt', e.target.value)}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">EBITDA ($)</label>\n                <Input\n                  type=\"number\"\n                  value={scorecardInputs.ebitda}\n                  onChange={(e) => handleScorecardChange('ebitda', e.target.value)}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Current Ratio</label>\n                <Input\n                  type=\"number\"\n                  step=\"0.1\"\n                  value={scorecardInputs.currentRatio}\n                  onChange={(e) => handleScorecardChange('currentRatio', e.target.value)}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Industry Risk</label>\n                <Select\n                  value={scorecardInputs.industryRisk}\n                  onChange={(e) => handleScorecardChange('industryRisk', e.target.value)}\n                  options={[\n                    { value: 'low', label: 'Low Risk' },\n                    { value: 'medium', label: 'Medium Risk' },\n                    { value: 'high', label: 'High Risk' }\n                  ]}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Management Quality</label>\n                <Select\n                  value={scorecardInputs.managementQuality}\n                  onChange={(e) => handleScorecardChange('managementQuality', e.target.value)}\n                  options={[\n                    { value: 'excellent', label: 'Excellent' },\n                    { value: 'good', label: 'Good' },\n                    { value: 'fair', label: 'Fair' },\n                    { value: 'poor', label: 'Poor' }\n                  ]}\n                />\n              </div>\n            </div>\n\n            {creditScore && (\n              <div className=\"bg-gradient-to-r from-blue-50 to-green-50 p-4 rounded-lg\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-lg font-semibold\">Credit Rating:</span>\n                  <span className=\"text-2xl font-bold text-blue-600\">{creditScore.rating}</span>\n                </div>\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span>Score:</span>\n                  <span className=\"font-semibold\">{creditScore.score}/{creditScore.maxScore} ({creditScore.scorePercentage.toFixed(1)}%)</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span>Estimated PD:</span>\n                  <span className=\"font-semibold\">{(creditScore.estimatedPD * 100).toFixed(3)}%</span>\n                </div>\n              </div>\n            )}\n          </div>\n        </Card>\n\n        <Card>\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Loss Distribution</h3>\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <BarChart data={lossDistributionData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"range\" />\n                <YAxis />\n                <Tooltip \n                  formatter={(value, name) => [\n                    name === 'count' ? `${value} scenarios` : `${(value * 100).toFixed(1)}%`,\n                    name === 'count' ? 'Scenarios' : 'Probability'\n                  ]}\n                />\n                <Bar dataKey=\"count\" fill=\"#3b82f6\" />\n              </BarChart>\n            </ResponsiveContainer>\n            \n            <div className=\"mt-4\">\n              <h4 className=\"text-sm font-semibold mb-2\">Risk Concentration</h4>\n              <ResponsiveContainer width=\"100%\" height={200}>\n                <PieChart>\n                  <Pie\n                    data={lossDistributionData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    innerRadius={40}\n                    outerRadius={80}\n                    dataKey=\"probability\"\n                    nameKey=\"range\"\n                  >\n                    {lossDistributionData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                  </Pie>\n                  <Tooltip formatter={(value) => `${(value * 100).toFixed(1)}%`} />\n                  <Legend />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default CreditModeling;","import { useState, useMemo } from 'react';\nimport { Card } from '../ui/Card';\nimport Button from '../ui/Button';\nimport Input from '../ui/Input';\nimport Select from '../ui/Select';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, AreaChart, Area } from 'recharts';\n\nconst DerivativesModeling = () => {\n  const [activeDerivative, setActiveDerivative] = useState('swap');\n  \n  const [swapInputs, setSwapInputs] = useState({\n    notional: 10000000,\n    maturity: 5,\n    fixedRate: 0.035,\n    floatingRate: 0.03,\n    paymentFrequency: 2,\n    dayCount: 'ACT/360'\n  });\n\n  const [futureInputs, setFutureInputs] = useState({\n    underlyingPrice: 100,\n    strikePrice: 102,\n    timeToExpiry: 0.25,\n    riskFreeRate: 0.05,\n    dividendYield: 0.02,\n    contractSize: 100\n  });\n\n  // Interest Rate Swap valuation\n  const swapValuation = useMemo(() => {\n    const { notional, maturity, fixedRate, floatingRate, paymentFrequency } = swapInputs;\n    \n    if (!notional || !maturity || !paymentFrequency) return null;\n\n    const periodsPerYear = paymentFrequency;\n    const totalPeriods = maturity * periodsPerYear;\n    const fixedPayment = (fixedRate * notional) / periodsPerYear;\n    const floatingPayment = (floatingRate * notional) / periodsPerYear;\n    \n    // Simplified discount curve (flat yield curve assumption)\n    const discountRate = floatingRate;\n    \n    // Present value of fixed leg\n    let pvFixedLeg = 0;\n    for (let i = 1; i <= totalPeriods; i++) {\n      pvFixedLeg += fixedPayment / Math.pow(1 + discountRate / periodsPerYear, i);\n    }\n    \n    // Present value of floating leg (first payment known, rest at par)\n    let pvFloatingLeg = floatingPayment / Math.pow(1 + discountRate / periodsPerYear, 1);\n    pvFloatingLeg += notional / Math.pow(1 + discountRate / periodsPerYear, totalPeriods);\n    pvFloatingLeg -= notional; // Subtract notional at inception\n    \n    const swapValue = pvFixedLeg - pvFloatingLeg; // From fixed payer perspective\n    \n    // Duration calculation\n    let durationSum = 0;\n    for (let i = 1; i <= totalPeriods; i++) {\n      const pv = fixedPayment / Math.pow(1 + discountRate / periodsPerYear, i);\n      durationSum += (i / periodsPerYear) * pv;\n    }\n    const duration = durationSum / pvFixedLeg;\n    \n    // DV01 calculation\n    const dv01 = duration * Math.abs(pvFixedLeg) * 0.0001;\n    \n    return {\n      swapValue,\n      pvFixedLeg,\n      pvFloatingLeg,\n      duration,\n      dv01,\n      fixedPayment,\n      floatingPayment\n    };\n  }, [swapInputs]);\n\n  // Futures pricing\n  const futuresValuation = useMemo(() => {\n    const { underlyingPrice: S, timeToExpiry: T, riskFreeRate: r, dividendYield: q, contractSize } = futureInputs;\n    \n    if (!S || !T || !contractSize) return null;\n\n    // Futures price formula: F = S * e^((r-q)*T)\n    const futuresPrice = S * Math.exp((r - q) * T);\n    \n    // Contract value\n    const contractValue = futuresPrice * contractSize;\n    \n    // Basis (Futures - Spot)\n    const basis = futuresPrice - S;\n    \n    // Carry cost\n    const carryCost = S * (r - q) * T;\n    \n    return {\n      futuresPrice,\n      contractValue,\n      basis,\n      carryCost,\n      underlyingValue: S * contractSize\n    };\n  }, [futureInputs]);\n\n  // Generate payoff diagrams\n  const payoffData = useMemo(() => {\n    const spotPrices = [];\n    for (let i = 80; i <= 120; i += 2) {\n      spotPrices.push(i);\n    }\n\n    if (activeDerivative === 'swap') {\n      return spotPrices.map(rate => {\n        const rateDiff = (rate / 100 - swapInputs.fixedRate);\n        const swapPnL = rateDiff * swapInputs.notional * swapInputs.maturity;\n        \n        return {\n          spotPrice: rate,\n          payoff: swapPnL / 1000000, // Convert to millions\n          derivative: 'Interest Rate Swap'\n        };\n      });\n    } else {\n      return spotPrices.map(spot => {\n        const futureValue = spot * Math.exp((futureInputs.riskFreeRate - futureInputs.dividendYield) * futureInputs.timeToExpiry);\n        const contractPnL = (futureValue - futureInputs.strikePrice) * futureInputs.contractSize;\n        \n        return {\n          spotPrice: spot,\n          payoff: contractPnL / 1000, // Convert to thousands\n          derivative: 'Futures Contract'\n        };\n      });\n    }\n  }, [activeDerivative, swapInputs, futureInputs]);\n\n  // Risk scenarios\n  const riskScenarios = useMemo(() => {\n    const scenarios = [];\n    const shocks = [-0.02, -0.01, -0.005, 0, 0.005, 0.01, 0.02];\n    \n    if (activeDerivative === 'swap' && swapValuation) {\n      shocks.forEach(shock => {\n        const newRate = swapInputs.floatingRate + shock;\n        const rateDiff = newRate - swapInputs.fixedRate;\n        const valueChange = rateDiff * swapInputs.notional * swapInputs.maturity;\n        \n        scenarios.push({\n          shock: shock * 100, // Convert to bps\n          valueChange: valueChange / 1000000, // Convert to millions\n          newValue: (swapValuation.swapValue + valueChange) / 1000000\n        });\n      });\n    } else if (futuresValuation) {\n      shocks.forEach(shock => {\n        const newSpot = futureInputs.underlyingPrice * (1 + shock);\n        const newFuturesPrice = newSpot * Math.exp((futureInputs.riskFreeRate - futureInputs.dividendYield) * futureInputs.timeToExpiry);\n        const valueChange = (newFuturesPrice - futuresValuation.futuresPrice) * futureInputs.contractSize;\n        \n        scenarios.push({\n          shock: shock * 100, // Convert to percentage\n          valueChange: valueChange / 1000, // Convert to thousands\n          newValue: (futuresValuation.contractValue + valueChange) / 1000\n        });\n      });\n    }\n    \n    return scenarios;\n  }, [activeDerivative, swapInputs, futureInputs, swapValuation, futuresValuation]);\n\n  const handleSwapInputChange = (field, value) => {\n    setSwapInputs(prev => ({\n      ...prev,\n      [field]: parseFloat(value) || 0\n    }));\n  };\n\n  const handleFutureInputChange = (field, value) => {\n    setFutureInputs(prev => ({\n      ...prev,\n      [field]: parseFloat(value) || 0\n    }));\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex space-x-4 mb-6\">\n        <Button\n          variant={activeDerivative === 'swap' ? 'primary' : 'secondary'}\n          onClick={() => setActiveDerivative('swap')}\n        >\n          Interest Rate Swaps\n        </Button>\n        <Button\n          variant={activeDerivative === 'futures' ? 'primary' : 'secondary'}\n          onClick={() => setActiveDerivative('futures')}\n        >\n          Futures Contracts\n        </Button>\n      </div>\n\n      {activeDerivative === 'swap' && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          <Card className=\"lg:col-span-1\">\n            <div className=\"p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">Swap Parameters</h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Notional Amount ($)\n                  </label>\n                  <Input\n                    type=\"number\"\n                    step=\"1000000\"\n                    value={swapInputs.notional}\n                    onChange={(e) => handleSwapInputChange('notional', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Maturity (Years)\n                  </label>\n                  <Input\n                    type=\"number\"\n                    step=\"0.25\"\n                    value={swapInputs.maturity}\n                    onChange={(e) => handleSwapInputChange('maturity', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Fixed Rate (%)\n                  </label>\n                  <Input\n                    type=\"number\"\n                    step=\"0.001\"\n                    value={swapInputs.fixedRate * 100}\n                    onChange={(e) => handleSwapInputChange('fixedRate', e.target.value / 100)}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Current Floating Rate (%)\n                  </label>\n                  <Input\n                    type=\"number\"\n                    step=\"0.001\"\n                    value={swapInputs.floatingRate * 100}\n                    onChange={(e) => handleSwapInputChange('floatingRate', e.target.value / 100)}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Payment Frequency\n                  </label>\n                  <Select\n                    value={swapInputs.paymentFrequency}\n                    onChange={(e) => handleSwapInputChange('paymentFrequency', e.target.value)}\n                    options={[\n                      { value: 1, label: 'Annual' },\n                      { value: 2, label: 'Semi-Annual' },\n                      { value: 4, label: 'Quarterly' }\n                    ]}\n                  />\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          <Card className=\"lg:col-span-2\">\n            <div className=\"p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">Swap Valuation</h3>\n              \n              {swapValuation && (\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\n                  <div className=\"bg-blue-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Swap Value</div>\n                    <div className=\"text-xl font-bold text-blue-600\">\n                      ${swapValuation.swapValue?.toLocaleString() || 'N/A'}\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-green-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">PV Fixed Leg</div>\n                    <div className=\"text-lg font-semibold text-green-600\">\n                      ${swapValuation.pvFixedLeg?.toLocaleString() || 'N/A'}\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-red-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">PV Floating Leg</div>\n                    <div className=\"text-lg font-semibold text-red-600\">\n                      ${swapValuation.pvFloatingLeg?.toLocaleString() || 'N/A'}\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-purple-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Duration</div>\n                    <div className=\"text-lg font-semibold text-purple-600\">\n                      {swapValuation.duration?.toFixed(2) || 'N/A'}\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-yellow-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">DV01</div>\n                    <div className=\"text-lg font-semibold text-yellow-600\">\n                      ${swapValuation.dv01?.toLocaleString() || 'N/A'}\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-indigo-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Fixed Payment</div>\n                    <div className=\"text-lg font-semibold text-indigo-600\">\n                      ${swapValuation.fixedPayment?.toLocaleString() || 'N/A'}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </Card>\n        </div>\n      )}\n\n      {activeDerivative === 'futures' && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          <Card className=\"lg:col-span-1\">\n            <div className=\"p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">Futures Parameters</h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Underlying Price ($)\n                  </label>\n                  <Input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={futureInputs.underlyingPrice}\n                    onChange={(e) => handleFutureInputChange('underlyingPrice', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Strike Price ($)\n                  </label>\n                  <Input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={futureInputs.strikePrice}\n                    onChange={(e) => handleFutureInputChange('strikePrice', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Time to Expiry (Years)\n                  </label>\n                  <Input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={futureInputs.timeToExpiry}\n                    onChange={(e) => handleFutureInputChange('timeToExpiry', e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Risk-Free Rate (%)\n                  </label>\n                  <Input\n                    type=\"number\"\n                    step=\"0.001\"\n                    value={futureInputs.riskFreeRate * 100}\n                    onChange={(e) => handleFutureInputChange('riskFreeRate', e.target.value / 100)}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Dividend Yield (%)\n                  </label>\n                  <Input\n                    type=\"number\"\n                    step=\"0.001\"\n                    value={futureInputs.dividendYield * 100}\n                    onChange={(e) => handleFutureInputChange('dividendYield', e.target.value / 100)}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Contract Size\n                  </label>\n                  <Input\n                    type=\"number\"\n                    step=\"1\"\n                    value={futureInputs.contractSize}\n                    onChange={(e) => handleFutureInputChange('contractSize', e.target.value)}\n                  />\n                </div>\n              </div>\n            </div>\n          </Card>\n\n          <Card className=\"lg:col-span-2\">\n            <div className=\"p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">Futures Valuation</h3>\n              \n              {futuresValuation && (\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4 mb-6\">\n                  <div className=\"bg-blue-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Futures Price</div>\n                    <div className=\"text-xl font-bold text-blue-600\">\n                      ${futuresValuation.futuresPrice?.toFixed(2) || 'N/A'}\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-green-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Contract Value</div>\n                    <div className=\"text-lg font-semibold text-green-600\">\n                      ${futuresValuation.contractValue?.toLocaleString() || 'N/A'}\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-purple-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Basis</div>\n                    <div className=\"text-lg font-semibold text-purple-600\">\n                      ${futuresValuation.basis?.toFixed(2) || 'N/A'}\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-yellow-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Carry Cost</div>\n                    <div className=\"text-lg font-semibold text-yellow-600\">\n                      ${futuresValuation.carryCost?.toFixed(2) || 'N/A'}\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-red-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Underlying Value</div>\n                    <div className=\"text-lg font-semibold text-red-600\">\n                      ${futuresValuation.underlyingValue?.toLocaleString() || 'N/A'}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </Card>\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Payoff Diagram</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <AreaChart data={payoffData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"spotPrice\" \n                  tickFormatter={(value) => activeDerivative === 'swap' ? `${value}%` : `$${value}`}\n                />\n                <YAxis \n                  tickFormatter={(value) => activeDerivative === 'swap' ? `$${value}M` : `$${value}K`}\n                />\n                <Tooltip \n                  formatter={(value) => [\n                    activeDerivative === 'swap' ? `$${value.toFixed(2)}M` : `$${value.toFixed(2)}K`,\n                    'P&L'\n                  ]}\n                  labelFormatter={(value) => \n                    activeDerivative === 'swap' ? `Rate: ${value}%` : `Spot: $${value}`\n                  }\n                />\n                <Area \n                  type=\"monotone\" \n                  dataKey=\"payoff\" \n                  stroke=\"#3b82f6\" \n                  fill=\"#3b82f6\" \n                  fillOpacity={0.3}\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n          </div>\n        </Card>\n\n        <Card>\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Risk Scenarios</h3>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={riskScenarios}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis \n                  dataKey=\"shock\" \n                  tickFormatter={(value) => `${value > 0 ? '+' : ''}${value}${activeDerivative === 'swap' ? 'bps' : '%'}`}\n                />\n                <YAxis \n                  tickFormatter={(value) => activeDerivative === 'swap' ? `$${value.toFixed(1)}M` : `$${value.toFixed(1)}K`}\n                />\n                <Tooltip \n                  formatter={(value, name) => [\n                    activeDerivative === 'swap' ? `$${value.toFixed(2)}M` : `$${value.toFixed(2)}K`,\n                    name === 'valueChange' ? 'Value Change' : 'New Value'\n                  ]}\n                  labelFormatter={(value) => \n                    `Shock: ${value > 0 ? '+' : ''}${value}${activeDerivative === 'swap' ? ' bps' : '%'}`\n                  }\n                />\n                <Legend />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"valueChange\" \n                  stroke=\"#ef4444\" \n                  name=\"Value Change\"\n                  strokeWidth={2}\n                />\n                <Line \n                  type=\"monotone\" \n                  dataKey=\"newValue\" \n                  stroke=\"#22c55e\" \n                  name=\"New Value\"\n                  strokeWidth={2}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default DerivativesModeling;","import { useState, useEffect } from 'react';\nimport { Card } from '../components/ui/Card';\nimport Button from '../components/ui/Button';\nimport ProductionErrorBoundary from '../components/ErrorBoundary/ProductionErrorBoundary';\nimport OptionsPricing from '../components/AdvancedAnalytics/OptionsPricing';\nimport FixedIncomeAnalytics from '../components/AdvancedAnalytics/FixedIncomeAnalytics';\nimport CreditModeling from '../components/AdvancedAnalytics/CreditModeling';\nimport DerivativesModeling from '../components/AdvancedAnalytics/DerivativesModeling';\n\nconst AdvancedAnalytics = () => {\n  const [activeTab, setActiveTab] = useState('options');\n\n  // Listen for tab selection events from keyboard shortcuts\n  useEffect(() => {\n    const handleTabSelection = (event) => {\n      setActiveTab(event.detail.tab);\n    };\n\n    window.addEventListener('select-tab', handleTabSelection);\n    return () => window.removeEventListener('select-tab', handleTabSelection);\n  }, []);\n\n  const tabs = [\n    { id: 'options', label: 'Options Pricing', component: OptionsPricing },\n    { id: 'fixed-income', label: 'Fixed Income', component: FixedIncomeAnalytics },\n    { id: 'credit', label: 'Credit Modeling', component: CreditModeling },\n    { id: 'derivatives', label: 'Derivatives', component: DerivativesModeling }\n  ];\n\n  const ActiveComponent = tabs.find(tab => tab.id === activeTab)?.component;\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Advanced Analytics</h1>\n          <p className=\"text-gray-600\">\n            Professional-grade pricing models and risk analytics for complex financial instruments\n          </p>\n        </div>\n\n        <Card className=\"mb-6\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"flex space-x-8\" aria-label=\"Tabs\">\n              {tabs.map((tab) => (\n                <Button\n                  key={tab.id}\n                  variant={activeTab === tab.id ? 'primary' : 'ghost'}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`py-4 px-1 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  {tab.label}\n                </Button>\n              ))}\n            </nav>\n          </div>\n\n          <div className=\"p-6\">\n            {ActiveComponent && (\n              <ProductionErrorBoundary level=\"component\">\n                <ActiveComponent />\n              </ProductionErrorBoundary>\n            )}\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default AdvancedAnalytics;"],"names":["Icon","name","size","color","className","strokeWidth","props","IconComponent","LucideIcons","jsx","HelpCircle","cn","inputs","twMerge","clsx","propTypes","PropTypes","string","isRequired","number","buttonVariants","cva","variants","variant","primary","default","destructive","outline","secondary","ghost","link","success","warning","danger","minimal","sm","lg","icon","xs","xl","defaultVariants","Button","React","forwardRef","asChild","children","loading","iconName","iconPosition","iconSize","fullWidth","disabled","ref","Comp","Slot","calculatedIconSize","LoadingSpinner","jsxs","fill","viewBox","cx","cy","r","stroke","d","renderIcon","displayName","ProductionErrorBoundary","Component","constructor","super","this","state","hasError","error","errorInfo","errorId","getDerivedStateFromError","componentDidCatch","generateErrorId","setState","logToMonitoring","Date","now","Math","random","toString","substring","window","Sentry","withScope","scope","setTag","setContext","setLevel","captureException","fetch","method","headers","body","JSON","stringify","message","stack","componentStack","timestamp","toISOString","userAgent","navigator","url","location","href","userId","catch","err","monitoringError","handleRetry","handleReload","reload","handleGoHome","handleReportIssue","subject","encodeURIComponent","open","render","fallback","Fallback","level","onRetry","AlertTriangle","onClick","RefreshCw","Home","MessageCircle","Card","CardHeader","CardTitle","_ref","CardContent","Input","type","label","description","required","id","inputId","substr","htmlFor","Select","options","value","_defaultValue","placeholder","multiple","searchable","clearable","onChange","onOpenChange","isOpen","setIsOpen","useState","searchTerm","setSearchTerm","selectId","filteredOptions","filter","option","toLowerCase","includes","handleOptionSelect","newValue","updatedValue","v","isSelected","optionValue","hasValue","length","newIsOpen","selectedOptions","opt","selectedOption","find","getSelectedDisplay","e","stopPropagation","X","ChevronDown","tabIndex","map","Search","target","role","onKeyDown","key","preventDefault","Check","OptionsPricing","setInputs","spotPrice","strikePrice","timeToExpiry","riskFreeRate","volatility","optionType","dividendYield","model","setModel","blackScholes","useMemo","S","K","T","vol","q","d1","log","sqrt","d2","normalCDF","x","erf","sign","t","abs","exp","Nd1","Nd2","NminusD1","NminusD2","price","delta","gamma","theta","vega","rho","normalPDF","PI","binomialTree","steps","dt","u","p","tree","Array","i","ST","pow","max","j","handleInputChange","field","prev","parseFloat","volSurfaceData","strikes","expiry","round","reduce","acc","result","step","toFixed","Fragment","ResponsiveContainer","width","height","LineChart","data","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","tickFormatter","Tooltip","formatter","Legend","Line","FixedIncomeAnalytics","faceValue","couponRate","maturity","paymentFrequency","marketYield","daysToSettlement","yieldCurveInputs","setYieldCurveInputs","yield","bondAnalytics","FV","C","n","Y","periodsPerYear","totalPeriods","couponPayment","periodYield","pvCoupons","pvPrincipal","durationSum","macaulayDuration","modifiedDuration","convexitySum","timePeriod","ytm","currentYield","convexity","dv01","riskAnalytics","shock","durationEffect","priceChange2nd","yieldShock","priceChange1st","newPrice1st","newPrice2nd","labelFormatter","dot","point","index","item","handleYieldCurveChange","CreditModeling","exposureAmount","timeHorizon","lgd","pd","correlationFactor","confidenceLevel","scorecardInputs","setScorecardInputs","revenue","debt","ebitda","currentRatio","quickRatio","industryRisk","managementQuality","marketPosition","creditRiskMetrics","EAD","LGD","PD","expectedLoss","unexpectedLoss","economicCapital","normalInverse","valueAtRisk","raroc","cumulativePD","lossRate","capitalRatio","creditScore","score","maxScore","debtToEbitda","ebitdaMargin","low","medium","high","excellent","good","fair","poor","dominant","strong","competitive","weak","scorePercentage","rating","estimatedPD","AAA","AA","A","BBB","BB","B","CCC","D","scenarios","randomPD","loss","push","scenario","lossPercentage","sort","a","b","handleScorecardChange","isNaN","COLORS","lossDistributionData","range","count","probability","toLocaleString","BarChart","Bar","PieChart","Pie","innerRadius","outerRadius","nameKey","entry","Cell","DerivativesModeling","activeDerivative","setActiveDerivative","swapInputs","setSwapInputs","notional","fixedRate","floatingRate","dayCount","futureInputs","setFutureInputs","underlyingPrice","contractSize","swapValuation","fixedPayment","floatingPayment","discountRate","pvFixedLeg","pvFloatingLeg","swapValue","duration","futuresValuation","futuresPrice","contractValue","basis","carryCost","underlyingValue","payoffData","spotPrices","rate","payoff","derivative","spot","riskScenarios","shocks","forEach","valueChange","handleSwapInputChange","handleFutureInputChange","AreaChart","Area","fillOpacity","activeTab","setActiveTab","useEffect","handleTabSelection","event","detail","tab","addEventListener","removeEventListener","tabs","component","ActiveComponent"],"mappings":"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"}