{"version":3,"file":"FinancialInputsDemo-DrB2bOj7.js","sources":["../../src/components/FinancialInputsDemo.jsx"],"sourcesContent":["import { Calculator, TrendingUp, DollarSign } from 'lucide-react';\nimport React, { useState } from 'react';\n\nimport {\n  FinancialInput,\n  EditableCell,\n  CurrencyInput,\n  LoadingState,\n  LoadingSkeleton,\n  LoadingDots,\n  ValidationFeedback,\n  FieldValidation,\n  ValidationSummary\n} from './ui';\nimport { Card } from './ui/Card';\n\nconst FinancialInputsDemo = () => {\n  const [values, setValues] = useState({\n    revenue: 1250000,\n    expenses: 850000,\n    growth: 12.5,\n    margin: 32.1,\n    editableValue: 450000,\n    currency: 2400000\n  });\n\n  const [isLoading, setIsLoading] = useState({\n    calculation: false,\n    validation: false\n  });\n\n  const [errors, setErrors] = useState([]);\n  const [isEditingCell, setIsEditingCell] = useState(false);\n\n  // Simulate calculation loading\n  const simulateCalculation = () => {\n    setIsLoading(prev => ({ ...prev, calculation: true }));\n    setTimeout(() => {\n      setIsLoading(prev => ({ ...prev, calculation: false }));\n    }, 2000);\n  };\n\n  const handleValueChange = (key) => (newValue) => {\n    setValues(prev => ({ ...prev, [key]: newValue }));\n  };\n\n  const validateInput = (value, min, max) => {\n    const newErrors = [];\n    if (value < min) newErrors.push(`Value must be at least ${min}`);\n    if (value > max) newErrors.push(`Value must not exceed ${max}`);\n    setErrors(newErrors);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 p-8\">\n      <div className=\"max-w-6xl mx-auto space-y-8\">\n        {/* Header */}\n        <div className=\"text-center space-y-4\">\n          <div className=\"flex items-center justify-center gap-3\">\n            <div className=\"p-3 bg-blue-100 rounded-xl\">\n              <Calculator className=\"w-8 h-8 text-blue-600\" />\n            </div>\n            <h1 className=\"text-3xl font-bold text-slate-900\">Enhanced Financial Input Components</h1>\n          </div>\n          <p className=\"text-lg text-slate-600 max-w-2xl mx-auto\">\n            Professional financial input components with smart formatting, validation, and seamless user experience\n          </p>\n        </div>\n\n        {/* Main Demo Grid */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n\n          {/* Financial Input Component */}\n          <Card className=\"p-6 space-y-6\">\n            <div className=\"flex items-center gap-3\">\n              <DollarSign className=\"w-5 h-5 text-emerald-600\" />\n              <h2 className=\"text-xl font-semibold text-slate-900\">FinancialInput Component</h2>\n            </div>\n\n            <div className=\"space-y-4\">\n              <FinancialInput\n                label=\"Annual Revenue\"\n                value={values.revenue}\n                onChange={handleValueChange('revenue')}\n                type=\"currency\"\n                currency=\"USD\"\n                description=\"Enter the company's annual revenue\"\n                required\n                onValidation={(isValid, message) => console.log('Validation:', isValid, message)}\n              />\n\n              <FinancialInput\n                label=\"Operating Expenses\"\n                value={values.expenses}\n                onChange={handleValueChange('expenses')}\n                type=\"currency\"\n                currency=\"USD\"\n                error={values.expenses > values.revenue ? 'Expenses cannot exceed revenue' : null}\n              />\n\n              <FinancialInput\n                label=\"Growth Rate\"\n                value={values.growth}\n                onChange={handleValueChange('growth')}\n                type=\"percentage\"\n                suffix=\"%\"\n                decimals={1}\n                description=\"Year-over-year growth percentage\"\n              />\n\n              <FinancialInput\n                label=\"Profit Margin\"\n                value={values.margin}\n                onChange={handleValueChange('margin')}\n                type=\"number\"\n                suffix=\"%\"\n                decimals={2}\n                min={0}\n                max={100}\n                loading={isLoading.validation}\n              />\n            </div>\n          </Card>\n\n          {/* Currency Input Component */}\n          <Card className=\"p-6 space-y-6\">\n            <div className=\"flex items-center gap-3\">\n              <TrendingUp className=\"w-5 h-5 text-blue-600\" />\n              <h2 className=\"text-xl font-semibold text-slate-900\">CurrencyInput Component</h2>\n            </div>\n\n            <div className=\"space-y-4\">\n              <CurrencyInput\n                label=\"Market Valuation\"\n                value={values.currency}\n                onChange={handleValueChange('currency')}\n                currency=\"USD\"\n                abbreviateDisplay={true}\n                showTrend={true}\n                previousValue={2100000}\n                description=\"Company market valuation with trend indicator\"\n              />\n\n              <CurrencyInput\n                label=\"Investment Amount (EUR)\"\n                value={850000}\n                onChange={(val) => console.log('EUR Value:', val)}\n                currency=\"EUR\"\n                locale=\"de-DE\"\n                size=\"lg\"\n              />\n\n              <CurrencyInput\n                label=\"Small Investment\"\n                value={25000}\n                onChange={(val) => console.log('Small Investment:', val)}\n                currency=\"USD\"\n                size=\"sm\"\n                variant=\"filled\"\n              />\n\n              <CurrencyInput\n                label=\"Japanese Investment\"\n                value={15000000}\n                onChange={(val) => console.log('JPY Value:', val)}\n                currency=\"JPY\"\n                locale=\"ja-JP\"\n                abbreviateDisplay={true}\n              />\n            </div>\n          </Card>\n\n          {/* Editable Cells */}\n          <Card className=\"p-6 space-y-6\">\n            <h2 className=\"text-xl font-semibold text-slate-900\">EditableCell Component</h2>\n\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-3 gap-4 p-4 bg-slate-50 rounded-lg\">\n                <div className=\"text-sm font-medium text-slate-600\">Account</div>\n                <div className=\"text-sm font-medium text-slate-600\">Current</div>\n                <div className=\"text-sm font-medium text-slate-600\">Adjusted</div>\n\n                <div className=\"text-sm text-slate-700\">Revenue</div>\n                <EditableCell\n                  value={values.editableValue}\n                  onChange={handleValueChange('editableValue')}\n                  type=\"currency\"\n                  isEditing={isEditingCell}\n                  onEdit={setIsEditingCell}\n                  variant=\"default\"\n                />\n                <EditableCell\n                  value={values.editableValue * 1.15}\n                  onChange={(val) => console.log('Adjusted:', val)}\n                  type=\"currency\"\n                  variant=\"adjusted\"\n                />\n\n                <div className=\"text-sm text-slate-700\">Growth Rate</div>\n                <EditableCell\n                  value={15.5}\n                  onChange={(val) => console.log('Growth:', val)}\n                  type=\"percentage\"\n                />\n                <EditableCell\n                  value={18.2}\n                  onChange={(val) => console.log('Adj Growth:', val)}\n                  type=\"percentage\"\n                  variant=\"adjusted\"\n                />\n\n                <div className=\"text-sm text-slate-700\">Calculated</div>\n                <EditableCell\n                  value={values.editableValue * 0.25}\n                  isFormula={true}\n                  variant=\"formula\"\n                />\n                <EditableCell\n                  value={values.editableValue * 1.15 * 0.25}\n                  isFormula={true}\n                  variant=\"formula\"\n                />\n              </div>\n            </div>\n          </Card>\n\n          {/* Loading States */}\n          <Card className=\"p-6 space-y-6\">\n            <h2 className=\"text-xl font-semibold text-slate-900\">Loading States</h2>\n\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <LoadingState\n                  type=\"calculation\"\n                  message=\"Calculating DCF...\"\n                  size=\"default\"\n                />\n                <LoadingState\n                  type=\"financial\"\n                  message=\"Processing data...\"\n                  size=\"default\"\n                  variant=\"subtle\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Inline Loading States</h4>\n                <div className=\"flex items-center gap-4\">\n                  <LoadingState type=\"inline\" message=\"Loading...\" size=\"sm\" />\n                  <LoadingDots size=\"default\" variant=\"primary\" />\n                  <LoadingSkeleton width=\"w-24\" height=\"h-4\" variant=\"currency\" />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Interactive Loading Demo</h4>\n                <button\n                  onClick={simulateCalculation}\n                  disabled={isLoading.calculation}\n                  className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white rounded-lg transition-colors\"\n                >\n                  {isLoading.calculation ? 'Calculating...' : 'Run Calculation'}\n                </button>\n                {isLoading.calculation && (\n                  <LoadingState\n                    type=\"calculation\"\n                    message=\"Computing financial metrics...\"\n                    size=\"sm\"\n                    variant=\"pulsing\"\n                  />\n                )}\n              </div>\n            </div>\n          </Card>\n\n          {/* Validation Feedback */}\n          <Card className=\"p-6 space-y-6 lg:col-span-2\">\n            <h2 className=\"text-xl font-semibold text-slate-900\">Validation & Feedback</h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Individual Validation Messages</h4>\n\n                <ValidationFeedback\n                  type=\"error\"\n                  message=\"Revenue cannot be negative\"\n                  size=\"default\"\n                />\n\n                <ValidationFeedback\n                  type=\"warning\"\n                  message=\"Growth rate seems unusually high\"\n                  size=\"default\"\n                />\n\n                <ValidationFeedback\n                  type=\"success\"\n                  message=\"All financial metrics are within expected ranges\"\n                  size=\"default\"\n                />\n\n                <ValidationFeedback\n                  type=\"info\"\n                  message=\"Consider adjusting the discount rate based on market conditions\"\n                  size=\"default\"\n                />\n              </div>\n\n              <div className=\"space-y-4\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Field Validation</h4>\n\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-slate-700\">Test Validation</label>\n                  <input\n                    type=\"number\"\n                    value={-50}\n                    onChange={(e) => validateInput(parseFloat(e.target.value), 0, 1000)}\n                    className=\"w-full px-3 py-2 border border-input rounded-lg\"\n                  />\n                  <FieldValidation\n                    error={errors.length > 0 ? errors[0] : null}\n                    info={errors.length === 0 ? 'Value is within acceptable range' : null}\n                  />\n                </div>\n\n                <ValidationSummary\n                  errors={[\n                    'Operating expenses exceed revenue',\n                    'Growth rate must be between 0% and 100%'\n                  ]}\n                  warnings={[\n                    'Margin seems low for this industry',\n                    'Consider reviewing the assumptions'\n                  ]}\n                  collapsible={true}\n                />\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Usage Examples */}\n        <Card className=\"p-6\">\n          <h2 className=\"text-xl font-semibold text-slate-900 mb-4\">Quick Usage Examples</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 text-sm\">\n            <div className=\"p-4 bg-slate-50 rounded-lg\">\n              <h4 className=\"font-medium text-slate-700 mb-2\">Basic Currency Input</h4>\n              <code className=\"text-xs text-slate-600 block whitespace-pre\">{`<CurrencyInput\n  value={1000000}\n  onChange={setValue}\n  currency=\"USD\"\n  label=\"Revenue\"\n/>`}\n              </code>\n            </div>\n\n            <div className=\"p-4 bg-slate-50 rounded-lg\">\n              <h4 className=\"font-medium text-slate-700 mb-2\">Editable Table Cell</h4>\n              <code className=\"text-xs text-slate-600 block whitespace-pre\">{`<EditableCell\n  value={value}\n  onChange={onChange}\n  type=\"currency\"\n  variant=\"adjusted\"\n/>`}\n              </code>\n            </div>\n\n            <div className=\"p-4 bg-slate-50 rounded-lg\">\n              <h4 className=\"font-medium text-slate-700 mb-2\">Validation Feedback</h4>\n              <code className=\"text-xs text-slate-600 block whitespace-pre\">{`<FieldValidation\n  error=\"Invalid input\"\n  warning=\"Check value\"\n  success=\"Valid input\"\n/>`}\n              </code>\n            </div>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default FinancialInputsDemo;\n"],"names":["FinancialInputsDemo","values","setValues","useState","revenue","expenses","growth","margin","editableValue","currency","isLoading","setIsLoading","calculation","validation","errors","setErrors","isEditingCell","setIsEditingCell","handleValueChange","key","newValue","prev","className","children","jsxs","jsx","Calculator","Card","DollarSign","FinancialInput","label","value","onChange","type","description","required","onValidation","isValid","message","error","suffix","decimals","min","max","loading","TrendingUp","CurrencyInput","abbreviateDisplay","showTrend","previousValue","val","locale","size","variant","EditableCell","isEditing","onEdit","isFormula","LoadingState","LoadingDots","LoadingSkeleton","width","height","onClick","setTimeout","disabled","ValidationFeedback","e","newErrors","push","validateInput","parseFloat","target","FieldValidation","length","info","ValidationSummary","warnings","collapsible"],"mappings":"uVAgBA,MAAMA,EAAsB,KAC1B,MAAOC,EAAQC,GAAaC,WAAS,CACnCC,QAAS,MACTC,SAAU,KACVC,OAAQ,KACRC,OAAQ,KACRC,cAAe,KACfC,SAAU,QAGLC,EAAWC,GAAgBR,WAAS,CACzCS,aAAa,EACbC,YAAY,KAGPC,EAAQC,GAAaZ,EAAAA,SAAS,KAC9Ba,EAAeC,GAAoBd,EAAAA,UAAS,GAU7Ce,EAAqBC,GAASC,IAClClB,EAAUmB,QAAcA,EAAMF,CAACA,GAAMC,MAUvC,aACG,MAAA,CAAIE,UAAU,gEACbC,SAAAC,EAAAA,KAAC,MAAA,CAAIF,UAAU,8BAEbC,SAAA,CAAAC,EAAAA,KAAC,MAAA,CAAIF,UAAU,wBACbC,SAAA,CAAAC,EAAAA,KAAC,MAAA,CAAIF,UAAU,yCACbC,SAAA,CAAAE,EAAAA,IAAC,OAAIH,UAAU,6BACbC,eAACG,EAAA,CAAWJ,UAAU,4BAExBG,EAAAA,IAAC,KAAA,CAAGH,UAAU,oCAAoCC,SAAA,2CAEpDE,EAAAA,IAAC,IAAA,CAAEH,UAAU,2CAA2CC,SAAA,+GAM1DC,EAAAA,KAAC,MAAA,CAAIF,UAAU,wCAGbC,SAAA,CAAAC,EAAAA,KAACG,EAAA,CAAKL,UAAU,gBACdC,SAAA,CAAAC,EAAAA,KAAC,MAAA,CAAIF,UAAU,0BACbC,SAAA,CAAAE,EAAAA,IAACG,EAAA,CAAWN,UAAU,6BACtBG,EAAAA,IAAC,KAAA,CAAGH,UAAU,uCAAuCC,SAAA,gCAGvDC,EAAAA,KAAC,MAAA,CAAIF,UAAU,YACbC,SAAA,CAAAE,EAAAA,IAACI,EAAA,CACCC,MAAM,iBACNC,MAAO9B,EAAOG,QACd4B,SAAUd,EAAkB,WAC5Be,KAAK,WACLxB,SAAS,MACTyB,YAAY,qCACZC,UAAQ,EACRC,aAAc,CAACC,EAASC,SAG1Bb,EAAAA,IAACI,EAAA,CACCC,MAAM,qBACNC,MAAO9B,EAAOI,SACd2B,SAAUd,EAAkB,YAC5Be,KAAK,WACLxB,SAAS,MACT8B,MAAOtC,EAAOI,SAAWJ,EAAOG,QAAU,iCAAmC,OAG/EqB,EAAAA,IAACI,EAAA,CACCC,MAAM,cACNC,MAAO9B,EAAOK,OACd0B,SAAUd,EAAkB,UAC5Be,KAAK,aACLO,OAAO,IACPC,SAAU,EACVP,YAAY,qCAGdT,EAAAA,IAACI,EAAA,CACCC,MAAM,gBACNC,MAAO9B,EAAOM,OACdyB,SAAUd,EAAkB,UAC5Be,KAAK,SACLO,OAAO,IACPC,SAAU,EACVC,IAAK,EACLC,IAAK,IACLC,QAASlC,EAAUG,mBAMzBW,EAAAA,KAACG,EAAA,CAAKL,UAAU,gBACdC,SAAA,CAAAC,EAAAA,KAAC,MAAA,CAAIF,UAAU,0BACbC,SAAA,CAAAE,EAAAA,IAACoB,EAAA,CAAWvB,UAAU,0BACtBG,EAAAA,IAAC,KAAA,CAAGH,UAAU,uCAAuCC,SAAA,+BAGvDC,EAAAA,KAAC,MAAA,CAAIF,UAAU,YACbC,SAAA,CAAAE,EAAAA,IAACqB,EAAA,CACChB,MAAM,mBACNC,MAAO9B,EAAOQ,SACduB,SAAUd,EAAkB,YAC5BT,SAAS,MACTsC,mBAAmB,EACnBC,WAAW,EACXC,cAAe,KACff,YAAY,kDAGdT,EAAAA,IAACqB,EAAA,CACChB,MAAM,0BACNC,MAAO,KACPC,SAAWkB,MACXzC,SAAS,MACT0C,OAAO,QACPC,KAAK,OAGP3B,EAAAA,IAACqB,EAAA,CACChB,MAAM,mBACNC,MAAO,KACPC,SAAWkB,MACXzC,SAAS,MACT2C,KAAK,KACLC,QAAQ,WAGV5B,EAAAA,IAACqB,EAAA,CACChB,MAAM,sBACNC,MAAO,KACPC,SAAWkB,MACXzC,SAAS,MACT0C,OAAO,QACPJ,mBAAmB,UAMzBvB,EAAAA,KAACG,EAAA,CAAKL,UAAU,gBACdC,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAGH,UAAU,uCAAuCC,SAAA,iCAEpD,MAAA,CAAID,UAAU,YACbC,SAAAC,EAAAA,KAAC,MAAA,CAAIF,UAAU,oDACbC,SAAA,CAAAE,EAAAA,IAAC,MAAA,CAAIH,UAAU,qCAAqCC,SAAA,YACpDE,EAAAA,IAAC,MAAA,CAAIH,UAAU,qCAAqCC,SAAA,YACpDE,EAAAA,IAAC,MAAA,CAAIH,UAAU,qCAAqCC,SAAA,aAEpDE,EAAAA,IAAC,MAAA,CAAIH,UAAU,yBAAyBC,SAAA,YACxCE,EAAAA,IAAC6B,EAAA,CACCvB,MAAO9B,EAAOO,cACdwB,SAAUd,EAAkB,iBAC5Be,KAAK,WACLsB,UAAWvC,EACXwC,OAAQvC,EACRoC,QAAQ,YAEV5B,EAAAA,IAAC6B,EAAA,CACCvB,MAA8B,KAAvB9B,EAAOO,cACdwB,SAAWkB,MACXjB,KAAK,WACLoB,QAAQ,aAGV5B,EAAAA,IAAC,MAAA,CAAIH,UAAU,yBAAyBC,SAAA,gBACxCE,EAAAA,IAAC6B,EAAA,CACCvB,MAAO,KACPC,SAAWkB,MACXjB,KAAK,eAEPR,EAAAA,IAAC6B,EAAA,CACCvB,MAAO,KACPC,SAAWkB,MACXjB,KAAK,aACLoB,QAAQ,aAGV5B,EAAAA,IAAC,MAAA,CAAIH,UAAU,yBAAyBC,SAAA,eACxCE,EAAAA,IAAC6B,EAAA,CACCvB,MAA8B,IAAvB9B,EAAOO,cACdiD,WAAW,EACXJ,QAAQ,YAEV5B,EAAAA,IAAC6B,EAAA,CACCvB,MAA8B,KAAvB9B,EAAOO,cAAuB,IACrCiD,WAAW,EACXJ,QAAQ,oBAOhB7B,EAAAA,KAACG,EAAA,CAAKL,UAAU,gBACdC,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAGH,UAAU,uCAAuCC,SAAA,mBAErDC,EAAAA,KAAC,MAAA,CAAIF,UAAU,YACbC,SAAA,CAAAC,EAAAA,KAAC,MAAA,CAAIF,UAAU,yBACbC,SAAA,CAAAE,EAAAA,IAACiC,EAAA,CACCzB,KAAK,cACLK,QAAQ,qBACRc,KAAK,YAEP3B,EAAAA,IAACiC,EAAA,CACCzB,KAAK,YACLK,QAAQ,qBACRc,KAAK,UACLC,QAAQ,cAIZ7B,EAAAA,KAAC,MAAA,CAAIF,UAAU,YACbC,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAGH,UAAU,qCAAqCC,SAAA,0BACnDC,EAAAA,KAAC,MAAA,CAAIF,UAAU,0BACbC,SAAA,CAAAE,MAACiC,GAAazB,KAAK,SAASK,QAAQ,aAAac,KAAK,OACtD3B,EAAAA,IAACkC,EAAA,CAAYP,KAAK,UAAUC,QAAQ,kBACnCO,EAAA,CAAgBC,MAAM,OAAOC,OAAO,MAAMT,QAAQ,mBAIvD7B,EAAAA,KAAC,MAAA,CAAIF,UAAU,YACbC,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAGH,UAAU,qCAAqCC,SAAA,6BACnDE,EAAAA,IAAC,SAAA,CACCsC,QA9NY,KAC1BpD,UAA2BU,EAAMT,aAAa,KAC9CoD,WAAW,KACTrD,UAA2BU,EAAMT,aAAa,MAC7C,MA2NWqD,SAAUvD,EAAUE,YACpBU,UAAU,uGAETC,SAAAb,EAAUE,YAAc,iBAAmB,oBAE7CF,EAAUE,aACTa,EAAAA,IAACiC,EAAA,CACCzB,KAAK,cACLK,QAAQ,iCACRc,KAAK,KACLC,QAAQ,qBAQlB7B,EAAAA,KAACG,EAAA,CAAKL,UAAU,8BACdC,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAGH,UAAU,uCAAuCC,SAAA,0BAErDC,EAAAA,KAAC,MAAA,CAAIF,UAAU,wCACbC,SAAA,CAAAC,EAAAA,KAAC,MAAA,CAAIF,UAAU,YACbC,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAGH,UAAU,qCAAqCC,SAAA,mCAEnDE,EAAAA,IAACyC,EAAA,CACCjC,KAAK,QACLK,QAAQ,6BACRc,KAAK,YAGP3B,EAAAA,IAACyC,EAAA,CACCjC,KAAK,UACLK,QAAQ,mCACRc,KAAK,YAGP3B,EAAAA,IAACyC,EAAA,CACCjC,KAAK,UACLK,QAAQ,mDACRc,KAAK,YAGP3B,EAAAA,IAACyC,EAAA,CACCjC,KAAK,OACLK,QAAQ,kEACRc,KAAK,eAIT5B,EAAAA,KAAC,MAAA,CAAIF,UAAU,YACbC,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAGH,UAAU,qCAAqCC,SAAA,qBAEnDC,EAAAA,KAAC,MAAA,CAAIF,UAAU,YACbC,SAAA,CAAAE,EAAAA,IAAC,QAAA,CAAMH,UAAU,qCAAqCC,SAAA,oBACtDE,EAAAA,IAAC,QAAA,CACCQ,KAAK,SACLF,OAAO,GACPC,SAAWmC,GA9QP,CAACpC,IACrB,MAAMqC,EAAY,GACdrC,EA4QuE,GA5Q1DqC,EAAUC,KAAK,4BAC5BtC,EA2Q0E,KA3Q7DqC,EAAUC,KAAK,8BAChCtD,EAAUqD,IA0QuBE,CAAcC,WAAWJ,EAAEK,OAAOzC,QACnDT,UAAU,oDAEZG,EAAAA,IAACgD,EAAA,CACClC,MAAOzB,EAAO4D,OAAS,EAAI5D,EAAO,GAAK,KACvC6D,KAAwB,IAAlB7D,EAAO4D,OAAe,mCAAqC,UAIrEjD,EAAAA,IAACmD,EAAA,CACC9D,OAAQ,CACN,oCACA,2CAEF+D,SAAU,CACR,qCACA,sCAEFC,aAAa,gBAQvBtD,EAAAA,KAACG,EAAA,CAAKL,UAAU,MACdC,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAGH,UAAU,4CAA4CC,SAAA,yBAC1DC,EAAAA,KAAC,MAAA,CAAIF,UAAU,+DACbC,SAAA,CAAAC,EAAAA,KAAC,MAAA,CAAIF,UAAU,6BACbC,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAGH,UAAU,kCAAkCC,SAAA,yBAChDE,EAAAA,IAAC,OAAA,CAAKH,UAAU,8CAA+CC,SAAA,yGASjEC,EAAAA,KAAC,MAAA,CAAIF,UAAU,6BACbC,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAGH,UAAU,kCAAkCC,SAAA,wBAChDE,EAAAA,IAAC,OAAA,CAAKH,UAAU,8CAA+CC,SAAA,0GASjEC,EAAAA,KAAC,MAAA,CAAIF,UAAU,6BACbC,SAAA,CAAAE,EAAAA,IAAC,KAAA,CAAGH,UAAU,kCAAkCC,SAAA,wBAChDE,EAAAA,IAAC,OAAA,CAAKH,UAAU,8CAA+CC,SAAA"}