{"version":3,"file":"private-analysis-CjCiuYvO.js","sources":["../../src/utils/accessibilityTesting.js","../../src/utils/performanceMonitoring.js","../../src/hooks/useAccessibility.js","../../src/components/PrivateAnalysis/AnalysisResults.jsx","../../src/components/PrivateAnalysis/ContextualInsightsSidebar.jsx","../../src/components/PrivateAnalysis/EnhancedMarketDataDashboard.jsx","../../src/components/PrivateAnalysis/FinancialModelWorkspace.jsx","../../src/components/PrivateAnalysis/MobileFinancialSpreadsheet.jsx","../../src/components/PrivateAnalysis/FinancialSpreadsheet.jsx","../../src/components/PrivateAnalysis/DataVisualization.jsx","../../src/components/PrivateAnalysis/WACCCalculator.jsx","../../src/components/PrivateAnalysis/ComparableAnalysis.jsx","../../src/components/PrivateAnalysis/ScenarioModeling.jsx","../../src/components/PrivateAnalysis/SensitivityAnalysis.jsx","../../src/components/PrivateAnalysis/ModelingTools.jsx","../../src/components/PrivateAnalysis/MonteCarloIntegrationHub.jsx"],"sourcesContent":["// Accessibility Testing Framework with axe-core\nimport axeCore from 'axe-core';\n\nclass AccessibilityTester {\n  constructor(options = {}) {\n    this.options = {\n      // Default axe configuration\n      rules: {\n        // Financial application specific rules\n        'color-contrast': { enabled: true },\n        'keyboard-navigation': { enabled: true },\n        'focus-management': { enabled: true },\n        'aria-labels': { enabled: true },\n        'heading-order': { enabled: true },\n        'landmark-one-main': { enabled: true },\n        'skip-link': { enabled: true },\n\n        // Disable rules that might conflict with financial widgets\n        'nested-interactive': { enabled: false }, // Some financial tables need nested controls\n\n        ...options.rules\n      },\n      tags: ['wcag2a', 'wcag2aa', 'wcag21aa', 'best-practice'],\n      runOnly: options.runOnly || null,\n      reporter: options.reporter || 'v2',\n      ...options\n    };\n\n    this.violations = [];\n    this.lastTestResults = null;\n  }\n\n  // Run accessibility tests on current page or specific element\n  async runTests(element = document, options = {}) {\n    const testOptions = {\n      ...this.options,\n      ...options\n    };\n\n    try {\n      console.log('🔍 Running accessibility tests...');\n      const results = await axeCore.run(element, testOptions);\n\n      this.lastTestResults = results;\n      this.violations = results.violations;\n\n      // Log results\n      this.logResults(results);\n\n      // Report violations in development\n      if (process.env.NODE_ENV === 'development') {\n        this.reportViolations(results.violations);\n      }\n\n      // Store results for analytics\n      this.storeResults(results);\n\n      return results;\n    } catch (error) {\n      console.error('Accessibility testing failed:', error);\n      throw error;\n    }\n  }\n\n  // Test specific financial components\n  async testFinancialComponent(selector, componentType = 'generic') {\n    const element = document.querySelector(selector);\n    if (!element) {\n      throw new Error(`Element not found: ${selector}`);\n    }\n\n    // Component-specific test configurations\n    const componentConfigs = {\n      'spreadsheet': {\n        rules: {\n          'table-header': { enabled: true },\n          'th-has-data-cells': { enabled: true },\n          'table-duplicate-name': { enabled: true },\n          'scope-attr-valid': { enabled: true }\n        },\n        tags: ['wcag2aa', 'section508']\n      },\n\n      'chart': {\n        rules: {\n          'image-alt': { enabled: true },\n          'svg-img-alt': { enabled: true },\n          'aria-hidden-focus': { enabled: true }\n        },\n        tags: ['wcag2aa']\n      },\n\n      'calculator': {\n        rules: {\n          'label': { enabled: true },\n          'form-field-multiple-labels': { enabled: true },\n          'duplicate-id': { enabled: true }\n        },\n        tags: ['wcag2aa', 'section508']\n      },\n\n      'modal': {\n        rules: {\n          'focus-trap': { enabled: true },\n          'aria-dialog-name': { enabled: true },\n          'keyboard-navigation': { enabled: true }\n        },\n        tags: ['wcag2aa', 'best-practice']\n      }\n    };\n\n    const config = componentConfigs[componentType] || {};\n    return await this.runTests(element, config);\n  }\n\n  // Test keyboard navigation\n  async testKeyboardNavigation() {\n    console.log('🎹 Testing keyboard navigation...');\n\n    const focusableElements = this.getFocusableElements();\n    const tabOrderIssues = [];\n\n    // Test tab order\n    let previousTabIndex = -1;\n    focusableElements.forEach((element, index) => {\n      const tabIndex = element.tabIndex || 0;\n\n      if (tabIndex > 0 && tabIndex <= previousTabIndex) {\n        tabOrderIssues.push({\n          element: element.tagName,\n          id: element.id,\n          tabIndex,\n          position: index,\n          issue: 'Tab order not sequential'\n        });\n      }\n\n      previousTabIndex = tabIndex;\n    });\n\n    // Test focus visibility\n    const focusVisibilityIssues = [];\n    focusableElements.forEach(element => {\n      const styles = window.getComputedStyle(element, ':focus');\n      const hasOutline = styles.outline !== 'none' && styles.outline !== '0px';\n      const hasBoxShadow = styles.boxShadow !== 'none';\n      const hasBackground = styles.backgroundColor !== 'transparent';\n\n      if (!hasOutline && !hasBoxShadow && !hasBackground) {\n        focusVisibilityIssues.push({\n          element: element.tagName,\n          id: element.id,\n          className: element.className,\n          issue: 'No visible focus indicator'\n        });\n      }\n    });\n\n    return {\n      focusableElementsCount: focusableElements.length,\n      tabOrderIssues,\n      focusVisibilityIssues,\n      passed: tabOrderIssues.length === 0 && focusVisibilityIssues.length === 0\n    };\n  }\n\n  // Test color contrast for financial data\n  async testColorContrast() {\n    console.log('🎨 Testing color contrast...');\n\n    const textElements = document.querySelectorAll('p, span, div, td, th, label, button, a, h1, h2, h3, h4, h5, h6');\n    const contrastIssues = [];\n\n    textElements.forEach(element => {\n      const styles = window.getComputedStyle(element);\n      const textColor = styles.color;\n      const backgroundColor = styles.backgroundColor;\n\n      // Skip if background is transparent\n      if (backgroundColor === 'transparent' || backgroundColor === 'rgba(0, 0, 0, 0)') {\n        return;\n      }\n\n      const contrast = this.calculateContrastRatio(textColor, backgroundColor);\n      const fontSize = parseInt(styles.fontSize);\n      const fontWeight = styles.fontWeight;\n\n      // WCAG AA requirements\n      const isLargeText = fontSize >= 18 || (fontSize >= 14 && (fontWeight === 'bold' || fontWeight >= 700));\n      const requiredRatio = isLargeText ? 3.0 : 4.5;\n\n      if (contrast < requiredRatio) {\n        contrastIssues.push({\n          element: element.tagName,\n          id: element.id,\n          className: element.className,\n          textColor,\n          backgroundColor,\n          contrast: contrast.toFixed(2),\n          required: requiredRatio,\n          fontSize,\n          fontWeight,\n          text: element.textContent?.substring(0, 50) + '...'\n        });\n      }\n    });\n\n    return {\n      totalElements: textElements.length,\n      contrastIssues,\n      passed: contrastIssues.length === 0\n    };\n  }\n\n  // Test financial forms accessibility\n  async testFormAccessibility() {\n    console.log('📝 Testing form accessibility...');\n\n    const forms = document.querySelectorAll('form');\n    const formIssues = [];\n\n    forms.forEach((form, formIndex) => {\n      const inputs = form.querySelectorAll('input, select, textarea');\n\n      inputs.forEach(input => {\n        const issues = [];\n\n        // Check for labels\n        const hasLabel = this.hasAssociatedLabel(input);\n        if (!hasLabel) {\n          issues.push('Missing label');\n        }\n\n        // Check for required field indication\n        if (input.required && !this.hasRequiredIndication(input)) {\n          issues.push('Required field not clearly indicated');\n        }\n\n        // Check for error states\n        if (input.getAttribute('aria-invalid') === 'true' && !this.hasErrorMessage(input)) {\n          issues.push('Error state without error message');\n        }\n\n        // Check for autocomplete on financial inputs\n        if (this.isFinancialInput(input) && !input.autocomplete) {\n          issues.push('Financial input missing autocomplete attribute');\n        }\n\n        if (issues.length > 0) {\n          formIssues.push({\n            formIndex,\n            inputType: input.type,\n            inputId: input.id,\n            inputName: input.name,\n            issues\n          });\n        }\n      });\n    });\n\n    return {\n      totalForms: forms.length,\n      formIssues,\n      passed: formIssues.length === 0\n    };\n  }\n\n  // Generate comprehensive accessibility report\n  generateReport() {\n    if (!this.lastTestResults) {\n      throw new Error('No test results available. Run tests first.');\n    }\n\n    const { violations, passes, incomplete, inapplicable } = this.lastTestResults;\n\n    return {\n      summary: {\n        timestamp: new Date().toISOString(),\n        totalChecks: violations.length + passes.length + incomplete.length + inapplicable.length,\n        violations: violations.length,\n        passes: passes.length,\n        incomplete: incomplete.length,\n        inapplicable: inapplicable.length,\n        score: this.calculateAccessibilityScore()\n      },\n      violations: violations.map(violation => ({\n        id: violation.id,\n        impact: violation.impact,\n        description: violation.description,\n        help: violation.help,\n        helpUrl: violation.helpUrl,\n        nodes: violation.nodes.length,\n        tags: violation.tags\n      })),\n      recommendations: this.generateRecommendations(violations),\n      financialSpecific: this.getFinancialAccessibilityInsights()\n    };\n  }\n\n  // Calculate accessibility score (0-100)\n  calculateAccessibilityScore() {\n    if (!this.lastTestResults) return 0;\n\n    const { violations, passes } = this.lastTestResults;\n    const totalTests = violations.length + passes.length;\n\n    if (totalTests === 0) return 100;\n\n    // Weight violations by impact\n    const impactWeights = { critical: 4, serious: 3, moderate: 2, minor: 1 };\n    const violationScore = violations.reduce((score, violation) => {\n      return score + (impactWeights[violation.impact] || 1);\n    }, 0);\n\n    const maxPossibleScore = totalTests * 4; // Assuming all could be critical\n    return Math.max(0, 100 - (violationScore / maxPossibleScore) * 100);\n  }\n\n  // Generate specific recommendations for financial applications\n  generateRecommendations(violations) {\n    const recommendations = [];\n\n    violations.forEach(violation => {\n      switch (violation.id) {\n        case 'color-contrast':\n          recommendations.push({\n            category: 'Visual Design',\n            priority: 'High',\n            issue: 'Insufficient color contrast',\n            solution: 'Ensure text colors meet WCAG AA standards (4.5:1 for normal text, 3:1 for large text)',\n            financialContext: 'Critical for reading financial data and avoiding misinterpretation of numbers'\n          });\n          break;\n\n        case 'keyboard-navigation':\n          recommendations.push({\n            category: 'Keyboard Access',\n            priority: 'High',\n            issue: 'Keyboard navigation issues',\n            solution: 'Ensure all interactive elements are keyboard accessible with visible focus indicators',\n            financialContext: 'Essential for users who rely on keyboard navigation to access financial tools'\n          });\n          break;\n\n        case 'label':\n          recommendations.push({\n            category: 'Form Controls',\n            priority: 'High',\n            issue: 'Missing form labels',\n            solution: 'Add proper labels to all form controls, especially financial input fields',\n            financialContext: 'Critical for screen readers to understand financial input requirements'\n          });\n          break;\n\n        case 'aria-hidden-focus':\n          recommendations.push({\n            category: 'ARIA Usage',\n            priority: 'Medium',\n            issue: 'Focusable elements hidden from screen readers',\n            solution: 'Review aria-hidden usage on interactive elements',\n            financialContext: 'May hide important financial controls from assistive technology users'\n          });\n          break;\n      }\n    });\n\n    return recommendations;\n  }\n\n  // Get financial application specific accessibility insights\n  getFinancialAccessibilityInsights() {\n    const insights = [];\n\n    // Check for financial data tables\n    const tables = document.querySelectorAll('table');\n    if (tables.length > 0) {\n      insights.push({\n        component: 'Data Tables',\n        recommendation: 'Ensure financial data tables have proper headers and scope attributes for screen reader navigation'\n      });\n    }\n\n    // Check for charts\n    const charts = document.querySelectorAll('[data-chart], .recharts-wrapper, canvas');\n    if (charts.length > 0) {\n      insights.push({\n        component: 'Charts and Graphs',\n        recommendation: 'Provide alternative text descriptions and data tables for financial charts'\n      });\n    }\n\n    // Check for calculators\n    const calculators = document.querySelectorAll('[data-calculator], .calculator');\n    if (calculators.length > 0) {\n      insights.push({\n        component: 'Financial Calculators',\n        recommendation: 'Ensure calculator inputs have clear labels and results are announced to screen readers'\n      });\n    }\n\n    return insights;\n  }\n\n  // Utility methods\n  getFocusableElements() {\n    const focusableSelectors = [\n      'a[href]',\n      'button:not([disabled])',\n      'input:not([disabled])',\n      'select:not([disabled])',\n      'textarea:not([disabled])',\n      '[tabindex]:not([tabindex=\"-1\"])'\n    ];\n\n    return Array.from(document.querySelectorAll(focusableSelectors.join(',')));\n  }\n\n  hasAssociatedLabel(input) {\n    const id = input.id;\n    const ariaLabel = input.getAttribute('aria-label');\n    const ariaLabelledby = input.getAttribute('aria-labelledby');\n\n    if (ariaLabel || ariaLabelledby) return true;\n    if (id && document.querySelector(`label[for=\"${id}\"]`)) return true;\n\n    // Check for wrapping label\n    const parentLabel = input.closest('label');\n    return !!parentLabel;\n  }\n\n  hasRequiredIndication(input) {\n    const ariaRequired = input.getAttribute('aria-required');\n    const requiredAttr = input.hasAttribute('required');\n    const hasRequiredText = this.hasRequiredTextIndicator(input);\n\n    return ariaRequired === 'true' || requiredAttr || hasRequiredText;\n  }\n\n  hasRequiredTextIndicator(input) {\n    const label = this.getAssociatedLabel(input);\n    if (!label) return false;\n\n    const text = label.textContent || '';\n    return text.includes('*') || text.toLowerCase().includes('required');\n  }\n\n  hasErrorMessage(input) {\n    const ariaDescribedby = input.getAttribute('aria-describedby');\n    if (ariaDescribedby) {\n      const errorElement = document.getElementById(ariaDescribedby);\n      return errorElement && errorElement.textContent;\n    }\n    return false;\n  }\n\n  isFinancialInput(input) {\n    const financialTypes = ['number', 'email', 'tel'];\n    const financialNames = ['amount', 'price', 'rate', 'percent', 'currency', 'value'];\n\n    return financialTypes.includes(input.type) ||\n           financialNames.some(name => input.name?.toLowerCase().includes(name));\n  }\n\n  getAssociatedLabel(input) {\n    const id = input.id;\n    if (id) {\n      const label = document.querySelector(`label[for=\"${id}\"]`);\n      if (label) return label;\n    }\n\n    return input.closest('label');\n  }\n\n  // Simplified contrast ratio calculation\n  calculateContrastRatio(color1, color2) {\n    // This is a simplified version - in production use a proper color contrast library\n    const rgb1 = this.parseColor(color1);\n    const rgb2 = this.parseColor(color2);\n\n    const l1 = this.getLuminance(rgb1);\n    const l2 = this.getLuminance(rgb2);\n\n    const lighter = Math.max(l1, l2);\n    const darker = Math.min(l1, l2);\n\n    return (lighter + 0.05) / (darker + 0.05);\n  }\n\n  parseColor(color) {\n    // Simple RGB parsing - expand for production use\n    const match = color.match(/rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\n    if (match) {\n      return [parseInt(match[1]), parseInt(match[2]), parseInt(match[3])];\n    }\n    return [0, 0, 0]; // Default to black\n  }\n\n  getLuminance([r, g, b]) {\n    const [rs, gs, bs] = [r, g, b].map(c => {\n      c = c / 255;\n      return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n    });\n    return 0.2126 * rs + 0.7152 * gs + 0.0722 * bs;\n  }\n\n  logResults(results) {\n    console.group('♿ Accessibility Test Results');\n    console.log(`✅ Passed: ${results.passes.length}`);\n    console.log(`❌ Violations: ${results.violations.length}`);\n    console.log(`⚠️  Incomplete: ${results.incomplete.length}`);\n    console.log(`➖ Not applicable: ${results.inapplicable.length}`);\n\n    if (results.violations.length > 0) {\n      console.warn('Violations found:');\n      results.violations.forEach(violation => {\n        console.warn(`- ${violation.id}: ${violation.description}`);\n      });\n    }\n    console.groupEnd();\n  }\n\n  reportViolations(violations) {\n    violations.forEach(violation => {\n      violation.nodes.forEach(node => {\n        console.error('Accessibility violation:', {\n          rule: violation.id,\n          impact: violation.impact,\n          element: node.target,\n          message: node.failureSummary\n        });\n      });\n    });\n  }\n\n  storeResults(results) {\n    try {\n      const reportData = {\n        timestamp: Date.now(),\n        url: window.location.href,\n        violations: results.violations.length,\n        passes: results.passes.length,\n        score: this.calculateAccessibilityScore()\n      };\n\n      const existingReports = JSON.parse(localStorage.getItem('accessibility-reports') || '[]');\n      existingReports.push(reportData);\n\n      // Keep only last 10 reports\n      if (existingReports.length > 10) {\n        existingReports.splice(0, existingReports.length - 10);\n      }\n\n      localStorage.setItem('accessibility-reports', JSON.stringify(existingReports));\n    } catch (error) {\n      console.error('Failed to store accessibility results:', error);\n    }\n  }\n}\n\n// Create singleton instance\nexport const accessibilityTester = new AccessibilityTester();\n\n// React hook for accessibility testing\nexport function useAccessibilityTester() {\n  return {\n    runTests: (element, options) => accessibilityTester.runTests(element, options),\n    testFinancialComponent: (selector, type) => accessibilityTester.testFinancialComponent(selector, type),\n    testKeyboardNavigation: () => accessibilityTester.testKeyboardNavigation(),\n    testColorContrast: () => accessibilityTester.testColorContrast(),\n    testFormAccessibility: () => accessibilityTester.testFormAccessibility(),\n    generateReport: () => accessibilityTester.generateReport(),\n    getScore: () => accessibilityTester.calculateAccessibilityScore()\n  };\n}\n\nexport default AccessibilityTester;\n","// Real User Monitoring and Web Vitals Tracking\n\n// Web Vitals metrics tracking\nconst webVitalsData = {\n  CLS: null,\n  FID: null,\n  FCP: null,\n  LCP: null,\n  TTFB: null,\n  INP: null\n};\n\n// Performance observer for tracking metrics\nconst performanceEntries = [];\nlet performanceObserver;\n\n// Initialize performance monitoring\nexport function initializePerformanceMonitoring() {\n  // Initialize Web Vitals tracking\n  initializeWebVitals();\n\n  // Initialize custom performance tracking\n  initializeCustomMetrics();\n\n  // Initialize navigation timing\n  trackNavigationTiming();\n\n  // Initialize resource timing\n  trackResourceTiming();\n\n  // Initialize user interactions\n  trackUserInteractions();\n\n  console.log('Performance monitoring initialized');\n}\n\n// Web Vitals implementation\nfunction initializeWebVitals() {\n  // Cumulative Layout Shift (CLS)\n  let clsValue = 0;\n  const clsEntries = [];\n\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (!entry.hadRecentInput) {\n        clsValue += entry.value;\n        clsEntries.push(entry);\n      }\n    }\n    webVitalsData.CLS = clsValue;\n    reportWebVital('CLS', clsValue, clsEntries);\n  }).observe({ type: 'layout-shift', buffered: true });\n\n  // First Input Delay (FID) / Interaction to Next Paint (INP)\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (entry.name === 'first-input-delay') {\n        webVitalsData.FID = entry.processingStart - entry.startTime;\n        reportWebVital('FID', webVitalsData.FID, [entry]);\n      }\n\n      // Track INP for better user interaction measurement\n      if (entry.interactionId) {\n        const duration = entry.processingEnd - entry.startTime;\n        if (!webVitalsData.INP || duration > webVitalsData.INP) {\n          webVitalsData.INP = duration;\n          reportWebVital('INP', duration, [entry]);\n        }\n      }\n    }\n  }).observe({ type: 'event', buffered: true });\n\n  // First Contentful Paint (FCP)\n  new PerformanceObserver((entryList) => {\n    for (const entry of entryList.getEntries()) {\n      if (entry.name === 'first-contentful-paint') {\n        webVitalsData.FCP = entry.startTime;\n        reportWebVital('FCP', entry.startTime, [entry]);\n      }\n    }\n  }).observe({ type: 'paint', buffered: true });\n\n  // Largest Contentful Paint (LCP)\n  new PerformanceObserver((entryList) => {\n    const entries = entryList.getEntries();\n    const lastEntry = entries[entries.length - 1];\n    webVitalsData.LCP = lastEntry.startTime;\n    reportWebVital('LCP', lastEntry.startTime, [lastEntry]);\n  }).observe({ type: 'largest-contentful-paint', buffered: true });\n\n  // Time to First Byte (TTFB)\n  const navigationEntry = performance.getEntriesByType('navigation')[0];\n  if (navigationEntry) {\n    webVitalsData.TTFB = navigationEntry.responseStart - navigationEntry.requestStart;\n    reportWebVital('TTFB', webVitalsData.TTFB, [navigationEntry]);\n  }\n}\n\n// Custom metrics for financial application\nfunction initializeCustomMetrics() {\n  // Track when critical financial components load\n  const criticalComponents = [\n    'financial-spreadsheet',\n    'dcf-calculator',\n    'chart-rendering',\n    'market-data-fetch'\n  ];\n\n  criticalComponents.forEach(component => {\n    performance.mark(`${component}-start`);\n  });\n\n  // Track component rendering times\n  window.trackComponentRender = (componentName, renderTime) => {\n    performance.mark(`${componentName}-end`);\n    performance.measure(\n      `${componentName}-render`,\n      `${componentName}-start`,\n      `${componentName}-end`\n    );\n\n    reportCustomMetric('component-render', {\n      component: componentName,\n      renderTime,\n      timestamp: Date.now()\n    });\n  };\n\n  // Track financial calculation performance\n  window.trackCalculationPerformance = (calculationType, duration, complexity) => {\n    reportCustomMetric('financial-calculation', {\n      type: calculationType,\n      duration,\n      complexity,\n      timestamp: Date.now()\n    });\n  };\n}\n\n// Navigation timing tracking\nfunction trackNavigationTiming() {\n  window.addEventListener('load', () => {\n    setTimeout(() => {\n      const navigation = performance.getEntriesByType('navigation')[0];\n      if (navigation) {\n        const timings = {\n          dns: navigation.domainLookupEnd - navigation.domainLookupStart,\n          tcp: navigation.connectEnd - navigation.connectStart,\n          ssl: navigation.secureConnectionStart > 0 ? navigation.connectEnd - navigation.secureConnectionStart : 0,\n          ttfb: navigation.responseStart - navigation.requestStart,\n          download: navigation.responseEnd - navigation.responseStart,\n          domProcessing: navigation.domComplete - navigation.domLoading,\n          totalLoadTime: navigation.loadEventEnd - navigation.fetchStart\n        };\n\n        reportNavigationTiming(timings);\n      }\n    }, 0);\n  });\n}\n\n// Resource timing tracking\nfunction trackResourceTiming() {\n  new PerformanceObserver((list) => {\n    for (const entry of list.getEntries()) {\n      // Track important resource types\n      if (entry.initiatorType === 'script' ||\n          entry.initiatorType === 'css' ||\n          entry.initiatorType === 'img' ||\n          entry.initiatorType === 'fetch') {\n\n        const resourceData = {\n          name: entry.name,\n          type: entry.initiatorType,\n          size: entry.transferSize || entry.encodedBodySize,\n          duration: entry.duration,\n          cached: entry.transferSize === 0 && entry.encodedBodySize > 0,\n          timestamp: Date.now()\n        };\n\n        // Only report large resources or slow loads\n        if (resourceData.size > 50000 || resourceData.duration > 1000) {\n          reportResourceTiming(resourceData);\n        }\n      }\n    }\n  }).observe({ entryTypes: ['resource'] });\n}\n\n// User interaction tracking\nfunction trackUserInteractions() {\n  let interactionCount = 0;\n  let totalInteractionTime = 0;\n\n  const interactionEvents = ['click', 'keydown', 'touchstart'];\n\n  interactionEvents.forEach(eventType => {\n    document.addEventListener(eventType, (event) => {\n      const startTime = performance.now();\n\n      // Track interaction delay\n      requestAnimationFrame(() => {\n        const endTime = performance.now();\n        const interactionTime = endTime - startTime;\n\n        interactionCount++;\n        totalInteractionTime += interactionTime;\n\n        // Report slow interactions\n        if (interactionTime > 100) {\n          reportSlowInteraction({\n            type: eventType,\n            target: event.target.tagName,\n            duration: interactionTime,\n            timestamp: Date.now()\n          });\n        }\n      });\n    }, { passive: true });\n  });\n\n  // Report interaction summary periodically\n  setInterval(() => {\n    if (interactionCount > 0) {\n      reportInteractionSummary({\n        count: interactionCount,\n        averageTime: totalInteractionTime / interactionCount,\n        timestamp: Date.now()\n      });\n\n      // Reset counters\n      interactionCount = 0;\n      totalInteractionTime = 0;\n    }\n  }, 30000); // Every 30 seconds\n}\n\n// Reporting functions\nfunction reportWebVital(name, value, entries) {\n  const data = {\n    metric: name,\n    value: Math.round(value),\n    entries: entries.map(entry => ({\n      startTime: entry.startTime,\n      duration: entry.duration || 0\n    })),\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    connection: getConnectionInfo()\n  };\n\n  console.log(`Web Vital - ${name}:`, value);\n  sendToAnalytics('web-vital', data);\n}\n\nfunction reportCustomMetric(type, data) {\n  const metricData = {\n    type,\n    ...data,\n    url: window.location.href,\n    userAgent: navigator.userAgent\n  };\n\n  console.log(`Custom Metric - ${type}:`, data);\n  sendToAnalytics('custom-metric', metricData);\n}\n\nfunction reportNavigationTiming(timings) {\n  const data = {\n    ...timings,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    connection: getConnectionInfo()\n  };\n\n  console.log('Navigation Timing:', timings);\n  sendToAnalytics('navigation-timing', data);\n}\n\nfunction reportResourceTiming(resourceData) {\n  console.log('Resource Timing:', resourceData);\n  sendToAnalytics('resource-timing', resourceData);\n}\n\nfunction reportSlowInteraction(interactionData) {\n  console.log('Slow Interaction:', interactionData);\n  sendToAnalytics('slow-interaction', interactionData);\n}\n\nfunction reportInteractionSummary(summaryData) {\n  console.log('Interaction Summary:', summaryData);\n  sendToAnalytics('interaction-summary', summaryData);\n}\n\n// Error tracking\nexport function trackError(error, errorInfo) {\n  const errorData = {\n    message: error.message,\n    stack: error.stack,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent,\n    componentStack: errorInfo?.componentStack,\n    errorBoundary: errorInfo?.errorBoundary\n  };\n\n  console.error('Application Error:', errorData);\n  sendToAnalytics('error', errorData);\n}\n\n// Performance budget monitoring\nexport function checkPerformanceBudgets() {\n  const budgets = {\n    LCP: 2500,  // 2.5s\n    FID: 100,   // 100ms\n    CLS: 0.1,   // 0.1\n    FCP: 1800,  // 1.8s\n    TTFB: 800   // 800ms\n  };\n\n  const violations = [];\n\n  Object.entries(budgets).forEach(([metric, budget]) => {\n    const value = webVitalsData[metric];\n    if (value !== null && value > budget) {\n      violations.push({\n        metric,\n        value,\n        budget,\n        overBy: value - budget\n      });\n    }\n  });\n\n  if (violations.length > 0) {\n    console.warn('Performance Budget Violations:', violations);\n    sendToAnalytics('budget-violations', {\n      violations,\n      timestamp: Date.now(),\n      url: window.location.href\n    });\n  }\n\n  return violations;\n}\n\n// Utility functions\nfunction getConnectionInfo() {\n  if ('connection' in navigator) {\n    return {\n      effectiveType: navigator.connection.effectiveType,\n      downlink: navigator.connection.downlink,\n      rtt: navigator.connection.rtt\n    };\n  }\n  return null;\n}\n\nfunction sendToAnalytics(type, data) {\n  // In production, send to your analytics service\n  // For now, we'll store locally and batch send\n\n  try {\n    const analyticsData = {\n      type,\n      data,\n      sessionId: getSessionId(),\n      userId: getUserId()\n    };\n\n    // Store in localStorage for batching\n    const existingData = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n    existingData.push(analyticsData);\n\n    // Keep only last 100 entries to prevent storage overflow\n    if (existingData.length > 100) {\n      existingData.splice(0, existingData.length - 100);\n    }\n\n    localStorage.setItem('analytics-queue', JSON.stringify(existingData));\n\n    // Send batch if queue is full or on interval\n    if (existingData.length >= 10) {\n      sendAnalyticsBatch();\n    }\n\n  } catch (error) {\n    console.error('Failed to queue analytics data:', error);\n  }\n}\n\nfunction sendAnalyticsBatch() {\n  try {\n    const queuedData = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n    if (queuedData.length === 0) return;\n\n    // In production, replace with your analytics endpoint\n    console.log('Sending analytics batch:', queuedData.length, 'items');\n\n    // Simulate sending to analytics service\n    if (window.gtag) {\n      queuedData.forEach(item => {\n        window.gtag('event', item.type, {\n          custom_parameter: JSON.stringify(item.data)\n        });\n      });\n    }\n\n    // Clear queue after successful send\n    localStorage.removeItem('analytics-queue');\n\n  } catch (error) {\n    console.error('Failed to send analytics batch:', error);\n  }\n}\n\n// Session and user management\nfunction getSessionId() {\n  let sessionId = sessionStorage.getItem('session-id');\n  if (!sessionId) {\n    sessionId = Date.now() + '-' + Math.random().toString(36).substr(2, 9);\n    sessionStorage.setItem('session-id', sessionId);\n  }\n  return sessionId;\n}\n\nfunction getUserId() {\n  let userId = localStorage.getItem('user-id');\n  if (!userId) {\n    userId = 'anonymous-' + Date.now() + '-' + Math.random().toString(36).substr(2, 9);\n    localStorage.setItem('user-id', userId);\n  }\n  return userId;\n}\n\n// Initialize batch sending on interval\nsetInterval(sendAnalyticsBatch, 60000); // Every minute\n\n// Send batch before page unload\nwindow.addEventListener('beforeunload', () => {\n  sendAnalyticsBatch();\n});\n\n// Accessibility metrics reporting\nexport function reportPerformanceMetric(type, data) {\n  const metricData = {\n    type,\n    ...data,\n    url: window.location.href,\n    userAgent: navigator.userAgent,\n    timestamp: Date.now()\n  };\n\n  console.log(`Performance Metric - ${type}:`, data);\n  sendToAnalytics('performance-metric', metricData);\n}\n\n// Track accessibility test results\nexport function trackAccessibilityResults(results) {\n  const accessibilityData = {\n    violations: results.violations?.length || 0,\n    passes: results.passes?.length || 0,\n    incomplete: results.incomplete?.length || 0,\n    score: results.score || 0,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent\n  };\n\n  console.log('Accessibility Results:', accessibilityData);\n  sendToAnalytics('accessibility-results', accessibilityData);\n\n  // Store accessibility history\n  try {\n    const history = JSON.parse(localStorage.getItem('accessibility-history') || '[]');\n    history.push(accessibilityData);\n\n    // Keep only last 50 entries\n    if (history.length > 50) {\n      history.splice(0, history.length - 50);\n    }\n\n    localStorage.setItem('accessibility-history', JSON.stringify(history));\n  } catch (error) {\n    console.error('Failed to store accessibility history:', error);\n  }\n}\n\n// Track financial component performance\nexport function trackFinancialComponentPerformance(componentName, metrics) {\n  const performanceData = {\n    component: componentName,\n    ...metrics,\n    url: window.location.href,\n    timestamp: Date.now(),\n    userAgent: navigator.userAgent\n  };\n\n  console.log(`Financial Component Performance - ${componentName}:`, metrics);\n  sendToAnalytics('financial-component-performance', performanceData);\n}\n\n// Get comprehensive performance dashboard data\nexport function getPerformanceDashboardData() {\n  const accessibilityHistory = JSON.parse(localStorage.getItem('accessibility-history') || '[]');\n  const analyticsQueue = JSON.parse(localStorage.getItem('analytics-queue') || '[]');\n\n  // Calculate trends\n  const recentAccessibility = accessibilityHistory.slice(-10);\n  const avgScore = recentAccessibility.reduce((sum, entry) => sum + entry.score, 0) / recentAccessibility.length || 0;\n  const avgViolations = recentAccessibility.reduce((sum, entry) => sum + entry.violations, 0) / recentAccessibility.length || 0;\n\n  // Get performance metrics from queue\n  const performanceMetrics = analyticsQueue\n    .filter(item => item.type === 'performance-metric')\n    .slice(-20)\n    .map(item => item.data);\n\n  const webVitalMetrics = analyticsQueue\n    .filter(item => item.type === 'web-vital')\n    .slice(-10)\n    .map(item => item.data);\n\n  return {\n    webVitals: webVitalsData,\n    budgetViolations: checkPerformanceBudgets(),\n    accessibility: {\n      currentScore: recentAccessibility[recentAccessibility.length - 1]?.score || 0,\n      averageScore: Math.round(avgScore),\n      averageViolations: Math.round(avgViolations),\n      history: recentAccessibility,\n      trends: {\n        scoreImproving: recentAccessibility.length >= 2 &&\n          recentAccessibility[recentAccessibility.length - 1].score >\n          recentAccessibility[recentAccessibility.length - 2].score\n      }\n    },\n    performance: {\n      recentMetrics: performanceMetrics,\n      webVitalHistory: webVitalMetrics\n    },\n    timestamp: Date.now()\n  };\n}\n\n// Export current performance data\nexport function getPerformanceData() {\n  return {\n    webVitals: webVitalsData,\n    budgetViolations: checkPerformanceBudgets(),\n    timestamp: Date.now()\n  };\n}\n","import { useState, useEffect, useCallback, useRef } from 'react';\n\nimport { accessibilityTester } from '../utils/accessibilityTesting';\nimport { reportPerformanceMetric } from '../utils/performanceMonitoring';\n\n// React hook for accessibility testing\nexport function useAccessibility(options = {}) {\n  const {\n    enabled = process.env.NODE_ENV === 'development',\n    autoTest = false,\n    testInterval = null,\n    componentType = 'generic',\n    onViolations = null,\n    onSuccess = null\n  } = options;\n\n  const [results, setResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [violations, setViolations] = useState([]);\n  const [score, setScore] = useState(null);\n  const [lastTestTime, setLastTestTime] = useState(null);\n\n  const elementRef = useRef(null);\n  const intervalRef = useRef(null);\n\n  // Run accessibility tests\n  const runTests = useCallback(async(element = null, testOptions = {}) => {\n    if (!enabled) return null;\n\n    const targetElement = element || elementRef.current || document;\n    setIsLoading(true);\n\n    try {\n      const testResults = await accessibilityTester.runTests(targetElement, testOptions);\n\n      setResults(testResults);\n      setViolations(testResults.violations || []);\n      setScore(accessibilityTester.calculateAccessibilityScore());\n      setLastTestTime(Date.now());\n\n      // Report to performance monitoring\n      reportPerformanceMetric('accessibility_test', {\n        violations: testResults.violations?.length || 0,\n        score: accessibilityTester.calculateAccessibilityScore(),\n        componentType,\n        timestamp: Date.now()\n      });\n\n      // Call callbacks\n      if (testResults.violations?.length > 0) {\n        onViolations?.(testResults.violations);\n      } else {\n        onSuccess?.(testResults);\n      }\n\n      return testResults;\n    } catch (error) {\n      console.error('Accessibility test failed:', error);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [enabled, componentType, onViolations, onSuccess]);\n\n  // Test specific financial component\n  const testFinancialComponent = useCallback(async(selector, type = componentType) => {\n    if (!enabled) return null;\n\n    setIsLoading(true);\n    try {\n      const testResults = await accessibilityTester.testFinancialComponent(selector, type);\n\n      setResults(testResults);\n      setViolations(testResults.violations || []);\n      setScore(accessibilityTester.calculateAccessibilityScore());\n      setLastTestTime(Date.now());\n\n      // Report specific component test\n      reportPerformanceMetric('financial_component_accessibility', {\n        componentType: type,\n        violations: testResults.violations?.length || 0,\n        score: accessibilityTester.calculateAccessibilityScore(),\n        timestamp: Date.now()\n      });\n\n      return testResults;\n    } catch (error) {\n      console.error('Financial component accessibility test failed:', error);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [enabled, componentType]);\n\n  // Test keyboard navigation\n  const testKeyboardNavigation = useCallback(async() => {\n    if (!enabled) return null;\n\n    try {\n      const navResults = await accessibilityTester.testKeyboardNavigation();\n\n      reportPerformanceMetric('keyboard_navigation_test', {\n        focusableElements: navResults.focusableElementsCount,\n        tabOrderIssues: navResults.tabOrderIssues?.length || 0,\n        focusVisibilityIssues: navResults.focusVisibilityIssues?.length || 0,\n        passed: navResults.passed,\n        timestamp: Date.now()\n      });\n\n      return navResults;\n    } catch (error) {\n      console.error('Keyboard navigation test failed:', error);\n      return null;\n    }\n  }, [enabled]);\n\n  // Test color contrast\n  const testColorContrast = useCallback(async() => {\n    if (!enabled) return null;\n\n    try {\n      const contrastResults = await accessibilityTester.testColorContrast();\n\n      reportPerformanceMetric('color_contrast_test', {\n        totalElements: contrastResults.totalElements,\n        contrastIssues: contrastResults.contrastIssues?.length || 0,\n        passed: contrastResults.passed,\n        timestamp: Date.now()\n      });\n\n      return contrastResults;\n    } catch (error) {\n      console.error('Color contrast test failed:', error);\n      return null;\n    }\n  }, [enabled]);\n\n  // Test form accessibility\n  const testFormAccessibility = useCallback(async() => {\n    if (!enabled) return null;\n\n    try {\n      const formResults = await accessibilityTester.testFormAccessibility();\n\n      reportPerformanceMetric('form_accessibility_test', {\n        totalForms: formResults.totalForms,\n        formIssues: formResults.formIssues?.length || 0,\n        passed: formResults.passed,\n        timestamp: Date.now()\n      });\n\n      return formResults;\n    } catch (error) {\n      console.error('Form accessibility test failed:', error);\n      return null;\n    }\n  }, [enabled]);\n\n  // Generate comprehensive report\n  const generateReport = useCallback(() => {\n    if (!results) return null;\n\n    try {\n      const report = accessibilityTester.generateReport();\n\n      // Store report data for performance monitoring\n      reportPerformanceMetric('accessibility_report_generated', {\n        score: report.summary.score,\n        violations: report.summary.violations,\n        totalChecks: report.summary.totalChecks,\n        timestamp: Date.now()\n      });\n\n      return report;\n    } catch (error) {\n      console.error('Failed to generate accessibility report:', error);\n      return null;\n    }\n  }, [results]);\n\n  // Set up automatic testing\n  useEffect(() => {\n    if (!enabled || !autoTest) return;\n\n    const runAutoTest = () => {\n      runTests();\n    };\n\n    // Run initial test\n    runAutoTest();\n\n    // Set up interval if specified\n    if (testInterval) {\n      intervalRef.current = setInterval(runAutoTest, testInterval);\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [enabled, autoTest, testInterval, runTests]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    // State\n    results,\n    violations,\n    score,\n    isLoading,\n    lastTestTime,\n\n    // Test functions\n    runTests,\n    testFinancialComponent,\n    testKeyboardNavigation,\n    testColorContrast,\n    testFormAccessibility,\n    generateReport,\n\n    // Element ref for targeting tests\n    elementRef\n  };\n}\n\n// Hook for monitoring accessibility across the entire app\nexport function useAppAccessibility() {\n  const [globalScore, setGlobalScore] = useState(null);\n  const [recentViolations, setRecentViolations] = useState([]);\n  const [testHistory, setTestHistory] = useState([]);\n\n  const runGlobalAccessibilityCheck = useCallback(async() => {\n    try {\n      // Run comprehensive tests on the entire document\n      const results = await accessibilityTester.runTests(document);\n      const score = accessibilityTester.calculateAccessibilityScore();\n\n      setGlobalScore(score);\n      setRecentViolations(results.violations || []);\n\n      // Update test history\n      const historyEntry = {\n        timestamp: Date.now(),\n        score,\n        violations: results.violations?.length || 0,\n        url: window.location.pathname\n      };\n\n      setTestHistory(prev => [...prev.slice(-9), historyEntry]); // Keep last 10 entries\n\n      // Report global metrics\n      reportPerformanceMetric('global_accessibility_check', {\n        score,\n        violations: results.violations?.length || 0,\n        url: window.location.pathname,\n        timestamp: Date.now()\n      });\n\n      return results;\n    } catch (error) {\n      console.error('Global accessibility check failed:', error);\n      return null;\n    }\n  }, []);\n\n  // Check accessibility when route changes\n  useEffect(() => {\n    const checkOnRouteChange = () => {\n      setTimeout(() => {\n        runGlobalAccessibilityCheck();\n      }, 1000); // Allow time for route to fully load\n    };\n\n    // Listen for navigation changes\n    window.addEventListener('popstate', checkOnRouteChange);\n\n    // Run initial check\n    checkOnRouteChange();\n\n    return () => {\n      window.removeEventListener('popstate', checkOnRouteChange);\n    };\n  }, [runGlobalAccessibilityCheck]);\n\n  return {\n    globalScore,\n    recentViolations,\n    testHistory,\n    runGlobalAccessibilityCheck\n  };\n}\n\n// Hook for accessibility testing in financial components\nexport function useFinancialAccessibility(componentType) {\n  const accessibility = useAccessibility({\n    componentType,\n    autoTest: true,\n    testInterval: 30000, // Test every 30 seconds in development\n    onViolations: (violations) => {\n      // Log financial component specific violations\n      console.warn(`Financial component (${componentType}) accessibility violations:`, violations);\n    }\n  });\n\n  // Enhanced testing for financial components\n  const testFinancialFeatures = useCallback(async() => {\n    const results = {};\n\n    try {\n      // Test keyboard navigation (critical for financial apps)\n      results.keyboardNav = await accessibility.testKeyboardNavigation();\n\n      // Test color contrast (important for reading financial data)\n      results.colorContrast = await accessibility.testColorContrast();\n\n      // Test forms if component contains them\n      results.formAccessibility = await accessibility.testFormAccessibility();\n\n      // Generate comprehensive report\n      results.report = accessibility.generateReport();\n\n      return results;\n    } catch (error) {\n      console.error('Financial accessibility testing failed:', error);\n      return null;\n    }\n  }, [accessibility, componentType]);\n\n  return {\n    ...accessibility,\n    testFinancialFeatures\n  };\n}\n\n// Hook for real-time accessibility monitoring\nexport function useAccessibilityMonitor(options = {}) {\n  const {\n    threshold = 80, // Minimum acceptable score\n    alertOnViolations = true,\n    monitorInterval = 60000 // Check every minute\n  } = options;\n\n  const [isMonitoring, setIsMonitoring] = useState(false);\n  const [alerts, setAlerts] = useState([]);\n  const intervalRef = useRef(null);\n\n  const startMonitoring = useCallback(() => {\n    if (isMonitoring) return;\n\n    setIsMonitoring(true);\n\n    const monitor = async() => {\n      try {\n        const results = await accessibilityTester.runTests(document);\n        const score = accessibilityTester.calculateAccessibilityScore();\n\n        // Check if score is below threshold\n        if (score < threshold) {\n          const alert = {\n            id: Date.now(),\n            type: 'low_score',\n            message: `Accessibility score (${score}) is below threshold (${threshold})`,\n            score,\n            violations: results.violations?.length || 0,\n            timestamp: Date.now()\n          };\n\n          setAlerts(prev => [...prev, alert]);\n\n          if (alertOnViolations) {\n            console.warn('Accessibility Alert:', alert.message);\n          }\n        }\n\n        // Check for critical violations\n        const criticalViolations = results.violations?.filter(v => v.impact === 'critical') || [];\n        if (criticalViolations.length > 0 && alertOnViolations) {\n          const alert = {\n            id: Date.now(),\n            type: 'critical_violations',\n            message: `${criticalViolations.length} critical accessibility violations found`,\n            violations: criticalViolations,\n            timestamp: Date.now()\n          };\n\n          setAlerts(prev => [...prev, alert]);\n          console.error('Critical Accessibility Violations:', criticalViolations);\n        }\n\n        // Report monitoring metrics\n        reportPerformanceMetric('accessibility_monitoring', {\n          score,\n          violations: results.violations?.length || 0,\n          criticalViolations: criticalViolations.length,\n          timestamp: Date.now()\n        });\n\n      } catch (error) {\n        console.error('Accessibility monitoring failed:', error);\n      }\n    };\n\n    // Run initial check\n    monitor();\n\n    // Set up interval\n    intervalRef.current = setInterval(monitor, monitorInterval);\n  }, [isMonitoring, threshold, alertOnViolations, monitorInterval]);\n\n  const stopMonitoring = useCallback(() => {\n    setIsMonitoring(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n\n  const clearAlerts = useCallback(() => {\n    setAlerts([]);\n  }, []);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    isMonitoring,\n    alerts,\n    startMonitoring,\n    stopMonitoring,\n    clearAlerts\n  };\n}\n","import { motion } from 'framer-motion';\nimport {\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  Percent,\n  BarChart3,\n  Target,\n  AlertTriangle,\n  CheckCircle,\n  Calculator,\n  PieChart,\n  Activity,\n  Zap,\n  Shield,\n  Clock,\n  Layers,\n  Award,\n  TrendingDown as Decline,\n  Eye,\n  FileText,\n  BarChart2,\n  LineChart,\n  Timer,\n  ArrowUpRight,\n  ArrowDownRight,\n  Gauge,\n  CreditCard,\n  Banknote,\n  Building2,\n  Users,\n  Star\n} from 'lucide-react';\nimport React, { useMemo } from 'react';\n\nconst AnalysisResults = ({\n  data,\n  adjustedValues,\n  modelInputs,\n  calculateDCF,\n  formatCurrency,\n  formatPercentage\n}) => {\n  // Calculate comprehensive financial metrics\n  const analysis = useMemo(() => {\n    try {\n      if (!data?.statements?.incomeStatement) return null;\n\n      const income = data.statements.incomeStatement;\n      const periods = Object.keys(income.totalRevenue || {}).sort((a, b) => parseInt(a) - parseInt(b));\n\n      if (periods.length < 2) return null;\n\n      const latest = periods[periods.length - 1];\n      const previous = periods[periods.length - 2];\n      const earliest = periods[0];\n\n      // Financial Performance Analysis - Use adjusted values for latest period when available\n      const revenueLatest = adjustedValues?.totalRevenue || income.totalRevenue?.[latest] || 0;\n      const revenuePrevious = income.totalRevenue?.[previous] || 0;\n      const revenueEarliest = income.totalRevenue?.[earliest] || 0;\n\n      const grossProfitLatest = adjustedValues?.grossProfit || income.grossProfit?.[latest] || 0;\n      const grossProfitPrevious = income.grossProfit?.[previous] || 0;\n\n      const operatingIncomeLatest = adjustedValues?.operatingIncome || income.operatingIncome?.[latest] || 0;\n      const operatingIncomePrevious = income.operatingIncome?.[previous] || 0;\n\n      const totalCOGSLatest = adjustedValues?.totalCostOfGoodsSold || income.totalCostOfGoodsSold?.[latest] || 0;\n      const totalCOGSPrevious = income.totalCostOfGoodsSold?.[previous] || 0;\n\n      // Growth Calculations\n      const revenueGrowthYoY = revenuePrevious ? ((revenueLatest - revenuePrevious) / revenuePrevious) * 100 : 0;\n      const revenueCAGR = revenueEarliest && periods.length > 2 ?\n        (Math.pow(revenueLatest / revenueEarliest, 1 / (periods.length - 1)) - 1) * 100 : 0;\n\n      const grossProfitGrowth = grossProfitPrevious ? ((grossProfitLatest - grossProfitPrevious) / grossProfitPrevious) * 100 : 0;\n      const operatingIncomeGrowth = operatingIncomePrevious ? ((operatingIncomeLatest - operatingIncomePrevious) / operatingIncomePrevious) * 100 : 0;\n\n      // Profitability Ratios (with safe calculations)\n      const grossMarginLatest = (revenueLatest && revenueLatest !== 0) ? (grossProfitLatest / revenueLatest) * 100 : 0;\n      const grossMarginPrevious = (revenuePrevious && revenuePrevious !== 0) ? (grossProfitPrevious / revenuePrevious) * 100 : 0;\n      const operatingMarginLatest = (revenueLatest && revenueLatest !== 0) ? (operatingIncomeLatest / revenueLatest) * 100 : 0;\n      const operatingMarginPrevious = (revenuePrevious && revenuePrevious !== 0) ? (operatingIncomePrevious / revenuePrevious) * 100 : 0;\n\n      const marginImprovement = isFinite(grossMarginLatest) && isFinite(grossMarginPrevious) ? grossMarginLatest - grossMarginPrevious : 0;\n      const operatingMarginChange = isFinite(operatingMarginLatest) && isFinite(operatingMarginPrevious) ? operatingMarginLatest - operatingMarginPrevious : 0;\n\n      // DCF Analysis\n      let dcfResults = null;\n      if (calculateDCF) {\n        try {\n          dcfResults = calculateDCF(data);\n        } catch (error) {\n          console.error('DCF calculation error:', error);\n        }\n      }\n\n      // Business Unit Analysis (Revenue Breakdown) - with safe value access\n      const revenueBreakdown = [\n        { name: 'Energy Devices', value: Number(income.energyDevices?.[latest]) || 0 },\n        { name: 'Injectables', value: Number(income.injectables?.[latest]) || 0 },\n        { name: 'Wellness', value: Number(income.wellness?.[latest]) || 0 },\n        { name: 'Weightloss', value: Number(income.weightloss?.[latest]) || 0 },\n        { name: 'Retail Sales', value: Number(income.retailSales?.[latest]) || 0 },\n        { name: 'Surgery', value: Number(income.surgery?.[latest]) || 0 }\n      ].filter(item => item.value > 0 && isFinite(item.value));\n\n      // Advanced Financial Ratios and Metrics\n      const totalAssets = income.totalAssets?.[latest] || revenueLatest * 1.2; // Estimate if not provided\n      const totalEquity = income.totalEquity?.[latest] || totalAssets * 0.6; // Estimate if not provided\n      const totalDebt = income.totalDebt?.[latest] || totalAssets * 0.3; // Estimate if not provided\n      const currentAssets = income.currentAssets?.[latest] || totalAssets * 0.4; // Estimate if not provided\n      const currentLiabilities = income.currentLiabilities?.[latest] || totalAssets * 0.2; // Estimate if not provided\n      const inventory = income.inventory?.[latest] || revenueLatest * 0.15; // Estimate if not provided\n      const accountsReceivable = income.accountsReceivable?.[latest] || revenueLatest * 0.1; // Estimate if not provided\n      const cashAndEquivalents = income.cashAndEquivalents?.[latest] || totalAssets * 0.1; // Estimate if not provided\n\n      // Advanced Ratios\n      const returnOnAssets = (totalAssets && totalAssets !== 0) ? (operatingIncomeLatest / totalAssets) * 100 : 0;\n      const returnOnEquity = (totalEquity && totalEquity !== 0) ? (operatingIncomeLatest / totalEquity) * 100 : 0;\n      const debtToEquity = (totalEquity && totalEquity !== 0) ? totalDebt / totalEquity : 0;\n      const currentRatio = (currentLiabilities && currentLiabilities !== 0) ? currentAssets / currentLiabilities : 0;\n      const quickRatio = (currentLiabilities && currentLiabilities !== 0) ? (currentAssets - inventory) / currentLiabilities : 0;\n      const assetTurnover = (totalAssets && totalAssets !== 0) ? revenueLatest / totalAssets : 0;\n      const inventoryTurnover = (inventory && inventory !== 0) ? (revenueLatest * 0.7) / inventory : 0; // Assuming COGS is 70% of revenue\n      const receivablesTurnover = (accountsReceivable && accountsReceivable !== 0) ? revenueLatest / accountsReceivable : 0;\n      const cashRatio = (currentLiabilities && currentLiabilities !== 0) ? cashAndEquivalents / currentLiabilities : 0;\n      const workingCapital = currentAssets - currentLiabilities;\n      const workingCapitalRatio = (revenueLatest && revenueLatest !== 0) ? workingCapital / revenueLatest : 0;\n\n      // Efficiency Metrics\n      const operatingCycle = inventoryTurnover > 0 && receivablesTurnover > 0 ? (365 / inventoryTurnover) + (365 / receivablesTurnover) : 0;\n      const cashConversionCycle = operatingCycle > 0 ? operatingCycle - 30 : 0; // Assuming 30 days payable period\n\n      // Growth Quality Metrics\n      const operatingLeverage = grossProfitPrevious !== 0 ? (operatingIncomeGrowth / revenueGrowthYoY) : 0;\n      const profitabilityTrend = (operatingMarginLatest - operatingMarginPrevious) * 100;\n\n      // Risk Metrics\n      const financialLeverage = (totalEquity && totalEquity !== 0) ? totalAssets / totalEquity : 0;\n      const interestCoverage = income.interestExpense?.[latest] ? operatingIncomeLatest / income.interestExpense[latest] : 0;\n      const debtServiceCoverage = income.debtService?.[latest] ? operatingIncomeLatest / income.debtService[latest] : 0;\n\n      // Market & Valuation Metrics (estimated)\n      const revenuePerEmployee = income.employeeCount?.[latest] ? revenueLatest / income.employeeCount[latest] : 0;\n      const revenuePerShare = income.sharesOutstanding?.[latest] ? revenueLatest / income.sharesOutstanding[latest] : 0;\n      const bookValuePerShare = income.sharesOutstanding?.[latest] && totalEquity ? totalEquity / income.sharesOutstanding[latest] : 0;\n\n      // Industry Benchmarks (Healthcare/Medical Device estimates)\n      const industryBenchmarks = {\n        grossMargin: 65,\n        operatingMargin: 18,\n        returnOnAssets: 8,\n        returnOnEquity: 15,\n        currentRatio: 2.5,\n        debtToEquity: 0.4,\n        assetTurnover: 0.8,\n        revenueGrowth: 8\n      };\n\n      // Performance vs Benchmarks\n      const benchmarkComparison = {\n        grossMargin: grossMarginLatest - industryBenchmarks.grossMargin,\n        operatingMargin: operatingMarginLatest - industryBenchmarks.operatingMargin,\n        returnOnAssets: returnOnAssets - industryBenchmarks.returnOnAssets,\n        returnOnEquity: returnOnEquity - industryBenchmarks.returnOnEquity,\n        currentRatio: currentRatio - industryBenchmarks.currentRatio,\n        debtToEquity: industryBenchmarks.debtToEquity - debtToEquity, // Lower is better\n        assetTurnover: assetTurnover - industryBenchmarks.assetTurnover,\n        revenueGrowth: revenueGrowthYoY - industryBenchmarks.revenueGrowth\n      };\n\n      // Comprehensive KPI Suite\n      const kpis = [\n        {\n          title: 'Revenue Growth',\n          value: `${revenueGrowthYoY > 0 ? '+' : ''}${isFinite(revenueGrowthYoY) ? revenueGrowthYoY.toFixed(1) : '0.0'}%`,\n          trend: revenueGrowthYoY > 0 ? 'up' : 'down',\n          description: 'Year-over-year revenue growth rate',\n          icon: TrendingUp,\n          benchmark: industryBenchmarks.revenueGrowth,\n          performance: benchmarkComparison.revenueGrowth\n        },\n        {\n          title: 'Gross Margin',\n          value: `${isFinite(grossMarginLatest) ? grossMarginLatest.toFixed(1) : '0.0'}%`,\n          trend: marginImprovement > 0 ? 'up' : 'down',\n          description: `${marginImprovement > 0 ? '+' : ''}${isFinite(marginImprovement) ? marginImprovement.toFixed(1) : '0.0'}% vs prior year`,\n          icon: Percent,\n          benchmark: industryBenchmarks.grossMargin,\n          performance: benchmarkComparison.grossMargin\n        },\n        {\n          title: 'Operating Margin',\n          value: `${isFinite(operatingMarginLatest) ? operatingMarginLatest.toFixed(1) : '0.0'}%`,\n          trend: operatingMarginChange > 0 ? 'up' : 'down',\n          description: `${operatingMarginChange > 0 ? '+' : ''}${isFinite(operatingMarginChange) ? operatingMarginChange.toFixed(1) : '0.0'}% vs prior year`,\n          icon: BarChart3,\n          benchmark: industryBenchmarks.operatingMargin,\n          performance: benchmarkComparison.operatingMargin\n        },\n        {\n          title: 'Return on Assets',\n          value: `${isFinite(returnOnAssets) ? returnOnAssets.toFixed(1) : '0.0'}%`,\n          trend: returnOnAssets > industryBenchmarks.returnOnAssets ? 'up' : 'down',\n          description: 'Asset utilization efficiency',\n          icon: Target,\n          benchmark: industryBenchmarks.returnOnAssets,\n          performance: benchmarkComparison.returnOnAssets\n        },\n        {\n          title: 'Return on Equity',\n          value: `${isFinite(returnOnEquity) ? returnOnEquity.toFixed(1) : '0.0'}%`,\n          trend: returnOnEquity > industryBenchmarks.returnOnEquity ? 'up' : 'down',\n          description: 'Shareholder value generation',\n          icon: Award,\n          benchmark: industryBenchmarks.returnOnEquity,\n          performance: benchmarkComparison.returnOnEquity\n        },\n        {\n          title: 'Current Ratio',\n          value: `${isFinite(currentRatio) ? currentRatio.toFixed(1) : '0.0'}x`,\n          trend: currentRatio > 2.0 ? 'up' : currentRatio > 1.5 ? 'neutral' : 'down',\n          description: 'Short-term liquidity strength',\n          icon: Shield,\n          benchmark: industryBenchmarks.currentRatio,\n          performance: benchmarkComparison.currentRatio\n        },\n        {\n          title: 'Asset Turnover',\n          value: `${isFinite(assetTurnover) ? assetTurnover.toFixed(1) : '0.0'}x`,\n          trend: assetTurnover > industryBenchmarks.assetTurnover ? 'up' : 'down',\n          description: 'Revenue per dollar of assets',\n          icon: Zap,\n          benchmark: industryBenchmarks.assetTurnover,\n          performance: benchmarkComparison.assetTurnover\n        },\n        {\n          title: 'Debt-to-Equity',\n          value: `${isFinite(debtToEquity) ? debtToEquity.toFixed(1) : '0.0'}x`,\n          trend: debtToEquity < industryBenchmarks.debtToEquity ? 'up' : 'down',\n          description: 'Financial leverage position',\n          icon: CreditCard,\n          benchmark: industryBenchmarks.debtToEquity,\n          performance: benchmarkComparison.debtToEquity\n        }\n      ];\n\n      // Liquidity Analysis\n      const liquidityMetrics = [\n        {\n          name: 'Current Ratio',\n          value: currentRatio,\n          formatted: `${currentRatio.toFixed(2)}x`,\n          benchmark: 2.5,\n          status: currentRatio >= 2.5 ? 'excellent' : currentRatio >= 2.0 ? 'good' : currentRatio >= 1.5 ? 'fair' : 'poor'\n        },\n        {\n          name: 'Quick Ratio',\n          value: quickRatio,\n          formatted: `${quickRatio.toFixed(2)}x`,\n          benchmark: 1.5,\n          status: quickRatio >= 1.5 ? 'excellent' : quickRatio >= 1.0 ? 'good' : quickRatio >= 0.8 ? 'fair' : 'poor'\n        },\n        {\n          name: 'Cash Ratio',\n          value: cashRatio,\n          formatted: `${cashRatio.toFixed(2)}x`,\n          benchmark: 0.5,\n          status: cashRatio >= 0.5 ? 'excellent' : cashRatio >= 0.3 ? 'good' : cashRatio >= 0.2 ? 'fair' : 'poor'\n        },\n        {\n          name: 'Working Capital',\n          value: workingCapital,\n          formatted: formatCurrency(workingCapital),\n          benchmark: revenueLatest * 0.15,\n          status: workingCapital >= revenueLatest * 0.15 ? 'excellent' : workingCapital >= 0 ? 'good' : 'poor'\n        }\n      ];\n\n      // Efficiency Analysis\n      const efficiencyMetrics = [\n        {\n          name: 'Asset Turnover',\n          value: assetTurnover,\n          formatted: `${assetTurnover.toFixed(2)}x`,\n          description: 'Revenue generation per asset dollar'\n        },\n        {\n          name: 'Inventory Turnover',\n          value: inventoryTurnover,\n          formatted: `${inventoryTurnover.toFixed(1)}x`,\n          description: 'Inventory management efficiency'\n        },\n        {\n          name: 'Receivables Turnover',\n          value: receivablesTurnover,\n          formatted: `${receivablesTurnover.toFixed(1)}x`,\n          description: 'Collection efficiency'\n        },\n        {\n          name: 'Operating Cycle',\n          value: operatingCycle,\n          formatted: `${operatingCycle.toFixed(0)} days`,\n          description: 'Cash-to-cash cycle duration'\n        }\n      ];\n\n      // Risk Assessment\n      const riskMetrics = [\n        {\n          name: 'Financial Leverage',\n          value: financialLeverage,\n          formatted: `${financialLeverage.toFixed(1)}x`,\n          level: financialLeverage < 2 ? 'low' : financialLeverage < 3 ? 'moderate' : 'high'\n        },\n        {\n          name: 'Debt-to-Equity',\n          value: debtToEquity,\n          formatted: `${debtToEquity.toFixed(2)}x`,\n          level: debtToEquity < 0.3 ? 'low' : debtToEquity < 0.6 ? 'moderate' : 'high'\n        },\n        {\n          name: 'Interest Coverage',\n          value: interestCoverage,\n          formatted: `${interestCoverage.toFixed(1)}x`,\n          level: interestCoverage > 10 ? 'low' : interestCoverage > 5 ? 'moderate' : 'high'\n        }\n      ];\n\n      return {\n        periods,\n        latest,\n        previous,\n        revenue: {\n          latest: revenueLatest,\n          previous: revenuePrevious,\n          growth: revenueGrowthYoY,\n          cagr: revenueCAGR\n        },\n        profitability: {\n          grossMargin: grossMarginLatest,\n          grossMarginChange: marginImprovement,\n          operatingMargin: operatingMarginLatest,\n          operatingMarginChange,\n          operatingLeverage,\n          profitabilityTrend\n        },\n        financial: {\n          returnOnAssets,\n          returnOnEquity,\n          assetTurnover,\n          totalAssets,\n          totalEquity,\n          totalDebt,\n          workingCapital,\n          workingCapitalRatio\n        },\n        liquidity: {\n          currentRatio,\n          quickRatio,\n          cashRatio,\n          cashAndEquivalents,\n          currentAssets,\n          currentLiabilities\n        },\n        efficiency: {\n          inventoryTurnover,\n          receivablesTurnover,\n          operatingCycle,\n          cashConversionCycle\n        },\n        risk: {\n          debtToEquity,\n          financialLeverage,\n          interestCoverage,\n          debtServiceCoverage\n        },\n        market: {\n          revenuePerEmployee,\n          revenuePerShare,\n          bookValuePerShare\n        },\n        benchmarks: {\n          industry: industryBenchmarks,\n          comparison: benchmarkComparison\n        },\n        dcf: dcfResults,\n        revenueBreakdown,\n        kpis,\n        liquidityMetrics,\n        efficiencyMetrics,\n        riskMetrics\n      };\n    } catch (error) {\n      console.error('Error in AnalysisResults analysis calculation:', error);\n      return null;\n    }\n  }, [data, calculateDCF]);\n\n  if (!analysis) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <AlertTriangle className=\"mx-auto h-12 w-12 text-yellow-400 mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Insufficient Data</h3>\n          <p className=\"text-gray-500\">Please ensure financial data is loaded to generate analysis results.</p>\n        </div>\n      </div>\n    );\n  }\n\n  const MetricCard = ({ title, value, trend, description, icon: Icon, benchmark, performance }) => (\n    <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700 hover:border-gray-600 transition-all duration-200\">\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex items-center gap-3\">\n          <div\n            className={`p-2 rounded-lg ${\n              trend === 'up' ? 'bg-green-900/30 text-green-400' :\n                trend === 'down' ? 'bg-red-900/30 text-red-400' :\n                  'bg-gray-700 text-gray-400'\n            }`}\n          >\n            <Icon className=\"h-5 w-5\" />\n          </div>\n          <div>\n            <div className=\"text-sm font-medium text-gray-300\">{title}</div>\n            <div className=\"text-xs text-gray-500 mt-1\">{description}</div>\n          </div>\n        </div>\n        {trend === 'up' && <TrendingUp className=\"h-5 w-5 text-green-400 flex-shrink-0\" />}\n        {trend === 'down' && <TrendingDown className=\"h-5 w-5 text-red-400 flex-shrink-0\" />}\n      </div>\n      <div className=\"text-3xl font-bold text-white mb-2\">{value}</div>\n      {benchmark && (\n        <div className=\"border-t border-gray-700 pt-3 mt-3\">\n          <div className=\"flex justify-between text-xs\">\n            <span className=\"text-gray-400\">Industry Avg:</span>\n            <span className=\"text-gray-300\">{typeof benchmark === 'number' ? benchmark.toFixed(1) + (title.includes('%') ? '%' : title.includes('x') ? 'x' : '') : benchmark}</span>\n          </div>\n          <div className=\"flex justify-between text-xs mt-1\">\n            <span className=\"text-gray-400\">vs Industry:</span>\n            <span\n              className={`font-medium ${\n                performance > 0 ? 'text-green-400' : performance < 0 ? 'text-red-400' : 'text-gray-300'\n              }`}\n            >\n              {performance > 0 ? '+' : ''}{performance?.toFixed(1) || '0.0'}\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-6 p-6 bg-gray-900 text-white h-full\">\n      {/* Header */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h2 className=\"text-2xl font-bold text-white mb-6 flex items-center\">\n          <BarChart3 className=\"h-6 w-6 text-blue-400 mr-3\" />\n          Financial Analysis Results\n        </h2>\n        <p className=\"text-gray-400\">\n          Comprehensive analysis of your company's financial performance and valuation\n        </p>\n      </div>\n\n      {/* Key Performance Indicators */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {analysis.kpis.map((kpi, index) => (\n          <MetricCard key={index} {...kpi} />\n        ))}\n      </div>\n\n      {/* Advanced Financial Analysis Tabs */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 overflow-hidden\">\n        <div className=\"flex border-b border-gray-700\">\n          <button className=\"px-6 py-3 text-sm font-medium text-white bg-blue-600 border-r border-gray-700\">\n            Liquidity Analysis\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white border-r border-gray-700\">\n            Efficiency Metrics\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white border-r border-gray-700\">\n            Risk Assessment\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white\">\n            Benchmarking\n          </button>\n        </div>\n\n        {/* Liquidity Analysis Panel */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center mb-4\">\n            <Shield className=\"h-5 w-5 text-blue-400 mr-2\" />\n            <h3 className=\"text-lg font-semibold text-white\">Liquidity Position Analysis</h3>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {analysis.liquidityMetrics.map((metric, index) => (\n              <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium text-gray-200\">{metric.name}</span>\n                  <span\n                    className={`px-2 py-1 rounded text-xs font-medium ${\n                      metric.status === 'excellent' ? 'bg-green-900/30 text-green-400' :\n                        metric.status === 'good' ? 'bg-blue-900/30 text-blue-400' :\n                          metric.status === 'fair' ? 'bg-yellow-900/30 text-yellow-400' :\n                            'bg-red-900/30 text-red-400'\n                    }`}\n                  >\n                    {metric.status}\n                  </span>\n                </div>\n                <div className=\"text-xl font-bold text-white mb-1\">{metric.formatted}</div>\n                <div className=\"text-xs text-gray-400\">\n                  Benchmark: {typeof metric.benchmark === 'number' ? metric.benchmark.toFixed(1) + 'x' : formatCurrency(metric.benchmark)}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"mt-6 p-4 bg-gray-750 rounded-lg border border-gray-600\">\n            <h4 className=\"font-medium text-gray-200 mb-3 flex items-center\">\n              <Eye className=\"h-4 w-4 text-blue-400 mr-2\" />\n              Liquidity Analysis Summary\n            </h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-400\">Working Capital:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.financial.workingCapital)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Cash Position:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.cashAndEquivalents)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Current Assets:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.currentAssets)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Current Liabilities:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.currentLiabilities)}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Efficiency & Operations Analysis */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <div className=\"flex items-center mb-6\">\n          <Zap className=\"h-5 w-5 text-orange-400 mr-2\" />\n          <h3 className=\"text-lg font-semibold text-white\">Operational Efficiency Metrics</h3>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {analysis.efficiencyMetrics.map((metric, index) => (\n            <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n              <div className=\"text-sm font-medium text-gray-200 mb-2\">{metric.name}</div>\n              <div className=\"text-xl font-bold text-white mb-1\">{metric.formatted}</div>\n              <div className=\"text-xs text-gray-400\">{metric.description}</div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Timer className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Cash Conversion</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">{analysis.efficiency.cashConversionCycle.toFixed(0)} days</div>\n            <div className=\"text-xs text-gray-400\">Time to convert inventory to cash</div>\n          </div>\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Gauge className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Asset Productivity</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">{analysis.financial.assetTurnover.toFixed(2)}x</div>\n            <div className=\"text-xs text-gray-400\">Revenue per dollar of assets</div>\n          </div>\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Users className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Revenue/Employee</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">\n              {analysis.market.revenuePerEmployee > 0 ? formatCurrency(analysis.market.revenuePerEmployee) : 'N/A'}\n            </div>\n            <div className=\"text-xs text-gray-400\">Productivity per employee</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Risk Assessment Dashboard */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <div className=\"flex items-center mb-6\">\n          <AlertTriangle className=\"h-5 w-5 text-red-400 mr-2\" />\n          <h3 className=\"text-lg font-semibold text-white\">Financial Risk Assessment</h3>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {analysis.riskMetrics.map((metric, index) => (\n            <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-sm font-medium text-gray-200\">{metric.name}</span>\n                <span\n                  className={`px-2 py-1 rounded text-xs font-medium ${\n                    metric.level === 'low' ? 'bg-green-900/30 text-green-400' :\n                      metric.level === 'moderate' ? 'bg-yellow-900/30 text-yellow-400' :\n                        'bg-red-900/30 text-red-400'\n                  }`}\n                >\n                  {metric.level} risk\n                </span>\n              </div>\n              <div className=\"text-xl font-bold text-white\">{metric.formatted}</div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-6 p-4 bg-gray-750 rounded-lg border border-gray-600\">\n          <h4 className=\"font-medium text-gray-200 mb-3 flex items-center\">\n            <Shield className=\"h-4 w-4 text-red-400 mr-2\" />\n            Risk Analysis Summary\n          </h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-400\">Financial Leverage:</span>\n              <span\n                className={`ml-2 font-medium ${\n                  analysis.risk.financialLeverage < 2 ? 'text-green-400' :\n                    analysis.risk.financialLeverage < 3 ? 'text-yellow-400' : 'text-red-400'\n                }`}\n              >\n                {analysis.risk.financialLeverage.toFixed(1)}x\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Interest Coverage:</span>\n              <span\n                className={`ml-2 font-medium ${\n                  analysis.risk.interestCoverage > 10 ? 'text-green-400' :\n                    analysis.risk.interestCoverage > 5 ? 'text-yellow-400' : 'text-red-400'\n                }`}\n              >\n                {analysis.risk.interestCoverage.toFixed(1)}x\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Financial Performance Summary */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Financial Performance Trends */}\n        <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n          <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n            <Activity className=\"h-5 w-5 text-purple-400 mr-2\" />\n            Performance Trends\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h4 className=\"font-medium text-gray-200 mb-3\">Revenue Analysis</h4>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Latest Period:</span>\n                  <span className=\"font-semibold text-white\">{formatCurrency(analysis.revenue.latest)}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">YoY Growth:</span>\n                  <span\n                    className={`font-semibold ${\n                      analysis.revenue.growth > 0 ? 'text-green-400' : 'text-red-400'\n                    }`}\n                  >\n                    {analysis.revenue.growth > 0 ? '+' : ''}{analysis.revenue.growth.toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">CAGR:</span>\n                  <span className=\"font-semibold text-gray-200\">{analysis.revenue.cagr.toFixed(1)}%</span>\n                </div>\n              </div>\n            </div>\n            <div>\n              <h4 className=\"font-medium text-gray-200 mb-3\">Profitability Margins</h4>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Gross Margin:</span>\n                  <span className=\"font-semibold text-white\">{analysis.profitability.grossMargin.toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Operating Margin:</span>\n                  <span className=\"font-semibold text-white\">{analysis.profitability.operatingMargin.toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Margin Change:</span>\n                  <span\n                    className={`font-semibold ${\n                      analysis.profitability.grossMarginChange > 0 ? 'text-green-400' : 'text-red-400'\n                    }`}\n                  >\n                    {analysis.profitability.grossMarginChange > 0 ? '+' : ''}{analysis.profitability.grossMarginChange.toFixed(1)}pp\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Valuation Summary */}\n        {analysis.dcf && (\n          <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n            <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n              <DollarSign className=\"h-5 w-5 text-green-400 mr-2\" />\n              DCF Valuation Summary\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"text-center p-4 bg-green-900/30 border border-green-700 rounded-lg\">\n                <div className=\"text-2xl font-bold text-green-400\">\n                  {formatCurrency(analysis.dcf.enterpriseValue)}\n                </div>\n                <div className=\"text-sm text-green-300\">Enterprise Value</div>\n              </div>\n              <div className=\"text-center p-4 bg-blue-900/30 border border-blue-700 rounded-lg\">\n                <div className=\"text-2xl font-bold text-blue-400\">\n                  {formatCurrency(analysis.dcf.sharePrice)}\n                </div>\n                <div className=\"text-sm text-blue-300\">Price per Share</div>\n              </div>\n              <div className=\"text-center p-4 bg-gray-700 border border-gray-600 rounded-lg\">\n                <div className=\"text-2xl font-bold text-gray-300\">\n                  {formatCurrency(analysis.dcf.terminalValue)}\n                </div>\n                <div className=\"text-sm text-gray-400\">Terminal Value</div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Revenue Breakdown */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n          <PieChart className=\"h-5 w-5 text-orange-400 mr-2\" />\n          Business Unit Performance\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {analysis.revenueBreakdown.map((unit, index) => {\n            const percentage = analysis.revenue.latest ? (unit.value / analysis.revenue.latest) * 100 : 0;\n            return (\n              <div key={index} className=\"p-4 bg-gray-700 border border-gray-600 rounded-lg\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"font-medium text-gray-200\">{unit.name}</span>\n                  <span className=\"text-sm text-gray-400\">{percentage.toFixed(1)}%</span>\n                </div>\n                <div className=\"text-lg font-semibold text-white mb-1\">\n                  {formatCurrency(unit.value)}\n                </div>\n                <div className=\"w-full bg-gray-600 rounded-full h-2\">\n                  <div\n                    className=\"bg-blue-500 h-2 rounded-full\"\n                    style={{ width: `${Math.min(percentage, 100)}%` }}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Key Insights */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n          <CheckCircle className=\"h-5 w-5 text-green-400 mr-2\" />\n          Key Financial Insights\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <h4 className=\"font-medium text-gray-200 mb-2\">Strengths</h4>\n            <ul className=\"space-y-1 text-sm text-gray-400\">\n              {analysis.revenue.growth > 0 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Positive revenue growth trajectory\n                </li>\n              )}\n              {analysis.profitability.grossMargin > 60 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Strong gross margin above 60%\n                </li>\n              )}\n              {analysis.profitability.grossMarginChange > 0 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Improving profitability margins\n                </li>\n              )}\n              <li className=\"flex items-center\">\n                <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                Diversified healthcare revenue streams\n              </li>\n            </ul>\n          </div>\n          <div>\n            <h4 className=\"font-medium text-gray-200 mb-2\">Areas for Focus</h4>\n            <ul className=\"space-y-1 text-sm text-gray-400\">\n              {analysis.revenue.growth < 5 && (\n                <li className=\"flex items-center\">\n                  <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                  Revenue growth below industry benchmarks\n                </li>\n              )}\n              {analysis.profitability.operatingMargin < 20 && (\n                <li className=\"flex items-center\">\n                  <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                  Operating margin optimization opportunities\n                </li>\n              )}\n              <li className=\"flex items-center\">\n                <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                Monitor competitive positioning in key segments\n              </li>\n              <li className=\"flex items-center\">\n                <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                Consider strategic initiatives for growth acceleration\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnalysisResults;\n","import { motion, AnimatePresence } from 'framer-motion';\nimport {\n  TrendingUp,\n  BarChart3,\n  Info,\n  AlertTriangle,\n  ChevronRight,\n  ChevronDown,\n  Target,\n  Users,\n  DollarSign,\n  Building2,\n  Lightbulb,\n  X\n} from 'lucide-react';\nimport React, { useState, useEffect, useMemo } from 'react';\n\nconst ContextualInsightsSidebar = ({\n  financialData,\n  currentMetric,\n  analysisContext = 'general',\n  onInsightClick,\n  isVisible = true,\n  onToggle\n}) => {\n  const [expandedSections, setExpandedSections] = useState({\n    assumptions: true,\n    benchmarks: true,\n    insights: true,\n    suggestions: false\n  });\n\n  // Industry benchmark data (in real implementation, this would come from APIs)\n  const industryBenchmarks = useMemo(() => ({\n    healthcare: {\n      revenueGrowth: { min: 8, median: 15, max: 25, unit: '%' },\n      ebitdaMargin: { min: 18, median: 28, max: 40, unit: '%' },\n      grossMargin: { min: 65, median: 75, max: 85, unit: '%' },\n      roe: { min: 12, median: 18, max: 25, unit: '%' }\n    },\n    technology: {\n      revenueGrowth: { min: 15, median: 25, max: 50, unit: '%' },\n      ebitdaMargin: { min: 20, median: 35, max: 50, unit: '%' },\n      grossMargin: { min: 70, median: 80, max: 90, unit: '%' },\n      roe: { min: 15, median: 22, max: 35, unit: '%' }\n    },\n    manufacturing: {\n      revenueGrowth: { min: 3, median: 8, max: 15, unit: '%' },\n      ebitdaMargin: { min: 10, median: 18, max: 25, unit: '%' },\n      grossMargin: { min: 25, median: 35, max: 45, unit: '%' },\n      roe: { min: 8, median: 15, max: 22, unit: '%' }\n    }\n  }), []);\n\n  // Generate contextual insights based on current analysis\n  const generateContextualInsights = () => {\n    const insights = [];\n\n    if (!financialData?.statements?.incomeStatement) {\n      return [{\n        type: 'info',\n        title: 'Getting Started',\n        content: 'Import financial data to see contextual insights and benchmarks.',\n        action: 'Import Data'\n      }];\n    }\n\n    const income = financialData.statements.incomeStatement;\n    const latestRevenue = income.totalRevenue?.[2] || 0;\n    const latestOperatingIncome = income.operatingIncome?.[2] || 0;\n\n    // Revenue-based insights\n    if (latestRevenue > 0) {\n      const operatingMargin = (latestOperatingIncome / latestRevenue) * 100;\n\n      insights.push({\n        type: 'benchmark',\n        title: 'Operating Margin Analysis',\n        content: `Current operating margin of ${operatingMargin.toFixed(1)}% compares to healthcare industry median of 28%.`,\n        metric: operatingMargin,\n        benchmark: 28,\n        status: operatingMargin >= 28 ? 'above' : operatingMargin >= 20 ? 'within' : 'below'\n      });\n    }\n\n    // Context-specific insights\n    if (analysisContext === 'dcf') {\n      insights.push({\n        type: 'assumption',\n        title: 'DCF Model Assumptions',\n        content: 'Consider industry-specific discount rates and terminal growth assumptions.',\n        suggestions: [\n          'Healthcare companies typically use 8-12% WACC',\n          'Terminal growth rates should reflect long-term GDP growth (2-3%)',\n          'Consider regulatory risks in discount rate adjustments'\n        ]\n      });\n    }\n\n    if (currentMetric?.includes('revenue')) {\n      insights.push({\n        type: 'insight',\n        title: 'Revenue Growth Drivers',\n        content: 'Analyze revenue composition and growth sustainability.',\n        suggestions: [\n          'Break down revenue by service line',\n          'Assess recurring vs. one-time revenue',\n          'Evaluate market expansion opportunities'\n        ]\n      });\n    }\n\n    return insights;\n  };\n\n  const contextualInsights = generateContextualInsights();\n\n  const toggleSection = (section) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n\n  const renderBenchmarkBar = (current, benchmark, min, max) => {\n    const range = max - min;\n    const currentPos = Math.max(0, Math.min(100, ((current - min) / range) * 100));\n    const benchmarkPos = Math.max(0, Math.min(100, ((benchmark - min) / range) * 100));\n\n    return (\n      <div className=\"relative h-2 bg-slate-200 rounded-full overflow-hidden\">\n        <div\n          className=\"absolute top-0 h-full bg-blue-200 rounded-full\"\n          style={{ width: `${benchmarkPos}%` }}\n        />\n        <div\n          className=\"absolute top-0 h-full w-1 bg-blue-600 rounded-full\"\n          style={{ left: `${benchmarkPos}%` }}\n        />\n        <div\n          className=\"absolute top-0 h-full w-1 bg-amber-500 rounded-full\"\n          style={{ left: `${currentPos}%` }}\n        />\n      </div>\n    );\n  };\n\n  const renderInsightItem = (insight, index) => {\n    const icons = {\n      info: Info,\n      benchmark: Target,\n      assumption: AlertTriangle,\n      insight: Lightbulb\n    };\n\n    const colors = {\n      info: 'text-blue-500 bg-blue-50',\n      benchmark: 'text-emerald-500 bg-emerald-50',\n      assumption: 'text-amber-500 bg-amber-50',\n      insight: 'text-purple-500 bg-purple-50'\n    };\n\n    const Icon = icons[insight.type] || Info;\n    const colorClass = colors[insight.type] || colors.info;\n\n    return (\n      <motion.div\n        key={index}\n        initial={{ opacity: 0, x: 20 }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ delay: index * 0.1 }}\n        className=\"p-4 bg-white rounded-lg border border-slate-200 hover:border-slate-300 transition-colors\"\n      >\n        <div className=\"flex items-start gap-3\">\n          <div className={`p-2 rounded-lg ${colorClass}`}>\n            <Icon size={16} />\n          </div>\n          <div className=\"flex-1 min-w-0\">\n            <h4 className=\"font-semibold text-slate-900 text-sm mb-2\">{insight.title}</h4>\n            <p className=\"text-sm text-slate-600 mb-3\">{insight.content}</p>\n\n            {insight.metric !== undefined && insight.benchmark !== undefined && (\n              <div className=\"mb-3\">\n                <div className=\"flex justify-between text-xs text-slate-500 mb-1\">\n                  <span>Current: {insight.metric.toFixed(1)}%</span>\n                  <span>Benchmark: {insight.benchmark}%</span>\n                </div>\n                {renderBenchmarkBar(insight.metric, insight.benchmark, 0, Math.max(insight.benchmark * 1.5, insight.metric * 1.2))}\n              </div>\n            )}\n\n            {insight.suggestions && (\n              <div className=\"mt-3\">\n                <div className=\"space-y-1\">\n                  {insight.suggestions.map((suggestion, idx) => (\n                    <div key={idx} className=\"flex items-start gap-2 text-xs text-slate-600\">\n                      <ChevronRight size={12} className=\"text-slate-400 mt-0.5 flex-shrink-0\" />\n                      <span>{suggestion}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {insight.action && (\n              <button\n                onClick={() => onInsightClick?.(insight)}\n                className=\"mt-3 px-3 py-1.5 bg-blue-50 hover:bg-blue-100 text-blue-700 text-xs font-medium rounded-md transition-colors\"\n              >\n                {insight.action}\n              </button>\n            )}\n          </div>\n        </div>\n      </motion.div>\n    );\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <motion.div\n      initial={{ x: 320, opacity: 0 }}\n      animate={{ x: 0, opacity: 1 }}\n      exit={{ x: 320, opacity: 0 }}\n      className=\"fixed right-0 top-16 bottom-0 w-80 bg-slate-50 border-l border-slate-200 shadow-xl z-40 overflow-hidden flex flex-col\"\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 bg-white border-b border-slate-200\">\n        <div className=\"flex items-center gap-2\">\n          <div className=\"p-1.5 bg-blue-100 rounded-lg\">\n            <BarChart3 size={16} className=\"text-blue-600\" />\n          </div>\n          <h3 className=\"font-semibold text-slate-900\">Contextual Insights</h3>\n        </div>\n        {onToggle && (\n          <button\n            onClick={onToggle}\n            className=\"p-1.5 hover:bg-slate-100 rounded-lg transition-colors\"\n          >\n            <X size={16} className=\"text-slate-500\" />\n          </button>\n        )}\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-y-auto\">\n        <div className=\"p-4 space-y-4\">\n          {/* Assumptions Section */}\n          <div className=\"bg-white rounded-lg border border-slate-200\">\n            <button\n              onClick={() => toggleSection('assumptions')}\n              className=\"w-full flex items-center justify-between p-4 text-left hover:bg-slate-50 transition-colors\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <Target size={16} className=\"text-amber-600\" />\n                <span className=\"font-medium text-slate-900\">Key Assumptions</span>\n              </div>\n              {expandedSections.assumptions ?\n                <ChevronDown size={16} className=\"text-slate-400\" /> :\n                <ChevronRight size={16} className=\"text-slate-400\" />\n              }\n            </button>\n\n            <AnimatePresence>\n              {expandedSections.assumptions && (\n                <motion.div\n                  initial={{ height: 0, opacity: 0 }}\n                  animate={{ height: 'auto', opacity: 1 }}\n                  exit={{ height: 0, opacity: 0 }}\n                  className=\"border-t border-slate-100\"\n                >\n                  <div className=\"p-4 space-y-3\">\n                    <div className=\"flex justify-between items-center text-sm\">\n                      <span className=\"text-slate-600\">Discount Rate</span>\n                      <span className=\"font-mono text-slate-900\">10.0%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center text-sm\">\n                      <span className=\"text-slate-600\">Terminal Growth</span>\n                      <span className=\"font-mono text-slate-900\">2.5%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center text-sm\">\n                      <span className=\"text-slate-600\">Tax Rate</span>\n                      <span className=\"font-mono text-slate-900\">25.0%</span>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n\n          {/* Industry Benchmarks Section */}\n          <div className=\"bg-white rounded-lg border border-slate-200\">\n            <button\n              onClick={() => toggleSection('benchmarks')}\n              className=\"w-full flex items-center justify-between p-4 text-left hover:bg-slate-50 transition-colors\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <Users size={16} className=\"text-emerald-600\" />\n                <span className=\"font-medium text-slate-900\">Industry Benchmarks</span>\n              </div>\n              {expandedSections.benchmarks ?\n                <ChevronDown size={16} className=\"text-slate-400\" /> :\n                <ChevronRight size={16} className=\"text-slate-400\" />\n              }\n            </button>\n\n            <AnimatePresence>\n              {expandedSections.benchmarks && (\n                <motion.div\n                  initial={{ height: 0, opacity: 0 }}\n                  animate={{ height: 'auto', opacity: 1 }}\n                  exit={{ height: 0, opacity: 0 }}\n                  className=\"border-t border-slate-100\"\n                >\n                  <div className=\"p-4 space-y-4\">\n                    <div className=\"text-sm\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"text-slate-600\">Revenue Growth</span>\n                        <span className=\"text-xs text-slate-500\">Healthcare Industry</span>\n                      </div>\n                      <div className=\"flex justify-between text-xs text-slate-500 mb-1\">\n                        <span>8%</span>\n                        <span className=\"font-medium\">15% (median)</span>\n                        <span>25%</span>\n                      </div>\n                      {renderBenchmarkBar(12, 15, 8, 25)}\n                    </div>\n\n                    <div className=\"text-sm\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"text-slate-600\">EBITDA Margin</span>\n                        <span className=\"text-xs text-slate-500\">Healthcare Industry</span>\n                      </div>\n                      <div className=\"flex justify-between text-xs text-slate-500 mb-1\">\n                        <span>18%</span>\n                        <span className=\"font-medium\">28% (median)</span>\n                        <span>40%</span>\n                      </div>\n                      {renderBenchmarkBar(24, 28, 18, 40)}\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n\n          {/* Contextual Insights */}\n          <div className=\"space-y-3\">\n            {contextualInsights.map((insight, index) => renderInsightItem(insight, index))}\n          </div>\n\n          {/* Automated Suggestions */}\n          <div className=\"bg-white rounded-lg border border-slate-200\">\n            <button\n              onClick={() => toggleSection('suggestions')}\n              className=\"w-full flex items-center justify-between p-4 text-left hover:bg-slate-50 transition-colors\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <Lightbulb size={16} className=\"text-purple-600\" />\n                <span className=\"font-medium text-slate-900\">Smart Suggestions</span>\n              </div>\n              {expandedSections.suggestions ?\n                <ChevronDown size={16} className=\"text-slate-400\" /> :\n                <ChevronRight size={16} className=\"text-slate-400\" />\n              }\n            </button>\n\n            <AnimatePresence>\n              {expandedSections.suggestions && (\n                <motion.div\n                  initial={{ height: 0, opacity: 0 }}\n                  animate={{ height: 'auto', opacity: 1 }}\n                  exit={{ height: 0, opacity: 0 }}\n                  className=\"border-t border-slate-100\"\n                >\n                  <div className=\"p-4 space-y-3\">\n                    <div className=\"flex items-start gap-3 p-3 bg-blue-50 rounded-lg\">\n                      <BarChart3 size={14} className=\"text-blue-600 mt-0.5\" />\n                      <div>\n                        <div className=\"text-sm font-medium text-blue-900 mb-1\">\n                          Create Revenue vs CapEx Chart\n                        </div>\n                        <div className=\"text-xs text-blue-700\">\n                          Visualize the relationship between revenue growth and capital expenditure\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-start gap-3 p-3 bg-emerald-50 rounded-lg\">\n                      <TrendingUp size={14} className=\"text-emerald-600 mt-0.5\" />\n                      <div>\n                        <div className=\"text-sm font-medium text-emerald-900 mb-1\">\n                          Add Sensitivity Analysis\n                        </div>\n                        <div className=\"text-xs text-emerald-700\">\n                          Test how valuation changes with different assumptions\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default ContextualInsightsSidebar;\n","import { motion } from 'framer-motion';\nimport {\n  TrendingUp, TrendingDown, Activity, Globe, Bell,\n  Plus, Minus, RefreshCw, Settings, Download, Search,\n  BarChart3, LineChart, PieChart, AlertCircle, CheckCircle\n} from 'lucide-react';\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { LineChart as RechartsLineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, AreaChart, Area, BarChart, Bar } from 'recharts';\n\nconst EnhancedMarketDataDashboard = ({ data, onDataChange }) => {\n  const [activeView, setActiveView] = useState('overview');\n  const [watchlist, setWatchlist] = useState([\n    { symbol: 'SPY', name: 'SPDR S&P 500 ETF', price: 445.67, change: 2.34, changePercent: 0.53, category: 'index' },\n    { symbol: 'QQQ', name: 'Invesco QQQ Trust', price: 378.91, change: -1.45, changePercent: -0.38, category: 'index' },\n    { symbol: 'VIX', name: 'CBOE Volatility Index', price: 18.45, change: 0.87, changePercent: 4.95, category: 'volatility' },\n    { symbol: 'DXY', name: 'US Dollar Index', price: 102.45, change: -0.23, changePercent: -0.22, category: 'currency' },\n    { symbol: '^TNX', name: '10-Year Treasury Yield', price: 4.25, change: 0.05, changePercent: 1.19, category: 'rates' }\n  ]);\n\n  const [marketData, setMarketData] = useState({\n    indices: {\n      'S&P 500': { value: 4456.78, change: 23.45, changePercent: 0.53 },\n      'NASDAQ': { value: 13789.45, change: -45.67, changePercent: -0.33 },\n      'DOW': { value: 34567.89, change: 156.78, changePercent: 0.46 },\n      'Russell 2000': { value: 1987.65, change: 12.34, changePercent: 0.63 }\n    },\n    sectors: [\n      { name: 'Technology', change: 1.2, weight: 23.5 },\n      { name: 'Healthcare', change: 0.8, weight: 13.2 },\n      { name: 'Financial', change: -0.4, weight: 12.8 },\n      { name: 'Consumer Disc.', change: 0.6, weight: 10.9 },\n      { name: 'Communication', change: -0.2, weight: 9.1 },\n      { name: 'Industrials', change: 0.9, weight: 8.7 }\n    ],\n    economicIndicators: {\n      'Fed Funds Rate': { value: 5.25, change: 0.0, unit: '%' },\n      '10Y Treasury': { value: 4.25, change: 0.05, unit: '%' },\n      'Inflation (CPI)': { value: 3.1, change: -0.2, unit: '%' },\n      'Unemployment': { value: 3.8, change: 0.1, unit: '%' },\n      'GDP Growth': { value: 2.4, change: 0.1, unit: '%' }\n    }\n  });\n\n  const [alerts, setAlerts] = useState([\n    { id: 1, type: 'price', symbol: 'SPY', condition: 'above', value: 450, active: true },\n    { id: 2, type: 'volatility', symbol: 'VIX', condition: 'above', value: 20, active: true }\n  ]);\n\n  const [newSymbol, setNewSymbol] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const formatCurrency = useCallback((value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    const sign = value >= 0 ? '+' : '';\n    return `${sign}${value.toFixed(2)}%`;\n  }, []);\n\n  const getChangeColor = useCallback((change) => {\n    if (change > 0) return 'text-green-600';\n    if (change < 0) return 'text-red-600';\n    return 'text-gray-600';\n  }, []);\n\n  const getChangeIcon = useCallback((change) => {\n    if (change > 0) return TrendingUp;\n    if (change < 0) return TrendingDown;\n    return Minus;\n  }, []);\n\n  // Simulate real-time data updates\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setWatchlist(prev => prev.map(item => ({\n        ...item,\n        price: item.price + (Math.random() - 0.5) * 2,\n        change: item.change + (Math.random() - 0.5) * 0.5,\n        changePercent: item.changePercent + (Math.random() - 0.5) * 0.1\n      })));\n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const addToWatchlist = useCallback(async() => {\n    if (!newSymbol.trim()) return;\n\n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      const newItem = {\n        symbol: newSymbol.toUpperCase(),\n        name: `${newSymbol.toUpperCase()} Inc.`,\n        price: Math.random() * 200 + 50,\n        change: (Math.random() - 0.5) * 10,\n        changePercent: (Math.random() - 0.5) * 5,\n        category: 'stock'\n      };\n\n      setWatchlist(prev => [...prev, newItem]);\n      setNewSymbol('');\n    } catch (error) {\n      console.error('Error adding symbol:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [newSymbol]);\n\n  const removeFromWatchlist = useCallback((symbol) => {\n    setWatchlist(prev => prev.filter(item => item.symbol !== symbol));\n  }, []);\n\n  const chartData = useMemo(() => {\n    // Generate sample time series data\n    const now = new Date();\n    return Array.from({ length: 30 }, (_, i) => ({\n      time: new Date(now.getTime() - (29 - i) * 24 * 60 * 60 * 1000).toLocaleDateString(),\n      SPY: 440 + Math.sin(i * 0.2) * 10 + Math.random() * 5,\n      QQQ: 370 + Math.sin(i * 0.25) * 15 + Math.random() * 8,\n      VIX: 20 + Math.sin(i * 0.3) * 5 + Math.random() * 3\n    }));\n  }, []);\n\n  const correlationMatrix = useMemo(() => {\n    // Calculate correlations between major indices (simulated)\n    return [\n      { pair: 'SPY vs QQQ', correlation: 0.85, strength: 'Strong Positive' },\n      { pair: 'SPY vs VIX', correlation: -0.72, strength: 'Strong Negative' },\n      { pair: 'QQQ vs VIX', correlation: -0.68, strength: 'Moderate Negative' },\n      { pair: 'SPY vs DXY', correlation: -0.45, strength: 'Moderate Negative' }\n    ];\n  }, []);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Activity className=\"text-blue-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Enhanced Market Data Dashboard</h2>\n            <p className=\"text-gray-600\">Real-time market insights & valuation integration</p>\n          </div>\n        </div>\n\n        <div className=\"flex space-x-3\">\n          <motion.button\n            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <RefreshCw size={16} />\n            <span>Sync Data</span>\n          </motion.button>\n\n          <motion.button\n            className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <Settings size={16} />\n            <span>Settings</span>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* View Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {[\n            { id: 'overview', label: 'Market Overview', icon: Globe },\n            { id: 'watchlist', label: 'Watchlist', icon: BarChart3 },\n            { id: 'charts', label: 'Charts & Analysis', icon: LineChart },\n            { id: 'alerts', label: 'Alerts', icon: Bell }\n          ].map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveView(tab.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeView === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{tab.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Market Overview */}\n      {activeView === 'overview' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Major Indices */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Major Indices</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {Object.entries(marketData.indices).map(([name, data]) => {\n                const ChangeIcon = getChangeIcon(data.change);\n                return (\n                  <div key={name} className=\"bg-gray-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600 mb-1\">{name}</div>\n                    <div className=\"text-xl font-bold text-gray-800\">\n                      {data.value.toLocaleString()}\n                    </div>\n                    <div className={`flex items-center space-x-1 text-sm ${getChangeColor(data.change)}`}>\n                      <ChangeIcon size={14} />\n                      <span>{data.change > 0 ? '+' : ''}{data.change.toFixed(2)}</span>\n                      <span>({formatPercent(data.changePercent)})</span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Sector Performance */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Sector Performance</h3>\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                {marketData.sectors.map((sector) => (\n                  <div key={sector.name} className=\"flex justify-between items-center\">\n                    <div>\n                      <div className=\"font-medium text-gray-800\">{sector.name}</div>\n                      <div className=\"text-sm text-gray-600\">{sector.weight}% weight</div>\n                    </div>\n                    <div className={`font-semibold ${getChangeColor(sector.change)}`}>\n                      {formatPercent(sector.change)}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Economic Indicators */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Economic Indicators</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n              {Object.entries(marketData.economicIndicators).map(([name, data]) => (\n                <div key={name} className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-sm text-gray-600 mb-1\">{name}</div>\n                  <div className=\"text-lg font-bold text-gray-800\">\n                    {data.value}{data.unit}\n                  </div>\n                  <div className={`text-sm ${getChangeColor(data.change)}`}>\n                    {data.change > 0 ? '+' : ''}{data.change}{data.unit}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Watchlist */}\n      {activeView === 'watchlist' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Add Symbol */}\n          <div className=\"flex space-x-3\">\n            <div className=\"flex-1\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter symbol (e.g., AAPL, MSFT)\"\n                value={newSymbol}\n                onChange={(e) => setNewSymbol(e.target.value.toUpperCase())}\n                onKeyPress={(e) => e.key === 'Enter' && addToWatchlist()}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <motion.button\n              onClick={addToWatchlist}\n              disabled={isLoading || !newSymbol.trim()}\n              className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n                isLoading || !newSymbol.trim()\n                  ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                  : 'bg-green-600 hover:bg-green-700 text-white'\n              }`}\n              whileHover={!isLoading && newSymbol.trim() ? { scale: 1.02 } : {}}\n            >\n              <Plus size={16} />\n              <span>{isLoading ? 'Adding...' : 'Add'}</span>\n            </motion.button>\n          </div>\n\n          {/* Watchlist Table */}\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4\">Symbol</th>\n                  <th className=\"text-left py-3 px-4\">Name</th>\n                  <th className=\"text-right py-3 px-4\">Price</th>\n                  <th className=\"text-right py-3 px-4\">Change</th>\n                  <th className=\"text-right py-3 px-4\">Change %</th>\n                  <th className=\"text-center py-3 px-4\">Category</th>\n                  <th className=\"text-center py-3 px-4\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {watchlist.map((item) => {\n                  const ChangeIcon = getChangeIcon(item.change);\n                  return (\n                    <tr key={item.symbol} className=\"border-b border-gray-200 hover:bg-gray-50\">\n                      <td className=\"py-3 px-4 font-medium text-gray-800\">{item.symbol}</td>\n                      <td className=\"py-3 px-4 text-gray-600\">{item.name}</td>\n                      <td className=\"text-right py-3 px-4 font-medium\">{formatCurrency(item.price)}</td>\n                      <td className={`text-right py-3 px-4 ${getChangeColor(item.change)}`}>\n                        <div className=\"flex items-center justify-end space-x-1\">\n                          <ChangeIcon size={14} />\n                          <span>{item.change > 0 ? '+' : ''}{item.change.toFixed(2)}</span>\n                        </div>\n                      </td>\n                      <td className={`text-right py-3 px-4 font-medium ${getChangeColor(item.changePercent)}`}>\n                        {formatPercent(item.changePercent)}\n                      </td>\n                      <td className=\"text-center py-3 px-4\">\n                        <span\n                          className={`px-2 py-1 rounded-full text-xs font-medium ${\n                            item.category === 'index' ? 'bg-blue-100 text-blue-800' :\n                              item.category === 'stock' ? 'bg-green-100 text-green-800' :\n                                item.category === 'volatility' ? 'bg-red-100 text-red-800' :\n                                  'bg-gray-100 text-gray-800'\n                          }`}\n                        >\n                          {item.category}\n                        </span>\n                      </td>\n                      <td className=\"text-center py-3 px-4\">\n                        <button\n                          onClick={() => removeFromWatchlist(item.symbol)}\n                          className=\"text-red-600 hover:text-red-800\"\n                        >\n                          <Minus size={16} />\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Charts & Analysis */}\n      {activeView === 'charts' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Price Chart */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">30-Day Price Performance</h3>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <RechartsLineChart data={chartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"time\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Line\n                    type=\"monotone\" dataKey=\"SPY\" stroke=\"#3B82F6\"\n                    strokeWidth={2} name=\"S&P 500\"\n                  />\n                  <Line\n                    type=\"monotone\" dataKey=\"QQQ\" stroke=\"#10B981\"\n                    strokeWidth={2} name=\"NASDAQ\"\n                  />\n                  <Line\n                    type=\"monotone\" dataKey=\"VIX\" stroke=\"#EF4444\"\n                    strokeWidth={2} name=\"VIX\"\n                  />\n                </RechartsLineChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Correlation Analysis */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Correlation Analysis</h3>\n            <div className=\"space-y-3\">\n              {correlationMatrix.map((corr, idx) => (\n                <div key={idx} className=\"flex items-center justify-between p-3 bg-white rounded-lg\">\n                  <div>\n                    <div className=\"font-medium text-gray-800\">{corr.pair}</div>\n                    <div className=\"text-sm text-gray-600\">{corr.strength}</div>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <div\n                      className={`text-lg font-bold ${\n                        Math.abs(corr.correlation) > 0.7 ? 'text-red-600' :\n                          Math.abs(corr.correlation) > 0.4 ? 'text-yellow-600' :\n                            'text-green-600'\n                      }`}\n                    >\n                      {corr.correlation.toFixed(2)}\n                    </div>\n                    <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                      <div\n                        className={`h-2 rounded-full ${\n                          Math.abs(corr.correlation) > 0.7 ? 'bg-red-600' :\n                            Math.abs(corr.correlation) > 0.4 ? 'bg-yellow-600' :\n                              'bg-green-600'\n                        }`}\n                        style={{ width: `${Math.abs(corr.correlation) * 100}%` }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Alerts */}\n      {activeView === 'alerts' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Active Alerts */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Active Alerts</h3>\n            <div className=\"space-y-3\">\n              {alerts.map((alert) => (\n                <div key={alert.id} className=\"flex items-center justify-between p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Bell className=\"text-yellow-600\" size={20} />\n                    <div>\n                      <div className=\"font-medium text-gray-800\">\n                        {alert.symbol} {alert.type} alert\n                      </div>\n                      <div className=\"text-sm text-gray-600\">\n                        Notify when {alert.type} goes {alert.condition} {alert.value}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <span\n                      className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        alert.active ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\n                      }`}\n                    >\n                      {alert.active ? 'Active' : 'Inactive'}\n                    </span>\n                    <button className=\"text-red-600 hover:text-red-800\">\n                      <Minus size={16} />\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Market Status Indicators */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Market Status</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <CheckCircle className=\"text-green-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">US Markets</div>\n                  <div className=\"text-sm text-gray-600\">Open (6h 23m remaining)</div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <AlertCircle className=\"text-yellow-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">European Markets</div>\n                  <div className=\"text-sm text-gray-600\">Closed</div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <AlertCircle className=\"text-red-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">Asian Markets</div>\n                  <div className=\"text-sm text-gray-600\">Closed</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default EnhancedMarketDataDashboard;\n","import { motion } from 'framer-motion';\nimport { FileText, TrendingUp, Building, Activity, Calculator, RefreshCw, CheckCircle, AlertCircle } from 'lucide-react';\nimport React, { useState, useCallback } from 'react';\n\nconst FinancialModelWorkspace = ({ data, onDataChange }) => {\n  const [activeStatement, setActiveStatement] = useState('income');\n  const [modelData, setModelData] = useState({\n    // Income Statement (in thousands)\n    revenue: [100000, 105000, 110250, 115763, 121551],\n    costOfGoodsSold: [60000, 63000, 66150, 69458, 72931],\n    grossProfit: [40000, 42000, 44100, 46305, 48620],\n    operatingExpenses: [25000, 26250, 27563, 28941, 30388],\n    ebitda: [15000, 15750, 16538, 17364, 18232],\n    depreciation: [3000, 3150, 3308, 3473, 3647],\n    ebit: [12000, 12600, 13230, 13891, 14585],\n    interestExpense: [2000, 1800, 1580, 1340, 1080],\n    ebt: [10000, 10800, 11650, 12551, 13505],\n    taxes: [2100, 2268, 2447, 2636, 2836],\n    netIncome: [7900, 8532, 9203, 9915, 10669],\n\n    // Balance Sheet\n    cash: [5000, 8532, 12735, 17650, 23319],\n    accountsReceivable: [8333, 8750, 9188, 9647, 10129],\n    inventory: [10000, 10500, 11025, 11576, 12155],\n    totalCurrentAssets: [23333, 27782, 32948, 38873, 45603],\n    ppe: [50000, 51850, 53543, 55070, 56423],\n    totalAssets: [73333, 79632, 86491, 93943, 102026],\n\n    accountsPayable: [5000, 5250, 5513, 5789, 6078],\n    shortTermDebt: [3000, 2000, 1000, 0, 0],\n    totalCurrentLiabilities: [8000, 7250, 6513, 5789, 6078],\n    longTermDebt: [25000, 23000, 21000, 19000, 17000],\n    totalLiabilities: [33000, 30250, 27513, 24789, 23078],\n    shareholderEquity: [40333, 49382, 58978, 69154, 78948],\n    totalLiabilitiesEquity: [73333, 79632, 86491, 93943, 102026],\n\n    // Cash Flow\n    operatingCashFlow: [8567, 10233, 11345, 12464, 13584],\n    capex: [-5000, -4850, -5000, -5000, -5000],\n    investingCashFlow: [-5000, -4850, -5000, -5000, -5000],\n    debtRepayment: [-2000, -2000, -2000, -2000, -2000],\n    financingCashFlow: [-2000, -2000, -2000, -2000, -2000],\n    netCashFlow: [1567, 3383, 4345, 5464, 6584],\n    endingCash: [5000, 8383, 12728, 18192, 24776]\n  });\n\n  const [assumptions, setAssumptions] = useState({\n    revenueGrowthRate: 0.05,\n    cogsPercentOfRevenue: 0.60,\n    opexGrowthRate: 0.05,\n    taxRate: 0.21,\n    depreciationRate: 0.06,\n    capexPercentOfRevenue: 0.05,\n    debtPaydown: 2000\n  });\n\n  const [validationErrors, setValidationErrors] = useState([]);\n  const periods = ['Year 1', 'Year 2', 'Year 3', 'Year 4', 'Year 5'];\n\n  const formatCurrency = useCallback((value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0\n    }).format(value * 1000); // Convert from thousands\n  }, []);\n\n  const recalculateModel = useCallback(() => {\n    const newData = { ...modelData };\n\n    // Recalculate projections based on assumptions\n    for (let i = 1; i < 5; i++) {\n      // Income Statement\n      newData.revenue[i] = newData.revenue[i - 1] * (1 + assumptions.revenueGrowthRate);\n      newData.costOfGoodsSold[i] = newData.revenue[i] * assumptions.cogsPercentOfRevenue;\n      newData.grossProfit[i] = newData.revenue[i] - newData.costOfGoodsSold[i];\n      newData.operatingExpenses[i] = newData.operatingExpenses[i - 1] * (1 + assumptions.opexGrowthRate);\n      newData.ebitda[i] = newData.grossProfit[i] - newData.operatingExpenses[i];\n      newData.depreciation[i] = newData.ppe[i - 1] * assumptions.depreciationRate;\n      newData.ebit[i] = newData.ebitda[i] - newData.depreciation[i];\n      newData.interestExpense[i] = newData.longTermDebt[i - 1] * 0.06;\n      newData.ebt[i] = newData.ebit[i] - newData.interestExpense[i];\n      newData.taxes[i] = Math.max(0, newData.ebt[i] * assumptions.taxRate);\n      newData.netIncome[i] = newData.ebt[i] - newData.taxes[i];\n\n      // Balance Sheet\n      const capex = newData.revenue[i] * assumptions.capexPercentOfRevenue;\n      newData.ppe[i] = newData.ppe[i - 1] + capex - newData.depreciation[i];\n      newData.longTermDebt[i] = Math.max(0, newData.longTermDebt[i - 1] - assumptions.debtPaydown);\n      newData.shortTermDebt[i] = Math.max(0, newData.shortTermDebt[i - 1] - 1000);\n\n      // Working capital (simplified)\n      newData.accountsReceivable[i] = newData.revenue[i] * 0.083; // ~30 days\n      newData.inventory[i] = newData.costOfGoodsSold[i] * 0.1; // ~36 days\n      newData.accountsPayable[i] = newData.costOfGoodsSold[i] * 0.05; // ~18 days\n\n      // Cash Flow\n      const wcChange = (newData.accountsReceivable[i] - newData.accountsReceivable[i - 1]) +\n                      (newData.inventory[i] - newData.inventory[i - 1]) -\n                      (newData.accountsPayable[i] - newData.accountsPayable[i - 1]);\n\n      newData.operatingCashFlow[i] = newData.netIncome[i] + newData.depreciation[i] - wcChange;\n      newData.capex[i] = -capex;\n      newData.investingCashFlow[i] = newData.capex[i];\n      newData.debtRepayment[i] = -assumptions.debtPaydown;\n      newData.financingCashFlow[i] = newData.debtRepayment[i];\n      newData.netCashFlow[i] = newData.operatingCashFlow[i] + newData.investingCashFlow[i] + newData.financingCashFlow[i];\n      newData.endingCash[i] = newData.cash[i - 1] + newData.netCashFlow[i];\n      newData.cash[i] = newData.endingCash[i];\n\n      // Complete Balance Sheet\n      newData.totalCurrentAssets[i] = newData.cash[i] + newData.accountsReceivable[i] + newData.inventory[i];\n      newData.totalAssets[i] = newData.totalCurrentAssets[i] + newData.ppe[i];\n      newData.totalCurrentLiabilities[i] = newData.accountsPayable[i] + newData.shortTermDebt[i];\n      newData.totalLiabilities[i] = newData.totalCurrentLiabilities[i] + newData.longTermDebt[i];\n      newData.shareholderEquity[i] = newData.totalAssets[i] - newData.totalLiabilities[i];\n      newData.totalLiabilitiesEquity[i] = newData.totalLiabilities[i] + newData.shareholderEquity[i];\n    }\n\n    setModelData(newData);\n\n    // Validate model\n    const errors = [];\n    for (let i = 0; i < 5; i++) {\n      const diff = Math.abs(newData.totalAssets[i] - newData.totalLiabilitiesEquity[i]);\n      if (diff > 1) {\n        errors.push(`Balance sheet doesn't balance in ${periods[i]}`);\n      }\n    }\n    setValidationErrors(errors);\n\n  }, [modelData, assumptions, periods]);\n\n  const handleAssumptionChange = useCallback((field, value) => {\n    setAssumptions(prev => ({ ...prev, [field]: parseFloat(value) || 0 }));\n  }, []);\n\n  const statements = [\n    { id: 'income', label: 'Income Statement', icon: TrendingUp },\n    { id: 'balance', label: 'Balance Sheet', icon: Building },\n    { id: 'cashflow', label: 'Cash Flow', icon: Activity },\n    { id: 'assumptions', label: 'Assumptions', icon: Calculator }\n  ];\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <FileText className=\"text-green-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">3-Statement Financial Model</h2>\n            <p className=\"text-gray-600\">Integrated Income Statement, Balance Sheet & Cash Flow</p>\n          </div>\n        </div>\n\n        <motion.button\n          onClick={recalculateModel}\n          className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg flex items-center space-x-2\"\n          whileHover={{ scale: 1.02 }}\n        >\n          <RefreshCw size={16} />\n          <span>Recalculate</span>\n        </motion.button>\n      </div>\n\n      {/* Validation Status */}\n      {validationErrors.length === 0 ? (\n        <div className=\"mb-6 p-3 bg-green-50 border border-green-200 rounded-lg flex items-center\">\n          <CheckCircle className=\"text-green-500 mr-2\" size={20} />\n          <span className=\"text-green-800 font-medium\">Model is balanced and consistent</span>\n        </div>\n      ) : (\n        <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <div className=\"flex items-center mb-2\">\n            <AlertCircle className=\"text-red-500 mr-2\" size={20} />\n            <h3 className=\"font-semibold text-red-800\">Validation Errors</h3>\n          </div>\n          <ul className=\"text-sm text-red-700\">\n            {validationErrors.map((error, idx) => <li key={idx}>• {error}</li>)}\n          </ul>\n        </div>\n      )}\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {statements.map((statement) => {\n            const Icon = statement.icon;\n            return (\n              <button\n                key={statement.id}\n                onClick={() => setActiveStatement(statement.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeStatement === statement.id\n                    ? 'border-green-500 text-green-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{statement.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Income Statement */}\n      {activeStatement === 'income' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Income Statement ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {[\n                  { label: 'Revenue', key: 'revenue' },\n                  { label: 'Cost of Goods Sold', key: 'costOfGoodsSold' },\n                  { label: 'Gross Profit', key: 'grossProfit' },\n                  { label: 'Operating Expenses', key: 'operatingExpenses' },\n                  { label: 'EBITDA', key: 'ebitda' },\n                  { label: 'Depreciation', key: 'depreciation' },\n                  { label: 'EBIT', key: 'ebit' },\n                  { label: 'Interest Expense', key: 'interestExpense' },\n                  { label: 'EBT', key: 'ebt' },\n                  { label: 'Taxes', key: 'taxes' },\n                  { label: 'Net Income', key: 'netIncome' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4 font-medium\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Balance Sheet */}\n      {activeStatement === 'balance' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Balance Sheet ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                <tr className=\"bg-gray-100\"><td colSpan={6} className=\"py-2 px-4 font-semibold\">ASSETS</td></tr>\n                {[\n                  { label: 'Cash', key: 'cash' },\n                  { label: 'Accounts Receivable', key: 'accountsReceivable' },\n                  { label: 'Inventory', key: 'inventory' },\n                  { label: 'Total Current Assets', key: 'totalCurrentAssets' },\n                  { label: 'PP&E', key: 'ppe' },\n                  { label: 'Total Assets', key: 'totalAssets' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n\n                <tr className=\"bg-gray-100\"><td colSpan={6} className=\"py-2 px-4 font-semibold\">LIABILITIES & EQUITY</td></tr>\n                {[\n                  { label: 'Accounts Payable', key: 'accountsPayable' },\n                  { label: 'Short-term Debt', key: 'shortTermDebt' },\n                  { label: 'Total Current Liabilities', key: 'totalCurrentLiabilities' },\n                  { label: 'Long-term Debt', key: 'longTermDebt' },\n                  { label: 'Total Liabilities', key: 'totalLiabilities' },\n                  { label: 'Shareholder Equity', key: 'shareholderEquity' },\n                  { label: 'Total Liab. & Equity', key: 'totalLiabilitiesEquity' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Cash Flow */}\n      {activeStatement === 'cashflow' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Cash Flow Statement ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {[\n                  { label: 'Operating Cash Flow', key: 'operatingCashFlow' },\n                  { label: 'CapEx', key: 'capex' },\n                  { label: 'Investing Cash Flow', key: 'investingCashFlow' },\n                  { label: 'Debt Repayment', key: 'debtRepayment' },\n                  { label: 'Financing Cash Flow', key: 'financingCashFlow' },\n                  { label: 'Net Cash Flow', key: 'netCashFlow' },\n                  { label: 'Ending Cash', key: 'endingCash' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Assumptions */}\n      {activeStatement === 'assumptions' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-4\">Key Assumptions</h3>\n              <div className=\"space-y-3\">\n                {[\n                  { label: 'Revenue Growth Rate (%)', key: 'revenueGrowthRate', isPercent: true },\n                  { label: 'COGS % of Revenue', key: 'cogsPercentOfRevenue', isPercent: true },\n                  { label: 'OpEx Growth Rate (%)', key: 'opexGrowthRate', isPercent: true },\n                  { label: 'Tax Rate (%)', key: 'taxRate', isPercent: true },\n                  { label: 'CapEx % of Revenue', key: 'capexPercentOfRevenue', isPercent: true },\n                  { label: 'Annual Debt Paydown ($000s)', key: 'debtPaydown', isPercent: false }\n                ].map(assumption => (\n                  <div key={assumption.key}>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      {assumption.label}\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      value={assumption.isPercent ? assumptions[assumption.key] * 100 : assumptions[assumption.key]}\n                      onChange={(e) => handleAssumptionChange(\n                        assumption.key,\n                        assumption.isPercent ? (e.target.value || 0) / 100 : e.target.value\n                      )}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-4\">Model Metrics</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span>5-Year Revenue CAGR:</span>\n                  <span className=\"font-medium\">{((Math.pow(modelData.revenue[4] / modelData.revenue[0], 1 / 4) - 1) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>5-Year EBITDA CAGR:</span>\n                  <span className=\"font-medium\">{((Math.pow(modelData.ebitda[4] / modelData.ebitda[0], 1 / 4) - 1) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Exit EBITDA Margin:</span>\n                  <span className=\"font-medium\">{((modelData.ebitda[4] / modelData.revenue[4]) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Exit Debt/EBITDA:</span>\n                  <span className=\"font-medium\">{(modelData.longTermDebt[4] / modelData.ebitda[4]).toFixed(1)}x</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default FinancialModelWorkspace;\n","import { motion, AnimatePresence } from 'framer-motion';\nimport { ChevronDown, ChevronRight, Calculator, Edit2, TrendingUp, BarChart3, Eye, EyeOff } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\n/**\n * Mobile-Optimized Financial Spreadsheet Component\n * Provides a card-based stacked view for mobile devices\n */\nconst MobileFinancialSpreadsheet = ({ data, onDataChange, onAdjustedValuesChange }) => {\n  const [activeStatement, setActiveStatement] = useState('incomeStatement');\n  const [adjustedValues, setAdjustedValues] = useState({});\n  const [expandedSections, setExpandedSections] = useState({});\n  const [selectedPeriod, setSelectedPeriod] = useState(0);\n  const [showAdjustedOnly, setShowAdjustedOnly] = useState(false);\n\n  // Normalize data\n  const safeData = useMemo(() => ({\n    periods: Array.isArray(data?.periods) ? data.periods : [],\n    statements: {\n      incomeStatement: data?.statements?.incomeStatement || {},\n      balanceSheet: data?.statements?.balanceSheet || {},\n      cashFlow: data?.statements?.cashFlow || {}\n    }\n  }), [data]);\n\n  const formatNumber = (value) => {\n    if (!value && value !== 0) return '—';\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    if (isNaN(numValue)) return '—';\n\n    const absValue = Math.abs(numValue);\n    if (absValue >= 1000000) {\n      return `${(numValue / 1000000).toFixed(1)}M`;\n    } else if (absValue >= 1000) {\n      return `${(numValue / 1000).toFixed(0)}K`;\n    }\n    return numValue.toLocaleString();\n  };\n\n  const getStatementTemplate = () => {\n    const templates = {\n      incomeStatement: {\n        revenue: {\n          title: 'Revenue',\n          color: 'bg-emerald-500',\n          items: [\n            { key: 'totalRevenue', label: 'Total Revenue', level: 0 },\n            { key: 'energyDevices', label: 'Energy Devices', level: 1 },\n            { key: 'injectables', label: 'Injectables', level: 1 },\n            { key: 'wellness', label: 'Wellness', level: 1 }\n          ]\n        },\n        expenses: {\n          title: 'Expenses',\n          color: 'bg-red-500',\n          items: [\n            { key: 'totalCostOfGoodsSold', label: 'Cost of Goods Sold', level: 0 },\n            { key: 'totalOperatingExpense', label: 'Operating Expenses', level: 0 },\n            { key: 'marketing', label: 'Marketing', level: 1 },\n            { key: 'payroll', label: 'Payroll', level: 1 }\n          ]\n        },\n        profitability: {\n          title: 'Profitability',\n          color: 'bg-blue-500',\n          items: [\n            { key: 'grossProfit', label: 'Gross Profit', level: 0 },\n            { key: 'operatingIncome', label: 'Operating Income', level: 0 },\n            { key: 'netIncome', label: 'Net Income', level: 0 }\n          ]\n        }\n      },\n      balanceSheet: {\n        assets: {\n          title: 'Assets',\n          color: 'bg-green-500',\n          items: [\n            { key: 'totalCurrentAssets', label: 'Current Assets', level: 0 },\n            { key: 'cash', label: 'Cash', level: 1 },\n            { key: 'receivables', label: 'Receivables', level: 1 },\n            { key: 'totalNonCurrentAssets', label: 'Non-Current Assets', level: 0 }\n          ]\n        },\n        liabilities: {\n          title: 'Liabilities',\n          color: 'bg-orange-500',\n          items: [\n            { key: 'totalCurrentLiabilities', label: 'Current Liabilities', level: 0 },\n            { key: 'totalNonCurrentLiabilities', label: 'Non-Current Liabilities', level: 0 }\n          ]\n        },\n        equity: {\n          title: 'Equity',\n          color: 'bg-purple-500',\n          items: [\n            { key: 'totalEquity', label: 'Total Equity', level: 0 },\n            { key: 'retainedEarnings', label: 'Retained Earnings', level: 1 }\n          ]\n        }\n      },\n      cashFlow: {\n        operating: {\n          title: 'Operating Activities',\n          color: 'bg-emerald-500',\n          items: [\n            { key: 'netCashFromOperating', label: 'Net Cash from Operations', level: 0 },\n            { key: 'netIncome', label: 'Net Income', level: 1 },\n            { key: 'depreciation', label: 'Depreciation', level: 1 }\n          ]\n        },\n        investing: {\n          title: 'Investing Activities',\n          color: 'bg-blue-500',\n          items: [\n            { key: 'netCashFromInvesting', label: 'Net Cash from Investing', level: 0 },\n            { key: 'capex', label: 'Capital Expenditures', level: 1 }\n          ]\n        },\n        financing: {\n          title: 'Financing Activities',\n          color: 'bg-purple-500',\n          items: [\n            { key: 'netCashFromFinancing', label: 'Net Cash from Financing', level: 0 },\n            { key: 'debtIssuance', label: 'Debt Issuance', level: 1 }\n          ]\n        }\n      }\n    };\n    return templates[activeStatement] || templates.incomeStatement;\n  };\n\n  const currentStatementData = safeData.statements[activeStatement] || {};\n  const currentTemplate = getStatementTemplate();\n\n  const toggleSection = (sectionKey) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [sectionKey]: !prev[sectionKey]\n    }));\n  };\n\n  const renderMobileCard = (section, sectionKey) => {\n    const isExpanded = expandedSections[sectionKey];\n\n    return (\n      <motion.div\n        key={sectionKey}\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"bg-white rounded-lg shadow-sm border border-slate-200 overflow-hidden\"\n      >\n        <div\n          className={`${section.color} p-4 text-white cursor-pointer`}\n          onClick={() => toggleSection(sectionKey)}\n        >\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              {isExpanded ? <ChevronDown size={20} /> : <ChevronRight size={20} />}\n              <h3 className=\"font-semibold text-lg\">{section.title}</h3>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"text-sm opacity-75\">\n                {safeData.periods[selectedPeriod] || 'Current'}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <AnimatePresence>\n          {isExpanded && (\n            <motion.div\n              initial={{ height: 0 }}\n              animate={{ height: 'auto' }}\n              exit={{ height: 0 }}\n              className=\"overflow-hidden\"\n            >\n              <div className=\"p-4 space-y-3\">\n                {section.items.map((item) => {\n                  const value = currentStatementData[item.key]?.[selectedPeriod];\n                  const adjustedValue = adjustedValues[item.key];\n                  const displayValue = showAdjustedOnly ? adjustedValue : value;\n\n                  return (\n                    <div\n                      key={item.key}\n                      className={`flex items-center justify-between p-3 rounded-lg border border-slate-100 ${\n                        item.level === 0 ? 'bg-slate-50' : 'bg-white'\n                      }`}\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        {item.level === 0 && (\n                          <div className=\"w-2 h-8 bg-gradient-to-b from-blue-500 to-blue-600 rounded-full\" />\n                        )}\n                        <div>\n                          <div className={`${item.level === 0 ? 'font-semibold text-slate-900' : 'font-medium text-slate-700'}`}>\n                            {item.label}\n                          </div>\n                          {item.level === 1 && (\n                            <div className=\"text-xs text-slate-500 mt-1\">\n                              {safeData.periods[selectedPeriod] || 'Current Period'}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"text-right\">\n                        <div className={`font-mono ${item.level === 0 ? 'font-bold text-lg' : 'font-medium'}`}>\n                          {formatNumber(displayValue)}\n                        </div>\n                        {!showAdjustedOnly && adjustedValue !== undefined && adjustedValue !== value && (\n                          <div className=\"text-xs text-amber-600 font-medium\">\n                            Adj: {formatNumber(adjustedValue)}\n                          </div>\n                        )}\n                        <div className=\"text-xs text-slate-500 uppercase tracking-wide\">\n                          $ 000s\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </motion.div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 p-4\">\n      {/* Mobile Header */}\n      <div className=\"bg-white rounded-lg shadow-sm border border-slate-200 p-4 mb-4\">\n        <div className=\"flex items-center gap-3 mb-4\">\n          <div className=\"p-2 bg-blue-100 rounded-lg\">\n            <TrendingUp className=\"w-5 h-5 text-blue-600\" />\n          </div>\n          <div>\n            <h1 className=\"text-lg font-bold text-slate-900\">Financial Analysis</h1>\n            <p className=\"text-sm text-slate-600\">Mobile View</p>\n          </div>\n        </div>\n\n        {/* Statement Selector */}\n        <div className=\"grid grid-cols-3 gap-2 mb-4\">\n          {[\n            { key: 'incomeStatement', label: 'Income', icon: BarChart3 },\n            { key: 'balanceSheet', label: 'Balance', icon: Calculator },\n            { key: 'cashFlow', label: 'Cash Flow', icon: TrendingUp }\n          ].map(({ key, label, icon: Icon }) => (\n            <button\n              key={key}\n              onClick={() => setActiveStatement(key)}\n              className={`p-3 rounded-lg border transition-colors ${\n                activeStatement === key\n                  ? 'bg-blue-500 text-white border-blue-500'\n                  : 'bg-white text-slate-700 border-slate-200 hover:bg-slate-50'\n              }`}\n            >\n              <Icon size={16} className=\"mx-auto mb-1\" />\n              <div className=\"text-xs font-medium\">{label}</div>\n            </button>\n          ))}\n        </div>\n\n        {/* Period Selector */}\n        <div className=\"mb-4\">\n          <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n            Time Period\n          </label>\n          <select\n            value={selectedPeriod}\n            onChange={(e) => setSelectedPeriod(parseInt(e.target.value))}\n            className=\"w-full p-2 border border-slate-300 rounded-lg bg-white text-slate-900 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            {safeData.periods.map((period, index) => (\n              <option key={index} value={index}>\n                {period}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* View Toggle */}\n        <div className=\"flex items-center justify-between\">\n          <label className=\"flex items-center gap-2 text-sm\">\n            <input\n              type=\"checkbox\"\n              checked={showAdjustedOnly}\n              onChange={(e) => setShowAdjustedOnly(e.target.checked)}\n              className=\"rounded\"\n            />\n            <span>Show adjusted values only</span>\n          </label>\n\n          <button\n            onClick={() => setExpandedSections({})}\n            className=\"text-sm text-blue-600 hover:text-blue-700\"\n          >\n            Collapse All\n          </button>\n        </div>\n      </div>\n\n      {/* Mobile Cards */}\n      <div className=\"space-y-4\">\n        {Object.entries(currentTemplate).map(([sectionKey, section]) =>\n          renderMobileCard(section, sectionKey)\n        )}\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"fixed bottom-4 right-4 flex flex-col gap-2\">\n        <button className=\"w-12 h-12 bg-blue-500 hover:bg-blue-600 text-white rounded-full shadow-lg flex items-center justify-center transition-colors\">\n          <Edit2 size={20} />\n        </button>\n        <button className=\"w-12 h-12 bg-emerald-500 hover:bg-emerald-600 text-white rounded-full shadow-lg flex items-center justify-center transition-colors\">\n          <Calculator size={20} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MobileFinancialSpreadsheet;\n","import { Plus, ChevronDown, ChevronRight, Calculator, FileText, TrendingUp, Edit2 } from 'lucide-react';\nimport React, { useState, useRef, useEffect } from 'react';\n\nimport { useFinancialAccessibility } from '../../hooks/useAccessibility';\nimport ResponsiveTable from '../ui/ResponsiveTable';\n\nimport MobileFinancialSpreadsheet from './MobileFinancialSpreadsheet';\n\nconst FinancialSpreadsheet = ({ data, onDataChange, onAdjustedValuesChange }) => {\n  const [activeStatement, setActiveStatement] = useState('incomeStatement');\n  const [adjustedValues, setAdjustedValues] = useState({});\n  const [isMobile, setIsMobile] = useState(false);\n\n  // Normalize incoming data to a safe structure to prevent undefined access\n  const safeData = React.useMemo(() => ({\n    periods: Array.isArray(data?.periods) ? data.periods : [],\n    statements: {\n      incomeStatement: data?.statements?.incomeStatement || {},\n      balanceSheet: data?.statements?.balanceSheet || {},\n      cashFlow: data?.statements?.cashFlow || {}\n    }\n  }), [data]);\n\n  // Add accessibility monitoring for financial spreadsheet\n  const { elementRef, testFinancialFeatures } = useFinancialAccessibility('spreadsheet');\n  const [expandedSections, setExpandedSections] = useState({\n    // Income Statement\n    revenue: true,\n    costOfGoodsSold: true,\n    operatingExpenses: true,\n    salariesBenefits: true,\n    grossProfit: true,\n    operatingIncome: true,\n    incomeBeforeTax: true,\n    otherIncomeExpense: true,\n    // Balance Sheet\n    currentAssets: true,\n    nonCurrentAssets: true,\n    currentLiabilities: true,\n    nonCurrentLiabilities: true,\n    equity: true,\n    // Cash Flow\n    operatingActivities: true,\n    investingActivities: true,\n    financingActivities: true\n  });\n\n  const [editingCell, setEditingCell] = useState(null);\n  const [cellValue, setCellValue] = useState('');\n  const inputRef = useRef(null);\n\n  // Initialize adjusted values from the active statement's latest period\n  useEffect(() => {\n    if (Object.keys(adjustedValues).length === 0) {\n      const statement = safeData?.statements?.[activeStatement];\n      if (statement) {\n        const newAdjustedValues = {};\n        const lastIndex = Math.max(0, (safeData?.periods?.length || 0) - 1);\n        Object.keys(statement).forEach((key) => {\n          const val = statement[key]?.[lastIndex];\n          if (val !== undefined) {\n            newAdjustedValues[key] = val;\n          }\n        });\n        setAdjustedValues(newAdjustedValues);\n        if (onAdjustedValuesChange) {\n          onAdjustedValuesChange(newAdjustedValues);\n        }\n      }\n    }\n  }, [safeData, activeStatement, adjustedValues, onAdjustedValuesChange]);\n\n  // Get current template based on active statement\n  const getCurrentTemplate = () => {\n    switch (activeStatement) {\n      case 'balanceSheet':\n        return balanceSheetTemplate;\n      case 'cashFlow':\n        return cashFlowTemplate;\n      default:\n        return incomeStatementTemplate;\n    }\n  };\n\n\n  // Income Statement Template Structure with Enhanced Color Coding\n  const incomeStatementTemplate = {\n    revenue: {\n      title: 'Revenue',\n      color: 'bg-emerald-50 border-emerald-300',\n      headerBg: 'bg-emerald-600',\n      textColor: 'text-emerald-900',\n      items: [\n        { key: 'energyDevices', label: 'Energy Devices', level: 1 },\n        { key: 'injectables', label: 'Injectables', level: 1 },\n        { key: 'wellness', label: 'Wellness', level: 1 },\n        { key: 'weightloss', label: 'Weightloss', level: 1 },\n        { key: 'retailSales', label: 'Retail Sales', level: 1 },\n        { key: 'surgery', label: 'Surgery', level: 1 },\n        { key: 'totalRevenue', label: 'Total Revenue', level: 0, bold: true, formula: true }\n      ]\n    },\n    costOfGoodsSold: {\n      title: 'Cost of Goods Sold',\n      color: 'bg-red-50 border-red-300',\n      headerBg: 'bg-red-600',\n      textColor: 'text-red-900',\n      items: [\n        { key: 'energyDeviceSupplies', label: 'Energy Device Supplies', level: 1 },\n        { key: 'injectablesCogs', label: 'Injectables', level: 1 },\n        { key: 'wellnessCogs', label: 'Wellness', level: 1 },\n        { key: 'weightlossCogs', label: 'Weightloss', level: 1 },\n        { key: 'retailProducts', label: 'Retail Products', level: 1 },\n        { key: 'surgicalSupplies', label: 'Surgical Supplies', level: 1 },\n        { key: 'totalCostOfGoodsSold', label: 'Total Cost of Goods Sold', level: 0, bold: true, formula: true }\n      ]\n    },\n    grossProfit: {\n      title: 'Gross Profit',\n      color: 'bg-blue-50 border-blue-300',\n      headerBg: 'bg-blue-600',\n      textColor: 'text-blue-900',\n      items: [\n        { key: 'grossProfit', label: 'Gross Profit', level: 0, bold: true, formula: true }\n      ]\n    },\n    salariesBenefits: {\n      title: 'Salaries & Benefits',\n      color: 'bg-purple-50 border-purple-300',\n      headerBg: 'bg-purple-600',\n      textColor: 'text-purple-900',\n      items: [\n        { key: 'employeeBenefits', label: 'Employee Benefits', level: 1 },\n        { key: 'payroll', label: 'Payroll', level: 1 },\n        { key: 'payrollTaxes', label: 'Payroll Taxes', level: 1 },\n        { key: 'totalSalariesBenefits', label: 'Total Salaries & Benefits', level: 0, bold: true, formula: true }\n      ]\n    },\n    operatingExpenses: {\n      title: 'Operating Expenses',\n      color: 'bg-orange-50 border-orange-300',\n      headerBg: 'bg-orange-600',\n      textColor: 'text-orange-900',\n      items: [\n        { key: 'marketing', label: 'Marketing', level: 1 },\n        { key: 'automobile', label: 'Automobile', level: 1 },\n        { key: 'creditCardBankCharges', label: 'Credit Card and Bank Charges', level: 1 },\n        { key: 'donations', label: 'Donations', level: 1 },\n        { key: 'computerTelephoneUtilities', label: 'Computer, Telephone, and Utilities', level: 1 },\n        { key: 'depreciation', label: 'Depreciation', level: 1 },\n        { key: 'duesSubscriptions', label: 'Dues & Subscriptions', level: 1 },\n        { key: 'education', label: 'Education', level: 1 },\n        { key: 'equipmentRental', label: 'Equipment Rental', level: 1 },\n        { key: 'insurance', label: 'Insurance', level: 1 },\n        { key: 'interestExpense', label: 'Interest Expense', level: 1 },\n        { key: 'travelMealsEntertainment', label: 'Travel, Meals, and Entertainment', level: 1 },\n        { key: 'rent', label: 'Rent', level: 1 },\n        { key: 'officeExpenses', label: 'Office Expenses', level: 1 },\n        { key: 'professionalFees', label: 'Professional Fees', level: 1 },\n        { key: 'repairsMaintenance', label: 'Repairs & Maintenance', level: 1 },\n        { key: 'localTax', label: 'Local Tax', level: 1 },\n        { key: 'stateTax', label: 'State Tax', level: 1 },\n        { key: 'totalOperatingExpense', label: 'Total Operating Expense', level: 0, bold: true, formula: true }\n      ]\n    },\n    operatingIncome: {\n      title: 'Operating Income',\n      color: 'bg-teal-50 border-teal-300',\n      headerBg: 'bg-teal-600',\n      textColor: 'text-teal-900',\n      items: [\n        { key: 'operatingIncome', label: 'Operating Income', level: 0, bold: true }\n      ]\n    },\n    otherIncomeExpense: {\n      title: 'Other Income / (Expense)',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-600',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'gainOnAssetSale', label: 'Gain (Loss) On Asset Sale', level: 1 },\n        { key: 'interestIncome', label: 'Interest Income', level: 1 },\n        { key: 'otherExpenses', label: 'Other Expenses', level: 1 },\n        { key: 'totalOtherIncomeExpense', label: 'Total Other Income / (Expenses)', level: 0, bold: true, formula: true }\n      ]\n    },\n    incomeBeforeTax: {\n      title: 'Net Income Before Taxes',\n      color: 'bg-amber-50 border-amber-300',\n      headerBg: 'bg-amber-600',\n      textColor: 'text-amber-900',\n      items: [\n        { key: 'incomeBeforeTax', label: 'Net Income Before Taxes', level: 0, bold: true }\n      ]\n    }\n  };\n\n  // Balance Sheet Template Structure\n  const balanceSheetTemplate = {\n    currentAssets: {\n      title: 'Current Assets',\n      color: 'bg-emerald-50 border-emerald-300',\n      headerBg: 'bg-emerald-600',\n      textColor: 'text-emerald-900',\n      items: [\n        { key: 'cash', label: 'Cash and Cash Equivalents', level: 1 },\n        { key: 'receivables', label: 'Accounts Receivable', level: 1 },\n        { key: 'inventory', label: 'Inventory', level: 1 },\n        { key: 'prepaidExpenses', label: 'Prepaid Expenses', level: 1 },\n        { key: 'otherCurrentAssets', label: 'Other Current Assets', level: 1 },\n        { key: 'totalCurrentAssets', label: 'Total Current Assets', level: 0, formula: true, bold: true }\n      ]\n    },\n    nonCurrentAssets: {\n      title: 'Non-Current Assets',\n      color: 'bg-blue-50 border-blue-300',\n      headerBg: 'bg-blue-600',\n      textColor: 'text-blue-900',\n      items: [\n        { key: 'ppe', label: 'Property, Plant & Equipment', level: 1 },\n        { key: 'accumulatedDepreciation', label: 'Less: Accumulated Depreciation', level: 1 },\n        { key: 'netPPE', label: 'Net Property, Plant & Equipment', level: 1, formula: true },\n        { key: 'intangibleAssets', label: 'Intangible Assets', level: 1 },\n        { key: 'goodwill', label: 'Goodwill', level: 1 },\n        { key: 'otherNonCurrentAssets', label: 'Other Non-Current Assets', level: 1 },\n        { key: 'totalNonCurrentAssets', label: 'Total Non-Current Assets', level: 0, formula: true, bold: true }\n      ]\n    },\n    totalAssets: {\n      title: 'Total Assets',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'totalAssets', label: 'Total Assets', level: 0, formula: true, bold: true }\n      ]\n    },\n    currentLiabilities: {\n      title: 'Current Liabilities',\n      color: 'bg-red-50 border-red-300',\n      headerBg: 'bg-red-600',\n      textColor: 'text-red-900',\n      items: [\n        { key: 'accountsPayable', label: 'Accounts Payable', level: 1 },\n        { key: 'accruedExpenses', label: 'Accrued Expenses', level: 1 },\n        { key: 'shortTermDebt', label: 'Short-term Debt', level: 1 },\n        { key: 'currentPortionLongTermDebt', label: 'Current Portion of Long-term Debt', level: 1 },\n        { key: 'otherCurrentLiabilities', label: 'Other Current Liabilities', level: 1 },\n        { key: 'totalCurrentLiabilities', label: 'Total Current Liabilities', level: 0, formula: true, bold: true }\n      ]\n    },\n    nonCurrentLiabilities: {\n      title: 'Non-Current Liabilities',\n      color: 'bg-orange-50 border-orange-300',\n      headerBg: 'bg-orange-600',\n      textColor: 'text-orange-900',\n      items: [\n        { key: 'longTermDebt', label: 'Long-term Debt', level: 1 },\n        { key: 'deferredTaxLiabilities', label: 'Deferred Tax Liabilities', level: 1 },\n        { key: 'otherNonCurrentLiabilities', label: 'Other Non-Current Liabilities', level: 1 },\n        { key: 'totalNonCurrentLiabilities', label: 'Total Non-Current Liabilities', level: 0, formula: true, bold: true }\n      ]\n    },\n    totalLiabilities: {\n      title: 'Total Liabilities',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'totalLiabilities', label: 'Total Liabilities', level: 0, formula: true, bold: true }\n      ]\n    },\n    equity: {\n      title: 'Shareholders\\' Equity',\n      color: 'bg-purple-50 border-purple-300',\n      headerBg: 'bg-purple-600',\n      textColor: 'text-purple-900',\n      items: [\n        { key: 'commonStock', label: 'Common Stock', level: 1 },\n        { key: 'retainedEarnings', label: 'Retained Earnings', level: 1 },\n        { key: 'otherEquity', label: 'Other Comprehensive Income', level: 1 },\n        { key: 'totalEquity', label: 'Total Shareholders\\' Equity', level: 0, formula: true, bold: true }\n      ]\n    },\n    totalLiabilitiesEquity: {\n      title: 'Total Liabilities and Equity',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'totalLiabilitiesEquity', label: 'Total Liabilities and Shareholders\\' Equity', level: 0, formula: true, bold: true }\n      ]\n    }\n  };\n\n  // Cash Flow Template Structure\n  const cashFlowTemplate = {\n    operatingActivities: {\n      title: 'Operating Activities',\n      color: 'bg-emerald-50 border-emerald-300',\n      headerBg: 'bg-emerald-600',\n      textColor: 'text-emerald-900',\n      items: [\n        { key: 'netIncome', label: 'Net Income', level: 1 },\n        { key: 'depreciation', label: 'Depreciation and Amortization', level: 1 },\n        { key: 'receivablesChange', label: 'Change in Accounts Receivable', level: 1 },\n        { key: 'inventoryChange', label: 'Change in Inventory', level: 1 },\n        { key: 'payablesChange', label: 'Change in Accounts Payable', level: 1 },\n        { key: 'otherOperatingChanges', label: 'Other Operating Changes', level: 1 },\n        { key: 'netCashFromOperating', label: 'Net Cash from Operating Activities', level: 0, formula: true, bold: true }\n      ]\n    },\n    investingActivities: {\n      title: 'Investing Activities',\n      color: 'bg-blue-50 border-blue-300',\n      headerBg: 'bg-blue-600',\n      textColor: 'text-blue-900',\n      items: [\n        { key: 'capex', label: 'Capital Expenditures', level: 1 },\n        { key: 'acquisitions', label: 'Acquisitions', level: 1 },\n        { key: 'assetSales', label: 'Asset Sales', level: 1 },\n        { key: 'otherInvestingActivities', label: 'Other Investing Activities', level: 1 },\n        { key: 'netCashFromInvesting', label: 'Net Cash from Investing Activities', level: 0, formula: true, bold: true }\n      ]\n    },\n    financingActivities: {\n      title: 'Financing Activities',\n      color: 'bg-purple-50 border-purple-300',\n      headerBg: 'bg-purple-600',\n      textColor: 'text-purple-900',\n      items: [\n        { key: 'debtIssuance', label: 'Debt Issuance', level: 1 },\n        { key: 'debtRepayment', label: 'Debt Repayment', level: 1 },\n        { key: 'equityIssuance', label: 'Equity Issuance', level: 1 },\n        { key: 'dividends', label: 'Dividends Paid', level: 1 },\n        { key: 'otherFinancingActivities', label: 'Other Financing Activities', level: 1 },\n        { key: 'netCashFromFinancing', label: 'Net Cash from Financing Activities', level: 0, formula: true, bold: true }\n      ]\n    },\n    netCashFlow: {\n      title: 'Net Cash Flow',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'netCashFlow', label: 'Net Change in Cash', level: 0, formula: true, bold: true },\n        { key: 'beginningCash', label: 'Cash at Beginning of Period', level: 1 },\n        { key: 'endingCash', label: 'Cash at End of Period', level: 0, formula: true, bold: true }\n      ]\n    }\n  };\n\n  const currentTemplate = getCurrentTemplate();\n  // Resolve the data object for the currently active statement\n  const currentStatementData = safeData.statements[activeStatement] || {};\n\n  const toggleSection = (section) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n\n  const handleCellClick = (rowKey, periodIndex, isAdjusted = false) => {\n    setEditingCell({ rowKey, periodIndex, isAdjusted });\n    let currentValue = '';\n\n    if (isAdjusted) {\n      currentValue = adjustedValues[rowKey] || '';\n    } else {\n      currentValue = currentStatementData[rowKey]?.[periodIndex] || '';\n    }\n\n    setCellValue(currentValue.toString());\n  };\n\n  const handleCellBlur = () => {\n    if (editingCell) {\n      const { rowKey, periodIndex, isAdjusted } = editingCell;\n      const parsed = parseFloat(cellValue);\n      const newValue = isNaN(parsed) ? 0 : parsed;\n\n      if (isAdjusted) {\n        // Update adjusted values\n        const newAdjustedValues = {\n          ...adjustedValues,\n          [rowKey]: newValue\n        };\n        setAdjustedValues(newAdjustedValues);\n        if (onAdjustedValuesChange) {\n          onAdjustedValuesChange(newAdjustedValues);\n        }\n      } else {\n        // Update original data\n        const newData = { ...data };\n        // Safely deep-clone the path we are updating to avoid mutating upstream state\n        newData.statements = { ...(newData.statements || {}) };\n        const statementKey = activeStatement || 'incomeStatement';\n        newData.statements[statementKey] = { ...(newData.statements[statementKey] || {}) };\n        const existingRow = newData.statements[statementKey][rowKey] || {};\n        newData.statements[statementKey][rowKey] = { ...existingRow, [periodIndex]: newValue };\n        onDataChange(newData);\n      }\n\n      setEditingCell(null);\n      setCellValue('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleCellBlur();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      setEditingCell(null);\n      setCellValue('');\n    } else if (e.key === 'Tab') {\n      e.preventDefault();\n      handleCellBlur();\n      // Could implement tab navigation to next cell here\n    }\n  };\n\n  // Input validation for numeric values\n  const validateNumericInput = (value) => {\n    // Allow negative numbers, decimals, and empty strings\n    const numericRegex = /^-?\\d*\\.?\\d*$/;\n    return numericRegex.test(value) || value === '';\n  };\n\n  const formatNumber = (value) => {\n    if (!value && value !== 0) return '';\n\n    // Convert to number if it's a string\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    if (isNaN(numValue)) return '';\n\n    // Format based on magnitude for better readability\n    const absValue = Math.abs(numValue);\n    let formattedValue;\n\n    if (absValue >= 1000000) {\n      // Millions\n      formattedValue = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 1,\n        maximumFractionDigits: 1\n      }).format(numValue / 1000000);\n      formattedValue += 'M';\n    } else if (absValue >= 1000) {\n      // Thousands\n      formattedValue = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      }).format(numValue);\n    } else {\n      // Less than 1000\n      formattedValue = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }).format(numValue);\n    }\n\n    return formattedValue;\n  };\n\n  const addNewRow = () => {\n    const newRowLabel = prompt('Enter row label:');\n    if (newRowLabel) {\n      const newData = { ...data };\n      // Add to template structure (this could be enhanced to persist custom rows)\n      onDataChange(newData);\n    }\n  };\n\n  const addPeriod = () => {\n    const newPeriodLabel = prompt('Enter period label (e.g., \"Year 5\"):');\n    if (newPeriodLabel) {\n      const newData = { ...data };\n      newData.periods = [...(newData.periods || []), newPeriodLabel];\n      onDataChange(newData);\n    }\n  };\n\n  useEffect(() => {\n    if (editingCell && inputRef.current) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, [editingCell]);\n\n  // Mobile detection\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  const renderRow = (item) => {\n    const { key, label, level, formula, bold } = item;\n\n    // Enhanced spacing and visual hierarchy\n    const indentClass = level === 1 ? 'pl-8' : level === 2 ? 'pl-12' : 'pl-4';\n    const textWeight = bold ? 'font-bold' : level === 0 ? 'font-semibold' : 'font-medium';\n    const textSize = level === 0 ? 'text-sm' : 'text-sm';\n    const textColor = level === 0 ? 'text-slate-900' : 'text-slate-700';\n    const rowBg = level === 0 ? 'bg-slate-50/70' : 'bg-white';\n    const borderColor = level === 0 ? 'border-slate-200' : 'border-slate-100';\n\n    return (\n      <tr key={key} className={`${rowBg} border-b ${borderColor} hover:bg-slate-50 transition-all duration-150 group`}>\n        {/* Account Name Column */}\n        <td className={`px-6 py-4 ${indentClass} ${textWeight} ${textSize} ${textColor}`}>\n          <div className=\"flex items-center gap-3\">\n            {level === 0 && (\n              <div className=\"w-1.5 h-4 bg-gradient-to-b from-blue-500 to-blue-600 rounded-full flex-shrink-0 shadow-sm\" />\n            )}\n            <span className=\"leading-tight\">{label}</span>\n            {formula && (\n              <div className=\"flex items-center gap-1\">\n                <Calculator size={14} className=\"text-blue-500/80 flex-shrink-0\" />\n                <span className=\"text-xs text-blue-600 font-medium px-1.5 py-0.5 bg-blue-50 rounded-md\">AUTO</span>\n              </div>\n            )}\n          </div>\n        </td>\n\n        {/* Units Column */}\n        <td className=\"px-4 py-4 text-center\">\n          <span className=\"text-xs font-medium text-slate-500 uppercase tracking-wide bg-slate-100 px-2 py-1 rounded-md\">\n            $ 000s\n          </span>\n        </td>\n\n        {/* Period Columns */}\n        {safeData.periods.map((_, periodIndex) => (\n          <td key={periodIndex} className=\"px-4 py-4 text-right\">\n            {editingCell?.rowKey === key && editingCell?.periodIndex === periodIndex && !editingCell?.isAdjusted ? (\n              <div className=\"relative\">\n                <input\n                  ref={inputRef}\n                  type=\"text\"\n                  value={cellValue}\n                  onChange={(e) => {\n                    const newValue = e.target.value;\n                    if (validateNumericInput(newValue)) {\n                      setCellValue(newValue);\n                    }\n                  }}\n                  onBlur={handleCellBlur}\n                  onKeyDown={handleKeyPress}\n                  className=\"w-full px-3 py-2.5 bg-white border-2 border-blue-400 rounded-lg text-slate-900 text-right font-mono text-sm focus:outline-none focus:ring-4 focus:ring-blue-100 focus:border-blue-500 shadow-lg\"\n                  placeholder=\"0.00\"\n                />\n                <div className=\"absolute -top-2 -right-2 flex gap-1\">\n                  <button\n                    onClick={handleCellBlur}\n                    className=\"w-5 h-5 bg-emerald-500 hover:bg-emerald-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                  >\n                    ✓\n                  </button>\n                  <button\n                    onClick={() => {\n                      setEditingCell(null);\n                      setCellValue('');\n                    }}\n                    className=\"w-5 h-5 bg-red-500 hover:bg-red-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                  >\n                    ×\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <div\n                onClick={() => !formula && handleCellClick(key, periodIndex)}\n                className={`px-3 py-2.5 rounded-lg font-mono text-sm transition-all duration-200 min-h-[40px] flex items-center justify-end ${\n                  formula\n                    ? 'bg-gradient-to-r from-blue-50 to-blue-100 text-blue-800 font-semibold border border-blue-200 shadow-sm'\n                    : 'hover:bg-slate-100 text-slate-800 cursor-pointer border border-transparent hover:border-slate-200 hover:shadow-sm group-hover:bg-slate-50'\n                }`}\n              >\n                <span className={formula ? 'text-blue-900' : 'text-slate-700'}>\n                  {formatNumber(currentStatementData[key]?.[periodIndex]) || '—'}\n                </span>\n                {!formula && (\n                  <Edit2 size={12} className=\"ml-2 opacity-0 group-hover:opacity-40 text-slate-400 transition-opacity\" />\n                )}\n              </div>\n            )}\n          </td>\n        ))}\n\n        {/* Adjusted Column */}\n        <td className=\"px-4 py-4 text-right bg-gradient-to-r from-amber-50 to-yellow-50 border-l-2 border-amber-300\">\n          {editingCell?.rowKey === key && editingCell?.isAdjusted ? (\n            <div className=\"relative\" data-testid={`adjusted-cell-${key}`}>\n              <input\n                ref={inputRef}\n                type=\"text\"\n                value={cellValue}\n                data-testid={`adjusted-input-${key}`}\n                onChange={(e) => {\n                  const newValue = e.target.value;\n                  if (validateNumericInput(newValue)) {\n                    setCellValue(newValue);\n                  }\n                }}\n                onBlur={handleCellBlur}\n                onKeyDown={handleKeyPress}\n                className=\"w-full px-3 py-2.5 bg-white border-2 border-amber-400 rounded-lg text-slate-900 text-right font-mono text-sm focus:outline-none focus:ring-4 focus:ring-amber-100 focus:border-amber-500 shadow-lg\"\n                placeholder=\"0.00\"\n              />\n              <div className=\"absolute -top-2 -right-2 flex gap-1\">\n                <button\n                  onClick={handleCellBlur}\n                  className=\"w-5 h-5 bg-emerald-500 hover:bg-emerald-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                >\n                  ✓\n                </button>\n                <button\n                  onClick={() => {\n                    setEditingCell(null);\n                    setCellValue('');\n                  }}\n                  className=\"w-5 h-5 bg-red-500 hover:bg-red-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                >\n                  ×\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div\n              onClick={() => !formula && handleCellClick(key, null, true)}\n              className={`px-3 py-2.5 rounded-lg font-mono text-sm transition-all duration-200 min-h-[40px] flex items-center justify-end ${\n                formula\n                  ? 'bg-gradient-to-r from-blue-50 to-blue-100 text-blue-800 font-semibold border border-blue-200 shadow-sm'\n                  : 'hover:bg-slate-100 text-slate-800 cursor-pointer border border-transparent hover:border-slate-200 hover:shadow-sm group-hover:bg-slate-50'\n              }`}\n              data-testid={`adjusted-cell-${key}`}\n            >\n              <span className={formula ? 'text-amber-900' : 'text-slate-700'}>\n                {formatNumber(adjustedValues[key]) || '—'}\n              </span>\n              {!formula && (\n                <Edit2 size={12} className=\"ml-2 opacity-0 group-hover:opacity-40 text-amber-500 transition-opacity\" />\n              )}\n            </div>\n          )}\n        </td>\n\n        {/* Type Column */}\n        <td className=\"px-4 py-4 text-center\">\n          <span\n            className={`inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium ${\n              formula\n                ? 'bg-blue-100 text-blue-800 border border-blue-200'\n                : 'bg-slate-100 text-slate-700 border border-slate-200'\n            }`}\n          >\n            {formula ? (\n              <>\n                <Calculator size={10} className=\"mr-1\" />\n                Auto\n              </>\n            ) : (\n              <>\n                <Edit2 size={10} className=\"mr-1\" />\n                Manual\n              </>\n            )}\n          </span>\n        </td>\n      </tr>\n    );\n  };\n\n  // Render mobile view for small screens\n  if (isMobile) {\n    return (\n      <MobileFinancialSpreadsheet\n        data={data}\n        onDataChange={onDataChange}\n        onAdjustedValuesChange={onAdjustedValuesChange}\n      />\n    );\n  }\n\n  return (\n    <div ref={elementRef} role=\"main\" className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 pb-8\">\n      {/* Header Section */}\n      <div className=\"bg-white border-b border-slate-200 shadow-sm\">\n        <div className=\"max-w-full mx-auto px-8 py-6\">\n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <TrendingUp className=\"w-6 h-6 text-blue-600\" />\n              </div>\n              <div>\n                <h1 className=\"text-2xl font-bold text-slate-900\">Financial Spreadsheet</h1>\n                <p className=\"text-sm text-slate-600 mt-1\">Professional financial modeling workspace</p>\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-3\">\n              <button\n                onClick={addPeriod}\n                className=\"px-4 py-2.5 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center gap-2 transition-all duration-200 shadow-sm hover:shadow-md font-medium\"\n              >\n                <Plus size={16} />\n                Add Period\n              </button>\n              <select\n                value={activeStatement}\n                onChange={(e) => setActiveStatement(e.target.value)}\n                className=\"px-4 py-2.5 bg-white border border-slate-300 rounded-lg text-slate-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 font-medium shadow-sm\"\n              >\n                <option value=\"incomeStatement\">Income Statement</option>\n                <option value=\"balanceSheet\">Balance Sheet</option>\n                <option value=\"cashFlow\">Cash Flow Statement</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-full mx-auto p-8\">\n        <div className=\"bg-white rounded-xl border border-slate-200 shadow-lg\">\n          <ResponsiveTable\n            className=\"responsive-financial-table\"\n            enableVirtualization={false}\n            mobileStackedView={false}\n            showDeviceToggle={true}\n          >\n            <table className=\"w-full\">\n              {/* Enhanced Table Header */}\n              <thead className=\"bg-gradient-to-r from-slate-800 to-slate-900 text-white\">\n                <tr>\n                  <th className=\"min-w-[320px] px-6 py-4 text-left text-sm font-semibold tracking-wider\">\n                    <div className=\"flex items-center gap-2\">\n                      <FileText size={16} className=\"text-slate-300\" />\n                      Account Description\n                    </div>\n                  </th>\n                  <th className=\"w-20 px-4 py-4 text-center text-sm font-semibold\">Units</th>\n                  {safeData.periods.map((period, index) => (\n                    <th key={index} className=\"min-w-[140px] px-4 py-4 text-center text-sm font-semibold\">\n                      <div className=\"flex flex-col\">\n                        <span>{period}</span>\n                        <span className=\"text-xs text-slate-300 font-normal\">Actual</span>\n                      </div>\n                    </th>\n                  ))}\n                  <th className=\"min-w-[140px] px-4 py-4 text-center text-sm font-semibold bg-gradient-to-r from-amber-600 to-yellow-600 border-l-2 border-amber-400\">\n                    <div className=\"flex flex-col\">\n                      <span>Adjusted</span>\n                      <span className=\"text-xs text-amber-100 font-normal\">Modified</span>\n                    </div>\n                  </th>\n                  <th className=\"w-28 px-4 py-4 text-center text-sm font-semibold\">\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <Calculator size={14} />\n                      Type\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody className=\"divide-y divide-slate-100\">\n                {Object.entries(currentTemplate).map(([sectionKey, section]) => (\n                  <React.Fragment key={sectionKey}>\n                    {/* Enhanced Section Header */}\n                    <tr className={`${section.headerBg || 'bg-slate-600'} border-b-2 border-slate-300`}>\n                      <td colSpan={safeData.periods.length + 4} className=\"py-4 px-6\">\n                        <div className=\"flex items-center gap-3 text-white w-full text-left group\">\n                          <button\n                            onClick={() => toggleSection(sectionKey)}\n                            className=\"flex items-center gap-3 text-white hover:text-slate-200 transition-colors flex-1\"\n                          >\n                            <div className=\"flex items-center justify-center w-6 h-6 rounded-full bg-white/20 group-hover:bg-white/30 transition-colors\">\n                              {expandedSections[sectionKey] ?\n                                <ChevronDown size={14} /> :\n                                <ChevronRight size={14} />\n                              }\n                            </div>\n                            <span className=\"font-bold text-lg\">{section.title}</span>\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              addNewRow();\n                            }}\n                            className=\"p-1.5 hover:bg-white/20 rounded-lg transition-colors opacity-0 group-hover:opacity-100\"\n                            title=\"Add custom row\"\n                          >\n                            <Plus size={16} />\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n\n                    {/* Section Rows */}\n                    {expandedSections[sectionKey] && section.items.map(item =>\n                      renderRow(item)\n                    )}\n                  </React.Fragment>\n                ))}\n              </tbody>\n            </table>\n          </ResponsiveTable>\n        </div>\n\n        {/* Enhanced Instructions Panel */}\n        <div className=\"mt-8 grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <div className=\"bg-white rounded-xl p-6 border border-slate-200 shadow-sm\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <Calculator className=\"w-5 h-5 text-blue-600\" />\n              </div>\n              <h3 className=\"font-bold text-slate-900\">How to Use</h3>\n            </div>\n            <ul className=\"space-y-2 text-sm text-slate-700\">\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Click any editable cell to modify values with enhanced input controls\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Use Enter to save changes or Escape to cancel editing\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Expand/collapse sections using the arrow controls\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Formula cells automatically calculate based on inputs\n              </li>\n            </ul>\n          </div>\n\n          <div className=\"bg-white rounded-xl p-6 border border-slate-200 shadow-sm\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <div className=\"p-2 bg-green-100 rounded-lg\">\n                <TrendingUp className=\"w-5 h-5 text-green-600\" />\n              </div>\n              <h3 className=\"font-bold text-slate-900\">Professional Features</h3>\n            </div>\n            <ul className=\"space-y-2 text-sm text-slate-700\">\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Color-coded sections for easy visual navigation\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Adjusted column for scenario analysis and modifications\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Professional number formatting with proper alignment\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Enhanced editing experience with save/cancel controls\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FinancialSpreadsheet;\n","import { motion } from 'framer-motion';\nimport { TrendingUp, BarChart3, PieChart as PieChartIcon, Activity, Eye, EyeOff } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\nimport {\n  LineChart, Line, BarChart, Bar, AreaChart, Area, PieChart, Pie, Cell,\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\nconst DataVisualization = ({\n  dcfData,\n  sensitivityData,\n  scenarioData,\n  formatCurrency,\n  formatPercent\n}) => {\n  const [activeChart, setActiveChart] = useState('dcf-waterfall');\n  const [showDetails, setShowDetails] = useState(true);\n\n  // Chart configuration\n  const chartTypes = [\n    { id: 'dcf-waterfall', label: 'DCF Waterfall', icon: BarChart3, category: 'dcf' },\n    { id: 'cashflow-trend', label: 'Cash Flow Trend', icon: TrendingUp, category: 'dcf' },\n    { id: 'sensitivity-tornado', label: 'Sensitivity Tornado', icon: Activity, category: 'sensitivity' },\n    { id: 'scenario-distribution', label: 'Scenario Distribution', icon: PieChartIcon, category: 'scenario' },\n    { id: 'valuation-bridge', label: 'Valuation Bridge', icon: BarChart3, category: 'combined' }\n  ];\n\n  // Prepare DCF Waterfall Data\n  const dcfWaterfallData = useMemo(() => {\n    if (!dcfData?.years) return [];\n\n    let cumulativeValue = 0;\n    const data = [];\n\n    // Add each year's contribution\n    dcfData.years.forEach((year, index) => {\n      const startValue = cumulativeValue;\n      cumulativeValue += year.presentValue;\n\n      data.push({\n        name: `Year ${year.year}`,\n        value: year.presentValue,\n        cumulative: cumulativeValue,\n        start: startValue,\n        freeCashFlow: year.freeCashFlow,\n        category: 'operations'\n      });\n    });\n\n    // Add terminal value\n    const terminalStart = cumulativeValue;\n    cumulativeValue += dcfData.presentValueTerminal;\n\n    data.push({\n      name: 'Terminal Value',\n      value: dcfData.presentValueTerminal,\n      cumulative: cumulativeValue,\n      start: terminalStart,\n      category: 'terminal'\n    });\n\n    return data;\n  }, [dcfData]);\n\n  // Prepare Cash Flow Trend Data\n  const cashFlowTrendData = useMemo(() => {\n    if (!dcfData?.years) return [];\n\n    return dcfData.years.map((year, index) => ({\n      year: `Year ${year.year}`,\n      freeCashFlow: year.freeCashFlow,\n      presentValue: year.presentValue,\n      revenue: year.revenue,\n      operatingIncome: year.operatingIncome,\n      workingCapitalChange: year.workingCapitalChange,\n      capex: Math.abs(year.capex)\n    }));\n  }, [dcfData]);\n\n  // Prepare Sensitivity Tornado Data\n  const sensitivityTornadoData = useMemo(() => {\n    if (!sensitivityData) return [];\n\n    return Object.entries(sensitivityData).map(([variable, result]) => {\n      const maxUpside = Math.max(...result.dataPoints.map(d => d.changeFromBase));\n      const maxDownside = Math.min(...result.dataPoints.map(d => d.changeFromBase));\n\n      return {\n        variable: result.definition.name,\n        upside: maxUpside,\n        downside: Math.abs(maxDownside),\n        range: maxUpside - maxDownside\n      };\n    }).sort((a, b) => b.range - a.range);\n  }, [sensitivityData]);\n\n  // Prepare Scenario Distribution Data\n  const scenarioDistributionData = useMemo(() => {\n    if (!scenarioData?.length) return [];\n\n    return scenarioData.map((scenario, index) => ({\n      name: scenario.name,\n      value: scenario.enterpriseValue,\n      probability: scenario.probability,\n      weightedValue: scenario.weightedValue,\n      fill: `hsl(${(index * 137.5) % 360}, 70%, 50%)`\n    }));\n  }, [scenarioData]);\n\n  // Custom tooltip for different chart types\n  const CustomTooltip = ({ active, payload, label, chartType }) => {\n    if (!active || !payload || !payload.length) return null;\n\n    const formatValue = (value, key) => {\n      if (key?.includes('Percent') || key?.includes('Rate')) {\n        return formatPercent(value);\n      }\n      return formatCurrency(value);\n    };\n\n    return (\n      <div className=\"bg-white p-3 border rounded-lg shadow-lg\">\n        <p className=\"font-medium text-gray-800\">{label}</p>\n        {payload.map((entry, index) => (\n          <p key={index} style={{ color: entry.color }} className=\"text-sm\">\n            {`${entry.dataKey}: ${formatValue(entry.value, entry.dataKey)}`}\n          </p>\n        ))}\n      </div>\n    );\n  };\n\n  // DCF Waterfall Chart\n  const DCFWaterfallChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <BarChart data={dcfWaterfallData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis tickFormatter={(value) => formatCurrency(value)} />\n        <Tooltip content={<CustomTooltip chartType=\"waterfall\" />} />\n        <Bar dataKey=\"value\" fill=\"#3B82F6\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n\n  // Cash Flow Trend Chart\n  const CashFlowTrendChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <LineChart data={cashFlowTrendData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"year\" />\n        <YAxis tickFormatter={(value) => formatCurrency(value)} />\n        <Tooltip content={<CustomTooltip chartType=\"trend\" />} />\n        <Legend />\n        <Line\n          type=\"monotone\" dataKey=\"freeCashFlow\" stroke=\"#10B981\"\n          strokeWidth={3} name=\"Free Cash Flow\"\n        />\n        <Line\n          type=\"monotone\" dataKey=\"presentValue\" stroke=\"#3B82F6\"\n          strokeWidth={2} name=\"Present Value\"\n        />\n        <Line\n          type=\"monotone\" dataKey=\"revenue\" stroke=\"#8B5CF6\"\n          strokeWidth={2} name=\"Revenue\"\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n\n  // Sensitivity Tornado Chart\n  const SensitivityTornadoChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <BarChart\n        data={sensitivityTornadoData}\n        layout=\"horizontal\"\n        margin={{ top: 20, right: 30, left: 100, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" tickFormatter={(value) => `${value.toFixed(1)}%`} />\n        <YAxis type=\"category\" dataKey=\"variable\" />\n        <Tooltip\n          formatter={(value, name) => [`${value.toFixed(1)}%`, name]}\n          labelFormatter={(label) => `Variable: ${label}`}\n        />\n        <Bar dataKey=\"upside\" fill=\"#10B981\" name=\"Upside Impact\" />\n        <Bar dataKey=\"downside\" fill=\"#EF4444\" name=\"Downside Impact\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n\n  // Scenario Distribution Chart\n  const ScenarioDistributionChart = () => (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <PieChart>\n          <Pie\n            data={scenarioDistributionData}\n            cx=\"50%\"\n            cy=\"50%\"\n            outerRadius={80}\n            dataKey=\"probability\"\n            label={({ name, probability }) => `${name}: ${probability}%`}\n          >\n            {scenarioDistributionData.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.fill} />\n            ))}\n          </Pie>\n          <Tooltip formatter={(value) => `${value}%`} />\n        </PieChart>\n      </ResponsiveContainer>\n\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart data={scenarioDistributionData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis tickFormatter={(value) => formatCurrency(value)} />\n          <Tooltip content={<CustomTooltip chartType=\"scenario\" />} />\n          <Bar dataKey=\"value\" fill=\"#8B5CF6\" name=\"Enterprise Value\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n\n  // Valuation Bridge Chart\n  const ValuationBridgeChart = () => {\n    const bridgeData = [\n      { name: 'PV of Operations', value: dcfData?.cumulativePV || 0, type: 'positive' },\n      { name: 'PV of Terminal', value: dcfData?.presentValueTerminal || 0, type: 'positive' },\n      { name: 'Enterprise Value', value: dcfData?.enterpriseValue || 0, type: 'total' }\n    ];\n\n    return (\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart data={bridgeData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis tickFormatter={(value) => formatCurrency(value)} />\n          <Tooltip content={<CustomTooltip chartType=\"bridge\" />} />\n          <Bar\n            dataKey=\"value\"\n            fill={(entry) => entry.type === 'total' ? '#1F2937' : '#3B82F6'}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const renderChart = () => {\n    switch (activeChart) {\n      case 'dcf-waterfall':\n        return <DCFWaterfallChart />;\n      case 'cashflow-trend':\n        return <CashFlowTrendChart />;\n      case 'sensitivity-tornado':\n        return <SensitivityTornadoChart />;\n      case 'scenario-distribution':\n        return <ScenarioDistributionChart />;\n      case 'valuation-bridge':\n        return <ValuationBridgeChart />;\n      default:\n        return <DCFWaterfallChart />;\n    }\n  };\n\n  const getChartDescription = () => {\n    switch (activeChart) {\n      case 'dcf-waterfall':\n        return 'Shows the contribution of each year\\'s cash flows and terminal value to total enterprise value.';\n      case 'cashflow-trend':\n        return 'Displays the trend of free cash flows, present values, and key financial metrics over time.';\n      case 'sensitivity-tornado':\n        return 'Illustrates how changes in key variables impact enterprise value, ranked by sensitivity.';\n      case 'scenario-distribution':\n        return 'Compares different scenarios by probability weights and resulting enterprise values.';\n      case 'valuation-bridge':\n        return 'Breaks down enterprise value into operating value and terminal value components.';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <BarChart3 size={20} />\n            Data Visualization\n          </h3>\n          <p className=\"text-gray-600\">\n            Interactive charts and graphs to visualize valuation results and sensitivity analysis.\n          </p>\n        </div>\n        <button\n          onClick={() => setShowDetails(!showDetails)}\n          className={`px-3 py-2 rounded-lg text-sm transition-colors flex items-center gap-2 ${\n            showDetails ? 'bg-blue-100 text-blue-700' : 'bg-gray-100 text-gray-700'\n          }`}\n        >\n          {showDetails ? <EyeOff size={14} /> : <Eye size={14} />}\n          {showDetails ? 'Hide Details' : 'Show Details'}\n        </button>\n      </div>\n\n      {/* Chart Type Selector */}\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-3\">\n        {chartTypes.map((chart) => {\n          const Icon = chart.icon;\n          return (\n            <motion.button\n              key={chart.id}\n              onClick={() => setActiveChart(chart.id)}\n              className={`p-3 rounded-lg border-2 transition-all text-center ${\n                activeChart === chart.id\n                  ? 'border-blue-500 bg-blue-50 text-blue-700'\n                  : 'border-gray-200 bg-white hover:border-gray-300 text-gray-700'\n              }`}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <Icon size={20} className=\"mx-auto mb-2\" />\n              <div className=\"text-xs font-medium\">{chart.label}</div>\n            </motion.button>\n          );\n        })}\n      </div>\n\n      {/* Chart Container */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h4 className=\"font-semibold text-lg\">\n            {chartTypes.find(c => c.id === activeChart)?.label}\n          </h4>\n          {showDetails && (\n            <span className=\"text-sm text-gray-500\">\n              {getChartDescription()}\n            </span>\n          )}\n        </div>\n\n        <div className=\"min-h-[400px]\">\n          {renderChart()}\n        </div>\n      </div>\n\n      {/* Chart Insights */}\n      {showDetails && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">Key Insights</h4>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {activeChart === 'dcf-waterfall' && (\n              <>\n                <div className=\"p-4 bg-blue-50 rounded-lg\">\n                  <div className=\"text-sm text-blue-600 font-medium\">Operations Contribution</div>\n                  <div className=\"text-lg font-bold text-blue-800\">\n                    {dcfData?.cumulativePV ?\n                      `${((dcfData.cumulativePV / dcfData.enterpriseValue) * 100).toFixed(1)}%` :\n                      'N/A'\n                    }\n                  </div>\n                </div>\n                <div className=\"p-4 bg-purple-50 rounded-lg\">\n                  <div className=\"text-sm text-purple-600 font-medium\">Terminal Contribution</div>\n                  <div className=\"text-lg font-bold text-purple-800\">\n                    {dcfData?.presentValueTerminal ?\n                      `${((dcfData.presentValueTerminal / dcfData.enterpriseValue) * 100).toFixed(1)}%` :\n                      'N/A'\n                    }\n                  </div>\n                </div>\n                <div className=\"p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-sm text-green-600 font-medium\">Avg. Annual FCF</div>\n                  <div className=\"text-lg font-bold text-green-800\">\n                    {dcfData?.freeCashFlows ?\n                      formatCurrency(dcfData.freeCashFlows.reduce((a, b) => a + b, 0) / dcfData.freeCashFlows.length) :\n                      'N/A'\n                    }\n                  </div>\n                </div>\n              </>\n            )}\n\n            {activeChart === 'sensitivity-tornado' && sensitivityTornadoData.length > 0 && (\n              <>\n                <div className=\"p-4 bg-red-50 rounded-lg\">\n                  <div className=\"text-sm text-red-600 font-medium\">Highest Risk Variable</div>\n                  <div className=\"text-lg font-bold text-red-800\">\n                    {sensitivityTornadoData[0]?.variable}\n                  </div>\n                  <div className=\"text-sm text-red-600\">\n                    ±{sensitivityTornadoData[0]?.range.toFixed(1)}% impact\n                  </div>\n                </div>\n                <div className=\"p-4 bg-yellow-50 rounded-lg\">\n                  <div className=\"text-sm text-yellow-600 font-medium\">Medium Risk Variables</div>\n                  <div className=\"text-lg font-bold text-yellow-800\">\n                    {sensitivityTornadoData.slice(1, 3).map(v => v.variable).join(', ')}\n                  </div>\n                </div>\n                <div className=\"p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-sm text-green-600 font-medium\">Lowest Risk Variable</div>\n                  <div className=\"text-lg font-bold text-green-800\">\n                    {sensitivityTornadoData[sensitivityTornadoData.length - 1]?.variable}\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataVisualization;\n","import { motion } from 'framer-motion';\nimport { Calculator, TrendingUp, DollarSign, Percent, Info, BookOpen, Settings } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst WACCCalculator = ({ modelInputs, onModelInputChange, formatPercent }) => {\n  const [showDetails, setShowDetails] = useState(true);\n  const [activeTab, setActiveTab] = useState('inputs');\n\n  // WACC calculation inputs with defaults\n  const waccInputs = modelInputs.dcf.wacc || {\n    // Cost of Equity (CAPM)\n    riskFreeRate: 4.5,\n    marketRiskPremium: 6.0,\n    beta: 1.2,\n    smallCompanyPremium: 3.0,\n    companySpecificRisk: 2.0,\n\n    // Cost of Debt\n    debtInterestRate: 6.5,\n    taxRate: 25,\n\n    // Capital Structure\n    marketValueEquity: 100000,\n    marketValueDebt: 30000,\n\n    // Alternative methods\n    buildUpMethod: {\n      riskFreeRate: 4.5,\n      equityRiskPremium: 6.0,\n      sizeRiskPremium: 3.0,\n      industryRiskPremium: 2.0,\n      companySpecificRisk: 2.0\n    },\n\n    // Industry benchmarks\n    industryWACC: 10.5,\n    industryBeta: 1.1,\n    industryDebtEquityRatio: 0.3\n  };\n\n  // Calculate WACC components\n  const waccCalculation = useMemo(() => {\n    const inputs = { ...waccInputs, ...modelInputs.dcf.wacc };\n\n    // Cost of Equity - CAPM Method\n    const costOfEquityCAPM = inputs.riskFreeRate +\n                            (inputs.beta * inputs.marketRiskPremium) +\n                            inputs.smallCompanyPremium +\n                            inputs.companySpecificRisk;\n\n    // Cost of Equity - Build-up Method\n    const costOfEquityBuildUp = inputs.buildUpMethod.riskFreeRate +\n                               inputs.buildUpMethod.equityRiskPremium +\n                               inputs.buildUpMethod.sizeRiskPremium +\n                               inputs.buildUpMethod.industryRiskPremium +\n                               inputs.buildUpMethod.companySpecificRisk;\n\n    // Cost of Debt (after-tax)\n    const costOfDebtAfterTax = inputs.debtInterestRate * (1 - inputs.taxRate / 100);\n\n    // Capital structure weights\n    const totalCapital = inputs.marketValueEquity + inputs.marketValueDebt;\n    const equityWeight = inputs.marketValueEquity / totalCapital;\n    const debtWeight = inputs.marketValueDebt / totalCapital;\n\n    // WACC calculations\n    const waccCAPM = (costOfEquityCAPM / 100 * equityWeight) +\n                     (costOfDebtAfterTax / 100 * debtWeight);\n\n    const waccBuildUp = (costOfEquityBuildUp / 100 * equityWeight) +\n                        (costOfDebtAfterTax / 100 * debtWeight);\n\n    // Risk-adjusted WACC (average of methods)\n    const finalWACC = (waccCAPM + waccBuildUp) / 2;\n\n    return {\n      costOfEquityCAPM,\n      costOfEquityBuildUp,\n      costOfDebtAfterTax,\n      equityWeight: equityWeight * 100,\n      debtWeight: debtWeight * 100,\n      waccCAPM: waccCAPM * 100,\n      waccBuildUp: waccBuildUp * 100,\n      finalWACC: finalWACC * 100,\n      totalCapital,\n      debtToEquityRatio: inputs.marketValueDebt / inputs.marketValueEquity\n    };\n  }, [waccInputs, modelInputs.dcf.wacc]);\n\n  const updateWACCInput = (field, value) => {\n    const updatedWACC = {\n      ...waccInputs,\n      ...modelInputs.dcf.wacc,\n      [field]: parseFloat(value) || 0\n    };\n    onModelInputChange('dcf', 'wacc', updatedWACC);\n  };\n\n  const updateBuildUpInput = (field, value) => {\n    const updatedWACC = {\n      ...waccInputs,\n      ...modelInputs.dcf.wacc,\n      buildUpMethod: {\n        ...waccInputs.buildUpMethod,\n        ...modelInputs.dcf.wacc?.buildUpMethod,\n        [field]: parseFloat(value) || 0\n      }\n    };\n    onModelInputChange('dcf', 'wacc', updatedWACC);\n  };\n\n  const applyWACCToDCF = (waccValue) => {\n    onModelInputChange('dcf', 'discountRate', waccValue);\n  };\n\n  const tabs = [\n    { id: 'inputs', label: 'Inputs', icon: Settings },\n    { id: 'calculation', label: 'Calculation', icon: Calculator },\n    { id: 'benchmarks', label: 'Benchmarks', icon: TrendingUp }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Calculator size={20} />\n            WACC Calculator\n          </h3>\n          <p className=\"text-gray-600\">\n            Professional weighted average cost of capital calculation using CAPM and build-up methods.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => applyWACCToDCF(waccCalculation.finalWACC)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\"\n          >\n            Apply to DCF\n          </button>\n          <button\n            onClick={() => setShowDetails(!showDetails)}\n            className={`px-3 py-2 rounded-lg text-sm transition-colors ${\n              showDetails ? 'bg-gray-200 text-gray-700' : 'bg-gray-100 text-gray-600'\n            }`}\n          >\n            {showDetails ? 'Hide Details' : 'Show Details'}\n          </button>\n        </div>\n      </div>\n\n      {/* Key Results */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <motion.div\n          className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Percent size={20} className=\"text-blue-600\" />\n            <span className=\"text-xs text-blue-600 font-medium\">FINAL WACC</span>\n          </div>\n          <div className=\"text-2xl font-bold text-blue-800\">\n            {formatPercent(waccCalculation.finalWACC)}\n          </div>\n          <div className=\"text-sm text-blue-600 mt-1\">\n            Risk-adjusted average\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <TrendingUp size={20} className=\"text-green-600\" />\n            <span className=\"text-xs text-green-600 font-medium\">COST OF EQUITY</span>\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {formatPercent(waccCalculation.costOfEquityCAPM)}\n          </div>\n          <div className=\"text-sm text-green-600 mt-1\">\n            CAPM method\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <DollarSign size={20} className=\"text-purple-600\" />\n            <span className=\"text-xs text-purple-600 font-medium\">COST OF DEBT</span>\n          </div>\n          <div className=\"text-2xl font-bold text-purple-800\">\n            {formatPercent(waccCalculation.costOfDebtAfterTax)}\n          </div>\n          <div className=\"text-sm text-purple-600 mt-1\">\n            After-tax\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Info size={20} className=\"text-orange-600\" />\n            <span className=\"text-xs text-orange-600 font-medium\">DEBT/EQUITY</span>\n          </div>\n          <div className=\"text-2xl font-bold text-orange-800\">\n            {waccCalculation.debtToEquityRatio.toFixed(2)}x\n          </div>\n          <div className=\"text-sm text-orange-600 mt-1\">\n            Capital structure\n          </div>\n        </motion.div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg\">\n        {tabs.map((tab) => {\n          const Icon = tab.icon;\n          return (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`flex-1 flex items-center justify-center gap-2 py-2 px-4 rounded-md transition-all ${\n                activeTab === tab.id\n                  ? 'bg-white text-blue-600 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <Icon size={16} />\n              {tab.label}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        {activeTab === 'inputs' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">WACC Input Parameters</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* Cost of Equity - CAPM */}\n              <div>\n                <h5 className=\"font-medium mb-4 text-blue-800\">Cost of Equity (CAPM Method)</h5>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Risk-Free Rate (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.riskFreeRate || waccInputs.riskFreeRate}\n                      onChange={(e) => updateWACCInput('riskFreeRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">10-year Treasury rate</span>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Risk Premium (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.marketRiskPremium || waccInputs.marketRiskPremium}\n                      onChange={(e) => updateWACCInput('marketRiskPremium', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Expected market return - risk-free rate</span>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Beta (β)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.beta || waccInputs.beta}\n                      onChange={(e) => updateWACCInput('beta', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Systematic risk relative to market</span>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Small Company Premium (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.smallCompanyPremium || waccInputs.smallCompanyPremium}\n                      onChange={(e) => updateWACCInput('smallCompanyPremium', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Size-related risk premium</span>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Company-Specific Risk (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.companySpecificRisk || waccInputs.companySpecificRisk}\n                      onChange={(e) => updateWACCInput('companySpecificRisk', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Unsystematic risk premium</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Capital Structure & Debt */}\n              <div>\n                <h5 className=\"font-medium mb-4 text-purple-800\">Capital Structure & Cost of Debt</h5>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Value of Equity ($000s)\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={modelInputs.dcf.wacc?.marketValueEquity || waccInputs.marketValueEquity}\n                      onChange={(e) => updateWACCInput('marketValueEquity', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Value of Debt ($000s)\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={modelInputs.dcf.wacc?.marketValueDebt || waccInputs.marketValueDebt}\n                      onChange={(e) => updateWACCInput('marketValueDebt', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Pre-Tax Cost of Debt (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.debtInterestRate || waccInputs.debtInterestRate}\n                      onChange={(e) => updateWACCInput('debtInterestRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Interest rate on debt</span>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Tax Rate (%)\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.taxRate || modelInputs.dcf.taxRate}\n                      onChange={(e) => updateWACCInput('taxRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Corporate tax rate</span>\n                  </div>\n\n                  {/* Capital Structure Summary */}\n                  <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n                    <h6 className=\"font-medium mb-2\">Capital Structure</h6>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Equity Weight:</span>\n                        <span className=\"font-medium\">{formatPercent(waccCalculation.equityWeight)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Debt Weight:</span>\n                        <span className=\"font-medium\">{formatPercent(waccCalculation.debtWeight)}</span>\n                      </div>\n                      <div className=\"flex justify-between border-t pt-2\">\n                        <span>Total Capital:</span>\n                        <span className=\"font-medium\">${(waccCalculation.totalCapital / 1000).toFixed(0)}M</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'calculation' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">WACC Calculation Breakdown</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* CAPM Method */}\n              <div className=\"p-6 bg-blue-50 rounded-lg border border-blue-200\">\n                <h5 className=\"font-medium mb-4 text-blue-800\">CAPM Method</h5>\n                <div className=\"space-y-3 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Risk-Free Rate:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.riskFreeRate || waccInputs.riskFreeRate)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta × Market Risk Premium:</span>\n                    <span className=\"font-medium\">\n                      {formatPercent((modelInputs.dcf.wacc?.beta || waccInputs.beta) * (modelInputs.dcf.wacc?.marketRiskPremium || waccInputs.marketRiskPremium))}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Small Company Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.smallCompanyPremium || waccInputs.smallCompanyPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Company-Specific Risk:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.companySpecificRisk || waccInputs.companySpecificRisk)}</span>\n                  </div>\n                  <div className=\"flex justify-between border-t pt-2 font-semibold\">\n                    <span>Cost of Equity (CAPM):</span>\n                    <span>{formatPercent(waccCalculation.costOfEquityCAPM)}</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Build-up Method */}\n              <div className=\"p-6 bg-green-50 rounded-lg border border-green-200\">\n                <h5 className=\"font-medium mb-4 text-green-800\">Build-up Method</h5>\n                <div className=\"space-y-3 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Risk-Free Rate:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.riskFreeRate)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Equity Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.equityRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Size Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.sizeRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Industry Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.industryRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Company-Specific Risk:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.companySpecificRisk)}</span>\n                  </div>\n                  <div className=\"flex justify-between border-t pt-2 font-semibold\">\n                    <span>Cost of Equity (Build-up):</span>\n                    <span>{formatPercent(waccCalculation.costOfEquityBuildUp)}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Final WACC Calculation */}\n            <div className=\"p-6 bg-gray-50 rounded-lg border\">\n              <h5 className=\"font-medium mb-4\">Final WACC Calculation</h5>\n              <div className=\"space-y-4 text-sm\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <div className=\"flex justify-between mb-2\">\n                      <span>WACC (CAPM Method):</span>\n                      <span className=\"font-medium\">{formatPercent(waccCalculation.waccCAPM)}</span>\n                    </div>\n                    <div className=\"text-xs text-gray-600\">\n                      [{formatPercent(waccCalculation.costOfEquityCAPM)} × {formatPercent(waccCalculation.equityWeight)}] +\n                      [{formatPercent(waccCalculation.costOfDebtAfterTax)} × {formatPercent(waccCalculation.debtWeight)}]\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"flex justify-between mb-2\">\n                      <span>WACC (Build-up Method):</span>\n                      <span className=\"font-medium\">{formatPercent(waccCalculation.waccBuildUp)}</span>\n                    </div>\n                    <div className=\"text-xs text-gray-600\">\n                      [{formatPercent(waccCalculation.costOfEquityBuildUp)} × {formatPercent(waccCalculation.equityWeight)}] +\n                      [{formatPercent(waccCalculation.costOfDebtAfterTax)} × {formatPercent(waccCalculation.debtWeight)}]\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"border-t pt-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-lg font-semibold\">Risk-Adjusted WACC:</span>\n                    <span className=\"text-2xl font-bold text-blue-600\">{formatPercent(waccCalculation.finalWACC)}</span>\n                  </div>\n                  <div className=\"text-xs text-gray-600 mt-1\">\n                    Average of CAPM and Build-up methods\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'benchmarks' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">Industry Benchmarks & Validation</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              <div className=\"p-4 bg-blue-50 rounded-lg\">\n                <h6 className=\"font-medium text-blue-800 mb-2\">Your Company</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC:</span>\n                    <span className=\"font-semibold\">{formatPercent(waccCalculation.finalWACC)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta:</span>\n                    <span className=\"font-semibold\">{(modelInputs.dcf.wacc?.beta || waccInputs.beta).toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>D/E Ratio:</span>\n                    <span className=\"font-semibold\">{waccCalculation.debtToEquityRatio.toFixed(2)}x</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"p-4 bg-green-50 rounded-lg\">\n                <h6 className=\"font-medium text-green-800 mb-2\">Industry Average</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC:</span>\n                    <span className=\"font-semibold\">{formatPercent(waccInputs.industryWACC)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta:</span>\n                    <span className=\"font-semibold\">{waccInputs.industryBeta.toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>D/E Ratio:</span>\n                    <span className=\"font-semibold\">{waccInputs.industryDebtEquityRatio.toFixed(2)}x</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"p-4 bg-yellow-50 rounded-lg\">\n                <h6 className=\"font-medium text-yellow-800 mb-2\">Variance</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC Diff:</span>\n                    <span\n                      className={`font-semibold ${\n                        waccCalculation.finalWACC > waccInputs.industryWACC ? 'text-red-600' : 'text-green-600'\n                      }`}\n                    >\n                      {waccCalculation.finalWACC > waccInputs.industryWACC ? '+' : ''}\n                      {formatPercent(waccCalculation.finalWACC - waccInputs.industryWACC)}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta Diff:</span>\n                    <span\n                      className={`font-semibold ${\n                        (modelInputs.dcf.wacc?.beta || waccInputs.beta) > waccInputs.industryBeta ? 'text-red-600' : 'text-green-600'\n                      }`}\n                    >\n                      {(modelInputs.dcf.wacc?.beta || waccInputs.beta) > waccInputs.industryBeta ? '+' : ''}\n                      {((modelInputs.dcf.wacc?.beta || waccInputs.beta) - waccInputs.industryBeta).toFixed(2)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Validation Notes */}\n            <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n              <div className=\"flex items-start gap-2\">\n                <BookOpen size={16} className=\"text-blue-600 mt-0.5\" />\n                <div>\n                  <h6 className=\"font-medium text-blue-800 mb-2\">Validation Guidelines</h6>\n                  <ul className=\"text-sm text-blue-700 space-y-1\">\n                    <li>• WACC should be within ±2% of industry average for similar companies</li>\n                    <li>• Beta should reflect business risk relative to market (typically 0.8-1.5 for most companies)</li>\n                    <li>• Cost of equity should exceed risk-free rate by at least 4-6% for private companies</li>\n                    <li>• Debt/equity ratio should align with industry norms and company strategy</li>\n                    <li>• Consider economic conditions and company-specific factors</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WACCCalculator;\n","import { motion } from 'framer-motion';\nimport { Users, TrendingUp, BarChart3, Plus, Search, DollarSign, Percent, Target, Filter } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst ComparableAnalysis = ({ data, formatCurrency, formatPercent }) => {\n  const [activeTab, setActiveTab] = useState('multiples');\n  const [selectedMultiple, setSelectedMultiple] = useState('ev_revenue');\n  const [showAddComp, setShowAddComp] = useState(false);\n\n  // Sample comparable companies data (in practice, this would come from external API)\n  const [comparableCompanies, setComparableCompanies] = useState([\n    {\n      id: 1,\n      name: 'MedSpa Corp',\n      ticker: 'MSPA',\n      marketCap: 450000, // $450M\n      enterpriseValue: 520000, // $520M\n      revenue: 180000, // $180M\n      ebitda: 45000, // $45M\n      netIncome: 28000, // $28M\n      employees: 1200,\n      founded: 2015,\n      geography: 'US',\n      businessModel: 'B2C Medical Spa Chain'\n    },\n    {\n      id: 2,\n      name: 'Wellness Holdings',\n      ticker: 'WELL',\n      marketCap: 680000,\n      enterpriseValue: 750000,\n      revenue: 220000,\n      ebitda: 55000,\n      netIncome: 35000,\n      employees: 1800,\n      founded: 2012,\n      geography: 'US',\n      businessModel: 'Integrated Wellness Platform'\n    },\n    {\n      id: 3,\n      name: 'Aesthetic Solutions Inc',\n      ticker: 'AEST',\n      marketCap: 320000,\n      enterpriseValue: 380000,\n      revenue: 125000,\n      ebitda: 32000,\n      netIncome: 18000,\n      employees: 850,\n      founded: 2018,\n      geography: 'US',\n      businessModel: 'Medical Device & Services'\n    },\n    {\n      id: 4,\n      name: 'Premium Health Group',\n      ticker: 'PHG',\n      marketCap: 920000,\n      enterpriseValue: 1050000,\n      revenue: 310000,\n      ebitda: 78000,\n      netIncome: 48000,\n      employees: 2500,\n      founded: 2010,\n      geography: 'US',\n      businessModel: 'Premium Healthcare Services'\n    }\n  ]);\n\n  // Calculate multiples for comparable companies\n  const comparableMultiples = useMemo(() => {\n    return comparableCompanies.map(comp => ({\n      ...comp,\n      multiples: {\n        ev_revenue: comp.enterpriseValue / comp.revenue,\n        ev_ebitda: comp.enterpriseValue / comp.ebitda,\n        pe_ratio: comp.marketCap / comp.netIncome,\n        revenue_per_employee: comp.revenue / comp.employees,\n        market_cap_revenue: comp.marketCap / comp.revenue\n      }\n    }));\n  }, [comparableCompanies]);\n\n  // Calculate market statistics\n  const marketStats = useMemo(() => {\n    const multiples = comparableMultiples.map(c => c.multiples);\n\n    const calculateStats = (values) => ({\n      mean: values.reduce((a, b) => a + b, 0) / values.length,\n      median: values.sort((a, b) => a - b)[Math.floor(values.length / 2)],\n      min: Math.min(...values),\n      max: Math.max(...values),\n      p25: values.sort((a, b) => a - b)[Math.floor(values.length * 0.25)],\n      p75: values.sort((a, b) => a - b)[Math.floor(values.length * 0.75)]\n    });\n\n    return {\n      ev_revenue: calculateStats(multiples.map(m => m.ev_revenue)),\n      ev_ebitda: calculateStats(multiples.map(m => m.ev_ebitda)),\n      pe_ratio: calculateStats(multiples.map(m => m.pe_ratio)),\n      revenue_per_employee: calculateStats(multiples.map(m => m.revenue_per_employee)),\n      market_cap_revenue: calculateStats(multiples.map(m => m.market_cap_revenue))\n    };\n  }, [comparableMultiples]);\n\n  // Calculate implied valuation for target company\n  const impliedValuation = useMemo(() => {\n    const targetRevenue = data.statements.incomeStatement.totalRevenue?.[1] || 100000; // Year 1 revenue\n    const targetEBITDA = (data.statements.incomeStatement.operatingIncome?.[1] || 50000) * 1.15; // Approx EBITDA\n    const targetNetIncome = (data.statements.incomeStatement.operatingIncome?.[1] || 50000) * 0.7; // Approx net income\n\n    return {\n      ev_revenue: {\n        mean: targetRevenue * marketStats.ev_revenue.mean,\n        median: targetRevenue * marketStats.ev_revenue.median,\n        p25: targetRevenue * marketStats.ev_revenue.p25,\n        p75: targetRevenue * marketStats.ev_revenue.p75\n      },\n      ev_ebitda: {\n        mean: targetEBITDA * marketStats.ev_ebitda.mean,\n        median: targetEBITDA * marketStats.ev_ebitda.median,\n        p25: targetEBITDA * marketStats.ev_ebitda.p25,\n        p75: targetEBITDA * marketStats.ev_ebitda.p75\n      },\n      pe_ratio: {\n        mean: targetNetIncome * marketStats.pe_ratio.mean,\n        median: targetNetIncome * marketStats.pe_ratio.median,\n        p25: targetNetIncome * marketStats.pe_ratio.p25,\n        p75: targetNetIncome * marketStats.pe_ratio.p75\n      }\n    };\n  }, [data, marketStats]);\n\n  const multipleDefinitions = {\n    ev_revenue: { name: 'EV/Revenue', description: 'Enterprise Value / Annual Revenue' },\n    ev_ebitda: { name: 'EV/EBITDA', description: 'Enterprise Value / EBITDA' },\n    pe_ratio: { name: 'P/E Ratio', description: 'Market Cap / Net Income' },\n    revenue_per_employee: { name: 'Revenue/Employee', description: 'Revenue per Employee' },\n    market_cap_revenue: { name: 'Market Cap/Revenue', description: 'Market Cap / Revenue' }\n  };\n\n  const addComparableCompany = (companyData) => {\n    const newCompany = {\n      id: Date.now(),\n      ...companyData,\n      marketCap: parseFloat(companyData.marketCap) || 0,\n      enterpriseValue: parseFloat(companyData.enterpriseValue) || 0,\n      revenue: parseFloat(companyData.revenue) || 0,\n      ebitda: parseFloat(companyData.ebitda) || 0,\n      netIncome: parseFloat(companyData.netIncome) || 0,\n      employees: parseInt(companyData.employees) || 0,\n      founded: parseInt(companyData.founded) || new Date().getFullYear()\n    };\n    setComparableCompanies([...comparableCompanies, newCompany]);\n    setShowAddComp(false);\n  };\n\n  const removeComparable = (id) => {\n    setComparableCompanies(comparableCompanies.filter(comp => comp.id !== id));\n  };\n\n  const tabs = [\n    { id: 'multiples', label: 'Trading Multiples', icon: BarChart3 },\n    { id: 'analysis', label: 'Valuation Analysis', icon: Target },\n    { id: 'companies', label: 'Comparable Set', icon: Users }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Users size={20} />\n            Comparable Company Analysis\n          </h3>\n          <p className=\"text-gray-600\">\n            Market-based valuation using trading multiples from similar public companies.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => setShowAddComp(true)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2 text-sm\"\n          >\n            <Plus size={16} />\n            Add Comparable\n          </button>\n        </div>\n      </div>\n\n      {/* Key Results Summary */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <motion.div\n          className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <BarChart3 size={20} className=\"text-blue-600\" />\n            <span className=\"text-xs text-blue-600 font-medium\">EV/REVENUE</span>\n          </div>\n          <div className=\"text-2xl font-bold text-blue-800\">\n            {marketStats.ev_revenue.median.toFixed(1)}x\n          </div>\n          <div className=\"text-sm text-blue-600 mt-1\">\n            Median multiple\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <TrendingUp size={20} className=\"text-green-600\" />\n            <span className=\"text-xs text-green-600 font-medium\">IMPLIED VALUE</span>\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {formatCurrency(impliedValuation.ev_revenue.median)}\n          </div>\n          <div className=\"text-sm text-green-600 mt-1\">\n            EV/Revenue basis\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <DollarSign size={20} className=\"text-purple-600\" />\n            <span className=\"text-xs text-purple-600 font-medium\">VALUATION RANGE</span>\n          </div>\n          <div className=\"text-lg font-bold text-purple-800\">\n            {formatCurrency(impliedValuation.ev_revenue.p25)} - {formatCurrency(impliedValuation.ev_revenue.p75)}\n          </div>\n          <div className=\"text-sm text-purple-600 mt-1\">\n            25th - 75th percentile\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Users size={20} className=\"text-orange-600\" />\n            <span className=\"text-xs text-orange-600 font-medium\">PEER COUNT</span>\n          </div>\n          <div className=\"text-2xl font-bold text-orange-800\">\n            {comparableCompanies.length}\n          </div>\n          <div className=\"text-sm text-orange-600 mt-1\">\n            Comparable companies\n          </div>\n        </motion.div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg\">\n        {tabs.map((tab) => {\n          const Icon = tab.icon;\n          return (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`flex-1 flex items-center justify-center gap-2 py-2 px-4 rounded-md transition-all ${\n                activeTab === tab.id\n                  ? 'bg-white text-blue-600 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <Icon size={16} />\n              {tab.label}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        {activeTab === 'multiples' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h4 className=\"font-semibold text-lg\">Trading Multiples Analysis</h4>\n              <select\n                value={selectedMultiple}\n                onChange={(e) => setSelectedMultiple(e.target.value)}\n                className=\"px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                {Object.entries(multipleDefinitions).map(([key, def]) => (\n                  <option key={key} value={key}>{def.name}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full text-sm\">\n                <thead>\n                  <tr className=\"border-b bg-gray-50\">\n                    <th className=\"text-left p-3 font-medium\">Company</th>\n                    <th className=\"text-right p-3 font-medium\">Market Cap</th>\n                    <th className=\"text-right p-3 font-medium\">Enterprise Value</th>\n                    <th className=\"text-right p-3 font-medium\">Revenue</th>\n                    <th className=\"text-right p-3 font-medium\">EV/Revenue</th>\n                    <th className=\"text-right p-3 font-medium\">EV/EBITDA</th>\n                    <th className=\"text-right p-3 font-medium\">P/E Ratio</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {comparableMultiples.map((comp, index) => (\n                    <tr key={comp.id} className=\"border-b hover:bg-gray-50\">\n                      <td className=\"p-3\">\n                        <div>\n                          <div className=\"font-medium\">{comp.name}</div>\n                          <div className=\"text-xs text-gray-500\">{comp.ticker}</div>\n                        </div>\n                      </td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.marketCap)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.enterpriseValue)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.revenue)}</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.ev_revenue.toFixed(1)}x</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.ev_ebitda.toFixed(1)}x</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.pe_ratio.toFixed(1)}x</td>\n                    </tr>\n                  ))}\n\n                  {/* Summary Statistics */}\n                  <tr className=\"border-t-2 border-gray-300 bg-blue-50 font-semibold\">\n                    <td className=\"p-3\">Market Statistics</td>\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3 text-right\">{marketStats.ev_revenue.median.toFixed(1)}x</td>\n                    <td className=\"p-3 text-right\">{marketStats.ev_ebitda.median.toFixed(1)}x</td>\n                    <td className=\"p-3 text-right\">{marketStats.pe_ratio.median.toFixed(1)}x</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            {/* Multiple Distribution Chart */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <div className=\"p-4 bg-gray-50 rounded-lg\">\n                <h6 className=\"font-medium mb-3\">Multiple Distribution</h6>\n                <div className=\"space-y-3\">\n                  {Object.entries(marketStats).slice(0, 3).map(([key, stats]) => (\n                    <div key={key}>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>{multipleDefinitions[key].name}</span>\n                        <span className=\"font-medium\">{stats.median.toFixed(1)}x</span>\n                      </div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                        <div\n                          className=\"bg-blue-500 h-2 rounded-full\"\n                          style={{\n                            width: `${((stats.median - stats.min) / (stats.max - stats.min)) * 100}%`\n                          }}\n                        />\n                      </div>\n                      <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                        <span>{stats.min.toFixed(1)}x</span>\n                        <span>{stats.max.toFixed(1)}x</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"p-4 bg-gray-50 rounded-lg\">\n                <h6 className=\"font-medium mb-3\">Key Statistics</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Companies Analyzed:</span>\n                    <span className=\"font-medium\">{comparableCompanies.length}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Median Market Cap:</span>\n                    <span className=\"font-medium\">{formatCurrency(comparableCompanies.sort((a, b) => a.marketCap - b.marketCap)[Math.floor(comparableCompanies.length / 2)]?.marketCap || 0)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Median Revenue:</span>\n                    <span className=\"font-medium\">{formatCurrency(comparableCompanies.sort((a, b) => a.revenue - b.revenue)[Math.floor(comparableCompanies.length / 2)]?.revenue || 0)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Avg Founded Year:</span>\n                    <span className=\"font-medium\">{Math.round(comparableCompanies.reduce((sum, c) => sum + c.founded, 0) / comparableCompanies.length)}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'analysis' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">Valuation Analysis</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Implied Valuation */}\n              <div>\n                <h5 className=\"font-medium mb-4\">Implied Valuation by Multiple</h5>\n                <div className=\"space-y-4\">\n                  {Object.entries(impliedValuation).map(([multiple, values]) => (\n                    <div key={multiple} className=\"p-4 border rounded-lg\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"font-medium\">{multipleDefinitions[multiple].name}</span>\n                        <span className=\"text-sm text-gray-500\">\n                          {marketStats[multiple].median.toFixed(1)}x median\n                        </span>\n                      </div>\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span>25th Percentile:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.p25)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Median:</span>\n                          <span className=\"font-bold text-blue-600\">{formatCurrency(values.median)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>75th Percentile:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.p75)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Mean:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.mean)}</span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Valuation Summary */}\n              <div>\n                <h5 className=\"font-medium mb-4\">Valuation Summary</h5>\n                <div className=\"p-6 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-200\">\n                  <div className=\"space-y-4\">\n                    <div>\n                      <div className=\"text-sm text-blue-600 font-medium mb-1\">Recommended Range</div>\n                      <div className=\"text-2xl font-bold text-blue-800\">\n                        {formatCurrency((impliedValuation.ev_revenue.p25 + impliedValuation.ev_ebitda.p25) / 2)} -\n                        {formatCurrency((impliedValuation.ev_revenue.p75 + impliedValuation.ev_ebitda.p75) / 2)}\n                      </div>\n                      <div className=\"text-sm text-blue-600\">Blended 25th-75th percentile</div>\n                    </div>\n\n                    <div>\n                      <div className=\"text-sm text-blue-600 font-medium mb-1\">Midpoint Valuation</div>\n                      <div className=\"text-xl font-bold text-blue-800\">\n                        {formatCurrency((impliedValuation.ev_revenue.median + impliedValuation.ev_ebitda.median) / 2)}\n                      </div>\n                      <div className=\"text-sm text-blue-600\">Average of median multiples</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mt-4 p-4 bg-yellow-50 rounded-lg border border-yellow-200\">\n                  <div className=\"flex items-start gap-2\">\n                    <Target size={16} className=\"text-yellow-600 mt-0.5\" />\n                    <div>\n                      <h6 className=\"font-medium text-yellow-800 mb-1\">Valuation Considerations</h6>\n                      <ul className=\"text-sm text-yellow-700 space-y-1\">\n                        <li>• Consider company-specific growth and margin profiles</li>\n                        <li>• Adjust for differences in business model and scale</li>\n                        <li>• Factor in market conditions and sector trends</li>\n                        <li>• Apply appropriate discount for private company liquidity</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'companies' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h4 className=\"font-semibold text-lg\">Comparable Company Set</h4>\n              <div className=\"flex gap-2\">\n                <div className=\"relative\">\n                  <Search size={16} className=\"absolute left-3 top-3 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search companies...\"\n                    className=\"pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <button className=\"px-3 py-2 border rounded-lg hover:bg-gray-50 flex items-center gap-2\">\n                  <Filter size={16} />\n                  Filter\n                </button>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n              {comparableCompanies.map((comp) => (\n                <motion.div\n                  key={comp.id}\n                  className=\"border rounded-lg p-4 hover:shadow-lg transition-shadow\"\n                  whileHover={{ y: -2 }}\n                >\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <div>\n                      <h6 className=\"font-semibold text-gray-800\">{comp.name}</h6>\n                      <div className=\"text-sm text-gray-500\">{comp.ticker} • {comp.geography}</div>\n                    </div>\n                    <button\n                      onClick={() => removeComparable(comp.id)}\n                      className=\"text-red-500 hover:bg-red-50 p-1 rounded\"\n                    >\n                      ×\n                    </button>\n                  </div>\n\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span>Market Cap:</span>\n                      <span className=\"font-medium\">{formatCurrency(comp.marketCap)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Revenue:</span>\n                      <span className=\"font-medium\">{formatCurrency(comp.revenue)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>EV/Revenue:</span>\n                      <span className=\"font-medium\">{(comp.enterpriseValue / comp.revenue).toFixed(1)}x</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Founded:</span>\n                      <span className=\"font-medium\">{comp.founded}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"mt-3 pt-3 border-t\">\n                    <div className=\"text-xs text-gray-600\">{comp.businessModel}</div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Add Comparable Modal */}\n      {showAddComp && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h4 className=\"font-semibold text-lg mb-4\">Add Comparable Company</h4>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                const formData = new FormData(e.target);\n                addComparableCompany(Object.fromEntries(formData));\n              }}\n            >\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Company Name</label>\n                  <input\n                    name=\"name\" type=\"text\" required\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Ticker</label>\n                  <input\n                    name=\"ticker\" type=\"text\" required\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Market Cap ($000s)</label>\n                    <input\n                      name=\"marketCap\" type=\"number\" required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Enterprise Value ($000s)</label>\n                    <input\n                      name=\"enterpriseValue\" type=\"number\" required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Revenue ($000s)</label>\n                    <input\n                      name=\"revenue\" type=\"number\" required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">EBITDA ($000s)</label>\n                    <input\n                      name=\"ebitda\" type=\"number\" required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Business Model</label>\n                  <input\n                    name=\"businessModel\" type=\"text\" required\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex gap-3 mt-6\">\n                <button type=\"submit\" className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\">\n                  Add Company\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => setShowAddComp(false)}\n                  className=\"flex-1 px-4 py-2 border rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ComparableAnalysis;\n","import { motion } from 'framer-motion';\nimport { Plus, Trash2, TrendingUp, TrendingDown, Minus, BarChart3 } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst ScenarioModeling = ({ data, modelInputs, onModelInputChange, calculateDCF, formatCurrency, formatPercent }) => {\n  const [showAddForm, setShowAddForm] = useState(false);\n\n  const scenarios = modelInputs.scenario?.scenarios || [];\n\n  // Calculate DCF for each scenario\n  const scenarioResults = useMemo(() => {\n    return scenarios.map(scenario => {\n      try {\n        // Apply scenario assumptions to base DCF calculation\n        const incomeStatement = { ...data.statements.incomeStatement };\n\n        // Apply revenue growth to revenue data (object format)\n        const baseRevenue = incomeStatement.totalRevenue || {};\n        const modifiedRevenue = {};\n        Object.keys(baseRevenue).forEach(periodIndex => {\n          const index = parseInt(periodIndex);\n          if (index === 0) {\n            modifiedRevenue[periodIndex] = baseRevenue[periodIndex]; // Base year unchanged\n          } else {\n            // Apply revenue growth for projection years\n            const growthRate = 1 + (scenario.revenueGrowth / 100);\n            modifiedRevenue[periodIndex] = baseRevenue[0] * Math.pow(growthRate, index);\n          }\n        });\n\n        // Apply margin improvement to operating income\n        const baseOperating = incomeStatement.operatingIncome || {};\n        const modifiedOperating = {};\n        Object.keys(baseOperating).forEach(periodIndex => {\n          const index = parseInt(periodIndex);\n          if (index === 0) {\n            modifiedOperating[periodIndex] = baseOperating[periodIndex]; // Base year unchanged\n          } else {\n            // Apply margin improvement\n            const baseRevenueValue = baseRevenue[periodIndex] || 0;\n            const scenarioRevenue = modifiedRevenue[periodIndex] || 0;\n            const baseIncome = baseOperating[periodIndex] || 0;\n\n            if (baseRevenueValue > 0) {\n              const baseMargin = baseIncome / baseRevenueValue;\n              const adjustedMargin = baseMargin + (scenario.marginImprovement / 100);\n              modifiedOperating[periodIndex] = scenarioRevenue * adjustedMargin;\n            } else {\n              modifiedOperating[periodIndex] = baseIncome;\n            }\n          }\n        });\n\n        const scenarioData = {\n          ...data,\n          statements: {\n            ...data.statements,\n            incomeStatement: {\n              ...incomeStatement,\n              totalRevenue: modifiedRevenue,\n              operatingIncome: modifiedOperating\n            }\n          }\n        };\n\n        // Calculate DCF with scenario data\n        const dcfResult = calculateDCF(scenarioData);\n\n        return {\n          ...scenario,\n          ...dcfResult,\n          weightedValue: dcfResult.enterpriseValue * (scenario.probability / 100)\n        };\n      } catch (error) {\n        console.error('Scenario calculation error:', error);\n        return {\n          ...scenario,\n          enterpriseValue: 0,\n          equityValue: 0,\n          weightedValue: 0\n        };\n      }\n    });\n  }, [scenarios, data, calculateDCF]);\n\n  // Calculate probability-weighted average\n  const weightedAverageValue = scenarioResults.reduce((sum, result) => sum + result.weightedValue, 0);\n\n  const addScenario = () => {\n    const newScenario = {\n      name: `Scenario ${scenarios.length + 1}`,\n      probability: Math.max(0, 100 - scenarios.reduce((sum, s) => sum + s.probability, 0)),\n      revenueGrowth: 10,\n      marginImprovement: 0\n    };\n\n    onModelInputChange('scenario', 'scenarios', [...scenarios, newScenario]);\n    setShowAddForm(false);\n  };\n\n  const updateScenario = (index, field, value) => {\n    const updatedScenarios = scenarios.map((scenario, i) =>\n      i === index ? { ...scenario, [field]: value } : scenario\n    );\n    onModelInputChange('scenario', 'scenarios', updatedScenarios);\n  };\n\n  const deleteScenario = (index) => {\n    const updatedScenarios = scenarios.filter((_, i) => i !== index);\n    onModelInputChange('scenario', 'scenarios', updatedScenarios);\n  };\n\n  const ScenarioForm = ({ scenario, index }) => (\n    <div className=\"border rounded-lg p-4 bg-white\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Scenario Name\n          </label>\n          <input\n            type=\"text\"\n            value={scenario.name}\n            onChange={(e) => updateScenario(index, 'name', e.target.value)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"Enter scenario name\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Probability (%)\n          </label>\n          <input\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            value={scenario.probability}\n            onChange={(e) => updateScenario(index, 'probability', parseInt(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Revenue Growth (%)\n          </label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            value={scenario.revenueGrowth}\n            onChange={(e) => updateScenario(index, 'revenueGrowth', parseFloat(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Margin Change (%)\n          </label>\n          <input\n            type=\"number\"\n            step=\"0.1\"\n            value={scenario.marginImprovement}\n            onChange={(e) => updateScenario(index, 'marginImprovement', parseFloat(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n      </div>\n\n      <div className=\"flex justify-end mt-4 gap-2\">\n        <button\n          onClick={() => deleteScenario(index)}\n          className=\"px-3 py-1 text-red-600 hover:bg-red-50 rounded-lg transition-colors flex items-center gap-1\"\n        >\n          <Trash2 size={16} />\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with Add Button */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <p className=\"text-gray-600\">\n            Create and compare multiple financial scenarios with different assumptions and probabilities.\n          </p>\n        </div>\n        <button\n          onClick={() => setShowAddForm(true)}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n        >\n          <Plus size={16} />\n          Add Scenario\n        </button>\n      </div>\n\n      {/* Scenario Management */}\n      <div className=\"space-y-4\">\n        <h4 className=\"font-semibold text-lg\">Scenario Assumptions</h4>\n\n        {scenarios.map((scenario, index) => (\n          <ScenarioForm key={index} scenario={scenario} index={index} />\n        ))}\n\n        {showAddForm && (\n          <div className=\"border-2 border-dashed border-blue-300 rounded-lg p-4\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h5 className=\"font-medium\">Add New Scenario</h5>\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={addScenario}\n                  className=\"px-3 py-1 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n                >\n                  Add\n                </button>\n                <button\n                  onClick={() => setShowAddForm(false)}\n                  className=\"px-3 py-1 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Results Display */}\n      {scenarioResults.length > 0 && (\n        <div className=\"space-y-6\">\n          <h4 className=\"font-semibold text-lg\">Scenario Analysis Results</h4>\n\n          {/* Probability-Weighted Summary */}\n          <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6 border border-blue-200\">\n            <div className=\"flex items-center gap-2 mb-4\">\n              <BarChart3 size={20} className=\"text-blue-600\" />\n              <h5 className=\"font-semibold text-blue-800\">Probability-Weighted Valuation</h5>\n            </div>\n            <div className=\"text-3xl font-bold text-blue-800\">\n              {formatCurrency(weightedAverageValue)}\n            </div>\n            <p className=\"text-sm text-blue-600 mt-2\">\n              Expected value based on scenario probabilities\n            </p>\n          </div>\n\n          {/* Individual Scenario Results */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">\n            {scenarioResults.map((result, index) => (\n              <motion.div\n                key={index}\n                className=\"bg-white rounded-lg border p-4 hover:shadow-lg transition-shadow\"\n                whileHover={{ y: -2 }}\n              >\n                <div className=\"flex items-start justify-between mb-3\">\n                  <div>\n                    <h6 className=\"font-semibold text-gray-800\">{result.name}</h6>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span>{result.probability}% probability</span>\n                      {result.revenueGrowth > 15 ?\n                        <TrendingUp size={14} className=\"text-green-500\" /> :\n                        result.revenueGrowth < 5 ?\n                          <TrendingDown size={14} className=\"text-red-500\" /> :\n                          <Minus size={14} className=\"text-gray-500\" />\n                      }\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"space-y-3\">\n                  <div className=\"p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Enterprise Value</div>\n                    <div className=\"text-xl font-bold text-gray-800\">\n                      {formatCurrency(result.enterpriseValue)}\n                    </div>\n                  </div>\n\n                  <div className=\"text-xs space-y-1 text-gray-600\">\n                    <div className=\"flex justify-between\">\n                      <span>Revenue Growth:</span>\n                      <span className=\"font-medium\">{formatPercent(result.revenueGrowth)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Margin Change:</span>\n                      <span className={`font-medium ${result.marginImprovement >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {result.marginImprovement >= 0 ? '+' : ''}{formatPercent(result.marginImprovement)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Weighted Value:</span>\n                      <span className=\"font-medium\">{formatCurrency(result.weightedValue)}</span>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n\n          {/* Summary Statistics */}\n          <div className=\"bg-white rounded-lg border p-6\">\n            <h5 className=\"font-semibold mb-4\">Scenario Statistics</h5>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {formatCurrency(Math.max(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Best Case</div>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-red-600\">\n                  {formatCurrency(Math.min(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Worst Case</div>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  {formatCurrency(weightedAverageValue)}\n                </div>\n                <div className=\"text-sm text-gray-600\">Expected Value</div>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-gray-800\">\n                  {formatCurrency(Math.max(...scenarioResults.map(r => r.enterpriseValue)) - Math.min(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Value Range</div>\n              </div>\n            </div>\n\n            <div className=\"mt-4 pt-4 border-t\">\n              <div className=\"text-sm text-gray-600\">\n                <strong>Total Probability:</strong> {scenarios.reduce((sum, s) => sum + s.probability, 0)}%\n                {scenarios.reduce((sum, s) => sum + s.probability, 0) !== 100 && (\n                  <span className=\"text-orange-600 ml-2\">⚠ Probabilities should sum to 100%</span>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {scenarios.length === 0 && (\n        <div className=\"text-center py-12 text-gray-500\">\n          <BarChart3 size={48} className=\"mx-auto mb-4 opacity-50\" />\n          <p>No scenarios created yet.</p>\n          <p className=\"text-sm mt-2\">Click \"Add Scenario\" to get started with scenario modeling.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScenarioModeling;\n","import { motion } from 'framer-motion';\nimport { Activity, TrendingUp, TrendingDown, Settings, BarChart3, Plus, Minus } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst SensitivityAnalysis = ({ data, modelInputs, onModelInputChange, calculateDCF, formatCurrency, formatPercent }) => {\n  const [selectedVariable, setSelectedVariable] = useState(null);\n\n  const sensitivityConfig = modelInputs.sensitivity || {\n    variables: ['revenue', 'grossMargin', 'discountRate'],\n    ranges: {\n      revenue: { min: -20, max: 20 },\n      grossMargin: { min: -5, max: 5 },\n      discountRate: { min: 8, max: 15 }\n    }\n  };\n\n  // Variable definitions with display names and units\n  const variableDefinitions = {\n    revenue: {\n      name: 'Revenue Growth',\n      unit: '%',\n      description: 'Annual revenue growth rate',\n      baseValue: 15,\n      isPercentage: true\n    },\n    grossMargin: {\n      name: 'Gross Margin',\n      unit: '%',\n      description: 'Gross profit margin improvement',\n      baseValue: 45,\n      isPercentage: true\n    },\n    discountRate: {\n      name: 'Discount Rate (WACC)',\n      unit: '%',\n      description: 'Weighted average cost of capital',\n      baseValue: modelInputs.dcf?.discountRate || 10,\n      isPercentage: true\n    },\n    terminalGrowthRate: {\n      name: 'Terminal Growth Rate',\n      unit: '%',\n      description: 'Long-term growth rate assumption',\n      baseValue: modelInputs.dcf?.terminalGrowthRate || 2.5,\n      isPercentage: true\n    },\n    taxRate: {\n      name: 'Tax Rate',\n      unit: '%',\n      description: 'Corporate tax rate',\n      baseValue: modelInputs.dcf?.taxRate || 25,\n      isPercentage: true\n    }\n  };\n\n  // Calculate base case valuation\n  const baseValuation = useMemo(() => {\n    return calculateDCF();\n  }, [data, modelInputs, calculateDCF]);\n\n  // Generate sensitivity analysis data\n  const sensitivityResults = useMemo(() => {\n    const results = {};\n\n    sensitivityConfig.variables.forEach(variable => {\n      const range = sensitivityConfig.ranges[variable];\n      const variableDef = variableDefinitions[variable];\n\n      if (!range || !variableDef) return;\n\n      const steps = 9; // Number of data points\n      const stepSize = (range.max - range.min) / (steps - 1);\n      const dataPoints = [];\n\n      for (let i = 0; i < steps; i++) {\n        const value = range.min + (stepSize * i);\n\n        // Create modified DCF inputs based on variable type\n        let modifiedData = { ...data };\n        const dcfInputs = {\n          ...modelInputs.dcf,\n          [variable]: variableDef.isPercentage ? value : value\n        };\n\n        // For revenue and margin variables, we need to simulate the impact\n        if (variable === 'revenue' || variable === 'grossMargin') {\n          // Create a copy of the income statement with modified values\n          const incomeStatement = { ...data.statements.incomeStatement };\n\n          if (variable === 'revenue') {\n            // Apply revenue growth change across periods\n            const baseRevenue = incomeStatement.totalRevenue || {};\n            const modifiedRevenue = {};\n\n            Object.keys(baseRevenue).forEach(periodIndex => {\n              const index = parseInt(periodIndex);\n              if (index === 0) {\n                modifiedRevenue[periodIndex] = baseRevenue[periodIndex];\n              } else {\n                const growthRate = 1 + (value / 100);\n                modifiedRevenue[periodIndex] = baseRevenue[0] * Math.pow(growthRate, index);\n              }\n            });\n\n            incomeStatement.totalRevenue = modifiedRevenue;\n          }\n\n          if (variable === 'grossMargin') {\n            // Apply margin change to operating income\n            const baseOperating = incomeStatement.operatingIncome || {};\n            const baseRevenue = incomeStatement.totalRevenue || {};\n            const modifiedOperating = {};\n\n            Object.keys(baseOperating).forEach(periodIndex => {\n              const revenue = baseRevenue[periodIndex] || 0;\n              const originalIncome = baseOperating[periodIndex] || 0;\n              if (revenue > 0) {\n                const baseMargin = originalIncome / revenue;\n                const adjustedMargin = baseMargin + (value / 100);\n                modifiedOperating[periodIndex] = revenue * adjustedMargin;\n              } else {\n                modifiedOperating[periodIndex] = originalIncome;\n              }\n            });\n\n            incomeStatement.operatingIncome = modifiedOperating;\n          }\n\n          modifiedData = {\n            ...data,\n            statements: {\n              ...data.statements,\n              incomeStatement\n            }\n          };\n        }\n\n        // Use a temporary calculateDCF with modified inputs\n        const tempCalculateDCF = () => {\n          try {\n            const dcfParams = {\n              discountRate: dcfInputs.discountRate || 10,\n              terminalGrowthRate: dcfInputs.terminalGrowthRate || 2.5,\n              projectionYears: dcfInputs.projectionYears || 5,\n              taxRate: dcfInputs.taxRate || 25\n            };\n\n            const sourceData = modifiedData;\n            const operatingIncomeData = sourceData.statements.incomeStatement.operatingIncome || {};\n\n            // Extract operating incomes from object structure\n            const operatingIncomes = [];\n            Object.keys(operatingIncomeData).forEach(periodKey => {\n              const index = parseInt(periodKey);\n              if (index >= 0) {\n                operatingIncomes.push(operatingIncomeData[periodKey] || 0);\n              }\n            });\n\n            if (operatingIncomes.length === 0) return { enterpriseValue: 0, equityValue: 0 };\n\n            let presentValue = 0;\n            const discountFactor = 1 + (dcfParams.discountRate / 100);\n\n            // Use available periods for projections\n            operatingIncomes.forEach((income, index) => {\n              if (index > 0 && index <= dcfParams.projectionYears) {\n                const afterTaxIncome = income * (1 - dcfParams.taxRate / 100);\n                const pv = afterTaxIncome / Math.pow(discountFactor, index);\n                presentValue += pv;\n              }\n            });\n\n            const lastYearIncome = operatingIncomes[operatingIncomes.length - 1] || 0;\n            const terminalCashFlow = lastYearIncome * (1 + dcfParams.terminalGrowthRate / 100) * (1 - dcfParams.taxRate / 100);\n            const terminalValue = terminalCashFlow / ((dcfParams.discountRate - dcfParams.terminalGrowthRate) / 100);\n            const presentTerminalValue = terminalValue / Math.pow(discountFactor, dcfParams.projectionYears);\n\n            const enterpriseValue = presentValue + presentTerminalValue;\n\n            return {\n              enterpriseValue,\n              equityValue: enterpriseValue,\n              presentValueOperations: presentValue,\n              presentValueTerminal: presentTerminalValue,\n              terminalValue\n            };\n          } catch (error) {\n            console.error('DCF calculation error:', error);\n            return { enterpriseValue: 0, equityValue: 0 };\n          }\n        };\n\n        const result = tempCalculateDCF();\n\n        dataPoints.push({\n          variable: value,\n          valuation: result.enterpriseValue,\n          changeFromBase: ((result.enterpriseValue - baseValuation.enterpriseValue) / baseValuation.enterpriseValue) * 100\n        });\n      }\n\n      results[variable] = {\n        definition: variableDef,\n        range,\n        dataPoints\n      };\n    });\n\n    return results;\n  }, [data, modelInputs, sensitivityConfig, baseValuation, calculateDCF]);\n\n  // Tornado chart data (impact ranking)\n  const tornadoData = useMemo(() => {\n    return Object.entries(sensitivityResults).map(([variable, result]) => {\n      const maxImpact = Math.max(...result.dataPoints.map(d => Math.abs(d.changeFromBase)));\n      return {\n        variable,\n        definition: result.definition,\n        maxImpact,\n        positiveImpact: Math.max(...result.dataPoints.map(d => d.changeFromBase)),\n        negativeImpact: Math.min(...result.dataPoints.map(d => d.changeFromBase))\n      };\n    }).sort((a, b) => b.maxImpact - a.maxImpact);\n  }, [sensitivityResults]);\n\n  const updateSensitivityRange = (variable, field, value) => {\n    const updatedRanges = {\n      ...sensitivityConfig.ranges,\n      [variable]: {\n        ...sensitivityConfig.ranges[variable],\n        [field]: parseFloat(value)\n      }\n    };\n    onModelInputChange('sensitivity', 'ranges', updatedRanges);\n  };\n\n  const addVariable = (variableName) => {\n    if (!sensitivityConfig.variables.includes(variableName) && variableDefinitions[variableName]) {\n      const updatedVariables = [...sensitivityConfig.variables, variableName];\n      const updatedRanges = {\n        ...sensitivityConfig.ranges,\n        [variableName]: { min: -10, max: 10 }\n      };\n      onModelInputChange('sensitivity', 'variables', updatedVariables);\n      onModelInputChange('sensitivity', 'ranges', updatedRanges);\n    }\n  };\n\n  const removeVariable = (variableName) => {\n    const updatedVariables = sensitivityConfig.variables.filter(v => v !== variableName);\n    const { [variableName]: removed, ...updatedRanges } = sensitivityConfig.ranges;\n    onModelInputChange('sensitivity', 'variables', updatedVariables);\n    onModelInputChange('sensitivity', 'ranges', updatedRanges);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <p className=\"text-gray-600 mb-4\">\n            Analyze how changes in key variables impact enterprise valuation.\n            Higher sensitivity indicates greater risk and importance for due diligence.\n          </p>\n          <div className=\"flex items-center gap-4 text-sm\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 bg-blue-500 rounded\" />\n              <span>Base Case: {formatCurrency(baseValuation.enterpriseValue)}</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Activity size={14} />\n              <span>{sensitivityConfig.variables.length} variables analyzed</span>\n            </div>\n          </div>\n        </div>\n        <button\n          className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors flex items-center gap-2\"\n        >\n          <Settings size={16} />\n          Configure\n        </button>\n      </div>\n\n      {/* Tornado Chart */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <h4 className=\"font-semibold text-lg mb-4 flex items-center gap-2\">\n          <BarChart3 size={20} />\n          Impact Ranking (Tornado Chart)\n        </h4>\n\n        <div className=\"space-y-3\">\n          {tornadoData.map((item, index) => (\n            <div key={item.variable} className=\"relative\">\n              <div className=\"flex items-center justify-between mb-1\">\n                <span className=\"text-sm font-medium\">{index + 1}. {item.definition.name}</span>\n                <span className=\"text-xs text-gray-500\">±{item.maxImpact.toFixed(1)}%</span>\n              </div>\n\n              <div className=\"relative h-8 bg-gray-100 rounded\">\n                {/* Negative impact bar */}\n                <div\n                  className=\"absolute left-1/2 h-full bg-red-400 rounded-l\"\n                  style={{\n                    width: `${Math.abs(item.negativeImpact) / Math.max(Math.abs(item.negativeImpact), item.positiveImpact) * 50}%`,\n                    transform: 'translateX(-100%)'\n                  }}\n                />\n\n                {/* Positive impact bar */}\n                <div\n                  className=\"absolute left-1/2 h-full bg-green-400 rounded-r\"\n                  style={{\n                    width: `${item.positiveImpact / Math.max(Math.abs(item.negativeImpact), item.positiveImpact) * 50}%`\n                  }}\n                />\n\n                {/* Center line */}\n                <div className=\"absolute left-1/2 top-0 bottom-0 w-0.5 bg-gray-400 transform -translate-x-0.5\" />\n\n                {/* Labels */}\n                <div className=\"absolute inset-0 flex items-center justify-between px-2 text-xs font-medium text-white\">\n                  <span>{item.negativeImpact.toFixed(1)}%</span>\n                  <span>+{item.positiveImpact.toFixed(1)}%</span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Variable Configuration */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <h4 className=\"font-semibold text-lg mb-4\">Variable Configuration</h4>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {sensitivityConfig.variables.map(variable => {\n            const result = sensitivityResults[variable];\n            if (!result) return null;\n\n            return (\n              <div key={variable} className=\"border rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div>\n                    <h6 className=\"font-medium\">{result.definition.name}</h6>\n                    <p className=\"text-xs text-gray-500\">{result.definition.description}</p>\n                  </div>\n                  <button\n                    onClick={() => removeVariable(variable)}\n                    className=\"text-red-500 hover:bg-red-50 p-1 rounded\"\n                  >\n                    <Minus size={16} />\n                  </button>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-3 mb-3\">\n                  <div>\n                    <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                      Min Value ({result.definition.unit})\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={result.range.min}\n                      onChange={(e) => updateSensitivityRange(variable, 'min', e.target.value)}\n                      className=\"w-full px-2 py-1 border rounded text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                      Max Value ({result.definition.unit})\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={result.range.max}\n                      onChange={(e) => updateSensitivityRange(variable, 'max', e.target.value)}\n                      className=\"w-full px-2 py-1 border rounded text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n\n                {/* Mini chart */}\n                <div className=\"h-16 bg-gray-50 rounded p-2\">\n                  <div className=\"text-xs text-gray-500 mb-1\">Valuation Sensitivity</div>\n                  <div className=\"flex items-end justify-between h-8\">\n                    {result.dataPoints.map((point, index) => (\n                      <div\n                        key={index}\n                        className={`w-1 rounded-t ${\n                          point.changeFromBase > 0 ? 'bg-green-400' :\n                            point.changeFromBase < 0 ? 'bg-red-400' : 'bg-blue-400'\n                        }`}\n                        style={{\n                          height: `${Math.abs(point.changeFromBase) / 50 * 100}%`,\n                          minHeight: '2px'\n                        }}\n                        title={`${point.variable}${result.definition.unit}: ${formatCurrency(point.valuation)}`}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n\n          {/* Add Variable */}\n          <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 flex items-center justify-center\">\n            <div className=\"text-center\">\n              <Plus size={24} className=\"mx-auto mb-2 text-gray-400\" />\n              <p className=\"text-sm text-gray-500 mb-3\">Add Variable</p>\n              <div className=\"space-y-2\">\n                {Object.keys(variableDefinitions)\n                  .filter(v => !sensitivityConfig.variables.includes(v))\n                  .map(variable => (\n                    <button\n                      key={variable}\n                      onClick={() => addVariable(variable)}\n                      className=\"block w-full px-3 py-1 text-xs bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors\"\n                    >\n                      {variableDefinitions[variable].name}\n                    </button>\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Detailed Analysis */}\n      {selectedVariable && sensitivityResults[selectedVariable] && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">\n            Detailed Analysis: {sensitivityResults[selectedVariable].definition.name}\n          </h4>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <div>\n              <h6 className=\"font-medium mb-3\">Data Points</h6>\n              <div className=\"space-y-2 max-h-64 overflow-y-auto\">\n                {sensitivityResults[selectedVariable].dataPoints.map((point, index) => (\n                  <div key={index} className=\"flex justify-between items-center text-sm p-2 bg-gray-50 rounded\">\n                    <span>{point.variable}{sensitivityResults[selectedVariable].definition.unit}</span>\n                    <span className=\"font-medium\">{formatCurrency(point.valuation)}</span>\n                    <span\n                      className={`font-medium ${\n                        point.changeFromBase > 0 ? 'text-green-600' :\n                          point.changeFromBase < 0 ? 'text-red-600' : 'text-gray-600'\n                      }`}\n                    >\n                      {point.changeFromBase > 0 ? '+' : ''}{point.changeFromBase.toFixed(1)}%\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div>\n              <h6 className=\"font-medium mb-3\">Key Statistics</h6>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Range Impact:</span>\n                  <span className=\"font-medium\">\n                    ±{Math.max(...sensitivityResults[selectedVariable].dataPoints.map(d => Math.abs(d.changeFromBase))).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Max Upside:</span>\n                  <span className=\"font-medium text-green-600\">\n                    +{Math.max(...sensitivityResults[selectedVariable].dataPoints.map(d => d.changeFromBase)).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Max Downside:</span>\n                  <span className=\"font-medium text-red-600\">\n                    {Math.min(...sensitivityResults[selectedVariable].dataPoints.map(d => d.changeFromBase)).toFixed(1)}%\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SensitivityAnalysis;\n","import { motion } from 'framer-motion';\nimport { Target, BarChart3, Activity, DollarSign, Users, Zap } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nimport AdvancedDCF from './AdvancedDCF.jsx';\nimport ComparableAnalysis from './ComparableAnalysis.jsx';\nimport MonteCarloSimulation from './MonteCarloSimulation.jsx';\nimport ScenarioModeling from './ScenarioModeling.jsx';\nimport SensitivityAnalysis from './SensitivityAnalysis.jsx';\n\nconst ModelingTools = ({ data, adjustedValues, onDataChange }) => {\n  const [activeModel, setActiveModel] = useState('dcf');\n  const [modelInputs, setModelInputs] = useState({\n    dcf: {\n      discountRate: 10,\n      terminalGrowthRate: 2.5,\n      projectionYears: 5,\n      terminalValueMultiple: 10,\n      taxRate: 25,\n      sharesOutstanding: 1000,\n      workingCapital: {\n        receivablesDays: 45,\n        inventoryDays: 60,\n        payablesDays: 30,\n        receivablesGrowth: 2,\n        inventoryGrowth: 1.5,\n        payablesGrowth: 1.8\n      },\n      capex: {\n        capexAsPercentOfRevenue: 3.5,\n        depreciationRate: 7,\n        maintenanceCapex: 2.0\n      }\n    },\n    ratios: {\n      compareToIndustry: true,\n      industryAverages: {\n        grossMargin: 45,\n        operatingMargin: 15,\n        netMargin: 8,\n        currentRatio: 2.1,\n        debtToEquity: 0.5\n      }\n    },\n    sensitivity: {\n      variables: ['revenue', 'grossMargin', 'discountRate'],\n      ranges: {\n        revenue: { min: -20, max: 20 },\n        grossMargin: { min: -5, max: 5 },\n        discountRate: { min: 8, max: 15 }\n      }\n    },\n    scenario: {\n      scenarios: [\n        { name: 'Base Case', probability: 50, revenueGrowth: 15, marginImprovement: 0 },\n        { name: 'Bull Case', probability: 25, revenueGrowth: 25, marginImprovement: 2 },\n        { name: 'Bear Case', probability: 25, revenueGrowth: 5, marginImprovement: -2 }\n      ]\n    }\n  });\n\n  // Calculate financial metrics from the spreadsheet data\n  const calculatedMetrics = useMemo(() => {\n    const statements = data.statements.incomeStatement;\n    const periods = data.periods;\n\n    const metrics = {\n      revenue: [],\n      grossProfit: [],\n      operatingIncome: [],\n      margins: {\n        gross: [],\n        operating: [],\n        net: []\n      },\n      growth: {\n        revenue: [],\n        operating: []\n      }\n    };\n\n    periods.forEach((_, index) => {\n      // Revenue metrics - Use adjusted values for latest period when available\n      const isLatestPeriod = index === periods.length - 1;\n      const revenue = isLatestPeriod && adjustedValues?.totalRevenue\n        ? adjustedValues.totalRevenue\n        : statements.totalRevenue?.[index] || 0;\n      const totalCOGS = isLatestPeriod && adjustedValues?.totalCostOfGoodsSold\n        ? adjustedValues.totalCostOfGoodsSold\n        : statements.totalCostOfGoodsSold?.[index] || 0;\n      const grossProfit = isLatestPeriod && adjustedValues?.grossProfit\n        ? adjustedValues.grossProfit\n        : statements.grossProfit?.[index] || (revenue - totalCOGS);\n      const operatingIncome = isLatestPeriod && adjustedValues?.operatingIncome\n        ? adjustedValues.operatingIncome\n        : statements.operatingIncome?.[index] || 0;\n\n      metrics.revenue.push(revenue);\n      metrics.grossProfit.push(grossProfit);\n      metrics.operatingIncome.push(operatingIncome);\n\n      // Margin calculations\n      metrics.margins.gross.push(revenue ? (grossProfit / revenue) * 100 : 0);\n      metrics.margins.operating.push(revenue ? (operatingIncome / revenue) * 100 : 0);\n\n      // Growth calculations\n      if (index > 0) {\n        const prevRevenue = statements.totalRevenue?.[index - 1] || 0;\n        const prevOperating = statements.operatingIncome?.[index - 1] || 0;\n\n        metrics.growth.revenue.push(prevRevenue ? ((revenue - prevRevenue) / prevRevenue) * 100 : 0);\n        metrics.growth.operating.push(prevOperating ? ((operatingIncome - prevOperating) / prevOperating) * 100 : 0);\n      }\n    });\n\n    return metrics;\n  }, [data]);\n\n  // DCF Calculation - Enhanced to work with scenario data\n  const calculateDCF = (inputData = null) => {\n    const { discountRate, terminalGrowthRate, projectionYears, taxRate } = modelInputs.dcf;\n    const sourceData = inputData || data;\n\n    // Use either scenario data or calculated metrics\n    let operatingIncomes;\n    if (inputData) {\n      // For scenario data, extract operating incomes directly\n      operatingIncomes = [];\n      sourceData.periods.forEach((_, index) => {\n        if (index > 0 && index <= projectionYears) {\n          operatingIncomes.push(sourceData.statements.incomeStatement.operatingIncome?.[index] || 0);\n        }\n      });\n    } else {\n      // For regular calculation, use calculated metrics\n      operatingIncomes = calculatedMetrics.operatingIncome.slice(1, projectionYears + 1);\n    }\n\n    if (operatingIncomes.length === 0) return { enterpriseValue: 0, equityValue: 0, sharePrice: 0 };\n\n    let presentValue = 0;\n    const discountFactor = 1 + (discountRate / 100);\n\n    // Calculate present value of cash flows\n    operatingIncomes.forEach((income, index) => {\n      const afterTaxIncome = income * (1 - taxRate / 100);\n      const pv = afterTaxIncome / Math.pow(discountFactor, index + 1);\n      presentValue += pv;\n    });\n\n    // Terminal value\n    const lastYearIncome = operatingIncomes[operatingIncomes.length - 1] || 0;\n    const terminalCashFlow = lastYearIncome * (1 + terminalGrowthRate / 100) * (1 - taxRate / 100);\n    const terminalValue = terminalCashFlow / ((discountRate - terminalGrowthRate) / 100);\n    const presentTerminalValue = terminalValue / Math.pow(discountFactor, projectionYears);\n\n    const enterpriseValue = presentValue + presentTerminalValue;\n\n    return {\n      enterpriseValue,\n      equityValue: enterpriseValue, // Simplified - would subtract net debt\n      presentValueOperations: presentValue,\n      presentValueTerminal: presentTerminalValue,\n      terminalValue\n    };\n  };\n\n  const dcfResults = calculateDCF();\n\n  const modelTypes = [\n    { id: 'dcf', label: 'DCF Valuation', icon: DollarSign, description: 'Discounted Cash Flow analysis' },\n    { id: 'ratios', label: 'Ratio Analysis', icon: BarChart3, description: 'Financial ratio comparison' },\n    { id: 'sensitivity', label: 'Sensitivity Analysis', icon: Activity, description: 'Variable impact analysis' },\n    { id: 'scenario', label: 'Scenario Modeling', icon: Target, description: 'Multi-scenario projections' },\n    { id: 'comparable', label: 'Comparable Analysis', icon: Users, description: 'Market-based valuation' },\n    { id: 'montecarlo', label: 'Monte Carlo', icon: Zap, description: 'Probabilistic risk analysis' }\n  ];\n\n  const updateModelInput = (modelType, field, value) => {\n    setModelInputs(prev => ({\n      ...prev,\n      [modelType]: {\n        ...prev[modelType],\n        [field]: value\n      }\n    }));\n  };\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value * 1000); // Convert from thousands\n  };\n\n  const formatPercent = (value) => {\n    return `${value.toFixed(1)}%`;\n  };\n\n  return (\n    <div className=\"h-full bg-gray-900 text-white p-6\">\n      {/* Streamlined Model Selection */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div>\n            <h2 className=\"text-xl font-semibold text-white\">Financial Modeling</h2>\n            <p className=\"text-gray-400 text-sm mt-1\">Select a modeling approach to analyze your financial data</p>\n          </div>\n        </div>\n\n        <div className=\"flex flex-wrap gap-2 mb-6\">\n          {modelTypes.map((type) => {\n            const Icon = type.icon;\n            return (\n              <button\n                key={type.id}\n                onClick={() => setActiveModel(type.id)}\n                className={`${\n                  activeModel === type.id\n                    ? 'bg-blue-600 text-white border-blue-500 shadow-lg'\n                    : 'bg-gray-800 text-gray-300 border-gray-700 hover:bg-gray-700 hover:text-white hover:border-gray-600'\n                } flex items-center gap-3 px-4 py-3 rounded-lg border transition-all duration-200`}\n              >\n                <Icon size={18} className={activeModel === type.id ? 'text-white' : 'text-blue-400'} />\n                <span className=\"font-medium\">{type.label}</span>\n              </button>\n            );\n          })}\n        </div>\n\n        {/* Active Model Description */}\n        <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\n          <div className=\"flex items-center gap-3\">\n            {React.createElement(modelTypes.find(t => t.id === activeModel)?.icon, {\n              size: 20,\n              className: 'text-blue-400'\n            })}\n            <div>\n              <h3 className=\"font-medium text-white\">\n                {modelTypes.find(t => t.id === activeModel)?.label}\n              </h3>\n              <p className=\"text-gray-400 text-sm\">\n                {modelTypes.find(t => t.id === activeModel)?.description}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Model Content */}\n      <div>\n        {activeModel === 'dcf' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <DollarSign size={20} className=\"text-blue-400\" />\n              DCF Valuation Model\n            </h3>\n\n            <AdvancedDCF\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'ratios' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <BarChart3 size={20} />\n              Financial Ratio Analysis\n            </h3>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {/* Profitability Ratios */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Profitability Ratios</h4>\n                <div className=\"space-y-3\">\n                  {calculatedMetrics.margins.gross.map((margin, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Gross Margin:</span>\n                      <span className=\"font-medium\">{formatPercent(margin)}</span>\n                    </div>\n                  ))}\n                  {calculatedMetrics.margins.operating.map((margin, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Operating Margin:</span>\n                      <span className=\"font-medium\">{formatPercent(margin)}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Growth Ratios */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Growth Rates</h4>\n                <div className=\"space-y-3\">\n                  {calculatedMetrics.growth.revenue.map((growth, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Revenue Growth:</span>\n                      <span className={`font-medium ${growth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {formatPercent(growth)}\n                      </span>\n                    </div>\n                  ))}\n                  {calculatedMetrics.growth.operating.map((growth, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Operating Growth:</span>\n                      <span className={`font-medium ${growth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {formatPercent(growth)}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Industry Comparison */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Industry Comparison</h4>\n                <div className=\"space-y-3\">\n                  <div className=\"p-3 bg-gray-700 rounded-lg\">\n                    <div className=\"text-xs text-gray-400 uppercase tracking-wide\">Industry Avg</div>\n                    <div className=\"text-sm\">Gross Margin: {formatPercent(modelInputs.ratios.industryAverages.grossMargin)}</div>\n                    <div className=\"text-sm\">Operating Margin: {formatPercent(modelInputs.ratios.industryAverages.operatingMargin)}</div>\n                    <div className=\"text-sm\">Net Margin: {formatPercent(modelInputs.ratios.industryAverages.netMargin)}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeModel === 'sensitivity' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <Activity size={20} />\n              Sensitivity Analysis\n            </h3>\n\n            <SensitivityAnalysis\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              calculateDCF={calculateDCF}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'scenario' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <Target size={20} />\n              Scenario Modeling\n            </h3>\n\n            <ScenarioModeling\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              calculateDCF={calculateDCF}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'comparable' && (\n          <div className=\"p-6\">\n            <ComparableAnalysis\n              data={data}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'montecarlo' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2\">\n              <Zap size={20} />\n              Monte Carlo Simulation\n            </h3>\n\n            <MonteCarloSimulation\n              data={data}\n              onDataChange={onDataChange}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ModelingTools;\n","import { motion } from 'framer-motion';\nimport {\n  Zap, BarChart3, TrendingUp, Target, Settings,\n  Play, Download, RefreshCw, AlertTriangle, CheckCircle,\n  Activity, DollarSign, Percent, Calculator\n} from 'lucide-react';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { ComposedChart, Bar, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ScatterChart, Scatter } from 'recharts';\n\nimport { monteCarloEngine } from '../../services/monteCarloEngine.js';\n\nconst MonteCarloIntegrationHub = ({\n  data,\n  dcfResults,\n  lboResults,\n  financialModel,\n  scenarioResults,\n  onDataChange\n}) => {\n  const [activeAnalysis, setActiveAnalysis] = useState('unified');\n  const [simulationSettings, setSimulationSettings] = useState({\n    iterations: 10000,\n    confidenceLevel: 0.95,\n    correlationsEnabled: true,\n    crossModelAnalysis: true,\n    riskMetrics: ['var', 'cvar', 'downside']\n  });\n\n  const [integratedResults, setIntegratedResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  const formatCurrency = useCallback((value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    return `${(value * 100).toFixed(1)}%`;\n  }, []);\n\n  // Cross-model Monte Carlo analysis\n  const runIntegratedSimulation = useCallback(async() => {\n    setIsRunning(true);\n    setProgress(0);\n\n    try {\n      const results = {\n        dcf: null,\n        lbo: null,\n        correlation: null,\n        portfolio: null,\n        riskMetrics: null\n      };\n\n      // DCF Monte Carlo (if DCF results available)\n      if (dcfResults && simulationSettings.crossModelAnalysis) {\n        const dcfDistributions = {\n          revenueGrowthRate: {\n            type: 'normal',\n            parameters: { mean: 0.05, stdDev: 0.02 },\n            enabled: true\n          },\n          fcfMargin: {\n            type: 'triangular',\n            parameters: { min: 0.10, mode: 0.15, max: 0.20 },\n            enabled: true\n          },\n          wacc: {\n            type: 'normal',\n            parameters: { mean: 0.10, stdDev: 0.015 },\n            enabled: true\n          },\n          terminalGrowthRate: {\n            type: 'uniform',\n            parameters: { min: 0.02, max: 0.03 },\n            enabled: true\n          }\n        };\n\n        const dcfInputs = {\n          currentRevenue: data?.statements?.incomeStatement?.totalRevenue?.[0] * 1000 || 1000000,\n          currentPrice: 100,\n          sharesOutstanding: 1000000,\n          ...dcfResults\n        };\n\n        setProgress(25);\n        results.dcf = await monteCarloEngine.runDCFSimulation(\n          dcfInputs,\n          dcfDistributions,\n          {\n            iterations: simulationSettings.iterations,\n            confidenceLevel: simulationSettings.confidenceLevel,\n            onProgress: (p) => setProgress(25 + p * 0.25)\n          }\n        );\n      }\n\n      // LBO Monte Carlo (if LBO results available)\n      if (lboResults && simulationSettings.crossModelAnalysis) {\n        const lboDistributions = {\n          ebitdaGrowthRate: {\n            type: 'normal',\n            parameters: { mean: 0.06, stdDev: 0.02 },\n            enabled: true\n          },\n          exitMultiple: {\n            type: 'triangular',\n            parameters: { min: 8.0, mode: 10.0, max: 12.0 },\n            enabled: true\n          },\n          leverageRatio: {\n            type: 'normal',\n            parameters: { mean: 5.5, stdDev: 0.5 },\n            enabled: true\n          }\n        };\n\n        setProgress(50);\n        results.lbo = await monteCarloEngine.runLBOSimulation(\n          lboResults.inputs || {},\n          lboDistributions,\n          {\n            iterations: simulationSettings.iterations,\n            confidenceLevel: simulationSettings.confidenceLevel,\n            onProgress: (p) => setProgress(50 + p * 0.25)\n          }\n        );\n      }\n\n      // Cross-model correlation analysis\n      if (results.dcf && results.lbo && simulationSettings.correlationsEnabled) {\n        setProgress(75);\n        results.correlation = calculateCrossModelCorrelations(results.dcf, results.lbo);\n      }\n\n      // Portfolio-level risk metrics\n      setProgress(90);\n      results.riskMetrics = calculateIntegratedRiskMetrics(results);\n\n      // Generate scenario-weighted results\n      if (scenarioResults && scenarioResults.scenarios) {\n        results.portfolio = generatePortfolioAnalysis(results, scenarioResults);\n      }\n\n      setProgress(100);\n      setIntegratedResults(results);\n\n      // Save results\n      if (onDataChange) {\n        onDataChange({\n          monteCarloIntegrated: {\n            settings: simulationSettings,\n            results,\n            timestamp: new Date().toISOString()\n          }\n        });\n      }\n\n    } catch (error) {\n      console.error('Integrated Monte Carlo simulation error:', error);\n      alert(`Simulation error: ${error.message}`);\n    } finally {\n      setIsRunning(false);\n      setProgress(0);\n    }\n  }, [dcfResults, lboResults, scenarioResults, simulationSettings, data, onDataChange]);\n\n  const calculateCrossModelCorrelations = useCallback((dcfResults, lboResults) => {\n    // Calculate correlations between DCF and LBO outcomes\n    const dcfValues = dcfResults.simulations?.map(s => s.pricePerShare) || [];\n    const lboValues = lboResults.simulations?.map(s => s.irr) || [];\n\n    if (dcfValues.length === 0 || lboValues.length === 0) return null;\n\n    const correlation = pearsonCorrelation(dcfValues, lboValues);\n\n    return {\n      dcfLboCorrelation: correlation,\n      interpretation: Math.abs(correlation) > 0.7 ? 'Strong' :\n        Math.abs(correlation) > 0.4 ? 'Moderate' : 'Weak',\n      riskImplication: correlation > 0 ? 'Aligned Risk' : 'Hedged Risk'\n    };\n  }, []);\n\n  const pearsonCorrelation = (x, y) => {\n    const n = Math.min(x.length, y.length);\n    if (n === 0) return 0;\n\n    const sumX = x.slice(0, n).reduce((a, b) => a + b, 0);\n    const sumY = y.slice(0, n).reduce((a, b) => a + b, 0);\n    const sumXY = x.slice(0, n).reduce((sum, xi, i) => sum + xi * y[i], 0);\n    const sumXX = x.slice(0, n).reduce((sum, xi) => sum + xi * xi, 0);\n    const sumYY = y.slice(0, n).reduce((sum, yi) => sum + yi * yi, 0);\n\n    const numerator = n * sumXY - sumX * sumY;\n    const denominator = Math.sqrt((n * sumXX - sumX * sumX) * (n * sumYY - sumY * sumY));\n\n    return denominator === 0 ? 0 : numerator / denominator;\n  };\n\n  const calculateIntegratedRiskMetrics = useCallback((results) => {\n    const metrics = {};\n\n    if (results.dcf?.analysis) {\n      metrics.dcf = {\n        var95: results.dcf.analysis.percentiles?.pricePerShare?.p5 || 0,\n        expectedValue: results.dcf.analysis.summary?.mean || 0,\n        volatility: results.dcf.analysis.summary?.standardDeviation || 0\n      };\n    }\n\n    if (results.lbo?.analysis) {\n      metrics.lbo = {\n        var95: results.lbo.analysis.percentiles?.irr?.p5 || 0,\n        expectedValue: results.lbo.analysis.summary?.mean || 0,\n        volatility: results.lbo.analysis.summary?.standardDeviation || 0\n      };\n    }\n\n    return metrics;\n  }, []);\n\n  const generatePortfolioAnalysis = useCallback((results, scenarios) => {\n    // Weight Monte Carlo results by scenario probabilities\n    const weightedMetrics = scenarios.scenarios.reduce((acc, scenario) => {\n      const weight = scenario.probability / 100;\n\n      if (results.dcf) {\n        acc.dcfWeighted = (acc.dcfWeighted || 0) +\n          (results.dcf.analysis?.summary?.mean || 0) * weight;\n      }\n\n      if (results.lbo) {\n        acc.lboWeighted = (acc.lboWeighted || 0) +\n          (results.lbo.analysis?.summary?.mean || 0) * weight;\n      }\n\n      return acc;\n    }, {});\n\n    return weightedMetrics;\n  }, []);\n\n  const analysisOptions = [\n    { id: 'unified', label: 'Unified Analysis', icon: Zap },\n    { id: 'dcf', label: 'DCF Monte Carlo', icon: TrendingUp },\n    { id: 'lbo', label: 'LBO Monte Carlo', icon: Target },\n    { id: 'correlation', label: 'Cross-Model Risk', icon: Activity }\n  ];\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Zap className=\"text-purple-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Monte Carlo Integration Hub</h2>\n            <p className=\"text-gray-600\">Cross-model risk analysis & unified simulations</p>\n          </div>\n        </div>\n\n        <div className=\"flex space-x-3\">\n          <motion.button\n            onClick={runIntegratedSimulation}\n            disabled={isRunning}\n            className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n              isRunning\n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                : 'bg-purple-600 hover:bg-purple-700 text-white'\n            }`}\n            whileHover={!isRunning ? { scale: 1.02 } : {}}\n            whileTap={!isRunning ? { scale: 0.98 } : {}}\n          >\n            <Play size={18} />\n            <span>{isRunning ? 'Running...' : 'Run Integrated Simulation'}</span>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Progress Bar */}\n      {isRunning && (\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-medium text-gray-700\">Simulation Progress</span>\n            <span className=\"text-sm text-gray-500\">{progress.toFixed(0)}%</span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div\n              className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${progress}%` }}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Simulation Settings */}\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n        <h3 className=\"font-semibold mb-3\">Simulation Settings</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Iterations</label>\n            <input\n              type=\"number\"\n              value={simulationSettings.iterations}\n              onChange={(e) => setSimulationSettings(prev => ({\n                ...prev,\n                iterations: parseInt(e.target.value) || 10000\n              }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Confidence Level</label>\n            <select\n              value={simulationSettings.confidenceLevel}\n              onChange={(e) => setSimulationSettings(prev => ({\n                ...prev,\n                confidenceLevel: parseFloat(e.target.value)\n              }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            >\n              <option value={0.90}>90%</option>\n              <option value={0.95}>95%</option>\n              <option value={0.99}>99%</option>\n            </select>\n          </div>\n\n          <div className=\"flex items-end\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={simulationSettings.correlationsEnabled}\n                onChange={(e) => setSimulationSettings(prev => ({\n                  ...prev,\n                  correlationsEnabled: e.target.checked\n                }))}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Cross-Model Correlations</span>\n            </label>\n          </div>\n\n          <div className=\"flex items-end\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={simulationSettings.crossModelAnalysis}\n                onChange={(e) => setSimulationSettings(prev => ({\n                  ...prev,\n                  crossModelAnalysis: e.target.checked\n                }))}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Cross-Model Analysis</span>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Analysis Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {analysisOptions.map((option) => {\n            const Icon = option.icon;\n            return (\n              <button\n                key={option.id}\n                onClick={() => setActiveAnalysis(option.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeAnalysis === option.id\n                    ? 'border-purple-500 text-purple-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{option.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Results Display */}\n      {integratedResults ? (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"space-y-6\"\n        >\n          {/* Unified Analysis */}\n          {activeAnalysis === 'unified' && (\n            <div className=\"space-y-6\">\n              {/* Key Metrics Summary */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                {integratedResults.dcf && (\n                  <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-blue-600\">\n                      {formatCurrency(integratedResults.dcf.analysis?.summary?.mean || 0)}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">DCF Expected Value</div>\n                  </div>\n                )}\n\n                {integratedResults.lbo && (\n                  <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-green-600\">\n                      {formatPercent(integratedResults.lbo.analysis?.summary?.mean || 0)}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">LBO Expected IRR</div>\n                  </div>\n                )}\n\n                {integratedResults.correlation && (\n                  <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-purple-600\">\n                      {(integratedResults.correlation.dcfLboCorrelation || 0).toFixed(2)}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">DCF-LBO Correlation</div>\n                  </div>\n                )}\n\n                <div className=\"bg-orange-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-orange-600\">\n                    {simulationSettings.iterations.toLocaleString()}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Simulations Run</div>\n                </div>\n              </div>\n\n              {/* Risk Correlation Matrix */}\n              {integratedResults.correlation && (\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Cross-Model Risk Analysis</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Correlation Strength</div>\n                      <div className=\"text-2xl font-bold text-purple-600\">\n                        {integratedResults.correlation.interpretation}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">\n                        {integratedResults.correlation.riskImplication}\n                      </div>\n                    </div>\n\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Risk Diversification</div>\n                      <div className=\"text-2xl font-bold text-blue-600\">\n                        {Math.abs(integratedResults.correlation.dcfLboCorrelation) < 0.5 ? 'High' : 'Low'}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">Portfolio benefit</div>\n                    </div>\n\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Confidence Level</div>\n                      <div className=\"text-2xl font-bold text-green-600\">\n                        {formatPercent(simulationSettings.confidenceLevel)}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">Statistical confidence</div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Portfolio-Level Insights */}\n              {integratedResults.portfolio && (\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Portfolio-Weighted Analysis</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Scenario-Weighted DCF</div>\n                      <div className=\"text-xl font-bold text-blue-600\">\n                        {formatCurrency(integratedResults.portfolio.dcfWeighted || 0)}\n                      </div>\n                    </div>\n\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Scenario-Weighted LBO IRR</div>\n                      <div className=\"text-xl font-bold text-green-600\">\n                        {formatPercent(integratedResults.portfolio.lboWeighted || 0)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Individual Analysis Views */}\n          {activeAnalysis === 'dcf' && integratedResults.dcf && (\n            <div className=\"bg-gray-50 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">DCF Monte Carlo Results</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-blue-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.summary?.mean || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Mean Value</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-green-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.percentiles?.pricePerShare?.p95 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">95th Percentile</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-red-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.percentiles?.pricePerShare?.p5 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">5th Percentile</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-purple-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.summary?.standardDeviation || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Std Deviation</div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeAnalysis === 'lbo' && integratedResults.lbo && (\n            <div className=\"bg-gray-50 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">LBO Monte Carlo Results</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-green-600\">\n                    {formatPercent(integratedResults.lbo.analysis?.summary?.mean || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Mean IRR</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-blue-600\">\n                    {formatPercent(integratedResults.lbo.analysis?.percentiles?.irr?.p95 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">95th Percentile IRR</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-red-600\">\n                    {formatPercent(integratedResults.lbo.analysis?.percentiles?.irr?.p5 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">5th Percentile IRR</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-purple-600\">\n                    {((integratedResults.lbo.analysis?.percentiles?.moic?.p95 || 0) +\n                      (integratedResults.lbo.analysis?.percentiles?.moic?.p5 || 0)) / 2}x\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Avg MOIC</div>\n                </div>\n              </div>\n            </div>\n          )}\n        </motion.div>\n      ) : (\n        <div className=\"text-center py-12 text-gray-500\">\n          <Zap size={48} className=\"mx-auto mb-4 opacity-50\" />\n          <p>Configure settings and run integrated simulation to see cross-model analysis</p>\n          <p className=\"text-sm mt-2\">\n            {!dcfResults && !lboResults ? 'Run DCF and/or LBO analysis first to enable Monte Carlo integration' :\n              'Ready to run comprehensive Monte Carlo analysis'}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MonteCarloIntegrationHub;\n"],"names":["accessibilityTester","constructor","options","this","rules","enabled","tags","runOnly","reporter","violations","lastTestResults","runTests","element","document","testOptions","results","axeCore","run","logResults","storeResults","error","testFinancialComponent","selector","componentType","querySelector","Error","config","spreadsheet","chart","calculator","label","modal","testKeyboardNavigation","focusableElements","getFocusableElements","tabOrderIssues","previousTabIndex","forEach","index","tabIndex","push","tagName","id","position","issue","focusVisibilityIssues","styles","window","getComputedStyle","hasOutline","outline","hasBoxShadow","boxShadow","hasBackground","backgroundColor","className","focusableElementsCount","length","passed","testColorContrast","textElements","querySelectorAll","contrastIssues","textColor","color","contrast","calculateContrastRatio","fontSize","parseInt","fontWeight","requiredRatio","toFixed","required","text","textContent","substring","totalElements","testFormAccessibility","forms","formIssues","form","formIndex","input","issues","hasAssociatedLabel","hasRequiredIndication","getAttribute","hasErrorMessage","isFinancialInput","autocomplete","inputType","type","inputId","inputName","name","totalForms","generateReport","passes","incomplete","inapplicable","summary","timestamp","Date","toISOString","totalChecks","score","calculateAccessibilityScore","map","violation","impact","description","help","helpUrl","nodes","recommendations","generateRecommendations","financialSpecific","getFinancialAccessibilityInsights","totalTests","impactWeights","critical","serious","moderate","minor","violationScore","reduce","maxPossibleScore","Math","max","category","priority","solution","financialContext","insights","component","recommendation","Array","from","join","ariaLabel","ariaLabelledby","closest","ariaRequired","requiredAttr","hasAttribute","hasRequiredText","hasRequiredTextIndicator","getAssociatedLabel","includes","toLowerCase","ariaDescribedby","errorElement","getElementById","some","color1","color2","rgb1","parseColor","rgb2","l1","getLuminance","l2","min","match","r","g","b","rs","gs","bs","c","pow","reportViolations","node","reportData","now","url","location","href","existingReports","JSON","parse","localStorage","getItem","splice","setItem","stringify","webVitalsData","CLS","FID","FCP","LCP","TTFB","INP","initializePerformanceMonitoring","clsValue","clsEntries","PerformanceObserver","entryList","entry","getEntries","hadRecentInput","value","reportWebVital","observe","buffered","processingStart","startTime","interactionId","duration","processingEnd","entries","lastEntry","navigationEntry","performance","getEntriesByType","responseStart","requestStart","initializeWebVitals","mark","trackComponentRender","componentName","renderTime","measure","reportCustomMetric","trackCalculationPerformance","calculationType","complexity","addEventListener","setTimeout","navigation","timings","dns","domainLookupEnd","domainLookupStart","tcp","connectEnd","connectStart","ssl","secureConnectionStart","ttfb","download","responseEnd","domProcessing","domComplete","domLoading","totalLoadTime","loadEventEnd","fetchStart","sendToAnalytics","userAgent","navigator","connection","getConnectionInfo","list","initiatorType","resourceData","size","transferSize","encodedBodySize","cached","reportResourceTiming","entryTypes","interactionCount","totalInteractionTime","eventType","event","requestAnimationFrame","interactionTime","target","passive","setInterval","count","averageTime","trackUserInteractions","metric","round","data","checkPerformanceBudgets","Object","budget","overBy","effectiveType","downlink","rtt","analyticsData","sessionId","getSessionId","userId","getUserId","existingData","sendAnalyticsBatch","queuedData","gtag","item","custom_parameter","removeItem","sessionStorage","random","toString","substr","reportPerformanceMetric","getPerformanceDashboardData","accessibilityHistory","analyticsQueue","recentAccessibility","slice","avgScore","sum","avgViolations","performanceMetrics","filter","webVitalMetrics","webVitals","budgetViolations","accessibility","currentScore","averageScore","averageViolations","history","trends","scoreImproving","recentMetrics","webVitalHistory","useFinancialAccessibility","autoTest","testInterval","onViolations","onSuccess","setResults","useState","isLoading","setIsLoading","setViolations","setScore","lastTestTime","setLastTestTime","elementRef","useRef","intervalRef","useCallback","async","targetElement","current","testResults","navResults","contrastResults","formResults","report","useEffect","runAutoTest","clearInterval","useAccessibility","testFinancialFeatures","keyboardNav","colorContrast","formAccessibility","useAccessibilityMonitor","threshold","alertOnViolations","monitorInterval","isMonitoring","setIsMonitoring","alerts","setAlerts","startMonitoring","monitor","alert","message","prev","criticalViolations","v","stopMonitoring","clearAlerts","adjustedValues","modelInputs","calculateDCF","formatCurrency","formatPercentage","analysis","useMemo","statements","incomeStatement","income","periods","keys","totalRevenue","sort","a","latest","previous","earliest","revenueLatest","revenuePrevious","revenueEarliest","grossProfitLatest","grossProfit","grossProfitPrevious","operatingIncomeLatest","operatingIncome","operatingIncomePrevious","revenueGrowthYoY","revenueCAGR","operatingIncomeGrowth","grossMarginLatest","grossMarginPrevious","operatingMarginLatest","operatingMarginPrevious","marginImprovement","isFinite","operatingMarginChange","dcfResults","revenueBreakdown","Number","energyDevices","injectables","wellness","weightloss","retailSales","surgery","totalAssets","totalEquity","totalDebt","currentAssets","currentLiabilities","inventory","accountsReceivable","cashAndEquivalents","returnOnAssets","returnOnEquity","debtToEquity","currentRatio","quickRatio","assetTurnover","inventoryTurnover","receivablesTurnover","cashRatio","workingCapital","workingCapitalRatio","operatingCycle","cashConversionCycle","operatingLeverage","profitabilityTrend","financialLeverage","interestCoverage","interestExpense","debtServiceCoverage","debtService","revenuePerEmployee","employeeCount","revenuePerShare","sharesOutstanding","bookValuePerShare","industryBenchmarks","grossMargin","operatingMargin","revenueGrowth","benchmarkComparison","kpis","title","trend","icon","TrendingUp","benchmark","Percent","BarChart3","Target","Award","Shield","Zap","CreditCard","liquidityMetrics","formatted","status","efficiencyMetrics","riskMetrics","level","revenue","growth","cagr","profitability","grossMarginChange","financial","liquidity","efficiency","risk","market","benchmarks","industry","comparison","dcf","children","jsxs","jsx","AlertTriangle","MetricCard","Icon","TrendingDown","kpi","Eye","Timer","Gauge","Users","Activity","DollarSign","enterpriseValue","sharePrice","terminalValue","PieChart","unit","percentage","style","width","CheckCircle","financialData","currentMetric","analysisContext","onInsightClick","isVisible","onToggle","expandedSections","setExpandedSections","assumptions","suggestions","healthcare","median","ebitdaMargin","roe","technology","manufacturing","contextualInsights","content","action","latestRevenue","latestOperatingIncome","generateContextualInsights","toggleSection","section","renderBenchmarkBar","range","currentPos","benchmarkPos","left","motion","div","initial","x","opacity","animate","exit","onClick","X","ChevronDown","ChevronRight","AnimatePresence","height","insight","colors","info","assumption","Info","Lightbulb","colorClass","transition","delay","suggestion","idx","renderInsightItem","onDataChange","activeView","setActiveView","watchlist","setWatchlist","symbol","price","change","changePercent","marketData","setMarketData","indices","NASDAQ","DOW","sectors","weight","economicIndicators","Unemployment","condition","active","newSymbol","setNewSymbol","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercent","getChangeColor","getChangeIcon","Minus","interval","addToWatchlist","trim","Promise","resolve","newItem","toUpperCase","removeFromWatchlist","chartData","_","i","time","getTime","toLocaleDateString","SPY","sin","QQQ","VIX","correlationMatrix","pair","correlation","strength","button","whileHover","scale","RefreshCw","Settings","Globe","LineChart","Bell","tab","y","ChangeIcon","toLocaleString","sector","placeholder","onChange","e","onKeyPress","key","disabled","Plus","ResponsiveContainer","RechartsLineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","strokeWidth","corr","abs","AlertCircle","activeStatement","setActiveStatement","modelData","setModelData","costOfGoodsSold","operatingExpenses","ebitda","depreciation","ebit","ebt","taxes","netIncome","cash","totalCurrentAssets","ppe","accountsPayable","shortTermDebt","totalCurrentLiabilities","longTermDebt","totalLiabilities","shareholderEquity","totalLiabilitiesEquity","operatingCashFlow","capex","investingCashFlow","debtRepayment","financingCashFlow","netCashFlow","endingCash","setAssumptions","revenueGrowthRate","cogsPercentOfRevenue","opexGrowthRate","taxRate","depreciationRate","capexPercentOfRevenue","debtPaydown","validationErrors","setValidationErrors","recalculateModel","newData","wcChange","errors","handleAssumptionChange","field","parseFloat","Building","Calculator","FileText","statement","period","periodIdx","colSpan","isPercent","step","MobileFinancialSpreadsheet","onAdjustedValuesChange","setAdjustedValues","selectedPeriod","setSelectedPeriod","showAdjustedOnly","setShowAdjustedOnly","safeData","isArray","balanceSheet","cashFlow","formatNumber","numValue","isNaN","absValue","currentStatementData","currentTemplate","templates","items","expenses","assets","liabilities","equity","operating","investing","financing","getStatementTemplate","checked","sectionKey","isExpanded","adjustedValue","displayValue","renderMobileCard","Edit2","isMobile","setIsMobile","React","salariesBenefits","incomeBeforeTax","otherIncomeExpense","nonCurrentAssets","nonCurrentLiabilities","operatingActivities","investingActivities","financingActivities","editingCell","setEditingCell","cellValue","setCellValue","inputRef","newAdjustedValues","lastIndex","val","incomeStatementTemplate","headerBg","bold","formula","balanceSheetTemplate","cashFlowTemplate","getCurrentTemplate","handleCellClick","rowKey","periodIndex","isAdjusted","currentValue","handleCellBlur","parsed","newValue","statementKey","existingRow","handleKeyPress","preventDefault","validateNumericInput","test","formattedValue","focus","select","checkMobile","innerWidth","removeEventListener","ref","role","newPeriodLabel","prompt","ResponsiveTable","enableVirtualization","mobileStackedView","showDeviceToggle","Fragment","stopPropagation","addNewRow","indentClass","textWeight","rowBg","borderColor","onBlur","onKeyDown","renderRow","DataVisualization","dcfData","sensitivityData","scenarioData","activeChart","setActiveChart","showDetails","setShowDetails","chartTypes","PieChartIcon","dcfWaterfallData","years","cumulativeValue","year","startValue","presentValue","cumulative","start","freeCashFlow","terminalStart","presentValueTerminal","cashFlowTrendData","workingCapitalChange","sensitivityTornadoData","variable","result","maxUpside","dataPoints","d","changeFromBase","maxDownside","definition","upside","downside","scenarioDistributionData","scenario","probability","weightedValue","fill","CustomTooltip","payload","chartType","DCFWaterfallChart","BarChart","margin","top","right","bottom","tickFormatter","Bar","CashFlowTrendChart","Legend","SensitivityTornadoChart","layout","formatter","labelFormatter","ScenarioDistributionChart","Pie","cx","cy","outerRadius","Cell","ValuationBridgeChart","bridgeData","cumulativePV","EyeOff","whileTap","find","freeCashFlows","WACCCalculator","onModelInputChange","activeTab","setActiveTab","waccInputs","wacc","riskFreeRate","marketRiskPremium","beta","smallCompanyPremium","companySpecificRisk","debtInterestRate","marketValueEquity","marketValueDebt","buildUpMethod","equityRiskPremium","sizeRiskPremium","industryRiskPremium","industryWACC","industryBeta","industryDebtEquityRatio","waccCalculation","inputs","costOfEquityCAPM","costOfEquityBuildUp","costOfDebtAfterTax","totalCapital","equityWeight","debtWeight","waccCAPM","waccBuildUp","finalWACC","debtToEquityRatio","updateWACCInput","updatedWACC","tabs","applyWACCToDCF","waccValue","BookOpen","ComparableAnalysis","selectedMultiple","setSelectedMultiple","showAddComp","setShowAddComp","comparableCompanies","setComparableCompanies","ticker","marketCap","employees","founded","geography","businessModel","comparableMultiples","comp","multiples","ev_revenue","ev_ebitda","pe_ratio","revenue_per_employee","market_cap_revenue","marketStats","calculateStats","values","mean","floor","p25","p75","m","impliedValuation","targetRevenue","targetEBITDA","targetNetIncome","multipleDefinitions","def","stats","multiple","Search","Filter","removeComparable","onSubmit","formData","FormData","companyData","newCompany","getFullYear","addComparableCompany","fromEntries","ScenarioModeling","showAddForm","setShowAddForm","scenarios","scenarioResults","baseRevenue","modifiedRevenue","growthRate","baseOperating","modifiedOperating","baseRevenueValue","scenarioRevenue","baseIncome","adjustedMargin","dcfResult","equityValue","weightedAverageValue","updateScenario","updatedScenarios","ScenarioForm","deleteScenario","Trash2","newScenario","s","SensitivityAnalysis","selectedVariable","setSelectedVariable","sensitivityConfig","sensitivity","variables","ranges","discountRate","variableDefinitions","baseValue","isPercentage","terminalGrowthRate","baseValuation","sensitivityResults","variableDef","stepSize","modifiedData","dcfInputs","originalIncome","dcfParams","projectionYears","operatingIncomeData","operatingIncomes","periodKey","discountFactor","pv","presentTerminalValue","presentValueOperations","tempCalculateDCF","valuation","tornadoData","maxImpact","positiveImpact","negativeImpact","updateSensitivityRange","updatedRanges","transform","variableName","updatedVariables","removed","removeVariable","point","minHeight","addVariable","activeModel","setActiveModel","setModelInputs","terminalValueMultiple","receivablesDays","inventoryDays","payablesDays","receivablesGrowth","inventoryGrowth","payablesGrowth","capexAsPercentOfRevenue","maintenanceCapex","ratios","compareToIndustry","industryAverages","netMargin","calculatedMetrics","metrics","margins","gross","net","isLatestPeriod","totalCOGS","totalCostOfGoodsSold","prevRevenue","prevOperating","inputData","sourceData","modelTypes","updateModelInput","modelType","createElement","t","AdvancedDCF","MonteCarloSimulation","lboResults","financialModel","activeAnalysis","setActiveAnalysis","simulationSettings","setSimulationSettings","iterations","confidenceLevel","correlationsEnabled","crossModelAnalysis","integratedResults","setIntegratedResults","isRunning","setIsRunning","progress","setProgress","runIntegratedSimulation","lbo","portfolio","dcfDistributions","parameters","stdDev","fcfMargin","mode","currentRevenue","currentPrice","monteCarloEngine","runDCFSimulation","onProgress","p","lboDistributions","ebitdaGrowthRate","exitMultiple","leverageRatio","runLBOSimulation","calculateCrossModelCorrelations","calculateIntegratedRiskMetrics","generatePortfolioAnalysis","monteCarloIntegrated","settings","dcfValues","simulations","pricePerShare","lboValues","irr","pearsonCorrelation","dcfLboCorrelation","interpretation","riskImplication","n","sumX","sumY","sumXY","xi","sumXX","sumYY","yi","numerator","denominator","sqrt","var95","percentiles","p5","expectedValue","volatility","standardDeviation","acc","dcfWeighted","lboWeighted","analysisOptions","Play","option","p95","moic"],"mappings":"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"}