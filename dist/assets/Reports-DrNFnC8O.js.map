{"version":3,"file":"Reports-DrNFnC8O.js","sources":["../../src/services/reportingEngine.js","../../src/components/Reporting/ReportBuilder.jsx","../../src/pages/Reports.jsx"],"sourcesContent":["/**\n * Advanced Reporting Engine with Custom Templates\n * Generates professional financial reports with customizable templates\n */\n\nclass ReportingEngine {\n  constructor() {\n    this.templates = new Map();\n    this.reports = new Map();\n    this.themes = new Map();\n    this.exportFormats = new Set(['pdf', 'docx', 'pptx', 'html', 'excel']);\n    this.isInitialized = false;\n\n    this.initializeTemplates();\n    this.initializeThemes();\n  }\n\n  /**\n   * Initialize default report templates\n   */\n  initializeTemplates() {\n    // Executive Summary Template\n    this.registerTemplate('executive_summary', {\n      name: 'Executive Summary',\n      description: 'High-level overview for executives and stakeholders',\n      category: 'summary',\n      sections: [\n        {\n          id: 'cover',\n          name: 'Cover Page',\n          type: 'cover',\n          required: true,\n          fields: ['company_name', 'report_date', 'analyst_name', 'executive_summary']\n        },\n        {\n          id: 'key_metrics',\n          name: 'Key Financial Metrics',\n          type: 'metrics_grid',\n          required: true,\n          fields: ['revenue', 'profit_margin', 'roe', 'debt_ratio', 'current_ratio']\n        },\n        {\n          id: 'valuation',\n          name: 'Valuation Summary',\n          type: 'valuation_card',\n          required: true,\n          fields: ['dcf_value', 'market_value', 'recommendation', 'price_target']\n        },\n        {\n          id: 'risks',\n          name: 'Key Risks & Opportunities',\n          type: 'risk_matrix',\n          required: false,\n          fields: ['risks', 'opportunities', 'mitigation_strategies']\n        }\n      ],\n      layout: 'executive',\n      estimatedPages: 4\n    });\n\n    // Full Financial Analysis Template\n    this.registerTemplate('full_analysis', {\n      name: 'Comprehensive Financial Analysis',\n      description: 'Detailed analysis for investment decisions',\n      category: 'analysis',\n      sections: [\n        {\n          id: 'executive_summary',\n          name: 'Executive Summary',\n          type: 'text_summary',\n          required: true\n        },\n        {\n          id: 'company_overview',\n          name: 'Company Overview',\n          type: 'company_profile',\n          required: true,\n          fields: ['business_description', 'key_products', 'market_position', 'competitive_landscape']\n        },\n        {\n          id: 'financial_performance',\n          name: 'Financial Performance Analysis',\n          type: 'financial_tables',\n          required: true,\n          fields: ['income_statement', 'balance_sheet', 'cash_flow', 'ratio_analysis']\n        },\n        {\n          id: 'valuation_analysis',\n          name: 'Valuation Analysis',\n          type: 'valuation_detailed',\n          required: true,\n          fields: ['dcf_model', 'comparable_analysis', 'precedent_transactions', 'sensitivity_analysis']\n        },\n        {\n          id: 'scenario_analysis',\n          name: 'Scenario & Sensitivity Analysis',\n          type: 'scenario_charts',\n          required: false,\n          fields: ['base_case', 'bull_case', 'bear_case', 'key_assumptions']\n        },\n        {\n          id: 'appendix',\n          name: 'Appendix',\n          type: 'appendix',\n          required: false,\n          fields: ['detailed_calculations', 'data_sources', 'methodology']\n        }\n      ],\n      layout: 'detailed',\n      estimatedPages: 25\n    });\n\n    // Investment Committee Template\n    this.registerTemplate('investment_committee', {\n      name: 'Investment Committee Presentation',\n      description: 'Presentation format for investment decisions',\n      category: 'presentation',\n      sections: [\n        {\n          id: 'investment_thesis',\n          name: 'Investment Thesis',\n          type: 'slide_content',\n          required: true,\n          fields: ['investment_rationale', 'key_catalysts', 'timeline']\n        },\n        {\n          id: 'financial_snapshot',\n          name: 'Financial Snapshot',\n          type: 'dashboard',\n          required: true,\n          fields: ['key_metrics_dashboard', 'performance_trends']\n        },\n        {\n          id: 'valuation_summary',\n          name: 'Valuation & Recommendation',\n          type: 'valuation_slide',\n          required: true,\n          fields: ['target_price', 'recommendation', 'risk_rating']\n        },\n        {\n          id: 'risk_assessment',\n          name: 'Risk Assessment',\n          type: 'risk_slides',\n          required: true,\n          fields: ['key_risks', 'risk_mitigation', 'stress_tests']\n        }\n      ],\n      layout: 'presentation',\n      estimatedPages: 15\n    });\n\n    // Portfolio Review Template\n    this.registerTemplate('portfolio_review', {\n      name: 'Portfolio Performance Review',\n      description: 'Regular portfolio performance and attribution analysis',\n      category: 'portfolio',\n      sections: [\n        {\n          id: 'performance_summary',\n          name: 'Performance Summary',\n          type: 'performance_dashboard',\n          required: true,\n          fields: ['total_return', 'benchmark_comparison', 'attribution_analysis']\n        },\n        {\n          id: 'holdings_analysis',\n          name: 'Holdings Analysis',\n          type: 'holdings_table',\n          required: true,\n          fields: ['top_holdings', 'sector_allocation', 'geographic_allocation']\n        },\n        {\n          id: 'risk_metrics',\n          name: 'Risk Metrics',\n          type: 'risk_dashboard',\n          required: true,\n          fields: ['volatility', 'var', 'maximum_drawdown', 'beta']\n        },\n        {\n          id: 'outlook',\n          name: 'Market Outlook & Strategy',\n          type: 'strategic_outlook',\n          required: false,\n          fields: ['market_outlook', 'strategy_changes', 'tactical_adjustments']\n        }\n      ],\n      layout: 'portfolio',\n      estimatedPages: 12\n    });\n\n    // Due Diligence Template\n    this.registerTemplate('due_diligence', {\n      name: 'Due Diligence Report',\n      description: 'Comprehensive due diligence for investment decisions',\n      category: 'due_diligence',\n      sections: [\n        {\n          id: 'transaction_summary',\n          name: 'Transaction Summary',\n          type: 'transaction_overview',\n          required: true\n        },\n        {\n          id: 'business_analysis',\n          name: 'Business & Market Analysis',\n          type: 'business_deep_dive',\n          required: true,\n          fields: ['market_analysis', 'competitive_position', 'business_model', 'management_team']\n        },\n        {\n          id: 'financial_analysis',\n          name: 'Financial Analysis',\n          type: 'financial_deep_dive',\n          required: true,\n          fields: ['historical_performance', 'quality_of_earnings', 'working_capital', 'capex_analysis']\n        },\n        {\n          id: 'valuation',\n          name: 'Valuation Analysis',\n          type: 'valuation_comprehensive',\n          required: true\n        },\n        {\n          id: 'risks_issues',\n          name: 'Risks & Issues',\n          type: 'risk_comprehensive',\n          required: true,\n          fields: ['commercial_risks', 'financial_risks', 'operational_risks', 'regulatory_risks']\n        }\n      ],\n      layout: 'due_diligence',\n      estimatedPages: 35\n    });\n\n    console.log('Report templates initialized:', this.templates.size);\n  }\n\n  /**\n   * Initialize report themes\n   */\n  initializeThemes() {\n    this.registerTheme('professional', {\n      name: 'Professional',\n      colors: {\n        primary: '#1e40af',\n        secondary: '#64748b',\n        accent: '#0ea5e9',\n        success: '#10b981',\n        warning: '#f59e0b',\n        error: '#ef4444',\n        background: '#ffffff',\n        surface: '#f8fafc',\n        text: '#0f172a'\n      },\n      fonts: {\n        heading: 'Inter, sans-serif',\n        body: 'Inter, sans-serif',\n        monospace: 'JetBrains Mono, monospace'\n      },\n      layout: {\n        margins: { top: 72, right: 72, bottom: 72, left: 72 },\n        spacing: 16,\n        borderRadius: 8\n      }\n    });\n\n    this.registerTheme('executive', {\n      name: 'Executive',\n      colors: {\n        primary: '#111827',\n        secondary: '#6b7280',\n        accent: '#3b82f6',\n        success: '#059669',\n        warning: '#d97706',\n        error: '#dc2626',\n        background: '#ffffff',\n        surface: '#f9fafb',\n        text: '#111827'\n      },\n      fonts: {\n        heading: 'Georgia, serif',\n        body: 'system-ui, sans-serif',\n        monospace: 'SF Mono, monospace'\n      },\n      layout: {\n        margins: { top: 90, right: 90, bottom: 90, left: 90 },\n        spacing: 20,\n        borderRadius: 4\n      }\n    });\n\n    this.registerTheme('modern', {\n      name: 'Modern',\n      colors: {\n        primary: '#7c3aed',\n        secondary: '#8b5cf6',\n        accent: '#06b6d4',\n        success: '#10b981',\n        warning: '#f59e0b',\n        error: '#f43f5e',\n        background: '#ffffff',\n        surface: '#f8fafc',\n        text: '#1e293b'\n      },\n      fonts: {\n        heading: 'Poppins, sans-serif',\n        body: 'Inter, sans-serif',\n        monospace: 'Fira Code, monospace'\n      },\n      layout: {\n        margins: { top: 60, right: 60, bottom: 60, left: 60 },\n        spacing: 18,\n        borderRadius: 12\n      }\n    });\n  }\n\n  /**\n   * Register a new report template\n   */\n  registerTemplate(id, template) {\n    this.templates.set(id, {\n      id,\n      ...template,\n      createdAt: new Date().toISOString(),\n      version: '1.0'\n    });\n  }\n\n  /**\n   * Register a new theme\n   */\n  registerTheme(id, theme) {\n    this.themes.set(id, {\n      id,\n      ...theme,\n      createdAt: new Date().toISOString()\n    });\n  }\n\n  /**\n   * Generate a report\n   */\n  async generateReport(templateId, data, options = {}) {\n    const template = this.templates.get(templateId);\n    if (!template) {\n      throw new Error(`Template ${templateId} not found`);\n    }\n\n    const reportId = `report_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const theme = this.themes.get(options.theme || 'professional');\n\n    const report = {\n      id: reportId,\n      templateId,\n      template: template.name,\n      data,\n      options: {\n        theme: options.theme || 'professional',\n        format: options.format || 'pdf',\n        includeCharts: options.includeCharts !== false,\n        includeRawData: options.includeRawData || false,\n        customSections: options.customSections || [],\n        ...options\n      },\n      status: 'generating',\n      createdAt: new Date().toISOString(),\n      sections: []\n    };\n\n    try {\n      // Generate each section\n      for (const sectionConfig of template.sections) {\n        if (sectionConfig.required || options.includedSections?.includes(sectionConfig.id)) {\n          const section = await this.generateSection(sectionConfig, data, theme, options);\n          report.sections.push(section);\n        }\n      }\n\n      // Add custom sections\n      for (const customSection of (options.customSections || [])) {\n        const section = await this.generateCustomSection(customSection, data, theme, options);\n        report.sections.push(section);\n      }\n\n      // Generate final report document\n      const document = await this.compileReport(report, template, theme);\n      report.document = document;\n      report.status = 'completed';\n      report.completedAt = new Date().toISOString();\n\n      // Store report\n      this.reports.set(reportId, report);\n\n      return report;\n\n    } catch (error) {\n      report.status = 'error';\n      report.error = error.message;\n      throw error;\n    }\n  }\n\n  /**\n   * Generate a specific section\n   */\n  async generateSection(sectionConfig, data, _theme, _options) {\n    const section = {\n      id: sectionConfig.id,\n      name: sectionConfig.name,\n      type: sectionConfig.type,\n      content: {},\n      charts: [],\n      tables: []\n    };\n\n    switch (sectionConfig.type) {\n      case 'cover':\n        section.content = this.generateCoverPage(data, sectionConfig.fields);\n        break;\n      case 'metrics_grid':\n        section.content = this.generateMetricsGrid(data, sectionConfig.fields);\n        break;\n      case 'valuation_card':\n        section.content = this.generateValuationCard(data);\n        section.charts = this.generateValuationCharts(data);\n        break;\n      case 'financial_tables':\n        section.tables = this.generateFinancialTables(data);\n        break;\n      case 'scenario_charts':\n        section.charts = this.generateScenarioCharts(data);\n        break;\n      case 'risk_matrix':\n        section.content = this.generateRiskMatrix(data);\n        break;\n      case 'performance_dashboard':\n        section.content = this.generatePerformanceDashboard(data);\n        section.charts = this.generatePerformanceCharts(data);\n        break;\n      default:\n        section.content = this.generateGenericSection(sectionConfig, data);\n    }\n\n    return section;\n  }\n\n  /**\n   * Generate cover page content\n   */\n  generateCoverPage(data, _fields) {\n    return {\n      companyName: data.company?.name || 'Financial Analysis',\n      reportTitle: data.reportTitle || 'Financial Analysis Report',\n      reportDate: new Date().toLocaleDateString(),\n      analystName: data.analyst?.name || 'Financial Analyst',\n      executiveSummary: data.executiveSummary || 'Comprehensive financial analysis and valuation.',\n      logo: data.company?.logo,\n      disclaimer: 'This report is for informational purposes only and should not be considered as investment advice.'\n    };\n  }\n\n  /**\n   * Generate key metrics grid\n   */\n  generateMetricsGrid(data, _fields) {\n    const statements = data.financialData?.statements;\n    const latest = statements?.incomeStatement ? Object.keys(statements.incomeStatement).sort().pop() : null;\n\n    return {\n      revenue: {\n        label: 'Revenue',\n        value: statements?.incomeStatement?.[latest]?.totalRevenue || 0,\n        format: 'currency',\n        trend: this.calculateTrend(statements?.incomeStatement, 'totalRevenue')\n      },\n      profitMargin: {\n        label: 'Net Profit Margin',\n        value: this.calculateNetMargin(statements?.incomeStatement?.[latest]),\n        format: 'percentage',\n        trend: 'stable'\n      },\n      roe: {\n        label: 'Return on Equity',\n        value: this.calculateROE(statements?.incomeStatement?.[latest], statements?.balanceSheet?.[latest]),\n        format: 'percentage',\n        trend: 'positive'\n      },\n      currentRatio: {\n        label: 'Current Ratio',\n        value: this.calculateCurrentRatio(statements?.balanceSheet?.[latest]),\n        format: 'ratio',\n        trend: 'stable'\n      }\n    };\n  }\n\n  /**\n   * Generate valuation card\n   */\n  generateValuationCard(data) {\n    const dcfValue = data.dcfResults?.enterpriseValue || 0;\n    const marketValue = data.marketData?.marketCap || 0;\n    const upside = marketValue > 0 ? ((dcfValue - marketValue) / marketValue) * 100 : 0;\n\n    return {\n      dcfValue,\n      marketValue,\n      upside,\n      recommendation: upside > 20 ? 'BUY' : upside > -10 ? 'HOLD' : 'SELL',\n      priceTarget: dcfValue * (data.assumptions?.sharesOutstanding || 1000000) / 1000000,\n      confidence: 'Medium',\n      methodology: 'DCF Analysis with peer comparison'\n    };\n  }\n\n  /**\n   * Generate financial tables\n   */\n  generateFinancialTables(data) {\n    const statements = data.financialData?.statements;\n    return {\n      incomeStatement: this.formatIncomeStatement(statements?.incomeStatement),\n      balanceSheet: this.formatBalanceSheet(statements?.balanceSheet),\n      cashFlow: this.formatCashFlowStatement(statements?.cashFlow),\n      ratios: this.calculateFinancialRatios(statements)\n    };\n  }\n\n  /**\n   * Generate scenario charts\n   */\n  generateScenarioCharts(data) {\n    return [\n      {\n        type: 'scenario_comparison',\n        title: 'Scenario Analysis - Valuation Range',\n        data: this.generateScenarioData(data),\n        chartType: 'bar'\n      },\n      {\n        type: 'sensitivity_tornado',\n        title: 'Sensitivity Analysis',\n        data: this.generateSensitivityData(data),\n        chartType: 'tornado'\n      }\n    ];\n  }\n\n  /**\n   * Compile final report document\n   */\n  async compileReport(report, template, theme) {\n    const document = {\n      metadata: {\n        title: `${report.template} - ${report.data.company?.name || 'Analysis'}`,\n        author: report.data.analyst?.name || 'Financial Analyst',\n        subject: 'Financial Analysis Report',\n        creator: 'FinanceAnalyst Pro',\n        createdAt: report.createdAt\n      },\n      theme,\n      layout: template.layout,\n      pages: []\n    };\n\n    // Generate pages based on sections\n    for (const section of report.sections) {\n      const pages = await this.renderSection(section, theme, template.layout);\n      document.pages.push(...pages);\n    }\n\n    // Add page numbers and headers/footers\n    this.addPageElements(document);\n\n    return document;\n  }\n\n  /**\n   * Render a section into pages\n   */\n  async renderSection(section, theme, _layout) {\n    const pages = [];\n\n    // Create section title page if needed\n    if (section.type !== 'cover') {\n      pages.push({\n        type: 'section_title',\n        title: section.name,\n        content: section.content.summary || '',\n        theme\n      });\n    }\n\n    // Add content pages\n    if (section.content) {\n      pages.push({\n        type: 'content',\n        section: section.id,\n        content: section.content,\n        theme\n      });\n    }\n\n    // Add chart pages\n    for (const chart of section.charts || []) {\n      pages.push({\n        type: 'chart',\n        chart,\n        theme\n      });\n    }\n\n    // Add table pages\n    for (const table of section.tables || []) {\n      pages.push({\n        type: 'table',\n        table,\n        theme\n      });\n    }\n\n    return pages;\n  }\n\n  /**\n   * Export report to specified format\n   */\n  async exportReport(reportId, format = 'pdf', options = {}) {\n    const report = this.reports.get(reportId);\n    if (!report) {\n      throw new Error(`Report ${reportId} not found`);\n    }\n\n    if (!this.exportFormats.has(format)) {\n      throw new Error(`Export format ${format} not supported`);\n    }\n\n    try {\n      let exportedData;\n\n      switch (format) {\n        case 'pdf':\n          exportedData = await this.exportToPDF(report, options);\n          break;\n        case 'docx':\n          exportedData = await this.exportToWord(report, options);\n          break;\n        case 'pptx':\n          exportedData = await this.exportToPowerPoint(report, options);\n          break;\n        case 'html':\n          exportedData = await this.exportToHTML(report, options);\n          break;\n        case 'excel':\n          exportedData = await this.exportToExcel(report, options);\n          break;\n        default:\n          throw new Error(`Export format ${format} not implemented`);\n      }\n\n      return {\n        reportId,\n        format,\n        data: exportedData,\n        filename: this.generateFilename(report, format),\n        size: exportedData.length,\n        exportedAt: new Date().toISOString()\n      };\n\n    } catch (error) {\n      throw new Error(`Export failed: ${error.message}`);\n    }\n  }\n\n  /**\n   * Get available templates\n   */\n  getTemplates(category = null) {\n    const templates = Array.from(this.templates.values());\n    return category ? templates.filter(t => t.category === category) : templates;\n  }\n\n  /**\n   * Get available themes\n   */\n  getThemes() {\n    return Array.from(this.themes.values());\n  }\n\n  /**\n   * Get report status\n   */\n  getReport(reportId) {\n    return this.reports.get(reportId);\n  }\n\n  /**\n   * List all reports\n   */\n  listReports() {\n    return Array.from(this.reports.values()).map(report => ({\n      id: report.id,\n      template: report.template,\n      status: report.status,\n      createdAt: report.createdAt,\n      completedAt: report.completedAt\n    }));\n  }\n\n  // Helper methods for calculations and formatting\n  calculateTrend(data, field) {\n    if (!data) return 'neutral';\n    const periods = Object.keys(data).sort();\n    if (periods.length < 2) return 'neutral';\n\n    const latest = data[periods[periods.length - 1]]?.[field] || 0;\n    const previous = data[periods[periods.length - 2]]?.[field] || 0;\n\n    if (latest > previous * 1.05) return 'positive';\n    if (latest < previous * 0.95) return 'negative';\n    return 'stable';\n  }\n\n  calculateNetMargin(incomeData) {\n    if (!incomeData) return 0;\n    const revenue = incomeData.totalRevenue || 0;\n    const netIncome = incomeData.netIncome || 0;\n    return revenue > 0 ? (netIncome / revenue) * 100 : 0;\n  }\n\n  calculateROE(incomeData, balanceData) {\n    if (!incomeData || !balanceData) return 0;\n    const netIncome = incomeData.netIncome || 0;\n    const equity = balanceData.totalEquity || 0;\n    return equity > 0 ? (netIncome / equity) * 100 : 0;\n  }\n\n  calculateCurrentRatio(balanceData) {\n    if (!balanceData) return 0;\n    const currentAssets = balanceData.currentAssets || 0;\n    const currentLiabilities = balanceData.currentLiabilities || 0;\n    return currentLiabilities > 0 ? currentAssets / currentLiabilities : 0;\n  }\n\n  formatIncomeStatement(data) {\n    if (!data) return {};\n\n    const periods = Object.keys(data).sort();\n    const formatted = { periods, rows: [] };\n\n    const fields = [\n      { key: 'totalRevenue', label: 'Total Revenue' },\n      { key: 'totalCostOfGoodsSold', label: 'Cost of Goods Sold' },\n      { key: 'grossProfit', label: 'Gross Profit' },\n      { key: 'operatingIncome', label: 'Operating Income' },\n      { key: 'netIncome', label: 'Net Income' }\n    ];\n\n    for (const field of fields) {\n      const row = { label: field.label, values: [] };\n      for (const period of periods) {\n        row.values.push(data[period]?.[field.key] || 0);\n      }\n      formatted.rows.push(row);\n    }\n\n    return formatted;\n  }\n\n  formatBalanceSheet(data) {\n    // Similar formatting for balance sheet\n    return data || {};\n  }\n\n  formatCashFlowStatement(data) {\n    // Similar formatting for cash flow\n    return data || {};\n  }\n\n  calculateFinancialRatios(_statements) {\n    // Calculate comprehensive financial ratios\n    return {\n      profitability: {},\n      liquidity: {},\n      efficiency: {},\n      leverage: {}\n    };\n  }\n\n  generateScenarioData(data) {\n    return [\n      { scenario: 'Bear Case', value: (data.dcfResults?.enterpriseValue || 0) * 0.7 },\n      { scenario: 'Base Case', value: data.dcfResults?.enterpriseValue || 0 },\n      { scenario: 'Bull Case', value: (data.dcfResults?.enterpriseValue || 0) * 1.3 }\n    ];\n  }\n\n  generateSensitivityData(_data) {\n    return [\n      { variable: 'Revenue Growth', impact: 25 },\n      { variable: 'Discount Rate', impact: -20 },\n      { variable: 'Terminal Growth', impact: 15 },\n      { variable: 'Operating Margin', impact: 18 }\n    ];\n  }\n\n  async exportToPDF(_report, _options) {\n    // Mock PDF generation\n    return new Uint8Array([37, 80, 68, 70]); // PDF header\n  }\n\n  async exportToWord(_report, _options) {\n    // Mock Word generation\n    return new Uint8Array([80, 75, 3, 4]); // ZIP header for DOCX\n  }\n\n  async exportToPowerPoint(_report, _options) {\n    // Mock PowerPoint generation\n    return new Uint8Array([80, 75, 3, 4]); // ZIP header for PPTX\n  }\n\n  async exportToHTML(report, _options) {\n    // Generate HTML report\n    return `<!DOCTYPE html><html><head><title>${report.template}</title></head><body><h1>Report Generated</h1></body></html>`;\n  }\n\n  async exportToExcel(_report, _options) {\n    // Mock Excel generation\n    return new Uint8Array([80, 75, 3, 4]); // ZIP header for XLSX\n  }\n\n  generateFilename(report, format) {\n    const date = new Date().toISOString().split('T')[0];\n    const company = report.data.company?.name?.replace(/[^a-zA-Z0-9]/g, '_') || 'Analysis';\n    return `${company}_${report.template.replace(/\\s+/g, '_')}_${date}.${format}`;\n  }\n\n  addPageElements(document) {\n    document.pages.forEach((page, index) => {\n      page.pageNumber = index + 1;\n      page.totalPages = document.pages.length;\n      page.header = document.metadata.title;\n      page.footer = `Page ${index + 1} of ${document.pages.length}`;\n    });\n  }\n\n  generateCustomSection(customSection, _data, _theme, _options) {\n    return {\n      id: customSection.id,\n      name: customSection.name,\n      type: 'custom',\n      content: customSection.content || {},\n      charts: customSection.charts || [],\n      tables: customSection.tables || []\n    };\n  }\n\n  generateGenericSection(sectionConfig, _data) {\n    return {\n      title: sectionConfig.name,\n      content: 'Generic section content would be generated here based on available data.',\n      fields: sectionConfig.fields || []\n    };\n  }\n\n  generateRiskMatrix(_data) {\n    return {\n      risks: [\n        { category: 'Market Risk', level: 'Medium', description: 'General market volatility' },\n        { category: 'Credit Risk', level: 'Low', description: 'Strong balance sheet' },\n        { category: 'Operational Risk', level: 'Medium', description: 'Industry-specific challenges' }\n      ],\n      opportunities: [\n        { category: 'Market Expansion', potential: 'High', description: 'New market opportunities' },\n        { category: 'Cost Optimization', potential: 'Medium', description: 'Operational improvements' }\n      ]\n    };\n  }\n\n  generatePerformanceDashboard(data) {\n    return {\n      totalReturn: data.performance?.totalReturn || 0,\n      benchmarkReturn: data.performance?.benchmarkReturn || 0,\n      alpha: data.performance?.alpha || 0,\n      sharpeRatio: data.performance?.sharpeRatio || 0,\n      maxDrawdown: data.performance?.maxDrawdown || 0\n    };\n  }\n\n  generatePerformanceCharts(data) {\n    return [\n      {\n        type: 'performance_line',\n        title: 'Performance vs Benchmark',\n        data: data.performance?.timeSeries || [],\n        chartType: 'line'\n      },\n      {\n        type: 'attribution_bar',\n        title: 'Performance Attribution',\n        data: data.performance?.attribution || [],\n        chartType: 'bar'\n      }\n    ];\n  }\n}\n\nexport default new ReportingEngine();\n","import { motion } from 'framer-motion';\nimport {\n  FileText,\n  Download,\n  Eye,\n  Settings,\n  Check,\n  Clock,\n  AlertCircle,\n  Palette,\n  Layout,\n  Plus,\n  Trash2\n} from 'lucide-react';\nimport React, { useState, useEffect } from 'react';\n\nimport reportingEngine from '../../services/reportingEngine';\n\nconst ReportBuilder = ({ financialData, onReportGenerated }) => {\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [selectedTheme, setSelectedTheme] = useState('professional');\n  const [reportOptions, setReportOptions] = useState({\n    includeCharts: true,\n    includeRawData: false,\n    includedSections: []\n  });\n  const [customSections, setCustomSections] = useState([]);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generatedReports, setGeneratedReports] = useState([]);\n  const [templates, setTemplates] = useState([]);\n  const [themes, setThemes] = useState([]);\n  const [previewMode, setPreviewMode] = useState(false);\n\n  useEffect(() => {\n    loadTemplatesAndThemes();\n    loadExistingReports();\n  }, []);\n\n  const loadTemplatesAndThemes = async() => {\n    try {\n      const availableTemplates = reportingEngine.getTemplates();\n      const availableThemes = reportingEngine.getThemes();\n\n      setTemplates(availableTemplates);\n      setThemes(availableThemes);\n\n      if (availableTemplates.length > 0 && !selectedTemplate) {\n        setSelectedTemplate(availableTemplates[0]);\n      }\n    } catch (error) {\n      console.error('Error loading templates and themes:', error);\n    }\n  };\n\n  const loadExistingReports = async() => {\n    try {\n      const reports = reportingEngine.listReports();\n      setGeneratedReports(reports);\n    } catch (error) {\n      console.error('Error loading reports:', error);\n    }\n  };\n\n  const handleTemplateSelect = (template) => {\n    setSelectedTemplate(template);\n    // Auto-select all required sections\n    const requiredSections = template.sections\n      .filter(section => section.required)\n      .map(section => section.id);\n\n    setReportOptions(prev => ({\n      ...prev,\n      includedSections: [...requiredSections, ...prev.includedSections.filter(id =>\n        !requiredSections.includes(id)\n      )]\n    }));\n  };\n\n  const handleSectionToggle = (sectionId) => {\n    setReportOptions(prev => ({\n      ...prev,\n      includedSections: prev.includedSections.includes(sectionId)\n        ? prev.includedSections.filter(id => id !== sectionId)\n        : [...prev.includedSections, sectionId]\n    }));\n  };\n\n  const addCustomSection = () => {\n    const newSection = {\n      id: `custom_${Date.now()}`,\n      name: 'Custom Section',\n      content: '',\n      charts: [],\n      tables: []\n    };\n    setCustomSections(prev => [...prev, newSection]);\n  };\n\n  const updateCustomSection = (index, updates) => {\n    setCustomSections(prev => prev.map((section, i) =>\n      i === index ? { ...section, ...updates } : section\n    ));\n  };\n\n  const removeCustomSection = (index) => {\n    setCustomSections(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const generateReport = async() => {\n    if (!selectedTemplate) return;\n\n    setIsGenerating(true);\n\n    try {\n      const reportData = {\n        ...financialData,\n        company: financialData?.company || { name: 'Sample Company' },\n        analyst: { name: 'Financial Analyst' },\n        reportTitle: selectedTemplate.name\n      };\n\n      const report = await reportingEngine.generateReport(\n        selectedTemplate.id,\n        reportData,\n        {\n          theme: selectedTheme,\n          customSections,\n          ...reportOptions\n        }\n      );\n\n      setGeneratedReports(prev => [report, ...prev]);\n      onReportGenerated?.(report);\n\n    } catch (error) {\n      console.error('Error generating report:', error);\n      alert('Failed to generate report: ' + error.message);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  const exportReport = async(reportId, format) => {\n    try {\n      const exportedReport = await reportingEngine.exportReport(reportId, format);\n\n      // Create download link\n      const blob = new Blob([exportedReport.data], {\n        type: getContentType(format)\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = exportedReport.filename;\n      link.click();\n\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error exporting report:', error);\n      alert('Failed to export report: ' + error.message);\n    }\n  };\n\n  const getContentType = (format) => {\n    const types = {\n      pdf: 'application/pdf',\n      docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n      pptx: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n      html: 'text/html',\n      excel: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    };\n    return types[format] || 'application/octet-stream';\n  };\n\n  const getStatusColor = (status) => {\n    const colors = {\n      completed: 'text-green-600 bg-green-100',\n      generating: 'text-blue-600 bg-blue-100',\n      error: 'text-red-600 bg-red-100'\n    };\n    return colors[status] || 'text-gray-600 bg-gray-100';\n  };\n\n  const getStatusIcon = (status) => {\n    const icons = {\n      completed: Check,\n      generating: Clock,\n      error: AlertCircle\n    };\n    return icons[status] || Clock;\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Report Builder</h1>\n          <p className=\"text-gray-600 mt-1\">\n            Create professional financial reports with custom templates\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <button\n            onClick={() => setPreviewMode(!previewMode)}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\n          >\n            <Eye size={20} />\n            <span>Preview</span>\n          </button>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-12 gap-6\">\n        {/* Template Selection */}\n        <div className=\"col-span-4 space-y-6\">\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center\">\n              <Layout className=\"mr-2\" size={24} />\n              Templates\n            </h2>\n\n            <div className=\"space-y-3\">\n              {templates.map((template) => (\n                <motion.div\n                  key={template.id}\n                  whileHover={{ scale: 1.02 }}\n                  onClick={() => handleTemplateSelect(template)}\n                  className={`p-4 rounded-lg border cursor-pointer transition-all ${\n                    selectedTemplate?.id === template.id\n                      ? 'border-blue-500 bg-blue-50'\n                      : 'border-gray-200 hover:border-gray-300'\n                  }`}\n                >\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h3 className=\"font-semibold text-gray-900\">{template.name}</h3>\n                    <span className=\"text-xs bg-gray-100 px-2 py-1 rounded\">\n                      {template.category}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-gray-600 mb-2\">{template.description}</p>\n                  <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                    <span>{template.sections.length} sections</span>\n                    <span>~{template.estimatedPages} pages</span>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n\n          {/* Theme Selection */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center\">\n              <Palette className=\"mr-2\" size={24} />\n              Theme\n            </h2>\n\n            <div className=\"grid grid-cols-1 gap-3\">\n              {themes.map((theme) => (\n                <motion.div\n                  key={theme.id}\n                  whileHover={{ scale: 1.02 }}\n                  onClick={() => setSelectedTheme(theme.id)}\n                  className={`p-3 rounded-lg border cursor-pointer transition-all ${\n                    selectedTheme === theme.id\n                      ? 'border-blue-500 bg-blue-50'\n                      : 'border-gray-200 hover:border-gray-300'\n                  }`}\n                >\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"font-medium\">{theme.name}</span>\n                    <div className=\"flex space-x-1\">\n                      <div\n                        className=\"w-4 h-4 rounded-full border\"\n                        style={{ backgroundColor: theme.colors.primary }}\n                      />\n                      <div\n                        className=\"w-4 h-4 rounded-full border\"\n                        style={{ backgroundColor: theme.colors.accent }}\n                      />\n                    </div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Configuration Panel */}\n        <div className=\"col-span-8 space-y-6\">\n          {selectedTemplate && (\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\"\n            >\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center\">\n                <Settings className=\"mr-2\" size={24} />\n                Report Configuration\n              </h2>\n\n              {/* Sections Configuration */}\n              <div className=\"mb-6\">\n                <h3 className=\"font-semibold text-gray-900 mb-3\">Sections</h3>\n                <div className=\"space-y-3\">\n                  {selectedTemplate.sections.map((section) => (\n                    <div key={section.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                      <div>\n                        <div className=\"flex items-center space-x-2\">\n                          <span className=\"font-medium\">{section.name}</span>\n                          {section.required && (\n                            <span className=\"text-xs bg-red-100 text-red-700 px-2 py-1 rounded\">\n                              Required\n                            </span>\n                          )}\n                        </div>\n                        <p className=\"text-sm text-gray-600 mt-1\">{section.type}</p>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        checked={section.required || reportOptions.includedSections.includes(section.id)}\n                        disabled={section.required}\n                        onChange={() => handleSectionToggle(section.id)}\n                        className=\"w-5 h-5 text-blue-600 rounded\"\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Custom Sections */}\n              <div className=\"mb-6\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <h3 className=\"font-semibold text-gray-900\">Custom Sections</h3>\n                  <button\n                    onClick={addCustomSection}\n                    className=\"flex items-center space-x-1 text-blue-600 hover:text-blue-700\"\n                  >\n                    <Plus size={16} />\n                    <span>Add</span>\n                  </button>\n                </div>\n\n                <div className=\"space-y-3\">\n                  {customSections.map((section, index) => (\n                    <div key={section.id} className=\"p-3 bg-gray-50 rounded-lg\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <input\n                          type=\"text\"\n                          value={section.name}\n                          onChange={(e) => updateCustomSection(index, { name: e.target.value })}\n                          className=\"font-medium bg-transparent border-none p-0 focus:ring-0\"\n                        />\n                        <button\n                          onClick={() => removeCustomSection(index)}\n                          className=\"text-red-500 hover:text-red-700\"\n                        >\n                          <Trash2 size={16} />\n                        </button>\n                      </div>\n                      <textarea\n                        value={section.content}\n                        onChange={(e) => updateCustomSection(index, { content: e.target.value })}\n                        placeholder=\"Section content...\"\n                        className=\"w-full text-sm bg-white border border-gray-200 rounded p-2 resize-none\"\n                        rows={3}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Options */}\n              <div className=\"mb-6\">\n                <h3 className=\"font-semibold text-gray-900 mb-3\">Options</h3>\n                <div className=\"space-y-3\">\n                  <label className=\"flex items-center space-x-3\">\n                    <input\n                      type=\"checkbox\"\n                      checked={reportOptions.includeCharts}\n                      onChange={(e) => setReportOptions(prev => ({\n                        ...prev,\n                        includeCharts: e.target.checked\n                      }))}\n                      className=\"w-5 h-5 text-blue-600 rounded\"\n                    />\n                    <span>Include charts and visualizations</span>\n                  </label>\n                  <label className=\"flex items-center space-x-3\">\n                    <input\n                      type=\"checkbox\"\n                      checked={reportOptions.includeRawData}\n                      onChange={(e) => setReportOptions(prev => ({\n                        ...prev,\n                        includeRawData: e.target.checked\n                      }))}\n                      className=\"w-5 h-5 text-blue-600 rounded\"\n                    />\n                    <span>Include raw data tables</span>\n                  </label>\n                </div>\n              </div>\n\n              {/* Generate Button */}\n              <div className=\"flex justify-end\">\n                <motion.button\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={generateReport}\n                  disabled={isGenerating}\n                  className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\"\n                >\n                  {isGenerating ? (\n                    <>\n                      <Clock className=\"animate-spin\" size={20} />\n                      <span>Generating...</span>\n                    </>\n                  ) : (\n                    <>\n                      <FileText size={20} />\n                      <span>Generate Report</span>\n                    </>\n                  )}\n                </motion.button>\n              </div>\n            </motion.div>\n          )}\n\n          {/* Generated Reports */}\n          {generatedReports.length > 0 && (\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Generated Reports</h2>\n\n              <div className=\"space-y-3\">\n                {generatedReports.map((report) => {\n                  const StatusIcon = getStatusIcon(report.status);\n\n                  return (\n                    <motion.div\n                      key={report.id}\n                      initial={{ opacity: 0, x: 20 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\"\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        <div className={`p-2 rounded-lg ${getStatusColor(report.status)}`}>\n                          <StatusIcon size={20} />\n                        </div>\n                        <div>\n                          <h3 className=\"font-semibold text-gray-900\">{report.template}</h3>\n                          <p className=\"text-sm text-gray-600\">\n                            Created {new Date(report.createdAt).toLocaleDateString()}\n                          </p>\n                        </div>\n                      </div>\n\n                      {report.status === 'completed' && (\n                        <div className=\"flex items-center space-x-2\">\n                          <button\n                            onClick={() => exportReport(report.id, 'pdf')}\n                            className=\"flex items-center space-x-1 px-3 py-2 text-blue-600 hover:bg-blue-100 rounded-lg transition-colors\"\n                          >\n                            <Download size={16} />\n                            <span>PDF</span>\n                          </button>\n                          <button\n                            onClick={() => exportReport(report.id, 'docx')}\n                            className=\"flex items-center space-x-1 px-3 py-2 text-blue-600 hover:bg-blue-100 rounded-lg transition-colors\"\n                          >\n                            <Download size={16} />\n                            <span>Word</span>\n                          </button>\n                          <button\n                            onClick={() => exportReport(report.id, 'excel')}\n                            className=\"flex items-center space-x-1 px-3 py-2 text-blue-600 hover:bg-blue-100 rounded-lg transition-colors\"\n                          >\n                            <Download size={16} />\n                            <span>Excel</span>\n                          </button>\n                        </div>\n                      )}\n                    </motion.div>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportBuilder;\n","import { FileText } from 'lucide-react';\nimport React from 'react';\n\nimport ReportBuilder from '../components/Reporting/ReportBuilder';\nimport SEOHead from '../components/SEO/SEOHead';\nimport Header from '../components/ui/Header';\n\nconst Reports = () => {\n  return (\n    <div className=\"min-h-screen bg-slate-50 dark:bg-slate-900\">\n      <SEOHead\n        title=\"Reports & IC Memos | FinanceAnalyst Pro\"\n        description=\"Generate professional investment reports, IC memos, and financial analysis documents with customizable templates and automated PDF/DOCX export.\"\n        canonical=\"/reports\"\n        keywords=\"investment reports, IC memos, financial analysis reports, PDF export, investment committee, due diligence reports\"\n      />\n\n      <Header />\n\n      <main className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        {/* Page Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center mb-4\">\n            <FileText className=\"w-8 h-8 text-blue-600 mr-3\" />\n            <h1 className=\"text-3xl font-bold text-slate-900 dark:text-white\">\n              Reports & IC Memos\n            </h1>\n          </div>\n          <p className=\"text-slate-600 dark:text-slate-400 max-w-3xl\">\n            Generate professional investment reports and IC memos with customizable templates,\n            automated data integration, and one-click PDF/DOCX export capabilities.\n          </p>\n        </div>\n\n        {/* Report Builder */}\n        <div className=\"bg-white dark:bg-slate-800 rounded-lg shadow-lg\">\n          <ReportBuilder\n            onReportGenerated={(report) => {\n              console.log('Report generated:', report);\n              // Handle report generation success\n            }}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Reports;\n"],"names":["reportingEngine","constructor","this","templates","Map","reports","themes","exportFormats","Set","isInitialized","initializeTemplates","initializeThemes","registerTemplate","name","description","category","sections","id","type","required","fields","layout","estimatedPages","registerTheme","colors","primary","secondary","accent","success","warning","error","background","surface","text","fonts","heading","body","monospace","margins","top","right","bottom","left","spacing","borderRadius","template","set","createdAt","Date","toISOString","version","theme","generateReport","templateId","data","options","get","Error","reportId","now","Math","random","toString","substr","report","format","includeCharts","includeRawData","customSections","status","sectionConfig","includedSections","includes","section","generateSection","push","customSection","generateCustomSection","document","compileReport","completedAt","message","_theme","_options","content","charts","tables","generateCoverPage","generateMetricsGrid","generateValuationCard","generateValuationCharts","generateFinancialTables","generateScenarioCharts","generateRiskMatrix","generatePerformanceDashboard","generatePerformanceCharts","generateGenericSection","_fields","companyName","company","reportTitle","reportDate","toLocaleDateString","analystName","analyst","executiveSummary","logo","disclaimer","statements","financialData","latest","incomeStatement","Object","keys","sort","pop","revenue","label","value","totalRevenue","trend","calculateTrend","profitMargin","calculateNetMargin","roe","calculateROE","balanceSheet","currentRatio","calculateCurrentRatio","dcfValue","dcfResults","enterpriseValue","marketValue","marketData","marketCap","upside","recommendation","priceTarget","assumptions","sharesOutstanding","confidence","methodology","formatIncomeStatement","formatBalanceSheet","cashFlow","formatCashFlowStatement","ratios","calculateFinancialRatios","title","generateScenarioData","chartType","generateSensitivityData","metadata","author","subject","creator","pages","renderSection","addPageElements","_layout","summary","chart","table","exportReport","has","exportedData","exportToPDF","exportToWord","exportToPowerPoint","exportToHTML","exportToExcel","filename","generateFilename","size","length","exportedAt","getTemplates","Array","from","values","filter","t","getThemes","getReport","listReports","map","field","periods","previous","incomeData","netIncome","balanceData","equity","totalEquity","currentAssets","currentLiabilities","formatted","rows","key","row","period","_statements","profitability","liquidity","efficiency","leverage","scenario","_data","variable","impact","_report","Uint8Array","date","split","replace","forEach","page","index","pageNumber","totalPages","header","footer","risks","level","opportunities","potential","totalReturn","performance","benchmarkReturn","alpha","sharpeRatio","maxDrawdown","timeSeries","attribution","ReportBuilder","onReportGenerated","selectedTemplate","setSelectedTemplate","useState","selectedTheme","setSelectedTheme","reportOptions","setReportOptions","setCustomSections","isGenerating","setIsGenerating","generatedReports","setGeneratedReports","setTemplates","setThemes","previewMode","setPreviewMode","useEffect","loadTemplatesAndThemes","loadExistingReports","async","availableTemplates","availableThemes","updateCustomSection","updates","prev","i","exportedReport","blob","Blob","getContentType","url","URL","createObjectURL","link","createElement","href","download","click","revokeObjectURL","alert","pdf","docx","pptx","html","excel","getStatusColor","completed","generating","jsxs","className","children","jsx","onClick","Eye","Layout","motion","div","whileHover","scale","requiredSections","handleTemplateSelect","Palette","style","backgroundColor","initial","opacity","y","animate","Settings","checked","disabled","onChange","handleSectionToggle","sectionId","newSection","Plus","e","target","_","removeCustomSection","Trash2","placeholder","button","whileTap","reportData","Fragment","Clock","FileText","StatusIcon","Check","AlertCircle","x","Download","Reports","SEOHead","canonical","keywords","Header"],"mappings":"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"}