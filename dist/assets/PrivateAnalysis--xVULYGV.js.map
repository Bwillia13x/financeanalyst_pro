{"version":3,"file":"PrivateAnalysis--xVULYGV.js","sources":["../../src/services/storageService.js","../../src/services/financialDataStorage.js","../../src/components/DataExportImport.jsx","../../src/components/PrivateAnalysis/AdvancedLBOTool.jsx","../../src/components/PrivateAnalysis/AnalysisResults.jsx","../../src/components/PrivateAnalysis/ContextualInsightsSidebar.jsx","../../src/components/PrivateAnalysis/EnhancedMarketDataDashboard.jsx","../../src/components/PrivateAnalysis/EnhancedScenarioAnalysis.jsx","../../src/components/PrivateAnalysis/FinancialModelWorkspace.jsx","../../src/components/PrivateAnalysis/FinancialSpreadsheet.jsx","../../src/components/PrivateAnalysis/DataVisualization.jsx","../../src/components/PrivateAnalysis/WACCCalculator.jsx","../../src/components/PrivateAnalysis/AdvancedDCF.jsx","../../src/components/PrivateAnalysis/ComparableAnalysis.jsx","../../src/services/monteCarloEngine.js","../../src/components/PrivateAnalysis/MonteCarloSimulation.jsx","../../src/components/PrivateAnalysis/ScenarioModeling.jsx","../../src/components/PrivateAnalysis/SensitivityAnalysis.jsx","../../src/components/PrivateAnalysis/ModelingTools.jsx","../../src/components/PrivateAnalysis/MonteCarloIntegrationHub.jsx","../../src/services/collaborationService.js","../../src/components/ui/ContextualHelp.jsx","../../src/components/ui/LoadingSkeleton.jsx","../../src/components/ui/ErrorBoundary.jsx","../../src/config/onboardingTours.js","../../src/hooks/useOnboarding.js","../../src/pages/PrivateAnalysis.jsx","../../src/hooks/useCollaboration.js"],"sourcesContent":["/**\n * Enhanced Local Storage Service for Finance Analyst Pro\n * Provides comprehensive data persistence with compression, encryption, and versioning\n */\n\nimport { apiLogger } from '../utils/apiLogger.js';\n\n// Storage configuration\nconst STORAGE_CONFIG = {\n  version: '1.0.0',\n  prefix: 'financeanalyst_',\n  compression: {\n    enabled: true,\n    threshold: 1024 // Compress data larger than 1KB\n  },\n  encryption: {\n    enabled: false, // Will be enabled when auth is implemented\n    algorithm: 'AES-GCM'\n  },\n  quotaManagement: {\n    maxSize: 50 * 1024 * 1024, // 50MB limit\n    cleanupThreshold: 0.8 // Clean up when 80% full\n  }\n};\n\n// Data schemas for validation\nconst DATA_SCHEMAS = {\n  dcfModel: {\n    version: '1.0',\n    required: ['symbol', 'assumptions', 'projections', 'valuation'],\n    structure: {\n      symbol: 'string',\n      assumptions: 'object',\n      projections: 'object',\n      valuation: 'object',\n      metadata: 'object'\n    }\n  },\n  lboModel: {\n    version: '1.0',\n    required: ['symbol', 'transaction', 'financing', 'returns'],\n    structure: {\n      symbol: 'string',\n      transaction: 'object',\n      financing: 'object',\n      returns: 'object',\n      metadata: 'object'\n    }\n  },\n  monteCarloResults: {\n    version: '1.0',\n    required: ['modelType', 'iterations', 'results', 'statistics'],\n    structure: {\n      modelType: 'string',\n      iterations: 'number',\n      results: 'array',\n      statistics: 'object',\n      metadata: 'object'\n    }\n  },\n  userPreferences: {\n    version: '1.0',\n    required: ['theme', 'layout'],\n    structure: {\n      theme: 'string',\n      layout: 'object',\n      notifications: 'object',\n      privacy: 'object'\n    }\n  },\n  marketData: {\n    version: '1.0',\n    required: ['symbol', 'data', 'timestamp'],\n    structure: {\n      symbol: 'string',\n      data: 'object',\n      timestamp: 'number',\n      source: 'string'\n    }\n  }\n};\n\n/**\n * Enhanced Storage Service Class\n */\nclass StorageService {\n  constructor() {\n    this.isAvailable = this.checkStorageAvailability();\n    this.compressionWorker = null;\n    this.initializeCompression();\n    this.setupQuotaMonitoring();\n  }\n\n  /**\n   * Check if localStorage is available\n   */\n  checkStorageAvailability() {\n    try {\n      const test = '__storage_test__';\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      apiLogger.log('ERROR', 'localStorage not available', { error: e.message });\n      return false;\n    }\n  }\n\n  /**\n   * Initialize compression capabilities\n   */\n  initializeCompression() {\n    if (STORAGE_CONFIG.compression.enabled && 'CompressionStream' in window) {\n      // Modern browsers with compression support\n      this.compressionAvailable = true;\n    } else {\n      // Fallback to simple JSON stringification\n      this.compressionAvailable = false;\n    }\n  }\n\n  /**\n   * Setup quota monitoring\n   */\n  setupQuotaMonitoring() {\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      this.monitorQuota();\n    }\n  }\n\n  /**\n   * Monitor storage quota usage\n   */\n  async monitorQuota() {\n    try {\n      const estimate = await navigator.storage.estimate();\n      const usageRatio = estimate.usage / estimate.quota;\n\n      if (usageRatio > STORAGE_CONFIG.quotaManagement.cleanupThreshold) {\n        apiLogger.log('WARN', 'Storage quota threshold exceeded', {\n          usage: estimate.usage,\n          quota: estimate.quota,\n          ratio: usageRatio\n        });\n        await this.performCleanup();\n      }\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to monitor storage quota', { error: error.message });\n    }\n  }\n\n  /**\n   * Generate storage key with prefix\n   */\n  generateKey(type, identifier) {\n    return `${STORAGE_CONFIG.prefix}${type}_${identifier}`;\n  }\n\n  /**\n   * Validate data against schema\n   */\n  validateData(data, schemaType) {\n    const schema = DATA_SCHEMAS[schemaType];\n    if (!schema) {\n      throw new Error(`Unknown schema type: ${schemaType}`);\n    }\n\n    // Check required fields\n    for (const field of schema.required) {\n      if (!(field in data)) {\n        throw new Error(`Missing required field: ${field}`);\n      }\n    }\n\n    // Validate data types\n    for (const [field, expectedType] of Object.entries(schema.structure)) {\n      if (field in data) {\n        const actualType = Array.isArray(data[field]) ? 'array' : typeof data[field];\n        if (actualType !== expectedType) {\n          throw new Error(`Invalid type for ${field}: expected ${expectedType}, got ${actualType}`);\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Compress data if enabled and beneficial\n   */\n  async compressData(data) {\n    const jsonString = JSON.stringify(data);\n\n    if (!STORAGE_CONFIG.compression.enabled ||\n        jsonString.length < STORAGE_CONFIG.compression.threshold ||\n        !this.compressionAvailable) {\n      return { data: jsonString, compressed: false };\n    }\n\n    try {\n      // Simple compression using built-in methods\n      const compressed = await this.simpleCompress(jsonString);\n      return { data: compressed, compressed: true };\n    } catch (error) {\n      apiLogger.log('WARN', 'Compression failed, storing uncompressed', { error: error.message });\n      return { data: jsonString, compressed: false };\n    }\n  }\n\n  /**\n   * Simple compression implementation\n   */\n  async simpleCompress(data) {\n    // For now, use a simple encoding - can be enhanced with actual compression\n    return btoa(encodeURIComponent(data));\n  }\n\n  /**\n   * Decompress data\n   */\n  async decompressData(compressedData, isCompressed) {\n    if (!isCompressed) {\n      return compressedData;\n    }\n\n    try {\n      return decodeURIComponent(atob(compressedData));\n    } catch (error) {\n      apiLogger.log('ERROR', 'Decompression failed', { error: error.message });\n      throw new Error('Failed to decompress data');\n    }\n  }\n\n  /**\n   * Store data with metadata\n   */\n  async setItem(type, identifier, data, options = {}) {\n    if (!this.isAvailable) {\n      throw new Error('Storage not available');\n    }\n\n    try {\n      // Validate data if schema exists\n      if (DATA_SCHEMAS[type]) {\n        this.validateData(data, type);\n      }\n\n      // Prepare storage object\n      const storageObject = {\n        version: STORAGE_CONFIG.version,\n        schemaVersion: DATA_SCHEMAS[type]?.version || '1.0',\n        timestamp: Date.now(),\n        data,\n        metadata: {\n          type,\n          identifier,\n          size: JSON.stringify(data).length,\n          ...options.metadata\n        }\n      };\n\n      // Compress if needed\n      const { data: processedData, compressed } = await this.compressData(storageObject);\n\n      // Add compression flag\n      const finalObject = {\n        compressed,\n        data: processedData\n      };\n\n      const key = this.generateKey(type, identifier);\n      localStorage.setItem(key, JSON.stringify(finalObject));\n\n      apiLogger.log('DEBUG', 'Data stored successfully', {\n        key,\n        type,\n        identifier,\n        compressed,\n        size: processedData.length\n      });\n\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to store data', {\n        type,\n        identifier,\n        error: error.message\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Retrieve data with decompression\n   */\n  async getItem(type, identifier) {\n    if (!this.isAvailable) {\n      return null;\n    }\n\n    try {\n      const key = this.generateKey(type, identifier);\n      const stored = localStorage.getItem(key);\n\n      if (!stored) {\n        return null;\n      }\n\n      const parsedStored = JSON.parse(stored);\n      const decompressedData = await this.decompressData(\n        parsedStored.data,\n        parsedStored.compressed\n      );\n\n      const storageObject = JSON.parse(decompressedData);\n\n      // Check version compatibility\n      if (storageObject.version !== STORAGE_CONFIG.version) {\n        apiLogger.log('WARN', 'Version mismatch detected', {\n          stored: storageObject.version,\n          current: STORAGE_CONFIG.version\n        });\n        // Could trigger migration here\n      }\n\n      apiLogger.log('DEBUG', 'Data retrieved successfully', {\n        key,\n        type,\n        identifier,\n        age: Date.now() - storageObject.timestamp\n      });\n\n      return storageObject.data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve data', {\n        type,\n        identifier,\n        error: error.message\n      });\n      return null;\n    }\n  }\n\n  /**\n   * Remove specific item\n   */\n  removeItem(type, identifier) {\n    if (!this.isAvailable) {\n      return false;\n    }\n\n    try {\n      const key = this.generateKey(type, identifier);\n      localStorage.removeItem(key);\n\n      apiLogger.log('DEBUG', 'Data removed successfully', { key, type, identifier });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to remove data', {\n        type,\n        identifier,\n        error: error.message\n      });\n      return false;\n    }\n  }\n\n  /**\n   * List all items of a specific type\n   */\n  listItems(type) {\n    if (!this.isAvailable) {\n      return [];\n    }\n\n    const prefix = this.generateKey(type, '');\n    const items = [];\n\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(prefix)) {\n        const identifier = key.replace(prefix, '');\n        items.push(identifier);\n      }\n    }\n\n    return items;\n  }\n\n  /**\n   * Perform cleanup of old data\n   */\n  async performCleanup() {\n    const cutoffTime = Date.now() - (30 * 24 * 60 * 60 * 1000); // 30 days\n    let cleanedCount = 0;\n\n    for (let i = localStorage.length - 1; i >= 0; i--) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(STORAGE_CONFIG.prefix)) {\n        try {\n          const stored = localStorage.getItem(key);\n          const parsedStored = JSON.parse(stored);\n          const decompressedData = await this.decompressData(\n            parsedStored.data,\n            parsedStored.compressed\n          );\n          const storageObject = JSON.parse(decompressedData);\n\n          if (storageObject.timestamp < cutoffTime) {\n            localStorage.removeItem(key);\n            cleanedCount++;\n          }\n        } catch {\n          // Remove corrupted data\n          localStorage.removeItem(key);\n          cleanedCount++;\n        }\n      }\n    }\n\n    apiLogger.log('INFO', 'Storage cleanup completed', { cleanedCount });\n    return cleanedCount;\n  }\n\n  /**\n   * Get storage statistics\n   */\n  async getStorageStats() {\n    let totalSize = 0;\n    let itemCount = 0;\n    const typeStats = {};\n\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(STORAGE_CONFIG.prefix)) {\n        const value = localStorage.getItem(key);\n        totalSize += value.length;\n        itemCount++;\n\n        // Extract type from key\n        const type = key.split('_')[1];\n        if (type) {\n          typeStats[type] = (typeStats[type] || 0) + 1;\n        }\n      }\n    }\n\n    const quota = await this.getQuotaInfo();\n\n    return {\n      totalSize,\n      itemCount,\n      typeStats,\n      quota,\n      usageRatio: quota ? totalSize / quota.quota : 0\n    };\n  }\n\n  /**\n   * Get quota information\n   */\n  async getQuotaInfo() {\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      try {\n        return await navigator.storage.estimate();\n      } catch (error) {\n        apiLogger.log('ERROR', 'Failed to get quota info', { error: error.message });\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Clear all application data\n   */\n  clearAll() {\n    if (!this.isAvailable) {\n      return false;\n    }\n\n    const keys = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(STORAGE_CONFIG.prefix)) {\n        keys.push(key);\n      }\n    }\n\n    keys.forEach(key => localStorage.removeItem(key));\n\n    apiLogger.log('INFO', 'All application data cleared', { clearedCount: keys.length });\n    return true;\n  }\n}\n\n// Create and export singleton instance\nexport const storageService = new StorageService();\nexport default storageService;\n","/**\n * Financial Data Storage Service\n * Specialized storage utilities for financial models and market data\n */\n\nimport { apiLogger } from '../utils/apiLogger.js';\n\nimport { storageService } from './storageService.js';\n\n/**\n * Financial Data Storage Manager\n */\nclass FinancialDataStorage {\n  constructor() {\n    this.storage = storageService;\n  }\n\n  /**\n   * DCF Model Storage\n   */\n  async saveDCFModel(symbol, modelData) {\n    try {\n      const dcfData = {\n        symbol: symbol.toUpperCase(),\n        assumptions: modelData.assumptions || {},\n        projections: modelData.projections || {},\n        valuation: modelData.valuation || {},\n        metadata: {\n          createdAt: Date.now(),\n          lastModified: Date.now(),\n          version: '1.0',\n          modelType: 'DCF',\n          ...modelData.metadata\n        }\n      };\n\n      await this.storage.setItem('dcfModel', symbol.toUpperCase(), dcfData);\n\n      apiLogger.log('INFO', 'DCF model saved', { symbol, valuation: dcfData.valuation.intrinsicValue });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save DCF model', { symbol, error: error.message });\n      throw error;\n    }\n  }\n\n  async getDCFModel(symbol) {\n    try {\n      const data = await this.storage.getItem('dcfModel', symbol.toUpperCase());\n      if (data) {\n        apiLogger.log('DEBUG', 'DCF model retrieved', { symbol });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve DCF model', { symbol, error: error.message });\n      return null;\n    }\n  }\n\n  async listDCFModels() {\n    return this.storage.listItems('dcfModel');\n  }\n\n  async deleteDCFModel(symbol) {\n    return this.storage.removeItem('dcfModel', symbol.toUpperCase());\n  }\n\n  /**\n   * LBO Model Storage\n   */\n  async saveLBOModel(symbol, modelData) {\n    try {\n      const lboData = {\n        symbol: symbol.toUpperCase(),\n        transaction: modelData.transaction || {},\n        financing: modelData.financing || {},\n        returns: modelData.returns || {},\n        metadata: {\n          createdAt: Date.now(),\n          lastModified: Date.now(),\n          version: '1.0',\n          modelType: 'LBO',\n          ...modelData.metadata\n        }\n      };\n\n      await this.storage.setItem('lboModel', symbol.toUpperCase(), lboData);\n\n      apiLogger.log('INFO', 'LBO model saved', {\n        symbol,\n        irr: lboData.returns.irr,\n        moic: lboData.returns.moic\n      });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save LBO model', { symbol, error: error.message });\n      throw error;\n    }\n  }\n\n  async getLBOModel(symbol) {\n    try {\n      const data = await this.storage.getItem('lboModel', symbol.toUpperCase());\n      if (data) {\n        apiLogger.log('DEBUG', 'LBO model retrieved', { symbol });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve LBO model', { symbol, error: error.message });\n      return null;\n    }\n  }\n\n  async listLBOModels() {\n    return this.storage.listItems('lboModel');\n  }\n\n  async deleteLBOModel(symbol) {\n    return this.storage.removeItem('lboModel', symbol.toUpperCase());\n  }\n\n  /**\n   * Monte Carlo Results Storage\n   */\n  async saveMonteCarloResults(modelId, resultsData) {\n    try {\n      const mcData = {\n        modelType: resultsData.modelType || 'DCF',\n        iterations: resultsData.iterations || 10000,\n        results: resultsData.results || [],\n        statistics: resultsData.statistics || {},\n        metadata: {\n          createdAt: Date.now(),\n          modelId,\n          symbol: resultsData.symbol,\n          version: '1.0',\n          ...resultsData.metadata\n        }\n      };\n\n      await this.storage.setItem('monteCarloResults', modelId, mcData);\n\n      apiLogger.log('INFO', 'Monte Carlo results saved', {\n        modelId,\n        iterations: mcData.iterations,\n        mean: mcData.statistics.mean\n      });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save Monte Carlo results', { modelId, error: error.message });\n      throw error;\n    }\n  }\n\n  async getMonteCarloResults(modelId) {\n    try {\n      const data = await this.storage.getItem('monteCarloResults', modelId);\n      if (data) {\n        apiLogger.log('DEBUG', 'Monte Carlo results retrieved', { modelId });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve Monte Carlo results', { modelId, error: error.message });\n      return null;\n    }\n  }\n\n  async listMonteCarloResults() {\n    return this.storage.listItems('monteCarloResults');\n  }\n\n  async deleteMonteCarloResults(modelId) {\n    return this.storage.removeItem('monteCarloResults', modelId);\n  }\n\n  /**\n   * Market Data Storage with TTL\n   */\n  async saveMarketData(symbol, marketData, ttlMinutes = 15) {\n    try {\n      const data = {\n        symbol: symbol.toUpperCase(),\n        data: marketData,\n        timestamp: Date.now(),\n        source: marketData.source || 'unknown',\n        expiresAt: Date.now() + (ttlMinutes * 60 * 1000)\n      };\n\n      await this.storage.setItem('marketData', symbol.toUpperCase(), data);\n\n      apiLogger.log('DEBUG', 'Market data cached', {\n        symbol,\n        source: data.source,\n        ttlMinutes\n      });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to cache market data', { symbol, error: error.message });\n      throw error;\n    }\n  }\n\n  async getMarketData(symbol) {\n    try {\n      const data = await this.storage.getItem('marketData', symbol.toUpperCase());\n\n      if (data && data.expiresAt > Date.now()) {\n        apiLogger.log('DEBUG', 'Market data cache hit', { symbol });\n        return data.data;\n      } else if (data) {\n        // Data expired, remove it\n        await this.deleteMarketData(symbol);\n        apiLogger.log('DEBUG', 'Market data cache expired', { symbol });\n      }\n\n      return null;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve market data', { symbol, error: error.message });\n      return null;\n    }\n  }\n\n  async deleteMarketData(symbol) {\n    return this.storage.removeItem('marketData', symbol.toUpperCase());\n  }\n\n  /**\n   * User Preferences Storage\n   */\n  async saveUserPreferences(preferences) {\n    try {\n      const prefData = {\n        theme: preferences.theme || 'light',\n        layout: preferences.layout || {},\n        notifications: preferences.notifications || {},\n        privacy: preferences.privacy || {},\n        metadata: {\n          lastUpdated: Date.now(),\n          version: '1.0'\n        }\n      };\n\n      await this.storage.setItem('userPreferences', 'default', prefData);\n\n      apiLogger.log('INFO', 'User preferences saved', { theme: prefData.theme });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save user preferences', { error: error.message });\n      throw error;\n    }\n  }\n\n  async getUserPreferences() {\n    try {\n      const data = await this.storage.getItem('userPreferences', 'default');\n      if (data) {\n        apiLogger.log('DEBUG', 'User preferences retrieved');\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve user preferences', { error: error.message });\n      return null;\n    }\n  }\n\n  /**\n   * Watchlist Storage\n   */\n  async saveWatchlist(name, symbols) {\n    try {\n      const watchlistData = {\n        name,\n        symbols: symbols.map(s => s.toUpperCase()),\n        metadata: {\n          createdAt: Date.now(),\n          lastModified: Date.now(),\n          symbolCount: symbols.length\n        }\n      };\n\n      await this.storage.setItem('watchlist', name, watchlistData);\n\n      apiLogger.log('INFO', 'Watchlist saved', { name, symbolCount: symbols.length });\n      return true;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to save watchlist', { name, error: error.message });\n      throw error;\n    }\n  }\n\n  async getWatchlist(name) {\n    try {\n      const data = await this.storage.getItem('watchlist', name);\n      if (data) {\n        apiLogger.log('DEBUG', 'Watchlist retrieved', { name });\n      }\n      return data;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to retrieve watchlist', { name, error: error.message });\n      return null;\n    }\n  }\n\n  async listWatchlists() {\n    return this.storage.listItems('watchlist');\n  }\n\n  async deleteWatchlist(name) {\n    return this.storage.removeItem('watchlist', name);\n  }\n\n  /**\n   * Export all financial data\n   */\n  async exportAllData() {\n    try {\n      const exportData = {\n        timestamp: Date.now(),\n        version: '1.0',\n        data: {\n          dcfModels: {},\n          lboModels: {},\n          monteCarloResults: {},\n          watchlists: {},\n          userPreferences: null\n        }\n      };\n\n      // Export DCF models\n      const dcfModels = await this.listDCFModels();\n      for (const symbol of dcfModels) {\n        exportData.data.dcfModels[symbol] = await this.getDCFModel(symbol);\n      }\n\n      // Export LBO models\n      const lboModels = await this.listLBOModels();\n      for (const symbol of lboModels) {\n        exportData.data.lboModels[symbol] = await this.getLBOModel(symbol);\n      }\n\n      // Export Monte Carlo results\n      const mcResults = await this.listMonteCarloResults();\n      for (const modelId of mcResults) {\n        exportData.data.monteCarloResults[modelId] = await this.getMonteCarloResults(modelId);\n      }\n\n      // Export watchlists\n      const watchlists = await this.listWatchlists();\n      for (const name of watchlists) {\n        exportData.data.watchlists[name] = await this.getWatchlist(name);\n      }\n\n      // Export user preferences\n      exportData.data.userPreferences = await this.getUserPreferences();\n\n      apiLogger.log('INFO', 'Data export completed', {\n        dcfCount: dcfModels.length,\n        lboCount: lboModels.length,\n        mcCount: mcResults.length,\n        watchlistCount: watchlists.length\n      });\n\n      return exportData;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to export data', { error: error.message });\n      throw error;\n    }\n  }\n\n  /**\n   * Import financial data\n   */\n  async importData(importData) {\n    try {\n      let importCount = 0;\n\n      // Import DCF models\n      if (importData.data.dcfModels) {\n        for (const [symbol, data] of Object.entries(importData.data.dcfModels)) {\n          await this.saveDCFModel(symbol, data);\n          importCount++;\n        }\n      }\n\n      // Import LBO models\n      if (importData.data.lboModels) {\n        for (const [symbol, data] of Object.entries(importData.data.lboModels)) {\n          await this.saveLBOModel(symbol, data);\n          importCount++;\n        }\n      }\n\n      // Import Monte Carlo results\n      if (importData.data.monteCarloResults) {\n        for (const [modelId, data] of Object.entries(importData.data.monteCarloResults)) {\n          await this.saveMonteCarloResults(modelId, data);\n          importCount++;\n        }\n      }\n\n      // Import watchlists\n      if (importData.data.watchlists) {\n        for (const [name, data] of Object.entries(importData.data.watchlists)) {\n          await this.saveWatchlist(name, data.symbols);\n          importCount++;\n        }\n      }\n\n      // Import user preferences\n      if (importData.data.userPreferences) {\n        await this.saveUserPreferences(importData.data.userPreferences);\n        importCount++;\n      }\n\n      apiLogger.log('INFO', 'Data import completed', { importCount });\n      return importCount;\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to import data', { error: error.message });\n      throw error;\n    }\n  }\n\n  /**\n   * Get storage statistics for financial data\n   */\n  async getFinancialDataStats() {\n    const stats = await this.storage.getStorageStats();\n\n    return {\n      ...stats,\n      financialData: {\n        dcfModels: (await this.listDCFModels()).length,\n        lboModels: (await this.listLBOModels()).length,\n        monteCarloResults: (await this.listMonteCarloResults()).length,\n        watchlists: (await this.listWatchlists()).length\n      }\n    };\n  }\n\n  /**\n   * Clean up expired market data\n   */\n  async cleanupExpiredMarketData() {\n    const marketDataKeys = this.storage.listItems('marketData');\n    let cleanedCount = 0;\n\n    for (const symbol of marketDataKeys) {\n      const data = await this.storage.getItem('marketData', symbol);\n      if (data && data.expiresAt <= Date.now()) {\n        await this.deleteMarketData(symbol);\n        cleanedCount++;\n      }\n    }\n\n    apiLogger.log('INFO', 'Expired market data cleaned', { cleanedCount });\n    return cleanedCount;\n  }\n}\n\n// Create and export singleton instance\nexport const financialDataStorage = new FinancialDataStorage();\nexport default financialDataStorage;\n","/**\n * Data Export/Import Component\n * Provides UI for exporting and importing financial data\n */\n\nimport {\n  Download,\n  Upload,\n  FileText,\n  CheckCircle,\n  Loader2,\n  Info,\n  AlertCircle,\n  FileSpreadsheet,\n  Bookmark,\n  Users,\n  Database\n} from 'lucide-react';\nimport React, { useState } from 'react';\n\nimport { financialDataStorage } from '../services/financialDataStorage.js';\nimport { apiLogger } from '../utils/apiLogger.js';\n\nconst defaultTemplates = [\n  { id: 1, name: 'Standard 3-Statement Model', category: 'General', lastUsed: '2024-01-15', uses: 42 },\n  { id: 2, name: 'SaaS DCF Template', category: 'Technology', lastUsed: '2024-01-10', uses: 28 },\n  { id: 3, name: 'LBO Analysis Template', category: 'Private Equity', lastUsed: '2024-01-05', uses: 35 }\n];\n\nconst DataExportImport = ({ data: _data, onDataChange: _onDataChange, savedAnalyses: _savedAnalyses, onAnalysesChange: _onAnalysesChange, onClose, className: _className }) => {\n  const [activeTab, setActiveTab] = useState('excel');\n  const [isExporting, setIsExporting] = useState(false);\n  const [isImporting, setIsImporting] = useState(false);\n  const [exportStatus, setExportStatus] = useState(null);\n  const [importStatus, setImportStatus] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [templates, _setTemplates] = useState(defaultTemplates);\n  const [collaborators, _setCollaborators] = useState([\n    { id: 1, name: 'John Smith', email: 'john@company.com', role: 'Analyst', lastActive: '2 min ago', avatar: 'JS' },\n    { id: 2, name: 'Sarah Johnson', email: 'sarah@company.com', role: 'VP', lastActive: '1 hour ago', avatar: 'SJ' }\n  ]);\n\n  // Load storage statistics on component mount\n  React.useEffect(() => {\n    loadStats();\n  }, []);\n\n  const loadStats = async() => {\n    try {\n      const storageStats = await financialDataStorage.getFinancialDataStats();\n      setStats(storageStats);\n    } catch (error) {\n      apiLogger.log('ERROR', 'Failed to load storage stats', { error: error.message });\n    }\n  };\n\n  const handleExport = async() => {\n    setIsExporting(true);\n    setExportStatus(null);\n\n    try {\n      const exportData = await financialDataStorage.exportAllData();\n\n      // Create downloadable file\n      const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n        type: 'application/json'\n      });\n\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `financeanalyst_backup_${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n\n      setExportStatus({\n        type: 'success',\n        message: 'Data exported successfully',\n        details: {\n          dcfModels: Object.keys(exportData.data.dcfModels).length,\n          lboModels: Object.keys(exportData.data.lboModels).length,\n          monteCarloResults: Object.keys(exportData.data.monteCarloResults).length,\n          watchlists: Object.keys(exportData.data.watchlists).length\n        }\n      });\n\n      apiLogger.log('INFO', 'Data export completed', {\n        totalItems: Object.keys(exportData.data.dcfModels).length +\n                   Object.keys(exportData.data.lboModels).length +\n                   Object.keys(exportData.data.monteCarloResults).length +\n                   Object.keys(exportData.data.watchlists).length\n      });\n    } catch (error) {\n      setExportStatus({\n        type: 'error',\n        message: 'Export failed',\n        details: error.message\n      });\n      apiLogger.log('ERROR', 'Data export failed', { error: error.message });\n    } finally {\n      setIsExporting(false);\n    }\n  };\n\n  const handleImport = async(event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    setIsImporting(true);\n    setImportStatus(null);\n\n    try {\n      const text = await file.text();\n      const importData = JSON.parse(text);\n\n      // Validate import data structure\n      if (!importData.data || !importData.version) {\n        throw new Error('Invalid backup file format');\n      }\n\n      const importCount = await financialDataStorage.importData(importData);\n\n      setImportStatus({\n        type: 'success',\n        message: 'Data imported successfully',\n        details: {\n          importCount,\n          timestamp: new Date(importData.timestamp).toLocaleString()\n        }\n      });\n\n      // Refresh stats\n      await loadStats();\n\n      apiLogger.log('INFO', 'Data import completed', { importCount });\n    } catch (error) {\n      setImportStatus({\n        type: 'error',\n        message: 'Import failed',\n        details: error.message\n      });\n      apiLogger.log('ERROR', 'Data import failed', { error: error.message });\n    } finally {\n      setIsImporting(false);\n      // Clear file input\n      event.target.value = '';\n    }\n  };\n\n  const formatBytes = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Data Management</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            ×\n          </button>\n        </div>\n\n        {/* Tab Navigation */}\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8\">\n            {[\n              { id: 'excel', label: 'Excel Integration', icon: FileSpreadsheet },\n              { id: 'templates', label: 'Templates', icon: Bookmark },\n              { id: 'collaboration', label: 'Collaboration', icon: Users },\n              { id: 'export', label: 'Export', icon: Download },\n              { id: 'import', label: 'Import', icon: Upload },\n              { id: 'stats', label: 'Statistics', icon: Database }\n            ].map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span>{tab.label}</span>\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n\n          {activeTab === 'excel' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-start\">\n                  <Info className=\"w-5 h-5 text-blue-600 mt-0.5 mr-3\" />\n                  <div>\n                    <h3 className=\"font-medium text-blue-900\">Excel Integration</h3>\n                    <p className=\"text-sm text-blue-700 mt-1\">\n                      Connect your Excel spreadsheets to FinanceAnalyst for seamless data synchronization.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <button\n                onClick={handleExport}\n                disabled={isExporting}\n                className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center\"\n              >\n                {isExporting ? (\n                  <>\n                    <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                    Exporting...\n                  </>\n                ) : (\n                  <>\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Export All Data\n                  </>\n                )}\n              </button>\n\n              {exportStatus && (\n                <div\n                  className={`border rounded-lg p-4 ${\n                    exportStatus.type === 'success'\n                      ? 'bg-green-50 border-green-200'\n                      : 'bg-red-50 border-red-200'\n                  }`}\n                >\n                  <div className=\"flex items-start\">\n                    {exportStatus.type === 'success' ? (\n                      <CheckCircle className=\"w-5 h-5 text-green-600 mt-0.5 mr-3\" />\n                    ) : (\n                      <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5 mr-3\" />\n                    )}\n                    <div>\n                      <h4\n                        className={`font-medium ${\n                          exportStatus.type === 'success' ? 'text-green-900' : 'text-red-900'\n                        }`}\n                      >\n                        {exportStatus.message}\n                      </h4>\n                      {exportStatus.type === 'success' && exportStatus.details && (\n                        <div className=\"text-sm text-green-700 mt-2\">\n                          <p>Exported items:</p>\n                          <ul className=\"list-disc list-inside ml-4\">\n                            <li>{exportStatus.details.dcfModels} DCF Models</li>\n                            <li>{exportStatus.details.lboModels} LBO Models</li>\n                            <li>{exportStatus.details.monteCarloResults} Monte Carlo Results</li>\n                            <li>{exportStatus.details.watchlists} Watchlists</li>\n                          </ul>\n                        </div>\n                      )}\n                      {exportStatus.type === 'error' && (\n                        <p className=\"text-sm text-red-700 mt-1\">{exportStatus.details}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {activeTab === 'templates' && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Templates</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {templates.map((template) => (\n                  <div key={template.id} className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">{template.name}</h4>\n                    <p className=\"text-sm text-gray-600\">{template.category}</p>\n                    <p className=\"text-sm text-gray-600\">Last used: {template.lastUsed}</p>\n                    <p className=\"text-sm text-gray-600\">Uses: {template.uses}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'collaboration' && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Collaboration</h3>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {collaborators.map((collaborator) => (\n                  <div key={collaborator.id} className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">{collaborator.name}</h4>\n                    <p className=\"text-sm text-gray-600\">{collaborator.email}</p>\n                    <p className=\"text-sm text-gray-600\">Role: {collaborator.role}</p>\n                    <p className=\"text-sm text-gray-600\">Last active: {collaborator.lastActive}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'export' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                <div className=\"flex items-start\">\n                  <Info className=\"w-5 h-5 text-blue-600 mt-0.5 mr-3\" />\n                  <div>\n                    <h3 className=\"font-medium text-blue-900\">Export Your Data</h3>\n                    <p className=\"text-sm text-blue-700 mt-1\">\n                      Download all your financial models, analysis results, and preferences as a backup file.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <button\n                onClick={handleExport}\n                disabled={isExporting}\n                className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center justify-center\"\n              >\n                {isExporting ? (\n                  <>\n                    <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                    Exporting...\n                  </>\n                ) : (\n                  <>\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Export All Data\n                  </>\n                )}\n              </button>\n\n              {exportStatus && (\n                <div\n                  className={`border rounded-lg p-4 ${\n                    exportStatus.type === 'success'\n                      ? 'bg-green-50 border-green-200'\n                      : 'bg-red-50 border-red-200'\n                  }`}\n                >\n                  <div className=\"flex items-start\">\n                    {exportStatus.type === 'success' ? (\n                      <CheckCircle className=\"w-5 h-5 text-green-600 mt-0.5 mr-3\" />\n                    ) : (\n                      <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5 mr-3\" />\n                    )}\n                    <div>\n                      <h4\n                        className={`font-medium ${\n                          exportStatus.type === 'success' ? 'text-green-900' : 'text-red-900'\n                        }`}\n                      >\n                        {exportStatus.message}\n                      </h4>\n                      {exportStatus.type === 'success' && exportStatus.details && (\n                        <div className=\"text-sm text-green-700 mt-2\">\n                          <p>Exported items:</p>\n                          <ul className=\"list-disc list-inside ml-4\">\n                            <li>{exportStatus.details.dcfModels} DCF Models</li>\n                            <li>{exportStatus.details.lboModels} LBO Models</li>\n                            <li>{exportStatus.details.monteCarloResults} Monte Carlo Results</li>\n                            <li>{exportStatus.details.watchlists} Watchlists</li>\n                          </ul>\n                        </div>\n                      )}\n                      {exportStatus.type === 'error' && (\n                        <p className=\"text-sm text-red-700 mt-1\">{exportStatus.details}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n\n          {activeTab === 'import' && (\n            <div className=\"space-y-4\">\n              <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4\">\n                <div className=\"flex items-start\">\n                  <AlertCircle className=\"w-5 h-5 text-amber-600 mt-0.5 mr-3\" />\n                  <div>\n                    <h3 className=\"font-medium text-amber-900\">Import Data</h3>\n                    <p className=\"text-sm text-amber-700 mt-1\">\n                      Import data from a backup file. This will add to your existing data.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\n                <FileText className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n                <label className=\"cursor-pointer\">\n                  <span className=\"text-lg font-medium text-gray-900\">\n                    Choose backup file\n                  </span>\n                  <p className=\"text-sm text-gray-500 mt-1\">\n                    Select a JSON backup file to import\n                  </p>\n                  <input\n                    type=\"file\"\n                    accept=\".json\"\n                    onChange={handleImport}\n                    disabled={isImporting}\n                    className=\"hidden\"\n                  />\n                </label>\n              </div>\n\n              {isImporting && (\n                <div className=\"flex items-center justify-center py-4\">\n                  <Loader2 className=\"w-6 h-6 animate-spin text-blue-600 mr-2\" />\n                  <span className=\"text-gray-600\">Importing data...</span>\n                </div>\n              )}\n\n              {importStatus && (\n                <div\n                  className={`border rounded-lg p-4 ${\n                    importStatus.type === 'success'\n                      ? 'bg-green-50 border-green-200'\n                      : 'bg-red-50 border-red-200'\n                  }`}\n                >\n                  <div className=\"flex items-start\">\n                    {importStatus.type === 'success' ? (\n                      <CheckCircle className=\"w-5 h-5 text-green-600 mt-0.5 mr-3\" />\n                    ) : (\n                      <AlertCircle className=\"w-5 h-5 text-red-600 mt-0.5 mr-3\" />\n                    )}\n                    <div>\n                      <h4\n                        className={`font-medium ${\n                          importStatus.type === 'success' ? 'text-green-900' : 'text-red-900'\n                        }`}\n                      >\n                        {importStatus.message}\n                      </h4>\n                      {importStatus.type === 'success' && importStatus.details && (\n                        <div className=\"text-sm text-green-700 mt-2\">\n                          <p>Imported {importStatus.details.importCount} items</p>\n                          <p>Backup created: {importStatus.details.timestamp}</p>\n                        </div>\n                      )}\n                      {importStatus.type === 'error' && (\n                        <p className=\"text-sm text-red-700 mt-1\">{importStatus.details}</p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n\n          {activeTab === 'stats' && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Storage Statistics</h3>\n\n              {stats ? (\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Storage Usage</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Total Size:</span>\n                        <span className=\"font-medium\">{formatBytes(stats.totalSize)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Total Items:</span>\n                        <span className=\"font-medium\">{stats.itemCount}</span>\n                      </div>\n                      {stats.quota && (\n                        <div className=\"flex justify-between\">\n                          <span>Usage:</span>\n                          <span className=\"font-medium\">\n                            {(stats.usageRatio * 100).toFixed(1)}%\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Financial Data</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>DCF Models:</span>\n                        <span className=\"font-medium\">{stats.financialData.dcfModels}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>LBO Models:</span>\n                        <span className=\"font-medium\">{stats.financialData.lboModels}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Monte Carlo Results:</span>\n                        <span className=\"font-medium\">{stats.financialData.monteCarloResults}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Watchlists:</span>\n                        <span className=\"font-medium\">{stats.financialData.watchlists}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex items-center justify-center py-8\">\n                  <Loader2 className=\"w-6 h-6 animate-spin text-blue-600 mr-2\" />\n                  <span className=\"text-gray-600\">Loading statistics...</span>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DataExportImport;\n","import { motion } from 'framer-motion';\nimport { Building2, Calculator, DollarSign, BarChart3 } from 'lucide-react';\nimport React, { useState, useCallback } from 'react';\n\nimport { lboModelingEngine } from '../../services/lboModelingEngine.js';\n\nconst AdvancedLBOTool = ({ data: _data, onDataChange }) => {\n  const [activeTab, setActiveTab] = useState('inputs');\n  const [lboResults, setLBOResults] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n\n  const [lboInputs, setLBOInputs] = useState({\n    symbol: 'COMPANY',\n    companyName: 'Target Company',\n    purchasePrice: 500000000,\n    ebitda: 75000000,\n    revenue: 500000000,\n    equityContribution: 0.35,\n    seniorDebtMultiple: 4.0,\n    subordinatedDebtMultiple: 1.5,\n    seniorInterestRate: 0.055,\n    subordinatedInterestRate: 0.095,\n    ebitdaGrowthRate: 0.06,\n    capexAsPercentOfRevenue: 0.03,\n    nwcAsPercentOfRevenue: 0.02,\n    holdingPeriod: 5,\n    exitMultiple: 10.0,\n    transactionFees: 0.02,\n    managementFees: 0.02,\n    taxRate: 0.21\n  });\n\n  const formatCurrency = useCallback((value) => {\n    if (!value) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    return `${(value * 100).toFixed(1)}%`;\n  }, []);\n\n  const calculateLBO = useCallback(async() => {\n    try {\n      setIsCalculating(true);\n      const modelInputs = {\n        symbol: lboInputs.symbol,\n        companyName: lboInputs.companyName,\n        purchasePrice: lboInputs.purchasePrice,\n        ebitda: lboInputs.ebitda,\n        revenue: lboInputs.revenue,\n        assumptions: {\n          debt: {\n            seniorDebtMultiple: lboInputs.seniorDebtMultiple,\n            subordinatedDebtMultiple: lboInputs.subordinatedDebtMultiple,\n            seniorInterestRate: lboInputs.seniorInterestRate,\n            subordinatedInterestRate: lboInputs.subordinatedInterestRate\n          },\n          operating: {\n            ebitdaGrowthRate: lboInputs.ebitdaGrowthRate,\n            capexAsPercentOfRevenue: lboInputs.capexAsPercentOfRevenue,\n            nwcAsPercentOfRevenue: lboInputs.nwcAsPercentOfRevenue,\n            taxRate: lboInputs.taxRate\n          },\n          exit: {\n            exitMultiple: lboInputs.exitMultiple\n          },\n          transaction: {\n            holdingPeriod: lboInputs.holdingPeriod,\n            transactionFees: lboInputs.transactionFees\n          }\n        }\n      };\n\n      const results = lboModelingEngine.buildLBOModel(modelInputs);\n      setLBOResults(results);\n\n      if (onDataChange) {\n        onDataChange({\n          lboModel: { inputs: lboInputs, results, timestamp: new Date().toISOString() }\n        });\n      }\n    } catch (error) {\n      console.error('LBO calculation error:', error);\n      alert(`Error: ${error.message}`);\n    } finally {\n      setIsCalculating(false);\n    }\n  }, [lboInputs, onDataChange]);\n\n  const handleInputChange = useCallback((field, value) => {\n    setLBOInputs(prev => ({\n      ...prev,\n      [field]: typeof value === 'string' ? parseFloat(value) || 0 : value\n    }));\n  }, []);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Building2 className=\"text-blue-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Advanced LBO Modeling</h2>\n            <p className=\"text-gray-600\">Professional leveraged buyout analysis</p>\n          </div>\n        </div>\n\n        <motion.button\n          onClick={calculateLBO}\n          disabled={isCalculating}\n          className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n            isCalculating\n              ? 'bg-gray-300 text-gray-500'\n              : 'bg-blue-600 hover:bg-blue-700 text-white'\n          }`}\n        >\n          <Calculator size={18} />\n          <span>{isCalculating ? 'Calculating...' : 'Calculate LBO'}</span>\n        </motion.button>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {[\n            { id: 'inputs', label: 'Model Inputs', icon: DollarSign },\n            { id: 'results', label: 'Results & Analysis', icon: BarChart3 }\n          ].map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{tab.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Inputs Tab */}\n      {activeTab === 'inputs' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {/* Transaction */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-3\">Transaction</h3>\n              <div className=\"space-y-3\">\n                <div>\n                  <label htmlFor=\"purchase-price\" className=\"block text-sm font-medium text-gray-700 mb-1\">Purchase Price</label>\n                  <input\n                    id=\"purchase-price\"\n                    type=\"number\"\n                    value={lboInputs.purchasePrice}\n                    onChange={(e) => handleInputChange('purchasePrice', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                  <p className=\"text-xs text-gray-500\">{formatCurrency(lboInputs.purchasePrice)}</p>\n                </div>\n                <div>\n                  <label htmlFor=\"current-ebitda\" className=\"block text-sm font-medium text-gray-700 mb-1\">Current EBITDA</label>\n                  <input\n                    id=\"current-ebitda\"\n                    type=\"number\"\n                    value={lboInputs.ebitda}\n                    onChange={(e) => handleInputChange('ebitda', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"holding-period\" className=\"block text-sm font-medium text-gray-700 mb-1\">Holding Period</label>\n                  <input\n                    id=\"holding-period\"\n                    type=\"number\"\n                    value={lboInputs.holdingPeriod}\n                    onChange={(e) => handleInputChange('holdingPeriod', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Financing */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-3\">Financing</h3>\n              <div className=\"space-y-3\">\n                <div>\n                  <label htmlFor=\"senior-debt\" className=\"block text-sm font-medium text-gray-700 mb-1\">Senior Debt Multiple</label>\n                  <input\n                    id=\"senior-debt\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={lboInputs.seniorDebtMultiple}\n                    onChange={(e) => handleInputChange('seniorDebtMultiple', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"sub-debt\" className=\"block text-sm font-medium text-gray-700 mb-1\">Sub Debt Multiple</label>\n                  <input\n                    id=\"sub-debt\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={lboInputs.subordinatedDebtMultiple}\n                    onChange={(e) => handleInputChange('subordinatedDebtMultiple', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"lbo-senior-rate\" className=\"block text-sm font-medium text-gray-700 mb-1\">Senior Rate (%)</label>\n                  <input\n                    id=\"lbo-senior-rate\"\n                    type=\"number\"\n                    step=\"0.001\"\n                    value={lboInputs.seniorInterestRate * 100}\n                    onChange={(e) => handleInputChange('seniorInterestRate', (e.target.value || 0) / 100)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Operating */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-3\">Operating</h3>\n              <div className=\"space-y-3\">\n                <div>\n                  <label htmlFor=\"lbo-ebitda-growth\" className=\"block text-sm font-medium text-gray-700 mb-1\">EBITDA Growth (%)</label>\n                  <input\n                    id=\"lbo-ebitda-growth\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={lboInputs.ebitdaGrowthRate * 100}\n                    onChange={(e) => handleInputChange('ebitdaGrowthRate', (e.target.value || 0) / 100)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"lbo-exit-multiple\" className=\"block text-sm font-medium text-gray-700 mb-1\">Exit Multiple</label>\n                  <input\n                    id=\"lbo-exit-multiple\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={lboInputs.exitMultiple}\n                    onChange={(e) => handleInputChange('exitMultiple', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"lbo-tax-rate\" className=\"block text-sm font-medium text-gray-700 mb-1\">Tax Rate (%)</label>\n                  <input\n                    id=\"lbo-tax-rate\"\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={lboInputs.taxRate * 100}\n                    onChange={(e) => handleInputChange('taxRate', (e.target.value || 0) / 100)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Results Tab */}\n      {activeTab === 'results' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          {lboResults ? (\n            <div className=\"space-y-6\">\n              {/* Key Metrics */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-blue-600\">\n                    {formatPercent(lboResults.baseCase?.returnsAnalysis?.irr || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">IRR</div>\n                </div>\n                <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-green-600\">\n                    {(lboResults.baseCase?.returnsAnalysis?.moic || 0).toFixed(1)}x\n                  </div>\n                  <div className=\"text-sm text-gray-600\">MOIC</div>\n                </div>\n                <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-purple-600\">\n                    {(lboResults.transactionStructure?.debtToEbitda || 0).toFixed(1)}x\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Leverage</div>\n                </div>\n                <div className=\"bg-orange-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-orange-600\">\n                    {formatCurrency(lboResults.baseCase?.exitAnalysis?.equityProceeds || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Exit Value</div>\n                </div>\n              </div>\n\n              {/* Transaction Structure */}\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <h3 className=\"text-lg font-semibold mb-4\">Transaction Structure</h3>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Purchase Price:</span>\n                      <span className=\"font-medium\">{formatCurrency(lboResults.transactionStructure?.purchasePrice)}</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Total Debt:</span>\n                      <span className=\"font-medium\">{formatCurrency(lboResults.transactionStructure?.totalDebt)}</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Equity Investment:</span>\n                      <span className=\"font-medium\">{formatCurrency(lboResults.transactionStructure?.equityContribution)}</span>\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Entry Multiple:</span>\n                      <span className=\"font-medium\">{(lboResults.transactionStructure?.entryMultiple || 0).toFixed(1)}x</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Debt/EBITDA:</span>\n                      <span className=\"font-medium\">{(lboResults.transactionStructure?.debtToEbitda || 0).toFixed(1)}x</span>\n                    </div>\n                    <div className=\"flex justify-between py-2\">\n                      <span>Equity %:</span>\n                      <span className=\"font-medium\">{formatPercent(lboResults.transactionStructure?.equityPercentage || 0)}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Scenarios */}\n              {lboResults.scenarios && Object.keys(lboResults.scenarios).length > 0 && (\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Scenario Analysis</h3>\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full\">\n                      <thead>\n                        <tr className=\"border-b border-gray-300\">\n                          <th className=\"text-left py-2\">Scenario</th>\n                          <th className=\"text-right py-2\">IRR</th>\n                          <th className=\"text-right py-2\">MOIC</th>\n                          <th className=\"text-right py-2\">Exit Value</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr className=\"border-b border-gray-200\">\n                          <td className=\"py-2 font-medium\">Base Case</td>\n                          <td className=\"text-right py-2\">{formatPercent(lboResults.baseCase?.returnsAnalysis?.irr || 0)}</td>\n                          <td className=\"text-right py-2\">{(lboResults.baseCase?.returnsAnalysis?.moic || 0).toFixed(1)}x</td>\n                          <td className=\"text-right py-2\">{formatCurrency(lboResults.baseCase?.exitAnalysis?.equityProceeds || 0)}</td>\n                        </tr>\n                        {Object.entries(lboResults.scenarios).map(([name, scenario]) => (\n                          <tr key={name} className=\"border-b border-gray-200\">\n                            <td className=\"py-2\">{name}</td>\n                            <td className=\"text-right py-2\">{formatPercent(scenario.returnsAnalysis?.irr || 0)}</td>\n                            <td className=\"text-right py-2\">{(scenario.returnsAnalysis?.moic || 0).toFixed(1)}x</td>\n                            <td className=\"text-right py-2\">{formatCurrency(scenario.exitAnalysis?.equityProceeds || 0)}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"text-center py-12 text-gray-500\">\n              <BarChart3 size={48} className=\"mx-auto mb-4 opacity-50\" />\n              <p>Run LBO calculation to see results</p>\n            </div>\n          )}\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default AdvancedLBOTool;\n","import {\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  Percent,\n  Activity,\n  AlertTriangle,\n  CheckCircle,\n  BarChart3,\n  Target,\n  PieChart,\n  Zap,\n  Shield,\n  Award,\n  Eye,\n  Timer,\n  Gauge,\n  CreditCard,\n  Users\n} from 'lucide-react';\nimport React, { useMemo } from 'react';\n\nconst AnalysisResults = ({\n  data,\n  adjustedValues,\n  modelInputs: _modelInputs,\n  calculateDCF,\n  formatCurrency,\n  formatPercentage: _formatPercentage\n}) => {\n  // Calculate comprehensive financial metrics\n  const analysis = useMemo(() => {\n    try {\n      if (!data?.statements?.incomeStatement) return null;\n\n      const income = data.statements.incomeStatement;\n      const periods = Object.keys(income.totalRevenue || {}).sort((a, b) => parseInt(a) - parseInt(b));\n\n      if (periods.length < 2) return null;\n\n      const latest = periods[periods.length - 1];\n      const previous = periods[periods.length - 2];\n      const earliest = periods[0];\n\n      // Financial Performance Analysis - Use adjusted values for latest period when available\n      const revenueLatest = adjustedValues?.totalRevenue || income.totalRevenue?.[latest] || 0;\n      const revenuePrevious = income.totalRevenue?.[previous] || 0;\n      const revenueEarliest = income.totalRevenue?.[earliest] || 0;\n\n      const grossProfitLatest = adjustedValues?.grossProfit || income.grossProfit?.[latest] || 0;\n      const grossProfitPrevious = income.grossProfit?.[previous] || 0;\n\n      const operatingIncomeLatest = adjustedValues?.operatingIncome || income.operatingIncome?.[latest] || 0;\n      const operatingIncomePrevious = income.operatingIncome?.[previous] || 0;\n\n      const _totalCOGSLatest = adjustedValues?.totalCostOfGoodsSold || income.totalCostOfGoodsSold?.[latest] || 0;\n      const _totalCOGSPrevious = income.totalCostOfGoodsSold?.[previous] || 0;\n\n      // Growth Calculations\n      const revenueGrowthYoY = revenuePrevious ? ((revenueLatest - revenuePrevious) / revenuePrevious) * 100 : 0;\n      const revenueCAGR = revenueEarliest && periods.length > 2 ?\n        (Math.pow(revenueLatest / revenueEarliest, 1 / (periods.length - 1)) - 1) * 100 : 0;\n\n      const _grossProfitGrowth = grossProfitPrevious ? ((grossProfitLatest - grossProfitPrevious) / grossProfitPrevious) * 100 : 0;\n      const operatingIncomeGrowth = operatingIncomePrevious ? ((operatingIncomeLatest - operatingIncomePrevious) / operatingIncomePrevious) * 100 : 0;\n\n      // Profitability Ratios (with safe calculations)\n      const grossMarginLatest = (revenueLatest && revenueLatest !== 0) ? (grossProfitLatest / revenueLatest) * 100 : 0;\n      const grossMarginPrevious = (revenuePrevious && revenuePrevious !== 0) ? (grossProfitPrevious / revenuePrevious) * 100 : 0;\n      const operatingMarginLatest = (revenueLatest && revenueLatest !== 0) ? (operatingIncomeLatest / revenueLatest) * 100 : 0;\n      const operatingMarginPrevious = (revenuePrevious && revenuePrevious !== 0) ? (operatingIncomePrevious / revenuePrevious) * 100 : 0;\n\n      const marginImprovement = isFinite(grossMarginLatest) && isFinite(grossMarginPrevious) ? grossMarginLatest - grossMarginPrevious : 0;\n      const operatingMarginChange = isFinite(operatingMarginLatest) && isFinite(operatingMarginPrevious) ? operatingMarginLatest - operatingMarginPrevious : 0;\n\n      // DCF Analysis\n      let dcfResults = null;\n      if (calculateDCF) {\n        try {\n          dcfResults = calculateDCF(data);\n        } catch (error) {\n          console.error('DCF calculation error:', error);\n        }\n      }\n\n      // Business Unit Analysis (Revenue Breakdown) - with safe value access\n      const revenueBreakdown = [\n        { name: 'Energy Devices', value: Number(income.energyDevices?.[latest]) || 0 },\n        { name: 'Injectables', value: Number(income.injectables?.[latest]) || 0 },\n        { name: 'Wellness', value: Number(income.wellness?.[latest]) || 0 },\n        { name: 'Weightloss', value: Number(income.weightloss?.[latest]) || 0 },\n        { name: 'Retail Sales', value: Number(income.retailSales?.[latest]) || 0 },\n        { name: 'Surgery', value: Number(income.surgery?.[latest]) || 0 }\n      ].filter(item => item.value > 0 && isFinite(item.value));\n\n      // Advanced Financial Ratios and Metrics\n      const totalAssets = income.totalAssets?.[latest] || revenueLatest * 1.2; // Estimate if not provided\n      const totalEquity = income.totalEquity?.[latest] || totalAssets * 0.6; // Estimate if not provided\n      const totalDebt = income.totalDebt?.[latest] || totalAssets * 0.3; // Estimate if not provided\n      const currentAssets = income.currentAssets?.[latest] || totalAssets * 0.4; // Estimate if not provided\n      const currentLiabilities = income.currentLiabilities?.[latest] || totalAssets * 0.2; // Estimate if not provided\n      const inventory = income.inventory?.[latest] || revenueLatest * 0.15; // Estimate if not provided\n      const accountsReceivable = income.accountsReceivable?.[latest] || revenueLatest * 0.1; // Estimate if not provided\n      const cashAndEquivalents = income.cashAndEquivalents?.[latest] || totalAssets * 0.1; // Estimate if not provided\n\n      // Advanced Ratios\n      const returnOnAssets = (totalAssets && totalAssets !== 0) ? (operatingIncomeLatest / totalAssets) * 100 : 0;\n      const returnOnEquity = (totalEquity && totalEquity !== 0) ? (operatingIncomeLatest / totalEquity) * 100 : 0;\n      const debtToEquity = (totalEquity && totalEquity !== 0) ? totalDebt / totalEquity : 0;\n      const currentRatio = (currentLiabilities && currentLiabilities !== 0) ? currentAssets / currentLiabilities : 0;\n      const quickRatio = (currentLiabilities && currentLiabilities !== 0) ? (currentAssets - inventory) / currentLiabilities : 0;\n      const assetTurnover = (totalAssets && totalAssets !== 0) ? revenueLatest / totalAssets : 0;\n      const inventoryTurnover = (inventory && inventory !== 0) ? (revenueLatest * 0.7) / inventory : 0; // Assuming COGS is 70% of revenue\n      const receivablesTurnover = (accountsReceivable && accountsReceivable !== 0) ? revenueLatest / accountsReceivable : 0;\n      const cashRatio = (currentLiabilities && currentLiabilities !== 0) ? cashAndEquivalents / currentLiabilities : 0;\n      const workingCapital = currentAssets - currentLiabilities;\n      const workingCapitalRatio = (revenueLatest && revenueLatest !== 0) ? workingCapital / revenueLatest : 0;\n\n      // Efficiency Metrics\n      const operatingCycle = inventoryTurnover > 0 && receivablesTurnover > 0 ? (365 / inventoryTurnover) + (365 / receivablesTurnover) : 0;\n      const cashConversionCycle = operatingCycle > 0 ? operatingCycle - 30 : 0; // Assuming 30 days payable period\n\n      // Growth Quality Metrics\n      const operatingLeverage = grossProfitPrevious !== 0 ? (operatingIncomeGrowth / revenueGrowthYoY) : 0;\n      const profitabilityTrend = (operatingMarginLatest - operatingMarginPrevious) * 100;\n\n      // Risk Metrics\n      const financialLeverage = (totalEquity && totalEquity !== 0) ? totalAssets / totalEquity : 0;\n      const interestCoverage = income.interestExpense?.[latest] ? operatingIncomeLatest / income.interestExpense[latest] : 0;\n      const debtServiceCoverage = income.debtService?.[latest] ? operatingIncomeLatest / income.debtService[latest] : 0;\n\n      // Market & Valuation Metrics (estimated)\n      const revenuePerEmployee = income.employeeCount?.[latest] ? revenueLatest / income.employeeCount[latest] : 0;\n      const revenuePerShare = income.sharesOutstanding?.[latest] ? revenueLatest / income.sharesOutstanding[latest] : 0;\n      const bookValuePerShare = income.sharesOutstanding?.[latest] && totalEquity ? totalEquity / income.sharesOutstanding[latest] : 0;\n\n      // Industry Benchmarks (Healthcare/Medical Device estimates)\n      const industryBenchmarks = {\n        grossMargin: 65,\n        operatingMargin: 18,\n        returnOnAssets: 8,\n        returnOnEquity: 15,\n        currentRatio: 2.5,\n        debtToEquity: 0.4,\n        assetTurnover: 0.8,\n        revenueGrowth: 8\n      };\n\n      // Performance vs Benchmarks\n      const benchmarkComparison = {\n        grossMargin: grossMarginLatest - industryBenchmarks.grossMargin,\n        operatingMargin: operatingMarginLatest - industryBenchmarks.operatingMargin,\n        returnOnAssets: returnOnAssets - industryBenchmarks.returnOnAssets,\n        returnOnEquity: returnOnEquity - industryBenchmarks.returnOnEquity,\n        currentRatio: currentRatio - industryBenchmarks.currentRatio,\n        debtToEquity: industryBenchmarks.debtToEquity - debtToEquity, // Lower is better\n        assetTurnover: assetTurnover - industryBenchmarks.assetTurnover,\n        revenueGrowth: revenueGrowthYoY - industryBenchmarks.revenueGrowth\n      };\n\n      // Comprehensive KPI Suite\n      const kpis = [\n        {\n          title: 'Revenue Growth',\n          value: `${revenueGrowthYoY > 0 ? '+' : ''}${isFinite(revenueGrowthYoY) ? revenueGrowthYoY.toFixed(1) : '0.0'}%`,\n          trend: revenueGrowthYoY > 0 ? 'up' : 'down',\n          description: 'Year-over-year revenue growth rate',\n          icon: TrendingUp,\n          benchmark: industryBenchmarks.revenueGrowth,\n          performance: benchmarkComparison.revenueGrowth\n        },\n        {\n          title: 'Gross Margin',\n          value: `${isFinite(grossMarginLatest) ? grossMarginLatest.toFixed(1) : '0.0'}%`,\n          trend: marginImprovement > 0 ? 'up' : 'down',\n          description: `${marginImprovement > 0 ? '+' : ''}${isFinite(marginImprovement) ? marginImprovement.toFixed(1) : '0.0'}% vs prior year`,\n          icon: Percent,\n          benchmark: industryBenchmarks.grossMargin,\n          performance: benchmarkComparison.grossMargin\n        },\n        {\n          title: 'Operating Margin',\n          value: `${isFinite(operatingMarginLatest) ? operatingMarginLatest.toFixed(1) : '0.0'}%`,\n          trend: operatingMarginChange > 0 ? 'up' : 'down',\n          description: `${operatingMarginChange > 0 ? '+' : ''}${isFinite(operatingMarginChange) ? operatingMarginChange.toFixed(1) : '0.0'}% vs prior year`,\n          icon: BarChart3,\n          benchmark: industryBenchmarks.operatingMargin,\n          performance: benchmarkComparison.operatingMargin\n        },\n        {\n          title: 'Return on Assets',\n          value: `${isFinite(returnOnAssets) ? returnOnAssets.toFixed(1) : '0.0'}%`,\n          trend: returnOnAssets > industryBenchmarks.returnOnAssets ? 'up' : 'down',\n          description: 'Asset utilization efficiency',\n          icon: Target,\n          benchmark: industryBenchmarks.returnOnAssets,\n          performance: benchmarkComparison.returnOnAssets\n        },\n        {\n          title: 'Return on Equity',\n          value: `${isFinite(returnOnEquity) ? returnOnEquity.toFixed(1) : '0.0'}%`,\n          trend: returnOnEquity > industryBenchmarks.returnOnEquity ? 'up' : 'down',\n          description: 'Shareholder value generation',\n          icon: Award,\n          benchmark: industryBenchmarks.returnOnEquity,\n          performance: benchmarkComparison.returnOnEquity\n        },\n        {\n          title: 'Current Ratio',\n          value: `${isFinite(currentRatio) ? currentRatio.toFixed(1) : '0.0'}x`,\n          trend: currentRatio > 2.0 ? 'up' : currentRatio > 1.5 ? 'neutral' : 'down',\n          description: 'Short-term liquidity strength',\n          icon: Shield,\n          benchmark: industryBenchmarks.currentRatio,\n          performance: benchmarkComparison.currentRatio\n        },\n        {\n          title: 'Asset Turnover',\n          value: `${isFinite(assetTurnover) ? assetTurnover.toFixed(1) : '0.0'}x`,\n          trend: assetTurnover > industryBenchmarks.assetTurnover ? 'up' : 'down',\n          description: 'Revenue per dollar of assets',\n          icon: Zap,\n          benchmark: industryBenchmarks.assetTurnover,\n          performance: benchmarkComparison.assetTurnover\n        },\n        {\n          title: 'Debt-to-Equity',\n          value: `${isFinite(debtToEquity) ? debtToEquity.toFixed(1) : '0.0'}x`,\n          trend: debtToEquity < industryBenchmarks.debtToEquity ? 'up' : 'down',\n          description: 'Financial leverage position',\n          icon: CreditCard,\n          benchmark: industryBenchmarks.debtToEquity,\n          performance: benchmarkComparison.debtToEquity\n        }\n      ];\n\n      // Liquidity Analysis\n      const liquidityMetrics = [\n        {\n          name: 'Current Ratio',\n          value: currentRatio,\n          formatted: `${currentRatio.toFixed(2)}x`,\n          benchmark: 2.5,\n          status: currentRatio >= 2.5 ? 'excellent' : currentRatio >= 2.0 ? 'good' : currentRatio >= 1.5 ? 'fair' : 'poor'\n        },\n        {\n          name: 'Quick Ratio',\n          value: quickRatio,\n          formatted: `${quickRatio.toFixed(2)}x`,\n          benchmark: 1.5,\n          status: quickRatio >= 1.5 ? 'excellent' : quickRatio >= 1.0 ? 'good' : quickRatio >= 0.8 ? 'fair' : 'poor'\n        },\n        {\n          name: 'Cash Ratio',\n          value: cashRatio,\n          formatted: `${cashRatio.toFixed(2)}x`,\n          benchmark: 0.5,\n          status: cashRatio >= 0.5 ? 'excellent' : cashRatio >= 0.3 ? 'good' : cashRatio >= 0.2 ? 'fair' : 'poor'\n        },\n        {\n          name: 'Working Capital',\n          value: workingCapital,\n          formatted: formatCurrency(workingCapital),\n          benchmark: revenueLatest * 0.15,\n          status: workingCapital >= revenueLatest * 0.15 ? 'excellent' : workingCapital >= 0 ? 'good' : 'poor'\n        }\n      ];\n\n      // Efficiency Analysis\n      const efficiencyMetrics = [\n        {\n          name: 'Asset Turnover',\n          value: assetTurnover,\n          formatted: `${assetTurnover.toFixed(2)}x`,\n          description: 'Revenue generation per asset dollar'\n        },\n        {\n          name: 'Inventory Turnover',\n          value: inventoryTurnover,\n          formatted: `${inventoryTurnover.toFixed(1)}x`,\n          description: 'Inventory management efficiency'\n        },\n        {\n          name: 'Receivables Turnover',\n          value: receivablesTurnover,\n          formatted: `${receivablesTurnover.toFixed(1)}x`,\n          description: 'Collection efficiency'\n        },\n        {\n          name: 'Operating Cycle',\n          value: operatingCycle,\n          formatted: `${operatingCycle.toFixed(0)} days`,\n          description: 'Cash-to-cash cycle duration'\n        }\n      ];\n\n      // Risk Assessment\n      const riskMetrics = [\n        {\n          name: 'Financial Leverage',\n          value: financialLeverage,\n          formatted: `${financialLeverage.toFixed(1)}x`,\n          level: financialLeverage < 2 ? 'low' : financialLeverage < 3 ? 'moderate' : 'high'\n        },\n        {\n          name: 'Debt-to-Equity',\n          value: debtToEquity,\n          formatted: `${debtToEquity.toFixed(2)}x`,\n          level: debtToEquity < 0.3 ? 'low' : debtToEquity < 0.6 ? 'moderate' : 'high'\n        },\n        {\n          name: 'Interest Coverage',\n          value: interestCoverage,\n          formatted: `${interestCoverage.toFixed(1)}x`,\n          level: interestCoverage > 10 ? 'low' : interestCoverage > 5 ? 'moderate' : 'high'\n        }\n      ];\n\n      return {\n        periods,\n        latest,\n        previous,\n        revenue: {\n          latest: revenueLatest,\n          previous: revenuePrevious,\n          growth: revenueGrowthYoY,\n          cagr: revenueCAGR\n        },\n        profitability: {\n          grossMargin: grossMarginLatest,\n          grossMarginChange: marginImprovement,\n          operatingMargin: operatingMarginLatest,\n          operatingMarginChange,\n          operatingLeverage,\n          profitabilityTrend\n        },\n        financial: {\n          returnOnAssets,\n          returnOnEquity,\n          assetTurnover,\n          totalAssets,\n          totalEquity,\n          totalDebt,\n          workingCapital,\n          workingCapitalRatio\n        },\n        liquidity: {\n          currentRatio,\n          quickRatio,\n          cashRatio,\n          cashAndEquivalents,\n          currentAssets,\n          currentLiabilities\n        },\n        efficiency: {\n          inventoryTurnover,\n          receivablesTurnover,\n          operatingCycle,\n          cashConversionCycle\n        },\n        risk: {\n          debtToEquity,\n          financialLeverage,\n          interestCoverage,\n          debtServiceCoverage\n        },\n        market: {\n          revenuePerEmployee,\n          revenuePerShare,\n          bookValuePerShare\n        },\n        benchmarks: {\n          industry: industryBenchmarks,\n          comparison: benchmarkComparison\n        },\n        dcf: dcfResults,\n        revenueBreakdown,\n        kpis,\n        liquidityMetrics,\n        efficiencyMetrics,\n        riskMetrics\n      };\n    } catch (error) {\n      console.error('Error in AnalysisResults analysis calculation:', error);\n      return null;\n    }\n  }, [data, calculateDCF]);\n\n  if (!analysis) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"text-center\">\n          <AlertTriangle className=\"mx-auto h-12 w-12 text-yellow-400 mb-4\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Insufficient Data</h3>\n          <p className=\"text-gray-500\">Please ensure financial data is loaded to generate analysis results.</p>\n        </div>\n      </div>\n    );\n  }\n\n  const MetricCard = ({ title, value, trend, description, icon: Icon, benchmark, performance }) => (\n    <div className=\"bg-gray-800 rounded-xl p-6 border border-gray-700 hover:border-gray-600 transition-all duration-200\">\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex items-center gap-3\">\n          <div\n            className={`p-2 rounded-lg ${\n              trend === 'up' ? 'bg-green-900/30 text-green-400' :\n                trend === 'down' ? 'bg-red-900/30 text-red-400' :\n                  'bg-gray-700 text-gray-400'\n            }`}\n          >\n            <Icon className=\"h-5 w-5\" />\n          </div>\n          <div>\n            <div className=\"text-sm font-medium text-gray-300\">{title}</div>\n            <div className=\"text-xs text-gray-500 mt-1\">{description}</div>\n          </div>\n        </div>\n        {trend === 'up' && <TrendingUp className=\"h-5 w-5 text-green-400 flex-shrink-0\" />}\n        {trend === 'down' && <TrendingDown className=\"h-5 w-5 text-red-400 flex-shrink-0\" />}\n      </div>\n      <div className=\"text-3xl font-bold text-white mb-2\">{value}</div>\n      {benchmark && (\n        <div className=\"border-t border-gray-700 pt-3 mt-3\">\n          <div className=\"flex justify-between text-xs\">\n            <span className=\"text-gray-400\">Industry Avg:</span>\n            <span className=\"text-gray-300\">{typeof benchmark === 'number' ? benchmark.toFixed(1) + (title.includes('%') ? '%' : title.includes('x') ? 'x' : '') : benchmark}</span>\n          </div>\n          <div className=\"flex justify-between text-xs mt-1\">\n            <span className=\"text-gray-400\">vs Industry:</span>\n            <span\n              className={`font-medium ${\n                performance > 0 ? 'text-green-400' : performance < 0 ? 'text-red-400' : 'text-gray-300'\n              }`}\n            >\n              {performance > 0 ? '+' : ''}{performance?.toFixed(1) || '0.0'}\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-6 p-6 bg-gray-900 text-white h-full\">\n      {/* Header */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h2 className=\"text-2xl font-bold text-white mb-6 flex items-center\">\n          <BarChart3 className=\"h-6 w-6 text-blue-400 mr-3\" />\n          Financial Analysis Results\n        </h2>\n        <p className=\"text-gray-400\">\n          Comprehensive analysis of your company&#39;s financial performance and valuation\n        </p>\n      </div>\n\n      {/* Key Performance Indicators */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {analysis.kpis.map((kpi, index) => (\n          <MetricCard key={index} {...kpi} />\n        ))}\n      </div>\n\n      {/* Advanced Financial Analysis Tabs */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 overflow-hidden\">\n        <div className=\"flex border-b border-gray-700\">\n          <button className=\"px-6 py-3 text-sm font-medium text-white bg-blue-600 border-r border-gray-700\">\n            Liquidity Analysis\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white border-r border-gray-700\">\n            Efficiency Metrics\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white border-r border-gray-700\">\n            Risk Assessment\n          </button>\n          <button className=\"px-6 py-3 text-sm font-medium text-gray-400 hover:text-white\">\n            Benchmarking\n          </button>\n        </div>\n\n        {/* Liquidity Analysis Panel */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center mb-4\">\n            <Shield className=\"h-5 w-5 text-blue-400 mr-2\" />\n            <h3 className=\"text-lg font-semibold text-white\">Liquidity Position Analysis</h3>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {analysis.liquidityMetrics.map((metric, index) => (\n              <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium text-gray-200\">{metric.name}</span>\n                  <span\n                    className={`px-2 py-1 rounded text-xs font-medium ${\n                      metric.status === 'excellent' ? 'bg-green-900/30 text-green-400' :\n                        metric.status === 'good' ? 'bg-blue-900/30 text-blue-400' :\n                          metric.status === 'fair' ? 'bg-yellow-900/30 text-yellow-400' :\n                            'bg-red-900/30 text-red-400'\n                    }`}\n                  >\n                    {metric.status}\n                  </span>\n                </div>\n                <div className=\"text-xl font-bold text-white mb-1\">{metric.formatted}</div>\n                <div className=\"text-xs text-gray-400\">\n                  Benchmark: {typeof metric.benchmark === 'number' ? metric.benchmark.toFixed(1) + 'x' : formatCurrency(metric.benchmark)}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"mt-6 p-4 bg-gray-750 rounded-lg border border-gray-600\">\n            <h4 className=\"font-medium text-gray-200 mb-3 flex items-center\">\n              <Eye className=\"h-4 w-4 text-blue-400 mr-2\" />\n              Liquidity Analysis Summary\n            </h4>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-400\">Working Capital:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.financial.workingCapital)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Cash Position:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.cashAndEquivalents)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Current Assets:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.currentAssets)}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-400\">Current Liabilities:</span>\n                <span className=\"text-white ml-2 font-medium\">{formatCurrency(analysis.liquidity.currentLiabilities)}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Efficiency & Operations Analysis */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <div className=\"flex items-center mb-6\">\n          <Zap className=\"h-5 w-5 text-orange-400 mr-2\" />\n          <h3 className=\"text-lg font-semibold text-white\">Operational Efficiency Metrics</h3>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {analysis.efficiencyMetrics.map((metric, index) => (\n            <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n              <div className=\"text-sm font-medium text-gray-200 mb-2\">{metric.name}</div>\n              <div className=\"text-xl font-bold text-white mb-1\">{metric.formatted}</div>\n              <div className=\"text-xs text-gray-400\">{metric.description}</div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Timer className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Cash Conversion</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">{analysis.efficiency.cashConversionCycle.toFixed(0)} days</div>\n            <div className=\"text-xs text-gray-400\">Time to convert inventory to cash</div>\n          </div>\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Gauge className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Asset Productivity</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">{analysis.financial.assetTurnover.toFixed(2)}x</div>\n            <div className=\"text-xs text-gray-400\">Revenue per dollar of assets</div>\n          </div>\n          <div className=\"bg-gray-750 rounded-lg p-4 border border-gray-600\">\n            <div className=\"flex items-center mb-2\">\n              <Users className=\"h-4 w-4 text-orange-400 mr-2\" />\n              <span className=\"text-sm font-medium text-gray-200\">Revenue/Employee</span>\n            </div>\n            <div className=\"text-lg font-bold text-white\">\n              {analysis.market.revenuePerEmployee > 0 ? formatCurrency(analysis.market.revenuePerEmployee) : 'N/A'}\n            </div>\n            <div className=\"text-xs text-gray-400\">Productivity per employee</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Risk Assessment Dashboard */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <div className=\"flex items-center mb-6\">\n          <AlertTriangle className=\"h-5 w-5 text-red-400 mr-2\" />\n          <h3 className=\"text-lg font-semibold text-white\">Financial Risk Assessment</h3>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {analysis.riskMetrics.map((metric, index) => (\n            <div key={index} className=\"bg-gray-700 rounded-lg p-4 border border-gray-600\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"text-sm font-medium text-gray-200\">{metric.name}</span>\n                <span\n                  className={`px-2 py-1 rounded text-xs font-medium ${\n                    metric.level === 'low' ? 'bg-green-900/30 text-green-400' :\n                      metric.level === 'moderate' ? 'bg-yellow-900/30 text-yellow-400' :\n                        'bg-red-900/30 text-red-400'\n                  }`}\n                >\n                  {metric.level} risk\n                </span>\n              </div>\n              <div className=\"text-xl font-bold text-white\">{metric.formatted}</div>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"mt-6 p-4 bg-gray-750 rounded-lg border border-gray-600\">\n          <h4 className=\"font-medium text-gray-200 mb-3 flex items-center\">\n            <Shield className=\"h-4 w-4 text-red-400 mr-2\" />\n            Risk Analysis Summary\n          </h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-400\">Financial Leverage:</span>\n              <span\n                className={`ml-2 font-medium ${\n                  analysis.risk.financialLeverage < 2 ? 'text-green-400' :\n                    analysis.risk.financialLeverage < 3 ? 'text-yellow-400' : 'text-red-400'\n                }`}\n              >\n                {analysis.risk.financialLeverage.toFixed(1)}x\n              </span>\n            </div>\n            <div>\n              <span className=\"text-gray-400\">Interest Coverage:</span>\n              <span\n                className={`ml-2 font-medium ${\n                  analysis.risk.interestCoverage > 10 ? 'text-green-400' :\n                    analysis.risk.interestCoverage > 5 ? 'text-yellow-400' : 'text-red-400'\n                }`}\n              >\n                {analysis.risk.interestCoverage.toFixed(1)}x\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Financial Performance Summary */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Financial Performance Trends */}\n        <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n          <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n            <Activity className=\"h-5 w-5 text-purple-400 mr-2\" />\n            Performance Trends\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h4 className=\"font-medium text-gray-200 mb-3\">Revenue Analysis</h4>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Latest Period:</span>\n                  <span className=\"font-semibold text-white\">{formatCurrency(analysis.revenue.latest)}</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">YoY Growth:</span>\n                  <span\n                    className={`font-semibold ${\n                      analysis.revenue.growth > 0 ? 'text-green-400' : 'text-red-400'\n                    }`}\n                  >\n                    {analysis.revenue.growth > 0 ? '+' : ''}{analysis.revenue.growth.toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">CAGR:</span>\n                  <span className=\"font-semibold text-gray-200\">{analysis.revenue.cagr.toFixed(1)}%</span>\n                </div>\n              </div>\n            </div>\n            <div>\n              <h4 className=\"font-medium text-gray-200 mb-3\">Profitability Margins</h4>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Gross Margin:</span>\n                  <span className=\"font-semibold text-white\">{analysis.profitability.grossMargin.toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Operating Margin:</span>\n                  <span className=\"font-semibold text-white\">{analysis.profitability.operatingMargin.toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-400\">Margin Change:</span>\n                  <span\n                    className={`font-semibold ${\n                      analysis.profitability.grossMarginChange > 0 ? 'text-green-400' : 'text-red-400'\n                    }`}\n                  >\n                    {analysis.profitability.grossMarginChange > 0 ? '+' : ''}{analysis.profitability.grossMarginChange.toFixed(1)}pp\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Valuation Summary */}\n        {analysis.dcf && (\n          <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n            <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n              <DollarSign className=\"h-5 w-5 text-green-400 mr-2\" />\n              DCF Valuation Summary\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"text-center p-4 bg-green-900/30 border border-green-700 rounded-lg\">\n                <div className=\"text-2xl font-bold text-green-400\">\n                  {formatCurrency(analysis.dcf.enterpriseValue)}\n                </div>\n                <div className=\"text-sm text-green-300\">Enterprise Value</div>\n              </div>\n              <div className=\"text-center p-4 bg-blue-900/30 border border-blue-700 rounded-lg\">\n                <div className=\"text-2xl font-bold text-blue-400\">\n                  {formatCurrency(analysis.dcf.sharePrice)}\n                </div>\n                <div className=\"text-sm text-blue-300\">Price per Share</div>\n              </div>\n              <div className=\"text-center p-4 bg-gray-700 border border-gray-600 rounded-lg\">\n                <div className=\"text-2xl font-bold text-gray-300\">\n                  {formatCurrency(analysis.dcf.terminalValue)}\n                </div>\n                <div className=\"text-sm text-gray-400\">Terminal Value</div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Revenue Breakdown */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n          <PieChart className=\"h-5 w-5 text-orange-400 mr-2\" />\n          Business Unit Performance\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {analysis.revenueBreakdown.map((unit, index) => {\n            const percentage = analysis.revenue.latest ? (unit.value / analysis.revenue.latest) * 100 : 0;\n            return (\n              <div key={index} className=\"p-4 bg-gray-700 border border-gray-600 rounded-lg\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"font-medium text-gray-200\">{unit.name}</span>\n                  <span className=\"text-sm text-gray-400\">{percentage.toFixed(1)}%</span>\n                </div>\n                <div className=\"text-lg font-semibold text-white mb-1\">\n                  {formatCurrency(unit.value)}\n                </div>\n                <div className=\"w-full bg-gray-600 rounded-full h-2\">\n                  <div\n                    className=\"bg-blue-500 h-2 rounded-full\"\n                    style={{ width: `${Math.min(percentage, 100)}%` }}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Key Insights */}\n      <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n        <h3 className=\"text-lg font-semibold mb-4 flex items-center text-white\">\n          <CheckCircle className=\"h-5 w-5 text-green-400 mr-2\" />\n          Key Financial Insights\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <h4 className=\"font-medium text-gray-200 mb-2\">Strengths</h4>\n            <ul className=\"space-y-1 text-sm text-gray-400\">\n              {analysis.revenue.growth > 0 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Positive revenue growth trajectory\n                </li>\n              )}\n              {analysis.profitability.grossMargin > 60 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Strong gross margin above 60%\n                </li>\n              )}\n              {analysis.profitability.grossMarginChange > 0 && (\n                <li className=\"flex items-center\">\n                  <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                  Improving profitability margins\n                </li>\n              )}\n              <li className=\"flex items-center\">\n                <CheckCircle className=\"h-4 w-4 text-green-500 mr-2\" />\n                Diversified healthcare revenue streams\n              </li>\n            </ul>\n          </div>\n          <div>\n            <h4 className=\"font-medium text-gray-200 mb-2\">Areas for Focus</h4>\n            <ul className=\"space-y-1 text-sm text-gray-400\">\n              {analysis.revenue.growth < 5 && (\n                <li className=\"flex items-center\">\n                  <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                  Revenue growth below industry benchmarks\n                </li>\n              )}\n              {analysis.profitability.operatingMargin < 20 && (\n                <li className=\"flex items-center\">\n                  <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                  Operating margin optimization opportunities\n                </li>\n              )}\n              <li className=\"flex items-center\">\n                <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                Monitor competitive positioning in key segments\n              </li>\n              <li className=\"flex items-center\">\n                <AlertTriangle className=\"h-4 w-4 text-yellow-500 mr-2\" />\n                Consider strategic initiatives for growth acceleration\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnalysisResults;\n","import { motion, AnimatePresence } from 'framer-motion';\nimport {\n  TrendingUp,\n  BarChart3,\n  Info,\n  AlertTriangle,\n  ChevronRight,\n  ChevronDown,\n  Target,\n  Users,\n  Lightbulb,\n  X\n} from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst ContextualInsightsSidebar = ({\n  financialData,\n  currentMetric,\n  analysisContext = 'general',\n  onInsightClick,\n  isVisible = true,\n  onToggle\n}) => {\n  const [expandedSections, setExpandedSections] = useState({\n    assumptions: true,\n    benchmarks: true,\n    insights: true,\n    suggestions: false\n  });\n\n  // Industry benchmark data (in real implementation, this would come from APIs)\n  const _industryBenchmarks = useMemo(() => ({\n    healthcare: {\n      revenueGrowth: { min: 8, median: 15, max: 25, unit: '%' },\n      ebitdaMargin: { min: 18, median: 28, max: 40, unit: '%' },\n      grossMargin: { min: 65, median: 75, max: 85, unit: '%' },\n      roe: { min: 12, median: 18, max: 25, unit: '%' }\n    },\n    technology: {\n      revenueGrowth: { min: 15, median: 25, max: 50, unit: '%' },\n      ebitdaMargin: { min: 20, median: 35, max: 50, unit: '%' },\n      grossMargin: { min: 70, median: 80, max: 90, unit: '%' },\n      roe: { min: 15, median: 22, max: 35, unit: '%' }\n    },\n    manufacturing: {\n      revenueGrowth: { min: 3, median: 8, max: 15, unit: '%' },\n      ebitdaMargin: { min: 10, median: 18, max: 25, unit: '%' },\n      grossMargin: { min: 25, median: 35, max: 45, unit: '%' },\n      roe: { min: 8, median: 15, max: 22, unit: '%' }\n    }\n  }), []);\n\n  // Generate contextual insights based on current analysis\n  const generateContextualInsights = () => {\n    const insights = [];\n\n    if (!financialData?.statements?.incomeStatement) {\n      return [{\n        type: 'info',\n        title: 'Getting Started',\n        content: 'Import financial data to see contextual insights and benchmarks.',\n        action: 'Import Data'\n      }];\n    }\n\n    const income = financialData.statements.incomeStatement;\n    const latestRevenue = income.totalRevenue?.[2] || 0;\n    const latestOperatingIncome = income.operatingIncome?.[2] || 0;\n\n    // Revenue-based insights\n    if (latestRevenue > 0) {\n      const operatingMargin = (latestOperatingIncome / latestRevenue) * 100;\n\n      insights.push({\n        type: 'benchmark',\n        title: 'Operating Margin Analysis',\n        content: `Current operating margin of ${operatingMargin.toFixed(1)}% compares to healthcare industry median of 28%.`,\n        metric: operatingMargin,\n        benchmark: 28,\n        status: operatingMargin >= 28 ? 'above' : operatingMargin >= 20 ? 'within' : 'below'\n      });\n    }\n\n    // Context-specific insights\n    if (analysisContext === 'dcf') {\n      insights.push({\n        type: 'assumption',\n        title: 'DCF Model Assumptions',\n        content: 'Consider industry-specific discount rates and terminal growth assumptions.',\n        suggestions: [\n          'Healthcare companies typically use 8-12% WACC',\n          'Terminal growth rates should reflect long-term GDP growth (2-3%)',\n          'Consider regulatory risks in discount rate adjustments'\n        ]\n      });\n    }\n\n    if (currentMetric?.includes('revenue')) {\n      insights.push({\n        type: 'insight',\n        title: 'Revenue Growth Drivers',\n        content: 'Analyze revenue composition and growth sustainability.',\n        suggestions: [\n          'Break down revenue by service line',\n          'Assess recurring vs. one-time revenue',\n          'Evaluate market expansion opportunities'\n        ]\n      });\n    }\n\n    return insights;\n  };\n\n  const contextualInsights = generateContextualInsights();\n\n  const toggleSection = (section) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n\n  const renderBenchmarkBar = (current, benchmark, min, max) => {\n    const range = max - min;\n    const currentPos = Math.max(0, Math.min(100, ((current - min) / range) * 100));\n    const benchmarkPos = Math.max(0, Math.min(100, ((benchmark - min) / range) * 100));\n\n    return (\n      <div className=\"relative h-2 bg-slate-200 rounded-full overflow-hidden\">\n        <div\n          className=\"absolute top-0 h-full bg-blue-200 rounded-full\"\n          style={{ width: `${benchmarkPos}%` }}\n        />\n        <div\n          className=\"absolute top-0 h-full w-1 bg-blue-600 rounded-full\"\n          style={{ left: `${benchmarkPos}%` }}\n        />\n        <div\n          className=\"absolute top-0 h-full w-1 bg-amber-500 rounded-full\"\n          style={{ left: `${currentPos}%` }}\n        />\n      </div>\n    );\n  };\n\n  const renderInsightItem = (insight, index) => {\n    const icons = {\n      info: Info,\n      benchmark: Target,\n      assumption: AlertTriangle,\n      insight: Lightbulb\n    };\n\n    const colors = {\n      info: 'text-blue-500 bg-blue-50',\n      benchmark: 'text-emerald-500 bg-emerald-50',\n      assumption: 'text-amber-500 bg-amber-50',\n      insight: 'text-purple-500 bg-purple-50'\n    };\n\n    const Icon = icons[insight.type] || Info;\n    const colorClass = colors[insight.type] || colors.info;\n\n    return (\n      <motion.div\n        key={index}\n        initial={{ opacity: 0, x: 20 }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ delay: index * 0.1 }}\n        className=\"p-4 bg-white rounded-lg border border-slate-200 hover:border-slate-300 transition-colors\"\n      >\n        <div className=\"flex items-start gap-3\">\n          <div className={`p-2 rounded-lg ${colorClass}`}>\n            <Icon size={16} />\n          </div>\n          <div className=\"flex-1 min-w-0\">\n            <h4 className=\"font-semibold text-slate-900 text-sm mb-2\">{insight.title}</h4>\n            <p className=\"text-sm text-slate-600 mb-3\">{insight.content}</p>\n\n            {insight.metric !== undefined && insight.benchmark !== undefined && (\n              <div className=\"mb-3\">\n                <div className=\"flex justify-between text-xs text-slate-500 mb-1\">\n                  <span>Current: {insight.metric.toFixed(1)}%</span>\n                  <span>Benchmark: {insight.benchmark}%</span>\n                </div>\n                {renderBenchmarkBar(insight.metric, insight.benchmark, 0, Math.max(insight.benchmark * 1.5, insight.metric * 1.2))}\n              </div>\n            )}\n\n            {insight.suggestions && (\n              <div className=\"mt-3\">\n                <div className=\"space-y-1\">\n                  {insight.suggestions.map((suggestion, idx) => (\n                    <div key={idx} className=\"flex items-start gap-2 text-xs text-slate-600\">\n                      <ChevronRight size={12} className=\"text-slate-400 mt-0.5 flex-shrink-0\" />\n                      <span>{suggestion}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {insight.action && (\n              <button\n                onClick={() => onInsightClick?.(insight)}\n                className=\"mt-3 px-3 py-1.5 bg-blue-50 hover:bg-blue-100 text-blue-700 text-xs font-medium rounded-md transition-colors\"\n              >\n                {insight.action}\n              </button>\n            )}\n          </div>\n        </div>\n      </motion.div>\n    );\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <motion.div\n      initial={{ x: 320, opacity: 0 }}\n      animate={{ x: 0, opacity: 1 }}\n      exit={{ x: 320, opacity: 0 }}\n      className=\"fixed right-0 top-16 bottom-0 w-80 bg-slate-50 border-l border-slate-200 shadow-xl z-40 overflow-hidden flex flex-col\"\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 bg-white border-b border-slate-200\">\n        <div className=\"flex items-center gap-2\">\n          <div className=\"p-1.5 bg-blue-100 rounded-lg\">\n            <BarChart3 size={16} className=\"text-blue-600\" />\n          </div>\n          <h3 className=\"font-semibold text-slate-900\">Contextual Insights</h3>\n        </div>\n        {onToggle && (\n          <button\n            onClick={onToggle}\n            className=\"p-1.5 hover:bg-slate-100 rounded-lg transition-colors\"\n          >\n            <X size={16} className=\"text-slate-500\" />\n          </button>\n        )}\n      </div>\n\n      {/* Content */}\n      <div className=\"flex-1 overflow-y-auto\">\n        <div className=\"p-4 space-y-4\">\n          {/* Assumptions Section */}\n          <div className=\"bg-white rounded-lg border border-slate-200\">\n            <button\n              onClick={() => toggleSection('assumptions')}\n              className=\"w-full flex items-center justify-between p-4 text-left hover:bg-slate-50 transition-colors\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <Target size={16} className=\"text-amber-600\" />\n                <span className=\"font-medium text-slate-900\">Key Assumptions</span>\n              </div>\n              {expandedSections.assumptions ?\n                <ChevronDown size={16} className=\"text-slate-400\" /> :\n                <ChevronRight size={16} className=\"text-slate-400\" />\n              }\n            </button>\n\n            <AnimatePresence>\n              {expandedSections.assumptions && (\n                <motion.div\n                  initial={{ height: 0, opacity: 0 }}\n                  animate={{ height: 'auto', opacity: 1 }}\n                  exit={{ height: 0, opacity: 0 }}\n                  className=\"border-t border-slate-100\"\n                >\n                  <div className=\"p-4 space-y-3\">\n                    <div className=\"flex justify-between items-center text-sm\">\n                      <span className=\"text-slate-600\">Discount Rate</span>\n                      <span className=\"font-mono text-slate-900\">10.0%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center text-sm\">\n                      <span className=\"text-slate-600\">Terminal Growth</span>\n                      <span className=\"font-mono text-slate-900\">2.5%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center text-sm\">\n                      <span className=\"text-slate-600\">Tax Rate</span>\n                      <span className=\"font-mono text-slate-900\">25.0%</span>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n\n          {/* Industry Benchmarks Section */}\n          <div className=\"bg-white rounded-lg border border-slate-200\">\n            <button\n              onClick={() => toggleSection('benchmarks')}\n              className=\"w-full flex items-center justify-between p-4 text-left hover:bg-slate-50 transition-colors\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <Users size={16} className=\"text-emerald-600\" />\n                <span className=\"font-medium text-slate-900\">Industry Benchmarks</span>\n              </div>\n              {expandedSections.benchmarks ?\n                <ChevronDown size={16} className=\"text-slate-400\" /> :\n                <ChevronRight size={16} className=\"text-slate-400\" />\n              }\n            </button>\n\n            <AnimatePresence>\n              {expandedSections.benchmarks && (\n                <motion.div\n                  initial={{ height: 0, opacity: 0 }}\n                  animate={{ height: 'auto', opacity: 1 }}\n                  exit={{ height: 0, opacity: 0 }}\n                  className=\"border-t border-slate-100\"\n                >\n                  <div className=\"p-4 space-y-4\">\n                    <div className=\"text-sm\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"text-slate-600\">Revenue Growth</span>\n                        <span className=\"text-xs text-slate-500\">Healthcare Industry</span>\n                      </div>\n                      <div className=\"flex justify-between text-xs text-slate-500 mb-1\">\n                        <span>8%</span>\n                        <span className=\"font-medium\">15% (median)</span>\n                        <span>25%</span>\n                      </div>\n                      {renderBenchmarkBar(12, 15, 8, 25)}\n                    </div>\n\n                    <div className=\"text-sm\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"text-slate-600\">EBITDA Margin</span>\n                        <span className=\"text-xs text-slate-500\">Healthcare Industry</span>\n                      </div>\n                      <div className=\"flex justify-between text-xs text-slate-500 mb-1\">\n                        <span>18%</span>\n                        <span className=\"font-medium\">28% (median)</span>\n                        <span>40%</span>\n                      </div>\n                      {renderBenchmarkBar(24, 28, 18, 40)}\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n\n          {/* Contextual Insights */}\n          <div className=\"space-y-3\">\n            {contextualInsights.map((insight, index) => renderInsightItem(insight, index))}\n          </div>\n\n          {/* Automated Suggestions */}\n          <div className=\"bg-white rounded-lg border border-slate-200\">\n            <button\n              onClick={() => toggleSection('suggestions')}\n              className=\"w-full flex items-center justify-between p-4 text-left hover:bg-slate-50 transition-colors\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <Lightbulb size={16} className=\"text-purple-600\" />\n                <span className=\"font-medium text-slate-900\">Smart Suggestions</span>\n              </div>\n              {expandedSections.suggestions ?\n                <ChevronDown size={16} className=\"text-slate-400\" /> :\n                <ChevronRight size={16} className=\"text-slate-400\" />\n              }\n            </button>\n\n            <AnimatePresence>\n              {expandedSections.suggestions && (\n                <motion.div\n                  initial={{ height: 0, opacity: 0 }}\n                  animate={{ height: 'auto', opacity: 1 }}\n                  exit={{ height: 0, opacity: 0 }}\n                  className=\"border-t border-slate-100\"\n                >\n                  <div className=\"p-4 space-y-3\">\n                    <div className=\"flex items-start gap-3 p-3 bg-blue-50 rounded-lg\">\n                      <BarChart3 size={14} className=\"text-blue-600 mt-0.5\" />\n                      <div>\n                        <div className=\"text-sm font-medium text-blue-900 mb-1\">\n                          Create Revenue vs CapEx Chart\n                        </div>\n                        <div className=\"text-xs text-blue-700\">\n                          Visualize the relationship between revenue growth and capital expenditure\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-start gap-3 p-3 bg-emerald-50 rounded-lg\">\n                      <TrendingUp size={14} className=\"text-emerald-600 mt-0.5\" />\n                      <div>\n                        <div className=\"text-sm font-medium text-emerald-900 mb-1\">\n                          Add Sensitivity Analysis\n                        </div>\n                        <div className=\"text-xs text-emerald-700\">\n                          Test how valuation changes with different assumptions\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default ContextualInsightsSidebar;\n","import { motion } from 'framer-motion';\nimport {\n  TrendingUp, TrendingDown, Activity, Globe, Bell,\n  Plus, Minus, RefreshCw, Settings,\n  BarChart3, LineChart, AlertCircle, CheckCircle\n} from 'lucide-react';\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { LineChart as RechartsLineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst EnhancedMarketDataDashboard = ({ data: _data, onDataChange: _onDataChange }) => {\n  const [activeView, setActiveView] = useState('overview');\n  const [watchlist, setWatchlist] = useState([\n    { symbol: 'SPY', name: 'SPDR S&P 500 ETF', price: 445.67, change: 2.34, changePercent: 0.53, category: 'index' },\n    { symbol: 'QQQ', name: 'Invesco QQQ Trust', price: 378.91, change: -1.45, changePercent: -0.38, category: 'index' },\n    { symbol: 'VIX', name: 'CBOE Volatility Index', price: 18.45, change: 0.87, changePercent: 4.95, category: 'volatility' },\n    { symbol: 'DXY', name: 'US Dollar Index', price: 102.45, change: -0.23, changePercent: -0.22, category: 'currency' },\n    { symbol: '^TNX', name: '10-Year Treasury Yield', price: 4.25, change: 0.05, changePercent: 1.19, category: 'rates' }\n  ]);\n\n  const [marketData] = useState({\n    indices: {\n      'S&P 500': { value: 4456.78, change: 23.45, changePercent: 0.53 },\n      'NASDAQ': { value: 13789.45, change: -45.67, changePercent: -0.33 },\n      'DOW': { value: 34567.89, change: 156.78, changePercent: 0.46 },\n      'Russell 2000': { value: 1987.65, change: 12.34, changePercent: 0.63 }\n    },\n    sectors: [\n      { name: 'Technology', change: 1.2, weight: 23.5 },\n      { name: 'Healthcare', change: 0.8, weight: 13.2 },\n      { name: 'Financial', change: -0.4, weight: 12.8 },\n      { name: 'Consumer Disc.', change: 0.6, weight: 10.9 },\n      { name: 'Communication', change: -0.2, weight: 9.1 },\n      { name: 'Industrials', change: 0.9, weight: 8.7 }\n    ],\n    economicIndicators: {\n      'Fed Funds Rate': { value: 5.25, change: 0.0, unit: '%' },\n      '10Y Treasury': { value: 4.25, change: 0.05, unit: '%' },\n      'Inflation (CPI)': { value: 3.1, change: -0.2, unit: '%' },\n      'Unemployment': { value: 3.8, change: 0.1, unit: '%' },\n      'GDP Growth': { value: 2.4, change: 0.1, unit: '%' }\n    }\n  });\n\n  const [alerts] = useState([\n    { id: 1, type: 'price', symbol: 'SPY', condition: 'above', value: 450, active: true },\n    { id: 2, type: 'volatility', symbol: 'VIX', condition: 'above', value: 20, active: true }\n  ]);\n\n  const [newSymbol, setNewSymbol] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const formatCurrency = useCallback((value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    const sign = value >= 0 ? '+' : '';\n    return `${sign}${value.toFixed(2)}%`;\n  }, []);\n\n  const getChangeColor = useCallback((change) => {\n    if (change > 0) return 'text-green-600';\n    if (change < 0) return 'text-red-600';\n    return 'text-gray-600';\n  }, []);\n\n  const getChangeIcon = useCallback((change) => {\n    if (change > 0) return TrendingUp;\n    if (change < 0) return TrendingDown;\n    return Minus;\n  }, []);\n\n  // Simulate real-time data updates\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setWatchlist(prev => prev.map(item => ({\n        ...item,\n        price: item.price + (Math.random() - 0.5) * 2,\n        change: item.change + (Math.random() - 0.5) * 0.5,\n        changePercent: item.changePercent + (Math.random() - 0.5) * 0.1\n      })));\n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const addToWatchlist = useCallback(async() => {\n    if (!newSymbol.trim()) return;\n\n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      const newItem = {\n        symbol: newSymbol.toUpperCase(),\n        name: `${newSymbol.toUpperCase()} Inc.`,\n        price: Math.random() * 200 + 50,\n        change: (Math.random() - 0.5) * 10,\n        changePercent: (Math.random() - 0.5) * 5,\n        category: 'stock'\n      };\n\n      setWatchlist(prev => [...prev, newItem]);\n      setNewSymbol('');\n    } catch (error) {\n      console.error('Error adding symbol:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [newSymbol]);\n\n  const removeFromWatchlist = useCallback((symbol) => {\n    setWatchlist(prev => prev.filter(item => item.symbol !== symbol));\n  }, []);\n\n  const chartData = useMemo(() => {\n    // Generate sample time series data\n    const now = new Date();\n    return Array.from({ length: 30 }, (_, i) => ({\n      time: new Date(now.getTime() - (29 - i) * 24 * 60 * 60 * 1000).toLocaleDateString(),\n      SPY: 440 + Math.sin(i * 0.2) * 10 + Math.random() * 5,\n      QQQ: 370 + Math.sin(i * 0.25) * 15 + Math.random() * 8,\n      VIX: 20 + Math.sin(i * 0.3) * 5 + Math.random() * 3\n    }));\n  }, []);\n\n  const correlationMatrix = useMemo(() => {\n    // Calculate correlations between major indices (simulated)\n    return [\n      { pair: 'SPY vs QQQ', correlation: 0.85, strength: 'Strong Positive' },\n      { pair: 'SPY vs VIX', correlation: -0.72, strength: 'Strong Negative' },\n      { pair: 'QQQ vs VIX', correlation: -0.68, strength: 'Moderate Negative' },\n      { pair: 'SPY vs DXY', correlation: -0.45, strength: 'Moderate Negative' }\n    ];\n  }, []);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Activity className=\"text-blue-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Enhanced Market Data Dashboard</h2>\n            <p className=\"text-gray-600\">Real-time market insights & valuation integration</p>\n          </div>\n        </div>\n\n        <div className=\"flex space-x-3\">\n          <motion.button\n            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <RefreshCw size={16} />\n            <span>Sync Data</span>\n          </motion.button>\n\n          <motion.button\n            className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <Settings size={16} />\n            <span>Settings</span>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* View Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {[\n            { id: 'overview', label: 'Market Overview', icon: Globe },\n            { id: 'watchlist', label: 'Watchlist', icon: BarChart3 },\n            { id: 'charts', label: 'Charts & Analysis', icon: LineChart },\n            { id: 'alerts', label: 'Alerts', icon: Bell }\n          ].map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveView(tab.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeView === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{tab.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Market Overview */}\n      {activeView === 'overview' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Major Indices */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Major Indices</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {Object.entries(marketData.indices).map(([name, data]) => {\n                const ChangeIcon = getChangeIcon(data.change);\n                return (\n                  <div key={name} className=\"bg-gray-50 p-4 rounded-lg\">\n                    <div className=\"text-sm text-gray-600 mb-1\">{name}</div>\n                    <div className=\"text-xl font-bold text-gray-800\">\n                      {data.value.toLocaleString()}\n                    </div>\n                    <div className={`flex items-center space-x-1 text-sm ${getChangeColor(data.change)}`}>\n                      <ChangeIcon size={14} />\n                      <span>{data.change > 0 ? '+' : ''}{data.change.toFixed(2)}</span>\n                      <span>({formatPercent(data.changePercent)})</span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Sector Performance */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Sector Performance</h3>\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                {marketData.sectors.map((sector) => (\n                  <div key={sector.name} className=\"flex justify-between items-center\">\n                    <div>\n                      <div className=\"font-medium text-gray-800\">{sector.name}</div>\n                      <div className=\"text-sm text-gray-600\">{sector.weight}% weight</div>\n                    </div>\n                    <div className={`font-semibold ${getChangeColor(sector.change)}`}>\n                      {formatPercent(sector.change)}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Economic Indicators */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Economic Indicators</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n              {Object.entries(marketData.economicIndicators).map(([name, data]) => (\n                <div key={name} className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-sm text-gray-600 mb-1\">{name}</div>\n                  <div className=\"text-lg font-bold text-gray-800\">\n                    {data.value}{data.unit}\n                  </div>\n                  <div className={`text-sm ${getChangeColor(data.change)}`}>\n                    {data.change > 0 ? '+' : ''}{data.change}{data.unit}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Watchlist */}\n      {activeView === 'watchlist' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Add Symbol */}\n          <div className=\"flex space-x-3\">\n            <div className=\"flex-1\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter symbol (e.g., AAPL, MSFT)\"\n                value={newSymbol}\n                onChange={(e) => setNewSymbol(e.target.value.toUpperCase())}\n                onKeyPress={(e) => e.key === 'Enter' && addToWatchlist()}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            <motion.button\n              onClick={addToWatchlist}\n              disabled={isLoading || !newSymbol.trim()}\n              className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n                isLoading || !newSymbol.trim()\n                  ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                  : 'bg-green-600 hover:bg-green-700 text-white'\n              }`}\n              whileHover={!isLoading && newSymbol.trim() ? { scale: 1.02 } : {}}\n            >\n              <Plus size={16} />\n              <span>{isLoading ? 'Adding...' : 'Add'}</span>\n            </motion.button>\n          </div>\n\n          {/* Watchlist Table */}\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4\">Symbol</th>\n                  <th className=\"text-left py-3 px-4\">Name</th>\n                  <th className=\"text-right py-3 px-4\">Price</th>\n                  <th className=\"text-right py-3 px-4\">Change</th>\n                  <th className=\"text-right py-3 px-4\">Change %</th>\n                  <th className=\"text-center py-3 px-4\">Category</th>\n                  <th className=\"text-center py-3 px-4\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {watchlist.map((item) => {\n                  const ChangeIcon = getChangeIcon(item.change);\n                  return (\n                    <tr key={item.symbol} className=\"border-b border-gray-200 hover:bg-gray-50\">\n                      <td className=\"py-3 px-4 font-medium text-gray-800\">{item.symbol}</td>\n                      <td className=\"py-3 px-4 text-gray-600\">{item.name}</td>\n                      <td className=\"text-right py-3 px-4 font-medium\">{formatCurrency(item.price)}</td>\n                      <td className={`text-right py-3 px-4 ${getChangeColor(item.change)}`}>\n                        <div className=\"flex items-center justify-end space-x-1\">\n                          <ChangeIcon size={14} />\n                          <span>{item.change > 0 ? '+' : ''}{item.change.toFixed(2)}</span>\n                        </div>\n                      </td>\n                      <td className={`text-right py-3 px-4 font-medium ${getChangeColor(item.changePercent)}`}>\n                        {formatPercent(item.changePercent)}\n                      </td>\n                      <td className=\"text-center py-3 px-4\">\n                        <span\n                          className={`px-2 py-1 rounded-full text-xs font-medium ${\n                            item.category === 'index' ? 'bg-blue-100 text-blue-800' :\n                              item.category === 'stock' ? 'bg-green-100 text-green-800' :\n                                item.category === 'volatility' ? 'bg-red-100 text-red-800' :\n                                  'bg-gray-100 text-gray-800'\n                          }`}\n                        >\n                          {item.category}\n                        </span>\n                      </td>\n                      <td className=\"text-center py-3 px-4\">\n                        <button\n                          onClick={() => removeFromWatchlist(item.symbol)}\n                          className=\"text-red-600 hover:text-red-800\"\n                        >\n                          <Minus size={16} />\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Charts & Analysis */}\n      {activeView === 'charts' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Price Chart */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">30-Day Price Performance</h3>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <RechartsLineChart data={chartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"time\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Line\n                    type=\"monotone\" dataKey=\"SPY\" stroke=\"#3B82F6\"\n                    strokeWidth={2} name=\"S&P 500\"\n                  />\n                  <Line\n                    type=\"monotone\" dataKey=\"QQQ\" stroke=\"#10B981\"\n                    strokeWidth={2} name=\"NASDAQ\"\n                  />\n                  <Line\n                    type=\"monotone\" dataKey=\"VIX\" stroke=\"#EF4444\"\n                    strokeWidth={2} name=\"VIX\"\n                  />\n                </RechartsLineChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Correlation Analysis */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Correlation Analysis</h3>\n            <div className=\"space-y-3\">\n              {correlationMatrix.map((corr, idx) => (\n                <div key={idx} className=\"flex items-center justify-between p-3 bg-white rounded-lg\">\n                  <div>\n                    <div className=\"font-medium text-gray-800\">{corr.pair}</div>\n                    <div className=\"text-sm text-gray-600\">{corr.strength}</div>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <div\n                      className={`text-lg font-bold ${\n                        Math.abs(corr.correlation) > 0.7 ? 'text-red-600' :\n                          Math.abs(corr.correlation) > 0.4 ? 'text-yellow-600' :\n                            'text-green-600'\n                      }`}\n                    >\n                      {corr.correlation.toFixed(2)}\n                    </div>\n                    <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                      <div\n                        className={`h-2 rounded-full ${\n                          Math.abs(corr.correlation) > 0.7 ? 'bg-red-600' :\n                            Math.abs(corr.correlation) > 0.4 ? 'bg-yellow-600' :\n                              'bg-green-600'\n                        }`}\n                        style={{ width: `${Math.abs(corr.correlation) * 100}%` }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Alerts */}\n      {activeView === 'alerts' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} className=\"space-y-6\">\n          {/* Active Alerts */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-4\">Active Alerts</h3>\n            <div className=\"space-y-3\">\n              {alerts.map((alert) => (\n                <div key={alert.id} className=\"flex items-center justify-between p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Bell className=\"text-yellow-600\" size={20} />\n                    <div>\n                      <div className=\"font-medium text-gray-800\">\n                        {alert.symbol} {alert.type} alert\n                      </div>\n                      <div className=\"text-sm text-gray-600\">\n                        Notify when {alert.type} goes {alert.condition} {alert.value}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <span\n                      className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        alert.active ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\n                      }`}\n                    >\n                      {alert.active ? 'Active' : 'Inactive'}\n                    </span>\n                    <button className=\"text-red-600 hover:text-red-800\">\n                      <Minus size={16} />\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Market Status Indicators */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Market Status</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <CheckCircle className=\"text-green-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">US Markets</div>\n                  <div className=\"text-sm text-gray-600\">Open (6h 23m remaining)</div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <AlertCircle className=\"text-yellow-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">European Markets</div>\n                  <div className=\"text-sm text-gray-600\">Closed</div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3 p-3 bg-white rounded-lg\">\n                <AlertCircle className=\"text-red-600\" size={20} />\n                <div>\n                  <div className=\"font-medium text-gray-800\">Asian Markets</div>\n                  <div className=\"text-sm text-gray-600\">Closed</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default EnhancedMarketDataDashboard;\n","import { motion } from 'framer-motion';\nimport {\n  BarChart3, Plus, Trash2,\n  Play, AlertTriangle\n} from 'lucide-react';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar } from 'recharts';\n\nconst EnhancedScenarioAnalysis = ({ data, _onDataChange, calculateDCF, lboModelingEngine }) => {\n  const [_activeView, _setActiveView] = useState('scenarios');\n  const [scenarios, setScenarios] = useState([\n    {\n      id: 1,\n      name: 'Base Case',\n      probability: 40,\n      revenueGrowth: 5.0,\n      marginExpansion: 0.5,\n      exitMultiple: 10.0,\n      capexIntensity: 3.0,\n      isBase: true\n    },\n    {\n      id: 2,\n      name: 'Bull Case',\n      probability: 30,\n      revenueGrowth: 8.0,\n      marginExpansion: 1.5,\n      exitMultiple: 12.0,\n      capexIntensity: 2.5,\n      isBase: false\n    },\n    {\n      id: 3,\n      name: 'Bear Case',\n      probability: 30,\n      revenueGrowth: 2.0,\n      marginExpansion: -0.5,\n      exitMultiple: 8.0,\n      capexIntensity: 4.0,\n      isBase: false\n    }\n  ]);\n\n  const [analysisSettings, setAnalysisSettings] = useState({\n    modelType: 'dcf', // 'dcf', 'lbo', '3statement'\n    outputMetric: 'enterpriseValue',\n    includeCorrelations: false,\n    numSimulations: 1000\n  });\n\n  const [results, setResults] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n\n  const formatCurrency = useCallback((value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    return `${(value || 0).toFixed(1)}%`;\n  }, []);\n\n  const runScenarioAnalysis = useCallback(async() => {\n    setIsCalculating(true);\n\n    try {\n      const scenarioResults = [];\n\n      for (const scenario of scenarios) {\n        let result = null;\n\n        if (analysisSettings.modelType === 'dcf') {\n          // Run DCF analysis for each scenario\n          const scenarioData = {\n            ...data,\n            statements: {\n              ...data.statements,\n              incomeStatement: {\n                ...data.statements.incomeStatement,\n                // Apply scenario assumptions to modify data\n                totalRevenue: data.statements.incomeStatement.totalRevenue?.map((rev, idx) => {\n                  if (idx === 0) return rev; // Base year unchanged\n                  return rev * Math.pow(1 + scenario.revenueGrowth / 100, idx);\n                })\n              }\n            }\n          };\n\n          result = calculateDCF ? calculateDCF(scenarioData) : null;\n        } else if (analysisSettings.modelType === 'lbo' && lboModelingEngine) {\n          // Run LBO analysis for each scenario\n          const lboInputs = {\n            symbol: data.symbol || 'COMPANY',\n            companyName: data.companyName || 'Target Company',\n            purchasePrice: 500000000,\n            ebitda: 75000000,\n            revenue: 500000000,\n            assumptions: {\n              operating: {\n                ebitdaGrowthRate: scenario.revenueGrowth / 100,\n                capexAsPercentOfRevenue: scenario.capexIntensity / 100\n              },\n              exit: {\n                exitMultiple: scenario.exitMultiple\n              }\n            }\n          };\n\n          result = lboModelingEngine.buildLBOModel(lboInputs);\n        }\n\n        scenarioResults.push({\n          ...scenario,\n          result,\n          enterpriseValue: result?.enterpriseValue || result?.baseCase?.exitAnalysis?.enterpriseValue || 0,\n          equityValue: result?.equityValue || result?.baseCase?.exitAnalysis?.equityProceeds || 0,\n          irr: result?.irr || result?.baseCase?.returnsAnalysis?.irr || 0,\n          moic: result?.moic || result?.baseCase?.returnsAnalysis?.moic || 0\n        });\n      }\n\n      // Calculate probability-weighted metrics\n      const weightedValue = scenarioResults.reduce((sum, s) =>\n        sum + (s.enterpriseValue * s.probability / 100), 0\n      );\n\n      const valueRange = {\n        min: Math.min(...scenarioResults.map(s => s.enterpriseValue)),\n        max: Math.max(...scenarioResults.map(s => s.enterpriseValue)),\n        range: Math.max(...scenarioResults.map(s => s.enterpriseValue)) -\n               Math.min(...scenarioResults.map(s => s.enterpriseValue))\n      };\n\n      // Risk metrics\n      const standardDeviation = Math.sqrt(\n        scenarioResults.reduce((sum, s) => {\n          const deviation = s.enterpriseValue - weightedValue;\n          return sum + (deviation * deviation * s.probability / 100);\n        }, 0)\n      );\n\n      const coefficientOfVariation = standardDeviation / weightedValue;\n\n      setResults({\n        scenarios: scenarioResults,\n        summary: {\n          weightedValue,\n          valueRange,\n          standardDeviation,\n          coefficientOfVariation,\n          probabilityOfPositiveReturn: scenarioResults\n            .filter(s => s.enterpriseValue > (data.currentMarketCap || 1000000000))\n            .reduce((sum, s) => sum + s.probability, 0)\n        },\n        chartData: scenarioResults.map(s => ({\n          name: s.name,\n          value: s.enterpriseValue,\n          probability: s.probability,\n          irr: s.irr * 100,\n          moic: s.moic\n        }))\n      });\n\n    } catch (error) {\n      console.error('Scenario analysis error:', error);\n      alert(`Error running scenario analysis: ${error.message}`);\n    } finally {\n      setIsCalculating(false);\n    }\n  }, [scenarios, analysisSettings, data, calculateDCF, lboModelingEngine]);\n\n  const addScenario = useCallback(() => {\n    const newScenario = {\n      id: Date.now(),\n      name: `Scenario ${scenarios.length + 1}`,\n      probability: Math.max(0, 100 - scenarios.reduce((sum, s) => sum + s.probability, 0)),\n      revenueGrowth: 5.0,\n      marginExpansion: 0.0,\n      exitMultiple: 10.0,\n      capexIntensity: 3.0,\n      isBase: false\n    };\n    setScenarios(prev => [...prev, newScenario]);\n  }, [scenarios]);\n\n  const updateScenario = useCallback((id, field, value) => {\n    setScenarios(prev => prev.map(scenario =>\n      scenario.id === id ? { ...scenario, [field]: parseFloat(value) || value } : scenario\n    ));\n  }, []);\n\n  const deleteScenario = useCallback((id) => {\n    setScenarios(prev => prev.filter(scenario => scenario.id !== id && !scenario.isBase));\n  }, []);\n\n  const totalProbability = useMemo(() =>\n    scenarios.reduce((sum, s) => sum + s.probability, 0), [scenarios]\n  );\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <BarChart3 className=\"text-purple-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Enhanced Scenario Analysis</h2>\n            <p className=\"text-gray-600\">Cross-model scenario planning & risk assessment</p>\n          </div>\n        </div>\n\n        <div className=\"flex space-x-3\">\n          <motion.button\n            onClick={runScenarioAnalysis}\n            disabled={isCalculating || totalProbability !== 100}\n            className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n              isCalculating || totalProbability !== 100\n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                : 'bg-purple-600 hover:bg-purple-700 text-white'\n            }`}\n            whileHover={!isCalculating && totalProbability === 100 ? { scale: 1.02 } : {}}\n          >\n            <Play size={18} />\n            <span>{isCalculating ? 'Running...' : 'Run Analysis'}</span>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Model Selection & Settings */}\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div>\n            <label htmlFor=\"modelType\" className=\"block text-sm font-medium text-gray-700 mb-2\">Model Type</label>\n            <select\n              id=\"modelType\"\n              value={analysisSettings.modelType}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, modelType: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            >\n              <option value=\"dcf\">DCF Valuation</option>\n              <option value=\"lbo\">LBO Analysis</option>\n              <option value=\"3statement\">3-Statement Model</option>\n            </select>\n          </div>\n\n          <div>\n            <label htmlFor=\"outputMetric\" className=\"block text-sm font-medium text-gray-700 mb-2\">Output Metric</label>\n            <select\n              id=\"outputMetric\"\n              value={analysisSettings.outputMetric}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, outputMetric: e.target.value }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            >\n              <option value=\"enterpriseValue\">Enterprise Value</option>\n              <option value=\"equityValue\">Equity Value</option>\n              <option value=\"irr\">IRR</option>\n              <option value=\"moic\">MOIC</option>\n            </select>\n          </div>\n\n          <div>\n            <label htmlFor=\"simulations\" className=\"block text-sm font-medium text-gray-700 mb-2\">Simulations</label>\n            <input\n              id=\"simulations\"\n              type=\"number\"\n              value={analysisSettings.numSimulations}\n              onChange={(e) => setAnalysisSettings(prev => ({ ...prev, numSimulations: parseInt(e.target.value) || 1000 }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            />\n          </div>\n\n          <div className=\"flex items-end\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={analysisSettings.includeCorrelations}\n                onChange={(e) => setAnalysisSettings(prev => ({ ...prev, includeCorrelations: e.target.checked }))}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Include Correlations</span>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Probability Warning */}\n      {totalProbability !== 100 && (\n        <div className=\"mb-6 p-3 bg-amber-50 border border-amber-200 rounded-lg flex items-center\">\n          <AlertTriangle className=\"text-amber-500 mr-2\" size={20} />\n          <span className=\"text-amber-800\">\n            Total probability is {totalProbability}%. Adjust scenarios to sum to 100%.\n          </span>\n        </div>\n      )}\n\n      {/* Scenarios Table */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold\">Scenarios</h3>\n          <motion.button\n            onClick={addScenario}\n            className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center space-x-2\"\n            whileHover={{ scale: 1.02 }}\n          >\n            <Plus size={16} />\n            <span>Add Scenario</span>\n          </motion.button>\n        </div>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead>\n              <tr className=\"border-b-2 border-gray-300\">\n                <th className=\"text-left py-3 px-4\">Scenario</th>\n                <th className=\"text-right py-3 px-4\">Probability (%)</th>\n                <th className=\"text-right py-3 px-4\">Revenue Growth (%)</th>\n                <th className=\"text-right py-3 px-4\">Margin Expansion (bps)</th>\n                <th className=\"text-right py-3 px-4\">Exit Multiple</th>\n                <th className=\"text-right py-3 px-4\">CapEx Intensity (%)</th>\n                <th className=\"text-center py-3 px-4\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {scenarios.map((scenario) => (\n                <tr key={scenario.id} className={`border-b border-gray-200 ${scenario.isBase ? 'bg-blue-50' : ''}`}>\n                  <td className=\"py-3 px-4\">\n                    <input\n                      type=\"text\"\n                      value={scenario.name}\n                      onChange={(e) => updateScenario(scenario.id, 'name', e.target.value)}\n                      disabled={scenario.isBase}\n                      className={`border border-gray-300 rounded px-2 py-1 ${scenario.isBase ? 'bg-gray-100' : ''}`}\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"1\"\n                      value={scenario.probability}\n                      onChange={(e) => updateScenario(scenario.id, 'probability', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.revenueGrowth}\n                      onChange={(e) => updateScenario(scenario.id, 'revenueGrowth', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.marginExpansion}\n                      onChange={(e) => updateScenario(scenario.id, 'marginExpansion', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.exitMultiple}\n                      onChange={(e) => updateScenario(scenario.id, 'exitMultiple', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-right py-3 px-4\">\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={scenario.capexIntensity}\n                      onChange={(e) => updateScenario(scenario.id, 'capexIntensity', e.target.value)}\n                      className=\"w-20 text-right border border-gray-300 rounded px-2 py-1\"\n                    />\n                  </td>\n                  <td className=\"text-center py-3 px-4\">\n                    {!scenario.isBase && (\n                      <button\n                        onClick={() => deleteScenario(scenario.id)}\n                        className=\"text-red-600 hover:text-red-800\"\n                      >\n                        <Trash2 size={16} />\n                      </button>\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Results */}\n      {results && (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"space-y-6\"\n        >\n          {/* Summary Metrics */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {formatCurrency(results.summary.weightedValue)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Expected Value</div>\n            </div>\n            <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {formatCurrency(results.summary.valueRange.max)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Best Case</div>\n            </div>\n            <div className=\"bg-red-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-red-600\">\n                {formatCurrency(results.summary.valueRange.min)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Worst Case</div>\n            </div>\n            <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {formatPercent(results.summary.probabilityOfPositiveReturn)}\n              </div>\n              <div className=\"text-sm text-gray-600\">Success Probability</div>\n            </div>\n          </div>\n\n          {/* Scenario Results Chart */}\n          <div className=\"bg-gray-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Scenario Results</h3>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={results.chartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis tickFormatter={(value) => formatCurrency(value)} />\n                  <Tooltip formatter={(value) => [formatCurrency(value), 'Enterprise Value']} />\n                  <Bar dataKey=\"value\" fill=\"#8884d8\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Risk Analysis */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h4 className=\"font-semibold mb-3\">Risk Metrics</h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span>Standard Deviation:</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.standardDeviation)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Coefficient of Variation:</span>\n                  <span className=\"font-medium\">{(results.summary.coefficientOfVariation * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Value at Risk (5%):</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.valueRange.min)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Upside Potential:</span>\n                  <span className=\"font-medium\">{formatCurrency(results.summary.valueRange.range)}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h4 className=\"font-semibold mb-3\">Scenario Returns</h4>\n              <div className=\"space-y-2 text-sm\">\n                {results.scenarios.map((scenario) => (\n                  <div key={scenario.id} className=\"flex justify-between\">\n                    <span>{scenario.name}:</span>\n                    <span className=\"font-medium\">\n                      {analysisSettings.outputMetric === 'irr' ? formatPercent(scenario.irr) :\n                        analysisSettings.outputMetric === 'moic' ? `${scenario.moic.toFixed(1)}x` :\n                          formatCurrency(scenario[analysisSettings.outputMetric])}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n\n      {!results && (\n        <div className=\"text-center py-12 text-gray-500\">\n          <BarChart3 size={48} className=\"mx-auto mb-4 opacity-50\" />\n          <p>Configure scenarios and run analysis to see results</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EnhancedScenarioAnalysis;\n","import { motion } from 'framer-motion';\nimport { FileText, TrendingUp, Building, Activity, Calculator, RefreshCw, CheckCircle, AlertCircle } from 'lucide-react';\nimport React, { useState, useCallback } from 'react';\n\nconst FinancialModelWorkspace = ({ _data, _onDataChange }) => {\n  const [activeStatement, setActiveStatement] = useState('income');\n  const [modelData, setModelData] = useState({\n    // Income Statement (in thousands)\n    revenue: [100000, 105000, 110250, 115763, 121551],\n    costOfGoodsSold: [60000, 63000, 66150, 69458, 72931],\n    grossProfit: [40000, 42000, 44100, 46305, 48620],\n    operatingExpenses: [25000, 26250, 27563, 28941, 30388],\n    ebitda: [15000, 15750, 16538, 17364, 18232],\n    depreciation: [3000, 3150, 3308, 3473, 3647],\n    ebit: [12000, 12600, 13230, 13891, 14585],\n    interestExpense: [2000, 1800, 1580, 1340, 1080],\n    ebt: [10000, 10800, 11650, 12551, 13505],\n    taxes: [2100, 2268, 2447, 2636, 2836],\n    netIncome: [7900, 8532, 9203, 9915, 10669],\n\n    // Balance Sheet\n    cash: [5000, 8532, 12735, 17650, 23319],\n    accountsReceivable: [8333, 8750, 9188, 9647, 10129],\n    inventory: [10000, 10500, 11025, 11576, 12155],\n    totalCurrentAssets: [23333, 27782, 32948, 38873, 45603],\n    ppe: [50000, 51850, 53543, 55070, 56423],\n    totalAssets: [73333, 79632, 86491, 93943, 102026],\n\n    accountsPayable: [5000, 5250, 5513, 5789, 6078],\n    shortTermDebt: [3000, 2000, 1000, 0, 0],\n    totalCurrentLiabilities: [8000, 7250, 6513, 5789, 6078],\n    longTermDebt: [25000, 23000, 21000, 19000, 17000],\n    totalLiabilities: [33000, 30250, 27513, 24789, 23078],\n    shareholderEquity: [40333, 49382, 58978, 69154, 78948],\n    totalLiabilitiesEquity: [73333, 79632, 86491, 93943, 102026],\n\n    // Cash Flow\n    operatingCashFlow: [8567, 10233, 11345, 12464, 13584],\n    capex: [-5000, -4850, -5000, -5000, -5000],\n    investingCashFlow: [-5000, -4850, -5000, -5000, -5000],\n    debtRepayment: [-2000, -2000, -2000, -2000, -2000],\n    financingCashFlow: [-2000, -2000, -2000, -2000, -2000],\n    netCashFlow: [1567, 3383, 4345, 5464, 6584],\n    endingCash: [5000, 8383, 12728, 18192, 24776]\n  });\n\n  const [assumptions, setAssumptions] = useState({\n    revenueGrowthRate: 0.05,\n    cogsPercentOfRevenue: 0.60,\n    opexGrowthRate: 0.05,\n    taxRate: 0.21,\n    depreciationRate: 0.06,\n    capexPercentOfRevenue: 0.05,\n    debtPaydown: 2000\n  });\n\n  const [validationErrors, setValidationErrors] = useState([]);\n  const periods = ['Year 1', 'Year 2', 'Year 3', 'Year 4', 'Year 5'];\n\n  const formatCurrency = useCallback((value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0\n    }).format(value * 1000); // Convert from thousands\n  }, []);\n\n  const recalculateModel = useCallback(() => {\n    const newData = { ...modelData };\n\n    // Recalculate projections based on assumptions\n    for (let i = 1; i < 5; i++) {\n      // Income Statement\n      newData.revenue[i] = newData.revenue[i - 1] * (1 + assumptions.revenueGrowthRate);\n      newData.costOfGoodsSold[i] = newData.revenue[i] * assumptions.cogsPercentOfRevenue;\n      newData.grossProfit[i] = newData.revenue[i] - newData.costOfGoodsSold[i];\n      newData.operatingExpenses[i] = newData.operatingExpenses[i - 1] * (1 + assumptions.opexGrowthRate);\n      newData.ebitda[i] = newData.grossProfit[i] - newData.operatingExpenses[i];\n      newData.depreciation[i] = newData.ppe[i - 1] * assumptions.depreciationRate;\n      newData.ebit[i] = newData.ebitda[i] - newData.depreciation[i];\n      newData.interestExpense[i] = newData.longTermDebt[i - 1] * 0.06;\n      newData.ebt[i] = newData.ebit[i] - newData.interestExpense[i];\n      newData.taxes[i] = Math.max(0, newData.ebt[i] * assumptions.taxRate);\n      newData.netIncome[i] = newData.ebt[i] - newData.taxes[i];\n\n      // Balance Sheet\n      const capex = newData.revenue[i] * assumptions.capexPercentOfRevenue;\n      newData.ppe[i] = newData.ppe[i - 1] + capex - newData.depreciation[i];\n      newData.longTermDebt[i] = Math.max(0, newData.longTermDebt[i - 1] - assumptions.debtPaydown);\n      newData.shortTermDebt[i] = Math.max(0, newData.shortTermDebt[i - 1] - 1000);\n\n      // Working capital (simplified)\n      newData.accountsReceivable[i] = newData.revenue[i] * 0.083; // ~30 days\n      newData.inventory[i] = newData.costOfGoodsSold[i] * 0.1; // ~36 days\n      newData.accountsPayable[i] = newData.costOfGoodsSold[i] * 0.05; // ~18 days\n\n      // Cash Flow\n      const wcChange = (newData.accountsReceivable[i] - newData.accountsReceivable[i - 1]) +\n                      (newData.inventory[i] - newData.inventory[i - 1]) -\n                      (newData.accountsPayable[i] - newData.accountsPayable[i - 1]);\n\n      newData.operatingCashFlow[i] = newData.netIncome[i] + newData.depreciation[i] - wcChange;\n      newData.capex[i] = -capex;\n      newData.investingCashFlow[i] = newData.capex[i];\n      newData.debtRepayment[i] = -assumptions.debtPaydown;\n      newData.financingCashFlow[i] = newData.debtRepayment[i];\n      newData.netCashFlow[i] = newData.operatingCashFlow[i] + newData.investingCashFlow[i] + newData.financingCashFlow[i];\n      newData.endingCash[i] = newData.cash[i - 1] + newData.netCashFlow[i];\n      newData.cash[i] = newData.endingCash[i];\n\n      // Complete Balance Sheet\n      newData.totalCurrentAssets[i] = newData.cash[i] + newData.accountsReceivable[i] + newData.inventory[i];\n      newData.totalAssets[i] = newData.totalCurrentAssets[i] + newData.ppe[i];\n      newData.totalCurrentLiabilities[i] = newData.accountsPayable[i] + newData.shortTermDebt[i];\n      newData.totalLiabilities[i] = newData.totalCurrentLiabilities[i] + newData.longTermDebt[i];\n      newData.shareholderEquity[i] = newData.totalAssets[i] - newData.totalLiabilities[i];\n      newData.totalLiabilitiesEquity[i] = newData.totalLiabilities[i] + newData.shareholderEquity[i];\n    }\n\n    setModelData(newData);\n\n    // Validate model\n    const errors = [];\n    for (let i = 0; i < 5; i++) {\n      const diff = Math.abs(newData.totalAssets[i] - newData.totalLiabilitiesEquity[i]);\n      if (diff > 1) {\n        errors.push(`Balance sheet doesn't balance in ${periods[i]}`);\n      }\n    }\n    setValidationErrors(errors);\n\n  }, [modelData, assumptions, periods]);\n\n  const handleAssumptionChange = useCallback((field, value) => {\n    setAssumptions(prev => ({ ...prev, [field]: parseFloat(value) || 0 }));\n  }, []);\n\n  const statements = [\n    { id: 'income', label: 'Income Statement', icon: TrendingUp },\n    { id: 'balance', label: 'Balance Sheet', icon: Building },\n    { id: 'cashflow', label: 'Cash Flow', icon: Activity },\n    { id: 'assumptions', label: 'Assumptions', icon: Calculator }\n  ];\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <FileText className=\"text-green-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">3-Statement Financial Model</h2>\n            <p className=\"text-gray-600\">Integrated Income Statement, Balance Sheet & Cash Flow</p>\n          </div>\n        </div>\n\n        <motion.button\n          onClick={recalculateModel}\n          className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white rounded-lg flex items-center space-x-2\"\n          whileHover={{ scale: 1.02 }}\n        >\n          <RefreshCw size={16} />\n          <span>Recalculate</span>\n        </motion.button>\n      </div>\n\n      {/* Validation Status */}\n      {validationErrors.length === 0 ? (\n        <div className=\"mb-6 p-3 bg-green-50 border border-green-200 rounded-lg flex items-center\">\n          <CheckCircle className=\"text-green-500 mr-2\" size={20} />\n          <span className=\"text-green-800 font-medium\">Model is balanced and consistent</span>\n        </div>\n      ) : (\n        <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <div className=\"flex items-center mb-2\">\n            <AlertCircle className=\"text-red-500 mr-2\" size={20} />\n            <h3 className=\"font-semibold text-red-800\">Validation Errors</h3>\n          </div>\n          <ul className=\"text-sm text-red-700\">\n            {validationErrors.map((error, idx) => <li key={idx}>• {error}</li>)}\n          </ul>\n        </div>\n      )}\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {statements.map((statement) => {\n            const Icon = statement.icon;\n            return (\n              <button\n                key={statement.id}\n                onClick={() => setActiveStatement(statement.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeStatement === statement.id\n                    ? 'border-green-500 text-green-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{statement.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Income Statement */}\n      {activeStatement === 'income' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Income Statement ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {[\n                  { label: 'Revenue', key: 'revenue' },\n                  { label: 'Cost of Goods Sold', key: 'costOfGoodsSold' },\n                  { label: 'Gross Profit', key: 'grossProfit' },\n                  { label: 'Operating Expenses', key: 'operatingExpenses' },\n                  { label: 'EBITDA', key: 'ebitda' },\n                  { label: 'Depreciation', key: 'depreciation' },\n                  { label: 'EBIT', key: 'ebit' },\n                  { label: 'Interest Expense', key: 'interestExpense' },\n                  { label: 'EBT', key: 'ebt' },\n                  { label: 'Taxes', key: 'taxes' },\n                  { label: 'Net Income', key: 'netIncome' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4 font-medium\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Balance Sheet */}\n      {activeStatement === 'balance' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Balance Sheet ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                <tr className=\"bg-gray-100\"><td colSpan={6} className=\"py-2 px-4 font-semibold\">ASSETS</td></tr>\n                {[\n                  { label: 'Cash', key: 'cash' },\n                  { label: 'Accounts Receivable', key: 'accountsReceivable' },\n                  { label: 'Inventory', key: 'inventory' },\n                  { label: 'Total Current Assets', key: 'totalCurrentAssets' },\n                  { label: 'PP&E', key: 'ppe' },\n                  { label: 'Total Assets', key: 'totalAssets' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n\n                <tr className=\"bg-gray-100\"><td colSpan={6} className=\"py-2 px-4 font-semibold\">LIABILITIES & EQUITY</td></tr>\n                {[\n                  { label: 'Accounts Payable', key: 'accountsPayable' },\n                  { label: 'Short-term Debt', key: 'shortTermDebt' },\n                  { label: 'Total Current Liabilities', key: 'totalCurrentLiabilities' },\n                  { label: 'Long-term Debt', key: 'longTermDebt' },\n                  { label: 'Total Liabilities', key: 'totalLiabilities' },\n                  { label: 'Shareholder Equity', key: 'shareholderEquity' },\n                  { label: 'Total Liab. & Equity', key: 'totalLiabilitiesEquity' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Cash Flow */}\n      {activeStatement === 'cashflow' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b-2 border-gray-300\">\n                  <th className=\"text-left py-3 px-4 font-semibold\">Cash Flow Statement ($000s)</th>\n                  {periods.map(period => <th key={period} className=\"text-right py-3 px-4 font-semibold\">{period}</th>)}\n                </tr>\n              </thead>\n              <tbody>\n                {[\n                  { label: 'Operating Cash Flow', key: 'operatingCashFlow' },\n                  { label: 'CapEx', key: 'capex' },\n                  { label: 'Investing Cash Flow', key: 'investingCashFlow' },\n                  { label: 'Debt Repayment', key: 'debtRepayment' },\n                  { label: 'Financing Cash Flow', key: 'financingCashFlow' },\n                  { label: 'Net Cash Flow', key: 'netCashFlow' },\n                  { label: 'Ending Cash', key: 'endingCash' }\n                ].map((item) => (\n                  <tr key={item.key} className=\"border-b border-gray-200\">\n                    <td className=\"py-2 px-4\">{item.label}</td>\n                    {modelData[item.key]?.map((value, periodIdx) => (\n                      <td key={periodIdx} className=\"text-right py-2 px-4\">{formatCurrency(value)}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Assumptions */}\n      {activeStatement === 'assumptions' && (\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-4\">Key Assumptions</h3>\n              <div className=\"space-y-3\">\n                {[\n                  { label: 'Revenue Growth Rate (%)', key: 'revenueGrowthRate', isPercent: true },\n                  { label: 'COGS % of Revenue', key: 'cogsPercentOfRevenue', isPercent: true },\n                  { label: 'OpEx Growth Rate (%)', key: 'opexGrowthRate', isPercent: true },\n                  { label: 'Tax Rate (%)', key: 'taxRate', isPercent: true },\n                  { label: 'CapEx % of Revenue', key: 'capexPercentOfRevenue', isPercent: true },\n                  { label: 'Annual Debt Paydown ($000s)', key: 'debtPaydown', isPercent: false }\n                ].map(assumption => (\n                  <div key={assumption.key}>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      {assumption.label}\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.01\"\n                      value={assumption.isPercent ? assumptions[assumption.key] * 100 : assumptions[assumption.key]}\n                      onChange={(e) => handleAssumptionChange(\n                        assumption.key,\n                        assumption.isPercent ? (e.target.value || 0) / 100 : e.target.value\n                      )}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold mb-4\">Model Metrics</h3>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span>5-Year Revenue CAGR:</span>\n                  <span className=\"font-medium\">{((Math.pow(modelData.revenue[4] / modelData.revenue[0], 1 / 4) - 1) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>5-Year EBITDA CAGR:</span>\n                  <span className=\"font-medium\">{((Math.pow(modelData.ebitda[4] / modelData.ebitda[0], 1 / 4) - 1) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Exit EBITDA Margin:</span>\n                  <span className=\"font-medium\">{((modelData.ebitda[4] / modelData.revenue[4]) * 100).toFixed(1)}%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Exit Debt/EBITDA:</span>\n                  <span className=\"font-medium\">{(modelData.longTermDebt[4] / modelData.ebitda[4]).toFixed(1)}x</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default FinancialModelWorkspace;\n","import { Plus, ChevronDown, ChevronRight, Calculator, FileText, TrendingUp, Edit2 } from 'lucide-react';\nimport React, { useState, useRef, useEffect } from 'react';\n\nimport { useFinancialAccessibility } from '../../hooks/useAccessibility';\n\nconst FinancialSpreadsheet = ({ data, onDataChange, onAdjustedValuesChange }) => {\n  const [activeStatement, setActiveStatement] = useState('incomeStatement');\n  const [adjustedValues, setAdjustedValues] = useState({});\n\n  // Add accessibility monitoring for financial spreadsheet\n  const { elementRef: _elementRef, testFinancialFeatures: _testFinancialFeatures } = useFinancialAccessibility('spreadsheet');\n  const [expandedSections, setExpandedSections] = useState({\n    // Income Statement\n    revenue: true,\n    costOfGoodsSold: true,\n    operatingExpenses: true,\n    salariesBenefits: true,\n    grossProfit: true,\n    operatingIncome: true,\n    incomeBeforeTax: true,\n    otherIncomeExpense: true,\n    // Balance Sheet\n    currentAssets: true,\n    nonCurrentAssets: true,\n    currentLiabilities: true,\n    nonCurrentLiabilities: true,\n    equity: true,\n    // Cash Flow\n    operatingActivities: true,\n    investingActivities: true,\n    financingActivities: true\n  });\n\n  const [editingCell, setEditingCell] = useState(null);\n  const [cellValue, setCellValue] = useState('');\n  const inputRef = useRef(null);\n\n  // Initialize adjusted values with 2024 data (period index 2)\n  useEffect(() => {\n    if (data?.statements?.incomeStatement && Object.keys(adjustedValues).length === 0) {\n      const newAdjustedValues = {};\n      const incomeStatement = data.statements.incomeStatement;\n\n      Object.keys(incomeStatement).forEach(key => {\n        if (incomeStatement[key] && incomeStatement[key][2] !== undefined) {\n          newAdjustedValues[key] = incomeStatement[key][2];\n        }\n      });\n\n      setAdjustedValues(newAdjustedValues);\n      if (onAdjustedValuesChange) {\n        onAdjustedValuesChange(newAdjustedValues);\n      }\n    }\n  }, [data, adjustedValues, onAdjustedValuesChange]);\n\n  // Get current template based on active statement\n  const getCurrentTemplate = () => {\n    switch (activeStatement) {\n      case 'balanceSheet':\n        return balanceSheetTemplate;\n      case 'cashFlow':\n        return cashFlowTemplate;\n      default:\n        return incomeStatementTemplate;\n    }\n  };\n\n\n  // Income Statement Template Structure with Enhanced Color Coding\n  const incomeStatementTemplate = {\n    revenue: {\n      title: 'Revenue',\n      color: 'bg-emerald-50 border-emerald-300',\n      headerBg: 'bg-emerald-600',\n      textColor: 'text-emerald-900',\n      items: [\n        { key: 'energyDevices', label: 'Energy Devices', level: 1 },\n        { key: 'injectables', label: 'Injectables', level: 1 },\n        { key: 'wellness', label: 'Wellness', level: 1 },\n        { key: 'weightloss', label: 'Weightloss', level: 1 },\n        { key: 'retailSales', label: 'Retail Sales', level: 1 },\n        { key: 'surgery', label: 'Surgery', level: 1 },\n        { key: 'totalRevenue', label: 'Total Revenue', level: 0, bold: true, formula: true }\n      ]\n    },\n    costOfGoodsSold: {\n      title: 'Cost of Goods Sold',\n      color: 'bg-red-50 border-red-300',\n      headerBg: 'bg-red-600',\n      textColor: 'text-red-900',\n      items: [\n        { key: 'energyDeviceSupplies', label: 'Energy Device Supplies', level: 1 },\n        { key: 'injectablesCogs', label: 'Injectables', level: 1 },\n        { key: 'wellnessCogs', label: 'Wellness', level: 1 },\n        { key: 'weightlossCogs', label: 'Weightloss', level: 1 },\n        { key: 'retailProducts', label: 'Retail Products', level: 1 },\n        { key: 'surgicalSupplies', label: 'Surgical Supplies', level: 1 },\n        { key: 'totalCostOfGoodsSold', label: 'Total Cost of Goods Sold', level: 0, bold: true, formula: true }\n      ]\n    },\n    grossProfit: {\n      title: 'Gross Profit',\n      color: 'bg-blue-50 border-blue-300',\n      headerBg: 'bg-blue-600',\n      textColor: 'text-blue-900',\n      items: [\n        { key: 'grossProfit', label: 'Gross Profit', level: 0, bold: true, formula: true }\n      ]\n    },\n    salariesBenefits: {\n      title: 'Salaries & Benefits',\n      color: 'bg-purple-50 border-purple-300',\n      headerBg: 'bg-purple-600',\n      textColor: 'text-purple-900',\n      items: [\n        { key: 'employeeBenefits', label: 'Employee Benefits', level: 1 },\n        { key: 'payroll', label: 'Payroll', level: 1 },\n        { key: 'payrollTaxes', label: 'Payroll Taxes', level: 1 },\n        { key: 'totalSalariesBenefits', label: 'Total Salaries & Benefits', level: 0, bold: true, formula: true }\n      ]\n    },\n    operatingExpenses: {\n      title: 'Operating Expenses',\n      color: 'bg-orange-50 border-orange-300',\n      headerBg: 'bg-orange-600',\n      textColor: 'text-orange-900',\n      items: [\n        { key: 'marketing', label: 'Marketing', level: 1 },\n        { key: 'automobile', label: 'Automobile', level: 1 },\n        { key: 'creditCardBankCharges', label: 'Credit Card and Bank Charges', level: 1 },\n        { key: 'donations', label: 'Donations', level: 1 },\n        { key: 'computerTelephoneUtilities', label: 'Computer, Telephone, and Utilities', level: 1 },\n        { key: 'depreciation', label: 'Depreciation', level: 1 },\n        { key: 'duesSubscriptions', label: 'Dues & Subscriptions', level: 1 },\n        { key: 'education', label: 'Education', level: 1 },\n        { key: 'equipmentRental', label: 'Equipment Rental', level: 1 },\n        { key: 'insurance', label: 'Insurance', level: 1 },\n        { key: 'interestExpense', label: 'Interest Expense', level: 1 },\n        { key: 'travelMealsEntertainment', label: 'Travel, Meals, and Entertainment', level: 1 },\n        { key: 'rent', label: 'Rent', level: 1 },\n        { key: 'officeExpenses', label: 'Office Expenses', level: 1 },\n        { key: 'professionalFees', label: 'Professional Fees', level: 1 },\n        { key: 'repairsMaintenance', label: 'Repairs & Maintenance', level: 1 },\n        { key: 'localTax', label: 'Local Tax', level: 1 },\n        { key: 'stateTax', label: 'State Tax', level: 1 },\n        { key: 'totalOperatingExpense', label: 'Total Operating Expense', level: 0, bold: true, formula: true }\n      ]\n    },\n    operatingIncome: {\n      title: 'Operating Income',\n      color: 'bg-teal-50 border-teal-300',\n      headerBg: 'bg-teal-600',\n      textColor: 'text-teal-900',\n      items: [\n        { key: 'operatingIncome', label: 'Operating Income', level: 0, bold: true }\n      ]\n    },\n    otherIncomeExpense: {\n      title: 'Other Income / (Expense)',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-600',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'gainOnAssetSale', label: 'Gain (Loss) On Asset Sale', level: 1 },\n        { key: 'interestIncome', label: 'Interest Income', level: 1 },\n        { key: 'otherExpenses', label: 'Other Expenses', level: 1 },\n        { key: 'totalOtherIncomeExpense', label: 'Total Other Income / (Expenses)', level: 0, bold: true, formula: true }\n      ]\n    },\n    incomeBeforeTax: {\n      title: 'Net Income Before Taxes',\n      color: 'bg-amber-50 border-amber-300',\n      headerBg: 'bg-amber-600',\n      textColor: 'text-amber-900',\n      items: [\n        { key: 'incomeBeforeTax', label: 'Net Income Before Taxes', level: 0, bold: true }\n      ]\n    }\n  };\n\n  // Balance Sheet Template Structure\n  const balanceSheetTemplate = {\n    currentAssets: {\n      title: 'Current Assets',\n      color: 'bg-emerald-50 border-emerald-300',\n      headerBg: 'bg-emerald-600',\n      textColor: 'text-emerald-900',\n      items: [\n        { key: 'cash', label: 'Cash and Cash Equivalents', level: 1 },\n        { key: 'receivables', label: 'Accounts Receivable', level: 1 },\n        { key: 'inventory', label: 'Inventory', level: 1 },\n        { key: 'prepaidExpenses', label: 'Prepaid Expenses', level: 1 },\n        { key: 'otherCurrentAssets', label: 'Other Current Assets', level: 1 },\n        { key: 'totalCurrentAssets', label: 'Total Current Assets', level: 0, formula: true, bold: true }\n      ]\n    },\n    nonCurrentAssets: {\n      title: 'Non-Current Assets',\n      color: 'bg-blue-50 border-blue-300',\n      headerBg: 'bg-blue-600',\n      textColor: 'text-blue-900',\n      items: [\n        { key: 'ppe', label: 'Property, Plant & Equipment', level: 1 },\n        { key: 'accumulatedDepreciation', label: 'Less: Accumulated Depreciation', level: 1 },\n        { key: 'netPPE', label: 'Net Property, Plant & Equipment', level: 1, formula: true },\n        { key: 'intangibleAssets', label: 'Intangible Assets', level: 1 },\n        { key: 'goodwill', label: 'Goodwill', level: 1 },\n        { key: 'otherNonCurrentAssets', label: 'Other Non-Current Assets', level: 1 },\n        { key: 'totalNonCurrentAssets', label: 'Total Non-Current Assets', level: 0, formula: true, bold: true }\n      ]\n    },\n    totalAssets: {\n      title: 'Total Assets',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'totalAssets', label: 'Total Assets', level: 0, formula: true, bold: true }\n      ]\n    },\n    currentLiabilities: {\n      title: 'Current Liabilities',\n      color: 'bg-red-50 border-red-300',\n      headerBg: 'bg-red-600',\n      textColor: 'text-red-900',\n      items: [\n        { key: 'accountsPayable', label: 'Accounts Payable', level: 1 },\n        { key: 'accruedExpenses', label: 'Accrued Expenses', level: 1 },\n        { key: 'shortTermDebt', label: 'Short-term Debt', level: 1 },\n        { key: 'currentPortionLongTermDebt', label: 'Current Portion of Long-term Debt', level: 1 },\n        { key: 'otherCurrentLiabilities', label: 'Other Current Liabilities', level: 1 },\n        { key: 'totalCurrentLiabilities', label: 'Total Current Liabilities', level: 0, formula: true, bold: true }\n      ]\n    },\n    nonCurrentLiabilities: {\n      title: 'Non-Current Liabilities',\n      color: 'bg-orange-50 border-orange-300',\n      headerBg: 'bg-orange-600',\n      textColor: 'text-orange-900',\n      items: [\n        { key: 'longTermDebt', label: 'Long-term Debt', level: 1 },\n        { key: 'deferredTaxLiabilities', label: 'Deferred Tax Liabilities', level: 1 },\n        { key: 'otherNonCurrentLiabilities', label: 'Other Non-Current Liabilities', level: 1 },\n        { key: 'totalNonCurrentLiabilities', label: 'Total Non-Current Liabilities', level: 0, formula: true, bold: true }\n      ]\n    },\n    totalLiabilities: {\n      title: 'Total Liabilities',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'totalLiabilities', label: 'Total Liabilities', level: 0, formula: true, bold: true }\n      ]\n    },\n    equity: {\n      title: 'Shareholders\\' Equity',\n      color: 'bg-purple-50 border-purple-300',\n      headerBg: 'bg-purple-600',\n      textColor: 'text-purple-900',\n      items: [\n        { key: 'commonStock', label: 'Common Stock', level: 1 },\n        { key: 'retainedEarnings', label: 'Retained Earnings', level: 1 },\n        { key: 'otherEquity', label: 'Other Comprehensive Income', level: 1 },\n        { key: 'totalEquity', label: 'Total Shareholders\\' Equity', level: 0, formula: true, bold: true }\n      ]\n    },\n    totalLiabilitiesEquity: {\n      title: 'Total Liabilities and Equity',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'totalLiabilitiesEquity', label: 'Total Liabilities and Shareholders\\' Equity', level: 0, formula: true, bold: true }\n      ]\n    }\n  };\n\n  // Cash Flow Template Structure\n  const cashFlowTemplate = {\n    operatingActivities: {\n      title: 'Operating Activities',\n      color: 'bg-emerald-50 border-emerald-300',\n      headerBg: 'bg-emerald-600',\n      textColor: 'text-emerald-900',\n      items: [\n        { key: 'netIncome', label: 'Net Income', level: 1 },\n        { key: 'depreciation', label: 'Depreciation and Amortization', level: 1 },\n        { key: 'receivablesChange', label: 'Change in Accounts Receivable', level: 1 },\n        { key: 'inventoryChange', label: 'Change in Inventory', level: 1 },\n        { key: 'payablesChange', label: 'Change in Accounts Payable', level: 1 },\n        { key: 'otherOperatingChanges', label: 'Other Operating Changes', level: 1 },\n        { key: 'netCashFromOperating', label: 'Net Cash from Operating Activities', level: 0, formula: true, bold: true }\n      ]\n    },\n    investingActivities: {\n      title: 'Investing Activities',\n      color: 'bg-blue-50 border-blue-300',\n      headerBg: 'bg-blue-600',\n      textColor: 'text-blue-900',\n      items: [\n        { key: 'capex', label: 'Capital Expenditures', level: 1 },\n        { key: 'acquisitions', label: 'Acquisitions', level: 1 },\n        { key: 'assetSales', label: 'Asset Sales', level: 1 },\n        { key: 'otherInvestingActivities', label: 'Other Investing Activities', level: 1 },\n        { key: 'netCashFromInvesting', label: 'Net Cash from Investing Activities', level: 0, formula: true, bold: true }\n      ]\n    },\n    financingActivities: {\n      title: 'Financing Activities',\n      color: 'bg-purple-50 border-purple-300',\n      headerBg: 'bg-purple-600',\n      textColor: 'text-purple-900',\n      items: [\n        { key: 'debtIssuance', label: 'Debt Issuance', level: 1 },\n        { key: 'debtRepayment', label: 'Debt Repayment', level: 1 },\n        { key: 'equityIssuance', label: 'Equity Issuance', level: 1 },\n        { key: 'dividends', label: 'Dividends Paid', level: 1 },\n        { key: 'otherFinancingActivities', label: 'Other Financing Activities', level: 1 },\n        { key: 'netCashFromFinancing', label: 'Net Cash from Financing Activities', level: 0, formula: true, bold: true }\n      ]\n    },\n    netCashFlow: {\n      title: 'Net Cash Flow',\n      color: 'bg-slate-50 border-slate-300',\n      headerBg: 'bg-slate-700',\n      textColor: 'text-slate-900',\n      items: [\n        { key: 'netCashFlow', label: 'Net Change in Cash', level: 0, formula: true, bold: true },\n        { key: 'beginningCash', label: 'Cash at Beginning of Period', level: 1 },\n        { key: 'endingCash', label: 'Cash at End of Period', level: 0, formula: true, bold: true }\n      ]\n    }\n  };\n\n  const currentTemplate = getCurrentTemplate();\n\n  const toggleSection = (section) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n\n  const handleCellClick = (rowKey, periodIndex, isAdjusted = false) => {\n    setEditingCell({ rowKey, periodIndex, isAdjusted });\n    let currentValue = '';\n\n    if (isAdjusted) {\n      currentValue = adjustedValues[rowKey] || '';\n    } else {\n      currentValue = data.statements.incomeStatement[rowKey]?.[periodIndex] || '';\n    }\n\n    setCellValue(currentValue.toString());\n  };\n\n  const handleCellBlur = () => {\n    if (editingCell) {\n      const { rowKey, periodIndex, isAdjusted } = editingCell;\n      const newValue = parseFloat(cellValue) || 0;\n\n      if (isAdjusted) {\n        // Update adjusted values\n        const newAdjustedValues = {\n          ...adjustedValues,\n          [rowKey]: newValue\n        };\n        setAdjustedValues(newAdjustedValues);\n        if (onAdjustedValuesChange) {\n          onAdjustedValuesChange(newAdjustedValues);\n        }\n      } else {\n        // Update original data\n        const newData = { ...data };\n        if (!newData.statements.incomeStatement[rowKey]) {\n          newData.statements.incomeStatement[rowKey] = {};\n        }\n        newData.statements.incomeStatement[rowKey][periodIndex] = newValue;\n        onDataChange(newData);\n      }\n\n      setEditingCell(null);\n      setCellValue('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleCellBlur();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      setEditingCell(null);\n      setCellValue('');\n    } else if (e.key === 'Tab') {\n      e.preventDefault();\n      handleCellBlur();\n      // Could implement tab navigation to next cell here\n    }\n  };\n\n  // Input validation for numeric values\n  const validateNumericInput = (value) => {\n    // Allow negative numbers, decimals, and empty strings\n    const numericRegex = /^-?\\d*\\.?\\d*$/;\n    return numericRegex.test(value) || value === '';\n  };\n\n  const formatNumber = (value) => {\n    if (!value && value !== 0) return '';\n\n    // Convert to number if it's a string\n    const numValue = typeof value === 'string' ? parseFloat(value) : value;\n    if (isNaN(numValue)) return '';\n\n    // Format based on magnitude for better readability\n    const absValue = Math.abs(numValue);\n    let formattedValue;\n\n    if (absValue >= 1000000) {\n      // Millions\n      formattedValue = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 1,\n        maximumFractionDigits: 1\n      }).format(numValue / 1000000);\n      formattedValue += 'M';\n    } else if (absValue >= 1000) {\n      // Thousands\n      formattedValue = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      }).format(numValue);\n    } else {\n      // Less than 1000\n      formattedValue = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      }).format(numValue);\n    }\n\n    return formattedValue;\n  };\n\n  const addNewRow = () => {\n    const newRowLabel = prompt('Enter row label:');\n    if (newRowLabel) {\n      const newData = { ...data };\n      // Add to template structure (this could be enhanced to persist custom rows)\n      onDataChange(newData);\n    }\n  };\n\n  const addPeriod = () => {\n    const newPeriodLabel = prompt('Enter period label (e.g., \"Year 5\"):');\n    if (newPeriodLabel) {\n      const newData = { ...data };\n      newData.periods = [...newData.periods, newPeriodLabel];\n      onDataChange(newData);\n    }\n  };\n\n  useEffect(() => {\n    if (editingCell && inputRef.current) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, [editingCell]);\n\n  const renderRow = (item) => {\n    const { key, label, level, formula, bold } = item;\n\n    // Enhanced spacing and visual hierarchy\n    const indentClass = level === 1 ? 'pl-8' : level === 2 ? 'pl-12' : 'pl-4';\n    const textWeight = bold ? 'font-bold' : level === 0 ? 'font-semibold' : 'font-medium';\n    const textSize = level === 0 ? 'text-sm' : 'text-sm';\n    const textColor = level === 0 ? 'text-slate-900' : 'text-slate-700';\n    const rowBg = level === 0 ? 'bg-slate-50/70' : 'bg-white';\n    const borderColor = level === 0 ? 'border-slate-200' : 'border-slate-100';\n\n    // Screen reader context\n    const ariaLabel = level === 0 \n      ? `${label}, total or summary line item${formula ? ', calculated automatically' : ''}` \n      : `${label}, detail line item${formula ? ', calculated automatically' : ', editable'}`;\n\n    return (\n      <tr \n        key={key} \n        className={`${rowBg} border-b ${borderColor} hover:bg-slate-50 transition-all duration-150 group`}\n        role=\"row\"\n        aria-label={ariaLabel}\n      >\n        {/* Account Name Column */}\n        <td \n          className={`px-6 py-4 ${indentClass} ${textWeight} ${textSize} ${textColor}`}\n          scope={level === 0 ? 'rowgroup' : 'row'}\n          headers=\"account-header\"\n          aria-describedby={formula ? 'formula-description' : 'manual-description'}\n        >\n          <div id=\"formula-description\" className=\"sr-only\">\n            This is an automatically calculated field based on other line items\n          </div>\n          <div id=\"manual-description\" className=\"sr-only\">\n            This field can be edited by clicking or pressing Enter\n          </div>\n          <div className=\"flex items-center gap-3\">\n            {level === 0 && (\n              <div className=\"w-1.5 h-4 bg-gradient-to-b from-blue-500 to-blue-600 rounded-full flex-shrink-0 shadow-sm\" />\n            )}\n            <span className=\"leading-tight\">{label}</span>\n            {formula && (\n              <div className=\"flex items-center gap-1\">\n                <Calculator size={14} className=\"text-blue-500/80 flex-shrink-0\" />\n                <span className=\"text-xs text-blue-600 font-medium px-1.5 py-0.5 bg-blue-50 rounded-md\">AUTO</span>\n              </div>\n            )}\n          </div>\n        </td>\n\n        {/* Units Column */}\n        <td \n          className=\"px-4 py-4 text-center\"\n          headers=\"units-header\"\n          aria-label=\"Values are in thousands of dollars\"\n        >\n          <span className=\"text-xs font-medium text-slate-500 uppercase tracking-wide bg-slate-100 px-2 py-1 rounded-md\">\n            $ 000s\n          </span>\n        </td>\n\n        {/* Period Columns */}\n        {data.periods.map((period, periodIndex) => {\n          const cellValue = data.statements.incomeStatement[key]?.[periodIndex];\n          const formattedValue = formatNumber(cellValue);\n          const cellAriaLabel = `${label} for ${period}: ${formattedValue || 'no value'} thousand dollars${formula ? ', calculated automatically' : ', click to edit'}`;\n          \n          return (\n          <td \n            key={periodIndex} \n            className=\"px-4 py-4 text-right\"\n            headers={`period-${periodIndex}-header account-header`}\n            aria-label={cellAriaLabel}\n          >\n            {editingCell?.rowKey === key && editingCell?.periodIndex === periodIndex && !editingCell?.isAdjusted ? (\n              <div className=\"relative\">\n                <input\n                  ref={inputRef}\n                  type=\"text\"\n                  value={cellValue}\n                  onChange={(e) => {\n                    const newValue = e.target.value;\n                    if (validateNumericInput(newValue)) {\n                      setCellValue(newValue);\n                    }\n                  }}\n                  onBlur={handleCellBlur}\n                  onKeyDown={handleKeyPress}\n                  className=\"w-full px-3 py-2.5 bg-white border-2 border-blue-400 rounded-lg text-slate-900 text-right font-mono text-sm focus:outline-none focus:ring-4 focus:ring-blue-100 focus:border-blue-500 shadow-lg\"\n                  placeholder=\"0.00\"\n                />\n                <div className=\"absolute -top-2 -right-2 flex gap-1\">\n                  <button\n                    onClick={handleCellBlur}\n                    className=\"w-5 h-5 bg-emerald-500 hover:bg-emerald-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                  >\n                    ✓\n                  </button>\n                  <button\n                    onClick={() => {\n                      setEditingCell(null);\n                      setCellValue('');\n                    }}\n                    className=\"w-5 h-5 bg-red-500 hover:bg-red-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                  >\n                    ×\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <div\n                onClick={() => !formula && handleCellClick(key, periodIndex)}\n                className={`px-3 py-2.5 rounded-lg font-mono text-sm transition-all duration-200 min-h-[40px] flex items-center justify-end ${\n                  formula\n                    ? 'bg-gradient-to-r from-blue-50 to-blue-100 text-blue-800 font-semibold border border-blue-200 shadow-sm'\n                    : 'hover:bg-slate-100 text-slate-800 cursor-pointer border border-transparent hover:border-slate-200 hover:shadow-sm group-hover:bg-slate-50'\n                }`}\n                role={formula ? 'cell' : 'button'}\n                tabIndex={formula ? -1 : 0}\n                aria-label={cellAriaLabel}\n                aria-readonly={formula}\n                onKeyDown={(e) => {\n                  if ((e.key === 'Enter' || e.key === ' ') && !formula) {\n                    e.preventDefault();\n                    handleCellClick(key, periodIndex);\n                  }\n                }}\n              >\n                <span className={formula ? 'text-blue-900' : 'text-slate-700'}>\n                  {formatNumber(data.statements.incomeStatement[key]?.[periodIndex]) || '—'}\n                </span>\n                {!formula && (\n                  <Edit2 size={12} className=\"ml-2 opacity-0 group-hover:opacity-40 text-slate-400 transition-opacity\" />\n                )}\n              </div>\n            )}\n          </td>\n          );\n        })}\n\n        {/* Adjusted Column */}\n        <td \n          className=\"px-4 py-4 text-right bg-gradient-to-r from-amber-50 to-yellow-50 border-l-2 border-amber-300\"\n          headers=\"adjusted-header account-header\"\n          aria-label={`${label} adjusted value: ${formatNumber(adjustedValues[key] || 0) || 'no value'} thousand dollars${formula ? ', calculated automatically' : ', click to edit'}`}\n        >\n          {editingCell?.rowKey === key && editingCell?.isAdjusted ? (\n            <div className=\"relative\">\n              <input\n                ref={inputRef}\n                type=\"text\"\n                value={cellValue}\n                onChange={(e) => {\n                  const newValue = e.target.value;\n                  if (validateNumericInput(newValue)) {\n                    setCellValue(newValue);\n                  }\n                }}\n                onBlur={handleCellBlur}\n                onKeyDown={handleKeyPress}\n                className=\"w-full px-3 py-2.5 bg-white border-2 border-amber-400 rounded-lg text-slate-900 text-right font-mono text-sm focus:outline-none focus:ring-4 focus:ring-amber-100 focus:border-amber-500 shadow-lg\"\n                placeholder=\"0.00\"\n              />\n              <div className=\"absolute -top-2 -right-2 flex gap-1\">\n                <button\n                  onClick={handleCellBlur}\n                  className=\"w-5 h-5 bg-emerald-500 hover:bg-emerald-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                >\n                  ✓\n                </button>\n                <button\n                  onClick={() => {\n                    setEditingCell(null);\n                    setCellValue('');\n                  }}\n                  className=\"w-5 h-5 bg-red-500 hover:bg-red-600 text-white rounded-full flex items-center justify-center text-xs transition-colors\"\n                >\n                  ×\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div\n              onClick={() => !formula && handleCellClick(key, null, true)}\n              className={`px-3 py-2.5 rounded-lg font-mono text-sm transition-all duration-200 min-h-[40px] flex items-center justify-end ${\n                formula\n                  ? 'bg-gradient-to-r from-amber-100 to-yellow-100 text-amber-800 font-semibold border border-amber-300 shadow-sm'\n                  : 'hover:bg-amber-100 text-slate-800 cursor-pointer border border-transparent hover:border-amber-300 hover:shadow-sm'\n              }`}\n              role={formula ? 'cell' : 'button'}\n              tabIndex={formula ? -1 : 0}\n              aria-label={`${label} adjusted value: ${formatNumber(adjustedValues[key] || 0) || 'no value'} thousand dollars${formula ? ', calculated automatically' : ', click to edit'}`}\n              aria-readonly={formula}\n              onKeyDown={(e) => {\n                if ((e.key === 'Enter' || e.key === ' ') && !formula) {\n                  e.preventDefault();\n                  handleCellClick(key, null, true);\n                }\n              }}\n            >\n              <span className={formula ? 'text-amber-900' : 'text-slate-700'}>\n                {formatNumber(adjustedValues[key] || 0) || '—'}\n              </span>\n              {!formula && (\n                <Edit2 size={12} className=\"ml-2 opacity-0 group-hover:opacity-40 text-amber-500 transition-opacity\" />\n              )}\n            </div>\n          )}\n        </td>\n\n        {/* Type Column */}\n        <td \n          className=\"px-4 py-4 text-center\"\n          headers=\"type-header\"\n          aria-label={`${label} is ${formula ? 'automatically calculated' : 'manually editable'}`}\n        >\n          <span\n            className={`inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium ${\n              formula\n                ? 'bg-blue-100 text-blue-800 border border-blue-200'\n                : 'bg-slate-100 text-slate-700 border border-slate-200'\n            }`}\n          >\n            {formula ? (\n              <>\n                <Calculator size={10} className=\"mr-1\" />\n                Auto\n              </>\n            ) : (\n              <>\n                <Edit2 size={10} className=\"mr-1\" />\n                Manual\n              </>\n            )}\n          </span>\n        </td>\n\n        {/* Type Column */}\n        <td \n          className=\"px-4 py-4 text-center\"\n          headers=\"type-header\"\n          aria-label={`${label} is ${formula ? 'automatically calculated' : 'manually editable'}`}\n        >\n          <span\n            className={`inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium ${\n              formula\n                ? 'bg-blue-100 text-blue-800 border border-blue-200'\n                : 'bg-slate-100 text-slate-700 border border-slate-200'\n            }`}\n          >\n            {formula ? (\n              <>\n                <Calculator size={10} className=\"mr-1\" />\n                Auto\n              </>\n            ) : (\n              <>\n                <Edit2 size={10} className=\"mr-1\" />\n                Manual\n              </>\n            )}\n          </span>\n        </td>\n      </tr>\n    );\n  };\n\n  return (\n    <div className=\"bg-slate-900 rounded-lg shadow-lg\">\n      {/* Header */}\n      <div className=\"p-4 sm:p-6 border-b border-slate-700\">\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n          <h2 className=\"text-lg sm:text-xl font-semibold text-white\">Financial Statements</h2>\n          <div className=\"flex items-center gap-3 sm:gap-4 flex-wrap\">\n            <button\n              onClick={addPeriod}\n              className=\"px-3 py-2 sm:px-4 sm:py-2.5 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center gap-2 transition-all duration-200 shadow-sm hover:shadow-md font-medium text-sm sm:text-base\"\n            >\n              <Plus size={14} className=\"sm:w-4 sm:h-4\" />\n              <span className=\"hidden sm:inline\">Add Period</span>\n              <span className=\"sm:hidden\">Add</span>\n            </button>\n            <select\n              value={activeStatement}\n              onChange={(e) => setActiveStatement(e.target.value)}\n              className=\"px-3 py-2 sm:px-4 sm:py-2.5 bg-white border border-slate-300 rounded-lg text-slate-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 font-medium shadow-sm text-sm sm:text-base\"\n            >\n              <option value=\"incomeStatement\">Income Statement</option>\n              <option value=\"balanceSheet\">Balance Sheet</option>\n              <option value=\"cashFlow\">Cash Flow Statement</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-full mx-auto p-4 sm:p-6 lg:p-8\">\n        <div className=\"bg-white rounded-xl border border-slate-200 shadow-lg\">\n          <div className=\"overflow-x-auto scrollbar-thin scrollbar-thumb-slate-300 scrollbar-track-slate-100\">\n            <table \n              className=\"w-full\"\n              role=\"table\"\n              aria-label={`Financial ${activeStatement === 'incomeStatement' ? 'Income Statement' : activeStatement === 'balanceSheet' ? 'Balance Sheet' : 'Cash Flow Statement'} with editable cells`}\n            >\n              {/* Enhanced Table Header */}\n              <thead className=\"bg-gradient-to-r from-slate-800 to-slate-900 text-white\">\n                <tr className=\"sr-only\">\n                  <td colSpan={data.periods.length + 4}>\n                    <div className=\"p-2 text-sm\">\n                      Financial spreadsheet table. Use arrow keys to navigate between cells. \n                      Press Enter or Space to edit values. Press Tab to move to next editable cell. \n                      Formula cells are calculated automatically and cannot be edited.\n                    </div>\n                  </td>\n                </tr>\n                <tr role=\"row\">\n                  <th \n                    className=\"min-w-[320px] px-6 py-4 text-left text-sm font-semibold tracking-wider\"\n                    scope=\"col\"\n                    id=\"account-header\"\n                    aria-label=\"Financial account descriptions and line items\"\n                  >\n                    <div className=\"flex items-center gap-2\">\n                      <FileText size={16} className=\"text-slate-300\" />\n                      Account Description\n                    </div>\n                  </th>\n                  <th \n                    className=\"w-20 px-4 py-4 text-center text-sm font-semibold\"\n                    scope=\"col\"\n                    id=\"units-header\"\n                    aria-label=\"Units of measurement, typically thousands of dollars\"\n                  >\n                    Units\n                  </th>\n                  {data.periods.map((period, index) => (\n                    <th \n                      key={index} \n                      className=\"min-w-[140px] px-4 py-4 text-center text-sm font-semibold\"\n                      scope=\"col\"\n                      id={`period-${index}-header`}\n                      aria-label={`Financial data for ${period}, actual values, editable`}\n                    >\n                      <div className=\"flex flex-col\">\n                        <span>{period}</span>\n                        <span className=\"text-xs text-slate-300 font-normal\">Actual</span>\n                      </div>\n                    </th>\n                  ))}\n                  <th \n                    className=\"min-w-[140px] px-4 py-4 text-center text-sm font-semibold bg-gradient-to-r from-amber-600 to-yellow-600 border-l-2 border-amber-400\"\n                    scope=\"col\"\n                    id=\"adjusted-header\"\n                    aria-label=\"Adjusted financial values, user-modified scenarios and projections, editable\"\n                  >\n                    <div className=\"flex flex-col\">\n                      <span>Adjusted</span>\n                      <span className=\"text-xs text-amber-100 font-normal\">Modified</span>\n                    </div>\n                  </th>\n                  <th \n                    className=\"w-28 px-4 py-4 text-center text-sm font-semibold\"\n                    scope=\"col\"\n                    id=\"type-header\"\n                    aria-label=\"Cell type: manual entry or automatic calculation\"\n                  >\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <Calculator size={14} />\n                      Type\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody className=\"divide-y divide-slate-100\">\n                {Object.entries(currentTemplate).map(([sectionKey, section]) => (\n                  <React.Fragment key={sectionKey}>\n                    {/* Enhanced Section Header */}\n                    <tr \n                      className={`${section.headerBg || 'bg-slate-600'} border-b-2 border-slate-300`}\n                      role=\"rowheader\"\n                      aria-label={`${section.title} section header`}\n                    >\n                      <td colSpan={data.periods.length + 4} className=\"py-4 px-6\">\n                        <div className=\"flex items-center gap-3 text-white w-full text-left group\">\n                          <button\n                            onClick={() => toggleSection(sectionKey)}\n                            className=\"flex items-center gap-3 text-white hover:text-slate-200 transition-colors flex-1\"\n                          >\n                            <div className=\"flex items-center justify-center w-6 h-6 rounded-full bg-white/20 group-hover:bg-white/30 transition-colors\">\n                              {expandedSections[sectionKey] ?\n                                <ChevronDown size={14} /> :\n                                <ChevronRight size={14} />\n                              }\n                            </div>\n                            <span className=\"font-bold text-lg\">{section.title}</span>\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              addNewRow();\n                            }}\n                            className=\"p-1.5 hover:bg-white/20 rounded-lg transition-colors opacity-0 group-hover:opacity-100\"\n                            title=\"Add custom row\"\n                          >\n                            <Plus size={16} />\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n\n                    {/* Section Rows */}\n                    {expandedSections[sectionKey] && section.items.map(item =>\n                      renderRow(item)\n                    )}\n                  </React.Fragment>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        {/* Enhanced Instructions Panel */}\n        <div className=\"mt-8 grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <div className=\"bg-white rounded-xl p-6 border border-slate-200 shadow-sm\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <div className=\"p-2 bg-blue-100 rounded-lg\">\n                <Calculator className=\"w-5 h-5 text-blue-600\" />\n              </div>\n              <h3 className=\"font-bold text-slate-900\">How to Use</h3>\n            </div>\n            <ul className=\"space-y-2 text-sm text-slate-700\">\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Click any editable cell to modify values with enhanced input controls\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Use Enter to save changes or Escape to cancel editing\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Expand/collapse sections using the arrow controls\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-blue-500 font-bold\">•</span>\n                Formula cells automatically calculate based on inputs\n              </li>\n            </ul>\n          </div>\n\n          <div className=\"bg-white rounded-xl p-6 border border-slate-200 shadow-sm\">\n            <div className=\"flex items-center gap-3 mb-4\">\n              <div className=\"p-2 bg-green-100 rounded-lg\">\n                <TrendingUp className=\"w-5 h-5 text-green-600\" />\n              </div>\n              <h3 className=\"font-bold text-slate-900\">Professional Features</h3>\n            </div>\n            <ul className=\"space-y-2 text-sm text-slate-700\">\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Color-coded sections for easy visual navigation\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Adjusted column for scenario analysis and modifications\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Professional number formatting with proper alignment\n              </li>\n              <li className=\"flex items-start gap-2\">\n                <span className=\"text-green-500 font-bold\">•</span>\n                Enhanced editing experience with save/cancel controls\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FinancialSpreadsheet;\n","import { motion } from 'framer-motion';\nimport { TrendingUp, BarChart3, PieChart as PieChartIcon, Activity, Eye, EyeOff } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\nimport {\n  LineChart, Line, BarChart, Bar, PieChart, Pie, Cell,\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\nconst DataVisualization = ({\n  dcfData,\n  sensitivityData,\n  scenarioData,\n  formatCurrency,\n  formatPercent\n}) => {\n  const [activeChart, setActiveChart] = useState('dcf-waterfall');\n  const [showDetails, setShowDetails] = useState(true);\n\n  // Chart configuration\n  const chartTypes = [\n    { id: 'dcf-waterfall', label: 'DCF Waterfall', icon: BarChart3, category: 'dcf' },\n    { id: 'cashflow-trend', label: 'Cash Flow Trend', icon: TrendingUp, category: 'dcf' },\n    { id: 'sensitivity-tornado', label: 'Sensitivity Tornado', icon: Activity, category: 'sensitivity' },\n    { id: 'scenario-distribution', label: 'Scenario Distribution', icon: PieChartIcon, category: 'scenario' },\n    { id: 'valuation-bridge', label: 'Valuation Bridge', icon: BarChart3, category: 'combined' }\n  ];\n\n  // Prepare DCF Waterfall Data\n  const dcfWaterfallData = useMemo(() => {\n    if (!dcfData?.years) return [];\n\n    let cumulativeValue = 0;\n    const data = [];\n\n    // Add each year's contribution\n    dcfData.years.forEach((year, _index) => {\n      const startValue = cumulativeValue;\n      cumulativeValue += year.presentValue;\n\n      data.push({\n        name: `Year ${year.year}`,\n        value: year.presentValue,\n        cumulative: cumulativeValue,\n        start: startValue,\n        freeCashFlow: year.freeCashFlow,\n        category: 'operations'\n      });\n    });\n\n    // Add terminal value\n    const terminalStart = cumulativeValue;\n    cumulativeValue += dcfData.presentValueTerminal;\n\n    data.push({\n      name: 'Terminal Value',\n      value: dcfData.presentValueTerminal,\n      cumulative: cumulativeValue,\n      start: terminalStart,\n      category: 'terminal'\n    });\n\n    return data;\n  }, [dcfData]);\n\n  // Prepare Cash Flow Trend Data\n  const cashFlowTrendData = useMemo(() => {\n    if (!dcfData?.years) return [];\n\n    return dcfData.years.map((year, _index) => ({\n      year: `Year ${year.year}`,\n      freeCashFlow: year.freeCashFlow,\n      presentValue: year.presentValue,\n      revenue: year.revenue,\n      operatingIncome: year.operatingIncome,\n      workingCapitalChange: year.workingCapitalChange,\n      capex: Math.abs(year.capex)\n    }));\n  }, [dcfData]);\n\n  // Prepare Sensitivity Tornado Data\n  const sensitivityTornadoData = useMemo(() => {\n    if (!sensitivityData) return [];\n\n    return Object.entries(sensitivityData).map(([_variable, result]) => {\n      const maxUpside = Math.max(...result.dataPoints.map(d => d.changeFromBase));\n      const maxDownside = Math.min(...result.dataPoints.map(d => d.changeFromBase));\n\n      return {\n        variable: result.definition.name,\n        upside: maxUpside,\n        downside: Math.abs(maxDownside),\n        range: maxUpside - maxDownside\n      };\n    }).sort((a, b) => b.range - a.range);\n  }, [sensitivityData]);\n\n  // Prepare Scenario Distribution Data\n  const scenarioDistributionData = useMemo(() => {\n    if (!scenarioData?.length) return [];\n\n    return scenarioData.map((scenario, index) => ({\n      name: scenario.name,\n      value: scenario.enterpriseValue,\n      probability: scenario.probability,\n      weightedValue: scenario.weightedValue,\n      fill: `hsl(${(index * 137.5) % 360}, 70%, 50%)`\n    }));\n  }, [scenarioData]);\n\n  // Custom tooltip for different chart types\n  const CustomTooltip = ({ active, payload, label, chartType: _chartType }) => {\n    if (!active || !payload || !payload.length) return null;\n\n    const formatValue = (value, key) => {\n      if (key?.includes('Percent') || key?.includes('Rate')) {\n        return formatPercent(value);\n      }\n      return formatCurrency(value);\n    };\n\n    return (\n      <div className=\"bg-white p-3 border rounded-lg shadow-lg\">\n        <p className=\"font-medium text-gray-800\">{label}</p>\n        {payload.map((entry, index) => (\n          <p key={index} style={{ color: entry.color }} className=\"text-sm\">\n            {`${entry.dataKey}: ${formatValue(entry.value, entry.dataKey)}`}\n          </p>\n        ))}\n      </div>\n    );\n  };\n\n  // DCF Waterfall Chart\n  const DCFWaterfallChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <BarChart data={dcfWaterfallData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis tickFormatter={(value) => formatCurrency(value)} />\n        <Tooltip content={<CustomTooltip chartType=\"waterfall\" />} />\n        <Bar dataKey=\"value\" fill=\"#3B82F6\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n\n  // Cash Flow Trend Chart\n  const CashFlowTrendChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <LineChart data={cashFlowTrendData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"year\" />\n        <YAxis tickFormatter={(value) => formatCurrency(value)} />\n        <Tooltip content={<CustomTooltip chartType=\"trend\" />} />\n        <Legend />\n        <Line\n          type=\"monotone\" dataKey=\"freeCashFlow\" stroke=\"#10B981\"\n          strokeWidth={3} name=\"Free Cash Flow\"\n        />\n        <Line\n          type=\"monotone\" dataKey=\"presentValue\" stroke=\"#3B82F6\"\n          strokeWidth={2} name=\"Present Value\"\n        />\n        <Line\n          type=\"monotone\" dataKey=\"revenue\" stroke=\"#8B5CF6\"\n          strokeWidth={2} name=\"Revenue\"\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n\n  // Sensitivity Tornado Chart\n  const SensitivityTornadoChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <BarChart\n        data={sensitivityTornadoData}\n        layout=\"horizontal\"\n        margin={{ top: 20, right: 30, left: 100, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis type=\"number\" tickFormatter={(value) => `${value.toFixed(1)}%`} />\n        <YAxis type=\"category\" dataKey=\"variable\" />\n        <Tooltip\n          formatter={(value, name) => [`${value.toFixed(1)}%`, name]}\n          labelFormatter={(label) => `Variable: ${label}`}\n        />\n        <Bar dataKey=\"upside\" fill=\"#10B981\" name=\"Upside Impact\" />\n        <Bar dataKey=\"downside\" fill=\"#EF4444\" name=\"Downside Impact\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n\n  // Scenario Distribution Chart\n  const ScenarioDistributionChart = () => (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <PieChart>\n          <Pie\n            data={scenarioDistributionData}\n            cx=\"50%\"\n            cy=\"50%\"\n            outerRadius={80}\n            dataKey=\"probability\"\n            label={({ name, probability }) => `${name}: ${probability}%`}\n          >\n            {scenarioDistributionData.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={entry.fill} />\n            ))}\n          </Pie>\n          <Tooltip formatter={(value) => `${value}%`} />\n        </PieChart>\n      </ResponsiveContainer>\n\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <BarChart data={scenarioDistributionData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis tickFormatter={(value) => formatCurrency(value)} />\n          <Tooltip content={<CustomTooltip chartType=\"scenario\" />} />\n          <Bar dataKey=\"value\" fill=\"#8B5CF6\" name=\"Enterprise Value\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n\n  // Valuation Bridge Chart\n  const ValuationBridgeChart = () => {\n    const bridgeData = [\n      { name: 'PV of Operations', value: dcfData?.cumulativePV || 0, type: 'positive' },\n      { name: 'PV of Terminal', value: dcfData?.presentValueTerminal || 0, type: 'positive' },\n      { name: 'Enterprise Value', value: dcfData?.enterpriseValue || 0, type: 'total' }\n    ];\n\n    return (\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart data={bridgeData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis tickFormatter={(value) => formatCurrency(value)} />\n          <Tooltip content={<CustomTooltip chartType=\"bridge\" />} />\n          <Bar\n            dataKey=\"value\"\n            fill={(entry) => entry.type === 'total' ? '#1F2937' : '#3B82F6'}\n          />\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const renderChart = () => {\n    switch (activeChart) {\n      case 'dcf-waterfall':\n        return <DCFWaterfallChart />;\n      case 'cashflow-trend':\n        return <CashFlowTrendChart />;\n      case 'sensitivity-tornado':\n        return <SensitivityTornadoChart />;\n      case 'scenario-distribution':\n        return <ScenarioDistributionChart />;\n      case 'valuation-bridge':\n        return <ValuationBridgeChart />;\n      default:\n        return <DCFWaterfallChart />;\n    }\n  };\n\n  const getChartDescription = () => {\n    switch (activeChart) {\n      case 'dcf-waterfall':\n        return 'Shows the contribution of each year\\'s cash flows and terminal value to total enterprise value.';\n      case 'cashflow-trend':\n        return 'Displays the trend of free cash flows, present values, and key financial metrics over time.';\n      case 'sensitivity-tornado':\n        return 'Illustrates how changes in key variables impact enterprise value, ranked by sensitivity.';\n      case 'scenario-distribution':\n        return 'Compares different scenarios by probability weights and resulting enterprise values.';\n      case 'valuation-bridge':\n        return 'Breaks down enterprise value into operating value and terminal value components.';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <BarChart3 size={20} />\n            Data Visualization\n          </h3>\n          <p className=\"text-gray-600\">\n            Interactive charts and graphs to visualize valuation results and sensitivity analysis.\n          </p>\n        </div>\n        <button\n          onClick={() => setShowDetails(!showDetails)}\n          className={`px-3 py-2 rounded-lg text-sm transition-colors flex items-center gap-2 ${\n            showDetails ? 'bg-blue-100 text-blue-700' : 'bg-gray-100 text-gray-700'\n          }`}\n        >\n          {showDetails ? <EyeOff size={14} /> : <Eye size={14} />}\n          {showDetails ? 'Hide Details' : 'Show Details'}\n        </button>\n      </div>\n\n      {/* Chart Type Selector */}\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-3\">\n        {chartTypes.map((chart) => {\n          const Icon = chart.icon;\n          return (\n            <motion.button\n              key={chart.id}\n              onClick={() => setActiveChart(chart.id)}\n              className={`p-3 rounded-lg border-2 transition-all text-center ${\n                activeChart === chart.id\n                  ? 'border-blue-500 bg-blue-50 text-blue-700'\n                  : 'border-gray-200 bg-white hover:border-gray-300 text-gray-700'\n              }`}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <Icon size={20} className=\"mx-auto mb-2\" />\n              <div className=\"text-xs font-medium\">{chart.label}</div>\n            </motion.button>\n          );\n        })}\n      </div>\n\n      {/* Chart Container */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h4 className=\"font-semibold text-lg\">\n            {chartTypes.find(c => c.id === activeChart)?.label}\n          </h4>\n          {showDetails && (\n            <span className=\"text-sm text-gray-500\">\n              {getChartDescription()}\n            </span>\n          )}\n        </div>\n\n        <div className=\"min-h-[400px]\">\n          {renderChart()}\n        </div>\n      </div>\n\n      {/* Chart Insights */}\n      {showDetails && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">Key Insights</h4>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {activeChart === 'dcf-waterfall' && (\n              <>\n                <div className=\"p-4 bg-blue-50 rounded-lg\">\n                  <div className=\"text-sm text-blue-600 font-medium\">Operations Contribution</div>\n                  <div className=\"text-lg font-bold text-blue-800\">\n                    {dcfData?.cumulativePV ?\n                      `${((dcfData.cumulativePV / dcfData.enterpriseValue) * 100).toFixed(1)}%` :\n                      'N/A'\n                    }\n                  </div>\n                </div>\n                <div className=\"p-4 bg-purple-50 rounded-lg\">\n                  <div className=\"text-sm text-purple-600 font-medium\">Terminal Contribution</div>\n                  <div className=\"text-lg font-bold text-purple-800\">\n                    {dcfData?.presentValueTerminal ?\n                      `${((dcfData.presentValueTerminal / dcfData.enterpriseValue) * 100).toFixed(1)}%` :\n                      'N/A'\n                    }\n                  </div>\n                </div>\n                <div className=\"p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-sm text-green-600 font-medium\">Avg. Annual FCF</div>\n                  <div className=\"text-lg font-bold text-green-800\">\n                    {dcfData?.freeCashFlows ?\n                      formatCurrency(dcfData.freeCashFlows.reduce((a, b) => a + b, 0) / dcfData.freeCashFlows.length) :\n                      'N/A'\n                    }\n                  </div>\n                </div>\n              </>\n            )}\n\n            {activeChart === 'sensitivity-tornado' && sensitivityTornadoData.length > 0 && (\n              <>\n                <div className=\"p-4 bg-red-50 rounded-lg\">\n                  <div className=\"text-sm text-red-600 font-medium\">Highest Risk Variable</div>\n                  <div className=\"text-lg font-bold text-red-800\">\n                    {sensitivityTornadoData[0]?.variable}\n                  </div>\n                  <div className=\"text-sm text-red-600\">\n                    ±{sensitivityTornadoData[0]?.range.toFixed(1)}% impact\n                  </div>\n                </div>\n                <div className=\"p-4 bg-yellow-50 rounded-lg\">\n                  <div className=\"text-sm text-yellow-600 font-medium\">Medium Risk Variables</div>\n                  <div className=\"text-lg font-bold text-yellow-800\">\n                    {sensitivityTornadoData.slice(1, 3).map(v => v.variable).join(', ')}\n                  </div>\n                </div>\n                <div className=\"p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-sm text-green-600 font-medium\">Lowest Risk Variable</div>\n                  <div className=\"text-lg font-bold text-green-800\">\n                    {sensitivityTornadoData[sensitivityTornadoData.length - 1]?.variable}\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataVisualization;\n","import { motion } from 'framer-motion';\nimport { Calculator, TrendingUp, DollarSign, Percent, Info, BookOpen, Settings } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst WACCCalculator = ({ modelInputs, onModelInputChange, formatPercent }) => {\n  const [showDetails, setShowDetails] = useState(true);\n  const [activeTab, setActiveTab] = useState('inputs');\n\n  // WACC calculation inputs with defaults\n  const waccInputs = modelInputs.dcf.wacc || {\n    // Cost of Equity (CAPM)\n    riskFreeRate: 4.5,\n    marketRiskPremium: 6.0,\n    beta: 1.2,\n    smallCompanyPremium: 3.0,\n    companySpecificRisk: 2.0,\n\n    // Cost of Debt\n    debtInterestRate: 6.5,\n    taxRate: 25,\n\n    // Capital Structure\n    marketValueEquity: 100000,\n    marketValueDebt: 30000,\n\n    // Alternative methods\n    buildUpMethod: {\n      riskFreeRate: 4.5,\n      equityRiskPremium: 6.0,\n      sizeRiskPremium: 3.0,\n      industryRiskPremium: 2.0,\n      companySpecificRisk: 2.0\n    },\n\n    // Industry benchmarks\n    industryWACC: 10.5,\n    industryBeta: 1.1,\n    industryDebtEquityRatio: 0.3\n  };\n\n  // Calculate WACC components\n  const waccCalculation = useMemo(() => {\n    const inputs = { ...waccInputs, ...modelInputs.dcf.wacc };\n\n    // Cost of Equity - CAPM Method\n    const costOfEquityCAPM = inputs.riskFreeRate +\n                            (inputs.beta * inputs.marketRiskPremium) +\n                            inputs.smallCompanyPremium +\n                            inputs.companySpecificRisk;\n\n    // Cost of Equity - Build-up Method\n    const costOfEquityBuildUp = inputs.buildUpMethod.riskFreeRate +\n                               inputs.buildUpMethod.equityRiskPremium +\n                               inputs.buildUpMethod.sizeRiskPremium +\n                               inputs.buildUpMethod.industryRiskPremium +\n                               inputs.buildUpMethod.companySpecificRisk;\n\n    // Cost of Debt (after-tax)\n    const costOfDebtAfterTax = inputs.debtInterestRate * (1 - inputs.taxRate / 100);\n\n    // Capital structure weights\n    const totalCapital = inputs.marketValueEquity + inputs.marketValueDebt;\n    const equityWeight = inputs.marketValueEquity / totalCapital;\n    const debtWeight = inputs.marketValueDebt / totalCapital;\n\n    // WACC calculations\n    const waccCAPM = (costOfEquityCAPM / 100 * equityWeight) +\n                     (costOfDebtAfterTax / 100 * debtWeight);\n\n    const waccBuildUp = (costOfEquityBuildUp / 100 * equityWeight) +\n                        (costOfDebtAfterTax / 100 * debtWeight);\n\n    // Risk-adjusted WACC (average of methods)\n    const finalWACC = (waccCAPM + waccBuildUp) / 2;\n\n    return {\n      costOfEquityCAPM,\n      costOfEquityBuildUp,\n      costOfDebtAfterTax,\n      equityWeight: equityWeight * 100,\n      debtWeight: debtWeight * 100,\n      waccCAPM: waccCAPM * 100,\n      waccBuildUp: waccBuildUp * 100,\n      finalWACC: finalWACC * 100,\n      totalCapital,\n      debtToEquityRatio: inputs.marketValueDebt / inputs.marketValueEquity\n    };\n  }, [waccInputs, modelInputs.dcf.wacc]);\n\n  const updateWACCInput = (field, value) => {\n    const updatedWACC = {\n      ...waccInputs,\n      ...modelInputs.dcf.wacc,\n      [field]: parseFloat(value) || 0\n    };\n    onModelInputChange('dcf', 'wacc', updatedWACC);\n  };\n\n  const _updateBuildUpInput = (field, value) => {\n    const updatedWACC = {\n      ...waccInputs,\n      ...modelInputs.dcf.wacc,\n      buildUpMethod: {\n        ...waccInputs.buildUpMethod,\n        ...modelInputs.dcf.wacc?.buildUpMethod,\n        [field]: parseFloat(value) || 0\n      }\n    };\n    onModelInputChange('dcf', 'wacc', updatedWACC);\n  };\n\n  const applyWACCToDCF = (waccValue) => {\n    onModelInputChange('dcf', 'discountRate', waccValue);\n  };\n\n  const tabs = [\n    { id: 'inputs', label: 'Inputs', icon: Settings },\n    { id: 'calculation', label: 'Calculation', icon: Calculator },\n    { id: 'benchmarks', label: 'Benchmarks', icon: TrendingUp }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Calculator size={20} />\n            WACC Calculator\n          </h3>\n          <p className=\"text-gray-600\">\n            Professional weighted average cost of capital calculation using CAPM and build-up methods.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => applyWACCToDCF(waccCalculation.finalWACC)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\"\n          >\n            Apply to DCF\n          </button>\n          <button\n            onClick={() => setShowDetails(!showDetails)}\n            className={`px-3 py-2 rounded-lg text-sm transition-colors ${\n              showDetails ? 'bg-gray-200 text-gray-700' : 'bg-gray-100 text-gray-600'\n            }`}\n          >\n            {showDetails ? 'Hide Details' : 'Show Details'}\n          </button>\n        </div>\n      </div>\n\n      {/* Key Results */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <motion.div\n          className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Percent size={20} className=\"text-blue-600\" />\n            <span className=\"text-xs text-blue-600 font-medium\">FINAL WACC</span>\n          </div>\n          <div className=\"text-2xl font-bold text-blue-800\">\n            {formatPercent(waccCalculation.finalWACC)}\n          </div>\n          <div className=\"text-sm text-blue-600 mt-1\">\n            Risk-adjusted average\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <TrendingUp size={20} className=\"text-green-600\" />\n            <span className=\"text-xs text-green-600 font-medium\">COST OF EQUITY</span>\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {formatPercent(waccCalculation.costOfEquityCAPM)}\n          </div>\n          <div className=\"text-sm text-green-600 mt-1\">\n            CAPM method\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <DollarSign size={20} className=\"text-purple-600\" />\n            <span className=\"text-xs text-purple-600 font-medium\">COST OF DEBT</span>\n          </div>\n          <div className=\"text-2xl font-bold text-purple-800\">\n            {formatPercent(waccCalculation.costOfDebtAfterTax)}\n          </div>\n          <div className=\"text-sm text-purple-600 mt-1\">\n            After-tax\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Info size={20} className=\"text-orange-600\" />\n            <span className=\"text-xs text-orange-600 font-medium\">DEBT/EQUITY</span>\n          </div>\n          <div className=\"text-2xl font-bold text-orange-800\">\n            {waccCalculation.debtToEquityRatio.toFixed(2)}x\n          </div>\n          <div className=\"text-sm text-orange-600 mt-1\">\n            Capital structure\n          </div>\n        </motion.div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg\">\n        {tabs.map((tab) => {\n          const Icon = tab.icon;\n          return (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`flex-1 flex items-center justify-center gap-2 py-2 px-4 rounded-md transition-all ${\n                activeTab === tab.id\n                  ? 'bg-white text-blue-600 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <Icon size={16} />\n              {tab.label}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        {activeTab === 'inputs' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">WACC Input Parameters</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* Cost of Equity - CAPM */}\n              <div>\n                <h5 className=\"font-medium mb-4 text-blue-800\">Cost of Equity (CAPM Method)</h5>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label htmlFor=\"riskFreeRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Risk-Free Rate (%)\n                    </label>\n                    <input\n                      id=\"riskFreeRate\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.riskFreeRate || waccInputs.riskFreeRate}\n                      onChange={(e) => updateWACCInput('riskFreeRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">10-year Treasury rate</span>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"marketRiskPremium\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Risk Premium (%)\n                    </label>\n                    <input\n                      id=\"marketRiskPremium\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.marketRiskPremium || waccInputs.marketRiskPremium}\n                      onChange={(e) => updateWACCInput('marketRiskPremium', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Expected market return - risk-free rate</span>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"beta\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Beta (β)\n                    </label>\n                    <input\n                      id=\"beta\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.beta || waccInputs.beta}\n                      onChange={(e) => updateWACCInput('beta', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Systematic risk relative to market</span>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"smallCompanyPremium\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Small Company Premium (%)\n                    </label>\n                    <input\n                      id=\"smallCompanyPremium\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.smallCompanyPremium || waccInputs.smallCompanyPremium}\n                      onChange={(e) => updateWACCInput('smallCompanyPremium', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Size-related risk premium</span>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"companySpecificRisk\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Company-Specific Risk (%)\n                    </label>\n                    <input\n                      id=\"companySpecificRisk\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.companySpecificRisk || waccInputs.companySpecificRisk}\n                      onChange={(e) => updateWACCInput('companySpecificRisk', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Unsystematic risk premium</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Capital Structure & Debt */}\n              <div>\n                <h5 className=\"font-medium mb-4 text-purple-800\">Capital Structure & Cost of Debt</h5>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label htmlFor=\"marketValueEquity\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Value of Equity ($000s)\n                    </label>\n                    <input\n                      id=\"marketValueEquity\"\n                      type=\"number\"\n                      value={modelInputs.dcf.wacc?.marketValueEquity || waccInputs.marketValueEquity}\n                      onChange={(e) => updateWACCInput('marketValueEquity', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"marketValueDebt\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Market Value of Debt ($000s)\n                    </label>\n                    <input\n                      id=\"marketValueDebt\"\n                      type=\"number\"\n                      value={modelInputs.dcf.wacc?.marketValueDebt || waccInputs.marketValueDebt}\n                      onChange={(e) => updateWACCInput('marketValueDebt', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"debtInterestRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Pre-Tax Cost of Debt (%)\n                    </label>\n                    <input\n                      id=\"debtInterestRate\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.debtInterestRate || waccInputs.debtInterestRate}\n                      onChange={(e) => updateWACCInput('debtInterestRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Interest rate on debt</span>\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"taxRate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                      Tax Rate (%)\n                    </label>\n                    <input\n                      id=\"taxRate\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={modelInputs.dcf.wacc?.taxRate || modelInputs.dcf.taxRate}\n                      onChange={(e) => updateWACCInput('taxRate', e.target.value)}\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                    <span className=\"text-xs text-gray-500\">Corporate tax rate</span>\n                  </div>\n\n                  {/* Capital Structure Summary */}\n                  <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n                    <h6 className=\"font-medium mb-2\">Capital Structure</h6>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Equity Weight:</span>\n                        <span className=\"font-medium\">{formatPercent(waccCalculation.equityWeight)}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Debt Weight:</span>\n                        <span className=\"font-medium\">{formatPercent(waccCalculation.debtWeight)}</span>\n                      </div>\n                      <div className=\"flex justify-between border-t pt-2\">\n                        <span>Total Capital:</span>\n                        <span className=\"font-medium\">${(waccCalculation.totalCapital / 1000).toFixed(0)}M</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'calculation' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">WACC Calculation Breakdown</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {/* CAPM Method */}\n              <div className=\"p-6 bg-blue-50 rounded-lg border border-blue-200\">\n                <h5 className=\"font-medium mb-4 text-blue-800\">CAPM Method</h5>\n                <div className=\"space-y-3 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Risk-Free Rate:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.riskFreeRate || waccInputs.riskFreeRate)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta × Market Risk Premium:</span>\n                    <span className=\"font-medium\">\n                      {formatPercent((modelInputs.dcf.wacc?.beta || waccInputs.beta) * (modelInputs.dcf.wacc?.marketRiskPremium || waccInputs.marketRiskPremium))}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Small Company Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.smallCompanyPremium || waccInputs.smallCompanyPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Company-Specific Risk:</span>\n                    <span className=\"font-medium\">{formatPercent(modelInputs.dcf.wacc?.companySpecificRisk || waccInputs.companySpecificRisk)}</span>\n                  </div>\n                  <div className=\"flex justify-between border-t pt-2 font-semibold\">\n                    <span>Cost of Equity (CAPM):</span>\n                    <span>{formatPercent(waccCalculation.costOfEquityCAPM)}</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Build-up Method */}\n              <div className=\"p-6 bg-green-50 rounded-lg border border-green-200\">\n                <h5 className=\"font-medium mb-4 text-green-800\">Build-up Method</h5>\n                <div className=\"space-y-3 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Risk-Free Rate:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.riskFreeRate)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Equity Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.equityRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Size Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.sizeRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Industry Risk Premium:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.industryRiskPremium)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Company-Specific Risk:</span>\n                    <span className=\"font-medium\">{formatPercent(waccInputs.buildUpMethod.companySpecificRisk)}</span>\n                  </div>\n                  <div className=\"flex justify-between border-t pt-2 font-semibold\">\n                    <span>Cost of Equity (Build-up):</span>\n                    <span>{formatPercent(waccCalculation.costOfEquityBuildUp)}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Final WACC Calculation */}\n            <div className=\"p-6 bg-gray-50 rounded-lg border\">\n              <h5 className=\"font-medium mb-4\">Final WACC Calculation</h5>\n              <div className=\"space-y-4 text-sm\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <div className=\"flex justify-between mb-2\">\n                      <span>WACC (CAPM Method):</span>\n                      <span className=\"font-medium\">{formatPercent(waccCalculation.waccCAPM)}</span>\n                    </div>\n                    <div className=\"text-xs text-gray-600\">\n                      [{formatPercent(waccCalculation.costOfEquityCAPM)} × {formatPercent(waccCalculation.equityWeight)}] +\n                      [{formatPercent(waccCalculation.costOfDebtAfterTax)} × {formatPercent(waccCalculation.debtWeight)}]\n                    </div>\n                  </div>\n                  <div>\n                    <div className=\"flex justify-between mb-2\">\n                      <span>WACC (Build-up Method):</span>\n                      <span className=\"font-medium\">{formatPercent(waccCalculation.waccBuildUp)}</span>\n                    </div>\n                    <div className=\"text-xs text-gray-600\">\n                      [{formatPercent(waccCalculation.costOfEquityBuildUp)} × {formatPercent(waccCalculation.equityWeight)}] +\n                      [{formatPercent(waccCalculation.costOfDebtAfterTax)} × {formatPercent(waccCalculation.debtWeight)}]\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"border-t pt-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-lg font-semibold\">Risk-Adjusted WACC:</span>\n                    <span className=\"text-2xl font-bold text-blue-600\">{formatPercent(waccCalculation.finalWACC)}</span>\n                  </div>\n                  <div className=\"text-xs text-gray-600 mt-1\">\n                    Average of CAPM and Build-up methods\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'benchmarks' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">Industry Benchmarks & Validation</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n              <div className=\"p-4 bg-blue-50 rounded-lg\">\n                <h6 className=\"font-medium text-blue-800 mb-2\">Your Company</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC:</span>\n                    <span className=\"font-semibold\">{formatPercent(waccCalculation.finalWACC)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta:</span>\n                    <span className=\"font-semibold\">{(modelInputs.dcf.wacc?.beta || waccInputs.beta).toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>D/E Ratio:</span>\n                    <span className=\"font-semibold\">{waccCalculation.debtToEquityRatio.toFixed(2)}x</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"p-4 bg-green-50 rounded-lg\">\n                <h6 className=\"font-medium text-green-800 mb-2\">Industry Average</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC:</span>\n                    <span className=\"font-semibold\">{formatPercent(waccInputs.industryWACC)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta:</span>\n                    <span className=\"font-semibold\">{waccInputs.industryBeta.toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>D/E Ratio:</span>\n                    <span className=\"font-semibold\">{waccInputs.industryDebtEquityRatio.toFixed(2)}x</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"p-4 bg-yellow-50 rounded-lg\">\n                <h6 className=\"font-medium text-yellow-800 mb-2\">Variance</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>WACC Diff:</span>\n                    <span\n                      className={`font-semibold ${\n                        waccCalculation.finalWACC > waccInputs.industryWACC ? 'text-red-600' : 'text-green-600'\n                      }`}\n                    >\n                      {waccCalculation.finalWACC > waccInputs.industryWACC ? '+' : ''}\n                      {formatPercent(waccCalculation.finalWACC - waccInputs.industryWACC)}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Beta Diff:</span>\n                    <span\n                      className={`font-semibold ${\n                        (modelInputs.dcf.wacc?.beta || waccInputs.beta) > waccInputs.industryBeta ? 'text-red-600' : 'text-green-600'\n                      }`}\n                    >\n                      {(modelInputs.dcf.wacc?.beta || waccInputs.beta) > waccInputs.industryBeta ? '+' : ''}\n                      {((modelInputs.dcf.wacc?.beta || waccInputs.beta) - waccInputs.industryBeta).toFixed(2)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Validation Notes */}\n            <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n              <div className=\"flex items-start gap-2\">\n                <BookOpen size={16} className=\"text-blue-600 mt-0.5\" />\n                <div>\n                  <h6 className=\"font-medium text-blue-800 mb-2\">Validation Guidelines</h6>\n                  <ul className=\"text-sm text-blue-700 space-y-1\">\n                    <li>• WACC should be within ±2% of industry average for similar companies</li>\n                    <li>• Beta should reflect business risk relative to market (typically 0.8-1.5 for most companies)</li>\n                    <li>• Cost of equity should exceed risk-free rate by at least 4-6% for private companies</li>\n                    <li>• Debt/equity ratio should align with industry norms and company strategy</li>\n                    <li>• Consider economic conditions and company-specific factors</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WACCCalculator;\n","import { motion } from 'framer-motion';\nimport { Calculator, TrendingUp, DollarSign, BarChart3, Info, Settings } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nimport DataVisualization from './DataVisualization';\nimport WACCCalculator from './WACCCalculator';\n\nconst AdvancedDCF = ({ data, modelInputs, onModelInputChange, formatCurrency, formatPercent }) => {\n  const [_showDetails, _setShowDetails] = useState(false);\n  const [_showAssumptions, _setShowAssumptions] = useState(true);\n  const [activeTab, setActiveTab] = useState('results');\n\n  // Enhanced DCF calculation with working capital\n  const advancedDCFResults = useMemo(() => {\n    const { discountRate, terminalGrowthRate, projectionYears, taxRate } = modelInputs.dcf;\n    const statements = data.statements;\n\n    // Working capital assumptions (if not provided, use defaults)\n    const workingCapitalAssumptions = modelInputs.dcf.workingCapital || {\n      receivablesDays: 45,\n      inventoryDays: 60,\n      payablesDays: 30,\n      receivablesGrowth: 2, // % of revenue\n      inventoryGrowth: 1.5, // % of revenue\n      payablesGrowth: 1.8 // % of revenue\n    };\n\n    // Capex assumptions\n    const capexAssumptions = modelInputs.dcf.capex || {\n      capexAsPercentOfRevenue: 3.5,\n      depreciationRate: 7, // years\n      maintenanceCapex: 2.0 // % of revenue\n    };\n\n    const results = {\n      years: [],\n      freeCashFlows: [],\n      presentValues: [],\n      workingCapitalChanges: [],\n      capexAmounts: [],\n      unleveredFreeCashFlow: [],\n      cumulativePV: 0,\n      terminalValue: 0,\n      presentValueTerminal: 0,\n      enterpriseValue: 0,\n      equityValue: 0,\n      impliedShare: 0\n    };\n\n    // Base year revenue for calculations\n    const baseRevenue = statements.incomeStatement.totalRevenue?.[0] || 100000;\n\n    for (let year = 1; year <= projectionYears; year++) {\n      const yearData = {\n        year,\n        revenue: statements.incomeStatement.totalRevenue?.[year] || 0,\n        operatingIncome: statements.incomeStatement.operatingIncome?.[year] || 0,\n        nopat: 0, // Net Operating Profit After Tax\n        workingCapitalChange: 0,\n        capex: 0,\n        depreciation: 0,\n        freeCashFlow: 0,\n        presentValue: 0\n      };\n\n      // NOPAT calculation\n      yearData.nopat = yearData.operatingIncome * (1 - taxRate / 100);\n\n      // Working capital calculation\n      const currentRevenue = yearData.revenue;\n      const previousRevenue = year > 1 ? (statements.incomeStatement.totalRevenue?.[year - 1] || 0) : baseRevenue;\n\n      // Calculate working capital components\n      const currentReceivables = (currentRevenue * workingCapitalAssumptions.receivablesDays) / 365;\n      const currentInventory = (currentRevenue * workingCapitalAssumptions.inventoryDays) / 365;\n      const currentPayables = (currentRevenue * workingCapitalAssumptions.payablesDays) / 365;\n\n      const previousReceivables = (previousRevenue * workingCapitalAssumptions.receivablesDays) / 365;\n      const previousInventory = (previousRevenue * workingCapitalAssumptions.inventoryDays) / 365;\n      const previousPayables = (previousRevenue * workingCapitalAssumptions.payablesDays) / 365;\n\n      const receivablesChange = currentReceivables - previousReceivables;\n      const inventoryChange = currentInventory - previousInventory;\n      const payablesChange = currentPayables - previousPayables;\n\n      // Working capital change (increase is negative for cash flow)\n      yearData.workingCapitalChange = -(receivablesChange + inventoryChange - payablesChange);\n\n      // Capex calculation\n      yearData.capex = -(currentRevenue * capexAssumptions.capexAsPercentOfRevenue / 100);\n\n      // Depreciation (simplified - based on capex and depreciation rate)\n      yearData.depreciation = Math.abs(yearData.capex) / capexAssumptions.depreciationRate;\n\n      // Free Cash Flow = NOPAT + Depreciation - Capex - Change in Working Capital\n      yearData.freeCashFlow = yearData.nopat + yearData.depreciation + yearData.capex + yearData.workingCapitalChange;\n\n      // Present Value\n      const discountFactor = Math.pow(1 + discountRate / 100, year);\n      yearData.presentValue = yearData.freeCashFlow / discountFactor;\n\n      results.years.push(yearData);\n      results.freeCashFlows.push(yearData.freeCashFlow);\n      results.presentValues.push(yearData.presentValue);\n      results.workingCapitalChanges.push(yearData.workingCapitalChange);\n      results.capexAmounts.push(yearData.capex);\n      results.unleveredFreeCashFlow.push(yearData.freeCashFlow);\n      results.cumulativePV += yearData.presentValue;\n    }\n\n    // Terminal Value calculation\n    const finalYearFCF = results.years[results.years.length - 1]?.freeCashFlow || 0;\n    const terminalFCF = finalYearFCF * (1 + terminalGrowthRate / 100);\n    results.terminalValue = terminalFCF / ((discountRate - terminalGrowthRate) / 100);\n\n    const terminalDiscountFactor = Math.pow(1 + discountRate / 100, projectionYears);\n    results.presentValueTerminal = results.terminalValue / terminalDiscountFactor;\n\n    // Enterprise Value\n    results.enterpriseValue = results.cumulativePV + results.presentValueTerminal;\n\n    // Simplified equity value (would subtract net debt in reality)\n    const netDebt = 0; // Could be calculated from balance sheet\n    results.equityValue = results.enterpriseValue - netDebt;\n\n    // Implied share price (assuming shares outstanding)\n    const sharesOutstanding = modelInputs.dcf.sharesOutstanding || 1000; // thousands\n    results.impliedShare = results.equityValue / sharesOutstanding;\n\n    return results;\n  }, [data, modelInputs]);\n\n  const updateDCFAssumption = (category, field, value) => {\n    const updatedDCF = {\n      ...modelInputs.dcf,\n      [category]: {\n        ...modelInputs.dcf[category],\n        [field]: parseFloat(value) || 0\n      }\n    };\n    onModelInputChange('dcf', category, updatedDCF[category]);\n  };\n\n  const updateBasicAssumption = (field, value) => {\n    onModelInputChange('dcf', field, parseFloat(value) || 0);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Calculator size={20} />\n            Advanced DCF Valuation\n          </h3>\n          <p className=\"text-gray-600\">\n            Professional-grade DCF with working capital analysis, capex modeling, and detailed cash flow projections.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          {['results', 'charts', 'wacc', 'assumptions'].map((tab) => (\n            <button\n              key={tab}\n              onClick={() => setActiveTab(tab)}\n              className={`px-3 py-2 rounded-lg text-sm transition-colors flex items-center gap-1 ${\n                activeTab === tab ? 'bg-blue-100 text-blue-700' : 'bg-gray-100 text-gray-700'\n              }`}\n            >\n              {tab === 'results' && <DollarSign size={14} />}\n              {tab === 'charts' && <BarChart3 size={14} />}\n              {tab === 'wacc' && <Calculator size={14} />}\n              {tab === 'assumptions' && <Settings size={14} />}\n              {tab.charAt(0).toUpperCase() + tab.slice(1)}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Tab Content */}\n      {activeTab === 'results' && (\n        <>\n          {/* Key Results */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <motion.div\n              className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <DollarSign size={20} className=\"text-green-600\" />\n                <span className=\"text-xs text-green-600 font-medium\">ENTERPRISE VALUE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-green-800\">\n                {formatCurrency(advancedDCFResults.enterpriseValue)}\n              </div>\n              <div className=\"text-sm text-green-600 mt-1\">\n                PV Operations: {formatCurrency(advancedDCFResults.cumulativePV)}\n              </div>\n            </motion.div>\n\n            <motion.div\n              className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <TrendingUp size={20} className=\"text-blue-600\" />\n                <span className=\"text-xs text-blue-600 font-medium\">EQUITY VALUE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-blue-800\">\n                {formatCurrency(advancedDCFResults.equityValue)}\n              </div>\n              <div className=\"text-sm text-blue-600 mt-1\">\n                Per Share: {formatCurrency(advancedDCFResults.impliedShare)}\n              </div>\n            </motion.div>\n\n            <motion.div\n              className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <BarChart3 size={20} className=\"text-purple-600\" />\n                <span className=\"text-xs text-purple-600 font-medium\">TERMINAL VALUE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-purple-800\">\n                {formatCurrency(advancedDCFResults.terminalValue)}\n              </div>\n              <div className=\"text-sm text-purple-600 mt-1\">\n                PV: {formatCurrency(advancedDCFResults.presentValueTerminal)}\n              </div>\n            </motion.div>\n\n            <motion.div\n              className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n              whileHover={{ y: -2 }}\n            >\n              <div className=\"flex items-center justify-between mb-2\">\n                <Info size={20} className=\"text-orange-600\" />\n                <span className=\"text-xs text-orange-600 font-medium\">IMPLIED MULTIPLE</span>\n              </div>\n              <div className=\"text-2xl font-bold text-orange-800\">\n                {(advancedDCFResults.enterpriseValue / (data.statements.incomeStatement.totalRevenue?.[1] || 1)).toFixed(1)}x\n              </div>\n              <div className=\"text-sm text-orange-600 mt-1\">\n                EV/Revenue (Year 1)\n              </div>\n            </motion.div>\n          </div>\n\n          {/* Detailed Cash Flow Analysis */}\n          <div className=\"bg-white rounded-lg border p-6\">\n            <h4 className=\"font-semibold text-lg mb-4\">Detailed Cash Flow Analysis</h4>\n\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full text-sm\">\n                <thead>\n                  <tr className=\"border-b bg-gray-50\">\n                    <th className=\"text-left p-3 font-medium\">Year</th>\n                    <th className=\"text-right p-3 font-medium\">Revenue</th>\n                    <th className=\"text-right p-3 font-medium\">Operating Income</th>\n                    <th className=\"text-right p-3 font-medium\">NOPAT</th>\n                    <th className=\"text-right p-3 font-medium\">Depreciation</th>\n                    <th className=\"text-right p-3 font-medium\">Capex</th>\n                    <th className=\"text-right p-3 font-medium\">ΔWorking Capital</th>\n                    <th className=\"text-right p-3 font-medium\">Free Cash Flow</th>\n                    <th className=\"text-right p-3 font-medium\">Present Value</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {advancedDCFResults.years.map((yearData, index) => (\n                    <tr key={index} className=\"border-b hover:bg-gray-50\">\n                      <td className=\"p-3 font-medium\">{yearData.year}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(yearData.revenue)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(yearData.operatingIncome)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(yearData.nopat)}</td>\n                      <td className=\"p-3 text-right text-green-600\">+{formatCurrency(yearData.depreciation)}</td>\n                      <td className=\"p-3 text-right text-red-600\">{formatCurrency(yearData.capex)}</td>\n                      <td className={`p-3 text-right ${yearData.workingCapitalChange >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {yearData.workingCapitalChange >= 0 ? '+' : ''}{formatCurrency(yearData.workingCapitalChange)}\n                      </td>\n                      <td className=\"p-3 text-right font-medium\">{formatCurrency(yearData.freeCashFlow)}</td>\n                      <td className=\"p-3 text-right font-medium\">{formatCurrency(yearData.presentValue)}</td>\n                    </tr>\n                  ))}\n\n                  {/* Terminal Value Row */}\n                  <tr className=\"border-b-2 border-gray-300 bg-blue-50\">\n                    <td className=\"p-3 font-bold\">Terminal</td>\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3 text-right font-bold\">{formatCurrency(advancedDCFResults.terminalValue)}</td>\n                    <td className=\"p-3 text-right font-bold\">{formatCurrency(advancedDCFResults.presentValueTerminal)}</td>\n                  </tr>\n\n                  {/* Total Row */}\n                  <tr className=\"bg-gray-100 font-bold\">\n                    <td className=\"p-3\">TOTAL</td>\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3 text-right text-lg\">{formatCurrency(advancedDCFResults.enterpriseValue)}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </>\n      )}\n\n      {/* Charts Tab */}\n      {activeTab === 'charts' && (\n        <DataVisualization\n          dcfData={advancedDCFResults}\n          sensitivityData={null}\n          scenarioData={null}\n          formatCurrency={formatCurrency}\n          formatPercent={formatPercent}\n        />\n      )}\n\n      {/* WACC Calculator Tab */}\n      {activeTab === 'wacc' && (\n        <WACCCalculator\n          modelInputs={modelInputs}\n          onModelInputChange={onModelInputChange}\n          formatPercent={formatPercent}\n        />\n      )}\n\n      {/* Assumptions Tab */}\n      {activeTab === 'assumptions' && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">Model Assumptions</h4>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n            {/* Basic DCF Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Core Assumptions</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label htmlFor=\"dcf-discount-rate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Discount Rate (WACC) %\n                  </label>\n                  <input\n                    id=\"dcf-discount-rate\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.discountRate}\n                    onChange={(e) => updateBasicAssumption('discountRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"dcf-terminal-growth\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Terminal Growth Rate %\n                  </label>\n                  <input\n                    id=\"dcf-terminal-growth\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.terminalGrowthRate}\n                    onChange={(e) => updateBasicAssumption('terminalGrowthRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"dcf-tax-rate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Tax Rate %\n                  </label>\n                  <input\n                    id=\"dcf-tax-rate\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.taxRate}\n                    onChange={(e) => updateBasicAssumption('taxRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Working Capital Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Working Capital</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label htmlFor=\"dcf-receivables-days\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Receivables (Days)\n                  </label>\n                  <input\n                    id=\"dcf-receivables-days\"\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.receivablesDays || 45}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'receivablesDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"dcf-inventory-days\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Inventory (Days)\n                  </label>\n                  <input\n                    id=\"dcf-inventory-days\"\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.inventoryDays || 60}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'inventoryDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"dcf-payables-days\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Payables (Days)\n                  </label>\n                  <input\n                    id=\"dcf-payables-days\"\n                    type=\"number\"\n                    value={modelInputs.dcf.workingCapital?.payablesDays || 30}\n                    onChange={(e) => updateDCFAssumption('workingCapital', 'payablesDays', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Capex Assumptions */}\n            <div>\n              <h5 className=\"font-medium mb-3 text-gray-800\">Capital Expenditure</h5>\n              <div className=\"space-y-3\">\n                <div>\n                  <label htmlFor=\"dcf-capex-percent\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Capex (% of Revenue)\n                  </label>\n                  <input\n                    id=\"dcf-capex-percent\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={modelInputs.dcf.capex?.capexAsPercentOfRevenue || 3.5}\n                    onChange={(e) => updateDCFAssumption('capex', 'capexAsPercentOfRevenue', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"dcf-depreciation-period\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Depreciation Period (Years)\n                  </label>\n                  <input\n                    id=\"dcf-depreciation-period\"\n                    type=\"number\"\n                    value={modelInputs.dcf.capex?.depreciationRate || 7}\n                    onChange={(e) => updateDCFAssumption('capex', 'depreciationRate', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"dcf-shares-outstanding\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Shares Outstanding (000s)\n                  </label>\n                  <input\n                    id=\"dcf-shares-outstanding\"\n                    type=\"number\"\n                    value={modelInputs.dcf.sharesOutstanding || 1000}\n                    onChange={(e) => updateBasicAssumption('sharesOutstanding', e.target.value)}\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdvancedDCF;\n","import { motion } from 'framer-motion';\nimport { Users, TrendingUp, BarChart3, Plus, Search, DollarSign, Target, Filter } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst ComparableAnalysis = ({ data, formatCurrency, formatPercent: _formatPercent }) => {\n  const [activeTab, setActiveTab] = useState('multiples');\n  const [selectedMultiple, setSelectedMultiple] = useState('ev_revenue');\n  const [showAddComp, setShowAddComp] = useState(false);\n\n  // Sample comparable companies data (in practice, this would come from external API)\n  const [comparableCompanies, setComparableCompanies] = useState([\n    {\n      id: 1,\n      name: 'MedSpa Corp',\n      ticker: 'MSPA',\n      marketCap: 450000, // $450M\n      enterpriseValue: 520000, // $520M\n      revenue: 180000, // $180M\n      ebitda: 45000, // $45M\n      netIncome: 28000, // $28M\n      employees: 1200,\n      founded: 2015,\n      geography: 'US',\n      businessModel: 'B2C Medical Spa Chain'\n    },\n    {\n      id: 2,\n      name: 'Wellness Holdings',\n      ticker: 'WELL',\n      marketCap: 680000,\n      enterpriseValue: 750000,\n      revenue: 220000,\n      ebitda: 55000,\n      netIncome: 35000,\n      employees: 1800,\n      founded: 2012,\n      geography: 'US',\n      businessModel: 'Integrated Wellness Platform'\n    },\n    {\n      id: 3,\n      name: 'Aesthetic Solutions Inc',\n      ticker: 'AEST',\n      marketCap: 320000,\n      enterpriseValue: 380000,\n      revenue: 125000,\n      ebitda: 32000,\n      netIncome: 18000,\n      employees: 850,\n      founded: 2018,\n      geography: 'US',\n      businessModel: 'Medical Device & Services'\n    },\n    {\n      id: 4,\n      name: 'Premium Health Group',\n      ticker: 'PHG',\n      marketCap: 920000,\n      enterpriseValue: 1050000,\n      revenue: 310000,\n      ebitda: 78000,\n      netIncome: 48000,\n      employees: 2500,\n      founded: 2010,\n      geography: 'US',\n      businessModel: 'Premium Healthcare Services'\n    }\n  ]);\n\n  // Calculate multiples for comparable companies\n  const comparableMultiples = useMemo(() => {\n    return comparableCompanies.map(comp => ({\n      ...comp,\n      multiples: {\n        ev_revenue: comp.enterpriseValue / comp.revenue,\n        ev_ebitda: comp.enterpriseValue / comp.ebitda,\n        pe_ratio: comp.marketCap / comp.netIncome,\n        revenue_per_employee: comp.revenue / comp.employees,\n        market_cap_revenue: comp.marketCap / comp.revenue\n      }\n    }));\n  }, [comparableCompanies]);\n\n  // Calculate market statistics\n  const marketStats = useMemo(() => {\n    const multiples = comparableMultiples.map(c => c.multiples);\n\n    const calculateStats = (values) => ({\n      mean: values.reduce((a, b) => a + b, 0) / values.length,\n      median: values.sort((a, b) => a - b)[Math.floor(values.length / 2)],\n      min: Math.min(...values),\n      max: Math.max(...values),\n      p25: values.sort((a, b) => a - b)[Math.floor(values.length * 0.25)],\n      p75: values.sort((a, b) => a - b)[Math.floor(values.length * 0.75)]\n    });\n\n    return {\n      ev_revenue: calculateStats(multiples.map(m => m.ev_revenue)),\n      ev_ebitda: calculateStats(multiples.map(m => m.ev_ebitda)),\n      pe_ratio: calculateStats(multiples.map(m => m.pe_ratio)),\n      revenue_per_employee: calculateStats(multiples.map(m => m.revenue_per_employee)),\n      market_cap_revenue: calculateStats(multiples.map(m => m.market_cap_revenue))\n    };\n  }, [comparableMultiples]);\n\n  // Calculate implied valuation for target company\n  const impliedValuation = useMemo(() => {\n    const targetRevenue = data.statements.incomeStatement.totalRevenue?.[1] || 100000; // Year 1 revenue\n    const targetEBITDA = (data.statements.incomeStatement.operatingIncome?.[1] || 50000) * 1.15; // Approx EBITDA\n    const targetNetIncome = (data.statements.incomeStatement.operatingIncome?.[1] || 50000) * 0.7; // Approx net income\n\n    return {\n      ev_revenue: {\n        mean: targetRevenue * marketStats.ev_revenue.mean,\n        median: targetRevenue * marketStats.ev_revenue.median,\n        p25: targetRevenue * marketStats.ev_revenue.p25,\n        p75: targetRevenue * marketStats.ev_revenue.p75\n      },\n      ev_ebitda: {\n        mean: targetEBITDA * marketStats.ev_ebitda.mean,\n        median: targetEBITDA * marketStats.ev_ebitda.median,\n        p25: targetEBITDA * marketStats.ev_ebitda.p25,\n        p75: targetEBITDA * marketStats.ev_ebitda.p75\n      },\n      pe_ratio: {\n        mean: targetNetIncome * marketStats.pe_ratio.mean,\n        median: targetNetIncome * marketStats.pe_ratio.median,\n        p25: targetNetIncome * marketStats.pe_ratio.p25,\n        p75: targetNetIncome * marketStats.pe_ratio.p75\n      }\n    };\n  }, [data, marketStats]);\n\n  const multipleDefinitions = {\n    ev_revenue: { name: 'EV/Revenue', description: 'Enterprise Value / Annual Revenue' },\n    ev_ebitda: { name: 'EV/EBITDA', description: 'Enterprise Value / EBITDA' },\n    pe_ratio: { name: 'P/E Ratio', description: 'Market Cap / Net Income' },\n    revenue_per_employee: { name: 'Revenue/Employee', description: 'Revenue per Employee' },\n    market_cap_revenue: { name: 'Market Cap/Revenue', description: 'Market Cap / Revenue' }\n  };\n\n  const addComparableCompany = (companyData) => {\n    const newCompany = {\n      id: Date.now(),\n      ...companyData,\n      marketCap: parseFloat(companyData.marketCap) || 0,\n      enterpriseValue: parseFloat(companyData.enterpriseValue) || 0,\n      revenue: parseFloat(companyData.revenue) || 0,\n      ebitda: parseFloat(companyData.ebitda) || 0,\n      netIncome: parseFloat(companyData.netIncome) || 0,\n      employees: parseInt(companyData.employees) || 0,\n      founded: parseInt(companyData.founded) || new Date().getFullYear()\n    };\n    setComparableCompanies([...comparableCompanies, newCompany]);\n    setShowAddComp(false);\n  };\n\n  const removeComparable = (id) => {\n    setComparableCompanies(comparableCompanies.filter(comp => comp.id !== id));\n  };\n\n  const tabs = [\n    { id: 'multiples', label: 'Trading Multiples', icon: BarChart3 },\n    { id: 'analysis', label: 'Valuation Analysis', icon: Target },\n    { id: 'companies', label: 'Comparable Set', icon: Users }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-xl font-semibold mb-2 flex items-center gap-2\">\n            <Users size={20} />\n            Comparable Company Analysis\n          </h3>\n          <p className=\"text-gray-600\">\n            Market-based valuation using trading multiples from similar public companies.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => setShowAddComp(true)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2 text-sm\"\n          >\n            <Plus size={16} />\n            Add Comparable\n          </button>\n        </div>\n      </div>\n\n      {/* Key Results Summary */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <motion.div\n          className=\"bg-gradient-to-r from-blue-50 to-blue-100 rounded-lg p-4 border border-blue-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <BarChart3 size={20} className=\"text-blue-600\" />\n            <span className=\"text-xs text-blue-600 font-medium\">EV/REVENUE</span>\n          </div>\n          <div className=\"text-2xl font-bold text-blue-800\">\n            {marketStats.ev_revenue.median.toFixed(1)}x\n          </div>\n          <div className=\"text-sm text-blue-600 mt-1\">\n            Median multiple\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-green-50 to-green-100 rounded-lg p-4 border border-green-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <TrendingUp size={20} className=\"text-green-600\" />\n            <span className=\"text-xs text-green-600 font-medium\">IMPLIED VALUE</span>\n          </div>\n          <div className=\"text-2xl font-bold text-green-800\">\n            {formatCurrency(impliedValuation.ev_revenue.median)}\n          </div>\n          <div className=\"text-sm text-green-600 mt-1\">\n            EV/Revenue basis\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-purple-50 to-purple-100 rounded-lg p-4 border border-purple-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <DollarSign size={20} className=\"text-purple-600\" />\n            <span className=\"text-xs text-purple-600 font-medium\">VALUATION RANGE</span>\n          </div>\n          <div className=\"text-lg font-bold text-purple-800\">\n            {formatCurrency(impliedValuation.ev_revenue.p25)} - {formatCurrency(impliedValuation.ev_revenue.p75)}\n          </div>\n          <div className=\"text-sm text-purple-600 mt-1\">\n            25th - 75th percentile\n          </div>\n        </motion.div>\n\n        <motion.div\n          className=\"bg-gradient-to-r from-orange-50 to-orange-100 rounded-lg p-4 border border-orange-200\"\n          whileHover={{ y: -2 }}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <Users size={20} className=\"text-orange-600\" />\n            <span className=\"text-xs text-orange-600 font-medium\">PEER COUNT</span>\n          </div>\n          <div className=\"text-2xl font-bold text-orange-800\">\n            {comparableCompanies.length}\n          </div>\n          <div className=\"text-sm text-orange-600 mt-1\">\n            Comparable companies\n          </div>\n        </motion.div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg\">\n        {tabs.map((tab) => {\n          const Icon = tab.icon;\n          return (\n            <button\n              key={tab.id}\n              onClick={() => setActiveTab(tab.id)}\n              className={`flex-1 flex items-center justify-center gap-2 py-2 px-4 rounded-md transition-all ${\n                activeTab === tab.id\n                  ? 'bg-white text-blue-600 shadow-sm'\n                  : 'text-gray-600 hover:text-gray-800'\n              }`}\n            >\n              <Icon size={16} />\n              {tab.label}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Tab Content */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        {activeTab === 'multiples' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h4 className=\"font-semibold text-lg\">Trading Multiples Analysis</h4>\n              <select\n                value={selectedMultiple}\n                onChange={(e) => setSelectedMultiple(e.target.value)}\n                className=\"px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                {Object.entries(multipleDefinitions).map(([key, def]) => (\n                  <option key={key} value={key}>{def.name}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full text-sm\">\n                <thead>\n                  <tr className=\"border-b bg-gray-50\">\n                    <th className=\"text-left p-3 font-medium\">Company</th>\n                    <th className=\"text-right p-3 font-medium\">Market Cap</th>\n                    <th className=\"text-right p-3 font-medium\">Enterprise Value</th>\n                    <th className=\"text-right p-3 font-medium\">Revenue</th>\n                    <th className=\"text-right p-3 font-medium\">EV/Revenue</th>\n                    <th className=\"text-right p-3 font-medium\">EV/EBITDA</th>\n                    <th className=\"text-right p-3 font-medium\">P/E Ratio</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {comparableMultiples.map((comp, _index) => (\n                    <tr key={comp.id} className=\"border-b hover:bg-gray-50\">\n                      <td className=\"p-3\">\n                        <div>\n                          <div className=\"font-medium\">{comp.name}</div>\n                          <div className=\"text-xs text-gray-500\">{comp.ticker}</div>\n                        </div>\n                      </td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.marketCap)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.enterpriseValue)}</td>\n                      <td className=\"p-3 text-right\">{formatCurrency(comp.revenue)}</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.ev_revenue.toFixed(1)}x</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.ev_ebitda.toFixed(1)}x</td>\n                      <td className=\"p-3 text-right font-medium\">{comp.multiples.pe_ratio.toFixed(1)}x</td>\n                    </tr>\n                  ))}\n\n                  {/* Summary Statistics */}\n                  <tr className=\"border-t-2 border-gray-300 bg-blue-50 font-semibold\">\n                    <td className=\"p-3\">Market Statistics</td>\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3\" />\n                    <td className=\"p-3 text-right\">{marketStats.ev_revenue.median.toFixed(1)}x</td>\n                    <td className=\"p-3 text-right\">{marketStats.ev_ebitda.median.toFixed(1)}x</td>\n                    <td className=\"p-3 text-right\">{marketStats.pe_ratio.median.toFixed(1)}x</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            {/* Multiple Distribution Chart */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <div className=\"p-4 bg-gray-50 rounded-lg\">\n                <h6 className=\"font-medium mb-3\">Multiple Distribution</h6>\n                <div className=\"space-y-3\">\n                  {Object.entries(marketStats).slice(0, 3).map(([key, stats]) => (\n                    <div key={key}>\n                      <div className=\"flex justify-between text-sm mb-1\">\n                        <span>{multipleDefinitions[key].name}</span>\n                        <span className=\"font-medium\">{stats.median.toFixed(1)}x</span>\n                      </div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                        <div\n                          className=\"bg-blue-500 h-2 rounded-full\"\n                          style={{\n                            width: `${((stats.median - stats.min) / (stats.max - stats.min)) * 100}%`\n                          }}\n                        />\n                      </div>\n                      <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                        <span>{stats.min.toFixed(1)}x</span>\n                        <span>{stats.max.toFixed(1)}x</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"p-4 bg-gray-50 rounded-lg\">\n                <h6 className=\"font-medium mb-3\">Key Statistics</h6>\n                <div className=\"space-y-2 text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span>Companies Analyzed:</span>\n                    <span className=\"font-medium\">{comparableCompanies.length}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Median Market Cap:</span>\n                    <span className=\"font-medium\">{formatCurrency(comparableCompanies.sort((a, b) => a.marketCap - b.marketCap)[Math.floor(comparableCompanies.length / 2)]?.marketCap || 0)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Median Revenue:</span>\n                    <span className=\"font-medium\">{formatCurrency(comparableCompanies.sort((a, b) => a.revenue - b.revenue)[Math.floor(comparableCompanies.length / 2)]?.revenue || 0)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span>Avg Founded Year:</span>\n                    <span className=\"font-medium\">{Math.round(comparableCompanies.reduce((sum, c) => sum + c.founded, 0) / comparableCompanies.length)}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'analysis' && (\n          <div className=\"space-y-6\">\n            <h4 className=\"font-semibold text-lg\">Valuation Analysis</h4>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Implied Valuation */}\n              <div>\n                <h5 className=\"font-medium mb-4\">Implied Valuation by Multiple</h5>\n                <div className=\"space-y-4\">\n                  {Object.entries(impliedValuation).map(([multiple, values]) => (\n                    <div key={multiple} className=\"p-4 border rounded-lg\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"font-medium\">{multipleDefinitions[multiple].name}</span>\n                        <span className=\"text-sm text-gray-500\">\n                          {marketStats[multiple].median.toFixed(1)}x median\n                        </span>\n                      </div>\n                      <div className=\"space-y-2 text-sm\">\n                        <div className=\"flex justify-between\">\n                          <span>25th Percentile:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.p25)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Median:</span>\n                          <span className=\"font-bold text-blue-600\">{formatCurrency(values.median)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>75th Percentile:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.p75)}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span>Mean:</span>\n                          <span className=\"font-medium\">{formatCurrency(values.mean)}</span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Valuation Summary */}\n              <div>\n                <h5 className=\"font-medium mb-4\">Valuation Summary</h5>\n                <div className=\"p-6 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-200\">\n                  <div className=\"space-y-4\">\n                    <div>\n                      <div className=\"text-sm text-blue-600 font-medium mb-1\">Recommended Range</div>\n                      <div className=\"text-2xl font-bold text-blue-800\">\n                        {formatCurrency((impliedValuation.ev_revenue.p25 + impliedValuation.ev_ebitda.p25) / 2)} -\n                        {formatCurrency((impliedValuation.ev_revenue.p75 + impliedValuation.ev_ebitda.p75) / 2)}\n                      </div>\n                      <div className=\"text-sm text-blue-600\">Blended 25th-75th percentile</div>\n                    </div>\n\n                    <div>\n                      <div className=\"text-sm text-blue-600 font-medium mb-1\">Midpoint Valuation</div>\n                      <div className=\"text-xl font-bold text-blue-800\">\n                        {formatCurrency((impliedValuation.ev_revenue.median + impliedValuation.ev_ebitda.median) / 2)}\n                      </div>\n                      <div className=\"text-sm text-blue-600\">Average of median multiples</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"mt-4 p-4 bg-yellow-50 rounded-lg border border-yellow-200\">\n                  <div className=\"flex items-start gap-2\">\n                    <Target size={16} className=\"text-yellow-600 mt-0.5\" />\n                    <div>\n                      <h6 className=\"font-medium text-yellow-800 mb-1\">Valuation Considerations</h6>\n                      <ul className=\"text-sm text-yellow-700 space-y-1\">\n                        <li>• Consider company-specific growth and margin profiles</li>\n                        <li>• Adjust for differences in business model and scale</li>\n                        <li>• Factor in market conditions and sector trends</li>\n                        <li>• Apply appropriate discount for private company liquidity</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'companies' && (\n          <div className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h4 className=\"font-semibold text-lg\">Comparable Company Set</h4>\n              <div className=\"flex gap-2\">\n                <div className=\"relative\">\n                  <Search size={16} className=\"absolute left-3 top-3 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search companies...\"\n                    className=\"pl-10 pr-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <button className=\"px-3 py-2 border rounded-lg hover:bg-gray-50 flex items-center gap-2\">\n                  <Filter size={16} />\n                  Filter\n                </button>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n              {comparableCompanies.map((comp) => (\n                <motion.div\n                  key={comp.id}\n                  className=\"border rounded-lg p-4 hover:shadow-lg transition-shadow\"\n                  whileHover={{ y: -2 }}\n                >\n                  <div className=\"flex justify-between items-start mb-3\">\n                    <div>\n                      <h6 className=\"font-semibold text-gray-800\">{comp.name}</h6>\n                      <div className=\"text-sm text-gray-500\">{comp.ticker} • {comp.geography}</div>\n                    </div>\n                    <button\n                      onClick={() => removeComparable(comp.id)}\n                      className=\"text-red-500 hover:bg-red-50 p-1 rounded\"\n                    >\n                      ×\n                    </button>\n                  </div>\n\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span>Market Cap:</span>\n                      <span className=\"font-medium\">{formatCurrency(comp.marketCap)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Revenue:</span>\n                      <span className=\"font-medium\">{formatCurrency(comp.revenue)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>EV/Revenue:</span>\n                      <span className=\"font-medium\">{(comp.enterpriseValue / comp.revenue).toFixed(1)}x</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Founded:</span>\n                      <span className=\"font-medium\">{comp.founded}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"mt-3 pt-3 border-t\">\n                    <div className=\"text-xs text-gray-600\">{comp.businessModel}</div>\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Add Comparable Modal */}\n      {showAddComp && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h4 className=\"font-semibold text-lg mb-4\">Add Comparable Company</h4>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                const formData = new FormData(e.target);\n                addComparableCompany(Object.fromEntries(formData));\n              }}\n            >\n              <div className=\"space-y-4\">\n                <div>\n                  <label htmlFor=\"company-name\" className=\"block text-sm font-medium text-gray-700 mb-1\">Company Name</label>\n                  <input\n                    id=\"company-name\"\n                    name=\"name\" type=\"text\" required\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"ticker\" className=\"block text-sm font-medium text-gray-700 mb-1\">Ticker</label>\n                  <input\n                    id=\"ticker\"\n                    name=\"ticker\" type=\"text\" required\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <div>\n                    <label htmlFor=\"marketCap\" className=\"block text-sm font-medium text-gray-700 mb-1\">Market Cap ($000s)</label>\n                    <input\n                      id=\"marketCap\"\n                      name=\"marketCap\"\n                      type=\"number\"\n                      required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"enterpriseValue\" className=\"block text-sm font-medium text-gray-700 mb-1\">Enterprise Value ($000s)</label>\n                    <input\n                      id=\"enterpriseValue\"\n                      name=\"enterpriseValue\"\n                      type=\"number\"\n                      required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  <div>\n                    <label htmlFor=\"revenue\" className=\"block text-sm font-medium text-gray-700 mb-1\">Revenue ($000s)</label>\n                    <input\n                      id=\"revenue\"\n                      name=\"revenue\"\n                      type=\"number\"\n                      required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label htmlFor=\"ebitda\" className=\"block text-sm font-medium text-gray-700 mb-1\">EBITDA ($000s)</label>\n                    <input\n                      id=\"ebitda\"\n                      name=\"ebitda\"\n                      type=\"number\"\n                      required\n                      className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <label htmlFor=\"businessModel\" className=\"block text-sm font-medium text-gray-700 mb-1\">Business Model</label>\n                  <input\n                    id=\"businessModel\"\n                    name=\"businessModel\"\n                    type=\"text\"\n                    required\n                    className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex gap-3 mt-6\">\n                <button type=\"submit\" className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\">\n                  Add Company\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => setShowAddComp(false)}\n                  className=\"flex-1 px-4 py-2 border rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ComparableAnalysis;\n","import { apiLogger } from '../utils/apiLogger.js';\n\n/**\n * Monte Carlo Simulation Engine\n * Provides advanced statistical modeling and risk analysis\n */\nclass MonteCarloEngine {\n  constructor() {\n    this.workers = [];\n    this.isRunning = false;\n    this.currentSimulation = null;\n  }\n\n  /**\n   * Run Monte Carlo simulation for DCF analysis\n   * @param {Object} baseInputs - Base DCF inputs\n   * @param {Object} distributions - Variable distributions\n   * @param {Object} options - Simulation options\n   * @returns {Promise<Object>} Simulation results\n   */\n  async runDCFSimulation(baseInputs, distributions, options = {}) {\n    const {\n      iterations = 10000,\n      confidenceLevel = 0.95,\n      correlationMatrix = null,\n      randomSeed = null\n    } = options;\n\n    apiLogger.log('INFO', 'Starting DCF Monte Carlo simulation', {\n      iterations,\n      variables: Object.keys(distributions).length\n    });\n\n    this.isRunning = true;\n    const startTime = Date.now();\n\n    try {\n      // Initialize random number generator\n      if (randomSeed) {\n        this.setSeed(randomSeed);\n      }\n\n      // Generate correlated random samples\n      const samples = this.generateCorrelatedSamples(\n        distributions,\n        iterations,\n        correlationMatrix\n      );\n\n      // Run simulation iterations\n      const results = [];\n      const progressCallback = options.onProgress;\n\n      for (let i = 0; i < iterations; i++) {\n        if (!this.isRunning) {\n          throw new Error('Simulation cancelled');\n        }\n\n        // Create scenario inputs\n        const scenarioInputs = this.createScenarioInputs(baseInputs, samples[i], distributions);\n\n        // Calculate DCF for this scenario\n        const dcfResult = this.calculateDCFScenario(scenarioInputs);\n        results.push({\n          iteration: i + 1,\n          pricePerShare: dcfResult.pricePerShare,\n          enterpriseValue: dcfResult.enterpriseValue,\n          upside: dcfResult.upside,\n          inputs: scenarioInputs\n        });\n\n        // Report progress\n        if (progressCallback && i % Math.floor(iterations / 100) === 0) {\n          progressCallback((i / iterations) * 100);\n        }\n      }\n\n      // Analyze results\n      const analysis = this.analyzeResults(results, confidenceLevel);\n\n      const endTime = Date.now();\n      apiLogger.log('INFO', 'DCF Monte Carlo simulation completed', {\n        iterations,\n        duration: endTime - startTime,\n        meanPrice: analysis.statistics.mean\n      });\n\n      return {\n        type: 'DCF_MONTE_CARLO',\n        timestamp: new Date().toISOString(),\n        parameters: { iterations, confidenceLevel, randomSeed },\n        results,\n        analysis,\n        duration: endTime - startTime\n      };\n\n    } catch (error) {\n      this.isRunning = false;\n      apiLogger.log('ERROR', 'DCF Monte Carlo simulation failed', { error: error.message });\n      throw error;\n    } finally {\n      this.isRunning = false;\n    }\n  }\n\n  /**\n   * Run Monte Carlo simulation for LBO analysis\n   * @param {Object} baseInputs - Base LBO inputs\n   * @param {Object} distributions - Variable distributions\n   * @param {Object} options - Simulation options\n   * @returns {Promise<Object>} Simulation results\n   */\n  async runLBOSimulation(baseInputs, distributions, options = {}) {\n    const {\n      iterations = 10000,\n      confidenceLevel = 0.95,\n      correlationMatrix = null,\n      randomSeed = null\n    } = options;\n\n    apiLogger.log('INFO', 'Starting LBO Monte Carlo simulation', {\n      iterations,\n      variables: Object.keys(distributions).length\n    });\n\n    this.isRunning = true;\n    const startTime = Date.now();\n\n    try {\n      if (randomSeed) {\n        this.setSeed(randomSeed);\n      }\n\n      const samples = this.generateCorrelatedSamples(\n        distributions,\n        iterations,\n        correlationMatrix\n      );\n\n      const results = [];\n      const progressCallback = options.onProgress;\n\n      for (let i = 0; i < iterations; i++) {\n        if (!this.isRunning) {\n          throw new Error('Simulation cancelled');\n        }\n\n        const scenarioInputs = this.createScenarioInputs(baseInputs, samples[i], distributions);\n        const lboResult = this.calculateLBOScenario(scenarioInputs);\n\n        results.push({\n          iteration: i + 1,\n          irr: lboResult.irr,\n          moic: lboResult.moic,\n          totalReturn: lboResult.totalReturn,\n          inputs: scenarioInputs\n        });\n\n        if (progressCallback && i % Math.floor(iterations / 100) === 0) {\n          progressCallback((i / iterations) * 100);\n        }\n      }\n\n      const analysis = this.analyzeResults(results, confidenceLevel, ['irr', 'moic', 'totalReturn']);\n\n      const endTime = Date.now();\n      apiLogger.log('INFO', 'LBO Monte Carlo simulation completed', {\n        iterations,\n        duration: endTime - startTime,\n        meanIRR: analysis.statistics.irr?.mean\n      });\n\n      return {\n        type: 'LBO_MONTE_CARLO',\n        timestamp: new Date().toISOString(),\n        parameters: { iterations, confidenceLevel, randomSeed },\n        results,\n        analysis,\n        duration: endTime - startTime\n      };\n\n    } catch (error) {\n      this.isRunning = false;\n      apiLogger.log('ERROR', 'LBO Monte Carlo simulation failed', { error: error.message });\n      throw error;\n    } finally {\n      this.isRunning = false;\n    }\n  }\n\n  /**\n   * Generate correlated random samples using Cholesky decomposition\n   * @param {Object} distributions - Variable distributions\n   * @param {number} iterations - Number of iterations\n   * @param {Array} correlationMatrix - Correlation matrix\n   * @returns {Array} Array of sample sets\n   */\n  generateCorrelatedSamples(distributions, iterations, correlationMatrix) {\n    const variables = Object.keys(distributions);\n    const numVars = variables.length;\n    const samples = [];\n\n    // Generate independent samples first\n    const independentSamples = [];\n    for (let i = 0; i < iterations; i++) {\n      const sample = {};\n      variables.forEach(variable => {\n        const dist = distributions[variable];\n        sample[variable] = this.sampleFromDistribution(dist);\n      });\n      independentSamples.push(sample);\n    }\n\n    // Apply correlation if matrix is provided\n    if (correlationMatrix && correlationMatrix.length === numVars) {\n      const choleskyMatrix = this.choleskyDecomposition(correlationMatrix);\n\n      for (let i = 0; i < iterations; i++) {\n        const correlatedSample = {};\n        const independentValues = variables.map(v => independentSamples[i][v]);\n        const correlatedValues = this.applyCorrelation(independentValues, choleskyMatrix);\n\n        variables.forEach((variable, index) => {\n          correlatedSample[variable] = correlatedValues[index];\n        });\n\n        samples.push(correlatedSample);\n      }\n    } else {\n      samples.push(...independentSamples);\n    }\n\n    return samples;\n  }\n\n  /**\n   * Sample from a probability distribution with enhanced types\n   * @param {Object} distribution - Distribution parameters\n   * @returns {number} Random sample\n   */\n  sampleFromDistribution(distribution) {\n    const { type, parameters } = distribution;\n\n    switch (type) {\n      case 'normal':\n        return this.normalRandom(parameters.mean, parameters.stdDev);\n\n      case 'lognormal': {\n        const normalSample = this.normalRandom(parameters.mu, parameters.sigma);\n        return Math.exp(normalSample);\n      }\n\n      case 'uniform':\n        return parameters.min + Math.random() * (parameters.max - parameters.min);\n\n      case 'triangular':\n        return this.triangularRandom(parameters.min, parameters.mode, parameters.max);\n\n      case 'beta':\n        return this.betaRandom(parameters.alpha, parameters.beta);\n\n      case 'exponential':\n        return this.exponentialRandom(parameters.lambda);\n\n      case 'weibull':\n        return this.weibullRandom(parameters.shape, parameters.scale);\n\n      case 'pareto':\n        return this.paretoRandom(parameters.scale, parameters.shape);\n\n      case 'student_t':\n        return this.studentTRandom(parameters.df);\n\n      case 'chi_squared':\n        return this.chiSquaredRandom(parameters.df);\n\n      default:\n        throw new Error(`Unsupported distribution type: ${type}`);\n    }\n  }\n\n  /**\n   * Generate exponential random variable\n   * @param {number} lambda - Rate parameter\n   * @returns {number} Exponential random variable\n   */\n  exponentialRandom(lambda) {\n    return -Math.log(1 - Math.random()) / lambda;\n  }\n\n  /**\n   * Generate Weibull random variable\n   * @param {number} shape - Shape parameter (k)\n   * @param {number} scale - Scale parameter (lambda)\n   * @returns {number} Weibull random variable\n   */\n  weibullRandom(shape, scale) {\n    const u = Math.random();\n    return scale * Math.pow(-Math.log(1 - u), 1 / shape);\n  }\n\n  /**\n   * Generate Pareto random variable\n   * @param {number} scale - Scale parameter (xm)\n   * @param {number} shape - Shape parameter (alpha)\n   * @returns {number} Pareto random variable\n   */\n  paretoRandom(scale, shape) {\n    const u = Math.random();\n    return scale / Math.pow(u, 1 / shape);\n  }\n\n  /**\n   * Generate Student's t random variable\n   * @param {number} df - Degrees of freedom\n   * @returns {number} Student's t random variable\n   */\n  studentTRandom(df) {\n    if (df <= 0) throw new Error('Degrees of freedom must be positive');\n\n    const normal = this.normalRandom(0, 1);\n    const chiSq = this.chiSquaredRandom(df);\n\n    return normal / Math.sqrt(chiSq / df);\n  }\n\n  /**\n   * Generate Chi-squared random variable\n   * @param {number} df - Degrees of freedom\n   * @returns {number} Chi-squared random variable\n   */\n  chiSquaredRandom(df) {\n    if (df <= 0) throw new Error('Degrees of freedom must be positive');\n\n    return this.gammaRandom(df / 2) * 2;\n  }\n\n  /**\n   * Generate normal random variable using Box-Muller transform\n   * @param {number} mean - Mean\n   * @param {number} stdDev - Standard deviation\n   * @returns {number} Normal random variable\n   */\n  normalRandom(mean = 0, stdDev = 1) {\n    if (this.spareNormal !== undefined) {\n      const spare = this.spareNormal;\n      this.spareNormal = undefined;\n      return spare * stdDev + mean;\n    }\n\n    const u1 = Math.random();\n    const u2 = Math.random();\n    const z0 = Math.sqrt(-2 * Math.log(u1)) * Math.cos(2 * Math.PI * u2);\n    const z1 = Math.sqrt(-2 * Math.log(u1)) * Math.sin(2 * Math.PI * u2);\n\n    this.spareNormal = z1;\n    return z0 * stdDev + mean;\n  }\n\n  /**\n   * Generate triangular random variable\n   * @param {number} min - Minimum value\n   * @param {number} mode - Mode value\n   * @param {number} max - Maximum value\n   * @returns {number} Triangular random variable\n   */\n  triangularRandom(min, mode, max) {\n    const u = Math.random();\n    const c = (mode - min) / (max - min);\n\n    if (u < c) {\n      return min + Math.sqrt(u * (max - min) * (mode - min));\n    } else {\n      return max - Math.sqrt((1 - u) * (max - min) * (max - mode));\n    }\n  }\n\n  /**\n   * Generate beta random variable\n   * @param {number} alpha - Alpha parameter\n   * @param {number} beta - Beta parameter\n   * @returns {number} Beta random variable\n   */\n  betaRandom(alpha, beta) {\n    const x = this.gammaRandom(alpha);\n    const y = this.gammaRandom(beta);\n    return x / (x + y);\n  }\n\n  /**\n   * Generate gamma random variable\n   * @param {number} shape - Shape parameter\n   * @returns {number} Gamma random variable\n   */\n  gammaRandom(shape) {\n    // Marsaglia and Tsang's method for shape >= 1\n    if (shape >= 1) {\n      const d = shape - 1 / 3;\n      const c = 1 / Math.sqrt(9 * d);\n\n      while (true) {\n        let x, v;\n        do {\n          x = this.normalRandom();\n          v = 1 + c * x;\n        } while (v <= 0);\n\n        v = v * v * v;\n        const u = Math.random();\n\n        if (u < 1 - 0.0331 * x * x * x * x) {\n          return d * v;\n        }\n\n        if (Math.log(u) < 0.5 * x * x + d * (1 - v + Math.log(v))) {\n          return d * v;\n        }\n      }\n    } else {\n      // For shape < 1, use transformation\n      return this.gammaRandom(shape + 1) * Math.pow(Math.random(), 1 / shape);\n    }\n  }\n\n  /**\n   * Perform Cholesky decomposition\n   * @param {Array} matrix - Correlation matrix\n   * @returns {Array} Lower triangular matrix\n   */\n  choleskyDecomposition(matrix) {\n    const n = matrix.length;\n    const L = Array(n).fill().map(() => Array(n).fill(0));\n\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j <= i; j++) {\n        if (i === j) {\n          let sum = 0;\n          for (let k = 0; k < j; k++) {\n            sum += L[j][k] * L[j][k];\n          }\n          L[j][j] = Math.sqrt(matrix[j][j] - sum);\n        } else {\n          let sum = 0;\n          for (let k = 0; k < j; k++) {\n            sum += L[i][k] * L[j][k];\n          }\n          L[i][j] = (matrix[i][j] - sum) / L[j][j];\n        }\n      }\n    }\n\n    return L;\n  }\n\n  /**\n   * Apply correlation using Cholesky matrix\n   * @param {Array} independentValues - Independent random values\n   * @param {Array} choleskyMatrix - Cholesky decomposition matrix\n   * @returns {Array} Correlated values\n   */\n  applyCorrelation(independentValues, choleskyMatrix) {\n    const n = independentValues.length;\n    const correlatedValues = Array(n).fill(0);\n\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j <= i; j++) {\n        correlatedValues[i] += choleskyMatrix[i][j] * independentValues[j];\n      }\n    }\n\n    return correlatedValues;\n  }\n\n  /**\n   * Create scenario inputs by applying random samples to base inputs\n   * @param {Object} baseInputs - Base model inputs\n   * @param {Object} samples - Random samples\n   * @param {Object} distributions - Distribution definitions\n   * @returns {Object} Scenario inputs\n   */\n  createScenarioInputs(baseInputs, samples, distributions) {\n    const scenarioInputs = { ...baseInputs };\n\n    Object.entries(samples).forEach(([variable, sample]) => {\n      const distribution = distributions[variable];\n\n      if (distribution.applyTo) {\n        // Apply sample to specific input field\n        scenarioInputs[distribution.applyTo] = sample;\n      } else {\n        // Direct assignment\n        scenarioInputs[variable] = sample;\n      }\n    });\n\n    return scenarioInputs;\n  }\n\n  /**\n   * Calculate DCF scenario (simplified for Monte Carlo)\n   * @param {Object} inputs - Scenario inputs\n   * @returns {Object} DCF results\n   */\n  calculateDCFScenario(inputs) {\n    // This would integrate with the financialModelingEngine\n    // Simplified calculation for demonstration\n    const {\n      currentRevenue = 1000000000,\n      revenueGrowthRate = 0.1,\n      fcfMargin = 0.15,\n      wacc = 0.1,\n      terminalGrowthRate = 0.025,\n      sharesOutstanding = 100000000,\n      currentPrice = 100\n    } = inputs;\n\n    // Simple DCF calculation\n    const projectionYears = 5;\n    let totalPV = 0;\n    let revenue = currentRevenue;\n\n    for (let year = 1; year <= projectionYears; year++) {\n      revenue *= (1 + revenueGrowthRate);\n      const fcf = revenue * fcfMargin;\n      const pv = fcf / Math.pow(1 + wacc, year);\n      totalPV += pv;\n    }\n\n    // Terminal value\n    const terminalFCF = revenue * fcfMargin * (1 + terminalGrowthRate);\n    const terminalValue = terminalFCF / (wacc - terminalGrowthRate);\n    const pvTerminal = terminalValue / Math.pow(1 + wacc, projectionYears);\n\n    const enterpriseValue = totalPV + pvTerminal;\n    const pricePerShare = enterpriseValue / sharesOutstanding;\n    const upside = ((pricePerShare - currentPrice) / currentPrice) * 100;\n\n    return {\n      pricePerShare,\n      enterpriseValue,\n      upside\n    };\n  }\n\n  /**\n   * Calculate LBO scenario (simplified for Monte Carlo)\n   * @param {Object} inputs - Scenario inputs\n   * @returns {Object} LBO results\n   */\n  calculateLBOScenario(inputs) {\n    // Simplified LBO calculation for demonstration\n    const {\n      ebitda = 100000000,\n      ebitdaGrowthRate = 0.05,\n      exitMultiple = 10,\n      debtMultiple = 5,\n      holdingPeriod = 5\n    } = inputs;\n\n    const purchasePrice = ebitda * 10; // Assume 10x entry multiple\n    const debt = ebitda * debtMultiple;\n    const equity = purchasePrice - debt;\n\n    // Project exit EBITDA\n    const exitEbitda = ebitda * Math.pow(1 + ebitdaGrowthRate, holdingPeriod);\n    const exitValue = exitEbitda * exitMultiple;\n    const remainingDebt = debt * 0.5; // Assume 50% paydown\n    const exitProceeds = exitValue - remainingDebt;\n\n    const totalReturn = exitProceeds / equity;\n    const irr = Math.pow(totalReturn, 1 / holdingPeriod) - 1;\n\n    return {\n      irr,\n      moic: totalReturn,\n      totalReturn: exitProceeds\n    };\n  }\n\n  /**\n   * Analyze simulation results with enhanced statistical measures\n   * @param {Array} results - Simulation results\n   * @param {number} confidenceLevel - Confidence level\n   * @param {Array} metrics - Metrics to analyze\n   * @returns {Object} Comprehensive statistical analysis\n   */\n  analyzeResults(results, confidenceLevel, metrics = ['pricePerShare', 'enterpriseValue', 'upside']) {\n    const analysis = {\n      statistics: {},\n      percentiles: {},\n      confidenceIntervals: {},\n      riskMetrics: {},\n      distributionTests: {},\n      correlations: {}\n    };\n\n    metrics.forEach(metric => {\n      const values = results.map(r => r[metric]).filter(v => v !== null && !isNaN(v)).sort((a, b) => a - b);\n\n      if (values.length === 0) return;\n\n      const mean = values.reduce((sum, v) => sum + v, 0) / values.length;\n      const variance = values.reduce((sum, v) => sum + Math.pow(v - mean, 2), 0) / values.length;\n      const stdDev = Math.sqrt(variance);\n      const sampleStdDev = Math.sqrt(variance * values.length / (values.length - 1)); // Bessel's correction\n\n      analysis.statistics[metric] = {\n        mean,\n        median: this.percentile(values, 0.5),\n        mode: this.calculateMode(values),\n        stdDev,\n        sampleStdDev,\n        variance,\n        min: values[0],\n        max: values[values.length - 1],\n        range: values[values.length - 1] - values[0],\n        count: values.length,\n        // Additional robust statistics\n        trimmedMean: this.calculateTrimmedMean(values, 0.1), // 10% trimmed mean\n        mad: this.calculateMAD(values), // Median Absolute Deviation\n        iqr: this.percentile(values, 0.75) - this.percentile(values, 0.25)\n      };\n\n      analysis.percentiles[metric] = {\n        p1: this.percentile(values, 0.01),\n        p5: this.percentile(values, 0.05),\n        p10: this.percentile(values, 0.10),\n        p25: this.percentile(values, 0.25),\n        p50: this.percentile(values, 0.5),\n        p75: this.percentile(values, 0.75),\n        p90: this.percentile(values, 0.90),\n        p95: this.percentile(values, 0.95),\n        p99: this.percentile(values, 0.99)\n      };\n\n      const alpha = 1 - confidenceLevel;\n      const lowerBound = this.percentile(values, alpha / 2);\n      const upperBound = this.percentile(values, 1 - alpha / 2);\n\n      analysis.confidenceIntervals[metric] = {\n        level: confidenceLevel,\n        lowerBound,\n        upperBound,\n        width: upperBound - lowerBound,\n        // Bootstrap confidence intervals\n        bootstrapCI: this.calculateBootstrapCI(values, confidenceLevel)\n      };\n\n      const var95 = this.percentile(values, 0.05);\n      const var99 = this.percentile(values, 0.01);\n      const cvar95 = values.slice(0, Math.floor(values.length * 0.05)).reduce((sum, v) => sum + v, 0) / Math.floor(values.length * 0.05);\n      const cvar99 = values.slice(0, Math.floor(values.length * 0.01)).reduce((sum, v) => sum + v, 0) / Math.floor(values.length * 0.01);\n\n      analysis.riskMetrics[metric] = {\n        var95, // Value at Risk (5%)\n        var99, // Value at Risk (1%)\n        cvar95, // Conditional VaR (5%)\n        cvar99, // Conditional VaR (1%)\n        skewness: this.calculateSkewness(values, mean, stdDev),\n        kurtosis: this.calculateKurtosis(values, mean, stdDev),\n        excessKurtosis: this.calculateKurtosis(values, mean, stdDev) - 3,\n        // Tail risk measures\n        expectedShortfall: cvar95,\n        maxDrawdown: this.calculateMaxDrawdown(values),\n        // Risk-adjusted returns\n        sharpeRatio: this.calculateSharpeRatio(values, 0.02), // Assuming 2% risk-free rate\n        sortinoRatio: this.calculateSortinoRatio(values, mean)\n      };\n\n      // Distribution fitting tests\n      analysis.distributionTests[metric] = {\n        jarqueBera: this.jarqueBeraTest(values),\n        kolmogorovSmirnov: this.ksTestNormality(values),\n        shapiroWilk: values.length <= 5000 ? this.shapiroWilkTest(values) : null\n      };\n    });\n\n    // Calculate correlation matrix between metrics\n    if (metrics.length > 1) {\n      analysis.correlations = this.calculateCorrelationMatrix(results, metrics);\n    }\n\n    return analysis;\n  }\n\n  /**\n   * Calculate mode of dataset\n   */\n  calculateMode(values) {\n    const frequency = {};\n    values.forEach(v => {\n      const rounded = Math.round(v * 100) / 100; // Round to avoid floating point issues\n      frequency[rounded] = (frequency[rounded] || 0) + 1;\n    });\n\n    const maxFreq = Math.max(...Object.values(frequency));\n    const modes = Object.keys(frequency).filter(k => frequency[k] === maxFreq);\n\n    return modes.length === 1 ? parseFloat(modes[0]) : null;\n  }\n\n  /**\n   * Calculate trimmed mean\n   */\n  calculateTrimmedMean(sortedValues, trimProportion = 0.1) {\n    const trimCount = Math.floor(sortedValues.length * trimProportion);\n    const trimmedValues = sortedValues.slice(trimCount, -trimCount || undefined);\n    return trimmedValues.reduce((sum, v) => sum + v, 0) / trimmedValues.length;\n  }\n\n  /**\n   * Calculate Median Absolute Deviation\n   */\n  calculateMAD(values) {\n    const median = this.percentile(values, 0.5);\n    const deviations = values.map(v => Math.abs(v - median)).sort((a, b) => a - b);\n    return this.percentile(deviations, 0.5);\n  }\n\n  /**\n   * Calculate bootstrap confidence interval\n   */\n  calculateBootstrapCI(values, confidenceLevel, bootstrapSamples = 1000) {\n    const bootstrapMeans = [];\n\n    for (let i = 0; i < bootstrapSamples; i++) {\n      const sample = [];\n      for (let j = 0; j < values.length; j++) {\n        sample.push(values[Math.floor(Math.random() * values.length)]);\n      }\n      bootstrapMeans.push(sample.reduce((sum, v) => sum + v, 0) / sample.length);\n    }\n\n    bootstrapMeans.sort((a, b) => a - b);\n    const alpha = 1 - confidenceLevel;\n\n    return {\n      lowerBound: this.percentile(bootstrapMeans, alpha / 2),\n      upperBound: this.percentile(bootstrapMeans, 1 - alpha / 2)\n    };\n  }\n\n  /**\n   * Calculate maximum drawdown\n   */\n  calculateMaxDrawdown(values) {\n    let peak = values[0];\n    let maxDrawdown = 0;\n\n    for (const value of values) {\n      if (value > peak) {\n        peak = value;\n      }\n      const drawdown = (peak - value) / peak;\n      if (drawdown > maxDrawdown) {\n        maxDrawdown = drawdown;\n      }\n    }\n\n    return maxDrawdown;\n  }\n\n  /**\n   * Calculate Sharpe ratio approximation\n   */\n  calculateSharpeRatio(values, riskFreeRate = 0.02) {\n    const mean = values.reduce((sum, v) => sum + v, 0) / values.length;\n    const variance = values.reduce((sum, v) => sum + Math.pow(v - mean, 2), 0) / values.length;\n    const stdDev = Math.sqrt(variance);\n\n    return stdDev > 0 ? (mean - riskFreeRate) / stdDev : 0;\n  }\n\n  /**\n   * Calculate Sortino ratio\n   */\n  calculateSortinoRatio(values, targetReturn) {\n    const excessReturns = values.map(v => v - targetReturn);\n    const negativeReturns = excessReturns.filter(r => r < 0);\n\n    if (negativeReturns.length === 0) return Infinity;\n\n    const downsideDeviation = Math.sqrt(\n      negativeReturns.reduce((sum, r) => sum + r * r, 0) / negativeReturns.length\n    );\n\n    const meanExcessReturn = excessReturns.reduce((sum, r) => sum + r, 0) / excessReturns.length;\n\n    return downsideDeviation > 0 ? meanExcessReturn / downsideDeviation : 0;\n  }\n\n  /**\n   * Jarque-Bera test for normality\n   */\n  jarqueBeraTest(values) {\n    const n = values.length;\n    const mean = values.reduce((sum, v) => sum + v, 0) / n;\n    const variance = values.reduce((sum, v) => sum + Math.pow(v - mean, 2), 0) / n;\n    const stdDev = Math.sqrt(variance);\n\n    const skewness = this.calculateSkewness(values, mean, stdDev);\n    const kurtosis = this.calculateKurtosis(values, mean, stdDev);\n\n    const jb = (n / 6) * (Math.pow(skewness, 2) + Math.pow(kurtosis - 3, 2) / 4);\n    const pValue = 1 - this.chiSquaredCDF(jb, 2); // Approximate p-value\n\n    return {\n      statistic: jb,\n      pValue,\n      isNormal: pValue > 0.05\n    };\n  }\n\n  /**\n   * Approximate chi-squared CDF\n   */\n  chiSquaredCDF(x, df) {\n    if (x <= 0) return 0;\n    return this.incompleteGamma(df / 2, x / 2);\n  }\n\n  /**\n   * Incomplete gamma function approximation\n   */\n  incompleteGamma(a, x) {\n    // Simple approximation for demonstration\n    if (x === 0) return 0;\n    if (x < 0) return 0;\n    if (a <= 0) return 0;\n\n    // Use series expansion for small x relative to a\n    if (x < a + 1) {\n      let sum = 1 / a;\n      let term = 1 / a;\n      for (let n = 1; n < 100; n++) {\n        term *= x / (a + n);\n        sum += term;\n        if (Math.abs(term) < 1e-15) break;\n      }\n      return Math.exp(-x + a * Math.log(x) - this.logGamma(a)) * sum;\n    } else {\n      // Use continued fraction for large x\n      let b = x + 1 - a;\n      let c = 1e30;\n      let d = 1 / b;\n      let h = d;\n\n      for (let i = 1; i <= 100; i++) {\n        const an = -i * (i - a);\n        b += 2;\n        d = an * d + b;\n        if (Math.abs(d) < 1e-30) d = 1e-30;\n        c = b + an / c;\n        if (Math.abs(c) < 1e-30) c = 1e-30;\n        d = 1 / d;\n        const del = d * c;\n        h *= del;\n        if (Math.abs(del - 1) < 1e-15) break;\n      }\n\n      const gammacf = Math.exp(-x + a * Math.log(x) - this.logGamma(a)) * h;\n      return 1 - gammacf;\n    }\n  }\n\n  /**\n   * Log gamma function approximation\n   */\n  logGamma(x) {\n    const coef = [\n      76.18009172947144, -86.50532032941676, 24.01409824083091,\n      -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\n    ];\n\n    let j = 0;\n    let ser = 1.0000000001900151;\n    let xx = x;\n    let y = xx = x;\n    let tmp = x + 5.5;\n    tmp -= (x + 0.5) * Math.log(tmp);\n\n    for (; j < 6; j++) {\n      ser += coef[j] / ++y;\n    }\n\n    return -tmp + Math.log(2.506628274631001 * ser / xx);\n  }\n\n  /**\n   * Kolmogorov-Smirnov test for normality\n   */\n  ksTestNormality(values) {\n    const n = values.length;\n    const mean = values.reduce((sum, v) => sum + v, 0) / n;\n    const variance = values.reduce((sum, v) => sum + Math.pow(v - mean, 2), 0) / n;\n    const stdDev = Math.sqrt(variance);\n\n    let maxD = 0;\n\n    for (let i = 0; i < n; i++) {\n      const empirical = (i + 1) / n;\n      const theoretical = this.normalCDF((values[i] - mean) / stdDev);\n      const d = Math.abs(empirical - theoretical);\n      if (d > maxD) maxD = d;\n    }\n\n    const critical = 1.36 / Math.sqrt(n); // Critical value at 5% significance\n\n    return {\n      statistic: maxD,\n      critical,\n      isNormal: maxD < critical\n    };\n  }\n\n  /**\n   * Normal CDF approximation\n   */\n  normalCDF(x) {\n    return 0.5 * (1 + this.erf(x / Math.sqrt(2)));\n  }\n\n  /**\n   * Error function approximation\n   */\n  erf(x) {\n    const a1 =  0.254829592;\n    const a2 = -0.284496736;\n    const a3 =  1.421413741;\n    const a4 = -1.453152027;\n    const a5 =  1.061405429;\n    const p  =  0.3275911;\n\n    const sign = x < 0 ? -1 : 1;\n    x = Math.abs(x);\n\n    const t = 1.0 / (1.0 + p * x);\n    const y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n    return sign * y;\n  }\n\n  /**\n   * Shapiro-Wilk test for normality (simplified)\n   */\n  shapiroWilkTest(values) {\n    // Simplified implementation - in practice, would use lookup tables\n    const n = values.length;\n    if (n < 3 || n > 5000) return null;\n\n    const sortedValues = [...values].sort((a, b) => a - b);\n    const mean = values.reduce((sum, v) => sum + v, 0) / n;\n\n    // This is a very simplified approximation\n    const numerator = 0;\n    let denominator = 0;\n\n    for (let i = 0; i < n; i++) {\n      denominator += Math.pow(sortedValues[i] - mean, 2);\n    }\n\n    // Simplified calculation - real implementation would use Shapiro-Wilk coefficients\n    const w = numerator / denominator;\n\n    return {\n      statistic: w,\n      isNormal: w > 0.9 // Very rough approximation\n    };\n  }\n\n  /**\n   * Calculate correlation matrix between metrics\n   */\n  calculateCorrelationMatrix(results, metrics) {\n    const correlationMatrix = {};\n\n    for (let i = 0; i < metrics.length; i++) {\n      correlationMatrix[metrics[i]] = {};\n      for (let j = 0; j < metrics.length; j++) {\n        if (i === j) {\n          correlationMatrix[metrics[i]][metrics[j]] = 1.0;\n        } else {\n          const valuesI = results.map(r => r[metrics[i]]).filter(v => v !== null && !isNaN(v));\n          const valuesJ = results.map(r => r[metrics[j]]).filter(v => v !== null && !isNaN(v));\n\n          correlationMatrix[metrics[i]][metrics[j]] = this.calculateCorrelation(valuesI, valuesJ);\n        }\n      }\n    }\n\n    return correlationMatrix;\n  }\n\n  /**\n   * Calculate Pearson correlation coefficient\n   */\n  calculateCorrelation(x, y) {\n    if (x.length !== y.length || x.length === 0) return 0;\n\n    const n = x.length;\n    const meanX = x.reduce((sum, v) => sum + v, 0) / n;\n    const meanY = y.reduce((sum, v) => sum + v, 0) / n;\n\n    let numerator = 0;\n    let sumXX = 0;\n    let sumYY = 0;\n\n    for (let i = 0; i < n; i++) {\n      const dx = x[i] - meanX;\n      const dy = y[i] - meanY;\n      numerator += dx * dy;\n      sumXX += dx * dx;\n      sumYY += dy * dy;\n    }\n\n    const denominator = Math.sqrt(sumXX * sumYY);\n    return denominator > 0 ? numerator / denominator : 0;\n  }\n\n  /**\n   * Calculate percentile\n   * @param {Array} sortedValues - Sorted array of values\n   * @param {number} p - Percentile (0-1)\n   * @returns {number} Percentile value\n   */\n  percentile(sortedValues, p) {\n    const index = p * (sortedValues.length - 1);\n    const lower = Math.floor(index);\n    const upper = Math.ceil(index);\n    const weight = index - lower;\n\n    if (lower === upper) {\n      return sortedValues[lower];\n    }\n\n    return sortedValues[lower] * (1 - weight) + sortedValues[upper] * weight;\n  }\n\n  /**\n   * Calculate skewness\n   * @param {Array} values - Array of values\n   * @param {number} mean - Mean\n   * @param {number} stdDev - Standard deviation\n   * @returns {number} Skewness\n   */\n  calculateSkewness(values, mean, stdDev) {\n    const n = values.length;\n    const sum = values.reduce((sum, v) => sum + Math.pow((v - mean) / stdDev, 3), 0);\n    return (n / ((n - 1) * (n - 2))) * sum;\n  }\n\n  /**\n   * Calculate kurtosis\n   * @param {Array} values - Array of values\n   * @param {number} mean - Mean\n   * @param {number} stdDev - Standard deviation\n   * @returns {number} Kurtosis\n   */\n  calculateKurtosis(values, mean, stdDev) {\n    const n = values.length;\n    const sum = values.reduce((sum, v) => sum + Math.pow((v - mean) / stdDev, 4), 0);\n    return ((n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3))) * sum - (3 * Math.pow(n - 1, 2)) / ((n - 2) * (n - 3));\n  }\n\n  /**\n   * Set random seed for reproducible results\n   * @param {number} seed - Random seed\n   */\n  setSeed(seed) {\n    // Simple linear congruential generator for reproducible results\n    this.seed = seed;\n    this.random = () => {\n      this.seed = (this.seed * 9301 + 49297) % 233280;\n      return this.seed / 233280;\n    };\n    Math.random = this.random;\n  }\n\n  /**\n   * Stop running simulation\n   */\n  stopSimulation() {\n    this.isRunning = false;\n  }\n\n  /**\n   * Check if simulation is running\n   * @returns {boolean} True if running\n   */\n  isSimulationRunning() {\n    return this.isRunning;\n  }\n}\n\n// Export singleton instance\nexport const monteCarloEngine = new MonteCarloEngine();\nexport default MonteCarloEngine;\n","import { motion, AnimatePresence } from 'framer-motion';\nimport { BarChart3, TrendingUp, AlertTriangle, Play, Square, Settings, Download, FileText, Zap } from 'lucide-react';\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ScatterChart, Scatter, Cell, AreaChart, Area } from 'recharts';\n\nimport { monteCarloEngine } from '../../services/monteCarloEngine.js';\n\nconst MonteCarloSimulation = ({ data, onDataChange: _onDataChange }) => {\n  const [activeTab, setActiveTab] = useState('setup');\n  const [simulationResults, setSimulationResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [simulationSettings, setSimulationSettings] = useState({\n    iterations: 10000,\n    confidenceLevel: 0.95,\n    randomSeed: null,\n    enableCorrelation: false\n  });\n\n  const [distributions, setDistributions] = useState({\n    revenueGrowthRate: {\n      type: 'normal',\n      parameters: { mean: 0.1, stdDev: 0.03 },\n      name: 'Revenue Growth Rate',\n      enabled: true\n    },\n    fcfMargin: {\n      type: 'triangular',\n      parameters: { min: 0.12, mode: 0.15, max: 0.18 },\n      name: 'FCF Margin',\n      enabled: true\n    },\n    wacc: {\n      type: 'normal',\n      parameters: { mean: 0.1, stdDev: 0.015 },\n      name: 'WACC',\n      enabled: true\n    },\n    terminalGrowthRate: {\n      type: 'uniform',\n      parameters: { min: 0.02, max: 0.03 },\n      name: 'Terminal Growth Rate',\n      enabled: true\n    }\n  });\n\n  const [correlationMatrix, setCorrelationMatrix] = useState([\n    [1.0, 0.3, -0.2, 0.1],\n    [0.3, 1.0, -0.4, 0.2],\n    [-0.2, -0.4, 1.0, -0.3],\n    [0.1, 0.2, -0.3, 1.0]\n  ]);\n\n  const distributionTypes = [\n    { value: 'normal', label: 'Normal', parameters: ['mean', 'stdDev'] },\n    { value: 'triangular', label: 'Triangular', parameters: ['min', 'mode', 'max'] },\n    { value: 'uniform', label: 'Uniform', parameters: ['min', 'max'] },\n    { value: 'lognormal', label: 'Log-Normal', parameters: ['mu', 'sigma'] },\n    { value: 'beta', label: 'Beta', parameters: ['alpha', 'beta'] }\n  ];\n\n  const runSimulation = useCallback(async() => {\n    try {\n      // Validate data and settings before starting simulation\n\n      setIsRunning(true);\n      setProgress(0);\n\n      const enabledDistributions = Object.fromEntries(\n        Object.entries(distributions).filter(([_, dist]) => dist.enabled)\n      );\n\n      if (Object.keys(enabledDistributions).length === 0) {\n        throw new Error('No distributions are enabled. Please enable at least one variable distribution to run the simulation.');\n      }\n\n      const options = {\n        iterations: simulationSettings.iterations,\n        confidenceLevel: simulationSettings.confidenceLevel,\n        randomSeed: simulationSettings.randomSeed,\n        correlationMatrix: simulationSettings.enableCorrelation ? correlationMatrix : null,\n        onProgress: setProgress\n      };\n\n      // Extract current revenue from actual data structure\n      const statements = data?.statements?.incomeStatement;\n      const latestIndex = data?.periods?.length - 1 || 2;\n      const currentRevenue = statements?.totalRevenue?.[latestIndex] || 1000000;\n      const currentOperatingIncome = statements?.operatingIncome?.[latestIndex] || 150000;\n\n      const baseInputs = {\n        currentRevenue: currentRevenue * 1000, // Convert from thousands to actual values\n        currentPrice: 100, // Default stock price for private company\n        sharesOutstanding: 1000000, // Default shares outstanding\n        currentOperatingIncome: currentOperatingIncome * 1000,\n        ...Object.fromEntries(\n          Object.entries(enabledDistributions).map(([key, dist]) => [\n            key,\n            dist.parameters.mean || dist.parameters.mode || (dist.parameters.min + dist.parameters.max) / 2\n          ])\n        )\n      };\n\n      const results = await monteCarloEngine.runDCFSimulation(\n        baseInputs,\n        enabledDistributions,\n        options\n      );\n\n      setSimulationResults(results);\n    } catch (error) {\n      console.error('Monte Carlo simulation failed:', error);\n      // Show error to user\n      alert(`Monte Carlo simulation failed: ${error.message}`);\n    } finally {\n      setIsRunning(false);\n      setProgress(0);\n    }\n  }, [distributions, simulationSettings, correlationMatrix, data]);\n\n  const stopSimulation = useCallback(() => {\n    monteCarloEngine.stopSimulation();\n    setIsRunning(false);\n  }, []);\n\n  const updateDistribution = useCallback((variable, updates) => {\n    setDistributions(prev => ({\n      ...prev,\n      [variable]: { ...prev[variable], ...updates }\n    }));\n  }, []);\n\n  const updateCorrelation = useCallback((i, j, value) => {\n    setCorrelationMatrix(prev => {\n      const newMatrix = prev.map(row => [...row]);\n      newMatrix[i][j] = value;\n      newMatrix[j][i] = value; // Keep matrix symmetric\n      return newMatrix;\n    });\n  }, []);\n\n  const generateHistogramData = useMemo(() => {\n    if (!simulationResults?.results) return [];\n\n    const values = simulationResults.results.map(r => r.pricePerShare);\n    const bins = 50;\n    const min = Math.min(...values);\n    const max = Math.max(...values);\n    const binWidth = (max - min) / bins;\n\n    const histogram = Array(bins).fill(0).map((_, i) => ({\n      bin: min + i * binWidth,\n      count: 0,\n      frequency: 0\n    }));\n\n    values.forEach(value => {\n      const binIndex = Math.min(Math.floor((value - min) / binWidth), bins - 1);\n      histogram[binIndex].count++;\n    });\n\n    histogram.forEach(bin => {\n      bin.frequency = bin.count / values.length;\n    });\n\n    return histogram;\n  }, [simulationResults]);\n\n  const generateScatterData = useMemo(() => {\n    if (!simulationResults?.results) return [];\n\n    return simulationResults.results.slice(0, 1000).map((result, _i) => ({\n      x: result.inputs.revenueGrowthRate * 100,\n      y: result.pricePerShare,\n      upside: result.upside\n    }));\n  }, [simulationResults]);\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  };\n\n  const _formatPercent = (value) => {\n    return `${(value * 100).toFixed(2)}%`;\n  };\n\n  const tabs = [\n    { id: 'setup', label: 'Setup', icon: Settings },\n    { id: 'run', label: 'Run Simulation', icon: Play },\n    { id: 'results', label: 'Results', icon: BarChart3 },\n    { id: 'analysis', label: 'Analysis', icon: TrendingUp }\n  ];\n\n  return (\n    <div className=\"bg-gray-800 rounded-lg border border-gray-700 p-6\">\n      <div className=\"mb-6\">\n        <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n          <h2 className=\"text-2xl font-bold text-white mb-2 flex items-center\">\n            <Zap className=\"inline-block mr-2\" />\n            Monte Carlo Simulation\n          </h2>\n          <p className=\"text-gray-400 text-sm\">\n            Advanced risk analysis using probabilistic modeling • Generate thousands of scenarios • Measure uncertainty\n          </p>\n        </motion.div>\n      </div>\n\n      <div className=\"mb-6\">\n        <div className=\"flex space-x-2\">\n          {tabs.map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`px-4 py-2 rounded-lg font-medium transition-colors flex items-center gap-2 ${\n                  activeTab === tab.id\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                }`}\n              >\n                <Icon size={16} />\n                {tab.label}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"mt-6\">\n        <AnimatePresence mode=\"wait\">\n          {activeTab === 'setup' && (\n            <motion.div\n              key=\"setup\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"space-y-6\">\n                <div className=\"bg-gray-700 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n                    🎛️ Simulation Settings\n                  </h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"iterations\" className=\"block text-sm font-medium text-gray-200\">Iterations</label>\n                      <input\n                        id=\"iterations\"\n                        type=\"number\"\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.iterations}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          iterations: parseInt(e.target.value)\n                        }))}\n                        min=\"1000\"\n                        max=\"100000\"\n                        step=\"1000\"\n                      />\n                      <small className=\"text-gray-400\">Leave empty for random</small>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"confidenceLevel\" className=\"block text-sm font-medium text-gray-200\">Confidence Level</label>\n                      <select\n                        id=\"confidenceLevel\"\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.confidenceLevel}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          confidenceLevel: parseFloat(e.target.value)\n                        }))}\n                      >\n                        <option value={0.90}>90%</option>\n                        <option value={0.95}>95%</option>\n                        <option value={0.99}>99%</option>\n                      </select>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"randomSeed\" className=\"block text-sm font-medium text-gray-200\">Random Seed (Optional)</label>\n                      <input\n                        id=\"randomSeed\"\n                        type=\"number\"\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        value={simulationSettings.randomSeed || ''}\n                        onChange={(e) => setSimulationSettings(prev => ({\n                          ...prev,\n                          randomSeed: e.target.value ? parseInt(e.target.value) : null\n                        }))}\n                        placeholder=\"Leave empty for random\"\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label className=\"flex items-center space-x-2 text-gray-200\">\n                        <input\n                          type=\"checkbox\"\n                          className=\"w-4 h-4 text-blue-600 bg-gray-800 border-gray-600 rounded focus:ring-blue-500\"\n                          checked={simulationSettings.enableCorrelation}\n                          onChange={(e) => setSimulationSettings(prev => ({\n                            ...prev,\n                            enableCorrelation: e.target.checked\n                          }))}\n                        />\n                        <span>Enable Variable Correlation</span>\n                      </label>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-gray-700 rounded-lg p-4\">\n                  <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\n                    📊 Variable Distributions\n                  </h3>\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                    {Object.entries(distributions).map(([variable, dist]) => (\n                      <div key={variable} className=\"bg-gray-800 border border-gray-600 rounded-lg p-4\">\n                        <div className=\"flex items-center justify-between mb-3\">\n                          <label className=\"flex items-center space-x-2 text-gray-200\">\n                            <input\n                              type=\"checkbox\"\n                              checked={dist.enabled}\n                              onChange={(e) => updateDistribution(variable, { enabled: e.target.checked })}\n                            />\n                            <span className=\"font-medium\">{dist.name}</span>\n                          </label>\n                        </div>\n\n                        {dist.enabled && (\n                          <div className=\"space-y-3\">\n                            <div className=\"space-y-2\">\n                              <label htmlFor=\"distributionType\" className=\"block text-sm font-medium text-gray-200\">Distribution Type</label>\n                              <select\n                                id=\"distributionType\"\n                                className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                                value={dist.type}\n                                onChange={(e) => {\n                                  const newType = e.target.value;\n                                  const _typeConfig = distributionTypes.find(t => t.value === newType);\n                                  const newParameters = {};\n\n                                  // Set default parameters for new type\n                                  if (newType === 'normal') {\n                                    newParameters.mean = 0.1;\n                                  } else if (newType === 'triangular') {\n                                    newParameters.min = 0.05;\n                                    newParameters.mode = 0.1;\n                                    newParameters.max = 0.15;\n                                  } else if (newType === 'uniform') {\n                                    newParameters.min = 0.05;\n                                    newParameters.max = 0.15;\n                                  }\n\n                                  updateDistribution(variable, { type: newType, parameters: newParameters });\n                                }}\n                              >\n                                {distributionTypes.map((type, _index) => (\n                                  <option key={type.value} value={type.value}>\n                                    {type.label}\n                                  </option>\n                                ))}\n                              </select>\n                            </div>\n\n                            <div className=\"grid grid-cols-2 gap-3\">\n                              {distributionTypes\n                                .find(t => t.value === dist.type)\n                                ?.parameters.map(param => (\n                                  <div key={param} className=\"space-y-1\">\n                                    <label className=\"block text-xs font-medium text-gray-300\">{param.charAt(0).toUpperCase() + param.slice(1)}</label>\n                                    <input\n                                      className=\"w-full px-2 py-1 bg-gray-700 border border-gray-600 rounded text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                                      type=\"number\"\n                                      value={dist.parameters[param] || ''}\n                                      onChange={(e) => updateDistribution(variable, {\n                                        parameters: {\n                                          ...dist.parameters,\n                                          [param]: parseFloat(e.target.value)\n                                        }\n                                      })}\n                                      step=\"0.001\"\n                                    />\n                                  </div>\n                                ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {simulationSettings.enableCorrelation && (\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">🔗 Correlation Matrix</h3>\n                    <div className=\"overflow-x-auto\">\n                      <table>\n                        <thead>\n                          <tr>\n                            <th />\n                            {Object.keys(distributions).map(variable => (\n                              <th key={variable}>{distributions[variable].name}</th>\n                            ))}\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.keys(distributions).map((variable, i) => (\n                            <tr key={variable}>\n                              <td className=\"font-medium text-gray-200 p-2 border border-gray-600\">\n                                {distributions.map((dist, _index) => (\n                                  <span key={_index}>{dist.name}</span>\n                                ))}\n                              </td>\n                              {Object.keys(distributions).map((_, j) => (\n                                <td key={j} className=\"p-2 border border-gray-600\">\n                                  <input\n                                    type=\"number\"\n                                    value={correlationMatrix[i][j]}\n                                    onChange={(e) => updateCorrelation(i, j, parseFloat(e.target.value))}\n                                    min=\"-1\"\n                                    max=\"1\"\n                                    step=\"0.1\"\n                                    disabled={i === j}\n                                    className=\"w-full px-2 py-1 bg-gray-800 border border-gray-600 rounded text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 disabled:bg-gray-700 disabled:text-gray-400\"\n                                  />\n                                </td>\n                              ))}\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'run' && (\n            <motion.div\n              key=\"run\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                  <h3>🚀 Simulation Control</h3>\n                  <div className=\"flex items-center space-x-2\">\n                    {!isRunning ? (\n                      <button\n                        onClick={runSimulation}\n                        className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\"\n                        disabled={Object.values(distributions).every(d => !d.enabled)}\n                      >\n                        <Play size={16} />\n                        <span>Run Simulation</span>\n                      </button>\n                    ) : (\n                      <button\n                        onClick={stopSimulation}\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\"\n                      >\n                        <Square size={16} />\n                        <span>Stop Simulation</span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n\n                {isRunning && (\n                  <div className=\"mt-4\">\n                    <div className=\"w-full bg-gray-700 rounded-full h-2 mb-2\">\n                      <div\n                        className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n                        style={{ width: `${progress}%` }}\n                      />\n                    </div>\n                    <div className=\"text-sm text-gray-400 text-center\">\n                      {progress.toFixed(1)}% Complete ({Math.floor(progress * simulationSettings.iterations / 100)} / {simulationSettings.iterations} iterations)\n                    </div>\n                  </div>\n                )}\n\n                <div className=\"bg-gray-800 rounded-lg p-4 mt-4\">\n                  <h4 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📋 Simulation Preview</h4>\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Iterations</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {simulationSettings.iterations.toLocaleString()}\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Variables</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {Object.values(distributions).filter(d => d.enabled).length}\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Confidence Level</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {(simulationSettings.confidenceLevel * 100).toFixed(0)}%\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-lg p-3 text-center\">\n                      <div className=\"text-sm text-gray-400 mb-1\">Correlation</div>\n                      <div className=\"text-xl font-bold text-white\">\n                        {simulationSettings.enableCorrelation ? 'Enabled' : 'Disabled'}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          )}\n\n          {activeTab === 'results' && (\n            <motion.div\n              key=\"results\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              {simulationResults ? (\n                <div className=\"space-y-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-xl font-semibold text-white flex items-center\">📊 Simulation Results</h3>\n                    <div className=\"flex items-center space-x-2\">\n                      <button className=\"bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\">\n                        <Download size={16} />\n                        Export Results\n                      </button>\n                      <button className=\"bg-gray-700 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium flex items-center space-x-2 transition-colors\">\n                        <FileText size={16} />\n                        Generate Report\n                      </button>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    {Object.entries(simulationResults.analysis.statistics).map(([metric, stats]) => (\n                      <div key={metric} className=\"bg-gray-700 rounded-lg p-4\">\n                        <h4 className=\"text-lg font-semibold text-white mb-3\">\n                          {metric === 'pricePerShare' ? '💰 Price per Share' :\n                            metric === 'enterpriseValue' ? '🏢 Enterprise Value' :\n                              '📈 Upside %'}\n                        </h4>\n                        <div className=\"text-2xl font-bold text-green-400 mb-2\">\n                          {metric === 'upside'\n                            ? `${stats.mean.toFixed(1)}%`\n                            : formatCurrency(stats.mean)\n                          }\n                        </div>\n                        <div className=\"space-y-1 text-sm text-gray-300\">\n                          <div>Median: {metric === 'upside' ? `${stats.median.toFixed(1)}%` : formatCurrency(stats.median)}</div>\n                          <div>Std Dev: {metric === 'upside' ? `${stats.stdDev.toFixed(1)}%` : formatCurrency(stats.stdDev)}</div>\n                          <div>Min: {metric === 'upside' ? `${stats.min.toFixed(1)}%` : formatCurrency(stats.min)}</div>\n                          <div>Max: {metric === 'upside' ? `${stats.max.toFixed(1)}%` : formatCurrency(stats.max)}</div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    <div className=\"bg-gray-700 rounded-lg p-4\">\n                      <h4>📊 Price Distribution</h4>\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <AreaChart data={generateHistogramData}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis\n                            dataKey=\"bin\"\n                            tickFormatter={formatCurrency}\n                          />\n                          <YAxis />\n                          <Tooltip\n                            formatter={(value, _name) => [\n                              `${(value * 100).toFixed(2)}%`,\n                              'Frequency'\n                            ]}\n                            labelFormatter={(value) => `Price: ${formatCurrency(value)}`}\n                          />\n                          <Area\n                            type=\"monotone\"\n                            dataKey=\"frequency\"\n                            stroke=\"#3B82F6\"\n                            fill=\"#3B82F6\"\n                            fillOpacity={0.6}\n                          />\n                        </AreaChart>\n                      </ResponsiveContainer>\n                    </div>\n\n                    <div className=\"bg-gray-700 rounded-lg p-4\">\n                      <h4>🎯 Sensitivity Scatter Plot</h4>\n                      <ResponsiveContainer width=\"100%\" height={300}>\n                        <ScatterChart data={generateScatterData}>\n                          <CartesianGrid strokeDasharray=\"3 3\" />\n                          <XAxis\n                            dataKey=\"x\"\n                            name=\"Revenue Growth Rate\"\n                            tickFormatter={(value) => `${value.toFixed(1)}%`}\n                          />\n                          <YAxis\n                            dataKey=\"y\"\n                            name=\"Price per Share\"\n                            tickFormatter={formatCurrency}\n                          />\n                          <Tooltip\n                            formatter={(value, name) => [\n                              name === 'Revenue Growth Rate' ? `${value.toFixed(2)}%` : formatCurrency(value),\n                              name\n                            ]}\n                          />\n                          <Scatter name=\"Scenarios\" fill=\"#10B981\">\n                            {generateScatterData.map((entry, index) => (\n                              <Cell\n                                key={`cell-${index}`}\n                                fill={entry.upside > 0 ? '#10B981' : '#EF4444'}\n                              />\n                            ))}\n                          </Scatter>\n                        </ScatterChart>\n                      </ResponsiveContainer>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n                  <AlertTriangle size={48} className=\"text-gray-400 mb-4\" />\n                  <h3 className=\"text-xl font-semibold text-white mb-2\">No Results Available</h3>\n                  <p className=\"text-gray-400\">Run a simulation to see results here.</p>\n                </div>\n              )}\n            </motion.div>\n          )}\n\n          {activeTab === 'analysis' && (\n            <motion.div\n              key=\"analysis\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n            >\n              {simulationResults?.analysis ? (\n                <div className=\"space-y-6\">\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">⚠️ Risk Metrics</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                      {Object.entries(simulationResults.analysis.riskMetrics).map(([metric, value]) => (\n                        <div key={metric} className=\"bg-gray-800 rounded-lg p-4 border border-gray-600\">\n                          <h4 className=\"text-sm font-medium text-gray-300 mb-2\">{metric === 'var95' ? 'Value at Risk (95%)' :\n                            metric === 'cvar95' ? 'Conditional VaR (95%)' :\n                              metric === 'probabilityOfLoss' ? 'Probability of Loss' :\n                                'Sharpe Ratio'}\n                          </h4>\n                          <div className=\"text-xl font-bold text-red-400 mb-1\">\n                            {metric === 'probabilityOfLoss' ? `${(value * 100).toFixed(1)}%` : formatCurrency(value)}\n                          </div>\n                          <div className=\"text-xs text-gray-400\">\n                            Risk measure\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📊 Confidence Intervals ({(simulationResults.analysis.confidenceIntervals.pricePerShare?.level * 100).toFixed(0)}%)</h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      {Object.entries(simulationResults.analysis.confidenceIntervals).map(([metric, interval]) => (\n                        <div key={metric} className=\"bg-gray-800 rounded-lg p-4 border border-gray-600\">\n                          <h4 className=\"text-lg font-semibold text-white mb-3\">{metric === 'pricePerShare' ? 'Price per Share' :\n                            metric === 'enterpriseValue' ? 'Enterprise Value' :\n                              'Upside %'}\n                          </h4>\n                          <div className=\"space-y-3\">\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Lower Bound:</span>\n                              <span className=\"font-medium text-white\">{metric === 'upside' ? `${interval.lowerBound.toFixed(1)}%` : formatCurrency(interval.lowerBound)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Upper Bound:</span>\n                              <span className=\"font-medium text-white\">{metric === 'upside' ? `${interval.upperBound.toFixed(1)}%` : formatCurrency(interval.upperBound)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"text-sm text-gray-400\">Width:</span>\n                              <span className=\"font-medium text-blue-400\">{metric === 'upside' ? `${interval.width.toFixed(1)}%` : formatCurrency(interval.width)}</span>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"bg-gray-700 rounded-lg p-4\">\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">📊 Percentile Analysis</h3>\n                    <div className=\"overflow-x-auto\">\n                      <table className=\"w-full\">\n                        <thead>\n                          <tr className=\"border-b border-gray-600\">\n                            <th className=\"text-left p-3 text-sm font-medium text-gray-300\">Metric</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">5th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">25th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">50th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">75th %ile</th>\n                            <th className=\"text-right p-3 text-sm font-medium text-gray-300\">95th %ile</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {Object.entries(simulationResults.analysis.percentiles).map(([metric, percentiles]) => (\n                            <tr key={metric} className=\"border-b border-gray-600\">\n                              <td className=\"p-3 text-sm text-white\">{metric === 'pricePerShare' ? 'Price per Share' :\n                                metric === 'enterpriseValue' ? 'Enterprise Value' :\n                                  'Upside %'}\n                              </td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p5.toFixed(1)}%` : formatCurrency(percentiles.p5)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p25.toFixed(1)}%` : formatCurrency(percentiles.p25)}</td>\n                              <td className=\"p-3 text-sm text-right text-blue-400 font-medium\">{metric === 'upside' ? `${percentiles.p50.toFixed(1)}%` : formatCurrency(percentiles.p50)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p75.toFixed(1)}%` : formatCurrency(percentiles.p75)}</td>\n                              <td className=\"p-3 text-sm text-right text-gray-300\">{metric === 'upside' ? `${percentiles.p95.toFixed(1)}%` : formatCurrency(percentiles.p95)}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n                  <AlertTriangle size={48} className=\"text-gray-400 mb-4\" />\n                  <h3 className=\"text-xl font-semibold text-white mb-2\">No Analysis Available</h3>\n                  <p className=\"text-gray-400\">Run a simulation to see analysis here.</p>\n                </div>\n              )}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\nexport default MonteCarloSimulation;\n","import { motion } from 'framer-motion';\nimport {\n  TrendingUp,\n  TrendingDown,\n  BarChart3,\n  Plus,\n  Minus,\n  Trash2\n} from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst ScenarioModeling = ({ data, modelInputs, onModelInputChange, calculateDCF, formatCurrency, formatPercent }) => {\n  const [showAddForm, setShowAddForm] = useState(false);\n\n  const scenarios = modelInputs.scenario?.scenarios || [];\n\n  // Calculate DCF for each scenario\n  const scenarioResults = useMemo(() => {\n    return scenarios.map(scenario => {\n      try {\n        // Apply scenario assumptions to base DCF calculation\n        const incomeStatement = { ...data.statements.incomeStatement };\n\n        // Apply revenue growth to revenue data (object format)\n        const baseRevenue = incomeStatement.totalRevenue || {};\n        const modifiedRevenue = {};\n        Object.keys(baseRevenue).forEach(periodIndex => {\n          const index = parseInt(periodIndex);\n          if (index === 0) {\n            modifiedRevenue[periodIndex] = baseRevenue[periodIndex]; // Base year unchanged\n          } else {\n            // Apply revenue growth for projection years\n            const growthRate = 1 + (scenario.revenueGrowth / 100);\n            modifiedRevenue[periodIndex] = baseRevenue[0] * Math.pow(growthRate, index);\n          }\n        });\n\n        // Apply margin improvement to operating income\n        const baseOperating = incomeStatement.operatingIncome || {};\n        const modifiedOperating = {};\n        Object.keys(baseOperating).forEach(periodIndex => {\n          const index = parseInt(periodIndex);\n          if (index === 0) {\n            modifiedOperating[periodIndex] = baseOperating[periodIndex]; // Base year unchanged\n          } else {\n            // Apply margin improvement\n            const baseRevenueValue = baseRevenue[periodIndex] || 0;\n            const scenarioRevenue = modifiedRevenue[periodIndex] || 0;\n            const baseIncome = baseOperating[periodIndex] || 0;\n\n            if (baseRevenueValue > 0) {\n              const baseMargin = baseIncome / baseRevenueValue;\n              const adjustedMargin = baseMargin + (scenario.marginImprovement / 100);\n              modifiedOperating[periodIndex] = scenarioRevenue * adjustedMargin;\n            } else {\n              modifiedOperating[periodIndex] = baseIncome;\n            }\n          }\n        });\n\n        const scenarioData = {\n          ...data,\n          statements: {\n            ...data.statements,\n            incomeStatement: {\n              ...incomeStatement,\n              totalRevenue: modifiedRevenue,\n              operatingIncome: modifiedOperating\n            }\n          }\n        };\n\n        // Calculate DCF with scenario data\n        const dcfResult = calculateDCF(scenarioData);\n\n        return {\n          ...scenario,\n          ...dcfResult,\n          weightedValue: dcfResult.enterpriseValue * (scenario.probability / 100)\n        };\n      } catch (error) {\n        console.error('Scenario calculation error:', error);\n        return {\n          ...scenario,\n          enterpriseValue: 0,\n          equityValue: 0,\n          weightedValue: 0\n        };\n      }\n    });\n  }, [scenarios, data, calculateDCF]);\n\n  // Calculate probability-weighted average\n  const weightedAverageValue = scenarioResults.reduce((sum, result) => sum + result.weightedValue, 0);\n\n  const addScenario = () => {\n    const newScenario = {\n      name: `Scenario ${scenarios.length + 1}`,\n      probability: Math.max(0, 100 - scenarios.reduce((sum, s) => sum + s.probability, 0)),\n      revenueGrowth: 10,\n      marginImprovement: 0\n    };\n\n    onModelInputChange('scenario', 'scenarios', [...scenarios, newScenario]);\n    setShowAddForm(false);\n  };\n\n  const updateScenario = (index, field, value) => {\n    const updatedScenarios = scenarios.map((scenario, i) =>\n      i === index ? { ...scenario, [field]: value } : scenario\n    );\n    onModelInputChange('scenario', 'scenarios', updatedScenarios);\n  };\n\n  const deleteScenario = (index) => {\n    const updatedScenarios = scenarios.filter((_, i) => i !== index);\n    onModelInputChange('scenario', 'scenarios', updatedScenarios);\n  };\n\n  const ScenarioForm = ({ scenario, index }) => (\n    <div className=\"border rounded-lg p-4 bg-white\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <div>\n          <label htmlFor={`scenario-name-${index}`} className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Scenario Name\n          </label>\n          <input\n            id={`scenario-name-${index}`}\n            type=\"text\"\n            value={scenario.name}\n            onChange={(e) => updateScenario(index, 'name', e.target.value)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"Enter scenario name\"\n          />\n        </div>\n\n        <div>\n          <label htmlFor={`scenario-probability-${index}`} className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Probability (%)\n          </label>\n          <input\n            id={`scenario-probability-${index}`}\n            type=\"number\"\n            min=\"0\"\n            max=\"100\"\n            value={scenario.probability}\n            onChange={(e) => updateScenario(index, 'probability', parseInt(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label htmlFor={`scenario-revenueGrowth-${index}`} className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Revenue Growth (%)\n          </label>\n          <input\n            id={`scenario-revenueGrowth-${index}`}\n            type=\"number\"\n            step=\"0.1\"\n            value={scenario.revenueGrowth}\n            onChange={(e) => updateScenario(index, 'revenueGrowth', parseFloat(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        <div>\n          <label htmlFor={`scenario-marginImprovement-${index}`} className=\"block text-sm font-medium text-gray-700 mb-1\">\n            Margin Change (%)\n          </label>\n          <input\n            id={`scenario-marginImprovement-${index}`}\n            type=\"number\"\n            step=\"0.1\"\n            value={scenario.marginImprovement}\n            onChange={(e) => updateScenario(index, 'marginImprovement', parseFloat(e.target.value) || 0)}\n            className=\"w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n      </div>\n\n      <div className=\"flex justify-end mt-4 gap-2\">\n        <button\n          onClick={() => deleteScenario(index)}\n          className=\"px-3 py-1 text-red-600 hover:bg-red-50 rounded-lg transition-colors flex items-center gap-1\"\n        >\n          <Trash2 size={16} />\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with Add Button */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <p className=\"text-gray-600\">\n            Create and compare multiple financial scenarios with different assumptions and probabilities.\n          </p>\n        </div>\n        <button\n          onClick={() => setShowAddForm(true)}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2\"\n        >\n          <Plus size={16} />\n          Add Scenario\n        </button>\n      </div>\n\n      {/* Scenario Management */}\n      <div className=\"space-y-4\">\n        <h4 className=\"font-semibold text-lg\">Scenario Assumptions</h4>\n\n        {scenarios.map((scenario, index) => (\n          <ScenarioForm key={index} scenario={scenario} index={index} />\n        ))}\n\n        {showAddForm && (\n          <div className=\"border-2 border-dashed border-blue-300 rounded-lg p-4\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h5 className=\"font-medium\">Add New Scenario</h5>\n              <div className=\"flex gap-2\">\n                <button\n                  onClick={addScenario}\n                  className=\"px-3 py-1 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n                >\n                  Add\n                </button>\n                <button\n                  onClick={() => setShowAddForm(false)}\n                  className=\"px-3 py-1 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Results Display */}\n      {scenarioResults.length > 0 && (\n        <div className=\"space-y-6\">\n          <h4 className=\"font-semibold text-lg\">Scenario Analysis Results</h4>\n\n          {/* Probability-Weighted Summary */}\n          <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6 border border-blue-200\">\n            <div className=\"flex items-center gap-2 mb-4\">\n              <BarChart3 size={20} className=\"text-blue-600\" />\n              <h5 className=\"font-semibold text-blue-800\">Probability-Weighted Valuation</h5>\n            </div>\n            <div className=\"text-3xl font-bold text-blue-800\">\n              {formatCurrency(weightedAverageValue)}\n            </div>\n            <p className=\"text-sm text-blue-600 mt-2\">\n              Expected value based on scenario probabilities\n            </p>\n          </div>\n\n          {/* Individual Scenario Results */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">\n            {scenarioResults.map((result, index) => (\n              <motion.div\n                key={index}\n                className=\"bg-white rounded-lg border p-4 hover:shadow-lg transition-shadow\"\n                whileHover={{ y: -2 }}\n              >\n                <div className=\"flex items-start justify-between mb-3\">\n                  <div>\n                    <h6 className=\"font-semibold text-gray-800\">{result.name}</h6>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span>{result.probability}% probability</span>\n                      {result.revenueGrowth > 15 ?\n                        <TrendingUp size={14} className=\"text-green-500\" /> :\n                        result.revenueGrowth < 5 ?\n                          <TrendingDown size={14} className=\"text-red-500\" /> :\n                          <Minus size={14} className=\"text-gray-500\" />\n                      }\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"space-y-3\">\n                  <div className=\"p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"text-sm text-gray-600\">Enterprise Value</div>\n                    <div className=\"text-xl font-bold text-gray-800\">\n                      {formatCurrency(result.enterpriseValue)}\n                    </div>\n                  </div>\n\n                  <div className=\"text-xs space-y-1 text-gray-600\">\n                    <div className=\"flex justify-between\">\n                      <span>Revenue Growth:</span>\n                      <span className=\"font-medium\">{formatPercent(result.revenueGrowth)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Margin Change:</span>\n                      <span className={`font-medium ${result.marginImprovement >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {result.marginImprovement >= 0 ? '+' : ''}{formatPercent(result.marginImprovement)}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Weighted Value:</span>\n                      <span className=\"font-medium\">{formatCurrency(result.weightedValue)}</span>\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n\n          {/* Summary Statistics */}\n          <div className=\"bg-white rounded-lg border p-6\">\n            <h5 className=\"font-semibold mb-4\">Scenario Statistics</h5>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {formatCurrency(Math.max(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Best Case</div>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-red-600\">\n                  {formatCurrency(Math.min(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Worst Case</div>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  {formatCurrency(weightedAverageValue)}\n                </div>\n                <div className=\"text-sm text-gray-600\">Expected Value</div>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-gray-800\">\n                  {formatCurrency(Math.max(...scenarioResults.map(r => r.enterpriseValue)) - Math.min(...scenarioResults.map(r => r.enterpriseValue)))}\n                </div>\n                <div className=\"text-sm text-gray-600\">Value Range</div>\n              </div>\n            </div>\n\n            <div className=\"mt-4 pt-4 border-t\">\n              <div className=\"text-sm text-gray-600\">\n                <strong>Total Probability:</strong> {scenarios.reduce((sum, s) => sum + s.probability, 0)}%\n                {scenarios.reduce((sum, s) => sum + s.probability, 0) !== 100 && (\n                  <span className=\"text-orange-600 ml-2\">⚠ Probabilities should sum to 100%</span>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {scenarios.length === 0 && (\n        <div className=\"text-center py-12 text-gray-500\">\n          <BarChart3 size={48} className=\"mx-auto mb-4 opacity-50\" />\n          <p>No scenarios created yet.</p>\n          <p className=\"text-sm mt-2\">Click &ldquo;Add Scenario&rdquo; to get started with scenario modeling.</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ScenarioModeling;\n","import { Activity, Settings, BarChart3, Plus, Minus } from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nconst SensitivityAnalysis = ({ data, modelInputs, onModelInputChange, calculateDCF, formatCurrency, _formatPercent }) => {\n  const [selectedVariable, _setSelectedVariable] = useState(null);\n\n  const sensitivityConfig = modelInputs.sensitivity || {\n    variables: ['revenue', 'grossMargin', 'discountRate'],\n    ranges: {\n      revenue: { min: -20, max: 20 },\n      grossMargin: { min: -5, max: 5 },\n      discountRate: { min: 8, max: 15 }\n    }\n  };\n\n  // Variable definitions with display names and units\n  const variableDefinitions = {\n    revenue: {\n      name: 'Revenue Growth',\n      unit: '%',\n      description: 'Annual revenue growth rate',\n      baseValue: 15,\n      isPercentage: true\n    },\n    grossMargin: {\n      name: 'Gross Margin',\n      unit: '%',\n      description: 'Gross profit margin improvement',\n      baseValue: 45,\n      isPercentage: true\n    },\n    discountRate: {\n      name: 'Discount Rate (WACC)',\n      unit: '%',\n      description: 'Weighted average cost of capital',\n      baseValue: modelInputs.dcf?.discountRate || 10,\n      isPercentage: true\n    },\n    terminalGrowthRate: {\n      name: 'Terminal Growth Rate',\n      unit: '%',\n      description: 'Long-term growth rate assumption',\n      baseValue: modelInputs.dcf?.terminalGrowthRate || 2.5,\n      isPercentage: true\n    },\n    taxRate: {\n      name: 'Tax Rate',\n      unit: '%',\n      description: 'Corporate tax rate',\n      baseValue: modelInputs.dcf?.taxRate || 25,\n      isPercentage: true\n    }\n  };\n\n  // Calculate base case valuation\n  const baseValuation = useMemo(() => {\n    return calculateDCF();\n  }, [data, modelInputs, calculateDCF]);\n\n  // Generate sensitivity analysis data\n  const sensitivityResults = useMemo(() => {\n    const results = {};\n\n    sensitivityConfig.variables.forEach(variable => {\n      const range = sensitivityConfig.ranges[variable];\n      const variableDef = variableDefinitions[variable];\n\n      if (!range || !variableDef) return;\n\n      const steps = 9; // Number of data points\n      const stepSize = (range.max - range.min) / (steps - 1);\n      const dataPoints = [];\n\n      for (let i = 0; i < steps; i++) {\n        const value = range.min + (stepSize * i);\n\n        // Create modified DCF inputs based on variable type\n        let modifiedData = { ...data };\n        const dcfInputs = {\n          ...modelInputs.dcf,\n          [variable]: variableDef.isPercentage ? value : value\n        };\n\n        // For revenue and margin variables, we need to simulate the impact\n        if (variable === 'revenue' || variable === 'grossMargin') {\n          // Create a copy of the income statement with modified values\n          const incomeStatement = { ...data.statements.incomeStatement };\n\n          if (variable === 'revenue') {\n            // Apply revenue growth change across periods\n            const baseRevenue = incomeStatement.totalRevenue || {};\n            const modifiedRevenue = {};\n\n            Object.keys(baseRevenue).forEach(periodIndex => {\n              const index = parseInt(periodIndex);\n              if (index === 0) {\n                modifiedRevenue[periodIndex] = baseRevenue[periodIndex];\n              } else {\n                const growthRate = 1 + (value / 100);\n                modifiedRevenue[periodIndex] = baseRevenue[0] * Math.pow(growthRate, index);\n              }\n            });\n\n            incomeStatement.totalRevenue = modifiedRevenue;\n          }\n\n          if (variable === 'grossMargin') {\n            // Apply margin change to operating income\n            const baseOperating = incomeStatement.operatingIncome || {};\n            const baseRevenue = incomeStatement.totalRevenue || {};\n            const modifiedOperating = {};\n\n            Object.keys(baseOperating).forEach(periodIndex => {\n              const revenue = baseRevenue[periodIndex] || 0;\n              const originalIncome = baseOperating[periodIndex] || 0;\n              if (revenue > 0) {\n                const baseMargin = originalIncome / revenue;\n                const adjustedMargin = baseMargin + (value / 100);\n                modifiedOperating[periodIndex] = revenue * adjustedMargin;\n              } else {\n                modifiedOperating[periodIndex] = originalIncome;\n              }\n            });\n\n            incomeStatement.operatingIncome = modifiedOperating;\n          }\n\n          modifiedData = {\n            ...data,\n            statements: {\n              ...data.statements,\n              incomeStatement\n            }\n          };\n        }\n\n        // Use a temporary calculateDCF with modified inputs\n        const tempCalculateDCF = () => {\n          try {\n            const dcfParams = {\n              discountRate: dcfInputs.discountRate || 10,\n              terminalGrowthRate: dcfInputs.terminalGrowthRate || 2.5,\n              projectionYears: dcfInputs.projectionYears || 5,\n              taxRate: dcfInputs.taxRate || 25\n            };\n\n            const sourceData = modifiedData;\n            const operatingIncomeData = sourceData.statements.incomeStatement.operatingIncome || {};\n\n            // Extract operating incomes from object structure\n            const operatingIncomes = [];\n            Object.keys(operatingIncomeData).forEach(periodKey => {\n              const index = parseInt(periodKey);\n              if (index >= 0) {\n                operatingIncomes.push(operatingIncomeData[periodKey] || 0);\n              }\n            });\n\n            if (operatingIncomes.length === 0) return { enterpriseValue: 0, equityValue: 0 };\n\n            let presentValue = 0;\n            const discountFactor = 1 + (dcfParams.discountRate / 100);\n\n            // Use available periods for projections\n            operatingIncomes.forEach((income, index) => {\n              if (index > 0 && index <= dcfParams.projectionYears) {\n                const afterTaxIncome = income * (1 - dcfParams.taxRate / 100);\n                const pv = afterTaxIncome / Math.pow(discountFactor, index);\n                presentValue += pv;\n              }\n            });\n\n            const lastYearIncome = operatingIncomes[operatingIncomes.length - 1] || 0;\n            const terminalCashFlow = lastYearIncome * (1 + dcfParams.terminalGrowthRate / 100) * (1 - dcfParams.taxRate / 100);\n            const terminalValue = terminalCashFlow / ((dcfParams.discountRate - dcfParams.terminalGrowthRate) / 100);\n            const presentTerminalValue = terminalValue / Math.pow(discountFactor, dcfParams.projectionYears);\n\n            const enterpriseValue = presentValue + presentTerminalValue;\n\n            return {\n              enterpriseValue,\n              equityValue: enterpriseValue,\n              presentValueOperations: presentValue,\n              presentValueTerminal: presentTerminalValue,\n              terminalValue\n            };\n          } catch (error) {\n            console.error('DCF calculation error:', error);\n            return { enterpriseValue: 0, equityValue: 0 };\n          }\n        };\n\n        const result = tempCalculateDCF();\n\n        dataPoints.push({\n          variable: value,\n          valuation: result.enterpriseValue,\n          changeFromBase: ((result.enterpriseValue - baseValuation.enterpriseValue) / baseValuation.enterpriseValue) * 100\n        });\n      }\n\n      results[variable] = {\n        definition: variableDef,\n        range,\n        dataPoints\n      };\n    });\n\n    return results;\n  }, [data, modelInputs, sensitivityConfig, baseValuation, calculateDCF]);\n\n  // Tornado chart data (impact ranking)\n  const tornadoData = useMemo(() => {\n    return Object.entries(sensitivityResults).map(([variable, result]) => {\n      const maxImpact = Math.max(...result.dataPoints.map(d => Math.abs(d.changeFromBase)));\n      return {\n        variable,\n        definition: result.definition,\n        maxImpact,\n        positiveImpact: Math.max(...result.dataPoints.map(d => d.changeFromBase)),\n        negativeImpact: Math.min(...result.dataPoints.map(d => d.changeFromBase))\n      };\n    }).sort((a, b) => b.maxImpact - a.maxImpact);\n  }, [sensitivityResults]);\n\n  const updateSensitivityRange = (variable, field, value) => {\n    const updatedRanges = {\n      ...sensitivityConfig.ranges,\n      [variable]: {\n        ...sensitivityConfig.ranges[variable],\n        [field]: parseFloat(value)\n      }\n    };\n    onModelInputChange('sensitivity', 'ranges', updatedRanges);\n  };\n\n  const addVariable = (variableName) => {\n    if (!sensitivityConfig.variables.includes(variableName) && variableDefinitions[variableName]) {\n      const updatedVariables = [...sensitivityConfig.variables, variableName];\n      const updatedRanges = {\n        ...sensitivityConfig.ranges,\n        [variableName]: { min: -10, max: 10 }\n      };\n      onModelInputChange('sensitivity', 'variables', updatedVariables);\n      onModelInputChange('sensitivity', 'ranges', updatedRanges);\n    }\n  };\n\n  const removeVariable = (variableName) => {\n    const updatedVariables = sensitivityConfig.variables.filter(v => v !== variableName);\n    const { [variableName]: _removed, ...updatedRanges } = sensitivityConfig.ranges;\n    onModelInputChange('sensitivity', 'variables', updatedVariables);\n    onModelInputChange('sensitivity', 'ranges', updatedRanges);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <p className=\"text-gray-600 mb-4\">\n            Analyze how changes in key variables impact enterprise valuation.\n            Higher sensitivity indicates greater risk and importance for due diligence.\n          </p>\n          <div className=\"flex items-center gap-4 text-sm\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 bg-blue-500 rounded\" />\n              <span>Base Case: {formatCurrency(baseValuation.enterpriseValue)}</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Activity size={14} />\n              <span>{sensitivityConfig.variables.length} variables analyzed</span>\n            </div>\n          </div>\n        </div>\n        <button\n          className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors flex items-center gap-2\"\n        >\n          <Settings size={16} />\n          Configure\n        </button>\n      </div>\n\n      {/* Tornado Chart */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <h4 className=\"font-semibold text-lg mb-4 flex items-center gap-2\">\n          <BarChart3 size={20} />\n          Impact Ranking (Tornado Chart)\n        </h4>\n\n        <div className=\"space-y-3\">\n          {tornadoData.map((item, index) => (\n            <div key={item.variable} className=\"relative\">\n              <div className=\"flex items-center justify-between mb-1\">\n                <span className=\"text-sm font-medium\">{index + 1}. {item.definition.name}</span>\n                <span className=\"text-xs text-gray-500\">±{item.maxImpact.toFixed(1)}%</span>\n              </div>\n\n              <div className=\"relative h-8 bg-gray-100 rounded\">\n                {/* Negative impact bar */}\n                <div\n                  className=\"absolute left-1/2 h-full bg-red-400 rounded-l\"\n                  style={{\n                    width: `${Math.abs(item.negativeImpact) / Math.max(Math.abs(item.negativeImpact), item.positiveImpact) * 50}%`,\n                    transform: 'translateX(-100%)'\n                  }}\n                />\n\n                {/* Positive impact bar */}\n                <div\n                  className=\"absolute left-1/2 h-full bg-green-400 rounded-r\"\n                  style={{\n                    width: `${item.positiveImpact / Math.max(Math.abs(item.negativeImpact), item.positiveImpact) * 50}%`\n                  }}\n                />\n\n                {/* Center line */}\n                <div className=\"absolute left-1/2 top-0 bottom-0 w-0.5 bg-gray-400 transform -translate-x-0.5\" />\n\n                {/* Labels */}\n                <div className=\"absolute inset-0 flex items-center justify-between px-2 text-xs font-medium text-white\">\n                  <span>{item.negativeImpact.toFixed(1)}%</span>\n                  <span>+{item.positiveImpact.toFixed(1)}%</span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Variable Configuration */}\n      <div className=\"bg-white rounded-lg border p-6\">\n        <h4 className=\"font-semibold text-lg mb-4\">Variable Configuration</h4>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {sensitivityConfig.variables.map(variable => {\n            const result = sensitivityResults[variable];\n            if (!result) return null;\n\n            return (\n              <div key={variable} className=\"border rounded-lg p-4\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div>\n                    <h6 className=\"font-medium\">{result.definition.name}</h6>\n                    <p className=\"text-xs text-gray-500\">{result.definition.description}</p>\n                  </div>\n                  <button\n                    onClick={() => removeVariable(variable)}\n                    className=\"text-red-500 hover:bg-red-50 p-1 rounded\"\n                  >\n                    <Minus size={16} />\n                  </button>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-3 mb-3\">\n                  <div>\n                    <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                      Min Value ({result.definition.unit})\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={result.range.min}\n                      onChange={(e) => updateSensitivityRange(variable, 'min', e.target.value)}\n                      className=\"w-full px-2 py-1 border rounded text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-xs font-medium text-gray-700 mb-1\">\n                      Max Value ({result.definition.unit})\n                    </label>\n                    <input\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={result.range.max}\n                      onChange={(e) => updateSensitivityRange(variable, 'max', e.target.value)}\n                      className=\"w-full px-2 py-1 border rounded text-sm focus:outline-none focus:ring-1 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n\n                {/* Mini chart */}\n                <div className=\"h-16 bg-gray-50 rounded p-2\">\n                  <div className=\"text-xs text-gray-500 mb-1\">Valuation Sensitivity</div>\n                  <div className=\"flex items-end justify-between h-8\">\n                    {result.dataPoints.map((point, index) => (\n                      <div\n                        key={index}\n                        className={`w-1 rounded-t ${\n                          point.changeFromBase > 0 ? 'bg-green-400' :\n                            point.changeFromBase < 0 ? 'bg-red-400' : 'bg-blue-400'\n                        }`}\n                        style={{\n                          height: `${Math.abs(point.changeFromBase) / 50 * 100}%`,\n                          minHeight: '2px'\n                        }}\n                        title={`${point.variable}${result.definition.unit}: ${formatCurrency(point.valuation)}`}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n\n          {/* Add Variable */}\n          <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 flex items-center justify-center\">\n            <div className=\"text-center\">\n              <Plus size={24} className=\"mx-auto mb-2 text-gray-400\" />\n              <p className=\"text-sm text-gray-500 mb-3\">Add Variable</p>\n              <div className=\"space-y-2\">\n                {Object.keys(variableDefinitions)\n                  .filter(v => !sensitivityConfig.variables.includes(v))\n                  .map(variable => (\n                    <button\n                      key={variable}\n                      onClick={() => addVariable(variable)}\n                      className=\"block w-full px-3 py-1 text-xs bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors\"\n                    >\n                      {variableDefinitions[variable].name}\n                    </button>\n                  ))\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Detailed Analysis */}\n      {selectedVariable && sensitivityResults[selectedVariable] && (\n        <div className=\"bg-white rounded-lg border p-6\">\n          <h4 className=\"font-semibold text-lg mb-4\">\n            Detailed Analysis: {sensitivityResults[selectedVariable].definition.name}\n          </h4>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <div>\n              <h6 className=\"font-medium mb-3\">Data Points</h6>\n              <div className=\"space-y-2 max-h-64 overflow-y-auto\">\n                {sensitivityResults[selectedVariable].dataPoints.map((point, index) => (\n                  <div key={index} className=\"flex justify-between items-center text-sm p-2 bg-gray-50 rounded\">\n                    <span>{point.variable}{sensitivityResults[selectedVariable].definition.unit}</span>\n                    <span className=\"font-medium\">{formatCurrency(point.valuation)}</span>\n                    <span\n                      className={`font-medium ${\n                        point.changeFromBase > 0 ? 'text-green-600' :\n                          point.changeFromBase < 0 ? 'text-red-600' : 'text-gray-600'\n                      }`}\n                    >\n                      {point.changeFromBase > 0 ? '+' : ''}{point.changeFromBase.toFixed(1)}%\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div>\n              <h6 className=\"font-medium mb-3\">Key Statistics</h6>\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Range Impact:</span>\n                  <span className=\"font-medium\">\n                    ±{Math.max(...sensitivityResults[selectedVariable].dataPoints.map(d => Math.abs(d.changeFromBase))).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Max Upside:</span>\n                  <span className=\"font-medium text-green-600\">\n                    +{Math.max(...sensitivityResults[selectedVariable].dataPoints.map(d => d.changeFromBase)).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Max Downside:</span>\n                  <span className=\"font-medium text-red-600\">\n                    {Math.min(...sensitivityResults[selectedVariable].dataPoints.map(d => d.changeFromBase)).toFixed(1)}%\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SensitivityAnalysis;\n","import {\n  DollarSign,\n  Target,\n  Activity,\n  BarChart3,\n  Users,\n  Zap\n} from 'lucide-react';\nimport React, { useState, useMemo } from 'react';\n\nimport AdvancedDCF from './AdvancedDCF.jsx';\nimport ComparableAnalysis from './ComparableAnalysis.jsx';\nimport MonteCarloSimulation from './MonteCarloSimulation.jsx';\nimport ScenarioModeling from './ScenarioModeling.jsx';\nimport SensitivityAnalysis from './SensitivityAnalysis.jsx';\n\n// Add contextual integration points for Advanced Analytics\nconst AdvancedAnalyticsIntegration = ({ onOpenOptions, onOpenBonds, onOpenCredit }) => (\n  <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4\">\n    <h4 className=\"font-semibold text-blue-900 mb-2\">Advanced Analytics Tools</h4>\n    <p className=\"text-sm text-blue-700 mb-3\">\n      Send your current analysis assumptions to advanced pricing models:\n    </p>\n    <div className=\"flex flex-wrap gap-2\">\n      <button\n        onClick={onOpenOptions}\n        className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700 transition-colors\"\n      >\n        Options Pricer\n      </button>\n      <button\n        onClick={onOpenBonds}\n        className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700 transition-colors\"\n      >\n        Bond Analytics\n      </button>\n      <button\n        onClick={onOpenCredit}\n        className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700 transition-colors\"\n      >\n        Credit Modeling\n      </button>\n    </div>\n  </div>\n);\n\nconst ModelingTools = ({ data, adjustedValues, onDataChange }) => {\n  const [activeModel, setActiveModel] = useState('dcf');\n\n  // Handlers for Advanced Analytics integration\n  const handleOpenOptions = () => {\n    window.dispatchEvent(new CustomEvent('open-options-pricer'));\n  };\n\n  const handleOpenBonds = () => {\n    window.dispatchEvent(new CustomEvent('open-bond-analytics'));\n  };\n\n  const handleOpenCredit = () => {\n    window.dispatchEvent(new CustomEvent('open-credit-modeling'));\n  };\n  const [modelInputs, setModelInputs] = useState({\n    dcf: {\n      discountRate: 10,\n      terminalGrowthRate: 2.5,\n      projectionYears: 5,\n      terminalValueMultiple: 10,\n      taxRate: 25,\n      sharesOutstanding: 1000,\n      workingCapital: {\n        receivablesDays: 45,\n        inventoryDays: 60,\n        payablesDays: 30,\n        receivablesGrowth: 2,\n        inventoryGrowth: 1.5,\n        payablesGrowth: 1.8\n      },\n      capex: {\n        capexAsPercentOfRevenue: 3.5,\n        depreciationRate: 7,\n        maintenanceCapex: 2.0\n      }\n    },\n    ratios: {\n      compareToIndustry: true,\n      industryAverages: {\n        grossMargin: 45,\n        operatingMargin: 15,\n        netMargin: 8,\n        currentRatio: 2.1,\n        debtToEquity: 0.5\n      }\n    },\n    sensitivity: {\n      variables: ['revenue', 'grossMargin', 'discountRate'],\n      ranges: {\n        revenue: { min: -20, max: 20 },\n        grossMargin: { min: -5, max: 5 },\n        discountRate: { min: 8, max: 15 }\n      }\n    },\n    scenario: {\n      scenarios: [\n        { name: 'Base Case', probability: 50, revenueGrowth: 15, marginImprovement: 0 },\n        { name: 'Bull Case', probability: 25, revenueGrowth: 25, marginImprovement: 2 },\n        { name: 'Bear Case', probability: 25, revenueGrowth: 5, marginImprovement: -2 }\n      ]\n    }\n  });\n\n  // Calculate financial metrics from the spreadsheet data\n  const calculatedMetrics = useMemo(() => {\n    const statements = data.statements.incomeStatement;\n    const periods = data.periods;\n\n    const metrics = {\n      revenue: [],\n      grossProfit: [],\n      operatingIncome: [],\n      margins: {\n        gross: [],\n        operating: [],\n        net: []\n      },\n      growth: {\n        revenue: [],\n        operating: []\n      }\n    };\n\n    periods.forEach((_, index) => {\n      // Revenue metrics - Use adjusted values for latest period when available\n      const isLatestPeriod = index === periods.length - 1;\n      const revenue = isLatestPeriod && adjustedValues?.totalRevenue\n        ? adjustedValues.totalRevenue\n        : statements.totalRevenue?.[index] || 0;\n      const totalCOGS = isLatestPeriod && adjustedValues?.totalCostOfGoodsSold\n        ? adjustedValues.totalCostOfGoodsSold\n        : statements.totalCostOfGoodsSold?.[index] || 0;\n      const grossProfit = isLatestPeriod && adjustedValues?.grossProfit\n        ? adjustedValues.grossProfit\n        : statements.grossProfit?.[index] || (revenue - totalCOGS);\n      const operatingIncome = isLatestPeriod && adjustedValues?.operatingIncome\n        ? adjustedValues.operatingIncome\n        : statements.operatingIncome?.[index] || 0;\n\n      metrics.revenue.push(revenue);\n      metrics.grossProfit.push(grossProfit);\n      metrics.operatingIncome.push(operatingIncome);\n\n      // Margin calculations\n      metrics.margins.gross.push(revenue ? (grossProfit / revenue) * 100 : 0);\n      metrics.margins.operating.push(revenue ? (operatingIncome / revenue) * 100 : 0);\n\n      // Growth calculations\n      if (index > 0) {\n        const prevRevenue = statements.totalRevenue?.[index - 1] || 0;\n        const prevOperating = statements.operatingIncome?.[index - 1] || 0;\n\n        metrics.growth.revenue.push(prevRevenue ? ((revenue - prevRevenue) / prevRevenue) * 100 : 0);\n        metrics.growth.operating.push(prevOperating ? ((operatingIncome - prevOperating) / prevOperating) * 100 : 0);\n      }\n    });\n\n    return metrics;\n  }, [data]);\n\n  // DCF Calculation - Enhanced to work with scenario data\n  const calculateDCF = (inputData = null) => {\n    const { discountRate, terminalGrowthRate, projectionYears, taxRate } = modelInputs.dcf;\n    const sourceData = inputData || data;\n\n    // Use either scenario data or calculated metrics\n    let operatingIncomes;\n    if (inputData) {\n      // For scenario data, extract operating incomes directly\n      operatingIncomes = [];\n      sourceData.periods.forEach((_, index) => {\n        if (index > 0 && index <= projectionYears) {\n          operatingIncomes.push(sourceData.statements.incomeStatement.operatingIncome?.[index] || 0);\n        }\n      });\n    } else {\n      // For regular calculation, use calculated metrics\n      operatingIncomes = calculatedMetrics.operatingIncome.slice(1, projectionYears + 1);\n    }\n\n    if (operatingIncomes.length === 0) return { enterpriseValue: 0, equityValue: 0, sharePrice: 0 };\n\n    let presentValue = 0;\n    const discountFactor = 1 + (discountRate / 100);\n\n    // Calculate present value of cash flows\n    operatingIncomes.forEach((income, index) => {\n      const afterTaxIncome = income * (1 - taxRate / 100);\n      const pv = afterTaxIncome / Math.pow(discountFactor, index + 1);\n      presentValue += pv;\n    });\n\n    // Terminal value\n    const lastYearIncome = operatingIncomes[operatingIncomes.length - 1] || 0;\n    const terminalCashFlow = lastYearIncome * (1 + terminalGrowthRate / 100) * (1 - taxRate / 100);\n    const terminalValue = terminalCashFlow / ((discountRate - terminalGrowthRate) / 100);\n    const presentTerminalValue = terminalValue / Math.pow(discountFactor, projectionYears);\n\n    const enterpriseValue = presentValue + presentTerminalValue;\n\n    return {\n      enterpriseValue,\n      equityValue: enterpriseValue, // Simplified - would subtract net debt\n      presentValueOperations: presentValue,\n      presentValueTerminal: presentTerminalValue,\n      terminalValue\n    };\n  };\n\n  const _dcfResults = calculateDCF();\n\n  const modelTypes = [\n    { id: 'dcf', label: 'DCF Valuation', icon: DollarSign, description: 'Discounted Cash Flow analysis' },\n    { id: 'ratios', label: 'Ratio Analysis', icon: BarChart3, description: 'Financial ratio comparison' },\n    { id: 'sensitivity', label: 'Sensitivity Analysis', icon: Activity, description: 'Variable impact analysis' },\n    { id: 'scenario', label: 'Scenario Modeling', icon: Target, description: 'Multi-scenario projections' },\n    { id: 'comparable', label: 'Comparable Analysis', icon: Users, description: 'Market-based valuation' },\n    { id: 'montecarlo', label: 'Monte Carlo', icon: Zap, description: 'Probabilistic risk analysis' }\n  ];\n\n  const updateModelInput = (modelType, field, value) => {\n    setModelInputs(prev => ({\n      ...prev,\n      [modelType]: {\n        ...prev[modelType],\n        [field]: value\n      }\n    }));\n  };\n\n  const formatCurrency = (value) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value * 1000); // Convert from thousands\n  };\n\n  const formatPercent = (value) => {\n    return `${value.toFixed(1)}%`;\n  };\n\n  return (\n    <div className=\"h-full bg-gray-900 text-white p-6\">\n      {/* Advanced Analytics Integration */}\n      <AdvancedAnalyticsIntegration \n        onOpenOptions={handleOpenOptions}\n        onOpenBonds={handleOpenBonds}\n        onOpenCredit={handleOpenCredit}\n      />\n\n      {/* Streamlined Model Selection */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div>\n            <h2 className=\"text-xl font-semibold text-white\">Financial Modeling</h2>\n            <p className=\"text-gray-400 text-sm mt-1\">Select a modeling approach to analyze your financial data</p>\n          </div>\n        </div>\n\n        <div className=\"flex flex-wrap gap-2 mb-6\">\n          {modelTypes.map((type) => {\n            const Icon = type.icon;\n            return (\n              <button\n                key={type.id}\n                onClick={() => setActiveModel(type.id)}\n                className={`${\n                  activeModel === type.id\n                    ? 'bg-blue-600 text-white border-blue-500 shadow-lg'\n                    : 'bg-gray-800 text-gray-300 border-gray-700 hover:bg-gray-700 hover:text-white hover:border-gray-600'\n                } flex items-center gap-3 px-4 py-3 rounded-lg border transition-all duration-200`}\n              >\n                <Icon size={18} className={activeModel === type.id ? 'text-white' : 'text-blue-400'} />\n                <span className=\"font-medium\">{type.label}</span>\n              </button>\n            );\n          })}\n        </div>\n\n        {/* Active Model Description */}\n        <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\n          <div className=\"flex items-center gap-3\">\n            {React.createElement(modelTypes.find(t => t.id === activeModel)?.icon, {\n              size: 20,\n              className: 'text-blue-400'\n            })}\n            <div>\n              <h3 className=\"font-medium text-white\">\n                {modelTypes.find(t => t.id === activeModel)?.label}\n              </h3>\n              <p className=\"text-gray-400 text-sm\">\n                {modelTypes.find(t => t.id === activeModel)?.description}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Model Content */}\n      <div>\n        {activeModel === 'dcf' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <DollarSign size={20} className=\"text-blue-400\" />\n              DCF Valuation Model\n            </h3>\n\n            <AdvancedDCF\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'ratios' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <BarChart3 size={20} />\n              Financial Ratio Analysis\n            </h3>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {/* Profitability Ratios */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Profitability Ratios</h4>\n                <div className=\"space-y-3\">\n                  {calculatedMetrics.margins.gross.map((margin, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Gross Margin:</span>\n                      <span className=\"font-medium\">{formatPercent(margin)}</span>\n                    </div>\n                  ))}\n                  {calculatedMetrics.margins.operating.map((margin, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Operating Margin:</span>\n                      <span className=\"font-medium\">{formatPercent(margin)}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Growth Ratios */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Growth Rates</h4>\n                <div className=\"space-y-3\">\n                  {calculatedMetrics.growth.revenue.map((growth, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Revenue Growth:</span>\n                      <span className={`font-medium ${growth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {formatPercent(growth)}\n                      </span>\n                    </div>\n                  ))}\n                  {calculatedMetrics.growth.operating.map((growth, index) => (\n                    <div key={index} className=\"flex justify-between\">\n                      <span className=\"text-sm\">{data.periods[index + 1]} Operating Growth:</span>\n                      <span className={`font-medium ${growth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                        {formatPercent(growth)}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Industry Comparison */}\n              <div>\n                <h4 className=\"font-semibold mb-3 text-gray-200\">Industry Comparison</h4>\n                <div className=\"space-y-3\">\n                  <div className=\"p-3 bg-gray-700 rounded-lg\">\n                    <div className=\"text-xs text-gray-400 uppercase tracking-wide\">Industry Avg</div>\n                    <div className=\"text-sm\">Gross Margin: {formatPercent(modelInputs.ratios.industryAverages.grossMargin)}</div>\n                    <div className=\"text-sm\">Operating Margin: {formatPercent(modelInputs.ratios.industryAverages.operatingMargin)}</div>\n                    <div className=\"text-sm\">Net Margin: {formatPercent(modelInputs.ratios.industryAverages.netMargin)}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeModel === 'sensitivity' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <Activity size={20} />\n              Sensitivity Analysis\n            </h3>\n\n            <SensitivityAnalysis\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              calculateDCF={calculateDCF}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'scenario' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2 text-white\">\n              <Target size={20} />\n              Scenario Modeling\n            </h3>\n\n            <ScenarioModeling\n              data={data}\n              modelInputs={modelInputs}\n              onModelInputChange={updateModelInput}\n              calculateDCF={calculateDCF}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'comparable' && (\n          <div className=\"p-6\">\n            <ComparableAnalysis\n              data={data}\n              formatCurrency={formatCurrency}\n              formatPercent={formatPercent}\n            />\n          </div>\n        )}\n\n        {activeModel === 'montecarlo' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-xl font-semibold mb-4 flex items-center gap-2\">\n              <Zap size={20} />\n              Monte Carlo Simulation\n            </h3>\n\n            <MonteCarloSimulation\n              data={data}\n              onDataChange={onDataChange}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ModelingTools;\n","import { motion } from 'framer-motion';\nimport {\n  Zap, Play, TrendingUp, Target, Activity\n} from 'lucide-react';\nimport React, { useState, useCallback } from 'react';\n// import { XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, ScatterChart, Scatter } from 'recharts';\n\nimport { monteCarloEngine } from '../../services/monteCarloEngine.js';\n\nconst MonteCarloIntegrationHub = ({\n  data,\n  dcfResults,\n  lboResults,\n  financialModel: _financialModel,\n  scenarioResults,\n  onDataChange\n}) => {\n  const [activeAnalysis, setActiveAnalysis] = useState('unified');\n  const [simulationSettings, setSimulationSettings] = useState({\n    iterations: 10000,\n    confidenceLevel: 0.95,\n    correlationsEnabled: true,\n    crossModelAnalysis: true,\n    riskMetrics: ['var', 'cvar', 'downside']\n  });\n\n  const [integratedResults, setIntegratedResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  const formatCurrency = useCallback((value) => {\n    if (!value && value !== 0) return '$0';\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(value);\n  }, []);\n\n  const formatPercent = useCallback((value) => {\n    return `${(value * 100).toFixed(1)}%`;\n  }, []);\n\n  // Cross-model Monte Carlo analysis\n  const runIntegratedSimulation = useCallback(async() => {\n    setIsRunning(true);\n    setProgress(0);\n\n    try {\n      const results = {\n        dcf: null,\n        lbo: null,\n        correlation: null,\n        portfolio: null,\n        riskMetrics: null\n      };\n\n      // DCF Monte Carlo (if DCF results available)\n      if (dcfResults && simulationSettings.crossModelAnalysis) {\n        const dcfDistributions = {\n          revenueGrowthRate: {\n            type: 'normal',\n            parameters: { mean: 0.05, stdDev: 0.02 },\n            enabled: true\n          },\n          fcfMargin: {\n            type: 'triangular',\n            parameters: { min: 0.10, mode: 0.15, max: 0.20 },\n            enabled: true\n          },\n          wacc: {\n            type: 'normal',\n            parameters: { mean: 0.10, stdDev: 0.015 },\n            enabled: true\n          },\n          terminalGrowthRate: {\n            type: 'uniform',\n            parameters: { min: 0.02, max: 0.03 },\n            enabled: true\n          }\n        };\n\n        const dcfInputs = {\n          currentRevenue: data?.statements?.incomeStatement?.totalRevenue?.[0] * 1000 || 1000000,\n          currentPrice: 100,\n          sharesOutstanding: 1000000,\n          ...dcfResults\n        };\n\n        setProgress(25);\n        results.dcf = await monteCarloEngine.runDCFSimulation(\n          dcfInputs,\n          dcfDistributions,\n          {\n            iterations: simulationSettings.iterations,\n            confidenceLevel: simulationSettings.confidenceLevel,\n            onProgress: (p) => setProgress(25 + p * 0.25)\n          }\n        );\n      }\n\n      // LBO Monte Carlo (if LBO results available)\n      if (lboResults && simulationSettings.crossModelAnalysis) {\n        const lboDistributions = {\n          ebitdaGrowthRate: {\n            type: 'normal',\n            parameters: { mean: 0.06, stdDev: 0.02 },\n            enabled: true\n          },\n          exitMultiple: {\n            type: 'triangular',\n            parameters: { min: 8.0, mode: 10.0, max: 12.0 },\n            enabled: true\n          },\n          leverageRatio: {\n            type: 'normal',\n            parameters: { mean: 5.5, stdDev: 0.5 },\n            enabled: true\n          }\n        };\n\n        setProgress(50);\n        results.lbo = await monteCarloEngine.runLBOSimulation(\n          lboResults.inputs || {},\n          lboDistributions,\n          {\n            iterations: simulationSettings.iterations,\n            confidenceLevel: simulationSettings.confidenceLevel,\n            onProgress: (p) => setProgress(50 + p * 0.25)\n          }\n        );\n      }\n\n      // Cross-model correlation analysis\n      if (results.dcf && results.lbo && simulationSettings.correlationsEnabled) {\n        setProgress(75);\n        results.correlation = calculateCrossModelCorrelations(results.dcf, results.lbo);\n      }\n\n      // Portfolio-level risk metrics\n      setProgress(90);\n      results.riskMetrics = calculateIntegratedRiskMetrics(results);\n\n      // Generate scenario-weighted results\n      if (scenarioResults && scenarioResults.scenarios) {\n        results.portfolio = generatePortfolioAnalysis(results, scenarioResults);\n      }\n\n      setProgress(100);\n      setIntegratedResults(results);\n\n      // Save results\n      if (onDataChange) {\n        onDataChange({\n          monteCarloIntegrated: {\n            settings: simulationSettings,\n            results,\n            timestamp: new Date().toISOString()\n          }\n        });\n      }\n\n    } catch (error) {\n      console.error('Integrated Monte Carlo simulation error:', error);\n      alert(`Simulation error: ${error.message}`);\n    } finally {\n      setIsRunning(false);\n      setProgress(0);\n    }\n  }, [dcfResults, lboResults, scenarioResults, simulationSettings, data, onDataChange]);\n\n  const calculateCrossModelCorrelations = useCallback((dcfResults, lboResults) => {\n    // Calculate correlations between DCF and LBO outcomes\n    const dcfValues = dcfResults.simulations?.map(s => s.pricePerShare) || [];\n    const lboValues = lboResults.simulations?.map(s => s.irr) || [];\n\n    if (dcfValues.length === 0 || lboValues.length === 0) return null;\n\n    const correlation = pearsonCorrelation(dcfValues, lboValues);\n\n    return {\n      dcfLboCorrelation: correlation,\n      interpretation: Math.abs(correlation) > 0.7 ? 'Strong' :\n        Math.abs(correlation) > 0.4 ? 'Moderate' : 'Weak',\n      riskImplication: correlation > 0 ? 'Aligned Risk' : 'Hedged Risk'\n    };\n  }, []);\n\n  const pearsonCorrelation = (x, y) => {\n    const n = Math.min(x.length, y.length);\n    if (n === 0) return 0;\n\n    const sumX = x.slice(0, n).reduce((a, b) => a + b, 0);\n    const sumY = y.slice(0, n).reduce((a, b) => a + b, 0);\n    const sumXY = x.slice(0, n).reduce((sum, xi, i) => sum + xi * y[i], 0);\n    const sumXX = x.slice(0, n).reduce((sum, xi) => sum + xi * xi, 0);\n    const sumYY = y.slice(0, n).reduce((sum, yi) => sum + yi * yi, 0);\n\n    const numerator = n * sumXY - sumX * sumY;\n    const denominator = Math.sqrt((n * sumXX - sumX * sumX) * (n * sumYY - sumY * sumY));\n\n    return denominator === 0 ? 0 : numerator / denominator;\n  };\n\n  const calculateIntegratedRiskMetrics = useCallback((results) => {\n    const metrics = {};\n\n    if (results.dcf?.analysis) {\n      metrics.dcf = {\n        var95: results.dcf.analysis.percentiles?.pricePerShare?.p5 || 0,\n        expectedValue: results.dcf.analysis.summary?.mean || 0,\n        volatility: results.dcf.analysis.summary?.standardDeviation || 0\n      };\n    }\n\n    if (results.lbo?.analysis) {\n      metrics.lbo = {\n        var95: results.lbo.analysis.percentiles?.irr?.p5 || 0,\n        expectedValue: results.lbo.analysis.summary?.mean || 0,\n        volatility: results.lbo.analysis.summary?.standardDeviation || 0\n      };\n    }\n\n    return metrics;\n  }, []);\n\n  const generatePortfolioAnalysis = useCallback((results, scenarios) => {\n    // Weight Monte Carlo results by scenario probabilities\n    const weightedMetrics = scenarios.scenarios.reduce((acc, scenario) => {\n      const weight = scenario.probability / 100;\n\n      if (results.dcf) {\n        acc.dcfWeighted = (acc.dcfWeighted || 0) +\n          (results.dcf.analysis?.summary?.mean || 0) * weight;\n      }\n\n      if (results.lbo) {\n        acc.lboWeighted = (acc.lboWeighted || 0) +\n          (results.lbo.analysis?.summary?.mean || 0) * weight;\n      }\n\n      return acc;\n    }, {});\n\n    return weightedMetrics;\n  }, []);\n\n  const analysisOptions = [\n    { id: 'unified', label: 'Unified Analysis', icon: Zap },\n    { id: 'dcf', label: 'DCF Monte Carlo', icon: TrendingUp },\n    { id: 'lbo', label: 'LBO Monte Carlo', icon: Target },\n    { id: 'correlation', label: 'Cross-Model Risk', icon: Activity }\n  ];\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Zap className=\"text-purple-600\" size={28} />\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-800\">Monte Carlo Integration Hub</h2>\n            <p className=\"text-gray-600\">Cross-model risk analysis & unified simulations</p>\n          </div>\n        </div>\n\n        <div className=\"flex space-x-3\">\n          <motion.button\n            onClick={runIntegratedSimulation}\n            disabled={isRunning}\n            className={`px-6 py-2 rounded-lg font-medium flex items-center space-x-2 ${\n              isRunning\n                ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                : 'bg-purple-600 hover:bg-purple-700 text-white'\n            }`}\n            whileHover={!isRunning ? { scale: 1.02 } : {}}\n            whileTap={!isRunning ? { scale: 0.98 } : {}}\n          >\n            <Play size={18} />\n            <span>{isRunning ? 'Running...' : 'Run Integrated Simulation'}</span>\n          </motion.button>\n        </div>\n      </div>\n\n      {/* Progress Bar */}\n      {isRunning && (\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-medium text-gray-700\">Simulation Progress</span>\n            <span className=\"text-sm text-gray-500\">{progress.toFixed(0)}%</span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div\n              className=\"bg-purple-600 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${progress}%` }}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Simulation Settings */}\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n        <h3 className=\"font-semibold mb-3\">Simulation Settings</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\" htmlFor=\"iterations\">Iterations</label>\n            <input\n              id=\"iterations\"\n              type=\"number\"\n              value={simulationSettings.iterations}\n              onChange={(e) => setSimulationSettings(prev => ({\n                ...prev,\n                iterations: parseInt(e.target.value) || 10000\n              }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\" htmlFor=\"confidence-level\">Confidence Level</label>\n            <select\n              id=\"confidence-level\"\n              value={simulationSettings.confidenceLevel}\n              onChange={(e) => setSimulationSettings(prev => ({\n                ...prev,\n                confidenceLevel: parseFloat(e.target.value)\n              }))}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg\"\n            >\n              <option value={0.90}>90%</option>\n              <option value={0.95}>95%</option>\n              <option value={0.99}>99%</option>\n            </select>\n          </div>\n\n          <div className=\"flex items-end\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={simulationSettings.correlationsEnabled}\n                onChange={(e) => setSimulationSettings(prev => ({\n                  ...prev,\n                  correlationsEnabled: e.target.checked\n                }))}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Cross-Model Correlations</span>\n            </label>\n          </div>\n\n          <div className=\"flex items-end\">\n            <label className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                checked={simulationSettings.crossModelAnalysis}\n                onChange={(e) => setSimulationSettings(prev => ({\n                  ...prev,\n                  crossModelAnalysis: e.target.checked\n                }))}\n                className=\"mr-2\"\n              />\n              <span className=\"text-sm text-gray-700\">Cross-Model Analysis</span>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Analysis Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {analysisOptions.map((option) => {\n            const Icon = option.icon;\n            return (\n              <button\n                key={option.id}\n                onClick={() => setActiveAnalysis(option.id)}\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                  activeAnalysis === option.id\n                    ? 'border-purple-500 text-purple-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{option.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Results Display */}\n      {integratedResults ? (\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"space-y-6\"\n        >\n          {/* Unified Analysis */}\n          {activeAnalysis === 'unified' && (\n            <div className=\"space-y-6\">\n              {/* Key Metrics Summary */}\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                {integratedResults.dcf && (\n                  <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-blue-600\">\n                      {formatCurrency(integratedResults.dcf.analysis?.summary?.mean || 0)}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">DCF Expected Value</div>\n                  </div>\n                )}\n\n                {integratedResults.lbo && (\n                  <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-green-600\">\n                      {formatPercent(integratedResults.lbo.analysis?.summary?.mean || 0)}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">LBO Expected IRR</div>\n                  </div>\n                )}\n\n                {integratedResults.correlation && (\n                  <div className=\"bg-purple-50 p-4 rounded-lg text-center\">\n                    <div className=\"text-2xl font-bold text-purple-600\">\n                      {(integratedResults.correlation.dcfLboCorrelation || 0).toFixed(2)}\n                    </div>\n                    <div className=\"text-sm text-gray-600\">DCF-LBO Correlation</div>\n                  </div>\n                )}\n\n                <div className=\"bg-orange-50 p-4 rounded-lg text-center\">\n                  <div className=\"text-2xl font-bold text-orange-600\">\n                    {simulationSettings.iterations.toLocaleString()}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Simulations Run</div>\n                </div>\n              </div>\n\n              {/* Risk Correlation Matrix */}\n              {integratedResults.correlation && (\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Cross-Model Risk Analysis</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Correlation Strength</div>\n                      <div className=\"text-2xl font-bold text-purple-600\">\n                        {integratedResults.correlation.interpretation}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">\n                        {integratedResults.correlation.riskImplication}\n                      </div>\n                    </div>\n\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Risk Diversification</div>\n                      <div className=\"text-2xl font-bold text-blue-600\">\n                        {Math.abs(integratedResults.correlation.dcfLboCorrelation) < 0.5 ? 'High' : 'Low'}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">Portfolio benefit</div>\n                    </div>\n\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Confidence Level</div>\n                      <div className=\"text-2xl font-bold text-green-600\">\n                        {formatPercent(simulationSettings.confidenceLevel)}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">Statistical confidence</div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Portfolio-Level Insights */}\n              {integratedResults.portfolio && (\n                <div className=\"bg-gray-50 rounded-lg p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4\">Portfolio-Weighted Analysis</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Scenario-Weighted DCF</div>\n                      <div className=\"text-xl font-bold text-blue-600\">\n                        {formatCurrency(integratedResults.portfolio.dcfWeighted || 0)}\n                      </div>\n                    </div>\n\n                    <div className=\"bg-white p-4 rounded-lg\">\n                      <div className=\"font-medium text-gray-800 mb-2\">Scenario-Weighted LBO IRR</div>\n                      <div className=\"text-xl font-bold text-green-600\">\n                        {formatPercent(integratedResults.portfolio.lboWeighted || 0)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Individual Analysis Views */}\n          {activeAnalysis === 'dcf' && integratedResults.dcf && (\n            <div className=\"bg-gray-50 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">DCF Monte Carlo Results</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-blue-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.summary?.mean || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Mean Value</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-green-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.percentiles?.pricePerShare?.p95 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">95th Percentile</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-red-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.percentiles?.pricePerShare?.p5 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">5th Percentile</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-purple-600\">\n                    {formatCurrency(integratedResults.dcf.analysis?.summary?.standardDeviation || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Std Deviation</div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeAnalysis === 'lbo' && integratedResults.lbo && (\n            <div className=\"bg-gray-50 rounded-lg p-6\">\n              <h3 className=\"text-lg font-semibold mb-4\">LBO Monte Carlo Results</h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-green-600\">\n                    {formatPercent(integratedResults.lbo.analysis?.summary?.mean || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Mean IRR</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-blue-600\">\n                    {formatPercent(integratedResults.lbo.analysis?.percentiles?.irr?.p95 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">95th Percentile IRR</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-red-600\">\n                    {formatPercent(integratedResults.lbo.analysis?.percentiles?.irr?.p5 || 0)}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">5th Percentile IRR</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-lg font-bold text-purple-600\">\n                    {((integratedResults.lbo.analysis?.percentiles?.moic?.p95 || 0) +\n                      (integratedResults.lbo.analysis?.percentiles?.moic?.p5 || 0)) / 2}x\n                  </div>\n                  <div className=\"text-sm text-gray-600\">Avg MOIC</div>\n                </div>\n              </div>\n            </div>\n          )}\n        </motion.div>\n      ) : (\n        <div className=\"text-center py-12 text-gray-500\">\n          <Zap size={48} className=\"mx-auto mb-4 opacity-50\" />\n          <p>Configure settings and run integrated simulation to see cross-model analysis</p>\n          <p className=\"text-sm mt-2\">\n            {!dcfResults && !lboResults ? 'Run DCF and/or LBO analysis first to enable Monte Carlo integration' :\n              'Ready to run comprehensive Monte Carlo analysis'}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MonteCarloIntegrationHub;\n","/**\n * Real-Time Collaboration Service\n * Handles multi-user financial modeling workspaces, live sharing, and real-time sync\n */\n\nimport { EventEmitter } from 'events';\n\n// import { performanceMonitoring } from '../utils/performanceMonitoring'; // Missing module\n\nclass CollaborationService extends EventEmitter {\n  constructor() {\n    super();\n    this.workspaces = new Map();\n    this.users = new Map();\n    this.connections = new Map();\n    this.annotations = new Map();\n    this.modelStates = new Map();\n    this.isInitialized = false;\n    this.wsConnection = null;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.heartbeatInterval = null;\n    this.syncQueue = [];\n    this.isOnline = navigator.onLine;\n\n    // Env and feature flags (Vite)\n    this.env = (typeof import.meta !== 'undefined' && import.meta.env) ? import.meta.env : {};\n    // Explicitly opt-in to collaboration to avoid unexpected WS errors in dev/staging\n    this.collabEnabled = this.env.VITE_ENABLE_COLLABORATION === 'true';\n\n    // Bind methods to preserve context\n    this.handleConnectionOpen = this.handleConnectionOpen.bind(this);\n    this.handleConnectionMessage = this.handleConnectionMessage.bind(this);\n    this.handleConnectionClose = this.handleConnectionClose.bind(this);\n    this.handleConnectionError = this.handleConnectionError.bind(this);\n\n    // Listen for online/offline status\n    window.addEventListener('online', () => {\n      this.isOnline = true;\n      this.reconnectWebSocket();\n    });\n\n    window.addEventListener('offline', () => {\n      this.isOnline = false;\n      this.emit('connectionStatus', { online: false });\n    });\n  }\n\n  /**\n   * Initialize the collaboration service\n   */\n  async initialize(userId, userProfile = {}) {\n    try {\n      if (this.isInitialized) {\n        console.warn('CollaborationService already initialized');\n        return;\n      }\n\n      this.currentUserId = userId;\n      this.currentUserProfile = {\n        id: userId,\n        name: userProfile.name || 'Anonymous User',\n        avatar: userProfile.avatar || null,\n        role: userProfile.role || 'viewer',\n        joinedAt: new Date().toISOString(),\n        lastActive: new Date().toISOString(),\n        ...userProfile\n      };\n\n      // Store current user\n      this.users.set(userId, this.currentUserProfile);\n\n      // Initialize WebSocket connection only if collaboration is enabled\n      if (this.collabEnabled) {\n        await this.initializeWebSocket();\n      } else {\n        console.info('Collaboration disabled via VITE_ENABLE_COLLABORATION. Skipping WebSocket initialization.');\n      }\n\n      // Start heartbeat if enabled\n      if (this.collabEnabled) {\n        this.startHeartbeat();\n      }\n\n      this.isInitialized = true;\n      this.emit('initialized', { userId, userProfile: this.currentUserProfile });\n\n      // Track initialization performance\n      if (typeof performanceMonitoring !== 'undefined') {\n        // performanceMonitoring.trackCustomMetric('collaboration_init_success', 1);\n      }\n\n      console.log('CollaborationService initialized successfully');\n    } catch (error) {\n      console.error('Failed to initialize CollaborationService:', error);\n      if (typeof performanceMonitoring !== 'undefined') {\n        // performanceMonitoring.trackCustomMetric('collaboration_init_error', 1);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Initialize WebSocket connection\n   */\n  async initializeWebSocket() {\n    try {\n      // Resolve WebSocket URL from Vite env or current origin\n      const explicitUrl = this.env.VITE_COLLAB_WS_URL;\n      let wsUrl;\n      if (explicitUrl) {\n        wsUrl = explicitUrl;\n      } else if (typeof window !== 'undefined' && window.location) {\n        const protocol = window.location.protocol === 'https:' ? 'wss' : 'ws';\n        wsUrl = `${protocol}://${window.location.host}/collaboration`;\n      } else {\n        wsUrl = 'ws://localhost:8080/collaboration';\n      }\n\n      // If mock flag is set, simulate a WS connection; otherwise, attempt a real one\n      const useMock = this.env.VITE_COLLAB_WS_MOCK === 'true';\n      const _options = { useMock };\n      if (useMock || typeof WebSocket === 'undefined') {\n        // Simulated WebSocket for demo/testing\n        this.wsConnection = {\n          readyState: 1, // OPEN\n          send: (data) => {\n            console.log('WebSocket send (mock):', data);\n            setTimeout(() => {\n              this.handleConnectionMessage({ data });\n            }, 100);\n          },\n          close: () => {\n            this.wsConnection.readyState = 3; // CLOSED\n            this.handleConnectionClose();\n          }\n        };\n        console.info(`Collaboration WebSocket running in MOCK mode at ${wsUrl}`);\n        this.handleConnectionOpen();\n      } else {\n        // Real WebSocket connection\n        this.wsConnection = new WebSocket(wsUrl);\n        this.wsConnection.addEventListener('open', this.handleConnectionOpen);\n        this.wsConnection.addEventListener('message', this.handleConnectionMessage);\n        this.wsConnection.addEventListener('close', this.handleConnectionClose);\n        this.wsConnection.addEventListener('error', this.handleConnectionError);\n        console.info(`Connecting to Collaboration WebSocket at ${wsUrl}`);\n      }\n\n    } catch (error) {\n      console.error('WebSocket initialization failed:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Handle WebSocket connection open\n   */\n  handleConnectionOpen() {\n    console.log('Collaboration WebSocket connected');\n    this.reconnectAttempts = 0;\n    this.emit('connectionStatus', { online: true, connected: true });\n\n    // Send authentication message\n    this.sendMessage({\n      type: 'auth',\n      userId: this.currentUserId,\n      userProfile: this.currentUserProfile\n    });\n\n    // Process any queued messages\n    this.processSyncQueue();\n  }\n\n  /**\n   * Handle WebSocket messages\n   */\n  handleConnectionMessage(event) {\n    try {\n      const message = typeof event.data === 'string' ? JSON.parse(event.data) : event.data;\n\n      switch (message.type) {\n        case 'workspace_update':\n          this.handleWorkspaceUpdate(message.data);\n          break;\n        case 'user_joined':\n          this.handleUserJoined(message.data);\n          break;\n        case 'user_left':\n          this.handleUserLeft(message.data);\n          break;\n        case 'model_update':\n          this.handleModelUpdate(message.data);\n          break;\n        case 'annotation_added':\n          this.handleAnnotationAdded(message.data);\n          break;\n        case 'annotation_updated':\n          this.handleAnnotationUpdated(message.data);\n          break;\n        case 'annotation_deleted':\n          this.handleAnnotationDeleted(message.data);\n          break;\n        case 'cursor_update':\n          this.handleCursorUpdate(message.data);\n          break;\n        case 'presence_update':\n          this.handlePresenceUpdate(message.data);\n          break;\n        default:\n          console.warn('Unknown message type:', message.type);\n      }\n    } catch (error) {\n      console.error('Error handling WebSocket message:', error);\n    }\n  }\n\n  /**\n   * Handle WebSocket connection close\n   */\n  handleConnectionClose() {\n    console.log('Collaboration WebSocket disconnected');\n    this.emit('connectionStatus', { online: this.isOnline, connected: false });\n\n    if (this.isOnline && this.reconnectAttempts < this.maxReconnectAttempts) {\n      setTimeout(() => {\n        this.reconnectWebSocket();\n      }, Math.pow(2, this.reconnectAttempts) * 1000); // Exponential backoff\n    }\n  }\n\n  /**\n   * Handle WebSocket connection error\n   */\n  handleConnectionError(error) {\n    console.error('Collaboration WebSocket error:', error);\n    this.emit('connectionError', error);\n  }\n\n  /**\n   * Reconnect WebSocket\n   */\n  async reconnectWebSocket() {\n    if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n      console.error('Max reconnection attempts reached');\n      return;\n    }\n\n    this.reconnectAttempts++;\n    console.log(`Attempting to reconnect... (${this.reconnectAttempts}/${this.maxReconnectAttempts})`);\n\n    try {\n      await this.initializeWebSocket();\n    } catch (error) {\n      console.error('Reconnection failed:', error);\n    }\n  }\n\n  /**\n   * Send message through WebSocket\n   */\n  sendMessage(message) {\n    if (this.wsConnection && this.wsConnection.readyState === 1) {\n      this.wsConnection.send(JSON.stringify(message));\n    } else {\n      // Queue message for later\n      this.syncQueue.push(message);\n    }\n  }\n\n  /**\n   * Process queued sync messages\n   */\n  processSyncQueue() {\n    while (this.syncQueue.length > 0) {\n      const message = this.syncQueue.shift();\n      this.sendMessage(message);\n    }\n  }\n\n  /**\n   * Start heartbeat to keep connection alive\n   */\n  startHeartbeat() {\n    this.heartbeatInterval = setInterval(() => {\n      if (this.wsConnection && this.wsConnection.readyState === 1) {\n        this.sendMessage({ type: 'ping', timestamp: Date.now() });\n      }\n    }, 30000); // 30 seconds\n  }\n\n  /**\n   * Create or join a workspace\n   */\n  async joinWorkspace(workspaceId, options = {}) {\n    try {\n      const workspace = {\n        id: workspaceId,\n        name: options.name || `Workspace ${workspaceId}`,\n        description: options.description || '',\n        createdBy: this.currentUserId,\n        createdAt: new Date().toISOString(),\n        members: new Map([[this.currentUserId, this.currentUserProfile]]),\n        models: new Map(),\n        annotations: new Map(),\n        settings: {\n          isPublic: options.isPublic || false,\n          allowGuests: options.allowGuests || false,\n          maxMembers: options.maxMembers || 10,\n          ...options.settings\n        },\n        lastActivity: new Date().toISOString()\n      };\n\n      this.workspaces.set(workspaceId, workspace);\n\n      // Notify server\n      this.sendMessage({\n        type: 'join_workspace',\n        workspaceId,\n        userId: this.currentUserId,\n        options\n      });\n\n      this.emit('workspaceJoined', { workspaceId, workspace });\n\n      // Track performance\n      if (typeof performanceMonitoring !== 'undefined') {\n        // performanceMonitoring.trackCustomMetric('workspace_joined', 1);\n      }\n\n      return workspace;\n    } catch (error) {\n      console.error('Failed to join workspace:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Leave a workspace\n   */\n  async leaveWorkspace(workspaceId) {\n    try {\n      const workspace = this.workspaces.get(workspaceId);\n      if (!workspace) {\n        throw new Error('Workspace not found');\n      }\n\n      workspace.members.delete(this.currentUserId);\n\n      if (workspace.members.size === 0) {\n        this.workspaces.delete(workspaceId);\n      }\n\n      // Notify server\n      this.sendMessage({\n        type: 'leave_workspace',\n        workspaceId,\n        userId: this.currentUserId\n      });\n\n      this.emit('workspaceLeft', { workspaceId });\n\n      return true;\n    } catch (error) {\n      console.error('Failed to leave workspace:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Share a financial model in real-time\n   */\n  async shareModel(workspaceId, modelId, modelData, permissions = {}) {\n    try {\n      const workspace = this.workspaces.get(workspaceId);\n      if (!workspace) {\n        throw new Error('Workspace not found');\n      }\n\n      const sharedModel = {\n        id: modelId,\n        workspaceId,\n        data: modelData,\n        sharedBy: this.currentUserId,\n        sharedAt: new Date().toISOString(),\n        permissions: {\n          canEdit: permissions.canEdit || false,\n          canComment: permissions.canComment !== false,\n          canView: permissions.canView !== false,\n          ...permissions\n        },\n        version: 1,\n        lastModified: new Date().toISOString(),\n        modifiedBy: this.currentUserId\n      };\n\n      workspace.models.set(modelId, sharedModel);\n      this.modelStates.set(modelId, { ...modelData });\n\n      // Notify all workspace members\n      this.sendMessage({\n        type: 'model_shared',\n        workspaceId,\n        modelId,\n        sharedModel,\n        userId: this.currentUserId\n      });\n\n      this.emit('modelShared', { workspaceId, modelId, sharedModel });\n\n      return sharedModel;\n    } catch (error) {\n      console.error('Failed to share model:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Update shared model data\n   */\n  async updateModel(workspaceId, modelId, updates, _options = {}) {\n    try {\n      const workspace = this.workspaces.get(workspaceId);\n      if (!workspace) {\n        throw new Error('Workspace not found');\n      }\n\n      const model = workspace.models.get(modelId);\n      if (!model) {\n        throw new Error('Model not found');\n      }\n\n      // Check permissions\n      if (!model.permissions.canEdit && model.sharedBy !== this.currentUserId) {\n        throw new Error('No edit permission for this model');\n      }\n\n      // Apply updates\n      const updatedData = { ...model.data, ...updates };\n      model.data = updatedData;\n      model.version += 1;\n      model.lastModified = new Date().toISOString();\n      model.modifiedBy = this.currentUserId;\n\n      this.modelStates.set(modelId, updatedData);\n\n      // Broadcast update\n      this.sendMessage({\n        type: 'model_update',\n        workspaceId,\n        modelId,\n        updates,\n        version: model.version,\n        userId: this.currentUserId,\n        timestamp: model.lastModified\n      });\n\n      this.emit('modelUpdated', { workspaceId, modelId, updates, model });\n\n      return model;\n    } catch (error) {\n      console.error('Failed to update model:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Add annotation to model\n   */\n  async addAnnotation(workspaceId, modelId, annotation) {\n    try {\n      const workspace = this.workspaces.get(workspaceId);\n      if (!workspace) {\n        throw new Error('Workspace not found');\n      }\n\n      const annotationId = `annotation_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      const newAnnotation = {\n        id: annotationId,\n        workspaceId,\n        modelId,\n        content: annotation.content || '',\n        type: annotation.type || 'comment',\n        position: annotation.position || { x: 0, y: 0 },\n        target: annotation.target || null, // Chart element, data point, etc.\n        createdBy: this.currentUserId,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        resolved: false,\n        replies: [],\n        metadata: annotation.metadata || {}\n      };\n\n      workspace.annotations.set(annotationId, newAnnotation);\n\n      // Broadcast annotation\n      this.sendMessage({\n        type: 'annotation_added',\n        workspaceId,\n        modelId,\n        annotation: newAnnotation,\n        userId: this.currentUserId\n      });\n\n      this.emit('annotationAdded', { workspaceId, modelId, annotation: newAnnotation });\n\n      return newAnnotation;\n    } catch (error) {\n      console.error('Failed to add annotation:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Update cursor position for real-time presence\n   */\n  updateCursor(workspaceId, position) {\n    this.sendMessage({\n      type: 'cursor_update',\n      workspaceId,\n      userId: this.currentUserId,\n      position,\n      timestamp: Date.now()\n    });\n  }\n\n  /**\n   * Get workspace members\n   */\n  getWorkspaceMembers(workspaceId) {\n    const workspace = this.workspaces.get(workspaceId);\n    return workspace ? Array.from(workspace.members.values()) : [];\n  }\n\n  /**\n   * Get shared models in workspace\n   */\n  getWorkspaceModels(workspaceId) {\n    const workspace = this.workspaces.get(workspaceId);\n    return workspace ? Array.from(workspace.models.values()) : [];\n  }\n\n  /**\n   * Get annotations for model\n   */\n  getModelAnnotations(workspaceId, modelId) {\n    const workspace = this.workspaces.get(workspaceId);\n    if (!workspace) return [];\n\n    return Array.from(workspace.annotations.values())\n      .filter(annotation => annotation.modelId === modelId);\n  }\n\n  /**\n   * Handle workspace update from server\n   */\n  handleWorkspaceUpdate(data) {\n    this.emit('workspaceUpdate', data);\n  }\n\n  /**\n   * Handle user joined workspace\n   */\n  handleUserJoined(data) {\n    const workspace = this.workspaces.get(data.workspaceId);\n    if (workspace) {\n      workspace.members.set(data.user.id, data.user);\n    }\n    this.emit('userJoined', data);\n  }\n\n  /**\n   * Handle user left workspace\n   */\n  handleUserLeft(data) {\n    const workspace = this.workspaces.get(data.workspaceId);\n    if (workspace) {\n      workspace.members.delete(data.userId);\n    }\n    this.emit('userLeft', data);\n  }\n\n  /**\n   * Handle model update from other users\n   */\n  handleModelUpdate(data) {\n    const workspace = this.workspaces.get(data.workspaceId);\n    if (workspace) {\n      const model = workspace.models.get(data.modelId);\n      if (model) {\n        model.data = { ...model.data, ...data.updates };\n        model.version = data.version;\n        model.lastModified = data.timestamp;\n        model.modifiedBy = data.userId;\n      }\n    }\n    this.emit('modelUpdate', data);\n  }\n\n  /**\n   * Handle annotation added\n   */\n  handleAnnotationAdded(data) {\n    const workspace = this.workspaces.get(data.workspaceId);\n    if (workspace) {\n      workspace.annotations.set(data.annotation.id, data.annotation);\n    }\n    this.emit('annotationAdded', data);\n  }\n\n  /**\n   * Handle annotation updated\n   */\n  handleAnnotationUpdated(data) {\n    const workspace = this.workspaces.get(data.workspaceId);\n    if (workspace) {\n      const annotation = workspace.annotations.get(data.annotationId);\n      if (annotation) {\n        Object.assign(annotation, data.updates);\n      }\n    }\n    this.emit('annotationUpdated', data);\n  }\n\n  /**\n   * Handle annotation deleted\n   */\n  handleAnnotationDeleted(data) {\n    const workspace = this.workspaces.get(data.workspaceId);\n    if (workspace) {\n      workspace.annotations.delete(data.annotationId);\n    }\n    this.emit('annotationDeleted', data);\n  }\n\n  /**\n   * Handle cursor update\n   */\n  handleCursorUpdate(data) {\n    this.emit('cursorUpdate', data);\n  }\n\n  /**\n   * Handle presence update\n   */\n  handlePresenceUpdate(data) {\n    this.emit('presenceUpdate', data);\n  }\n\n  /**\n   * Cleanup and disconnect\n   */\n  async cleanup() {\n    try {\n      if (this.heartbeatInterval) {\n        clearInterval(this.heartbeatInterval);\n      }\n\n      if (this.wsConnection) {\n        this.wsConnection.close();\n      }\n\n      // Clear all maps\n      this.workspaces.clear();\n      this.users.clear();\n      this.connections.clear();\n      this.annotations.clear();\n      this.modelStates.clear();\n\n      this.isInitialized = false;\n      this.emit('cleanup');\n\n      console.log('CollaborationService cleaned up');\n    } catch (error) {\n      console.error('Error during cleanup:', error);\n    }\n  }\n}\n\n// Export singleton instance\nexport default new CollaborationService();\n","import React, { useState, useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { HelpCircle, X, BookOpen, Calculator, TrendingUp, AlertCircle, ChevronRight, ExternalLink } from 'lucide-react';\nimport { cn } from '../../utils/cn';\n\n/**\n * Comprehensive contextual help and onboarding system for financial features\n * Provides intelligent tooltips, guided tours, and contextual assistance\n */\n\n// Help content database\nconst helpContent = {\n  dcf: {\n    title: 'Discounted Cash Flow (DCF) Analysis',\n    description: 'Estimates company value by projecting future cash flows and discounting them to present value.',\n    keyPoints: [\n      'Projects free cash flows for 5-10 years',\n      'Calculates terminal value for perpetual growth',\n      'Uses weighted average cost of capital (WACC) as discount rate',\n      'Highly sensitive to growth and discount rate assumptions'\n    ],\n    formulas: [\n      'FCF = EBIT(1-Tax Rate) + Depreciation - CapEx - Working Capital Change',\n      'Terminal Value = FCF × (1+g) / (WACC - g)',\n      'Enterprise Value = Σ(FCF/(1+WACC)^t) + Terminal Value/(1+WACC)^n'\n    ],\n    tips: [\n      'Use conservative growth rates for terminal value (2-4%)',\n      'Validate WACC calculation with industry benchmarks',\n      'Perform sensitivity analysis on key assumptions',\n      'Cross-reference with comparable company multiples'\n    ]\n  },\n  lbo: {\n    title: 'Leveraged Buyout (LBO) Analysis',\n    description: 'Models acquisition using significant debt financing to achieve target returns.',\n    keyPoints: [\n      'High debt-to-equity ratio (60-90% debt typical)',\n      'Focus on debt paydown and equity value creation',\n      'Requires strong, predictable cash flows',\n      'Exit typically through sale or IPO after 3-7 years'\n    ],\n    formulas: [\n      'Equity IRR = (Exit Equity Value / Initial Equity Investment)^(1/years) - 1',\n      'Debt Service Coverage = EBITDA / (Interest + Principal Payments)',\n      'Exit Multiple = Exit Enterprise Value / Exit EBITDA'\n    ],\n    tips: [\n      'Model different debt structures and covenants',\n      'Include management fees and transaction costs',\n      'Test downside scenarios for covenant compliance',\n      'Consider operational improvements in projections'\n    ]\n  },\n  wacc: {\n    title: 'Weighted Average Cost of Capital (WACC)',\n    description: 'Blended cost of debt and equity financing used as discount rate in valuations.',\n    keyPoints: [\n      'Reflects risk and capital structure of the business',\n      'Used as discount rate in DCF analysis',\n      'Lower WACC increases company valuation',\n      'Varies by industry and company size'\n    ],\n    formulas: [\n      'WACC = (E/V × Re) + (D/V × Rd × (1-Tax Rate))',\n      'Cost of Equity (Re) = Risk-free Rate + Beta × Market Risk Premium',\n      'After-tax Cost of Debt = Pre-tax Rate × (1-Tax Rate)'\n    ],\n    tips: [\n      'Use market values, not book values, for weights',\n      'Consider company-specific risk factors',\n      'Review beta calculation methodology',\n      'Update regularly as market conditions change'\n    ]\n  },\n  ratios: {\n    title: 'Financial Ratio Analysis',\n    description: 'Key metrics for evaluating financial performance, efficiency, and risk.',\n    keyPoints: [\n      'Liquidity ratios measure short-term obligations',\n      'Leverage ratios assess debt and financial risk',\n      'Profitability ratios evaluate operational efficiency',\n      'Valuation ratios compare market vs. intrinsic value'\n    ],\n    formulas: [\n      'Current Ratio = Current Assets / Current Liabilities',\n      'Debt-to-Equity = Total Debt / Total Equity',\n      'ROE = Net Income / Shareholders Equity',\n      'P/E Ratio = Price per Share / Earnings per Share'\n    ],\n    tips: [\n      'Compare ratios to industry benchmarks',\n      'Look at trends over multiple periods',\n      'Consider seasonal business variations',\n      'Understand accounting policy impacts'\n    ]\n  },\n  montecarlo: {\n    title: 'Monte Carlo Simulation',\n    description: 'Uses random sampling to model uncertainty in financial projections.',\n    keyPoints: [\n      'Tests thousands of scenarios with variable inputs',\n      'Provides probability distributions of outcomes',\n      'Helps quantify risks and uncertainties',\n      'Useful for complex models with multiple variables'\n    ],\n    formulas: [\n      'Confidence Interval = Percentile(results, confidence_level)',\n      'Value at Risk = Percentile(results, risk_level)',\n      'Expected Value = Mean(simulation_results)'\n    ],\n    tips: [\n      'Define realistic ranges for input variables',\n      'Use appropriate probability distributions',\n      'Run sufficient iterations (10,000+) for stability',\n      'Validate results against historical data'\n    ]\n  }\n};\n\n// Tooltip component\nexport const FinancialTooltip = ({ \n  content, \n  position = 'top',\n  trigger = 'hover',\n  className,\n  children \n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [tooltipPosition, setTooltipPosition] = useState({ top: 0, left: 0 });\n  const triggerRef = useRef(null);\n  const tooltipRef = useRef(null);\n\n  const showTooltip = () => setIsVisible(true);\n  const hideTooltip = () => setIsVisible(false);\n\n  useEffect(() => {\n    if (isVisible && triggerRef.current && tooltipRef.current) {\n      const triggerRect = triggerRef.current.getBoundingClientRect();\n      const tooltipRect = tooltipRef.current.getBoundingClientRect();\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\n      let top, left;\n\n      switch (position) {\n        case 'top':\n          top = triggerRect.top + scrollTop - tooltipRect.height - 8;\n          left = triggerRect.left + scrollLeft + (triggerRect.width - tooltipRect.width) / 2;\n          break;\n        case 'bottom':\n          top = triggerRect.bottom + scrollTop + 8;\n          left = triggerRect.left + scrollLeft + (triggerRect.width - tooltipRect.width) / 2;\n          break;\n        case 'left':\n          top = triggerRect.top + scrollTop + (triggerRect.height - tooltipRect.height) / 2;\n          left = triggerRect.left + scrollLeft - tooltipRect.width - 8;\n          break;\n        case 'right':\n          top = triggerRect.top + scrollTop + (triggerRect.height - tooltipRect.height) / 2;\n          left = triggerRect.right + scrollLeft + 8;\n          break;\n        default:\n          top = triggerRect.top + scrollTop - tooltipRect.height - 8;\n          left = triggerRect.left + scrollLeft + (triggerRect.width - tooltipRect.width) / 2;\n      }\n\n      // Keep tooltip within viewport\n      const padding = 16;\n      if (left < padding) left = padding;\n      if (left + tooltipRect.width > window.innerWidth - padding) {\n        left = window.innerWidth - tooltipRect.width - padding;\n      }\n      if (top < padding) top = triggerRect.bottom + scrollTop + 8;\n\n      setTooltipPosition({ top, left });\n    }\n  }, [isVisible, position]);\n\n  const triggerProps = trigger === 'hover' \n    ? { onMouseEnter: showTooltip, onMouseLeave: hideTooltip }\n    : { onClick: () => setIsVisible(!isVisible) };\n\n  return (\n    <>\n      <span ref={triggerRef} className={className} {...triggerProps}>\n        {children}\n      </span>\n      \n      {isVisible && createPortal(\n        <div\n          ref={tooltipRef}\n          className=\"fixed z-50 max-w-sm p-3 bg-slate-900 text-white text-sm rounded-lg shadow-lg pointer-events-none\"\n          style={{ top: tooltipPosition.top, left: tooltipPosition.left }}\n        >\n          <div className=\"relative\">\n            {typeof content === 'string' ? (\n              <p>{content}</p>\n            ) : (\n              <div className=\"space-y-2\">\n                {content.title && <div className=\"font-semibold\">{content.title}</div>}\n                {content.description && <p className=\"text-slate-300\">{content.description}</p>}\n                {content.formula && (\n                  <div className=\"bg-slate-800 px-2 py-1 rounded text-xs font-mono\">\n                    {content.formula}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>,\n        document.body\n      )}\n    </>\n  );\n};\n\n// Help icon with tooltip\nexport const HelpIcon = ({ helpKey, className }) => {\n  const help = helpContent[helpKey];\n  if (!help) return null;\n\n  return (\n    <FinancialTooltip\n      content={{\n        title: help.title,\n        description: help.description,\n        formula: help.formulas?.[0]\n      }}\n      className={cn('inline-flex items-center justify-center cursor-help', className)}\n    >\n      <HelpCircle className=\"w-4 h-4 text-slate-400 hover:text-slate-600\" />\n    </FinancialTooltip>\n  );\n};\n\n// Comprehensive help panel\nexport const HelpPanel = ({ helpKey, isOpen, onClose }) => {\n  const help = helpContent[helpKey];\n  if (!help || !isOpen) return null;\n\n  return createPortal(\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-slate-200\">\n          <div className=\"flex items-center space-x-3\">\n            <BookOpen className=\"w-6 h-6 text-blue-600\" />\n            <h2 className=\"text-xl font-semibold text-slate-900\">{help.title}</h2>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"p-2 text-slate-400 hover:text-slate-600 hover:bg-slate-100 rounded-lg\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-80px)]\">\n          <div className=\"space-y-6\">\n            {/* Description */}\n            <div>\n              <p className=\"text-slate-700 leading-relaxed\">{help.description}</p>\n            </div>\n\n            {/* Key Points */}\n            <div>\n              <h3 className=\"text-lg font-medium text-slate-900 mb-3 flex items-center\">\n                <TrendingUp className=\"w-5 h-5 mr-2 text-green-600\" />\n                Key Points\n              </h3>\n              <ul className=\"space-y-2\">\n                {help.keyPoints.map((point, index) => (\n                  <li key={index} className=\"flex items-start space-x-2\">\n                    <ChevronRight className=\"w-4 h-4 text-blue-600 mt-0.5 flex-shrink-0\" />\n                    <span className=\"text-slate-700\">{point}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            {/* Formulas */}\n            {help.formulas && (\n              <div>\n                <h3 className=\"text-lg font-medium text-slate-900 mb-3 flex items-center\">\n                  <Calculator className=\"w-5 h-5 mr-2 text-purple-600\" />\n                  Key Formulas\n                </h3>\n                <div className=\"space-y-2\">\n                  {help.formulas.map((formula, index) => (\n                    <div key={index} className=\"bg-slate-100 p-3 rounded-lg\">\n                      <code className=\"text-sm text-slate-800 font-mono\">{formula}</code>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Tips */}\n            <div>\n              <h3 className=\"text-lg font-medium text-slate-900 mb-3 flex items-center\">\n                <AlertCircle className=\"w-5 h-5 mr-2 text-yellow-600\" />\n                Best Practices\n              </h3>\n              <ul className=\"space-y-2\">\n                {help.tips.map((tip, index) => (\n                  <li key={index} className=\"flex items-start space-x-2\">\n                    <div className=\"w-1.5 h-1.5 bg-yellow-500 rounded-full mt-2 flex-shrink-0\"></div>\n                    <span className=\"text-slate-700\">{tip}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n\n            {/* Additional Resources */}\n            <div className=\"border-t border-slate-200 pt-6\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-sm text-slate-600\">Need more help?</span>\n                <a\n                  href=\"mailto:support@financeanalystpro.com\"\n                  className=\"text-sm text-blue-600 hover:text-blue-800 flex items-center space-x-1\"\n                >\n                  <span>Contact Support</span>\n                  <ExternalLink className=\"w-3 h-3\" />\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n};\n\n// Onboarding tour component\nexport const OnboardingTour = ({ steps, isActive, onComplete, onSkip }) => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [tooltipPosition, setTooltipPosition] = useState({ top: 0, left: 0 });\n\n  useEffect(() => {\n    if (isActive && steps[currentStep]) {\n      const element = document.querySelector(steps[currentStep].target);\n      if (element) {\n        const rect = element.getBoundingClientRect();\n        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n        const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n\n        // Highlight the target element\n        element.style.position = 'relative';\n        element.style.zIndex = '1001';\n        element.style.boxShadow = '0 0 0 4px rgba(59, 130, 246, 0.5)';\n\n        // Position tooltip\n        setTooltipPosition({\n          top: rect.bottom + scrollTop + 8,\n          left: rect.left + scrollLeft\n        });\n      }\n    }\n\n    return () => {\n      // Clean up highlighting\n      if (steps[currentStep]) {\n        const element = document.querySelector(steps[currentStep].target);\n        if (element) {\n          element.style.position = '';\n          element.style.zIndex = '';\n          element.style.boxShadow = '';\n        }\n      }\n    };\n  }, [currentStep, isActive, steps]);\n\n  if (!isActive || !steps[currentStep]) return null;\n\n  const step = steps[currentStep];\n  const isLastStep = currentStep === steps.length - 1;\n\n  const nextStep = () => {\n    if (isLastStep) {\n      onComplete();\n    } else {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  const prevStep = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  return createPortal(\n    <>\n      {/* Overlay */}\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 z-1000\" />\n      \n      {/* Tooltip */}\n      <div\n        className=\"fixed z-1002 max-w-sm bg-white rounded-lg shadow-xl border border-slate-200\"\n        style={{ top: tooltipPosition.top, left: tooltipPosition.left }}\n      >\n        <div className=\"p-4\">\n          <div className=\"flex items-start justify-between mb-3\">\n            <h3 className=\"font-semibold text-slate-900\">{step.title}</h3>\n            <button\n              onClick={onSkip}\n              className=\"text-slate-400 hover:text-slate-600\"\n            >\n              <X className=\"w-4 h-4\" />\n            </button>\n          </div>\n          \n          <p className=\"text-sm text-slate-700 mb-4\">{step.content}</p>\n          \n          {step.tip && (\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3 mb-4\">\n              <div className=\"flex items-start space-x-2\">\n                <AlertCircle className=\"w-4 h-4 text-blue-600 mt-0.5 flex-shrink-0\" />\n                <p className=\"text-sm text-blue-800\">{step.tip}</p>\n              </div>\n            </div>\n          )}\n          \n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-1\">\n              {steps.map((_, index) => (\n                <div\n                  key={index}\n                  className={cn(\n                    'w-2 h-2 rounded-full',\n                    index === currentStep ? 'bg-blue-600' : 'bg-slate-300'\n                  )}\n                />\n              ))}\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              {currentStep > 0 && (\n                <button\n                  onClick={prevStep}\n                  className=\"px-3 py-1 text-sm text-slate-600 hover:text-slate-800\"\n                >\n                  Back\n                </button>\n              )}\n              <button\n                onClick={nextStep}\n                className=\"px-4 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700\"\n              >\n                {isLastStep ? 'Finish' : 'Next'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>,\n    document.body\n  );\n};\n\nexport default {\n  FinancialTooltip,\n  HelpIcon,\n  HelpPanel,\n  OnboardingTour,\n  helpContent\n};\n","import React from 'react';\nimport { cn } from '../../utils/cn';\n\n/**\n * Flexible skeleton loading components for consistent loading states\n * Provides animated placeholders while content loads\n */\n\n// Base skeleton component\nexport const Skeleton = ({ \n  className, \n  animate = true, \n  variant = 'default',\n  ...props \n}) => (\n  <div\n    className={cn(\n      'bg-slate-200 rounded',\n      animate && 'animate-pulse',\n      variant === 'text' && 'h-4',\n      variant === 'button' && 'h-10',\n      variant === 'avatar' && 'h-12 w-12 rounded-full',\n      variant === 'card' && 'h-48',\n      className\n    )}\n    {...props}\n  />\n);\n\n// Financial table skeleton\nexport const FinancialTableSkeleton = ({ \n  rows = 8, \n  columns = 5,\n  showHeader = true,\n  className \n}) => (\n  <div className={cn('space-y-3', className)}>\n    {showHeader && (\n      <div className=\"flex items-center space-x-4 p-4 bg-slate-50 rounded-lg\">\n        {Array.from({ length: columns }).map((_, index) => (\n          <Skeleton\n            key={`header-${index}`}\n            className=\"h-4 flex-1\"\n            variant=\"text\"\n          />\n        ))}\n      </div>\n    )}\n    \n    <div className=\"space-y-2\">\n      {Array.from({ length: rows }).map((_, rowIndex) => (\n        <div key={`row-${rowIndex}`} className=\"flex items-center space-x-4 p-4 border border-slate-200 rounded-lg\">\n          {Array.from({ length: columns }).map((_, colIndex) => (\n            <Skeleton\n              key={`cell-${rowIndex}-${colIndex}`}\n              className={cn(\n                'h-4',\n                colIndex === 0 ? 'flex-2' : 'flex-1',\n                colIndex > 0 && colIndex < columns - 1 && 'w-20'\n              )}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\n// Chart skeleton\nexport const ChartSkeleton = ({ \n  height = 300,\n  showLegend = true,\n  className \n}) => (\n  <div className={cn('p-6 border border-slate-200 rounded-lg', className)}>\n    {/* Chart title */}\n    <div className=\"mb-4\">\n      <Skeleton className=\"h-6 w-48 mb-2\" />\n      <Skeleton className=\"h-4 w-32\" />\n    </div>\n    \n    {/* Chart area */}\n    <div className=\"relative\" style={{ height }}>\n      <Skeleton className=\"w-full h-full rounded-lg\" />\n      \n      {/* Simulate chart elements */}\n      <div className=\"absolute inset-4 flex flex-col justify-end\">\n        <div className=\"flex items-end space-x-2 h-full\">\n          {Array.from({ length: 8 }).map((_, index) => (\n            <Skeleton\n              key={`bar-${index}`}\n              className=\"flex-1 bg-slate-300\"\n              style={{ height: `${Math.random() * 80 + 20}%` }}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n    \n    {/* Legend */}\n    {showLegend && (\n      <div className=\"flex items-center justify-center space-x-4 mt-4\">\n        {Array.from({ length: 3 }).map((_, index) => (\n          <div key={`legend-${index}`} className=\"flex items-center space-x-2\">\n            <Skeleton className=\"w-4 h-4 rounded-sm\" />\n            <Skeleton className=\"w-16 h-4\" />\n          </div>\n        ))}\n      </div>\n    )}\n  </div>\n);\n\n// Dashboard card skeleton\nexport const DashboardCardSkeleton = ({ className }) => (\n  <div className={cn('p-6 border border-slate-200 rounded-lg space-y-4', className)}>\n    {/* Header */}\n    <div className=\"flex items-center justify-between\">\n      <div className=\"space-y-2\">\n        <Skeleton className=\"h-5 w-32\" />\n        <Skeleton className=\"h-4 w-24\" />\n      </div>\n      <Skeleton className=\"w-8 h-8 rounded-lg\" />\n    </div>\n    \n    {/* Main content */}\n    <div className=\"space-y-3\">\n      <Skeleton className=\"h-8 w-20\" />\n      <div className=\"flex items-center space-x-2\">\n        <Skeleton className=\"h-4 w-4\" />\n        <Skeleton className=\"h-4 w-16\" />\n      </div>\n    </div>\n    \n    {/* Mini chart */}\n    <div className=\"h-16 flex items-end space-x-1\">\n      {Array.from({ length: 12 }).map((_, index) => (\n        <Skeleton\n          key={`mini-bar-${index}`}\n          className=\"flex-1 bg-slate-300\"\n          style={{ height: `${Math.random() * 60 + 20}%` }}\n        />\n      ))}\n    </div>\n  </div>\n);\n\n// Portfolio holdings skeleton\nexport const PortfolioHoldingsSkeleton = ({ rows = 5, className }) => (\n  <div className={cn('space-y-3', className)}>\n    {/* Header */}\n    <div className=\"flex items-center justify-between p-4 bg-slate-50 rounded-lg\">\n      <Skeleton className=\"h-5 w-40\" />\n      <div className=\"flex items-center space-x-2\">\n        <Skeleton className=\"h-8 w-20\" />\n        <Skeleton className=\"h-8 w-8 rounded\" />\n      </div>\n    </div>\n    \n    {/* Holdings list */}\n    <div className=\"space-y-2\">\n      {Array.from({ length: rows }).map((_, index) => (\n        <div key={`holding-${index}`} className=\"flex items-center justify-between p-4 border border-slate-200 rounded-lg\">\n          <div className=\"flex items-center space-x-3\">\n            <Skeleton className=\"w-10 h-10 rounded-lg\" />\n            <div className=\"space-y-1\">\n              <Skeleton className=\"h-4 w-16\" />\n              <Skeleton className=\"h-3 w-32\" />\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-6 text-right\">\n            <div className=\"space-y-1\">\n              <Skeleton className=\"h-4 w-12\" />\n              <Skeleton className=\"h-3 w-8\" />\n            </div>\n            <div className=\"space-y-1\">\n              <Skeleton className=\"h-4 w-16\" />\n              <Skeleton className=\"h-3 w-12\" />\n            </div>\n            <div className=\"space-y-1\">\n              <Skeleton className=\"h-4 w-20\" />\n              <Skeleton className=\"h-3 w-16\" />\n            </div>\n            <Skeleton className=\"h-6 w-12\" />\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\n// Market data widget skeleton\nexport const MarketDataSkeleton = ({ className }) => (\n  <div className={cn('p-4 border border-slate-200 rounded-lg', className)}>\n    {/* Header with symbol */}\n    <div className=\"flex items-center justify-between mb-3\">\n      <div className=\"space-y-1\">\n        <Skeleton className=\"h-5 w-16\" />\n        <Skeleton className=\"h-3 w-24\" />\n      </div>\n      <Skeleton className=\"w-6 h-6 rounded\" />\n    </div>\n    \n    {/* Price and change */}\n    <div className=\"space-y-2 mb-4\">\n      <Skeleton className=\"h-7 w-24\" />\n      <Skeleton className=\"h-4 w-20\" />\n    </div>\n    \n    {/* Stats */}\n    <div className=\"grid grid-cols-2 gap-3\">\n      {Array.from({ length: 4 }).map((_, index) => (\n        <div key={`stat-${index}`} className=\"space-y-1\">\n          <Skeleton className=\"h-3 w-12\" />\n          <Skeleton className=\"h-4 w-16\" />\n        </div>\n      ))}\n    </div>\n    \n    {/* Sparkline */}\n    <div className=\"mt-4 h-8 flex items-end space-x-0.5\">\n      {Array.from({ length: 20 }).map((_, index) => (\n        <Skeleton\n          key={`spark-${index}`}\n          className=\"flex-1 bg-slate-300\"\n          style={{ height: `${Math.random() * 70 + 10}%` }}\n        />\n      ))}\n    </div>\n  </div>\n);\n\n// Analysis results skeleton\nexport const AnalysisResultsSkeleton = ({ className }) => (\n  <div className={cn('space-y-6', className)}>\n    {/* Summary cards */}\n    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n      {Array.from({ length: 3 }).map((_, index) => (\n        <DashboardCardSkeleton key={`summary-${index}`} />\n      ))}\n    </div>\n    \n    {/* Main analysis chart */}\n    <ChartSkeleton height={400} />\n    \n    {/* Detailed breakdown */}\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      <FinancialTableSkeleton rows={6} columns={3} />\n      <ChartSkeleton height={250} showLegend={false} />\n    </div>\n  </div>\n);\n\n// Loading state wrapper component\nexport const LoadingWrapper = ({ \n  isLoading, \n  skeleton, \n  children, \n  className,\n  fallback = null \n}) => {\n  if (isLoading) {\n    return (\n      <div className={cn('animate-pulse', className)}>\n        {skeleton || fallback}\n      </div>\n    );\n  }\n  \n  return children;\n};\n\n// Shimmer effect for enhanced loading animations\nexport const ShimmerWrapper = ({ \n  children, \n  className,\n  intensity = 'normal' // 'subtle', 'normal', 'intense'\n}) => (\n  <div \n    className={cn(\n      'relative overflow-hidden',\n      className\n    )}\n  >\n    {children}\n    <div \n      className={cn(\n        'absolute inset-0 -translate-x-full animate-[shimmer_2s_infinite]',\n        'bg-gradient-to-r from-transparent via-white/20 to-transparent',\n        intensity === 'subtle' && 'via-white/10',\n        intensity === 'intense' && 'via-white/30'\n      )}\n    />\n  </div>\n);\n\nexport default {\n  Skeleton,\n  FinancialTableSkeleton,\n  ChartSkeleton,\n  DashboardCardSkeleton,\n  PortfolioHoldingsSkeleton,\n  MarketDataSkeleton,\n  AnalysisResultsSkeleton,\n  LoadingWrapper,\n  ShimmerWrapper\n};\n","import React from 'react';\nimport { AlertTriangle, RefreshCw, Home, Bug, ExternalLink } from 'lucide-react';\nimport Button from './Button';\n\n/**\n * Enhanced Error Boundary with user-friendly error handling and recovery options\n */\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: null,\n      retryCount: 0\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI\n    return {\n      hasError: true,\n      errorId: `error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Log error details\n    this.setState({\n      error,\n      errorInfo\n    });\n\n    // Log to console in development\n    if (import.meta.env.DEV) {\n      console.error('ErrorBoundary caught an error:', error, errorInfo);\n    }\n\n    // Send error to monitoring service in production\n    if (import.meta.env.PROD) {\n      this.logErrorToService(error, errorInfo);\n    }\n  }\n\n  logErrorToService = (error, errorInfo) => {\n    // Integration point for error monitoring services like Sentry, LogRocket, etc.\n    const errorData = {\n      message: error.message,\n      stack: error.stack,\n      componentStack: errorInfo.componentStack,\n      errorId: this.state.errorId,\n      timestamp: new Date().toISOString(),\n      userAgent: navigator.userAgent,\n      url: window.location.href,\n      userId: this.props.userId || 'anonymous'\n    };\n\n    // Example integration (replace with actual service)\n    try {\n      fetch('/api/errors', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(errorData)\n      }).catch(() => {\n        // Fail silently if error reporting fails\n      });\n    } catch (e) {\n      // Fail silently\n    }\n  };\n\n  handleRetry = () => {\n    this.setState(prevState => ({\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: null,\n      retryCount: prevState.retryCount + 1\n    }));\n  };\n\n  handleReportError = () => {\n    const { error, errorInfo, errorId } = this.state;\n    const bugReport = {\n      errorId,\n      message: error?.message,\n      stack: error?.stack,\n      component: errorInfo?.componentStack,\n      timestamp: new Date().toISOString(),\n      url: window.location.href\n    };\n\n    // Create mailto link with error details\n    const subject = encodeURIComponent(`FinanceAnalyst Pro Error Report - ${errorId}`);\n    const body = encodeURIComponent(\n      `Error Details:\\n\\n` +\n      `Error ID: ${errorId}\\n` +\n      `Message: ${error?.message}\\n` +\n      `Timestamp: ${new Date().toISOString()}\\n` +\n      `URL: ${window.location.href}\\n\\n` +\n      `Technical Details:\\n${error?.stack}\\n\\n` +\n      `Component Stack:\\n${errorInfo?.componentStack}`\n    );\n    \n    window.open(`mailto:support@financeanalystpro.com?subject=${subject}&body=${body}`);\n  };\n\n  render() {\n    if (this.state.hasError) {\n      const { fallback: FallbackComponent, variant = 'default' } = this.props;\n      const { error, errorId, retryCount } = this.state;\n\n      // Use custom fallback if provided\n      if (FallbackComponent) {\n        if (React.isValidElement(FallbackComponent)) {\n          return FallbackComponent;\n        }\n        if (typeof FallbackComponent === 'function') {\n          return <FallbackComponent error={error} retry={this.handleRetry} />;\n        }\n      }\n\n      // Determine error severity and appropriate response\n      const isNetworkError = error?.message?.includes('fetch') || error?.message?.includes('network');\n      const isDataError = error?.message?.includes('Cannot read') || error?.message?.includes('undefined');\n      const isCriticalError = retryCount > 2;\n\n      if (variant === 'minimal') {\n        return (\n          <div className=\"flex items-center justify-center p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <AlertTriangle className=\"w-5 h-5 text-red-600 mr-2\" />\n            <span className=\"text-red-800 text-sm\">Something went wrong</span>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={this.handleRetry}\n              className=\"ml-3 text-red-700 hover:text-red-900\"\n            >\n              <RefreshCw className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        );\n      }\n\n      if (variant === 'inline') {\n        return (\n          <div className=\"p-4 bg-red-50 border-l-4 border-red-400 rounded-r-lg\">\n            <div className=\"flex items-start\">\n              <AlertTriangle className=\"w-5 h-5 text-red-600 mt-0.5 mr-3 flex-shrink-0\" />\n              <div className=\"flex-1\">\n                <h4 className=\"text-sm font-medium text-red-800 mb-1\">\n                  Unable to load this section\n                </h4>\n                <p className=\"text-sm text-red-700 mb-2\">\n                  {isNetworkError ? 'Check your internet connection and try again.' :\n                   isDataError ? 'There was an issue with the data format.' :\n                   'An unexpected error occurred.'}\n                </p>\n                <div className=\"flex items-center space-x-2\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={this.handleRetry}\n                    className=\"text-red-700 border-red-300 hover:bg-red-100\"\n                  >\n                    <RefreshCw className=\"w-3 h-3 mr-1\" />\n                    Try Again\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n\n      // Full-page error boundary (default)\n      return (\n        <div className=\"min-h-screen bg-slate-50 flex items-center justify-center p-4\">\n          <div className=\"max-w-lg w-full bg-white rounded-lg shadow-lg border border-slate-200 p-8 text-center\">\n            {/* Error Icon */}\n            <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <AlertTriangle className=\"w-8 h-8 text-red-600\" />\n            </div>\n\n            {/* Error Title */}\n            <h1 className=\"text-xl font-semibold text-slate-900 mb-2\">\n              {isCriticalError ? 'Application Error' : 'Something went wrong'}\n            </h1>\n\n            {/* Error Message */}\n            <p className=\"text-slate-600 mb-6\">\n              {isCriticalError ? (\n                'The application encountered a critical error. Please refresh the page or contact support.'\n              ) : isNetworkError ? (\n                'Unable to connect to our servers. Please check your internet connection and try again.'\n              ) : isDataError ? (\n                'There was an issue processing the data. This might be a temporary problem.'\n              ) : (\n                'An unexpected error occurred. Our team has been notified and is working on a fix.'\n              )}\n            </p>\n\n            {/* Error ID for support */}\n            {errorId && (\n              <div className=\"bg-slate-100 rounded-lg p-3 mb-6 text-left\">\n                <div className=\"text-xs font-mono text-slate-500 mb-1\">Error ID (for support):</div>\n                <div className=\"text-sm font-mono text-slate-700 break-all\">{errorId}</div>\n              </div>\n            )}\n\n            {/* Action Buttons */}\n            <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n              {!isCriticalError && (\n                <Button\n                  onClick={this.handleRetry}\n                  className=\"flex items-center justify-center\"\n                  variant=\"primary\"\n                >\n                  <RefreshCw className=\"w-4 h-4 mr-2\" />\n                  Try Again\n                </Button>\n              )}\n              \n              <Button\n                onClick={() => window.location.href = '/'}\n                variant=\"outline\"\n                className=\"flex items-center justify-center\"\n              >\n                <Home className=\"w-4 h-4 mr-2\" />\n                Go Home\n              </Button>\n\n              <Button\n                onClick={this.handleReportError}\n                variant=\"ghost\"\n                className=\"flex items-center justify-center text-slate-600 hover:text-slate-800\"\n              >\n                <Bug className=\"w-4 h-4 mr-2\" />\n                Report Issue\n              </Button>\n            </div>\n\n            {/* Additional Help */}\n            <div className=\"mt-6 pt-6 border-t border-slate-200 text-sm text-slate-500\">\n              <p>\n                Need immediate help?{' '}\n                <a \n                  href=\"mailto:support@financeanalystpro.com\" \n                  className=\"text-blue-600 hover:text-blue-800 inline-flex items-center\"\n                >\n                  Contact Support\n                  <ExternalLink className=\"w-3 h-3 ml-1\" />\n                </a>\n              </p>\n            </div>\n\n            {/* Development Info */}\n            {import.meta.env.DEV && error && (\n              <details className=\"mt-6 text-left\">\n                <summary className=\"cursor-pointer text-sm text-slate-600 hover:text-slate-800\">\n                  Show Technical Details\n                </summary>\n                <div className=\"mt-2 p-3 bg-slate-100 rounded text-xs font-mono text-slate-700 overflow-auto max-h-40\">\n                  <div className=\"mb-2 font-semibold\">Error:</div>\n                  <div className=\"mb-2\">{error.message}</div>\n                  <div className=\"mb-2 font-semibold\">Stack:</div>\n                  <pre className=\"whitespace-pre-wrap\">{error.stack}</pre>\n                </div>\n              </details>\n            )}\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n// Hook for functional component error handling\nexport const useErrorHandler = () => {\n  const [error, setError] = React.useState(null);\n\n  const resetError = React.useCallback(() => {\n    setError(null);\n  }, []);\n\n  const captureError = React.useCallback((error, errorInfo = {}) => {\n    console.error('Error captured:', error);\n    setError({ error, errorInfo });\n  }, []);\n\n  React.useEffect(() => {\n    if (error) {\n      // Log error to monitoring service\n      console.error('Captured error:', error);\n    }\n  }, [error]);\n\n  return { error, resetError, captureError };\n};\n\n// Higher-order component for adding error boundaries\nexport const withErrorBoundary = (Component, errorBoundaryConfig = {}) => {\n  const WrappedComponent = React.forwardRef((props, ref) => (\n    <ErrorBoundary {...errorBoundaryConfig}>\n      <Component {...props} ref={ref} />\n    </ErrorBoundary>\n  ));\n\n  WrappedComponent.displayName = `withErrorBoundary(${Component.displayName || Component.name})`;\n  return WrappedComponent;\n};\n\nexport default ErrorBoundary;\n","/**\n * Onboarding tour configurations for FinanceAnalyst Pro\n * Guides users through complex financial features\n */\n\nexport const ONBOARDING_TOURS = {\n  privateAnalysis: {\n    id: 'private-analysis-tour',\n    name: 'Private Analysis Walkthrough',\n    description: 'Learn how to build and analyze financial models',\n    steps: [\n      {\n        target: '[data-tour=\"financial-spreadsheet-tab\"]',\n        title: 'Financial Spreadsheet',\n        content: 'Start by building your financial model with historical and projected data. Click here to access the spreadsheet interface.',\n        tip: 'You can import data from Excel or enter it manually using our intuitive interface.'\n      },\n      {\n        target: '[data-tour=\"revenue-section\"]',\n        title: 'Revenue Assumptions',\n        content: 'Begin with revenue projections. Break down by business segments or product lines for more accurate modeling.',\n        tip: 'Use growth rates and market size assumptions to build credible revenue forecasts.'\n      },\n      {\n        target: '[data-tour=\"expense-section\"]',\n        title: 'Operating Expenses',\n        content: 'Model your cost structure including COGS, SG&A, and other operating expenses. Link these to revenue drivers where possible.',\n        tip: 'Consider both fixed and variable cost components for realistic expense modeling.'\n      },\n      {\n        target: '[data-tour=\"financial-modeling-tab\"]',\n        title: 'Advanced Modeling',\n        content: 'Access DCF, LBO, and other valuation models. These tools use your spreadsheet data for sophisticated analysis.',\n        tip: 'Always validate your model assumptions before running complex analyses.'\n      },\n      {\n        target: '[data-tour=\"analysis-results-tab\"]',\n        title: 'Analysis Results',\n        content: 'View detailed results including valuations, ratios, and sensitivity analysis. Export reports for presentations.',\n        tip: 'Use scenario analysis to test different assumptions and risk factors.'\n      }\n    ]\n  },\n\n  dcfModeling: {\n    id: 'dcf-modeling-tour',\n    name: 'DCF Analysis Guide',\n    description: 'Master discounted cash flow valuation methodology',\n    steps: [\n      {\n        target: '[data-tour=\"dcf-assumptions\"]',\n        title: 'Key Assumptions',\n        content: 'Set your growth rates, margin assumptions, and terminal value parameters. These drive your entire valuation.',\n        tip: 'Use conservative assumptions and benchmark against industry standards.'\n      },\n      {\n        target: '[data-tour=\"wacc-calculation\"]',\n        title: 'WACC Calculation',\n        content: 'Configure your weighted average cost of capital. This discount rate reflects the risk of your investment.',\n        tip: 'Consider using industry betas and current market rates for accuracy.'\n      },\n      {\n        target: '[data-tour=\"cash-flow-projections\"]',\n        title: 'Cash Flow Projections',\n        content: 'Review projected free cash flows. These should reflect your operating assumptions and capital requirements.',\n        tip: 'Pay attention to working capital changes and capital expenditure requirements.'\n      },\n      {\n        target: '[data-tour=\"terminal-value\"]',\n        title: 'Terminal Value',\n        content: 'The terminal value often represents 60-80% of total value. Choose appropriate growth rates and exit multiples.',\n        tip: 'Terminal growth rates should not exceed long-term GDP growth (2-4%).'\n      },\n      {\n        target: '[data-tour=\"sensitivity-analysis\"]',\n        title: 'Sensitivity Analysis',\n        content: 'Test how changes in key assumptions affect valuation. This helps assess investment risk.',\n        tip: 'Focus on the variables that have the biggest impact on your valuation.'\n      }\n    ]\n  },\n\n  portfolioManagement: {\n    id: 'portfolio-tour',\n    name: 'Portfolio Management Tour',\n    description: 'Learn to track and analyze investment portfolios',\n    steps: [\n      {\n        target: '[data-tour=\"portfolio-overview\"]',\n        title: 'Portfolio Overview',\n        content: 'Get a high-level view of your portfolio performance, allocation, and key metrics.',\n        tip: 'Use this dashboard to quickly assess portfolio health and identify areas for attention.'\n      },\n      {\n        target: '[data-tour=\"holdings-table\"]',\n        title: 'Holdings Analysis',\n        content: 'Detailed view of individual positions with performance metrics, valuations, and risk indicators.',\n        tip: 'Sort and filter holdings to focus on specific sectors, performance ranges, or risk levels.'\n      },\n      {\n        target: '[data-tour=\"allocation-chart\"]',\n        title: 'Asset Allocation',\n        content: 'Visualize your portfolio allocation by sector, geography, market cap, or custom categories.',\n        tip: 'Monitor allocation drift and rebalance when allocations deviate from targets.'\n      },\n      {\n        target: '[data-tour=\"performance-charts\"]',\n        title: 'Performance Analysis',\n        content: 'Track performance over time with benchmark comparisons and risk-adjusted metrics.',\n        tip: 'Look at both absolute and relative performance across different time periods.'\n      }\n    ]\n  },\n\n  marketAnalysis: {\n    id: 'market-analysis-tour',\n    name: 'Market Analysis Guide',\n    description: 'Navigate market data and analysis tools',\n    steps: [\n      {\n        target: '[data-tour=\"market-overview\"]',\n        title: 'Market Overview',\n        content: 'Real-time market data, indices, and key economic indicators to inform your analysis.',\n        tip: 'Check market conditions before making investment decisions or valuations.'\n      },\n      {\n        target: '[data-tour=\"company-search\"]',\n        title: 'Company Research',\n        content: 'Search and analyze public companies with financial statements, ratios, and peer comparisons.',\n        tip: 'Use comparable company analysis to validate your private company valuations.'\n      },\n      {\n        target: '[data-tour=\"economic-data\"]',\n        title: 'Economic Indicators',\n        content: 'Access key economic data like GDP, inflation, interest rates, and employment statistics.',\n        tip: 'Economic indicators help contextualize your investment thesis and assumptions.'\n      },\n      {\n        target: '[data-tour=\"sector-analysis\"]',\n        title: 'Sector Analysis',\n        content: 'Compare performance across different sectors and identify investment themes.',\n        tip: 'Sector trends can help identify opportunities and risks in your portfolio.'\n      }\n    ]\n  }\n};\n\nexport const FEATURE_INTRODUCTIONS = {\n  financialValidator: {\n    title: 'Real-time Financial Validation',\n    content: 'Get instant feedback on your financial inputs with suggestions for improvements and error detection.',\n    trigger: 'first-validation-error',\n    dismissible: true\n  },\n  \n  virtualizedTable: {\n    title: 'High-Performance Tables',\n    content: 'Handle large datasets efficiently with our virtualized table system. Scroll through thousands of rows without performance issues.',\n    trigger: 'first-large-dataset',\n    dismissible: true\n  },\n  \n  advancedCharts: {\n    title: 'Interactive Financial Charts',\n    content: 'Create professional charts and visualizations. Click chart types to switch views and hover for detailed information.',\n    trigger: 'chart-creation',\n    dismissible: true\n  },\n  \n  exportCapabilities: {\n    title: 'Data Export Options',\n    content: 'Export your analysis to Excel, PDF, or CSV formats. Perfect for presentations and further analysis.',\n    trigger: 'first-export-attempt',\n    dismissible: true\n  }\n};\n\n// Helper functions for tour management\nexport const getTourSteps = (tourId) => {\n  return ONBOARDING_TOURS[tourId]?.steps || [];\n};\n\nexport const getTourByFeature = (feature) => {\n  const tourMap = {\n    'private-analysis': 'privateAnalysis',\n    'dcf-analysis': 'dcfModeling',\n    'portfolio': 'portfolioManagement',\n    'market-data': 'marketAnalysis'\n  };\n  \n  return ONBOARDING_TOURS[tourMap[feature]];\n};\n\nexport const shouldShowIntroduction = (featureId, userPreferences = {}) => {\n  const feature = FEATURE_INTRODUCTIONS[featureId];\n  if (!feature) return false;\n  \n  // Check if user has dismissed this introduction\n  const dismissed = userPreferences.dismissedIntroductions || [];\n  if (dismissed.includes(featureId)) return false;\n  \n  return true;\n};\n\nexport const markIntroductionSeen = (featureId, userPreferences = {}) => {\n  const dismissed = userPreferences.dismissedIntroductions || [];\n  if (!dismissed.includes(featureId)) {\n    dismissed.push(featureId);\n  }\n  \n  return {\n    ...userPreferences,\n    dismissedIntroductions: dismissed\n  };\n};\n","import { useState, useEffect } from 'react';\nimport { ONBOARDING_TOURS, FEATURE_INTRODUCTIONS, shouldShowIntroduction, markIntroductionSeen } from '../config/onboardingTours';\n\n/**\n * Custom hook for managing onboarding state and user preferences\n */\n\nconst STORAGE_KEY = 'financeanalyst-onboarding-state';\n\nexport const useOnboarding = () => {\n  const [onboardingState, setOnboardingState] = useState(() => {\n    try {\n      const stored = localStorage.getItem(STORAGE_KEY);\n      return stored ? JSON.parse(stored) : {\n        completedTours: [],\n        dismissedIntroductions: [],\n        currentTour: null,\n        userPreferences: {\n          showTooltips: true,\n          autoStartTours: true,\n          tourSpeed: 'normal'\n        }\n      };\n    } catch {\n      return {\n        completedTours: [],\n        dismissedIntroductions: [],\n        currentTour: null,\n        userPreferences: {\n          showTooltips: true,\n          autoStartTours: true,\n          tourSpeed: 'normal'\n        }\n      };\n    }\n  });\n\n  // Persist state changes\n  useEffect(() => {\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(onboardingState));\n    } catch (error) {\n      console.warn('Failed to save onboarding state:', error);\n    }\n  }, [onboardingState]);\n\n  const startTour = (tourId) => {\n    const tour = ONBOARDING_TOURS[tourId];\n    if (!tour) {\n      console.warn(`Tour ${tourId} not found`);\n      return false;\n    }\n\n    setOnboardingState(prev => ({\n      ...prev,\n      currentTour: {\n        id: tourId,\n        ...tour,\n        startedAt: Date.now()\n      }\n    }));\n\n    return true;\n  };\n\n  const completeTour = (tourId) => {\n    setOnboardingState(prev => ({\n      ...prev,\n      currentTour: null,\n      completedTours: [...new Set([...prev.completedTours, tourId])]\n    }));\n  };\n\n  const skipTour = () => {\n    setOnboardingState(prev => ({\n      ...prev,\n      currentTour: null\n    }));\n  };\n\n  const dismissIntroduction = (featureId) => {\n    setOnboardingState(prev => ({\n      ...prev,\n      dismissedIntroductions: [...new Set([...prev.dismissedIntroductions, featureId])]\n    }));\n  };\n\n  const shouldShowFeatureIntroduction = (featureId) => {\n    return shouldShowIntroduction(featureId, {\n      dismissedIntroductions: onboardingState.dismissedIntroductions\n    });\n  };\n\n  const resetOnboarding = () => {\n    setOnboardingState({\n      completedTours: [],\n      dismissedIntroductions: [],\n      currentTour: null,\n      userPreferences: {\n        showTooltips: true,\n        autoStartTours: true,\n        tourSpeed: 'normal'\n      }\n    });\n  };\n\n  const updatePreferences = (newPreferences) => {\n    setOnboardingState(prev => ({\n      ...prev,\n      userPreferences: {\n        ...prev.userPreferences,\n        ...newPreferences\n      }\n    }));\n  };\n\n  const hasTourBeenCompleted = (tourId) => {\n    return onboardingState.completedTours.includes(tourId);\n  };\n\n  const getAvailableTours = () => {\n    return Object.entries(ONBOARDING_TOURS).map(([id, tour]) => ({\n      id,\n      ...tour,\n      completed: hasTourBeenCompleted(id)\n    }));\n  };\n\n  return {\n    // State\n    currentTour: onboardingState.currentTour,\n    completedTours: onboardingState.completedTours,\n    dismissedIntroductions: onboardingState.dismissedIntroductions,\n    userPreferences: onboardingState.userPreferences,\n\n    // Actions\n    startTour,\n    completeTour,\n    skipTour,\n    dismissIntroduction,\n    resetOnboarding,\n    updatePreferences,\n\n    // Helpers\n    shouldShowFeatureIntroduction,\n    hasTourBeenCompleted,\n    getAvailableTours\n  };\n};\n","import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n  Calculator,\n  TrendingUp,\n  BarChart3,\n  PieChart,\n  FileText,\n  Settings,\n  Save,\n  Download,\n  Upload,\n  RefreshCw,\n  AlertTriangle,\n  CheckCircle,\n  Info,\n  HelpCircle,\n  Lightbulb,\n  Play,\n  BookOpen,\n  Zap,\n  Users,\n  Share2,\n  Activity,\n  Database\n} from 'lucide-react';\n\nimport DataExportImport from '../components/DataExportImport';\nimport AdvancedLBOTool from '../components/PrivateAnalysis/AdvancedLBOTool';\nimport AnalysisResults from '../components/PrivateAnalysis/AnalysisResults';\nimport ContextualInsightsSidebar from '../components/PrivateAnalysis/ContextualInsightsSidebar';\nimport EnhancedMarketDataDashboard from '../components/PrivateAnalysis/EnhancedMarketDataDashboard';\nimport EnhancedScenarioAnalysis from '../components/PrivateAnalysis/EnhancedScenarioAnalysis';\nimport FinancialModelWorkspace from '../components/PrivateAnalysis/FinancialModelWorkspace';\nimport FinancialSpreadsheet from '../components/PrivateAnalysis/FinancialSpreadsheet';\nimport ModelingTools from '../components/PrivateAnalysis/ModelingTools';\nimport MonteCarloIntegrationHub from '../components/PrivateAnalysis/MonteCarloIntegrationHub';\nimport SEOHead from '../components/SEO/SEOHead';\nimport WorkspaceCollaboration from '../components/Collaboration/WorkspaceCollaboration';\nimport LiveCommentSystem from '../components/Collaboration/LiveCommentSystem';\nimport { useCollaboration } from '../hooks/useCollaboration';\nimport Button from '../components/ui/Button';\nimport { HelpIcon, HelpPanel, OnboardingTour } from '../components/ui/ContextualHelp';\nimport { LoadingWrapper, FinancialTableSkeleton } from '../components/ui/LoadingSkeleton';\nimport ErrorBoundary from '../components/ui/ErrorBoundary';\nimport Header from '../components/ui/Header';\nimport SecondaryNav from '../components/ui/SecondaryNav';\nimport defaultFinancialData from '../data/defaultFinancialData';\nimport { useOnboarding } from '../hooks/useOnboarding';\nimport { formatCurrency, formatPercentage } from '../utils/dataTransformation';\nimport { calculateDCF } from '../utils/dcfCalculations';\n\nconst PrivateAnalysis = () => {\n  // Collaboration hook\n  const {\n    isInitialized: isCollabInitialized,\n    connectionStatus,\n    workspaceMembers,\n    joinWorkspace,\n    shareModel\n  } = useCollaboration('current-user-id', {\n    name: 'Financial Analyst',\n    role: 'analyst'\n  });\n\n  // Initialize collaboration workspace\n  useEffect(() => {\n    if (isCollabInitialized && !showCollaboration) {\n      joinWorkspace(workspaceId, {\n        name: 'Private Analysis Workspace',\n        description: 'Collaborative financial modeling and analysis'\n      }).catch(error => {\n        console.error('Failed to join workspace:', error);\n      });\n    }\n  }, [isCollabInitialized, workspaceId, joinWorkspace, showCollaboration]);\n\n  // Onboarding and help state\n  const {\n    currentTour,\n    startTour,\n    completeTour,\n    skipTour,\n    shouldShowFeatureIntroduction,\n    dismissIntroduction,\n    hasTourBeenCompleted\n  } = useOnboarding();\n  \n  const [activeHelpPanel, setActiveHelpPanel] = useState(null);\n  const [showQuickStart, setShowQuickStart] = useState(false);\n\n  // Existing state management\n  const [activeTab, setActiveTab] = useState('spreadsheet');\n  const [financialData, setFinancialData] = useState(defaultFinancialData);\n  const [loading, setLoading] = useState(false);\n  const [lastSaved, setLastSaved] = useState(null);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const fileInputRef = useRef(null);\n\n  // Auto-start tour for new users\n  useEffect(() => {\n    const hasVisited = localStorage.getItem('fa-pro-visited-private-analysis');\n    if (!hasVisited && !hasTourBeenCompleted('privateAnalysis')) {\n      setShowQuickStart(true);\n      localStorage.setItem('fa-pro-visited-private-analysis', 'true');\n    }\n  }, [hasTourBeenCompleted]);\n\n  const handleStartTour = () => {\n    setShowQuickStart(false);\n    startTour('privateAnalysis');\n  };\n\n  const handleSkipTour = () => {\n    setShowQuickStart(false);\n  };\n\n  const openHelpPanel = (helpKey) => {\n    setActiveHelpPanel(helpKey);\n  };\n\n  const closeHelpPanel = () => {\n    setActiveHelpPanel(null);\n  };\n\n  // Additional state management\n  const [advancedResults, setAdvancedResults] = useState({\n    lbo: null,\n    threeStatement: null,\n    scenarios: null,\n    marketData: null,\n    monteCarlo: null\n  });\n  const [adjustedValues, setAdjustedValues] = useState({});\n  const [modelInputs, setModelInputs] = useState({\n    dcf: {\n      discountRate: 10,\n      terminalGrowthRate: 2.5,\n      projectionYears: 5,\n      taxRate: 25\n    },\n    scenario: {\n      scenarios: []\n    }\n  });\n\n  // Insights sidebar state\n  const [insightsSidebarVisible, setInsightsSidebarVisible] = useState(false);\n  const [currentMetricFocus, setCurrentMetricFocus] = useState(null);\n\n  const [savedAnalyses, setSavedAnalyses] = useState(() => {\n    try {\n      const saved = localStorage.getItem('privateAnalyses');\n      return saved ? JSON.parse(saved) : [];\n    } catch (error) {\n      console.error('Error loading saved analyses:', error);\n      return [];\n    }\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentView, setCurrentView] = useState('spreadsheet');\n  const [showExportModal, setShowExportModal] = useState(false);\n  const [showImportModal, setShowImportModal] = useState(false);\n  const [isOnboardingCompleted, setIsOnboardingCompleted] = useState(false);\n  const [showCollaboration, setShowCollaboration] = useState(true);\n  const [showComments, setShowComments] = useState(false);\n  const [workspaceId] = useState(`workspace_${Date.now()}`);\n\n  const [dataStatus, setDataStatus] = useState('ready');\n\n  // Enhanced data completeness tracking\n  const getDataCompleteness = () => {\n    if (!financialData?.statements) return 0;\n\n    const coreIncomeFields = ['totalRevenue', 'totalCostOfGoodsSold', 'operatingIncome', 'netIncome'];\n    const optionalBalanceFields = ['totalAssets', 'totalLiabilities', 'totalEquity'];\n    const optionalCashFlowFields = ['operatingCashFlow', 'investingCashFlow', 'financingCashFlow'];\n\n    let completedFields = 0;\n    let totalWeightedFields = 0;\n\n    // Check core income statement fields (weighted more heavily)\n    coreIncomeFields.forEach(field => {\n      totalWeightedFields += 3; // Core fields worth 3 points each\n      if (financialData.statements.incomeStatement?.[field]?.[2] !== undefined) {\n        completedFields += 3;\n      }\n    });\n\n    // Check optional balance sheet fields\n    optionalBalanceFields.forEach(field => {\n      totalWeightedFields += 2; // Optional fields worth 2 points each\n      if (financialData.statements.balanceSheet?.[field]?.[2] !== undefined) {\n        completedFields += 2;\n      }\n    });\n\n    // Check cash flow fields\n    optionalCashFlowFields.forEach(field => {\n      totalWeightedFields += 2;\n      if (financialData.statements.cashFlow?.[field]?.[2] !== undefined) {\n        completedFields += 2;\n      }\n    });\n\n    const completionPercentage = Math.round((completedFields / totalWeightedFields) * 100);\n\n    // If we have core income statement data, ensure minimum 80% completion\n    const hasBasicIncomeData = financialData?.statements?.incomeStatement?.totalRevenue?.[2] !== undefined &&\n                              financialData?.statements?.incomeStatement?.operatingIncome?.[2] !== undefined;\n\n    return hasBasicIncomeData ? Math.max(completionPercentage, 80) : completionPercentage;\n  };\n\n  const calculateModelingProgress = () => {\n    let progress = 0;\n\n    // DCF Model completion\n    if (modelInputs?.dcf?.discountRate && modelInputs?.dcf?.terminalGrowthRate) {\n      progress += 40;\n    }\n\n    // Enhanced data completeness boost\n    const dataCompleteness = getDataCompleteness();\n    if (dataCompleteness >= 80) {\n      progress += 20; // Comprehensive data gets boost\n    }\n\n    // Scenario analysis completion\n    if (modelInputs?.scenario?.scenarios && modelInputs.scenario.scenarios.length > 0) {\n      progress += 20;\n    }\n\n    // Advanced tools usage\n    if (advancedResults.lbo || advancedResults.threeStatement || advancedResults.monteCarlo) {\n      progress += 20;\n    }\n\n    return Math.min(progress, 100);\n  };\n\n  const calculateAnalysisProgress = () => {\n    let progress = 0;\n\n    // Basic DCF analysis\n    if (financialData?.statements?.incomeStatement) {\n      progress += 30;\n    }\n\n    // Advanced modeling results\n    if (advancedResults.lbo) progress += 20;\n    if (advancedResults.threeStatement) progress += 20;\n    if (advancedResults.scenarios) progress += 15;\n    if (advancedResults.monteCarlo) progress += 15;\n\n    return Math.min(progress, 100);\n  };\n\n  const saveAnalysis = async(name) => {\n    try {\n      setIsLoading(true);\n      setDataStatus('saving');\n\n      const analysis = {\n        id: Date.now().toString(),\n        name: name || `Analysis ${new Date().toLocaleDateString()}`,\n        timestamp: new Date().toISOString(),\n        financialData,\n        adjustedValues,\n        modelInputs,\n        advancedResults,\n        dataCompleteness: getDataCompleteness(),\n        modelingProgress: calculateModelingProgress(),\n        analysisProgress: calculateAnalysisProgress()\n      };\n\n      const updated = [...savedAnalyses, analysis];\n      setSavedAnalyses(updated);\n\n      try {\n        localStorage.setItem('privateAnalyses', JSON.stringify(updated));\n      } catch (error) {\n        console.error('Error saving analysis:', error);\n        throw new Error('Failed to save analysis to localStorage');\n      }\n\n      setDataStatus('ready');\n      setLastSaved(new Date());\n\n    } catch (error) {\n      console.error('Save failed:', error);\n      setDataStatus('error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const _loadAnalysis = (analysisData) => {\n    const analysis = savedAnalyses.find(a => a.id === analysisData.id);\n    if (analysis) {\n      setFinancialData(analysis.financialData);\n      setAdjustedValues(analysis.adjustedValues);\n      setModelInputs(analysis.modelInputs);\n      setAdvancedResults(analysis.advancedResults || {\n        lbo: null, threeStatement: null, scenarios: null, marketData: null, monteCarlo: null\n      });\n    }\n  };\n\n  const _deleteAnalysis = (analysisId) => {\n    try {\n      const updated = savedAnalyses.filter(a => a.id !== analysisId);\n      setSavedAnalyses(updated);\n      localStorage.setItem('privateAnalyses', JSON.stringify(updated));\n    } catch (error) {\n      console.error('Error deleting analysis:', error);\n    }\n  };\n\n  const handleInsightClick = (insight) => {\n    setCurrentMetricFocus(insight.metric);\n  };\n\n  const toggleInsightsSidebar = () => {\n    setInsightsSidebarVisible(!insightsSidebarVisible);\n  };\n\n  // Auto-show insights sidebar when analysis becomes available\n  useEffect(() => {\n    if (calculateAnalysisProgress() > 60 && !insightsSidebarVisible) {\n      setInsightsSidebarVisible(true);\n    }\n  }, [financialData, advancedResults, insightsSidebarVisible]);\n\n  // Status indicator component\n  const _WorkflowNavigation = ({ currentStep: _currentStep, onStepClick: _onStepClick }) => {\n    const getStatusColor = () => {\n      switch (dataStatus) {\n        case 'ready': return 'text-green-400';\n        case 'modified': return 'text-yellow-400';\n        case 'saving': return 'text-blue-400';\n        case 'error': return 'text-red-400';\n        default: return 'text-gray-400';\n      }\n    };\n\n    return (\n      <div className={`flex items-center gap-2 ${getStatusColor()}`}>\n        <div className=\"w-2 h-2 rounded-full bg-current animate-pulse\" />\n        <span className=\"text-sm\">{dataStatus}</span>\n      </div>\n    );\n  };\n\n  const tabs = [\n    { id: 'spreadsheet', label: 'Financial Spreadsheet', icon: Database },\n    { id: 'modeling', label: 'Financial Modeling', icon: Activity },\n    { id: 'analysis', label: 'Analysis & Results', icon: FileText },\n    { id: 'lbo', label: 'Advanced LBO', icon: Activity },\n    { id: 'threestatement', label: '3-Statement Model', icon: Database },\n    { id: 'scenarios', label: 'Scenario Analysis', icon: Activity },\n    { id: 'marketdata', label: 'Market Data', icon: Activity },\n    { id: 'montecarlo', label: 'Monte Carlo', icon: Activity },\n    { id: 'import-export', label: 'Import/Export', icon: Upload }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-slate-900 relative\">\n      <SEOHead\n        title=\"Private Analysis Suite | FinanceAnalyst Pro\"\n        description=\"Comprehensive financial analysis platform with advanced modeling tools, scenario analysis, Monte Carlo simulation, and private equity workflows.\"\n        canonical=\"/private-analysis\"\n        keywords=\"private analysis, financial modeling, scenario analysis, Monte Carlo simulation, LBO analysis, private equity tools\"\n      />\n      <Header />\n\n      <main id=\"main-content\" className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-4 sm:py-6 lg:py-8\" role=\"main\" aria-label=\"Private Analysis Dashboard\">\n        {/* Header Section */}\n        <section className=\"mb-6 sm:mb-8\" aria-labelledby=\"page-title\">\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-4\">\n            <h1 id=\"page-title\" className=\"text-2xl sm:text-3xl font-bold text-white\">Private Analysis</h1>\n\n            <div className=\"flex items-center gap-3 sm:gap-4 flex-wrap\">\n              <div className=\"flex items-center gap-2\">\n                <div\n                  className={`w-2 h-2 rounded-full ${\n                    dataStatus === 'ready' ? 'bg-green-400' :\n                      dataStatus === 'saving' ? 'bg-blue-400' : 'bg-yellow-400'\n                  }`}\n                />\n                <span className=\"text-xs text-gray-400\">\n                  {dataStatus === 'ready' ? 'Ready' : dataStatus === 'saving' ? 'Saving...' : dataStatus}\n                </span>\n              </div>\n\n              {lastSaved && (\n                <Button\n                  onClick={() => saveAnalysis()}\n                  disabled={isLoading}\n                  className=\"flex items-center gap-2 text-xs sm:text-sm\"\n                  variant=\"primary\"\n                  size=\"sm\"\n                >\n                  <Save className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                  <span className=\"hidden sm:inline\">Saved</span>\n                  <span className=\"sm:hidden\">{lastSaved.toLocaleTimeString()}</span>\n                  <span className=\"hidden sm:inline\">{lastSaved.toLocaleTimeString()}</span>\n                </Button>\n              )}\n            </div>\n          </div>\n\n          {/* Progress Indicators */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4 mb-6\">\n            <div className=\"bg-slate-800 rounded-lg p-3 sm:p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-xs sm:text-sm text-gray-400\">Data Completeness</span>\n                <span className=\"text-sm sm:text-base text-white font-semibold\">{getDataCompleteness()}%</span>\n              </div>\n              <div className=\"w-full bg-slate-700 rounded-full h-1.5 sm:h-2\">\n                <div\n                  className=\"bg-blue-500 h-1.5 sm:h-2 rounded-full transition-all duration-500\"\n                  style={{ width: `${getDataCompleteness()}%` }}\n                />\n              </div>\n            </div>\n\n            <div className=\"bg-slate-800 rounded-lg p-3 sm:p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-xs sm:text-sm text-gray-400\">Analysis Progress</span>\n                <span className=\"text-sm sm:text-base text-white font-semibold\">{calculateAnalysisProgress()}%</span>\n              </div>\n              <div className=\"w-full bg-slate-700 rounded-full h-1.5 sm:h-2\">\n                <div\n                  className=\"bg-green-500 h-1.5 sm:h-2 rounded-full transition-all duration-500\"\n                  style={{ width: `${calculateAnalysisProgress()}%` }}\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Quick Start Modal */}\n          {showQuickStart && (\n            <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\n              <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full mx-4 p-6\">\n                <div className=\"flex items-center space-x-3 mb-4\">\n                  <Play className=\"w-6 h-6 text-blue-600\" />\n                  <h3 className=\"text-lg font-semibold text-slate-900\">Welcome to Private Analysis</h3>\n                </div>\n                <p className=\"text-slate-700 mb-6\">\n                  Take a quick tour to learn how to build financial models, run DCF analysis, and export professional reports.\n                </p>\n                <div className=\"flex space-x-3\">\n                  <button\n                    onClick={handleStartTour}\n                    className=\"flex-1 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700\"\n                  >\n                    Start Tour\n                  </button>\n                  <button\n                    onClick={handleSkipTour}\n                    className=\"flex-1 bg-slate-200 text-slate-800 px-4 py-2 rounded-lg hover:bg-slate-300\"\n                  >\n                    Skip\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </section>\n\n        {/* Secondary Navigation - Analysis Tools */}\n        <div className=\"flex items-center justify-between mb-4 sm:mb-6\">\n          <SecondaryNav \n            variant=\"horizontal\"\n            navigation=\"analysisTools\"\n            activeItem={activeTab}\n            onItemClick={(itemId) => setActiveTab(itemId)}\n            className=\"flex-1\"\n            data-tour=\"financial-spreadsheet-tab\"\n          />\n          \n          {/* Help and Tour Controls */}\n          <div className=\"flex items-center space-x-2 ml-4\">\n            <button\n              onClick={() => openHelpPanel(activeTab === 'modeling' ? 'dcf' : activeTab)}\n              className=\"p-2 text-slate-400 hover:text-white hover:bg-slate-700 rounded-lg transition-colors\"\n              title=\"Get help with this feature\"\n            >\n              <HelpCircle className=\"w-4 h-4\" />\n            </button>\n            \n            {!hasTourBeenCompleted('privateAnalysis') && (\n              <button\n                onClick={() => startTour('privateAnalysis')}\n                className=\"p-2 text-blue-400 hover:text-blue-300 hover:bg-slate-700 rounded-lg transition-colors\"\n                title=\"Take a guided tour\"\n              >\n                <Play className=\"w-4 h-4\" />\n              </button>\n            )}\n          </div>\n        </div>\n        \n        {/* Legacy Tab Navigation (keeping as fallback) */}\n        <nav className=\"mb-6 hidden\" role=\"tablist\" aria-label=\"Analysis Tools\">\n          <div className=\"flex flex-wrap gap-2 p-1 bg-slate-800 rounded-lg\" role=\"tablist\">\n            {tabs.map(tab => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  role=\"tab\"\n                  aria-selected={activeTab === tab.id}\n                  aria-controls={`tabpanel-${tab.id}`}\n                  tabIndex={activeTab === tab.id ? 0 : -1}\n                  className={`\n                    flex items-center gap-2 px-4 py-2 rounded-md transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2 focus:ring-offset-slate-800\n                    ${\n                activeTab === tab.id\n                  ? 'bg-blue-600 text-white shadow-lg'\n                  : 'text-gray-300 hover:text-white hover:bg-slate-700'\n                }\n                  `}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span className=\"text-sm font-medium\">{tab.label}</span>\n                </button>\n              );\n            })}\n          </div>\n        </nav>\n\n        {/* Main Content Area */}\n        <section className=\"relative\" role=\"tabpanel\" id={`tabpanel-${activeTab}`} aria-labelledby={`tab-${activeTab}`}>\n          <motion.div\n            key={activeTab}\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -10 }}\n            transition={{ duration: 0.2 }}\n          >\n            {activeTab === 'spreadsheet' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading spreadsheet. Please refresh the page.</div>}>\n                <LoadingWrapper\n                  isLoading={isLoading}\n                  skeleton={<FinancialTableSkeleton rows={12} columns={6} />}\n                >\n                  <FinancialSpreadsheet\n                    data={financialData}\n                    onDataChange={setFinancialData}\n                    onAdjustedValuesChange={setAdjustedValues}\n                  />\n                </LoadingWrapper>\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'modeling' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading modeling tools. Please refresh the page.</div>}>\n                <ModelingTools\n                  data={financialData}\n                  adjustedValues={adjustedValues}\n                  onDataChange={setFinancialData}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'analysis' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading analysis results. Please check your data and refresh.</div>}>\n                <AnalysisResults\n                  data={financialData}\n                  adjustedValues={adjustedValues}\n                  modelInputs={modelInputs}\n                  calculateDCF={(data) => calculateDCF(data, modelInputs)}\n                  formatCurrency={formatCurrency}\n                  formatPercentage={formatPercentage}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'lbo' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading LBO tool. Please check your data.</div>}>\n                <AdvancedLBOTool\n                  data={financialData}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, lbo: results }))}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'threestatement' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading financial model workspace.</div>}>\n                <FinancialModelWorkspace\n                  data={financialData}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, threeStatement: results }))}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'scenarios' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading scenario analysis.</div>}>\n                <EnhancedScenarioAnalysis\n                  data={financialData}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, scenarios: results }))}\n                  calculateDCF={(data) => calculateDCF(data, modelInputs)}\n                  lboModelingEngine={null}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'marketdata' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading market data dashboard.</div>}>\n                <EnhancedMarketDataDashboard\n                  data={financialData}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, marketData: results }))}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'montecarlo' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading Monte Carlo integration.</div>}>\n                <MonteCarloIntegrationHub\n                  data={financialData}\n                  dcfResults={advancedResults.dcf}\n                  lboResults={advancedResults.lbo}\n                  financialModel={advancedResults.threeStatement}\n                  scenarioResults={advancedResults.scenarios}\n                  onDataChange={(results) => setAdvancedResults(prev => ({ ...prev, monteCarlo: results }))}\n                />\n              </ErrorBoundary>\n            )}\n\n            {activeTab === 'import-export' && (\n              <ErrorBoundary fallback={<div className=\"p-8 text-center text-red-400\">Error loading import/export tools.</div>}>\n                <DataExportImport\n                  data={financialData}\n                  onDataChange={setFinancialData}\n                  savedAnalyses={savedAnalyses}\n                  onAnalysesChange={setSavedAnalyses}\n                />\n              </ErrorBoundary>\n            )}\n          </motion.div>\n        </section>\n\n        {/* Contextual Insights Sidebar */}\n        <ContextualInsightsSidebar\n          financialData={financialData}\n          currentMetric={currentMetricFocus}\n          analysisContext={activeTab === 'analysis' ? 'dcf' : activeTab}\n          onInsightClick={handleInsightClick}\n          isVisible={insightsSidebarVisible}\n          onToggle={toggleInsightsSidebar}\n        />\n      </main>\n\n      {/* Help Panel */}\n      <HelpPanel\n        helpKey={activeHelpPanel}\n        isOpen={!!activeHelpPanel}\n        onClose={closeHelpPanel}\n      />\n\n      {/* Onboarding Tour */}\n      <OnboardingTour\n        steps={currentTour?.steps || []}\n        isActive={!!currentTour}\n        onComplete={() => completeTour(currentTour?.id)}\n        onSkip={skipTour}\n      />\n    </div>\n  );\n};\n\nexport default PrivateAnalysis;\n","/**\n * React Hook for Real-Time Collaboration\n * Provides easy integration with CollaborationService for React components\n */\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\n\nimport collaborationService from '../services/collaborationService';\n// import { performanceMonitoring } from '../utils/performanceMonitoring'; // Missing module\n\n/**\n * Main collaboration hook\n */\nexport function useCollaboration(userId, userProfile = {}) {\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState({\n    online: navigator.onLine,\n    connected: false\n  });\n  const [currentWorkspace, setCurrentWorkspace] = useState(null);\n  const [workspaceMembers, setWorkspaceMembers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const initialized = useRef(false);\n\n  // Initialize collaboration service\n  useEffect(() => {\n    if (!userId || initialized.current) return;\n\n    const initializeService = async() => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        await collaborationService.initialize(userId, userProfile);\n        setIsInitialized(true);\n        initialized.current = true;\n\n        // Track initialization success\n        if (typeof performanceMonitoring !== 'undefined') {\n          // performanceMonitoring.trackCustomMetric('collaboration_hook_init_success', 1);\n        }\n      } catch (err) {\n        setError(err.message);\n        console.error('Failed to initialize collaboration:', err);\n\n        if (typeof performanceMonitoring !== 'undefined') {\n          // performanceMonitoring.trackCustomMetric('collaboration_hook_init_error', 1);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initializeService();\n\n    // Cleanup on unmount\n    return () => {\n      if (initialized.current) {\n        collaborationService.cleanup();\n        initialized.current = false;\n      }\n    };\n  }, [userId, userProfile]);\n\n  // Set up event listeners\n  useEffect(() => {\n    if (!isInitialized) return;\n\n    const handleConnectionStatus = (status) => {\n      setConnectionStatus(status);\n    };\n\n    const handleWorkspaceJoined = ({ workspace }) => {\n      setCurrentWorkspace(workspace);\n      setWorkspaceMembers(Array.from(workspace.members.values()));\n    };\n\n    const handleWorkspaceLeft = () => {\n      setCurrentWorkspace(null);\n      setWorkspaceMembers([]);\n    };\n\n    const handleUserJoined = ({ user, workspaceId }) => {\n      if (currentWorkspace?.id === workspaceId) {\n        setWorkspaceMembers(prev => {\n          const existing = prev.find(member => member.id === user.id);\n          if (existing) return prev;\n          return [...prev, user];\n        });\n      }\n    };\n\n    const handleUserLeft = ({ userId: leftUserId, workspaceId }) => {\n      if (currentWorkspace?.id === workspaceId) {\n        setWorkspaceMembers(prev => prev.filter(member => member.id !== leftUserId));\n      }\n    };\n\n    // Add event listeners\n    collaborationService.on('connectionStatus', handleConnectionStatus);\n    collaborationService.on('workspaceJoined', handleWorkspaceJoined);\n    collaborationService.on('workspaceLeft', handleWorkspaceLeft);\n    collaborationService.on('userJoined', handleUserJoined);\n    collaborationService.on('userLeft', handleUserLeft);\n\n    // Cleanup listeners\n    return () => {\n      collaborationService.off('connectionStatus', handleConnectionStatus);\n      collaborationService.off('workspaceJoined', handleWorkspaceJoined);\n      collaborationService.off('workspaceLeft', handleWorkspaceLeft);\n      collaborationService.off('userJoined', handleUserJoined);\n      collaborationService.off('userLeft', handleUserLeft);\n    };\n  }, [isInitialized, currentWorkspace?.id]);\n\n  // Join workspace\n  const joinWorkspace = useCallback(async(workspaceId, options = {}) => {\n    if (!isInitialized) {\n      throw new Error('Collaboration service not initialized');\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const workspace = await collaborationService.joinWorkspace(workspaceId, options);\n      return workspace;\n    } catch (err) {\n      setError(err.message);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [isInitialized]);\n\n  // Leave workspace\n  const leaveWorkspace = useCallback(async(workspaceId) => {\n    if (!isInitialized) return;\n\n    try {\n      await collaborationService.leaveWorkspace(workspaceId);\n    } catch (err) {\n      setError(err.message);\n      console.error('Failed to leave workspace:', err);\n    }\n  }, [isInitialized]);\n\n  return {\n    isInitialized,\n    connectionStatus,\n    currentWorkspace,\n    workspaceMembers,\n    isLoading,\n    error,\n    joinWorkspace,\n    leaveWorkspace,\n    // Expose service methods\n    shareModel: collaborationService.shareModel.bind(collaborationService),\n    updateModel: collaborationService.updateModel.bind(collaborationService),\n    addAnnotation: collaborationService.addAnnotation.bind(collaborationService),\n    updateCursor: collaborationService.updateCursor.bind(collaborationService),\n    getWorkspaceModels: collaborationService.getWorkspaceModels.bind(collaborationService),\n    getModelAnnotations: collaborationService.getModelAnnotations.bind(collaborationService)\n  };\n}\n\n/**\n * Hook for real-time model sharing\n */\nexport function useModelSharing(workspaceId, modelId) {\n  const [model, setModel] = useState(null);\n  const [annotations, setAnnotations] = useState([]);\n  const [isShared, setIsShared] = useState(false);\n  const [collaborators, _setCollaborators] = useState([]);\n  const [modelVersion, setModelVersion] = useState(0);\n\n  useEffect(() => {\n    if (!workspaceId || !modelId) return;\n\n    const handleModelShared = ({ sharedModel, workspaceId: wsId, modelId: mId }) => {\n      if (wsId === workspaceId && mId === modelId) {\n        setModel(sharedModel);\n        setIsShared(true);\n        setModelVersion(sharedModel.version);\n      }\n    };\n\n    const handleModelUpdate = ({ workspaceId: wsId, modelId: mId, updates, version }) => {\n      if (wsId === workspaceId && mId === modelId) {\n        setModel(prev => prev ? { ...prev, data: { ...prev.data, ...updates }, version } : null);\n        setModelVersion(version);\n      }\n    };\n\n    const handleAnnotationAdded = ({ annotation, workspaceId: wsId, modelId: mId }) => {\n      if (wsId === workspaceId && mId === modelId) {\n        setAnnotations(prev => [...prev, annotation]);\n      }\n    };\n\n    // Add event listeners\n    collaborationService.on('modelShared', handleModelShared);\n    collaborationService.on('modelUpdate', handleModelUpdate);\n    collaborationService.on('annotationAdded', handleAnnotationAdded);\n\n    // Load existing data\n    const existingModels = collaborationService.getWorkspaceModels(workspaceId);\n    const existingModel = existingModels.find(m => m.id === modelId);\n    if (existingModel) {\n      setModel(existingModel);\n      setIsShared(true);\n      setModelVersion(existingModel.version);\n    }\n\n    const existingAnnotations = collaborationService.getModelAnnotations(workspaceId, modelId);\n    setAnnotations(existingAnnotations);\n\n    // Cleanup listeners\n    return () => {\n      collaborationService.off('modelShared', handleModelShared);\n      collaborationService.off('modelUpdate', handleModelUpdate);\n      collaborationService.off('annotationAdded', handleAnnotationAdded);\n    };\n  }, [workspaceId, modelId]);\n\n  const shareModel = useCallback(async(modelData, permissions = {}) => {\n    if (!workspaceId || !modelId) return;\n\n    try {\n      const sharedModel = await collaborationService.shareModel(\n        workspaceId,\n        modelId,\n        modelData,\n        permissions\n      );\n      return sharedModel;\n    } catch (error) {\n      console.error('Failed to share model:', error);\n      throw error;\n    }\n  }, [workspaceId, modelId]);\n\n  const updateModel = useCallback(async(updates) => {\n    if (!workspaceId || !modelId) return;\n\n    try {\n      const updatedModel = await collaborationService.updateModel(\n        workspaceId,\n        modelId,\n        updates\n      );\n      return updatedModel;\n    } catch (error) {\n      console.error('Failed to update model:', error);\n      throw error;\n    }\n  }, [workspaceId, modelId]);\n\n  const addAnnotation = useCallback(async(annotation) => {\n    if (!workspaceId || !modelId) return;\n\n    try {\n      const newAnnotation = await collaborationService.addAnnotation(\n        workspaceId,\n        modelId,\n        annotation\n      );\n      return newAnnotation;\n    } catch (error) {\n      console.error('Failed to add annotation:', error);\n      throw error;\n    }\n  }, [workspaceId, modelId]);\n\n  return {\n    model,\n    annotations,\n    isShared,\n    collaborators,\n    modelVersion,\n    shareModel,\n    updateModel,\n    addAnnotation\n  };\n}\n\n/**\n * Hook for real-time presence and cursors\n */\nexport function usePresence(workspaceId) {\n  const [cursors, setCursors] = useState(new Map());\n  const [presence, setPresence] = useState(new Map());\n  const [activeCursors, setActiveCursors] = useState([]);\n\n  useEffect(() => {\n    if (!workspaceId) return;\n\n    const handleCursorUpdate = ({ userId, position, workspaceId: wsId }) => {\n      if (wsId === workspaceId) {\n        setCursors(prev => {\n          const newCursors = new Map(prev);\n          newCursors.set(userId, { position, timestamp: Date.now() });\n          return newCursors;\n        });\n      }\n    };\n\n    const handlePresenceUpdate = ({ userId, status, workspaceId: wsId }) => {\n      if (wsId === workspaceId) {\n        setPresence(prev => {\n          const newPresence = new Map(prev);\n          newPresence.set(userId, { status, timestamp: Date.now() });\n          return newPresence;\n        });\n      }\n    };\n\n    // Add event listeners\n    collaborationService.on('cursorUpdate', handleCursorUpdate);\n    collaborationService.on('presenceUpdate', handlePresenceUpdate);\n\n    // Cleanup old cursors periodically\n    const cleanupInterval = setInterval(() => {\n      const now = Date.now();\n      const threshold = 30000; // 30 seconds\n\n      setCursors(prev => {\n        const filtered = new Map();\n        for (const [userId, data] of prev) {\n          if (now - data.timestamp < threshold) {\n            filtered.set(userId, data);\n          }\n        }\n        return filtered;\n      });\n    }, 5000);\n\n    // Cleanup listeners\n    return () => {\n      collaborationService.off('cursorUpdate', handleCursorUpdate);\n      collaborationService.off('presenceUpdate', handlePresenceUpdate);\n      clearInterval(cleanupInterval);\n    };\n  }, [workspaceId]);\n\n  // Convert cursors map to array for easier rendering\n  useEffect(() => {\n    setActiveCursors(Array.from(cursors.entries()).map(([userId, data]) => ({\n      userId,\n      ...data\n    })));\n  }, [cursors]);\n\n  const updateCursor = useCallback((position) => {\n    if (workspaceId) {\n      collaborationService.updateCursor(workspaceId, position);\n    }\n  }, [workspaceId]);\n\n  return {\n    cursors: activeCursors,\n    presence: Array.from(presence.entries()).map(([userId, data]) => ({\n      userId,\n      ...data\n    })),\n    updateCursor\n  };\n}\n\n/**\n * Hook for workspace management\n */\nexport function useWorkspace(workspaceId) {\n  const [workspace, setWorkspace] = useState(null);\n  const [members, setMembers] = useState([]);\n  const [models, setModels] = useState([]);\n  const [activity, setActivity] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!workspaceId) return;\n\n    setIsLoading(true);\n\n    // Load workspace data\n    const loadWorkspaceData = () => {\n      const workspaceMembers = collaborationService.getWorkspaceMembers(workspaceId);\n      const workspaceModels = collaborationService.getWorkspaceModels(workspaceId);\n\n      setMembers(workspaceMembers);\n      setModels(workspaceModels);\n      setIsLoading(false);\n    };\n\n    loadWorkspaceData();\n\n    const handleWorkspaceUpdate = ({ workspaceId: wsId, data }) => {\n      if (wsId === workspaceId) {\n        setWorkspace(prev => ({ ...prev, ...data }));\n      }\n    };\n\n    const handleUserJoined = ({ user, workspaceId: wsId }) => {\n      if (wsId === workspaceId) {\n        setMembers(prev => {\n          const existing = prev.find(member => member.id === user.id);\n          if (existing) return prev;\n          return [...prev, user];\n        });\n\n        setActivity(prev => [{\n          id: `activity_${Date.now()}`,\n          type: 'user_joined',\n          userId: user.id,\n          userName: user.name,\n          timestamp: new Date().toISOString(),\n          data: { user }\n        }, ...prev.slice(0, 49)]); // Keep last 50 activities\n      }\n    };\n\n    const handleUserLeft = ({ userId, workspaceId: wsId }) => {\n      if (wsId === workspaceId) {\n        setMembers(prev => prev.filter(member => member.id !== userId));\n\n        setActivity(prev => [{\n          id: `activity_${Date.now()}`,\n          type: 'user_left',\n          userId,\n          timestamp: new Date().toISOString(),\n          data: { userId }\n        }, ...prev.slice(0, 49)]);\n      }\n    };\n\n    const handleModelShared = ({ sharedModel, workspaceId: wsId }) => {\n      if (wsId === workspaceId) {\n        setModels(prev => [...prev, sharedModel]);\n\n        setActivity(prev => [{\n          id: `activity_${Date.now()}`,\n          type: 'model_shared',\n          userId: sharedModel.sharedBy,\n          timestamp: sharedModel.sharedAt,\n          data: { modelId: sharedModel.id, modelName: sharedModel.name }\n        }, ...prev.slice(0, 49)]);\n      }\n    };\n\n    // Add event listeners\n    collaborationService.on('workspaceUpdate', handleWorkspaceUpdate);\n    collaborationService.on('userJoined', handleUserJoined);\n    collaborationService.on('userLeft', handleUserLeft);\n    collaborationService.on('modelShared', handleModelShared);\n\n    // Cleanup listeners\n    return () => {\n      collaborationService.off('workspaceUpdate', handleWorkspaceUpdate);\n      collaborationService.off('userJoined', handleUserJoined);\n      collaborationService.off('userLeft', handleUserLeft);\n      collaborationService.off('modelShared', handleModelShared);\n    };\n  }, [workspaceId]);\n\n  return {\n    workspace,\n    members,\n    models,\n    activity,\n    isLoading\n  };\n}\n\nexport default useCollaboration;\n"],"names":["STORAGE_CONFIG","enabled","threshold","maxSize","cleanupThreshold","DATA_SCHEMAS","dcfModel","version","required","structure","symbol","assumptions","projections","valuation","metadata","lboModel","transaction","financing","returns","monteCarloResults","modelType","iterations","results","statistics","userPreferences","theme","layout","notifications","privacy","marketData","data","timestamp","source","storageService","constructor","this","isAvailable","checkStorageAvailability","compressionWorker","initializeCompression","setupQuotaMonitoring","test","localStorage","setItem","removeItem","e","apiLogger","log","error","message","window","compressionAvailable","navigator","storage","monitorQuota","estimate","usageRatio","usage","quota","ratio","performCleanup","generateKey","type","identifier","validateData","schemaType","schema","Error","field","expectedType","Object","entries","actualType","Array","isArray","compressData","jsonString","JSON","stringify","length","compressed","simpleCompress","btoa","encodeURIComponent","decompressData","compressedData","isCompressed","decodeURIComponent","atob","options","storageObject","schemaVersion","Date","now","size","processedData","finalObject","key","getItem","stored","parsedStored","parse","decompressedData","current","age","listItems","prefix","items","i","startsWith","replace","push","cutoffTime","cleanedCount","getStorageStats","totalSize","itemCount","typeStats","split","getQuotaInfo","clearAll","keys","forEach","clearedCount","financialDataStorage","saveDCFModel","modelData","dcfData","toUpperCase","createdAt","lastModified","intrinsicValue","getDCFModel","listDCFModels","deleteDCFModel","saveLBOModel","lboData","irr","moic","getLBOModel","listLBOModels","deleteLBOModel","saveMonteCarloResults","modelId","resultsData","mcData","mean","getMonteCarloResults","listMonteCarloResults","deleteMonteCarloResults","saveMarketData","ttlMinutes","expiresAt","getMarketData","deleteMarketData","saveUserPreferences","preferences","prefData","lastUpdated","getUserPreferences","saveWatchlist","name","symbols","watchlistData","map","s","symbolCount","getWatchlist","listWatchlists","deleteWatchlist","exportAllData","exportData","dcfModels","lboModels","watchlists","mcResults","dcfCount","lboCount","mcCount","watchlistCount","importData","importCount","getFinancialDataStats","financialData","cleanupExpiredMarketData","marketDataKeys","defaultTemplates","id","category","lastUsed","uses","DataExportImport","_data","onDataChange","_onDataChange","savedAnalyses","_savedAnalyses","onAnalysesChange","_onAnalysesChange","onClose","className","_className","activeTab","setActiveTab","useState","isExporting","setIsExporting","isImporting","setIsImporting","exportStatus","setExportStatus","importStatus","setImportStatus","stats","setStats","templates","_setTemplates","collaborators","_setCollaborators","email","role","lastActive","avatar","React","useEffect","loadStats","async","storageStats","handleExport","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","toISOString","body","appendChild","click","removeChild","revokeObjectURL","details","totalItems","children","jsxs","jsx","onClick","label","icon","FileSpreadsheet","Bookmark","Users","Download","Upload","Database","tab","Icon","Info","disabled","Fragment","Loader2","CheckCircle","AlertCircle","template","collaborator","FileText","accept","onChange","event","file","target","files","text","toLocaleString","value","bytes","Math","floor","parseFloat","pow","toFixed","formatBytes","AdvancedLBOTool","lboResults","setLBOResults","isCalculating","setIsCalculating","lboInputs","setLBOInputs","companyName","purchasePrice","ebitda","revenue","equityContribution","seniorDebtMultiple","subordinatedDebtMultiple","seniorInterestRate","subordinatedInterestRate","ebitdaGrowthRate","capexAsPercentOfRevenue","nwcAsPercentOfRevenue","holdingPeriod","exitMultiple","transactionFees","managementFees","taxRate","formatCurrency","useCallback","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercent","calculateLBO","modelInputs","debt","operating","exit","lboModelingEngine","buildLBOModel","inputs","alert","handleInputChange","prev","Building2","motion","button","Calculator","DollarSign","BarChart3","div","initial","opacity","y","animate","htmlFor","step","baseCase","returnsAnalysis","transactionStructure","debtToEbitda","exitAnalysis","equityProceeds","totalDebt","entryMultiple","equityPercentage","scenarios","scenario","AnalysisResults","adjustedValues","_modelInputs","calculateDCF","formatPercentage","_formatPercentage","analysis","useMemo","statements","incomeStatement","income","periods","totalRevenue","sort","a","b","parseInt","latest","previous","earliest","revenueLatest","revenuePrevious","revenueEarliest","grossProfitLatest","grossProfit","grossProfitPrevious","operatingIncomeLatest","operatingIncome","operatingIncomePrevious","revenueGrowthYoY","totalCostOfGoodsSold","revenueCAGR","operatingIncomeGrowth","grossMarginLatest","grossMarginPrevious","operatingMarginLatest","operatingMarginPrevious","marginImprovement","isFinite","operatingMarginChange","dcfResults","revenueBreakdown","Number","energyDevices","injectables","wellness","weightloss","retailSales","surgery","filter","item","totalAssets","totalEquity","currentAssets","currentLiabilities","inventory","accountsReceivable","cashAndEquivalents","returnOnAssets","returnOnEquity","debtToEquity","currentRatio","quickRatio","assetTurnover","inventoryTurnover","receivablesTurnover","cashRatio","workingCapital","workingCapitalRatio","operatingCycle","cashConversionCycle","operatingLeverage","profitabilityTrend","financialLeverage","interestCoverage","interestExpense","debtServiceCoverage","debtService","revenuePerEmployee","employeeCount","revenuePerShare","sharesOutstanding","bookValuePerShare","industryBenchmarks","grossMargin","operatingMargin","revenueGrowth","benchmarkComparison","kpis","title","trend","description","TrendingUp","benchmark","performance","Percent","Target","Award","Shield","Zap","CreditCard","liquidityMetrics","formatted","status","efficiencyMetrics","riskMetrics","level","growth","cagr","profitability","grossMarginChange","financial","liquidity","efficiency","risk","market","benchmarks","industry","comparison","dcf","AlertTriangle","MetricCard","TrendingDown","includes","kpi","index","metric","Eye","Timer","Gauge","Activity","enterpriseValue","sharePrice","terminalValue","PieChart","unit","percentage","width","min","ContextualInsightsSidebar","currentMetric","analysisContext","onInsightClick","isVisible","onToggle","expandedSections","setExpandedSections","insights","suggestions","healthcare","median","max","ebitdaMargin","roe","technology","manufacturing","contextualInsights","content","action","latestRevenue","latestOperatingIncome","generateContextualInsights","toggleSection","section","renderBenchmarkBar","range","currentPos","benchmarkPos","left","x","X","ChevronDown","ChevronRight","AnimatePresence","height","insight","colors","info","assumption","Lightbulb","colorClass","transition","delay","suggestion","idx","renderInsightItem","EnhancedMarketDataDashboard","activeView","setActiveView","watchlist","setWatchlist","price","change","changePercent","indices","NASDAQ","DOW","sectors","weight","economicIndicators","Unemployment","alerts","condition","active","newSymbol","setNewSymbol","isLoading","setIsLoading","getChangeColor","getChangeIcon","Minus","interval","setInterval","random","clearInterval","addToWatchlist","trim","Promise","resolve","setTimeout","newItem","removeFromWatchlist","chartData","from","_","time","getTime","toLocaleDateString","SPY","sin","QQQ","VIX","correlationMatrix","pair","correlation","strength","whileHover","scale","RefreshCw","Settings","Globe","LineChart","Bell","ChangeIcon","sector","placeholder","onKeyPress","Plus","ResponsiveContainer","RechartsLineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","strokeWidth","corr","abs","EnhancedScenarioAnalysis","_activeView","_setActiveView","setScenarios","probability","marginExpansion","capexIntensity","isBase","analysisSettings","setAnalysisSettings","outputMetric","includeCorrelations","numSimulations","setResults","runScenarioAnalysis","scenarioResults","result","scenarioData","rev","equityValue","weightedValue","reduce","sum","valueRange","standardDeviation","sqrt","deviation","summary","coefficientOfVariation","probabilityOfPositiveReturn","currentMarketCap","addScenario","newScenario","updateScenario","deleteScenario","totalProbability","Play","checked","Trash2","BarChart","tickFormatter","formatter","Bar","fill","FinancialModelWorkspace","activeStatement","setActiveStatement","setModelData","costOfGoodsSold","operatingExpenses","depreciation","ebit","ebt","taxes","netIncome","cash","totalCurrentAssets","ppe","accountsPayable","shortTermDebt","totalCurrentLiabilities","longTermDebt","totalLiabilities","shareholderEquity","totalLiabilitiesEquity","operatingCashFlow","capex","investingCashFlow","debtRepayment","financingCashFlow","netCashFlow","endingCash","setAssumptions","revenueGrowthRate","cogsPercentOfRevenue","opexGrowthRate","depreciationRate","capexPercentOfRevenue","debtPaydown","validationErrors","setValidationErrors","recalculateModel","newData","wcChange","errors","handleAssumptionChange","Building","statement","period","periodIdx","colSpan","isPercent","FinancialSpreadsheet","onAdjustedValuesChange","setAdjustedValues","useFinancialAccessibility","salariesBenefits","incomeBeforeTax","otherIncomeExpense","nonCurrentAssets","nonCurrentLiabilities","equity","operatingActivities","investingActivities","financingActivities","editingCell","setEditingCell","cellValue","setCellValue","inputRef","useRef","newAdjustedValues","incomeStatementTemplate","color","headerBg","textColor","bold","formula","balanceSheetTemplate","cashFlowTemplate","currentTemplate","getCurrentTemplate","handleCellClick","rowKey","periodIndex","isAdjusted","currentValue","toString","handleCellBlur","newValue","handleKeyPress","preventDefault","validateNumericInput","formatNumber","numValue","isNaN","absValue","formattedValue","focus","select","newPeriodLabel","prompt","scope","sectionKey","stopPropagation","addNewRow","indentClass","textWeight","rowBg","borderColor","ariaLabel","headers","cellAriaLabel","tabIndex","onKeyDown","Edit2","ref","onBlur","renderRow","DataVisualization","sensitivityData","activeChart","setActiveChart","showDetails","setShowDetails","chartTypes","PieChartIcon","dcfWaterfallData","years","cumulativeValue","year","_index","startValue","presentValue","cumulative","start","freeCashFlow","terminalStart","presentValueTerminal","cashFlowTrendData","workingCapitalChange","sensitivityTornadoData","_variable","maxUpside","dataPoints","d","changeFromBase","maxDownside","variable","definition","upside","downside","scenarioDistributionData","CustomTooltip","payload","chartType","_chartType","entry","DCFWaterfallChart","margin","top","right","bottom","CashFlowTrendChart","Legend","SensitivityTornadoChart","labelFormatter","ScenarioDistributionChart","Pie","cx","cy","outerRadius","Cell","ValuationBridgeChart","bridgeData","cumulativePV","EyeOff","chart","whileTap","find","c","freeCashFlows","slice","v","join","WACCCalculator","onModelInputChange","waccInputs","wacc","riskFreeRate","marketRiskPremium","beta","smallCompanyPremium","companySpecificRisk","debtInterestRate","marketValueEquity","marketValueDebt","buildUpMethod","equityRiskPremium","sizeRiskPremium","industryRiskPremium","industryWACC","industryBeta","industryDebtEquityRatio","waccCalculation","costOfEquityCAPM","costOfEquityBuildUp","costOfDebtAfterTax","totalCapital","equityWeight","debtWeight","waccCAPM","waccBuildUp","finalWACC","debtToEquityRatio","updateWACCInput","updatedWACC","tabs","applyWACCToDCF","waccValue","BookOpen","AdvancedDCF","_showDetails","_setShowDetails","_showAssumptions","_setShowAssumptions","advancedDCFResults","discountRate","terminalGrowthRate","projectionYears","workingCapitalAssumptions","receivablesDays","inventoryDays","payablesDays","capexAssumptions","presentValues","workingCapitalChanges","capexAmounts","unleveredFreeCashFlow","impliedShare","baseRevenue","yearData","nopat","currentRevenue","previousRevenue","currentReceivables","currentInventory","currentPayables","receivablesChange","inventoryChange","payablesChange","discountFactor","terminalFCF","terminalDiscountFactor","updateDCFAssumption","updatedDCF","updateBasicAssumption","charAt","ComparableAnalysis","_formatPercent","selectedMultiple","setSelectedMultiple","showAddComp","setShowAddComp","comparableCompanies","setComparableCompanies","ticker","marketCap","employees","founded","geography","businessModel","comparableMultiples","comp","multiples","ev_revenue","ev_ebitda","pe_ratio","revenue_per_employee","market_cap_revenue","marketStats","calculateStats","values","p25","p75","m","impliedValuation","targetRevenue","targetEBITDA","targetNetIncome","multipleDefinitions","def","round","multiple","Search","Filter","removeComparable","onSubmit","formData","FormData","companyData","newCompany","getFullYear","addComparableCompany","fromEntries","monteCarloEngine","workers","isRunning","currentSimulation","runDCFSimulation","baseInputs","distributions","confidenceLevel","randomSeed","variables","startTime","setSeed","samples","generateCorrelatedSamples","progressCallback","onProgress","scenarioInputs","createScenarioInputs","dcfResult","calculateDCFScenario","iteration","pricePerShare","analyzeResults","endTime","duration","meanPrice","parameters","runLBOSimulation","lboResult","calculateLBOScenario","totalReturn","meanIRR","numVars","independentSamples","sample","dist","sampleFromDistribution","choleskyMatrix","choleskyDecomposition","correlatedSample","independentValues","correlatedValues","applyCorrelation","distribution","normalRandom","stdDev","normalSample","mu","sigma","exp","triangularRandom","mode","betaRandom","alpha","exponentialRandom","lambda","weibullRandom","shape","paretoRandom","studentTRandom","df","chiSquaredRandom","u","normal","chiSq","gammaRandom","undefined","spareNormal","spare","u1","u2","z0","cos","PI","z1","matrix","n","L","j","k","applyTo","fcfMargin","currentPrice","totalPV","debtMultiple","exitProceeds","metrics","percentiles","confidenceIntervals","distributionTests","correlations","r","variance","sampleStdDev","percentile","calculateMode","count","trimmedMean","calculateTrimmedMean","mad","calculateMAD","iqr","p1","p5","p10","p50","p90","p95","p99","lowerBound","upperBound","bootstrapCI","calculateBootstrapCI","var95","var99","cvar95","cvar99","skewness","calculateSkewness","kurtosis","calculateKurtosis","excessKurtosis","expectedShortfall","maxDrawdown","calculateMaxDrawdown","sharpeRatio","calculateSharpeRatio","sortinoRatio","calculateSortinoRatio","jarqueBera","jarqueBeraTest","kolmogorovSmirnov","ksTestNormality","shapiroWilk","shapiroWilkTest","calculateCorrelationMatrix","frequency","rounded","maxFreq","modes","sortedValues","trimProportion","trimCount","trimmedValues","deviations","bootstrapSamples","bootstrapMeans","peak","drawdown","targetReturn","excessReturns","negativeReturns","Infinity","downsideDeviation","meanExcessReturn","jb","pValue","chiSquaredCDF","statistic","isNormal","incompleteGamma","term","logGamma","h","an","del","coef","ser","xx","tmp","maxD","empirical","theoretical","normalCDF","critical","erf","sign","t","denominator","w","valuesI","valuesJ","calculateCorrelation","meanX","meanY","numerator","sumXX","sumYY","dx","dy","p","lower","upper","ceil","seed","stopSimulation","isSimulationRunning","MonteCarloSimulation","simulationResults","setSimulationResults","setIsRunning","progress","setProgress","simulationSettings","setSimulationSettings","enableCorrelation","setDistributions","setCorrelationMatrix","distributionTypes","runSimulation","enabledDistributions","latestIndex","currentOperatingIncome","updateDistribution","updates","updateCorrelation","newMatrix","row","generateHistogramData","binWidth","histogram","bin","binIndex","bins","generateScatterData","_i","newType","newParameters","param","Square","every","AreaChart","_name","Area","fillOpacity","ScatterChart","Scatter","ScenarioModeling","showAddForm","setShowAddForm","modifiedRevenue","growthRate","baseOperating","modifiedOperating","baseRevenueValue","scenarioRevenue","baseIncome","adjustedMargin","weightedAverageValue","updatedScenarios","ScenarioForm","SensitivityAnalysis","selectedVariable","_setSelectedVariable","sensitivityConfig","sensitivity","ranges","variableDefinitions","baseValue","isPercentage","baseValuation","sensitivityResults","variableDef","stepSize","modifiedData","dcfInputs","originalIncome","dcfParams","operatingIncomeData","operatingIncomes","periodKey","pv","lastYearIncome","presentTerminalValue","presentValueOperations","tempCalculateDCF","tornadoData","maxImpact","positiveImpact","negativeImpact","updateSensitivityRange","updatedRanges","transform","variableName","updatedVariables","_removed","removeVariable","point","minHeight","addVariable","AdvancedAnalyticsIntegration","onOpenOptions","onOpenBonds","onOpenCredit","ModelingTools","activeModel","setActiveModel","setModelInputs","terminalValueMultiple","receivablesGrowth","inventoryGrowth","payablesGrowth","maintenanceCapex","ratios","compareToIndustry","industryAverages","netMargin","calculatedMetrics","margins","gross","net","isLatestPeriod","totalCOGS","prevRevenue","prevOperating","inputData","sourceData","modelTypes","updateModelInput","dispatchEvent","CustomEvent","MonteCarloIntegrationHub","financialModel","_financialModel","activeAnalysis","setActiveAnalysis","correlationsEnabled","crossModelAnalysis","integratedResults","setIntegratedResults","runIntegratedSimulation","lbo","portfolio","dcfDistributions","lboDistributions","leverageRatio","calculateCrossModelCorrelations","calculateIntegratedRiskMetrics","generatePortfolioAnalysis","monteCarloIntegrated","settings","dcfValues","simulations","lboValues","pearsonCorrelation","dcfLboCorrelation","interpretation","riskImplication","sumX","sumY","sumXY","xi","yi","expectedValue","volatility","acc","dcfWeighted","lboWeighted","analysisOptions","option","CollaborationService","EventEmitter","super","workspaces","Map","users","connections","annotations","modelStates","isInitialized","wsConnection","reconnectAttempts","maxReconnectAttempts","heartbeatInterval","syncQueue","isOnline","onLine","env","__vite_import_meta_env__","collabEnabled","VITE_ENABLE_COLLABORATION","handleConnectionOpen","bind","handleConnectionMessage","handleConnectionClose","handleConnectionError","addEventListener","reconnectWebSocket","emit","online","initialize","userId","userProfile","currentUserId","currentUserProfile","joinedAt","set","initializeWebSocket","startHeartbeat","explicitUrl","VITE_COLLAB_WS_URL","wsUrl","location","protocol","host","useMock","VITE_COLLAB_WS_MOCK","WebSocket","readyState","send","close","connected","sendMessage","processSyncQueue","handleWorkspaceUpdate","handleUserJoined","handleUserLeft","handleModelUpdate","handleAnnotationAdded","handleAnnotationUpdated","handleAnnotationDeleted","handleCursorUpdate","handlePresenceUpdate","shift","joinWorkspace","workspaceId","workspace","createdBy","members","models","isPublic","allowGuests","maxMembers","lastActivity","leaveWorkspace","get","delete","shareModel","permissions","sharedModel","sharedBy","sharedAt","canEdit","canComment","canView","modifiedBy","updateModel","_options","model","updatedData","addAnnotation","annotation","annotationId","substr","newAnnotation","position","updatedAt","resolved","replies","updateCursor","getWorkspaceMembers","getWorkspaceModels","getModelAnnotations","user","assign","cleanup","clear","collaborationService","helpContent","keyPoints","formulas","tips","montecarlo","HelpPanel","helpKey","isOpen","help","createPortal","tip","ExternalLink","OnboardingTour","steps","isActive","onComplete","onSkip","currentStep","setCurrentStep","tooltipPosition","setTooltipPosition","element","querySelector","rect","getBoundingClientRect","scrollTop","pageYOffset","documentElement","scrollLeft","pageXOffset","zIndex","boxShadow","isLastStep","cn","Skeleton","variant","props","FinancialTableSkeleton","rows","columns","showHeader","rowIndex","colIndex","LoadingWrapper","skeleton","fallback","ErrorBoundary","Component","state","hasError","errorInfo","errorId","retryCount","getDerivedStateFromError","componentDidCatch","setState","logErrorToService","errorData","stack","componentStack","userAgent","fetch","method","catch","handleRetry","prevState","handleReportError","subject","open","render","FallbackComponent","isValidElement","retry","isNetworkError","isDataError","isCriticalError","Button","Home","Bug","ONBOARDING_TOURS","privateAnalysis","dcfModeling","portfolioManagement","marketAnalysis","FEATURE_INTRODUCTIONS","financialValidator","trigger","dismissible","virtualizedTable","advancedCharts","exportCapabilities","STORAGE_KEY","useOnboarding","onboardingState","setOnboardingState","completedTours","dismissedIntroductions","currentTour","showTooltips","autoStartTours","tourSpeed","hasTourBeenCompleted","tourId","startTour","tour","startedAt","completeTour","Set","skipTour","dismissIntroduction","featureId","resetOnboarding","updatePreferences","newPreferences","shouldShowFeatureIntroduction","shouldShowIntroduction","getAvailableTours","completed","PrivateAnalysis","isCollabInitialized","setIsInitialized","connectionStatus","setConnectionStatus","currentWorkspace","setCurrentWorkspace","workspaceMembers","setWorkspaceMembers","setError","initialized","err","initializeService","handleConnectionStatus","handleWorkspaceJoined","handleWorkspaceLeft","member","leftUserId","on","off","useCollaboration","showCollaboration","activeHelpPanel","setActiveHelpPanel","showQuickStart","setShowQuickStart","setFinancialData","defaultFinancialData","loading","setLoading","lastSaved","setLastSaved","hasUnsavedChanges","setHasUnsavedChanges","advancedResults","setAdvancedResults","threeStatement","monteCarlo","insightsSidebarVisible","setInsightsSidebarVisible","currentMetricFocus","setCurrentMetricFocus","setSavedAnalyses","saved","currentView","setCurrentView","showExportModal","setShowExportModal","showImportModal","setShowImportModal","isOnboardingCompleted","setIsOnboardingCompleted","setShowCollaboration","showComments","setShowComments","dataStatus","setDataStatus","getDataCompleteness","completedFields","totalWeightedFields","balanceSheet","cashFlow","completionPercentage","calculateModelingProgress","calculateAnalysisProgress","SEOHead","canonical","keywords","Header","dataCompleteness","modelingProgress","analysisProgress","updated","saveAnalysis","Save","toLocaleTimeString","SecondaryNav","navigation","activeItem","onItemClick","itemId","HelpCircle"],"mappings":"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"}