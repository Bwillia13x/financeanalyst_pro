{"version":3,"mappings":"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","names":["React","forwardRef","className","id","checked","indeterminate","disabled","required","label","description","error","size","props","ref","checkboxId","Math","random","toString","substr","cn","children","jsxs","jsx","type","htmlFor","sm","default","lg","Check","Minus","displayName","lazy","__vitePreload","import","__VITE_PRELOAD__","then","module","data","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","width","height","strokeDasharray","stroke","fontSize","contentStyle","backgroundColor","border","borderRadius","dataKey","fill","radius","ScatterChart","Scatter","AreaChart","Area","FinancialInput","value","onChange","onBlur","placeholder","prefix","suffix","locale","currency","loading","decimals","allowNegative","autoFocus","onValidation","min","max","displayValue","setDisplayValue","useState","isFocused","setIsFocused","isValid","setIsValid","inputRef","useRef","componentRef","inputId","formatValue","val","numValue","parseFloat","isNaN","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","parseValue","cleanValue","replace","useEffect","current","focus","DollarSign","Percent","Calculator","getIcon","e","newValue","target","test","onFocus","rawValue","setTimeout","select","valid","errorMessage","validateInput","onKeyPress","key","preventDefault","blur","AlertCircle","EditableCell","onSave","onCancel","isFormula","isEditing","onEdit","showEditIcon","variant","editingValue","setEditingValue","localError","setLocalError","isHovered","setIsHovered","formatted","absValue","abs","handleSave","finalValue","handleCancel","handleChange","handleKeyPress","styles","container","text","hover","input","editIcon","getVariantStyles","onKeyDown","onClick","title","X","onMouseEnter","onMouseLeave","Edit2","CURRENCY_CONFIG","USD","symbol","code","name","EUR","GBP","JPY","CAD","AUD","CHF","CNY","CurrencyInput","showCurrency","showTrend","previousValue","step","abbreviateDisplay","precision","validationMessage","setValidationMessage","currencyConfig","effectiveDecimals","effectivePlaceholder","useMemo","formatCurrency","options","forDisplay","abbreviated","sign","toFixed","parseCurrency","str","toLowerCase","multiplier","endsWith","trend","previous","getTrend","message","filled","minimal","TrendingUp","TrendingDown","LoadingState","showIcon","Icon","config","spinner","icon","gap","padding","variantStyles","subtle","pulsing","displayMessage","calculation","financial","percentage","LoadingSkeleton","LoadingDots","sizeClasses","variantClasses","primary","success","warning","map","i","animationDelay","animationDuration","ValidationFeedback","dismissible","onDismiss","position","AlertTriangle","CheckCircle","info","Info","bg","getVariantClasses","FieldValidation","ValidationList","items","showNumbers","length","item","index","ValidationSummary","errors","warnings","collapsible","isCollapsed","setIsCollapsed","totalIssues","allItems","LazyLoader","fallback","componentName","threshold","rootMargin","preloadDelay","priority","onLoad","onError","performanceTracking","isVisible","setIsVisible","isLoaded","setIsLoaded","loadError","setLoadError","preloadTimer","setPreloadTimer","containerRef","observerRef","loadStartTime","IntersectionObserver","entries","forEach","entry","isIntersecting","performance","now","unobserve","observe","disconnect","clearTimeout","timer","loadTime","trackFinancialComponentPerformance","timestamp","Date","defaultFallback","errorFallback","viewBox","fillRule","d","clipRule","Suspense","ErrorBoundary","Component","constructor","super","this","state","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","componentDidMount","render","ChartLoadingFallback","withLazyChart","ChartComponent","LazyChartComponent","chartProps","elementRef","useFinancialAccessibility","el","MetricCard","change","TrendIcon","Card","CardContent","toLocaleString","processedData","reduce","acc","prevTotal","cumulative","push","start","isPositive","isTotal","CustomBar","payload","x","y","barColor","CustomTooltip","active","CardHeader","CardTitle","margin","top","right","left","bottom","axisLine","tickLine","tick","angle","textAnchor","tickFormatter","ReferenceLine","strokeWidth","shape","activeIndex","setActiveIndex","colors","total","sum","color","PieChart","Pie","cx","cy","innerRadius","outerRadius","paddingAngle","_","Cell","filter","transform","transformOrigin","showGrowthRate","growth","prevValue","currentValue","firstValue","lastValue","overallGrowth","isPositiveTrend","CustomDot","Dot","r","LineChart","Line","dot","activeDot","xAxisLabels","yAxisLabels","formatCell","hoveredCell","setHoveredCell","allValues","flat","minValue","range","xLabel","yLabel","clientX","clientY","row","yIndex","xIndex","intensity","getColorIntensity","getCellColor","metrics","columns","gridClasses","groupedMetrics","groups","metric","category","hasCategories","Object","keys","categoryMetrics","highlight","some","m","isSummary","FinancialInputsDemo","values","setValues","revenue","expenses","editableValue","isLoading","setIsLoading","validation","setErrors","isEditingCell","setIsEditingCell","handleValueChange","prev","newErrors"],"ignoreList":[],"sources":["../../src/components/ui/Checkbox.jsx","../../src/components/ui/LazyChart.jsx","../../src/components/ui/FinancialInput.jsx","../../src/components/ui/EditableCell.jsx","../../src/components/ui/CurrencyInput.jsx","../../src/components/ui/LoadingState.jsx","../../src/components/ui/ValidationFeedback.jsx","../../src/components/LazyLoader/LazyLoader.jsx","../../src/components/ui/charts/LazyChartWrapper.jsx","../../src/components/ui/charts/MetricsDashboard.jsx","../../src/components/ui/charts/index.js","../../src/components/ui/charts/DCFWaterfall.jsx","../../src/components/ui/charts/RevenueBreakdown.jsx","../../src/components/ui/charts/TrendLine.jsx","../../src/components/ui/charts/SensitivityHeatmap.jsx","../../src/components/FinancialInputsDemo.jsx"],"sourcesContent":["import { Check, Minus } from 'lucide-react';\nimport React from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst Checkbox = React.forwardRef(\n  (\n    {\n      className,\n      id,\n      checked,\n      indeterminate = false,\n      disabled = false,\n      required = false,\n      label,\n      description,\n      error,\n      size = 'default',\n      ...props\n    },\n    ref\n  ) => {\n    // Generate unique ID if not provided\n    const checkboxId = id || `checkbox-${Math.random().toString(36).substr(2, 9)}`;\n\n    // Size variants\n    const sizeClasses = {\n      sm: 'h-4 w-4',\n      default: 'h-4 w-4',\n      lg: 'h-5 w-5'\n    };\n\n    return (\n      <div className={cn('flex items-start space-x-2', className)}>\n        <div className=\"relative flex items-center\">\n          <input\n            type=\"checkbox\"\n            ref={ref}\n            id={checkboxId}\n            checked={checked}\n            disabled={disabled}\n            required={required}\n            className=\"sr-only\"\n            {...props}\n          />\n\n          <label\n            htmlFor={checkboxId}\n            className={cn(\n              'peer shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground cursor-pointer transition-colors',\n              sizeClasses[size],\n              checked && 'bg-primary text-primary-foreground border-primary',\n              indeterminate && 'bg-primary text-primary-foreground border-primary',\n              error && 'border-destructive',\n              disabled && 'cursor-not-allowed opacity-50'\n            )}\n          >\n            {checked && !indeterminate && (\n              <Check className=\"h-3 w-3 text-current flex items-center justify-center\" />\n            )}\n            {indeterminate && (\n              <Minus className=\"h-3 w-3 text-current flex items-center justify-center\" />\n            )}\n          </label>\n        </div>\n\n        {(label || description || error) && (\n          <div className=\"flex-1 space-y-1\">\n            {label && (\n              <label\n                htmlFor={checkboxId}\n                className={cn(\n                  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 cursor-pointer',\n                  error ? 'text-destructive' : 'text-foreground'\n                )}\n              >\n                {label}\n                {required && <span className=\"text-destructive ml-1\">*</span>}\n              </label>\n            )}\n\n            {description && !error && (\n              <p className=\"text-sm text-muted-foreground\">{description}</p>\n            )}\n\n            {error && <p className=\"text-sm text-destructive\">{error}</p>}\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nCheckbox.displayName = 'Checkbox';\n\n// Checkbox Group component\nconst CheckboxGroup = React.forwardRef(\n  (\n    {\n      className,\n      children,\n      label,\n      description,\n      error,\n      required = false,\n      disabled = false,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <fieldset\n        ref={ref} disabled={disabled} className={cn('space-y-3', className)}\n        {...props}\n      >\n        {label && (\n          <legend\n            className={cn('text-sm font-medium', error ? 'text-destructive' : 'text-foreground')}\n          >\n            {label}\n            {required && <span className=\"text-destructive ml-1\">*</span>}\n          </legend>\n        )}\n\n        {description && !error && <p className=\"text-sm text-muted-foreground\">{description}</p>}\n\n        <div className=\"space-y-2\">{children}</div>\n\n        {error && <p className=\"text-sm text-destructive\">{error}</p>}\n      </fieldset>\n    );\n  }\n);\n\nCheckboxGroup.displayName = 'CheckboxGroup';\n\nexport { Checkbox, CheckboxGroup };\n","import React, { Suspense, lazy } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\n// Lazy load the chart components to reduce initial bundle size\nconst LazyBarChart = lazy(() =>\n  import('recharts').then(module => ({\n    default: ({ data, ...props }) => {\n      const { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } = module;\n      return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart data={data} {...props}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--color-border)\" />\n            <XAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <YAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'var(--color-popover)',\n                border: '1px solid var(--color-border)',\n                borderRadius: '8px'\n              }}\n            />\n            <Bar dataKey=\"value\" fill=\"var(--color-primary)\" radius={[2, 2, 0, 0]} />\n          </BarChart>\n        </ResponsiveContainer>\n      );\n    }\n  }))\n);\n\nconst LazyScatterChart = lazy(() =>\n  import('recharts').then(module => ({\n    default: ({ data, ...props }) => {\n      const { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } =\n        module;\n      return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <ScatterChart data={data} {...props}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--color-border)\" />\n            <XAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <YAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'var(--color-popover)',\n                border: '1px solid var(--color-border)',\n                borderRadius: '8px'\n              }}\n            />\n            <Scatter dataKey=\"value\" fill=\"var(--color-primary)\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n      );\n    }\n  }))\n);\n\nconst LazyAreaChart = lazy(() =>\n  import('recharts').then(module => ({\n    default: ({ data, ...props }) => {\n      const { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } = module;\n      return (\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <AreaChart data={data} {...props}>\n            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"var(--color-border)\" />\n            <XAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <YAxis stroke=\"var(--color-muted-foreground)\" fontSize={12} />\n            <Tooltip\n              contentStyle={{\n                backgroundColor: 'var(--color-popover)',\n                border: '1px solid var(--color-border)',\n                borderRadius: '8px'\n              }}\n            />\n            <Area dataKey=\"value\" fill=\"var(--color-primary)\" stroke=\"var(--color-primary)\" />\n          </AreaChart>\n        </ResponsiveContainer>\n      );\n    }\n  }))\n);\n\n// Chart wrapper component with loading state\nconst ChartWrapper = ({ children, loading = false }) => {\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <LoadingSpinner size=\"lg\" />\n      </div>\n    );\n  }\n\n  return (\n    <Suspense\n      fallback={\n        <div className=\"flex items-center justify-center h-full\">\n          <LoadingSpinner size=\"lg\" />\n        </div>\n      }\n    >\n      {children}\n    </Suspense>\n  );\n};\n\n// Export chart components\nexport const BarChart = props => (\n  <ChartWrapper>\n    <LazyBarChart {...props} />\n  </ChartWrapper>\n);\n\nexport const ScatterChart = props => (\n  <ChartWrapper>\n    <LazyScatterChart {...props} />\n  </ChartWrapper>\n);\n\nexport const AreaChart = props => (\n  <ChartWrapper>\n    <LazyAreaChart {...props} />\n  </ChartWrapper>\n);\n\nexport default ChartWrapper;\n","import { AlertCircle, Calculator, DollarSign, Percent } from 'lucide-react';\nimport React, { useState, useEffect, useRef } from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst FinancialInput = React.forwardRef(({\n  className,\n  label,\n  value,\n  onChange,\n  onBlur,\n  placeholder = '0.00',\n  type = 'currency', // 'currency', 'percentage', 'number'\n  prefix,\n  suffix,\n  locale = 'en-US',\n  currency = 'USD',\n  error,\n  description,\n  required = false,\n  disabled = false,\n  loading = false,\n  decimals = 2,\n  allowNegative = true,\n  id,\n  autoFocus = false,\n  onValidation,\n  min,\n  max,\n  ...props\n}, ref) => {\n  const [displayValue, setDisplayValue] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const inputRef = useRef(null);\n  const componentRef = ref || inputRef;\n\n  // Generate unique ID if not provided\n  const inputId = id || `financial-input-${Math.random().toString(36).substr(2, 9)}`;\n\n  // Format value for display\n  const formatValue = (val) => {\n    if (!val && val !== 0) return '';\n\n    const numValue = typeof val === 'string' ? parseFloat(val) : val;\n    if (isNaN(numValue)) return '';\n\n    switch (type) {\n      case 'currency':\n        return new Intl.NumberFormat(locale, {\n          style: 'currency',\n          currency,\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals\n        }).format(numValue);\n\n      case 'percentage':\n        return new Intl.NumberFormat(locale, {\n          style: 'percent',\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals\n        }).format(numValue / 100);\n\n      default:\n        return new Intl.NumberFormat(locale, {\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals\n        }).format(numValue);\n    }\n  };\n\n  // Parse display value to raw number\n  const parseValue = (val) => {\n    if (!val) return 0;\n\n    // Remove currency symbols, commas, and spaces\n    const cleanValue = val\n      .replace(/[^\\d.-]/g, '')\n      .replace(/,/g, '');\n\n    const numValue = parseFloat(cleanValue);\n    return isNaN(numValue) ? 0 : numValue;\n  };\n\n  // Validate input\n  const validateInput = (val) => {\n    const numValue = typeof val === 'string' ? parseValue(val) : val;\n\n    let valid = true;\n    let errorMessage = '';\n\n    if (required && (!numValue && numValue !== 0)) {\n      valid = false;\n      errorMessage = 'This field is required';\n    } else if (!allowNegative && numValue < 0) {\n      valid = false;\n      errorMessage = 'Negative values are not allowed';\n    } else if (min !== undefined && numValue < min) {\n      valid = false;\n      errorMessage = `Value must be at least ${formatValue(min)}`;\n    } else if (max !== undefined && numValue > max) {\n      valid = false;\n      errorMessage = `Value must not exceed ${formatValue(max)}`;\n    }\n\n    setIsValid(valid);\n\n    if (onValidation) {\n      onValidation(valid, errorMessage);\n    }\n\n    return valid;\n  };\n\n  // Update display value when prop value changes\n  useEffect(() => {\n    if (!isFocused) {\n      setDisplayValue(formatValue(value));\n    }\n  }, [value, type, currency, locale, decimals, isFocused]);\n\n  // Handle focus\n  const handleFocus = (e) => {\n    setIsFocused(true);\n    // Show raw number for editing\n    const rawValue = value ? value.toString() : '';\n    setDisplayValue(rawValue);\n\n    // Select all text for easy replacement\n    setTimeout(() => {\n      if (componentRef.current) {\n        componentRef.current.select();\n      }\n    }, 0);\n  };\n\n  // Handle blur\n  const handleBlur = (e) => {\n    setIsFocused(false);\n    const rawValue = parseValue(displayValue);\n\n    validateInput(rawValue);\n\n    // Format for display\n    setDisplayValue(formatValue(rawValue));\n\n    // Call onChange with parsed value\n    if (onChange) {\n      onChange(rawValue);\n    }\n\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  // Handle input change\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n\n    // Basic validation for numeric input\n    const numericRegex = allowNegative ? /^-?\\d*\\.?\\d*$/ : /^\\d*\\.?\\d*$/;\n\n    if (numericRegex.test(newValue) || newValue === '') {\n      setDisplayValue(newValue);\n    }\n  };\n\n  // Handle key press\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      componentRef.current?.blur();\n    }\n  };\n\n  // Get icon based on type\n  const getIcon = () => {\n    switch (type) {\n      case 'currency':\n        return <DollarSign size={16} className=\"text-muted-foreground\" />;\n      case 'percentage':\n        return <Percent size={16} className=\"text-muted-foreground\" />;\n      default:\n        return <Calculator size={16} className=\"text-muted-foreground\" />;\n    }\n  };\n\n  // Auto-focus if specified\n  useEffect(() => {\n    if (autoFocus && componentRef.current) {\n      componentRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  return (\n    <div className=\"space-y-2\">\n      {label && (\n        <label\n          htmlFor={inputId}\n          className={cn(\n            'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n            error && !isValid ? 'text-destructive' : 'text-foreground'\n          )}\n        >\n          {label}\n          {required && <span className=\"text-destructive ml-1\">*</span>}\n        </label>\n      )}\n\n      <div className=\"relative\">\n        {/* Left icon/prefix */}\n        <div className=\"absolute left-3 top-1/2 -translate-y-1/2 flex items-center gap-2 pointer-events-none z-10\">\n          {getIcon()}\n          {prefix && (\n            <span className=\"text-sm text-muted-foreground font-medium\">\n              {prefix}\n            </span>\n          )}\n        </div>\n\n        <input\n          ref={componentRef}\n          id={inputId}\n          type=\"text\"\n          value={displayValue}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyPress={handleKeyPress}\n          placeholder={placeholder}\n          disabled={disabled || loading}\n          className={cn(\n            // Base styles\n            'flex h-11 w-full rounded-lg border bg-background text-sm ring-offset-background',\n            'file:border-0 file:bg-transparent file:text-sm file:font-medium',\n            'placeholder:text-muted-foreground',\n            'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n            'disabled:cursor-not-allowed disabled:opacity-50',\n            'transition-all duration-200',\n\n            // Padding adjustments for icons\n            'pl-10 pr-4',\n            suffix && 'pr-16',\n\n            // Financial styling\n            'font-mono text-right',\n            'border-input hover:border-ring/50',\n\n            // States\n            isFocused && 'ring-2 ring-ring ring-offset-2 border-ring',\n            error && !isValid && 'border-destructive focus-visible:ring-destructive',\n            loading && 'animate-pulse',\n\n            className\n          )}\n          {...props}\n        />\n\n        {/* Right suffix */}\n        {suffix && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2 pointer-events-none\">\n            <span className=\"text-sm text-muted-foreground font-medium\">\n              {suffix}\n            </span>\n          </div>\n        )}\n\n        {/* Loading indicator */}\n        {loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <div className=\"w-4 h-4 border-2 border-muted-foreground border-t-transparent rounded-full animate-spin\" />\n          </div>\n        )}\n\n        {/* Error icon */}\n        {error && !isValid && !loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <AlertCircle size={16} className=\"text-destructive\" />\n          </div>\n        )}\n      </div>\n\n      {/* Description */}\n      {description && !error && !isValid && (\n        <p className=\"text-sm text-muted-foreground\">\n          {description}\n        </p>\n      )}\n\n      {/* Error message */}\n      {(error || !isValid) && (\n        <p className=\"text-sm text-destructive flex items-center gap-1\">\n          <AlertCircle size={14} />\n          {error || 'Invalid input'}\n        </p>\n      )}\n    </div>\n  );\n});\n\nFinancialInput.displayName = 'FinancialInput';\n\nexport default FinancialInput;\n","import { Check, X, Edit2, Calculator, AlertCircle } from 'lucide-react';\nimport React, { useState, useEffect, useRef } from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst EditableCell = ({\n  value,\n  onChange,\n  onSave,\n  onCancel,\n  className,\n  type = 'currency', // 'currency', 'percentage', 'number', 'text'\n  placeholder = '0.00',\n  isFormula = false,\n  isEditing = false,\n  onEdit,\n  disabled = false,\n  loading = false,\n  error,\n  locale = 'en-US',\n  currency = 'USD',\n  decimals = 2,\n  allowNegative = true,\n  min,\n  max,\n  autoFocus = true,\n  showEditIcon = true,\n  variant = 'default', // 'default', 'adjusted', 'formula'\n  ...props\n}) => {\n  const [editingValue, setEditingValue] = useState('');\n  const [localError, setLocalError] = useState('');\n  const [isHovered, setIsHovered] = useState(false);\n  const inputRef = useRef(null);\n\n  // Format value for display\n  const formatValue = (val) => {\n    if (!val && val !== 0) return '—';\n\n    const numValue = typeof val === 'string' ? parseFloat(val) : val;\n    if (isNaN(numValue)) return '—';\n\n    switch (type) {\n      case 'currency':\n        const formatted = new Intl.NumberFormat(locale, {\n          style: 'currency',\n          currency,\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals\n        }).format(numValue);\n\n        // For large numbers, add suffix\n        const absValue = Math.abs(numValue);\n        if (absValue >= 1000000) {\n          return new Intl.NumberFormat(locale, {\n            minimumFractionDigits: 1,\n            maximumFractionDigits: 1\n          }).format(numValue / 1000000) + 'M';\n        } else if (absValue >= 1000) {\n          return new Intl.NumberFormat(locale, {\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n          }).format(numValue);\n        }\n        return formatted.replace(/\\.00$/, '');\n\n      case 'percentage':\n        return new Intl.NumberFormat(locale, {\n          style: 'percent',\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals\n        }).format(numValue / 100);\n\n      case 'number':\n        return new Intl.NumberFormat(locale, {\n          minimumFractionDigits: decimals,\n          maximumFractionDigits: decimals\n        }).format(numValue);\n\n      default:\n        return val?.toString() || '';\n    }\n  };\n\n  // Parse display value to raw number\n  const parseValue = (val) => {\n    if (!val) return 0;\n\n    // Remove currency symbols, commas, and spaces\n    const cleanValue = val\n      .replace(/[^\\d.-]/g, '')\n      .replace(/,/g, '');\n\n    const numValue = parseFloat(cleanValue);\n    return isNaN(numValue) ? 0 : numValue;\n  };\n\n  // Validate input\n  const validateInput = (val) => {\n    const numValue = type === 'text' ? val : parseValue(val);\n\n    if (type === 'text') return true;\n\n    if (!allowNegative && numValue < 0) {\n      setLocalError('Negative values are not allowed');\n      return false;\n    }\n\n    if (min !== undefined && numValue < min) {\n      setLocalError(`Value must be at least ${formatValue(min)}`);\n      return false;\n    }\n\n    if (max !== undefined && numValue > max) {\n      setLocalError(`Value must not exceed ${formatValue(max)}`);\n      return false;\n    }\n\n    setLocalError('');\n    return true;\n  };\n\n  // Handle edit start\n  const handleEdit = () => {\n    if (disabled || isFormula) return;\n\n    setEditingValue(value ? value.toString() : '');\n    setLocalError('');\n\n    if (onEdit) {\n      onEdit(true);\n    }\n  };\n\n  // Handle save\n  const handleSave = () => {\n    const finalValue = type === 'text' ? editingValue : parseValue(editingValue);\n\n    if (!validateInput(editingValue)) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(finalValue);\n    }\n\n    if (onSave) {\n      onSave(finalValue);\n    }\n\n    if (onEdit) {\n      onEdit(false);\n    }\n  };\n\n  // Handle cancel\n  const handleCancel = () => {\n    setEditingValue('');\n    setLocalError('');\n\n    if (onCancel) {\n      onCancel();\n    }\n\n    if (onEdit) {\n      onEdit(false);\n    }\n  };\n\n  // Handle input change\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n\n    if (type !== 'text') {\n      const numericRegex = allowNegative ? /^-?\\d*\\.?\\d*$/ : /^\\d*\\.?\\d*$/;\n      if (numericRegex.test(newValue) || newValue === '') {\n        setEditingValue(newValue);\n      }\n    } else {\n      setEditingValue(newValue);\n    }\n  };\n\n  // Handle key press\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSave();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      handleCancel();\n    } else if (e.key === 'Tab') {\n      e.preventDefault();\n      handleSave();\n    }\n  };\n\n  // Auto-focus input when editing starts\n  useEffect(() => {\n    if (isEditing && inputRef.current && autoFocus) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, [isEditing, autoFocus]);\n\n  // Get variant styles\n  const getVariantStyles = () => {\n    switch (variant) {\n      case 'adjusted':\n        return {\n          container: 'bg-gradient-to-r from-amber-50 to-yellow-50 border-amber-200',\n          text: isFormula ? 'text-amber-900' : 'text-slate-700',\n          hover: 'hover:bg-amber-100 hover:border-amber-300',\n          input: 'border-amber-400 focus:ring-amber-100 focus:border-amber-500',\n          editIcon: 'text-amber-500'\n        };\n      case 'formula':\n        return {\n          container: 'bg-gradient-to-r from-blue-50 to-blue-100 border-blue-200',\n          text: 'text-blue-900',\n          hover: 'cursor-not-allowed',\n          input: 'border-blue-400 focus:ring-blue-100 focus:border-blue-500',\n          editIcon: 'text-blue-500'\n        };\n      default:\n        return {\n          container: 'bg-background border-transparent',\n          text: isFormula ? 'text-blue-900' : 'text-slate-700',\n          hover: 'hover:bg-slate-50 hover:border-slate-200',\n          input: 'border-input focus:ring-ring focus:border-ring',\n          editIcon: 'text-slate-400'\n        };\n    }\n  };\n\n  const styles = getVariantStyles();\n\n  if (isEditing) {\n    return (\n      <div className=\"relative\">\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={editingValue}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          placeholder={placeholder}\n          disabled={loading}\n          className={cn(\n            'w-full px-3 py-2.5 bg-white border-2 rounded-lg text-slate-900 text-right font-mono text-sm',\n            'focus:outline-none focus:ring-4 shadow-lg transition-all duration-200',\n            styles.input,\n            loading && 'animate-pulse',\n            localError && 'border-destructive focus:ring-destructive/20',\n            className\n          )}\n        />\n\n        {/* Action buttons */}\n        <div className=\"absolute -top-2 -right-2 flex gap-1\">\n          <button\n            onClick={handleSave}\n            disabled={loading || !!localError}\n            className={cn(\n              'w-5 h-5 bg-success hover:bg-success/90 text-white rounded-full',\n              'flex items-center justify-center text-xs transition-colors',\n              'disabled:opacity-50 disabled:cursor-not-allowed'\n            )}\n            title=\"Save changes\"\n          >\n            <Check size={12} />\n          </button>\n          <button\n            onClick={handleCancel}\n            disabled={loading}\n            className={cn(\n              'w-5 h-5 bg-destructive hover:bg-destructive/90 text-white rounded-full',\n              'flex items-center justify-center text-xs transition-colors',\n              'disabled:opacity-50 disabled:cursor-not-allowed'\n            )}\n            title=\"Cancel changes\"\n          >\n            <X size={12} />\n          </button>\n        </div>\n\n        {/* Loading indicator */}\n        {loading && (\n          <div className=\"absolute left-2 top-1/2 -translate-y-1/2\">\n            <div className=\"w-3 h-3 border-2 border-muted-foreground border-t-transparent rounded-full animate-spin\" />\n          </div>\n        )}\n\n        {/* Local error */}\n        {localError && (\n          <div className=\"absolute -bottom-6 left-0 right-0 text-xs text-destructive flex items-center gap-1\">\n            <AlertCircle size={10} />\n            {localError}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      onClick={handleEdit}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      className={cn(\n        'px-3 py-2.5 rounded-lg font-mono text-sm transition-all duration-200',\n        'min-h-[40px] flex items-center justify-end relative group',\n        styles.container,\n        !disabled && !isFormula && styles.hover,\n        !disabled && !isFormula && 'cursor-pointer',\n        isFormula && 'font-semibold shadow-sm',\n        disabled && 'opacity-50 cursor-not-allowed',\n        error && 'border-destructive',\n        className\n      )}\n    >\n      <span className={styles.text}>\n        {formatValue(value)}\n      </span>\n\n      {/* Formula indicator */}\n      {isFormula && (\n        <Calculator size={12} className=\"ml-2 text-blue-500/80\" />\n      )}\n\n      {/* Edit icon */}\n      {!isFormula && !disabled && showEditIcon && (\n        <Edit2\n          size={12}\n          className={cn(\n            'ml-2 transition-opacity',\n            isHovered ? 'opacity-60' : 'opacity-0',\n            styles.editIcon\n          )}\n        />\n      )}\n\n      {/* Error indicator */}\n      {error && (\n        <AlertCircle size={12} className=\"ml-2 text-destructive\" />\n      )}\n\n      {/* Loading indicator */}\n      {loading && (\n        <div className=\"ml-2\">\n          <div className=\"w-3 h-3 border-2 border-current border-t-transparent rounded-full animate-spin opacity-50\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditableCell;\n","import { DollarSign, AlertCircle, TrendingUp, TrendingDown } from 'lucide-react';\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\n\nimport { cn } from '../../utils/cn';\n\n// Currency configurations\nconst CURRENCY_CONFIG = {\n  USD: { symbol: '$', code: 'USD', decimals: 2, name: 'US Dollar' },\n  EUR: { symbol: '€', code: 'EUR', decimals: 2, name: 'Euro' },\n  GBP: { symbol: '£', code: 'GBP', decimals: 2, name: 'British Pound' },\n  JPY: { symbol: '¥', code: 'JPY', decimals: 0, name: 'Japanese Yen' },\n  CAD: { symbol: 'C$', code: 'CAD', decimals: 2, name: 'Canadian Dollar' },\n  AUD: { symbol: 'A$', code: 'AUD', decimals: 2, name: 'Australian Dollar' },\n  CHF: { symbol: 'CHF', code: 'CHF', decimals: 2, name: 'Swiss Franc' },\n  CNY: { symbol: '¥', code: 'CNY', decimals: 2, name: 'Chinese Yuan' }\n};\n\nconst CurrencyInput = React.forwardRef(({\n  className,\n  label,\n  value = 0,\n  onChange,\n  onBlur,\n  placeholder,\n  currency = 'USD',\n  locale = 'en-US',\n  error,\n  description,\n  required = false,\n  disabled = false,\n  loading = false,\n  allowNegative = true,\n  showCurrency = true,\n  showTrend = false,\n  previousValue,\n  size = 'default', // 'sm', 'default', 'lg'\n  variant = 'default', // 'default', 'filled', 'minimal'\n  id,\n  autoFocus = false,\n  onValidation,\n  min,\n  max,\n  step = 0.01,\n  abbreviateDisplay = false, // Show 1.2M instead of 1,200,000\n  precision, // Override default currency precision\n  ...props\n}, ref) => {\n  const [displayValue, setDisplayValue] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const [validationMessage, setValidationMessage] = useState('');\n  const inputRef = useRef(null);\n  const componentRef = ref || inputRef;\n\n  // Generate unique ID if not provided\n  const inputId = id || `currency-input-${Math.random().toString(36).substr(2, 9)}`;\n\n  // Get currency configuration\n  const currencyConfig = CURRENCY_CONFIG[currency] || CURRENCY_CONFIG.USD;\n  const effectiveDecimals = precision !== undefined ? precision : currencyConfig.decimals;\n\n  // Memoized placeholder\n  const effectivePlaceholder = useMemo(() => {\n    if (placeholder) return placeholder;\n    const sample = formatCurrency(0);\n    return sample;\n  }, [placeholder, currency, effectiveDecimals]);\n\n  // Format currency value\n  function formatCurrency(val, options = {}) {\n    if (!val && val !== 0) return '';\n\n    const numValue = typeof val === 'string' ? parseFloat(val) : val;\n    if (isNaN(numValue)) return '';\n\n    const { forDisplay = false, abbreviated = false } = options;\n\n    // Handle abbreviation for large numbers\n    if (abbreviated && abbreviateDisplay && Math.abs(numValue) >= 1000) {\n      const absValue = Math.abs(numValue);\n      const sign = numValue < 0 ? '-' : '';\n\n      if (absValue >= 1000000000) {\n        return `${sign}${currencyConfig.symbol}${(absValue / 1000000000).toFixed(1)}B`;\n      } else if (absValue >= 1000000) {\n        return `${sign}${currencyConfig.symbol}${(absValue / 1000000).toFixed(1)}M`;\n      } else if (absValue >= 1000) {\n        return `${sign}${currencyConfig.symbol}${(absValue / 1000).toFixed(0)}K`;\n      }\n    }\n\n    try {\n      return new Intl.NumberFormat(locale, {\n        style: 'currency',\n        currency,\n        minimumFractionDigits: effectiveDecimals,\n        maximumFractionDigits: effectiveDecimals\n      }).format(numValue);\n    } catch (error) {\n      // Fallback formatting\n      const formatted = numValue.toFixed(effectiveDecimals);\n      return `${currencyConfig.symbol}${formatted}`;\n    }\n  }\n\n  // Parse display value to number\n  function parseCurrency(val) {\n    if (!val) return 0;\n\n    // Handle abbreviated values\n    const str = val.toString().toLowerCase();\n    let multiplier = 1;\n\n    if (str.endsWith('k')) {\n      multiplier = 1000;\n    } else if (str.endsWith('m')) {\n      multiplier = 1000000;\n    } else if (str.endsWith('b')) {\n      multiplier = 1000000000;\n    }\n\n    // Remove currency symbols, commas, spaces, and multiplier suffixes\n    const cleanValue = val\n      .toString()\n      .replace(/[^\\d.-]/g, '')\n      .replace(/,/g, '');\n\n    const numValue = parseFloat(cleanValue) * multiplier;\n    return isNaN(numValue) ? 0 : numValue;\n  }\n\n  // Validate input\n  const validateInput = (val) => {\n    const numValue = typeof val === 'string' ? parseCurrency(val) : val;\n\n    let valid = true;\n    let message = '';\n\n    if (required && (!numValue && numValue !== 0)) {\n      valid = false;\n      message = 'This field is required';\n    } else if (!allowNegative && numValue < 0) {\n      valid = false;\n      message = 'Negative values are not allowed';\n    } else if (min !== undefined && numValue < min) {\n      valid = false;\n      message = `Value must be at least ${formatCurrency(min)}`;\n    } else if (max !== undefined && numValue > max) {\n      valid = false;\n      message = `Value must not exceed ${formatCurrency(max)}`;\n    }\n\n    setIsValid(valid);\n    setValidationMessage(message);\n\n    if (onValidation) {\n      onValidation(valid, message);\n    }\n\n    return valid;\n  };\n\n  // Calculate trend\n  const getTrend = () => {\n    if (!showTrend || previousValue === undefined) return null;\n\n    const current = typeof value === 'string' ? parseCurrency(value) : (value || 0);\n    const previous = typeof previousValue === 'string' ? parseCurrency(previousValue) : (previousValue || 0);\n\n    if (current > previous) return 'up';\n    if (current < previous) return 'down';\n    return 'neutral';\n  };\n\n  const trend = getTrend();\n\n  // Update display value when prop value changes\n  useEffect(() => {\n    if (!isFocused) {\n      setDisplayValue(formatCurrency(value, { abbreviated: abbreviateDisplay }));\n    }\n  }, [value, currency, locale, effectiveDecimals, isFocused, abbreviateDisplay]);\n\n  // Handle focus\n  const handleFocus = (e) => {\n    setIsFocused(true);\n    // Show raw number for editing\n    const rawValue = value ? value.toString() : '';\n    setDisplayValue(rawValue);\n\n    // Select all text for easy replacement\n    setTimeout(() => {\n      if (componentRef.current) {\n        componentRef.current.select();\n      }\n    }, 0);\n  };\n\n  // Handle blur\n  const handleBlur = (e) => {\n    setIsFocused(false);\n    const rawValue = parseCurrency(displayValue);\n\n    validateInput(rawValue);\n\n    // Format for display\n    setDisplayValue(formatCurrency(rawValue, { abbreviated: abbreviateDisplay }));\n\n    // Call onChange with parsed value\n    if (onChange) {\n      onChange(rawValue);\n    }\n\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  // Handle input change\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n\n    // Allow numbers, decimals, negative signs, and K/M/B suffixes\n    const regex = allowNegative\n      ? /^-?\\d*\\.?\\d*[kmb]?$/i\n      : /^\\d*\\.?\\d*[kmb]?$/i;\n\n    if (regex.test(newValue) || newValue === '') {\n      setDisplayValue(newValue);\n    }\n  };\n\n  // Handle key press\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      componentRef.current?.blur();\n    }\n  };\n\n  // Auto-focus if specified\n  useEffect(() => {\n    if (autoFocus && componentRef.current) {\n      componentRef.current.focus();\n    }\n  }, [autoFocus]);\n\n  // Size variants\n  const sizeClasses = {\n    sm: 'h-9 px-3 text-sm',\n    default: 'h-11 px-4 text-sm',\n    lg: 'h-12 px-4 text-base'\n  };\n\n  // Variant styles\n  const variantClasses = {\n    default: 'border-input bg-background hover:border-ring/50',\n    filled: 'border-transparent bg-muted hover:bg-muted/80',\n    minimal: 'border-transparent bg-transparent hover:bg-muted/50'\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      {label && (\n        <label\n          htmlFor={inputId}\n          className={cn(\n            'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n            error || !isValid ? 'text-destructive' : 'text-foreground'\n          )}\n        >\n          {label}\n          {required && <span className=\"text-destructive ml-1\">*</span>}\n        </label>\n      )}\n\n      <div className=\"relative\">\n        {/* Currency symbol */}\n        {showCurrency && (\n          <div className=\"absolute left-3 top-1/2 -translate-y-1/2 flex items-center gap-1 pointer-events-none z-10\">\n            <DollarSign size={16} className=\"text-muted-foreground\" />\n            <span className=\"text-sm text-muted-foreground font-medium\">\n              {currencyConfig.code}\n            </span>\n          </div>\n        )}\n\n        <input\n          ref={componentRef}\n          id={inputId}\n          type=\"text\"\n          value={displayValue}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          onKeyPress={handleKeyPress}\n          placeholder={effectivePlaceholder}\n          disabled={disabled || loading}\n          step={step}\n          className={cn(\n            // Base styles\n            'flex w-full rounded-lg border ring-offset-background',\n            'file:border-0 file:bg-transparent file:text-sm file:font-medium',\n            'placeholder:text-muted-foreground',\n            'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n            'disabled:cursor-not-allowed disabled:opacity-50',\n            'transition-all duration-200',\n\n            // Size\n            sizeClasses[size],\n\n            // Variant\n            variantClasses[variant],\n\n            // Financial styling\n            'font-mono text-right',\n\n            // Padding adjustments\n            showCurrency ? 'pl-16' : 'pl-4',\n            'pr-4',\n            trend && 'pr-8',\n\n            // States\n            isFocused && 'ring-2 ring-ring ring-offset-2 border-ring',\n            (error || !isValid) && 'border-destructive focus-visible:ring-destructive',\n            loading && 'animate-pulse',\n\n            className\n          )}\n          {...props}\n        />\n\n        {/* Trend indicator */}\n        {trend && trend !== 'neutral' && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            {trend === 'up' ? (\n              <TrendingUp size={16} className=\"text-success\" />\n            ) : (\n              <TrendingDown size={16} className=\"text-destructive\" />\n            )}\n          </div>\n        )}\n\n        {/* Loading indicator */}\n        {loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <div className=\"w-4 h-4 border-2 border-muted-foreground border-t-transparent rounded-full animate-spin\" />\n          </div>\n        )}\n\n        {/* Error icon */}\n        {(error || !isValid) && !loading && (\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n            <AlertCircle size={16} className=\"text-destructive\" />\n          </div>\n        )}\n      </div>\n\n      {/* Description */}\n      {description && !error && isValid && (\n        <p className=\"text-sm text-muted-foreground\">\n          {description}\n        </p>\n      )}\n\n      {/* Error message */}\n      {(error || !isValid) && (\n        <p className=\"text-sm text-destructive flex items-center gap-1\">\n          <AlertCircle size={14} />\n          {error || validationMessage}\n        </p>\n      )}\n\n      {/* Trend information */}\n      {showTrend && previousValue !== undefined && trend !== 'neutral' && (\n        <p className=\"text-xs text-muted-foreground flex items-center gap-1\">\n          {trend === 'up' ? (\n            <TrendingUp size={12} className=\"text-success\" />\n          ) : (\n            <TrendingDown size={12} className=\"text-destructive\" />\n          )}\n          vs. previous: {formatCurrency(previousValue)}\n        </p>\n      )}\n    </div>\n  );\n});\n\nCurrencyInput.displayName = 'CurrencyInput';\n\nexport { CurrencyInput as default, CURRENCY_CONFIG };\n","import { Calculator, TrendingUp, DollarSign, Percent } from 'lucide-react';\nimport React from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst LoadingState = ({\n  type = 'default', // 'default', 'calculation', 'financial', 'inline'\n  size = 'default', // 'sm', 'default', 'lg'\n  message,\n  className,\n  showIcon = true,\n  variant = 'default', // 'default', 'subtle', 'pulsing'\n  ...props\n}) => {\n  // Get appropriate icon based on type\n  const getIcon = () => {\n    switch (type) {\n      case 'calculation':\n        return Calculator;\n      case 'financial':\n        return DollarSign;\n      case 'trend':\n        return TrendingUp;\n      case 'percentage':\n        return Percent;\n      default:\n        return Calculator;\n    }\n  };\n\n  const Icon = getIcon();\n\n  // Size configurations\n  const sizeConfig = {\n    sm: {\n      spinner: 'w-3 h-3 border',\n      icon: 12,\n      text: 'text-xs',\n      gap: 'gap-1',\n      padding: 'p-1'\n    },\n    default: {\n      spinner: 'w-4 h-4 border-2',\n      icon: 16,\n      text: 'text-sm',\n      gap: 'gap-2',\n      padding: 'p-2'\n    },\n    lg: {\n      spinner: 'w-6 h-6 border-2',\n      icon: 20,\n      text: 'text-base',\n      gap: 'gap-3',\n      padding: 'p-3'\n    }\n  };\n\n  const config = sizeConfig[size];\n\n  // Variant styles\n  const variantStyles = {\n    default: 'text-muted-foreground',\n    subtle: 'text-muted-foreground/70',\n    pulsing: 'text-muted-foreground animate-pulse'\n  };\n\n  // Inline variant for table cells and small spaces\n  if (type === 'inline') {\n    return (\n      <div className={cn('flex items-center justify-center', config.gap, className)} {...props}>\n        <div\n          className={cn(\n            config.spinner,\n            'border-muted-foreground border-t-transparent rounded-full animate-spin',\n            variantStyles[variant]\n          )}\n        />\n        {message && (\n          <span className={cn(config.text, variantStyles[variant])}>\n            {message}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  // Default card-style loading state\n  const defaultMessage = {\n    calculation: 'Calculating...',\n    financial: 'Processing financial data...',\n    trend: 'Analyzing trends...',\n    percentage: 'Computing percentages...',\n    default: 'Loading...'\n  };\n\n  const displayMessage = message || defaultMessage[type];\n\n  return (\n    <div\n      className={cn(\n        'flex flex-col items-center justify-center',\n        config.padding,\n        config.gap,\n        'bg-muted/30 rounded-lg border border-dashed border-muted-foreground/30',\n        className\n      )} {...props}\n    >\n      <div className=\"flex items-center gap-2\">\n        {/* Animated spinner */}\n        <div\n          className={cn(\n            config.spinner,\n            'border-muted-foreground border-t-transparent rounded-full animate-spin',\n            variantStyles[variant]\n          )}\n        />\n\n        {/* Icon with subtle animation */}\n        {showIcon && (\n          <Icon\n            size={config.icon}\n            className={cn(\n              'animate-pulse',\n              variantStyles[variant]\n            )}\n          />\n        )}\n      </div>\n\n      {/* Loading message */}\n      {displayMessage && (\n        <p\n          className={cn(\n            config.text,\n            'font-medium text-center',\n            variantStyles[variant]\n          )}\n        >\n          {displayMessage}\n        </p>\n      )}\n    </div>\n  );\n};\n\n// Skeleton component for table cells and consistent spacing\nconst LoadingSkeleton = ({\n  width = 'w-20',\n  height = 'h-6',\n  className,\n  variant = 'default', // 'default', 'currency', 'percentage'\n  ...props\n}) => {\n  const variantClasses = {\n    default: 'bg-muted',\n    currency: 'bg-emerald-100',\n    percentage: 'bg-blue-100'\n  };\n\n  return (\n    <div\n      className={cn(\n        'animate-pulse rounded-md',\n        width,\n        height,\n        variantClasses[variant],\n        className\n      )}\n      {...props}\n    />\n  );\n};\n\n// Pulse component for subtle loading indicators\nconst LoadingPulse = ({\n  children,\n  className,\n  isLoading = false,\n  ...props\n}) => {\n  if (!isLoading) {\n    return children;\n  }\n\n  return (\n    <div className={cn('animate-pulse opacity-50', className)} {...props}>\n      {children}\n    </div>\n  );\n};\n\n// Dots animation for minimal loading states\nconst LoadingDots = ({\n  size = 'default',\n  className,\n  variant = 'default',\n  ...props\n}) => {\n  const sizeClasses = {\n    sm: 'w-1 h-1',\n    default: 'w-1.5 h-1.5',\n    lg: 'w-2 h-2'\n  };\n\n  const variantClasses = {\n    default: 'bg-muted-foreground',\n    primary: 'bg-primary',\n    success: 'bg-success',\n    warning: 'bg-warning'\n  };\n\n  return (\n    <div\n      className={cn('flex items-center gap-1', className)}\n      {...props}\n    >\n      {[0, 1, 2].map((i) => (\n        <div\n          key={i}\n          className={cn(\n            'rounded-full animate-pulse',\n            sizeClasses[size],\n            variantClasses[variant]\n          )}\n          style={{\n            animationDelay: `${i * 0.2}s`,\n            animationDuration: '1.4s'\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n\n// Export all components\nexport default LoadingState;\nexport { LoadingSkeleton, LoadingPulse, LoadingDots };\n","import { AlertCircle, CheckCircle, AlertTriangle, Info, X } from 'lucide-react';\nimport React from 'react';\n\nimport { cn } from '../../utils/cn';\n\nconst ValidationFeedback = ({\n  type = 'error', // 'error', 'warning', 'success', 'info'\n  message,\n  className,\n  size = 'default', // 'sm', 'default', 'lg'\n  variant = 'default', // 'default', 'inline', 'floating', 'subtle'\n  showIcon = true,\n  dismissible = false,\n  onDismiss,\n  position = 'bottom', // 'top', 'bottom', 'left', 'right' (for floating)\n  children,\n  ...props\n}) => {\n  // Icon mapping\n  const iconMap = {\n    error: AlertCircle,\n    warning: AlertTriangle,\n    success: CheckCircle,\n    info: Info\n  };\n\n  const Icon = iconMap[type];\n\n  // Size configurations\n  const sizeConfig = {\n    sm: {\n      text: 'text-xs',\n      icon: 12,\n      padding: 'p-2',\n      gap: 'gap-1'\n    },\n    default: {\n      text: 'text-sm',\n      icon: 14,\n      padding: 'p-3',\n      gap: 'gap-2'\n    },\n    lg: {\n      text: 'text-base',\n      icon: 16,\n      padding: 'p-4',\n      gap: 'gap-3'\n    }\n  };\n\n  const config = sizeConfig[size];\n\n  // Type-based styling\n  const typeStyles = {\n    error: {\n      bg: 'bg-destructive/10',\n      border: 'border-destructive/20',\n      text: 'text-destructive',\n      icon: 'text-destructive'\n    },\n    warning: {\n      bg: 'bg-warning/10',\n      border: 'border-warning/20',\n      text: 'text-warning-foreground',\n      icon: 'text-warning'\n    },\n    success: {\n      bg: 'bg-success/10',\n      border: 'border-success/20',\n      text: 'text-success-foreground',\n      icon: 'text-success'\n    },\n    info: {\n      bg: 'bg-blue-50',\n      border: 'border-blue-200',\n      text: 'text-blue-700',\n      icon: 'text-blue-500'\n    }\n  };\n\n  const styles = typeStyles[type];\n\n  // Variant-specific classes\n  const getVariantClasses = () => {\n    switch (variant) {\n      case 'inline':\n        return 'flex items-center';\n      case 'floating':\n        return cn(\n          'absolute z-50 shadow-lg rounded-lg',\n          position === 'top' && 'bottom-full mb-2',\n          position === 'bottom' && 'top-full mt-2',\n          position === 'left' && 'right-full mr-2',\n          position === 'right' && 'left-full ml-2'\n        );\n      case 'subtle':\n        return 'border-0 bg-transparent';\n      default:\n        return 'rounded-lg border';\n    }\n  };\n\n  // Don't render if no message and no children\n  if (!message && !children) {\n    return null;\n  }\n\n  return (\n    <div\n      className={cn(\n        'flex items-start',\n        config.gap,\n        config.padding,\n        styles.bg,\n        styles.border,\n        getVariantClasses(),\n        className\n      )}\n      {...props}\n    >\n      {/* Icon */}\n      {showIcon && Icon && (\n        <Icon\n          size={config.icon}\n          className={cn('flex-shrink-0 mt-0.5', styles.icon)}\n        />\n      )}\n\n      {/* Content */}\n      <div className=\"flex-1 min-w-0\">\n        {message && (\n          <p className={cn(config.text, styles.text, 'font-medium')}>\n            {message}\n          </p>\n        )}\n        {children && (\n          <div className={cn(config.text, styles.text)}>\n            {children}\n          </div>\n        )}\n      </div>\n\n      {/* Dismiss button */}\n      {dismissible && onDismiss && (\n        <button\n          onClick={onDismiss}\n          className={cn(\n            'flex-shrink-0 ml-2 p-1 rounded-full hover:bg-black/10 transition-colors',\n            styles.text\n          )}\n          aria-label=\"Dismiss\"\n        >\n          <X size={config.icon} />\n        </button>\n      )}\n    </div>\n  );\n};\n\n// Field-specific validation component\nconst FieldValidation = ({\n  error,\n  warning,\n  success,\n  info,\n  className,\n  ...props\n}) => {\n  // Determine the highest priority message\n  let type, message;\n\n  if (error) {\n    type = 'error';\n    message = error;\n  } else if (warning) {\n    type = 'warning';\n    message = warning;\n  } else if (success) {\n    type = 'success';\n    message = success;\n  } else if (info) {\n    type = 'info';\n    message = info;\n  } else {\n    return null;\n  }\n\n  return (\n    <ValidationFeedback\n      type={type}\n      message={message}\n      size=\"sm\"\n      variant=\"inline\"\n      className={className}\n      {...props}\n    />\n  );\n};\n\n// List of validation errors/warnings\nconst ValidationList = ({\n  items = [],\n  className,\n  showNumbers = false,\n  ...props\n}) => {\n  if (!items.length) return null;\n\n  return (\n    <div className={cn('space-y-2', className)} {...props}>\n      {items.map((item, index) => (\n        <ValidationFeedback\n          key={index}\n          type={item.type || 'error'}\n          message={showNumbers ? `${index + 1}. ${item.message}` : item.message}\n          size=\"sm\"\n          variant=\"inline\"\n        />\n      ))}\n    </div>\n  );\n};\n\n// Summary validation component for forms\nconst ValidationSummary = ({\n  errors = [],\n  warnings = [],\n  className,\n  title = 'Please fix the following issues:',\n  collapsible = false,\n  ...props\n}) => {\n  const [isCollapsed, setIsCollapsed] = React.useState(collapsible);\n\n  const totalIssues = errors.length + warnings.length;\n\n  if (totalIssues === 0) return null;\n\n  const allItems = [\n    ...errors.map(error => ({ type: 'error', message: error })),\n    ...warnings.map(warning => ({ type: 'warning', message: warning }))\n  ];\n\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <h4 className=\"text-sm font-semibold text-foreground\">\n          {title}\n        </h4>\n        {collapsible && (\n          <button\n            onClick={() => setIsCollapsed(!isCollapsed)}\n            className=\"text-xs text-muted-foreground hover:text-foreground transition-colors\"\n          >\n            {isCollapsed ? `Show ${totalIssues} issues` : 'Hide'}\n          </button>\n        )}\n      </div>\n\n      {/* Issues list */}\n      {!isCollapsed && (\n        <ValidationList\n          items={allItems}\n          showNumbers\n        />\n      )}\n\n      {/* Collapsed summary */}\n      {isCollapsed && (\n        <p className=\"text-sm text-muted-foreground\">\n          {errors.length > 0 && `${errors.length} error${errors.length > 1 ? 's' : ''}`}\n          {errors.length > 0 && warnings.length > 0 && ', '}\n          {warnings.length > 0 && `${warnings.length} warning${warnings.length > 1 ? 's' : ''}`}\n        </p>\n      )}\n    </div>\n  );\n};\n\n// Real-time validation status indicator\nconst ValidationStatus = ({\n  isValidating = false,\n  isValid = true,\n  className,\n  size = 'default',\n  ...props\n}) => {\n  const sizeClasses = {\n    sm: 'w-3 h-3',\n    default: 'w-4 h-4',\n    lg: 'w-5 h-5'\n  };\n\n  if (isValidating) {\n    return (\n      <div\n        className={cn(\n          'border-2 border-blue-500 border-t-transparent rounded-full animate-spin',\n          sizeClasses[size],\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n\n  if (isValid) {\n    return (\n      <CheckCircle\n        className={cn('text-success', className)}\n        size={size === 'sm' ? 12 : size === 'lg' ? 20 : 16}\n        {...props}\n      />\n    );\n  }\n\n  return (\n    <AlertCircle\n      className={cn('text-destructive', className)}\n      size={size === 'sm' ? 12 : size === 'lg' ? 20 : 16}\n      {...props}\n    />\n  );\n};\n\nexport default ValidationFeedback;\nexport { FieldValidation, ValidationList, ValidationSummary, ValidationStatus };\n","import React, { useState, useEffect, useRef, Suspense } from 'react';\n\nimport { trackFinancialComponentPerformance } from '../../utils/performanceMonitoring';\n\n// Enhanced lazy loading component for financial components\nconst LazyLoader = ({\n  children,\n  fallback = null,\n  componentName = 'unknown',\n  threshold = 0.1,\n  rootMargin = '50px',\n  preloadDelay = 2000,\n  priority = 'normal',\n  onLoad = null,\n  onError = null,\n  performanceTracking = true\n}) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [loadError, setLoadError] = useState(null);\n  const [preloadTimer, setPreloadTimer] = useState(null);\n\n  const containerRef = useRef(null);\n  const observerRef = useRef(null);\n  const loadStartTime = useRef(null);\n\n  // Set up intersection observer\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    const options = {\n      threshold,\n      rootMargin\n    };\n\n    observerRef.current = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          loadStartTime.current = performance.now();\n          setIsVisible(true);\n\n          // Stop observing once visible\n          if (observerRef.current) {\n            observerRef.current.unobserve(entry.target);\n          }\n        }\n      });\n    }, options);\n\n    observerRef.current.observe(containerRef.current);\n\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n      if (preloadTimer) {\n        clearTimeout(preloadTimer);\n      }\n    };\n  }, [threshold, rootMargin, preloadTimer]);\n\n  // Preload high-priority components\n  useEffect(() => {\n    if (priority === 'high' && preloadDelay > 0) {\n      const timer = setTimeout(() => {\n        loadStartTime.current = performance.now();\n        setIsVisible(true);\n      }, preloadDelay);\n\n      setPreloadTimer(timer);\n    }\n  }, [priority, preloadDelay]);\n\n  // Track component load performance\n  useEffect(() => {\n    if (isLoaded && loadStartTime.current && performanceTracking) {\n      const loadTime = performance.now() - loadStartTime.current;\n\n      trackFinancialComponentPerformance(componentName, {\n        loadTime,\n        priority,\n        lazy: true,\n        timestamp: Date.now()\n      });\n\n      onLoad?.({ componentName, loadTime });\n    }\n  }, [isLoaded, componentName, priority, performanceTracking, onLoad]);\n\n  // Handle load success\n  const handleLoadSuccess = () => {\n    setIsLoaded(true);\n    setLoadError(null);\n  };\n\n  // Handle load error\n  const handleLoadError = (error) => {\n    setLoadError(error);\n    onError?.(error);\n\n    if (performanceTracking) {\n      trackFinancialComponentPerformance(componentName, {\n        loadError: error.message,\n        priority,\n        lazy: true,\n        timestamp: Date.now()\n      });\n    }\n  };\n\n  // Default fallback component\n  const defaultFallback = (\n    <div className=\"animate-pulse bg-gray-100 rounded-lg p-6\">\n      <div className=\"space-y-4\">\n        <div className=\"h-4 bg-gray-200 rounded w-3/4\" />\n        <div className=\"h-4 bg-gray-200 rounded w-1/2\" />\n        <div className=\"h-32 bg-gray-200 rounded\" />\n      </div>\n    </div>\n  );\n\n  // Error fallback\n  const errorFallback = (\n    <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\n      <div className=\"flex items-center\">\n        <div className=\"flex-shrink-0\">\n          <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n          </svg>\n        </div>\n        <div className=\"ml-3\">\n          <h3 className=\"text-sm font-medium text-red-800\">\n            Failed to load {componentName}\n          </h3>\n          <div className=\"mt-2 text-sm text-red-700\">\n            <p>{loadError?.message || 'An unexpected error occurred'}</p>\n          </div>\n          <div className=\"mt-4\">\n            <button\n              onClick={() => {\n                setLoadError(null);\n                setIsVisible(false);\n                setTimeout(() => setIsVisible(true), 100);\n              }}\n              className=\"text-sm font-medium text-red-800 hover:text-red-900\"\n            >\n              Try again\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div ref={containerRef} className=\"lazy-loader-container\">\n      {!isVisible ? (\n        fallback || defaultFallback\n      ) : loadError ? (\n        errorFallback\n      ) : (\n        <Suspense fallback={fallback || defaultFallback}>\n          <ErrorBoundary\n            onError={handleLoadError}\n            onLoad={handleLoadSuccess}\n            componentName={componentName}\n          >\n            {children}\n          </ErrorBoundary>\n        </Suspense>\n      )}\n    </div>\n  );\n};\n\n// Error boundary for lazy loaded components\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.props.onError?.(error, errorInfo);\n  }\n\n  componentDidMount() {\n    if (!this.state.hasError) {\n      this.props.onLoad?.();\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null; // Let parent handle error display\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default LazyLoader;\n","import React, { Suspense } from 'react';\n\nimport { useFinancialAccessibility } from '../../../hooks/useAccessibility';\nimport LazyLoader from '../../LazyLoader';\n\n// Loading fallback for charts\nconst ChartLoadingFallback = ({ title = 'Chart', height = 320 }) => (\n  <div className=\"w-full bg-white border border-gray-200 rounded-lg p-6\" style={{ height }}>\n    <div className=\"animate-pulse\">\n      <div className=\"h-6 bg-gray-200 rounded w-1/3 mb-4\" />\n      <div className=\"space-y-3\">\n        <div className=\"h-4 bg-gray-200 rounded w-full\" />\n        <div className=\"h-4 bg-gray-200 rounded w-3/4\" />\n        <div className=\"h-32 bg-gray-200 rounded w-full\" />\n        <div className=\"grid grid-cols-3 gap-2\">\n          <div className=\"h-3 bg-gray-200 rounded\" />\n          <div className=\"h-3 bg-gray-200 rounded\" />\n          <div className=\"h-3 bg-gray-200 rounded\" />\n        </div>\n      </div>\n    </div>\n    <div className=\"sr-only\">Loading {title}...</div>\n  </div>\n);\n\n// HOC for lazy loading charts with accessibility\nconst withLazyChart = (ChartComponent, componentName, options = {}) => {\n  const LazyChartComponent = React.forwardRef((props, ref) => {\n    const {\n      priority = 'normal',\n      preloadDelay = 2000,\n      height = 320,\n      title = componentName,\n      ...chartProps\n    } = props;\n\n    // Add accessibility monitoring\n    const { elementRef } = useFinancialAccessibility('chart');\n\n    const fallback = <ChartLoadingFallback title={title} height={height} />;\n\n    return (\n      <div\n        ref={(el) => {\n          elementRef(el);\n          if (ref) {\n            if (typeof ref === 'function') ref(el);\n            else ref.current = el;\n          }\n        }}\n      >\n        <LazyLoader\n          componentName={componentName}\n          priority={priority}\n          preloadDelay={preloadDelay}\n          fallback={fallback}\n          performanceTracking={true}\n          {...options}\n        >\n          <Suspense fallback={fallback}>\n            <ChartComponent {...chartProps} />\n          </Suspense>\n        </LazyLoader>\n      </div>\n    );\n  });\n\n  LazyChartComponent.displayName = `LazyChart(${componentName})`;\n  return LazyChartComponent;\n};\n\nexport { withLazyChart, ChartLoadingFallback };\nexport default withLazyChart;\n","import { TrendingUp, TrendingDown, Minus } from 'lucide-react';\nimport React from 'react';\n\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent, CardHeader, CardTitle } from '../Card';\n\nconst MetricCard = ({\n  title,\n  value,\n  change,\n  format = 'number',\n  prefix = '',\n  suffix = '',\n  className\n}) => {\n  const formatValue = (val) => {\n    if (format === 'currency') {\n      return `$${(val / 1000000).toFixed(1)}M`;\n    } else if (format === 'percentage') {\n      return `${val.toFixed(1)}%`;\n    } else if (format === 'ratio') {\n      return val.toFixed(2);\n    } else if (format === 'large-number') {\n      if (val >= 1000000000) return `${(val / 1000000000).toFixed(1)}B`;\n      if (val >= 1000000) return `${(val / 1000000).toFixed(1)}M`;\n      if (val >= 1000) return `${(val / 1000).toFixed(1)}K`;\n      return val.toFixed(0);\n    }\n    return val.toLocaleString();\n  };\n\n  const getTrendIcon = () => {\n    if (change > 0) return TrendingUp;\n    if (change < 0) return TrendingDown;\n    return Minus;\n  };\n\n  const getTrendColor = () => {\n    if (change > 0) return 'text-success';\n    if (change < 0) return 'text-destructive';\n    return 'text-muted-foreground';\n  };\n\n  const TrendIcon = getTrendIcon();\n\n  return (\n    <Card className={cn('relative overflow-hidden', className)}>\n      <CardContent className=\"p-6\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <p className=\"text-sm font-medium text-muted-foreground\">{title}</p>\n          {change !== undefined && (\n            <div className={cn('flex items-center gap-1', getTrendColor())}>\n              <TrendIcon className=\"h-4 w-4\" />\n              <span className=\"text-xs font-medium\">\n                {Math.abs(change).toFixed(1)}%\n              </span>\n            </div>\n          )}\n        </div>\n        <div className=\"flex items-baseline gap-1\">\n          {prefix && <span className=\"text-lg text-muted-foreground\">{prefix}</span>}\n          <p className=\"text-2xl font-bold text-foreground\">\n            {formatValue(value)}\n          </p>\n          {suffix && <span className=\"text-lg text-muted-foreground\">{suffix}</span>}\n        </div>\n        {change !== undefined && (\n          <p className=\"text-xs text-muted-foreground mt-1\">\n            vs. previous period\n          </p>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nconst MetricsDashboard = ({\n  metrics = [],\n  className,\n  title = 'Key Financial Metrics',\n  columns = 4\n}) => {\n  const gridClasses = {\n    2: 'grid-cols-1 md:grid-cols-2',\n    3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',\n    4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4',\n    5: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5',\n    6: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6'\n  };\n\n  // Group metrics by category if categories exist\n  const groupedMetrics = metrics.reduce((groups, metric) => {\n    const category = metric.category || 'default';\n    if (!groups[category]) groups[category] = [];\n    groups[category].push(metric);\n    return groups;\n  }, {});\n\n  const hasCategories = Object.keys(groupedMetrics).length > 1 ||\n    (Object.keys(groupedMetrics).length === 1 && !groupedMetrics.default);\n\n  return (\n    <div className={cn('w-full space-y-6', className)}>\n      {title && (\n        <div>\n          <h2 className=\"text-xl font-semibold text-foreground mb-2\">{title}</h2>\n          <div className=\"h-px bg-gradient-to-r from-border to-transparent\" />\n        </div>\n      )}\n\n      {hasCategories ? (\n        // Render with categories\n        Object.entries(groupedMetrics).map(([category, categoryMetrics]) => (\n          <div key={category}>\n            {category !== 'default' && (\n              <h3 className=\"text-lg font-medium text-foreground mb-4 flex items-center gap-2\">\n                {category}\n                <div className=\"flex-1 h-px bg-muted\" />\n              </h3>\n            )}\n            <div className={cn('grid gap-4', gridClasses[Math.min(columns, 6)])}>\n              {categoryMetrics.map((metric, index) => (\n                <MetricCard\n                  key={`${category}-${index}`}\n                  title={metric.title}\n                  value={metric.value}\n                  change={metric.change}\n                  format={metric.format}\n                  prefix={metric.prefix}\n                  suffix={metric.suffix}\n                  className={metric.highlight ? 'ring-2 ring-secondary ring-opacity-20' : ''}\n                />\n              ))}\n            </div>\n          </div>\n        ))\n      ) : (\n        // Render without categories\n        <div className={cn('grid gap-4', gridClasses[Math.min(columns, 6)])}>\n          {metrics.map((metric, index) => (\n            <MetricCard\n              key={index}\n              title={metric.title}\n              value={metric.value}\n              change={metric.change}\n              format={metric.format}\n              prefix={metric.prefix}\n              suffix={metric.suffix}\n              className={metric.highlight ? 'ring-2 ring-secondary ring-opacity-20' : ''}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Summary footer if provided */}\n      {metrics.some(m => m.isSummary) && (\n        <div className=\"pt-4 border-t border-muted\">\n          <div className={cn('grid gap-4', gridClasses[Math.min(columns, 6)])}>\n            {metrics\n              .filter(m => m.isSummary)\n              .map((metric, index) => (\n                <MetricCard\n                  key={`summary-${index}`}\n                  title={metric.title}\n                  value={metric.value}\n                  change={metric.change}\n                  format={metric.format}\n                  prefix={metric.prefix}\n                  suffix={metric.suffix}\n                  className=\"bg-primary/5 border-primary/20\"\n                />\n              ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport { MetricsDashboard, MetricCard };\n","import DCFWaterfallBase from './DCFWaterfall';\nimport { withLazyChart } from './LazyChartWrapper';\n\n// Import chart components\nimport { MetricsDashboard as MetricsDashboardBase, MetricCard } from './MetricsDashboard';\nimport RevenueBreakdownBase from './RevenueBreakdown';\nimport SensitivityHeatmapBase from './SensitivityHeatmap';\nimport TrendLineBase from './TrendLine';\n\n// Create lazy versions with optimized loading\nexport const DCFWaterfall = withLazyChart(DCFWaterfallBase, 'dcf-waterfall', {\n  priority: 'high',\n  preloadDelay: 1000\n});\n\nexport const RevenueBreakdown = withLazyChart(RevenueBreakdownBase, 'revenue-breakdown', {\n  priority: 'normal',\n  preloadDelay: 1500\n});\n\nexport const TrendLine = withLazyChart(TrendLineBase, 'trend-line', {\n  priority: 'normal',\n  preloadDelay: 2000\n});\n\nexport const SensitivityHeatmap = withLazyChart(SensitivityHeatmapBase, 'sensitivity-heatmap', {\n  priority: 'normal',\n  preloadDelay: 2500\n});\n\nexport const MetricsDashboard = withLazyChart(MetricsDashboardBase, 'metrics-dashboard', {\n  priority: 'high',\n  preloadDelay: 500\n});\n\n// Re-export MetricCard as it's lightweight\nexport { MetricCard };\n\n// Export the lazy chart wrapper for custom use\nexport { withLazyChart, ChartLoadingFallback } from './LazyChartWrapper';\n","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, ResponsiveContainer, Cell, ReferenceLine } from 'recharts';\n\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent, CardHeader, CardTitle } from '../Card';\n\nconst DCFWaterfall = ({\n  data = [],\n  className,\n  title = 'DCF Cash Flow Components',\n  formatValue = (value) => `$${(value / 1000000).toFixed(1)}M`\n}) => {\n  // Calculate cumulative values for waterfall effect\n  const processedData = data.reduce((acc, item, index) => {\n    const prevTotal = index === 0 ? 0 : acc[index - 1].cumulative;\n    const cumulative = prevTotal + item.value;\n\n    acc.push({\n      ...item,\n      cumulative,\n      start: prevTotal,\n      isPositive: item.value >= 0,\n      isTotal: item.type === 'total'\n    });\n\n    return acc;\n  }, []);\n\n  const CustomBar = (props) => {\n    const { payload, x, y, width, height } = props;\n    if (!payload) return null;\n\n    const barColor = payload.isTotal\n      ? 'var(--color-primary)'\n      : payload.isPositive\n        ? 'var(--color-secondary)'\n        : 'var(--color-destructive)';\n\n    return (\n      <rect\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        fill={barColor}\n        className=\"transition-opacity duration-200 hover:opacity-80\"\n      />\n    );\n  };\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (!active || !payload || !payload.length) return null;\n\n    const data = payload[0].payload;\n\n    return (\n      <div className=\"bg-white border border-gray-200 rounded-md shadow-elevation-1 p-3 min-w-[160px]\">\n        <p className=\"font-medium text-sm text-foreground mb-1\">{label}</p>\n        <p className=\"text-sm text-muted-foreground\">\n          Value: <span className=\"font-mono font-medium\">{formatValue(data.value)}</span>\n        </p>\n        {!data.isTotal && (\n          <p className=\"text-sm text-muted-foreground\">\n            Cumulative: <span className=\"font-mono font-medium\">{formatValue(data.cumulative)}</span>\n          </p>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <Card className={cn('w-full', className)}>\n      <CardHeader className=\"pb-4\">\n        <CardTitle className=\"text-lg font-semibold text-foreground\">{title}</CardTitle>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"h-80 w-full\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart\n              data={processedData}\n              margin={{ top: 20, right: 30, left: 20, bottom: 60 }}\n            >\n              <XAxis\n                dataKey=\"name\"\n                axisLine={false}\n                tickLine={false}\n                tick={{ fontSize: 12, fill: 'var(--color-muted-foreground)' }}\n                angle={-45}\n                textAnchor=\"end\"\n                height={80}\n              />\n              <YAxis\n                axisLine={false}\n                tickLine={false}\n                tick={{ fontSize: 12, fill: 'var(--color-muted-foreground)' }}\n                tickFormatter={formatValue}\n              />\n              <ReferenceLine y={0} stroke=\"var(--color-border)\" strokeWidth={1} />\n              <Bar\n                dataKey=\"value\"\n                shape={<CustomBar />}\n                radius={[2, 2, 0, 0]}\n              />\n              <CustomTooltip />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Legend */}\n        <div className=\"flex items-center justify-center gap-6 mt-4 pt-4 border-t border-gray-100\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-sm bg-secondary\" />\n            <span className=\"text-sm text-muted-foreground\">Positive</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-sm bg-destructive\" />\n            <span className=\"text-sm text-muted-foreground\">Negative</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-sm bg-primary\" />\n            <span className=\"text-sm text-muted-foreground\">Total</span>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DCFWaterfall;\n","import React, { useState } from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\n\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent, CardHeader, CardTitle } from '../Card';\n\nconst RevenueBreakdown = ({\n  data = [],\n  className,\n  title = 'Revenue Breakdown',\n  formatValue = (value) => `$${(value / 1000000).toFixed(1)}M`\n}) => {\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  // Generate colors using CSS variables with fallbacks\n  const colors = [\n    'var(--color-primary)',\n    'var(--color-secondary)',\n    'var(--color-accent)',\n    'var(--color-success)',\n    'var(--color-warning)',\n    '#64748b', // slate-500\n    '#94a3b8', // slate-400\n    '#cbd5e1'  // slate-300\n  ];\n\n  const total = data.reduce((sum, item) => sum + item.value, 0);\n\n  const processedData = data.map((item, index) => ({\n    ...item,\n    percentage: ((item.value / total) * 100).toFixed(1),\n    color: colors[index % colors.length]\n  }));\n\n  const onPieEnter = (_, index) => {\n    setActiveIndex(index);\n  };\n\n  const onPieLeave = () => {\n    setActiveIndex(null);\n  };\n\n  const CustomTooltip = ({ active, payload }) => {\n    if (!active || !payload || !payload.length) return null;\n\n    const data = payload[0].payload;\n\n    return (\n      <div className=\"bg-white border border-gray-200 rounded-md shadow-elevation-1 p-3 min-w-[160px]\">\n        <p className=\"font-medium text-sm text-foreground mb-1\">{data.name}</p>\n        <p className=\"text-sm text-muted-foreground\">\n          Value: <span className=\"font-mono font-medium\">{formatValue(data.value)}</span>\n        </p>\n        <p className=\"text-sm text-muted-foreground\">\n          Share: <span className=\"font-mono font-medium\">{data.percentage}%</span>\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <Card className={cn('w-full', className)}>\n      <CardHeader className=\"pb-4\">\n        <CardTitle className=\"text-lg font-semibold text-foreground\">{title}</CardTitle>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"flex flex-col lg:flex-row items-center gap-8\">\n          {/* Chart */}\n          <div className=\"h-80 w-80 flex-shrink-0\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={processedData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={60}\n                  outerRadius={120}\n                  paddingAngle={2}\n                  dataKey=\"value\"\n                  onMouseEnter={onPieEnter}\n                  onMouseLeave={onPieLeave}\n                >\n                  {processedData.map((entry, index) => (\n                    <Cell\n                      key={`cell-${index}`}\n                      fill={entry.color}\n                      className=\"transition-all duration-200\"\n                      style={{\n                        filter: activeIndex === index ? 'brightness(1.1)' : 'none',\n                        transform: activeIndex === index ? 'scale(1.02)' : 'scale(1)',\n                        transformOrigin: 'center'\n                      }}\n                    />\n                  ))}\n                </Pie>\n                <CustomTooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n\n          {/* Legend */}\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"space-y-3\">\n              {processedData.map((item, index) => (\n                <div\n                  key={item.name}\n                  className={cn(\n                    'flex items-center justify-between p-3 rounded-md transition-colors duration-200 cursor-pointer',\n                    activeIndex === index\n                      ? 'bg-muted'\n                      : 'hover:bg-gray-50'\n                  )}\n                  onMouseEnter={() => setActiveIndex(index)}\n                  onMouseLeave={() => setActiveIndex(null)}\n                >\n                  <div className=\"flex items-center gap-3 min-w-0\">\n                    <div\n                      className=\"w-4 h-4 rounded-sm flex-shrink-0\"\n                      style={{ backgroundColor: item.color }}\n                    />\n                    <div className=\"min-w-0\">\n                      <p className=\"font-medium text-sm text-foreground truncate\">\n                        {item.name}\n                      </p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {item.percentage}% of total\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"text-right flex-shrink-0\">\n                    <p className=\"font-mono text-sm font-medium text-foreground\">\n                      {formatValue(item.value)}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Total */}\n            <div className=\"mt-4 pt-4 border-t border-gray-100\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"font-semibold text-foreground\">Total Revenue</span>\n                <span className=\"font-mono text-lg font-bold text-primary\">\n                  {formatValue(total)}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RevenueBreakdown;\n","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer, Dot } from 'recharts';\n\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent, CardHeader, CardTitle } from '../Card';\n\nconst TrendLine = ({\n  data = [],\n  className,\n  title = 'Growth Trend Analysis',\n  dataKey = 'value',\n  formatValue = (value) => `${value.toFixed(1)}%`,\n  showGrowthRate = true\n}) => {\n  // Calculate period-over-period growth\n  const processedData = data.map((item, index) => {\n    if (index === 0) return { ...item, growth: null };\n\n    const prevValue = data[index - 1][dataKey];\n    const currentValue = item[dataKey];\n    const growth = prevValue !== 0 ? ((currentValue - prevValue) / prevValue) * 100 : 0;\n\n    return { ...item, growth };\n  });\n\n  // Calculate overall trend\n  const firstValue = data[0]?.[dataKey] || 0;\n  const lastValue = data[data.length - 1]?.[dataKey] || 0;\n  const overallGrowth = firstValue !== 0 ? ((lastValue - firstValue) / firstValue) * 100 : 0;\n  const isPositiveTrend = overallGrowth >= 0;\n\n  const CustomDot = (props) => {\n    const { payload, cx, cy } = props;\n    if (!payload) return null;\n\n    return (\n      <Dot\n        cx={cx}\n        cy={cy}\n        r={4}\n        fill=\"var(--color-secondary)\"\n        className=\"transition-all duration-200 hover:r-6\"\n      />\n    );\n  };\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (!active || !payload || !payload.length) return null;\n\n    const data = payload[0].payload;\n\n    return (\n      <div className=\"bg-white border border-gray-200 rounded-md shadow-elevation-1 p-3 min-w-[160px]\">\n        <p className=\"font-medium text-sm text-foreground mb-1\">{label}</p>\n        <p className=\"text-sm text-muted-foreground\">\n          Value: <span className=\"font-mono font-medium\">{formatValue(data[dataKey])}</span>\n        </p>\n        {data.growth !== null && (\n          <p className=\"text-sm text-muted-foreground\">\n            Growth: <span\n              className={cn(\n                'font-mono font-medium',\n                data.growth >= 0 ? 'text-success' : 'text-destructive'\n              )}\n            >\n              {data.growth >= 0 ? '+' : ''}{data.growth.toFixed(1)}%\n            </span>\n          </p>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <Card className={cn('w-full', className)}>\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"text-lg font-semibold text-foreground\">{title}</CardTitle>\n          {showGrowthRate && (\n            <div className=\"text-right\">\n              <p className=\"text-xs text-muted-foreground\">Overall Growth</p>\n              <p\n                className={cn(\n                  'text-sm font-mono font-semibold',\n                  isPositiveTrend ? 'text-success' : 'text-destructive'\n                )}\n              >\n                {isPositiveTrend ? '+' : ''}{overallGrowth.toFixed(1)}%\n              </p>\n            </div>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"h-80 w-full\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart\n              data={processedData}\n              margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n            >\n              <XAxis\n                dataKey=\"period\"\n                axisLine={false}\n                tickLine={false}\n                tick={{ fontSize: 12, fill: 'var(--color-muted-foreground)' }}\n              />\n              <YAxis\n                axisLine={false}\n                tickLine={false}\n                tick={{ fontSize: 12, fill: 'var(--color-muted-foreground)' }}\n                tickFormatter={formatValue}\n              />\n              <Line\n                type=\"monotone\"\n                dataKey={dataKey}\n                stroke=\"var(--color-secondary)\"\n                strokeWidth={3}\n                dot={<CustomDot />}\n                activeDot={{\n                  r: 6,\n                  fill: 'var(--color-secondary)',\n                  stroke: 'var(--color-background)',\n                  strokeWidth: 2\n                }}\n                className=\"drop-shadow-sm\"\n              />\n              <CustomTooltip />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Key metrics */}\n        <div className=\"grid grid-cols-3 gap-4 mt-4 pt-4 border-t border-gray-100\">\n          <div className=\"text-center\">\n            <p className=\"text-xs text-muted-foreground mb-1\">Starting Value</p>\n            <p className=\"font-mono text-sm font-medium text-foreground\">\n              {formatValue(firstValue)}\n            </p>\n          </div>\n          <div className=\"text-center\">\n            <p className=\"text-xs text-muted-foreground mb-1\">Current Value</p>\n            <p className=\"font-mono text-sm font-medium text-foreground\">\n              {formatValue(lastValue)}\n            </p>\n          </div>\n          <div className=\"text-center\">\n            <p className=\"text-xs text-muted-foreground mb-1\">Net Change</p>\n            <p\n              className={cn(\n                'font-mono text-sm font-medium',\n                isPositiveTrend ? 'text-success' : 'text-destructive'\n              )}\n            >\n              {isPositiveTrend ? '+' : ''}{overallGrowth.toFixed(1)}%\n            </p>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TrendLine;\n","import React, { useState } from 'react';\n\nimport { cn } from '../../../utils/cn';\nimport { Card, CardContent, CardHeader, CardTitle } from '../Card';\n\nconst SensitivityHeatmap = ({\n  data = [],\n  xAxisLabels = [],\n  yAxisLabels = [],\n  className,\n  title = 'Sensitivity Analysis',\n  formatValue = (value) => `${value.toFixed(1)}%`,\n  formatCell = (value) => `${value > 0 ? '+' : ''}${value.toFixed(1)}%`\n}) => {\n  const [hoveredCell, setHoveredCell] = useState(null);\n\n  // Calculate min/max for color scaling\n  const allValues = data.flat();\n  const minValue = Math.min(...allValues);\n  const maxValue = Math.max(...allValues);\n  const range = maxValue - minValue;\n\n  // Get color intensity based on value\n  const getColorIntensity = (value) => {\n    if (range === 0) return 0.5;\n    return (value - minValue) / range;\n  };\n\n  // Get cell color based on value\n  const getCellColor = (value, intensity) => {\n    if (value > 0) {\n      // Green for positive values\n      return `rgba(34, 197, 94, ${0.2 + intensity * 0.6})`;\n    } else if (value < 0) {\n      // Red for negative values\n      return `rgba(239, 68, 68, ${0.2 + intensity * 0.6})`;\n    } else {\n      // Neutral for zero\n      return 'rgba(148, 163, 184, 0.2)';\n    }\n  };\n\n  const CustomTooltip = ({ x, y, value, xLabel, yLabel }) => {\n    if (hoveredCell?.x !== x || hoveredCell?.y !== y) return null;\n\n    return (\n      <div\n        className=\"absolute pointer-events-none z-10 bg-white border border-gray-200 rounded-md shadow-elevation-2 p-3 min-w-[180px]\"\n        style={{\n          left: hoveredCell.clientX + 10,\n          top: hoveredCell.clientY - 60\n        }}\n      >\n        <p className=\"font-medium text-sm text-foreground mb-1\">\n          {yLabel} × {xLabel}\n        </p>\n        <p className=\"text-sm text-muted-foreground\">\n          Impact: <span\n            className={cn(\n              'font-mono font-medium',\n              value > 0 ? 'text-success' : value < 0 ? 'text-destructive' : 'text-muted-foreground'\n            )}\n          >\n            {formatCell(value)}\n          </span>\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <Card className={cn('w-full', className)}>\n      <CardHeader className=\"pb-4\">\n        <CardTitle className=\"text-lg font-semibold text-foreground\">{title}</CardTitle>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"relative overflow-auto\">\n          <div className=\"min-w-[600px]\">\n            {/* Header row */}\n            <div className=\"grid grid-cols-[120px_repeat(var(--cols),1fr)] gap-1 mb-1\">\n              <div /> {/* Empty corner */}\n              {xAxisLabels.map((label, index) => (\n                <div key={index} className=\"text-center p-2\">\n                  <span className=\"text-xs font-medium text-muted-foreground\">\n                    {label}\n                  </span>\n                </div>\n              ))}\n            </div>\n\n            {/* Data rows */}\n            {data.map((row, yIndex) => (\n              <div\n                key={yIndex}\n                className=\"grid grid-cols-[120px_repeat(var(--cols),1fr)] gap-1 mb-1\"\n                style={{ '--cols': xAxisLabels.length }}\n              >\n                {/* Y-axis label */}\n                <div className=\"flex items-center justify-end pr-3\">\n                  <span className=\"text-xs font-medium text-muted-foreground\">\n                    {yAxisLabels[yIndex]}\n                  </span>\n                </div>\n\n                {/* Data cells */}\n                {row.map((value, xIndex) => {\n                  const intensity = getColorIntensity(value);\n                  const backgroundColor = getCellColor(value, intensity);\n\n                  return (\n                    <div\n                      key={xIndex}\n                      className=\"relative h-12 rounded-sm border border-gray-100 cursor-pointer transition-all duration-200 hover:border-gray-300\"\n                      style={{ backgroundColor }}\n                      onMouseEnter={(e) => {\n                        setHoveredCell({\n                          x: xIndex,\n                          y: yIndex,\n                          value,\n                          clientX: e.clientX,\n                          clientY: e.clientY\n                        });\n                      }}\n                      onMouseLeave={() => setHoveredCell(null)}\n                    >\n                      <div className=\"absolute inset-0 flex items-center justify-center\">\n                        <span\n                          className={cn(\n                            'text-xs font-mono font-medium',\n                            Math.abs(value) > range * 0.6\n                              ? 'text-white'\n                              : 'text-gray-900'\n                          )}\n                        >\n                          {formatCell(value)}\n                        </span>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            ))}\n          </div>\n\n          {/* Tooltip */}\n          {hoveredCell && (\n            <CustomTooltip\n              x={hoveredCell.x}\n              y={hoveredCell.y}\n              value={hoveredCell.value}\n              xLabel={xAxisLabels[hoveredCell.x]}\n              yLabel={yAxisLabels[hoveredCell.y]}\n            />\n          )}\n        </div>\n\n        {/* Legend */}\n        <div className=\"flex items-center justify-center gap-6 mt-6 pt-4 border-t border-gray-100\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"flex items-center gap-1\">\n              <div className=\"w-4 h-4 rounded-sm bg-red-500 opacity-40\" />\n              <div className=\"w-4 h-4 rounded-sm bg-red-500 opacity-80\" />\n            </div>\n            <span className=\"text-xs text-muted-foreground\">Negative Impact</span>\n          </div>\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-4 h-4 rounded-sm bg-slate-400 opacity-20 border border-gray-200\" />\n            <span className=\"text-xs text-muted-foreground\">Neutral</span>\n          </div>\n          <div className=\"flex items-center gap-3\">\n            <div className=\"flex items-center gap-1\">\n              <div className=\"w-4 h-4 rounded-sm bg-green-500 opacity-40\" />\n              <div className=\"w-4 h-4 rounded-sm bg-green-500 opacity-80\" />\n            </div>\n            <span className=\"text-xs text-muted-foreground\">Positive Impact</span>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SensitivityHeatmap;\n","import { Calculator, TrendingUp, DollarSign } from 'lucide-react';\nimport React, { useState } from 'react';\n\nimport {\n  FinancialInput,\n  EditableCell,\n  CurrencyInput,\n  LoadingState,\n  LoadingSkeleton,\n  LoadingDots,\n  ValidationFeedback,\n  FieldValidation,\n  ValidationSummary\n} from './ui';\nimport { Card } from './ui/Card';\n\nconst FinancialInputsDemo = () => {\n  const [values, setValues] = useState({\n    revenue: 1250000,\n    expenses: 850000,\n    growth: 12.5,\n    margin: 32.1,\n    editableValue: 450000,\n    currency: 2400000\n  });\n\n  const [isLoading, setIsLoading] = useState({\n    calculation: false,\n    validation: false\n  });\n\n  const [errors, setErrors] = useState([]);\n  const [isEditingCell, setIsEditingCell] = useState(false);\n\n  // Simulate calculation loading\n  const simulateCalculation = () => {\n    setIsLoading(prev => ({ ...prev, calculation: true }));\n    setTimeout(() => {\n      setIsLoading(prev => ({ ...prev, calculation: false }));\n    }, 2000);\n  };\n\n  const handleValueChange = (key) => (newValue) => {\n    setValues(prev => ({ ...prev, [key]: newValue }));\n  };\n\n  const validateInput = (value, min, max) => {\n    const newErrors = [];\n    if (value < min) newErrors.push(`Value must be at least ${min}`);\n    if (value > max) newErrors.push(`Value must not exceed ${max}`);\n    setErrors(newErrors);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 p-8\">\n      <div className=\"max-w-6xl mx-auto space-y-8\">\n        {/* Header */}\n        <div className=\"text-center space-y-4\">\n          <div className=\"flex items-center justify-center gap-3\">\n            <div className=\"p-3 bg-blue-100 rounded-xl\">\n              <Calculator className=\"w-8 h-8 text-blue-600\" />\n            </div>\n            <h1 className=\"text-3xl font-bold text-slate-900\">Enhanced Financial Input Components</h1>\n          </div>\n          <p className=\"text-lg text-slate-600 max-w-2xl mx-auto\">\n            Professional financial input components with smart formatting, validation, and seamless user experience\n          </p>\n        </div>\n\n        {/* Main Demo Grid */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n\n          {/* Financial Input Component */}\n          <Card className=\"p-6 space-y-6\">\n            <div className=\"flex items-center gap-3\">\n              <DollarSign className=\"w-5 h-5 text-emerald-600\" />\n              <h2 className=\"text-xl font-semibold text-slate-900\">FinancialInput Component</h2>\n            </div>\n\n            <div className=\"space-y-4\">\n              <FinancialInput\n                label=\"Annual Revenue\"\n                value={values.revenue}\n                onChange={handleValueChange('revenue')}\n                type=\"currency\"\n                currency=\"USD\"\n                description=\"Enter the company's annual revenue\"\n                required\n                onValidation={(isValid, message) => console.log('Validation:', isValid, message)}\n              />\n\n              <FinancialInput\n                label=\"Operating Expenses\"\n                value={values.expenses}\n                onChange={handleValueChange('expenses')}\n                type=\"currency\"\n                currency=\"USD\"\n                error={values.expenses > values.revenue ? 'Expenses cannot exceed revenue' : null}\n              />\n\n              <FinancialInput\n                label=\"Growth Rate\"\n                value={values.growth}\n                onChange={handleValueChange('growth')}\n                type=\"percentage\"\n                suffix=\"%\"\n                decimals={1}\n                description=\"Year-over-year growth percentage\"\n              />\n\n              <FinancialInput\n                label=\"Profit Margin\"\n                value={values.margin}\n                onChange={handleValueChange('margin')}\n                type=\"number\"\n                suffix=\"%\"\n                decimals={2}\n                min={0}\n                max={100}\n                loading={isLoading.validation}\n              />\n            </div>\n          </Card>\n\n          {/* Currency Input Component */}\n          <Card className=\"p-6 space-y-6\">\n            <div className=\"flex items-center gap-3\">\n              <TrendingUp className=\"w-5 h-5 text-blue-600\" />\n              <h2 className=\"text-xl font-semibold text-slate-900\">CurrencyInput Component</h2>\n            </div>\n\n            <div className=\"space-y-4\">\n              <CurrencyInput\n                label=\"Market Valuation\"\n                value={values.currency}\n                onChange={handleValueChange('currency')}\n                currency=\"USD\"\n                abbreviateDisplay={true}\n                showTrend={true}\n                previousValue={2100000}\n                description=\"Company market valuation with trend indicator\"\n              />\n\n              <CurrencyInput\n                label=\"Investment Amount (EUR)\"\n                value={850000}\n                onChange={(val) => console.log('EUR Value:', val)}\n                currency=\"EUR\"\n                locale=\"de-DE\"\n                size=\"lg\"\n              />\n\n              <CurrencyInput\n                label=\"Small Investment\"\n                value={25000}\n                onChange={(val) => console.log('Small Investment:', val)}\n                currency=\"USD\"\n                size=\"sm\"\n                variant=\"filled\"\n              />\n\n              <CurrencyInput\n                label=\"Japanese Investment\"\n                value={15000000}\n                onChange={(val) => console.log('JPY Value:', val)}\n                currency=\"JPY\"\n                locale=\"ja-JP\"\n                abbreviateDisplay={true}\n              />\n            </div>\n          </Card>\n\n          {/* Editable Cells */}\n          <Card className=\"p-6 space-y-6\">\n            <h2 className=\"text-xl font-semibold text-slate-900\">EditableCell Component</h2>\n\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-3 gap-4 p-4 bg-slate-50 rounded-lg\">\n                <div className=\"text-sm font-medium text-slate-600\">Account</div>\n                <div className=\"text-sm font-medium text-slate-600\">Current</div>\n                <div className=\"text-sm font-medium text-slate-600\">Adjusted</div>\n\n                <div className=\"text-sm text-slate-700\">Revenue</div>\n                <EditableCell\n                  value={values.editableValue}\n                  onChange={handleValueChange('editableValue')}\n                  type=\"currency\"\n                  isEditing={isEditingCell}\n                  onEdit={setIsEditingCell}\n                  variant=\"default\"\n                />\n                <EditableCell\n                  value={values.editableValue * 1.15}\n                  onChange={(val) => console.log('Adjusted:', val)}\n                  type=\"currency\"\n                  variant=\"adjusted\"\n                />\n\n                <div className=\"text-sm text-slate-700\">Growth Rate</div>\n                <EditableCell\n                  value={15.5}\n                  onChange={(val) => console.log('Growth:', val)}\n                  type=\"percentage\"\n                />\n                <EditableCell\n                  value={18.2}\n                  onChange={(val) => console.log('Adj Growth:', val)}\n                  type=\"percentage\"\n                  variant=\"adjusted\"\n                />\n\n                <div className=\"text-sm text-slate-700\">Calculated</div>\n                <EditableCell\n                  value={values.editableValue * 0.25}\n                  isFormula={true}\n                  variant=\"formula\"\n                />\n                <EditableCell\n                  value={values.editableValue * 1.15 * 0.25}\n                  isFormula={true}\n                  variant=\"formula\"\n                />\n              </div>\n            </div>\n          </Card>\n\n          {/* Loading States */}\n          <Card className=\"p-6 space-y-6\">\n            <h2 className=\"text-xl font-semibold text-slate-900\">Loading States</h2>\n\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <LoadingState\n                  type=\"calculation\"\n                  message=\"Calculating DCF...\"\n                  size=\"default\"\n                />\n                <LoadingState\n                  type=\"financial\"\n                  message=\"Processing data...\"\n                  size=\"default\"\n                  variant=\"subtle\"\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Inline Loading States</h4>\n                <div className=\"flex items-center gap-4\">\n                  <LoadingState type=\"inline\" message=\"Loading...\" size=\"sm\" />\n                  <LoadingDots size=\"default\" variant=\"primary\" />\n                  <LoadingSkeleton width=\"w-24\" height=\"h-4\" variant=\"currency\" />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Interactive Loading Demo</h4>\n                <button\n                  onClick={simulateCalculation}\n                  disabled={isLoading.calculation}\n                  className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white rounded-lg transition-colors\"\n                >\n                  {isLoading.calculation ? 'Calculating...' : 'Run Calculation'}\n                </button>\n                {isLoading.calculation && (\n                  <LoadingState\n                    type=\"calculation\"\n                    message=\"Computing financial metrics...\"\n                    size=\"sm\"\n                    variant=\"pulsing\"\n                  />\n                )}\n              </div>\n            </div>\n          </Card>\n\n          {/* Validation Feedback */}\n          <Card className=\"p-6 space-y-6 lg:col-span-2\">\n            <h2 className=\"text-xl font-semibold text-slate-900\">Validation & Feedback</h2>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Individual Validation Messages</h4>\n\n                <ValidationFeedback\n                  type=\"error\"\n                  message=\"Revenue cannot be negative\"\n                  size=\"default\"\n                />\n\n                <ValidationFeedback\n                  type=\"warning\"\n                  message=\"Growth rate seems unusually high\"\n                  size=\"default\"\n                />\n\n                <ValidationFeedback\n                  type=\"success\"\n                  message=\"All financial metrics are within expected ranges\"\n                  size=\"default\"\n                />\n\n                <ValidationFeedback\n                  type=\"info\"\n                  message=\"Consider adjusting the discount rate based on market conditions\"\n                  size=\"default\"\n                />\n              </div>\n\n              <div className=\"space-y-4\">\n                <h4 className=\"text-sm font-medium text-slate-700\">Field Validation</h4>\n\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-slate-700\">Test Validation</label>\n                  <input\n                    type=\"number\"\n                    value={-50}\n                    onChange={(e) => validateInput(parseFloat(e.target.value), 0, 1000)}\n                    className=\"w-full px-3 py-2 border border-input rounded-lg\"\n                  />\n                  <FieldValidation\n                    error={errors.length > 0 ? errors[0] : null}\n                    info={errors.length === 0 ? 'Value is within acceptable range' : null}\n                  />\n                </div>\n\n                <ValidationSummary\n                  errors={[\n                    'Operating expenses exceed revenue',\n                    'Growth rate must be between 0% and 100%'\n                  ]}\n                  warnings={[\n                    'Margin seems low for this industry',\n                    'Consider reviewing the assumptions'\n                  ]}\n                  collapsible={true}\n                />\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Usage Examples */}\n        <Card className=\"p-6\">\n          <h2 className=\"text-xl font-semibold text-slate-900 mb-4\">Quick Usage Examples</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 text-sm\">\n            <div className=\"p-4 bg-slate-50 rounded-lg\">\n              <h4 className=\"font-medium text-slate-700 mb-2\">Basic Currency Input</h4>\n              <code className=\"text-xs text-slate-600 block whitespace-pre\">{`<CurrencyInput\n  value={1000000}\n  onChange={setValue}\n  currency=\"USD\"\n  label=\"Revenue\"\n/>`}\n              </code>\n            </div>\n\n            <div className=\"p-4 bg-slate-50 rounded-lg\">\n              <h4 className=\"font-medium text-slate-700 mb-2\">Editable Table Cell</h4>\n              <code className=\"text-xs text-slate-600 block whitespace-pre\">{`<EditableCell\n  value={value}\n  onChange={onChange}\n  type=\"currency\"\n  variant=\"adjusted\"\n/>`}\n              </code>\n            </div>\n\n            <div className=\"p-4 bg-slate-50 rounded-lg\">\n              <h4 className=\"font-medium text-slate-700 mb-2\">Validation Feedback</h4>\n              <code className=\"text-xs text-slate-600 block whitespace-pre\">{`<FieldValidation\n  error=\"Invalid input\"\n  warning=\"Check value\"\n  success=\"Valid input\"\n/>`}\n              </code>\n            </div>\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default FinancialInputsDemo;\n"],"file":"assets/FinancialInputsDemo-BBfkZXRY.js"}