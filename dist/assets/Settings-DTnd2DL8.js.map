{"version":3,"file":"Settings-DTnd2DL8.js","sources":["../../src/services/userPreferencesService.js","../../src/components/Settings/UserPreferences.jsx","../../src/services/securityService.js","../../src/components/Security/SecurityDashboard.jsx","../../src/pages/Settings.jsx"],"sourcesContent":["/**\n * User Preferences and Workspace Customization Service\n * Manages user settings, preferences, and workspace personalization\n */\n\nclass UserPreferencesService {\n  constructor() {\n    this.preferences = new Map();\n    this.workspaces = new Map();\n    this.themes = new Map();\n    this.layouts = new Map();\n    this.shortcuts = new Map();\n    this.isInitialized = false;\n    \n    this.defaultPreferences = {\n      // Appearance\n      theme: 'professional',\n      fontSize: 'medium',\n      density: 'comfortable',\n      colorScheme: 'light',\n      animations: true,\n      \n      // Dashboard & Layout\n      defaultView: 'dashboard',\n      sidebarCollapsed: false,\n      gridSize: 'medium',\n      widgetAnimations: true,\n      autoSaveInterval: 30000, // 30 seconds\n      \n      // Data & Analysis\n      currency: 'USD',\n      dateFormat: 'MM/DD/YYYY',\n      numberFormat: 'standard',\n      precision: 2,\n      autoRefreshData: true,\n      refreshInterval: 300000, // 5 minutes\n      \n      // Notifications\n      enableNotifications: true,\n      emailNotifications: false,\n      soundEffects: true,\n      pushNotifications: true,\n      \n      // Analysis & Modeling\n      defaultTimeHorizon: '5Y',\n      riskFreeRate: 0.03,\n      marketRiskPremium: 0.07,\n      defaultDiscountRate: 0.10,\n      confidenceLevel: 0.95,\n      \n      // Collaboration\n      shareByDefault: false,\n      allowComments: true,\n      trackChanges: true,\n      notifyOnChanges: true,\n      \n      // Performance & Data\n      enableCaching: true,\n      offlineMode: false,\n      dataValidation: true,\n      autoBackup: true,\n      \n      // Keyboard & Navigation\n      keyboardShortcuts: true,\n      mouseNavigation: true,\n      touchGestures: true,\n      commandPalette: true\n    };\n    \n    this.initializeService();\n  }\n\n  /**\n   * Initialize the preferences service\n   */\n  async initializeService() {\n    try {\n      await this.loadUserPreferences();\n      await this.loadWorkspaceConfigurations();\n      await this.initializeThemes();\n      await this.initializeLayouts();\n      await this.setupAutoSave();\n      \n      this.isInitialized = true;\n      console.log('User preferences service initialized');\n    } catch (error) {\n      console.error('Error initializing preferences service:', error);\n    }\n  }\n\n  /**\n   * Load user preferences from storage\n   */\n  async loadUserPreferences() {\n    try {\n      const storedPrefs = localStorage.getItem('financeanalyst_user_preferences');\n      if (storedPrefs) {\n        const parsed = JSON.parse(storedPrefs);\n        this.preferences.set('current', {\n          ...this.defaultPreferences,\n          ...parsed,\n          lastUpdated: new Date().toISOString()\n        });\n      } else {\n        this.preferences.set('current', {\n          ...this.defaultPreferences,\n          createdAt: new Date().toISOString(),\n          lastUpdated: new Date().toISOString()\n        });\n      }\n    } catch (error) {\n      console.error('Error loading user preferences:', error);\n      this.preferences.set('current', this.defaultPreferences);\n    }\n  }\n\n  /**\n   * Load workspace configurations\n   */\n  async loadWorkspaceConfigurations() {\n    try {\n      const storedWorkspaces = localStorage.getItem('financeanalyst_workspaces');\n      if (storedWorkspaces) {\n        const parsed = JSON.parse(storedWorkspaces);\n        Object.entries(parsed).forEach(([id, workspace]) => {\n          this.workspaces.set(id, workspace);\n        });\n      }\n      \n      // Ensure default workspace exists\n      if (!this.workspaces.has('default')) {\n        this.createDefaultWorkspace();\n      }\n    } catch (error) {\n      console.error('Error loading workspace configurations:', error);\n      this.createDefaultWorkspace();\n    }\n  }\n\n  /**\n   * Initialize available themes\n   */\n  async initializeThemes() {\n    const themes = {\n      light: {\n        id: 'light',\n        name: 'Light',\n        colors: {\n          primary: '#3b82f6',\n          secondary: '#64748b',\n          accent: '#06b6d4',\n          background: '#ffffff',\n          surface: '#f8fafc',\n          text: '#0f172a',\n          border: '#e2e8f0'\n        },\n        shadows: true,\n        borderRadius: '8px'\n      },\n      dark: {\n        id: 'dark',\n        name: 'Dark',\n        colors: {\n          primary: '#60a5fa',\n          secondary: '#94a3b8',\n          accent: '#22d3ee',\n          background: '#0f172a',\n          surface: '#1e293b',\n          text: '#f1f5f9',\n          border: '#334155'\n        },\n        shadows: false,\n        borderRadius: '8px'\n      },\n      professional: {\n        id: 'professional',\n        name: 'Professional',\n        colors: {\n          primary: '#1e40af',\n          secondary: '#475569',\n          accent: '#0ea5e9',\n          background: '#ffffff',\n          surface: '#f8fafc',\n          text: '#1e293b',\n          border: '#cbd5e1'\n        },\n        shadows: true,\n        borderRadius: '6px'\n      },\n      high_contrast: {\n        id: 'high_contrast',\n        name: 'High Contrast',\n        colors: {\n          primary: '#000000',\n          secondary: '#666666',\n          accent: '#0066cc',\n          background: '#ffffff',\n          surface: '#f5f5f5',\n          text: '#000000',\n          border: '#999999'\n        },\n        shadows: false,\n        borderRadius: '4px'\n      }\n    };\n\n    Object.entries(themes).forEach(([id, theme]) => {\n      this.themes.set(id, theme);\n    });\n  }\n\n  /**\n   * Initialize layout templates\n   */\n  async initializeLayouts() {\n    const layouts = {\n      dashboard: {\n        id: 'dashboard',\n        name: 'Dashboard',\n        grid: { rows: 6, cols: 12 },\n        widgets: [\n          { id: 'market_overview', x: 0, y: 0, w: 6, h: 2 },\n          { id: 'portfolio_summary', x: 6, y: 0, w: 6, h: 2 },\n          { id: 'watchlist', x: 0, y: 2, w: 4, h: 4 },\n          { id: 'news_feed', x: 4, y: 2, w: 4, h: 4 },\n          { id: 'performance_chart', x: 8, y: 2, w: 4, h: 4 }\n        ]\n      },\n      analysis: {\n        id: 'analysis',\n        name: 'Analysis Focused',\n        grid: { rows: 8, cols: 12 },\n        widgets: [\n          { id: 'financial_model', x: 0, y: 0, w: 8, h: 6 },\n          { id: 'assumptions', x: 8, y: 0, w: 4, h: 3 },\n          { id: 'results', x: 8, y: 3, w: 4, h: 3 },\n          { id: 'scenarios', x: 0, y: 6, w: 12, h: 2 }\n        ]\n      },\n      research: {\n        id: 'research',\n        name: 'Research',\n        grid: { rows: 6, cols: 12 },\n        widgets: [\n          { id: 'company_data', x: 0, y: 0, w: 6, h: 3 },\n          { id: 'peer_comparison', x: 6, y: 0, w: 6, h: 3 },\n          { id: 'analyst_notes', x: 0, y: 3, w: 8, h: 3 },\n          { id: 'documents', x: 8, y: 3, w: 4, h: 3 }\n        ]\n      },\n      minimal: {\n        id: 'minimal',\n        name: 'Minimal',\n        grid: { rows: 4, cols: 8 },\n        widgets: [\n          { id: 'key_metrics', x: 0, y: 0, w: 8, h: 2 },\n          { id: 'primary_chart', x: 0, y: 2, w: 8, h: 2 }\n        ]\n      }\n    };\n\n    Object.entries(layouts).forEach(([id, layout]) => {\n      this.layouts.set(id, layout);\n    });\n  }\n\n  /**\n   * Setup auto-save functionality\n   */\n  setupAutoSave() {\n    const prefs = this.getPreferences();\n    const interval = prefs.autoSaveInterval || 30000;\n\n    setInterval(() => {\n      this.saveToStorage();\n    }, interval);\n\n    // Save on browser unload\n    window.addEventListener('beforeunload', () => {\n      this.saveToStorage();\n    });\n  }\n\n  /**\n   * Get current user preferences\n   */\n  getPreferences() {\n    return this.preferences.get('current') || this.defaultPreferences;\n  }\n\n  /**\n   * Update user preferences\n   */\n  updatePreferences(updates) {\n    const current = this.getPreferences();\n    const updated = {\n      ...current,\n      ...updates,\n      lastUpdated: new Date().toISOString()\n    };\n    \n    this.preferences.set('current', updated);\n    this.saveToStorage();\n    this.applyPreferences(updated);\n    \n    return updated;\n  }\n\n  /**\n   * Reset preferences to default\n   */\n  resetPreferences() {\n    const reset = {\n      ...this.defaultPreferences,\n      createdAt: new Date().toISOString(),\n      lastUpdated: new Date().toISOString()\n    };\n    \n    this.preferences.set('current', reset);\n    this.saveToStorage();\n    this.applyPreferences(reset);\n    \n    return reset;\n  }\n\n  /**\n   * Create default workspace\n   */\n  createDefaultWorkspace() {\n    const defaultWorkspace = {\n      id: 'default',\n      name: 'Default Workspace',\n      layout: 'dashboard',\n      widgets: this.layouts.get('dashboard')?.widgets || [],\n      pinnedItems: [],\n      quickAccess: [\n        { id: 'private_analysis', name: 'Private Analysis', icon: 'BarChart3' },\n        { id: 'market_data', name: 'Market Data', icon: 'TrendingUp' },\n        { id: 'portfolio', name: 'Portfolio', icon: 'PieChart' },\n        { id: 'reports', name: 'Reports', icon: 'FileText' }\n      ],\n      customizations: {\n        showWelcome: true,\n        compactMode: false,\n        showTips: true\n      },\n      createdAt: new Date().toISOString(),\n      lastAccessed: new Date().toISOString()\n    };\n    \n    this.workspaces.set('default', defaultWorkspace);\n  }\n\n  /**\n   * Create new workspace\n   */\n  createWorkspace(config) {\n    const id = config.id || `workspace_${Date.now()}`;\n    const workspace = {\n      id,\n      name: config.name || 'New Workspace',\n      layout: config.layout || 'dashboard',\n      widgets: config.widgets || this.layouts.get(config.layout || 'dashboard')?.widgets || [],\n      pinnedItems: config.pinnedItems || [],\n      quickAccess: config.quickAccess || [],\n      customizations: config.customizations || {},\n      createdAt: new Date().toISOString(),\n      lastAccessed: new Date().toISOString()\n    };\n    \n    this.workspaces.set(id, workspace);\n    this.saveToStorage();\n    \n    return workspace;\n  }\n\n  /**\n   * Update workspace\n   */\n  updateWorkspace(id, updates) {\n    const workspace = this.workspaces.get(id);\n    if (!workspace) {\n      throw new Error(`Workspace ${id} not found`);\n    }\n    \n    const updated = {\n      ...workspace,\n      ...updates,\n      lastAccessed: new Date().toISOString()\n    };\n    \n    this.workspaces.set(id, updated);\n    this.saveToStorage();\n    \n    return updated;\n  }\n\n  /**\n   * Delete workspace\n   */\n  deleteWorkspace(id) {\n    if (id === 'default') {\n      throw new Error('Cannot delete default workspace');\n    }\n    \n    this.workspaces.delete(id);\n    this.saveToStorage();\n  }\n\n  /**\n   * Get workspace by ID\n   */\n  getWorkspace(id) {\n    return this.workspaces.get(id);\n  }\n\n  /**\n   * Get all workspaces\n   */\n  getWorkspaces() {\n    return Array.from(this.workspaces.values());\n  }\n\n  /**\n   * Switch to workspace\n   */\n  switchWorkspace(id) {\n    const workspace = this.workspaces.get(id);\n    if (!workspace) {\n      throw new Error(`Workspace ${id} not found`);\n    }\n    \n    // Update last accessed\n    workspace.lastAccessed = new Date().toISOString();\n    this.workspaces.set(id, workspace);\n    \n    // Update current workspace preference\n    this.updatePreferences({ currentWorkspace: id });\n    \n    return workspace;\n  }\n\n  /**\n   * Get available themes\n   */\n  getThemes() {\n    return Array.from(this.themes.values());\n  }\n\n  /**\n   * Get theme by ID\n   */\n  getTheme(id) {\n    return this.themes.get(id);\n  }\n\n  /**\n   * Get available layouts\n   */\n  getLayouts() {\n    return Array.from(this.layouts.values());\n  }\n\n  /**\n   * Get layout by ID\n   */\n  getLayout(id) {\n    return this.layouts.get(id);\n  }\n\n  /**\n   * Apply preferences to the application\n   */\n  applyPreferences(preferences) {\n    // Apply theme\n    this.applyTheme(preferences.theme);\n    \n    // Apply font size\n    this.applyFontSize(preferences.fontSize);\n    \n    // Apply animations setting\n    this.applyAnimationSettings(preferences.animations);\n    \n    // Apply keyboard shortcuts\n    if (preferences.keyboardShortcuts) {\n      this.enableKeyboardShortcuts();\n    }\n    \n    // Trigger preference change event\n    window.dispatchEvent(new CustomEvent('preferencesChanged', {\n      detail: preferences\n    }));\n  }\n\n  /**\n   * Apply theme to document\n   */\n  applyTheme(themeId) {\n    const theme = this.themes.get(themeId);\n    if (!theme) return;\n    \n    const root = document.documentElement;\n    \n    // Apply CSS custom properties\n    Object.entries(theme.colors).forEach(([key, value]) => {\n      root.style.setProperty(`--color-${key}`, value);\n    });\n    \n    // Apply theme class\n    document.body.className = document.body.className.replace(/theme-\\w+/g, '');\n    document.body.classList.add(`theme-${themeId}`);\n  }\n\n  /**\n   * Apply font size setting\n   */\n  applyFontSize(size) {\n    const root = document.documentElement;\n    const sizes = {\n      small: '14px',\n      medium: '16px',\n      large: '18px',\n      extra_large: '20px'\n    };\n    \n    root.style.setProperty('--base-font-size', sizes[size] || sizes.medium);\n    document.body.classList.remove('text-sm', 'text-base', 'text-lg', 'text-xl');\n    \n    const classList = {\n      small: 'text-sm',\n      medium: 'text-base',\n      large: 'text-lg',\n      extra_large: 'text-xl'\n    };\n    \n    document.body.classList.add(classList[size] || 'text-base');\n  }\n\n  /**\n   * Apply animation settings\n   */\n  applyAnimationSettings(enabled) {\n    document.body.classList.toggle('reduce-motion', !enabled);\n    \n    if (!enabled) {\n      document.body.style.setProperty('--animation-duration', '0ms');\n      document.body.style.setProperty('--transition-duration', '0ms');\n    } else {\n      document.body.style.removeProperty('--animation-duration');\n      document.body.style.removeProperty('--transition-duration');\n    }\n  }\n\n  /**\n   * Enable keyboard shortcuts\n   */\n  enableKeyboardShortcuts() {\n    // This would integrate with a keyboard shortcut manager\n    console.log('Keyboard shortcuts enabled');\n  }\n\n  /**\n   * Save preferences and workspaces to storage\n   */\n  saveToStorage() {\n    try {\n      // Save preferences\n      const prefs = this.preferences.get('current');\n      if (prefs) {\n        localStorage.setItem('financeanalyst_user_preferences', JSON.stringify(prefs));\n      }\n      \n      // Save workspaces\n      const workspacesObj = {};\n      this.workspaces.forEach((workspace, id) => {\n        workspacesObj[id] = workspace;\n      });\n      localStorage.setItem('financeanalyst_workspaces', JSON.stringify(workspacesObj));\n      \n    } catch (error) {\n      console.error('Error saving to storage:', error);\n    }\n  }\n\n  /**\n   * Export preferences and workspace settings\n   */\n  exportSettings() {\n    const settings = {\n      preferences: this.preferences.get('current'),\n      workspaces: Array.from(this.workspaces.values()),\n      exportedAt: new Date().toISOString(),\n      version: '1.0'\n    };\n    \n    return settings;\n  }\n\n  /**\n   * Import preferences and workspace settings\n   */\n  importSettings(settings) {\n    try {\n      if (settings.preferences) {\n        this.preferences.set('current', {\n          ...this.defaultPreferences,\n          ...settings.preferences,\n          lastUpdated: new Date().toISOString()\n        });\n      }\n      \n      if (settings.workspaces) {\n        settings.workspaces.forEach(workspace => {\n          this.workspaces.set(workspace.id, workspace);\n        });\n      }\n      \n      this.saveToStorage();\n      this.applyPreferences(this.getPreferences());\n      \n      return true;\n    } catch (error) {\n      console.error('Error importing settings:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get preference categories for UI organization\n   */\n  getPreferenceCategories() {\n    return {\n      appearance: {\n        name: 'Appearance',\n        icon: 'Palette',\n        preferences: ['theme', 'fontSize', 'density', 'colorScheme', 'animations']\n      },\n      dashboard: {\n        name: 'Dashboard & Layout',\n        icon: 'Layout',\n        preferences: ['defaultView', 'sidebarCollapsed', 'gridSize', 'widgetAnimations', 'autoSaveInterval']\n      },\n      data: {\n        name: 'Data & Analysis',\n        icon: 'Database',\n        preferences: ['currency', 'dateFormat', 'numberFormat', 'precision', 'autoRefreshData', 'refreshInterval']\n      },\n      notifications: {\n        name: 'Notifications',\n        icon: 'Bell',\n        preferences: ['enableNotifications', 'emailNotifications', 'soundEffects', 'pushNotifications']\n      },\n      modeling: {\n        name: 'Analysis & Modeling',\n        icon: 'Calculator',\n        preferences: ['defaultTimeHorizon', 'riskFreeRate', 'marketRiskPremium', 'defaultDiscountRate', 'confidenceLevel']\n      },\n      collaboration: {\n        name: 'Collaboration',\n        icon: 'Users',\n        preferences: ['shareByDefault', 'allowComments', 'trackChanges', 'notifyOnChanges']\n      },\n      performance: {\n        name: 'Performance & Data',\n        icon: 'Zap',\n        preferences: ['enableCaching', 'offlineMode', 'dataValidation', 'autoBackup']\n      },\n      navigation: {\n        name: 'Keyboard & Navigation',\n        icon: 'Navigation',\n        preferences: ['keyboardShortcuts', 'mouseNavigation', 'touchGestures', 'commandPalette']\n      }\n    };\n  }\n}\n\nexport default new UserPreferencesService();\n","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Settings, \n  Palette, \n  Layout, \n  Database, \n  Bell, \n  Calculator, \n  Users, \n  Zap, \n  Navigation,\n  Check,\n  X,\n  RefreshCw,\n  Download,\n  Upload,\n  RotateCcw,\n  Save\n} from 'lucide-react';\nimport userPreferencesService from '../../services/userPreferencesService';\n\nconst UserPreferences = ({ isOpen, onClose }) => {\n  const [preferences, setPreferences] = useState({});\n  const [activeCategory, setActiveCategory] = useState('appearance');\n  const [hasChanges, setHasChanges] = useState(false);\n  const [categories, setCategories] = useState({});\n  const [themes, setThemes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n\n  useEffect(() => {\n    if (isOpen) {\n      loadPreferences();\n    }\n  }, [isOpen]);\n\n  const loadPreferences = async () => {\n    setIsLoading(true);\n    try {\n      const prefs = userPreferencesService.getPreferences();\n      const cats = userPreferencesService.getPreferenceCategories();\n      const availableThemes = userPreferencesService.getThemes();\n      \n      setPreferences(prefs);\n      setCategories(cats);\n      setThemes(availableThemes);\n      setHasChanges(false);\n    } catch (error) {\n      console.error('Error loading preferences:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updatePreference = (key, value) => {\n    const updated = { ...preferences, [key]: value };\n    setPreferences(updated);\n    setHasChanges(true);\n  };\n\n  const savePreferences = async () => {\n    setIsSaving(true);\n    try {\n      await userPreferencesService.updatePreferences(preferences);\n      setHasChanges(false);\n      \n      // Show success notification\n      window.dispatchEvent(new CustomEvent('showNotification', {\n        detail: {\n          type: 'success',\n          message: 'Preferences saved successfully',\n          duration: 3000\n        }\n      }));\n    } catch (error) {\n      console.error('Error saving preferences:', error);\n      window.dispatchEvent(new CustomEvent('showNotification', {\n        detail: {\n          type: 'error',\n          message: 'Failed to save preferences',\n          duration: 5000\n        }\n      }));\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const resetPreferences = async () => {\n    if (window.confirm('Reset all preferences to default? This action cannot be undone.')) {\n      try {\n        const reset = await userPreferencesService.resetPreferences();\n        setPreferences(reset);\n        setHasChanges(false);\n        \n        window.dispatchEvent(new CustomEvent('showNotification', {\n          detail: {\n            type: 'success',\n            message: 'Preferences reset to default',\n            duration: 3000\n          }\n        }));\n      } catch (error) {\n        console.error('Error resetting preferences:', error);\n      }\n    }\n  };\n\n  const exportSettings = () => {\n    const settings = userPreferencesService.exportSettings();\n    const blob = new Blob([JSON.stringify(settings, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `financeanalyst_settings_${new Date().toISOString().split('T')[0]}.json`;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const importSettings = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const settings = JSON.parse(e.target.result);\n        const success = userPreferencesService.importSettings(settings);\n        \n        if (success) {\n          loadPreferences();\n          window.dispatchEvent(new CustomEvent('showNotification', {\n            detail: {\n              type: 'success',\n              message: 'Settings imported successfully',\n              duration: 3000\n            }\n          }));\n        } else {\n          throw new Error('Invalid settings file');\n        }\n      } catch (error) {\n        console.error('Error importing settings:', error);\n        window.dispatchEvent(new CustomEvent('showNotification', {\n          detail: {\n            type: 'error',\n            message: 'Failed to import settings',\n            duration: 5000\n          }\n        }));\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  const getCategoryIcon = (categoryKey) => {\n    const icons = {\n      appearance: Palette,\n      dashboard: Layout,\n      data: Database,\n      notifications: Bell,\n      modeling: Calculator,\n      collaboration: Users,\n      performance: Zap,\n      navigation: Navigation\n    };\n    return icons[categoryKey] || Settings;\n  };\n\n  const renderPreferenceInput = (key, value) => {\n    const inputProps = {\n      className: \"w-full p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n      value: value || '',\n      onChange: (e) => updatePreference(key, e.target.value)\n    };\n\n    switch (key) {\n      case 'theme':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            {themes.map(theme => (\n              <option key={theme.id} value={theme.id}>{theme.name}</option>\n            ))}\n          </select>\n        );\n      \n      case 'fontSize':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            <option value=\"small\">Small</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"large\">Large</option>\n            <option value=\"extra_large\">Extra Large</option>\n          </select>\n        );\n      \n      case 'density':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            <option value=\"compact\">Compact</option>\n            <option value=\"comfortable\">Comfortable</option>\n            <option value=\"spacious\">Spacious</option>\n          </select>\n        );\n      \n      case 'colorScheme':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            <option value=\"light\">Light</option>\n            <option value=\"dark\">Dark</option>\n            <option value=\"auto\">Auto</option>\n          </select>\n        );\n      \n      case 'currency':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            <option value=\"USD\">USD - US Dollar</option>\n            <option value=\"EUR\">EUR - Euro</option>\n            <option value=\"GBP\">GBP - British Pound</option>\n            <option value=\"JPY\">JPY - Japanese Yen</option>\n            <option value=\"CAD\">CAD - Canadian Dollar</option>\n          </select>\n        );\n      \n      case 'dateFormat':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            <option value=\"MM/DD/YYYY\">MM/DD/YYYY</option>\n            <option value=\"DD/MM/YYYY\">DD/MM/YYYY</option>\n            <option value=\"YYYY-MM-DD\">YYYY-MM-DD</option>\n            <option value=\"MMM DD, YYYY\">MMM DD, YYYY</option>\n          </select>\n        );\n      \n      case 'numberFormat':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            <option value=\"standard\">1,234.56</option>\n            <option value=\"european\">1.234,56</option>\n            <option value=\"indian\">1,23,456.78</option>\n            <option value=\"scientific\">1.23E+3</option>\n          </select>\n        );\n\n      case 'defaultTimeHorizon':\n        return (\n          <select {...inputProps} onChange={(e) => updatePreference(key, e.target.value)}>\n            <option value=\"1Y\">1 Year</option>\n            <option value=\"3Y\">3 Years</option>\n            <option value=\"5Y\">5 Years</option>\n            <option value=\"10Y\">10 Years</option>\n          </select>\n        );\n\n      case 'precision':\n      case 'autoSaveInterval':\n      case 'refreshInterval':\n      case 'riskFreeRate':\n      case 'marketRiskPremium':\n      case 'defaultDiscountRate':\n      case 'confidenceLevel':\n        return (\n          <input\n            {...inputProps}\n            type=\"number\"\n            step={key.includes('Rate') || key.includes('Level') ? '0.001' : '1'}\n            min={key.includes('Interval') ? '1000' : '0'}\n            max={key.includes('Level') ? '1' : undefined}\n            onChange={(e) => updatePreference(key, parseFloat(e.target.value) || 0)}\n          />\n        );\n\n      case 'animations':\n      case 'sidebarCollapsed':\n      case 'widgetAnimations':\n      case 'autoRefreshData':\n      case 'enableNotifications':\n      case 'emailNotifications':\n      case 'soundEffects':\n      case 'pushNotifications':\n      case 'shareByDefault':\n      case 'allowComments':\n      case 'trackChanges':\n      case 'notifyOnChanges':\n      case 'enableCaching':\n      case 'offlineMode':\n      case 'dataValidation':\n      case 'autoBackup':\n      case 'keyboardShortcuts':\n      case 'mouseNavigation':\n      case 'touchGestures':\n      case 'commandPalette':\n        return (\n          <input\n            type=\"checkbox\"\n            checked={value || false}\n            onChange={(e) => updatePreference(key, e.target.checked)}\n            className=\"w-5 h-5 text-blue-600 rounded focus:ring-blue-500\"\n          />\n        );\n\n      default:\n        return <input {...inputProps} type=\"text\" />;\n    }\n  };\n\n  const getPreferenceLabel = (key) => {\n    const labels = {\n      theme: 'Theme',\n      fontSize: 'Font Size',\n      density: 'Display Density',\n      colorScheme: 'Color Scheme',\n      animations: 'Enable Animations',\n      defaultView: 'Default View',\n      sidebarCollapsed: 'Collapse Sidebar',\n      gridSize: 'Grid Size',\n      widgetAnimations: 'Widget Animations',\n      autoSaveInterval: 'Auto Save Interval (ms)',\n      currency: 'Default Currency',\n      dateFormat: 'Date Format',\n      numberFormat: 'Number Format',\n      precision: 'Decimal Precision',\n      autoRefreshData: 'Auto Refresh Data',\n      refreshInterval: 'Refresh Interval (ms)',\n      enableNotifications: 'Enable Notifications',\n      emailNotifications: 'Email Notifications',\n      soundEffects: 'Sound Effects',\n      pushNotifications: 'Push Notifications',\n      defaultTimeHorizon: 'Default Time Horizon',\n      riskFreeRate: 'Risk-Free Rate',\n      marketRiskPremium: 'Market Risk Premium',\n      defaultDiscountRate: 'Default Discount Rate',\n      confidenceLevel: 'Confidence Level',\n      shareByDefault: 'Share by Default',\n      allowComments: 'Allow Comments',\n      trackChanges: 'Track Changes',\n      notifyOnChanges: 'Notify on Changes',\n      enableCaching: 'Enable Caching',\n      offlineMode: 'Offline Mode',\n      dataValidation: 'Data Validation',\n      autoBackup: 'Auto Backup',\n      keyboardShortcuts: 'Keyboard Shortcuts',\n      mouseNavigation: 'Mouse Navigation',\n      touchGestures: 'Touch Gestures',\n      commandPalette: 'Command Palette'\n    };\n    return labels[key] || key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n        className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n        onClick={onClose}\n      >\n        <motion.div\n          initial={{ scale: 0.9, opacity: 0 }}\n          animate={{ scale: 1, opacity: 1 }}\n          exit={{ scale: 0.9, opacity: 0 }}\n          onClick={(e) => e.stopPropagation()}\n          className=\"bg-white rounded-xl shadow-2xl max-w-6xl max-h-[90vh] w-full mx-4 overflow-hidden\"\n        >\n          {/* Header */}\n          <div className=\"flex items-center justify-between p-6 border-b border-gray-200\">\n            <div>\n              <h2 className=\"text-2xl font-bold text-gray-900 flex items-center\">\n                <Settings className=\"mr-3\" size={28} />\n                User Preferences\n              </h2>\n              <p className=\"text-gray-600 mt-1\">Customize your workspace and experience</p>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              {hasChanges && (\n                <motion.button\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  onClick={savePreferences}\n                  disabled={isSaving}\n                  className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\n                >\n                  {isSaving ? (\n                    <RefreshCw className=\"animate-spin\" size={16} />\n                  ) : (\n                    <Save size={16} />\n                  )}\n                  <span>Save Changes</span>\n                </motion.button>\n              )}\n              <button\n                onClick={onClose}\n                className=\"p-2 text-gray-500 hover:text-gray-700 rounded-lg hover:bg-gray-100\"\n              >\n                <X size={24} />\n              </button>\n            </div>\n          </div>\n\n          <div className=\"flex max-h-[calc(90vh-88px)]\">\n            {/* Sidebar */}\n            <div className=\"w-64 bg-gray-50 border-r border-gray-200 overflow-y-auto\">\n              <div className=\"p-4 space-y-2\">\n                {Object.entries(categories).map(([key, category]) => {\n                  const Icon = getCategoryIcon(key);\n                  return (\n                    <motion.button\n                      key={key}\n                      whileHover={{ x: 4 }}\n                      onClick={() => setActiveCategory(key)}\n                      className={`w-full flex items-center space-x-3 px-4 py-3 rounded-lg text-left transition-colors ${\n                        activeCategory === key\n                          ? 'bg-blue-100 text-blue-700 border border-blue-200'\n                          : 'text-gray-700 hover:bg-gray-100'\n                      }`}\n                    >\n                      <Icon size={20} />\n                      <span className=\"font-medium\">{category.name}</span>\n                    </motion.button>\n                  );\n                })}\n              </div>\n\n              {/* Import/Export Actions */}\n              <div className=\"border-t border-gray-200 p-4 space-y-2\">\n                <button\n                  onClick={exportSettings}\n                  className=\"w-full flex items-center space-x-2 px-4 py-2 text-gray-700 hover:bg-gray-100 rounded-lg\"\n                >\n                  <Download size={16} />\n                  <span>Export Settings</span>\n                </button>\n                <label className=\"w-full flex items-center space-x-2 px-4 py-2 text-gray-700 hover:bg-gray-100 rounded-lg cursor-pointer\">\n                  <Upload size={16} />\n                  <span>Import Settings</span>\n                  <input\n                    type=\"file\"\n                    accept=\".json\"\n                    onChange={importSettings}\n                    className=\"hidden\"\n                  />\n                </label>\n                <button\n                  onClick={resetPreferences}\n                  className=\"w-full flex items-center space-x-2 px-4 py-2 text-red-600 hover:bg-red-50 rounded-lg\"\n                >\n                  <RotateCcw size={16} />\n                  <span>Reset to Default</span>\n                </button>\n              </div>\n            </div>\n\n            {/* Main Content */}\n            <div className=\"flex-1 overflow-y-auto\">\n              {isLoading ? (\n                <div className=\"flex items-center justify-center h-full\">\n                  <RefreshCw className=\"animate-spin\" size={32} />\n                </div>\n              ) : (\n                <div className=\"p-6\">\n                  {activeCategory && categories[activeCategory] && (\n                    <motion.div\n                      key={activeCategory}\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      className=\"space-y-6\"\n                    >\n                      <div>\n                        <h3 className=\"text-xl font-semibold text-gray-900 flex items-center\">\n                          {React.createElement(getCategoryIcon(activeCategory), { \n                            size: 24, \n                            className: \"mr-2\" \n                          })}\n                          {categories[activeCategory].name}\n                        </h3>\n                        <p className=\"text-gray-600 mt-1\">\n                          Configure {categories[activeCategory].name.toLowerCase()} settings\n                        </p>\n                      </div>\n\n                      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                        {categories[activeCategory].preferences.map(prefKey => (\n                          <motion.div\n                            key={prefKey}\n                            initial={{ opacity: 0, y: 10 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            className=\"space-y-2\"\n                          >\n                            <label className=\"block font-medium text-gray-900\">\n                              {getPreferenceLabel(prefKey)}\n                            </label>\n                            {renderPreferenceInput(prefKey, preferences[prefKey])}\n                          </motion.div>\n                        ))}\n                      </div>\n                    </motion.div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Footer */}\n          {hasChanges && (\n            <div className=\"border-t border-gray-200 bg-yellow-50 px-6 py-3\">\n              <div className=\"flex items-center justify-between\">\n                <p className=\"text-sm text-yellow-700\">\n                  You have unsaved changes\n                </p>\n                <div className=\"flex space-x-3\">\n                  <button\n                    onClick={loadPreferences}\n                    className=\"text-sm text-gray-600 hover:text-gray-800\"\n                  >\n                    Discard Changes\n                  </button>\n                  <button\n                    onClick={savePreferences}\n                    disabled={isSaving}\n                    className=\"text-sm bg-blue-600 text-white px-4 py-1 rounded hover:bg-blue-700 disabled:opacity-50\"\n                  >\n                    {isSaving ? 'Saving...' : 'Save Changes'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </motion.div>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nexport default UserPreferences;\n","/**\n * Advanced Security Service with Compliance Monitoring\n * Implements enterprise-grade security features and regulatory compliance\n */\n\nimport CryptoJS from 'crypto-js';\n\nclass SecurityService {\n  constructor() {\n    this.sessions = new Map();\n    this.auditLog = [];\n    this.securityPolicies = new Map();\n    this.complianceRules = new Map();\n    this.threats = new Map();\n    this.accessControls = new Map();\n    this.encryptionKeys = new Map();\n    this.securityEvents = [];\n    this.isInitialized = false;\n    \n    this.initializeService();\n  }\n\n  /**\n   * Initialize security service with default policies\n   */\n  async initializeService() {\n    try {\n      this.setupDefaultPolicies();\n      this.setupComplianceRules();\n      this.initializeEncryption();\n      this.startSecurityMonitoring();\n      \n      this.isInitialized = true;\n      console.log('Security service initialized with enterprise-grade protection');\n    } catch (error) {\n      console.error('Error initializing security service:', error);\n    }\n  }\n\n  /**\n   * Setup default security policies\n   */\n  setupDefaultPolicies() {\n    // Password Policy\n    this.securityPolicies.set('password', {\n      minLength: 12,\n      requireUppercase: true,\n      requireLowercase: true,\n      requireNumbers: true,\n      requireSpecialChars: true,\n      maxAge: 90, // days\n      preventReuse: 5, // last 5 passwords\n      lockoutThreshold: 5, // failed attempts\n      lockoutDuration: 300000 // 5 minutes\n    });\n\n    // Session Policy\n    this.securityPolicies.set('session', {\n      maxDuration: 28800000, // 8 hours\n      idleTimeout: 1800000, // 30 minutes\n      requireReauth: true,\n      secureCookies: true,\n      httpOnly: true,\n      sameSite: 'strict'\n    });\n\n    // Data Access Policy\n    this.securityPolicies.set('dataAccess', {\n      requireMFA: true,\n      logAllAccess: true,\n      maskSensitiveData: true,\n      requireApproval: ['financial_statements', 'trading_data'],\n      retentionPeriod: 2555200000 // 90 days\n    });\n\n    // API Security Policy\n    this.securityPolicies.set('api', {\n      rateLimiting: true,\n      requestsPerMinute: 100,\n      requireAuthentication: true,\n      validateInput: true,\n      encryptPayload: true,\n      logRequests: true\n    });\n\n    // File Security Policy\n    this.securityPolicies.set('files', {\n      allowedTypes: ['.pdf', '.xlsx', '.csv', '.json'],\n      maxFileSize: 50 * 1024 * 1024, // 50MB\n      virusScanning: true,\n      encryptStorage: true,\n      requireApproval: true\n    });\n  }\n\n  /**\n   * Setup compliance rules for different regulations\n   */\n  setupComplianceRules() {\n    // SOX Compliance\n    this.complianceRules.set('sox', {\n      name: 'Sarbanes-Oxley Act',\n      requirements: {\n        auditTrail: true,\n        dataIntegrity: true,\n        accessControls: true,\n        changeManagement: true,\n        periodicReview: true\n      },\n      retentionPeriod: 2555200000, // 7 years\n      auditFrequency: 'quarterly'\n    });\n\n    // GDPR Compliance\n    this.complianceRules.set('gdpr', {\n      name: 'General Data Protection Regulation',\n      requirements: {\n        dataMinimization: true,\n        consentManagement: true,\n        rightToErasure: true,\n        dataPortability: true,\n        breachNotification: true,\n        privacyByDesign: true\n      },\n      retentionPeriod: 1095 * 24 * 60 * 60 * 1000, // 3 years\n      auditFrequency: 'annual'\n    });\n\n    // SEC Compliance\n    this.complianceRules.set('sec', {\n      name: 'Securities and Exchange Commission',\n      requirements: {\n        recordKeeping: true,\n        reportingAccuracy: true,\n        insiderTrading: true,\n        marketManipulation: true,\n        clientProtection: true\n      },\n      retentionPeriod: 1826 * 24 * 60 * 60 * 1000, // 5 years\n      auditFrequency: 'annual'\n    });\n\n    // FINRA Compliance\n    this.complianceRules.set('finra', {\n      name: 'Financial Industry Regulatory Authority',\n      requirements: {\n        communicationMonitoring: true,\n        tradingSurveillance: true,\n        riskManagement: true,\n        customerProtection: true,\n        recordKeeping: true\n      },\n      retentionPeriod: 1095 * 24 * 60 * 60 * 1000, // 3 years\n      auditFrequency: 'monthly'\n    });\n  }\n\n  /**\n   * Initialize encryption system\n   */\n  initializeEncryption() {\n    // Generate master encryption key if not exists\n    if (!localStorage.getItem('financeanalyst_master_key')) {\n      const masterKey = CryptoJS.lib.WordArray.random(256/8).toString();\n      this.encryptionKeys.set('master', masterKey);\n      localStorage.setItem('financeanalyst_master_key', masterKey);\n    } else {\n      this.encryptionKeys.set('master', localStorage.getItem('financeanalyst_master_key'));\n    }\n\n    // Generate session-specific keys\n    this.generateSessionKey();\n  }\n\n  /**\n   * Generate new session encryption key\n   */\n  generateSessionKey() {\n    const sessionKey = CryptoJS.lib.WordArray.random(256/8).toString();\n    this.encryptionKeys.set('session', sessionKey);\n    return sessionKey;\n  }\n\n  /**\n   * Start security monitoring\n   */\n  startSecurityMonitoring() {\n    // Monitor for security events\n    setInterval(() => {\n      this.checkSecurityThreats();\n      this.validateSessions();\n      this.cleanupExpiredData();\n    }, 60000); // Every minute\n\n    // Setup event listeners\n    this.setupSecurityEventListeners();\n  }\n\n  /**\n   * Setup security event listeners\n   */\n  setupSecurityEventListeners() {\n    // Login attempts\n    window.addEventListener('login-attempt', (event) => {\n      this.logSecurityEvent('login_attempt', event.detail);\n    });\n\n    // Data access\n    window.addEventListener('data-access', (event) => {\n      this.logSecurityEvent('data_access', event.detail);\n    });\n\n    // Configuration changes\n    window.addEventListener('config-change', (event) => {\n      this.logSecurityEvent('config_change', event.detail);\n    });\n  }\n\n  /**\n   * Authenticate user with multiple factors\n   */\n  async authenticateUser(credentials) {\n    const attempt = {\n      timestamp: new Date().toISOString(),\n      ip: this.getClientIP(),\n      userAgent: navigator.userAgent,\n      success: false\n    };\n\n    try {\n      // Validate credentials\n      const isValidPassword = await this.validatePassword(credentials.username, credentials.password);\n      if (!isValidPassword) {\n        attempt.reason = 'invalid_credentials';\n        this.logSecurityEvent('login_failed', attempt);\n        throw new Error('Invalid credentials');\n      }\n\n      // Check for account lockout\n      if (this.isAccountLocked(credentials.username)) {\n        attempt.reason = 'account_locked';\n        this.logSecurityEvent('login_blocked', attempt);\n        throw new Error('Account temporarily locked');\n      }\n\n      // Multi-factor authentication\n      if (this.requiresMFA(credentials.username)) {\n        const mfaValid = await this.validateMFA(credentials.username, credentials.mfaCode);\n        if (!mfaValid) {\n          attempt.reason = 'invalid_mfa';\n          this.logSecurityEvent('mfa_failed', attempt);\n          throw new Error('Invalid MFA code');\n        }\n      }\n\n      // Create secure session\n      const session = await this.createSecureSession(credentials.username);\n      attempt.success = true;\n      attempt.sessionId = session.id;\n      \n      this.logSecurityEvent('login_success', attempt);\n      return session;\n\n    } catch (error) {\n      this.incrementFailedAttempts(credentials.username);\n      throw error;\n    }\n  }\n\n  /**\n   * Create secure session\n   */\n  async createSecureSession(username) {\n    const sessionId = CryptoJS.lib.WordArray.random(256/8).toString();\n    const session = {\n      id: sessionId,\n      username,\n      createdAt: new Date().toISOString(),\n      lastActivity: new Date().toISOString(),\n      ip: this.getClientIP(),\n      userAgent: navigator.userAgent,\n      permissions: await this.getUserPermissions(username),\n      isActive: true\n    };\n\n    this.sessions.set(sessionId, session);\n    \n    // Set secure session cookie\n    this.setSecureSessionCookie(sessionId);\n    \n    return session;\n  }\n\n  /**\n   * Validate current session\n   */\n  validateSession(sessionId) {\n    const session = this.sessions.get(sessionId);\n    if (!session || !session.isActive) {\n      return false;\n    }\n\n    const now = new Date();\n    const lastActivity = new Date(session.lastActivity);\n    const policy = this.securityPolicies.get('session');\n\n    // Check session timeout\n    if (now - lastActivity > policy.idleTimeout) {\n      this.terminateSession(sessionId, 'idle_timeout');\n      return false;\n    }\n\n    // Check max duration\n    const sessionStart = new Date(session.createdAt);\n    if (now - sessionStart > policy.maxDuration) {\n      this.terminateSession(sessionId, 'max_duration');\n      return false;\n    }\n\n    // Update last activity\n    session.lastActivity = now.toISOString();\n    this.sessions.set(sessionId, session);\n\n    return true;\n  }\n\n  /**\n   * Encrypt sensitive data\n   */\n  encryptData(data, keyType = 'session') {\n    try {\n      const key = this.encryptionKeys.get(keyType);\n      if (!key) throw new Error('Encryption key not found');\n\n      const encrypted = CryptoJS.AES.encrypt(JSON.stringify(data), key).toString();\n      return encrypted;\n    } catch (error) {\n      console.error('Encryption failed:', error);\n      throw new Error('Failed to encrypt data');\n    }\n  }\n\n  /**\n   * Decrypt sensitive data\n   */\n  decryptData(encryptedData, keyType = 'session') {\n    try {\n      const key = this.encryptionKeys.get(keyType);\n      if (!key) throw new Error('Decryption key not found');\n\n      const bytes = CryptoJS.AES.decrypt(encryptedData, key);\n      const decrypted = bytes.toString(CryptoJS.enc.Utf8);\n      return JSON.parse(decrypted);\n    } catch (error) {\n      console.error('Decryption failed:', error);\n      throw new Error('Failed to decrypt data');\n    }\n  }\n\n  /**\n   * Hash sensitive information\n   */\n  hashData(data, salt = null) {\n    const saltToUse = salt || CryptoJS.lib.WordArray.random(128/8).toString();\n    const hash = CryptoJS.PBKDF2(data, saltToUse, {\n      keySize: 256/32,\n      iterations: 10000\n    });\n    \n    return {\n      hash: hash.toString(),\n      salt: saltToUse\n    };\n  }\n\n  /**\n   * Log security event\n   */\n  logSecurityEvent(type, details) {\n    const event = {\n      id: CryptoJS.lib.WordArray.random(128/8).toString(),\n      type,\n      timestamp: new Date().toISOString(),\n      details: { ...details },\n      severity: this.getEventSeverity(type),\n      source: 'security_service'\n    };\n\n    this.securityEvents.push(event);\n    this.auditLog.push(event);\n\n    // Alert on high-severity events\n    if (event.severity === 'high' || event.severity === 'critical') {\n      this.alertSecurityTeam(event);\n    }\n\n    // Store in persistent audit log\n    this.persistAuditLog();\n  }\n\n  /**\n   * Check for security threats\n   */\n  checkSecurityThreats() {\n    // Check for unusual access patterns\n    this.detectAnomalousAccess();\n    \n    // Check for brute force attempts\n    this.detectBruteForceAttacks();\n    \n    // Check for data exfiltration\n    this.detectDataExfiltration();\n    \n    // Check for privilege escalation\n    this.detectPrivilegeEscalation();\n  }\n\n  /**\n   * Detect anomalous access patterns\n   */\n  detectAnomalousAccess() {\n    const recentEvents = this.securityEvents.filter(\n      event => new Date() - new Date(event.timestamp) < 3600000 // Last hour\n    );\n\n    // Check for multiple failed logins\n    const failedLogins = recentEvents.filter(e => e.type === 'login_failed');\n    if (failedLogins.length > 10) {\n      this.logSecurityEvent('anomalous_access', {\n        pattern: 'multiple_failed_logins',\n        count: failedLogins.length,\n        timeWindow: '1h'\n      });\n    }\n\n    // Check for access from unusual locations\n    const uniqueIPs = new Set(recentEvents.map(e => e.details.ip));\n    if (uniqueIPs.size > 5) {\n      this.logSecurityEvent('anomalous_access', {\n        pattern: 'multiple_ip_addresses',\n        count: uniqueIPs.size,\n        timeWindow: '1h'\n      });\n    }\n  }\n\n  /**\n   * Compliance monitoring and reporting\n   */\n  async runComplianceCheck(regulation = null) {\n    const results = new Map();\n    const regulations = regulation ? [regulation] : Array.from(this.complianceRules.keys());\n\n    for (const reg of regulations) {\n      const rule = this.complianceRules.get(reg);\n      if (!rule) continue;\n\n      const compliance = {\n        regulation: reg,\n        name: rule.name,\n        status: 'compliant',\n        issues: [],\n        recommendations: [],\n        lastChecked: new Date().toISOString()\n      };\n\n      // Check audit trail requirement\n      if (rule.requirements.auditTrail) {\n        const auditCoverage = this.checkAuditTrailCoverage();\n        if (auditCoverage < 0.95) { // 95% coverage required\n          compliance.status = 'non-compliant';\n          compliance.issues.push('Insufficient audit trail coverage');\n          compliance.recommendations.push('Ensure all critical actions are logged');\n        }\n      }\n\n      // Check data retention\n      const retentionCompliance = this.checkDataRetention(rule.retentionPeriod);\n      if (!retentionCompliance) {\n        compliance.status = 'non-compliant';\n        compliance.issues.push('Data retention policy violation');\n        compliance.recommendations.push('Update data retention procedures');\n      }\n\n      // Check access controls\n      if (rule.requirements.accessControls) {\n        const accessCompliance = this.checkAccessControls();\n        if (!accessCompliance) {\n          compliance.status = 'non-compliant';\n          compliance.issues.push('Inadequate access controls');\n          compliance.recommendations.push('Strengthen user access management');\n        }\n      }\n\n      results.set(reg, compliance);\n    }\n\n    // Generate compliance report\n    const report = this.generateComplianceReport(results);\n    this.logSecurityEvent('compliance_check', {\n      regulations: regulations,\n      overallStatus: this.getOverallComplianceStatus(results)\n    });\n\n    return report;\n  }\n\n  /**\n   * Generate security report\n   */\n  async generateSecurityReport(timeframe = '24h') {\n    const now = new Date();\n    const timeframeMs = this.parseTimeframe(timeframe);\n    const startTime = new Date(now - timeframeMs);\n\n    const relevantEvents = this.securityEvents.filter(\n      event => new Date(event.timestamp) >= startTime\n    );\n\n    const report = {\n      period: {\n        start: startTime.toISOString(),\n        end: now.toISOString(),\n        duration: timeframe\n      },\n      summary: {\n        totalEvents: relevantEvents.length,\n        criticalEvents: relevantEvents.filter(e => e.severity === 'critical').length,\n        highSeverityEvents: relevantEvents.filter(e => e.severity === 'high').length,\n        activeSessions: this.getActiveSessions().length,\n        failedLogins: relevantEvents.filter(e => e.type === 'login_failed').length\n      },\n      threatAnalysis: this.analyzeThreatLandscape(relevantEvents),\n      recommendations: this.generateSecurityRecommendations(relevantEvents),\n      complianceStatus: await this.runComplianceCheck()\n    };\n\n    return report;\n  }\n\n  /**\n   * Helper methods\n   */\n  getClientIP() {\n    // In a real implementation, this would get the actual client IP\n    return '127.0.0.1';\n  }\n\n  validatePassword(username, password) {\n    // Mock password validation\n    return password && password.length >= 8;\n  }\n\n  requiresMFA(username) {\n    const policy = this.securityPolicies.get('dataAccess');\n    return policy.requireMFA;\n  }\n\n  validateMFA(username, code) {\n    // Mock MFA validation\n    return code && code.length === 6;\n  }\n\n  isAccountLocked(username) {\n    // Check if account is locked due to failed attempts\n    return false; // Mock implementation\n  }\n\n  incrementFailedAttempts(username) {\n    // Track failed login attempts\n    console.log('Failed login attempt for:', username);\n  }\n\n  getUserPermissions(username) {\n    // Return user permissions\n    return ['read', 'write', 'analyze'];\n  }\n\n  setSecureSessionCookie(sessionId) {\n    const policy = this.securityPolicies.get('session');\n    document.cookie = `session=${sessionId}; secure; httponly; samesite=strict; max-age=${policy.maxDuration/1000}`;\n  }\n\n  terminateSession(sessionId, reason) {\n    const session = this.sessions.get(sessionId);\n    if (session) {\n      session.isActive = false;\n      session.terminatedAt = new Date().toISOString();\n      session.terminationReason = reason;\n      \n      this.logSecurityEvent('session_terminated', {\n        sessionId,\n        reason,\n        duration: new Date() - new Date(session.createdAt)\n      });\n    }\n  }\n\n  getEventSeverity(type) {\n    const severityMap = {\n      login_failed: 'medium',\n      login_blocked: 'high',\n      anomalous_access: 'high',\n      data_breach: 'critical',\n      unauthorized_access: 'critical',\n      session_hijack: 'critical',\n      compliance_violation: 'high'\n    };\n    return severityMap[type] || 'low';\n  }\n\n  alertSecurityTeam(event) {\n    console.warn('SECURITY ALERT:', event);\n    // In production, this would send alerts to security team\n  }\n\n  persistAuditLog() {\n    try {\n      // Keep only recent events in memory\n      const maxEvents = 10000;\n      if (this.auditLog.length > maxEvents) {\n        this.auditLog = this.auditLog.slice(-maxEvents);\n      }\n      \n      // In production, this would persist to secure storage\n      localStorage.setItem('financeanalyst_audit_log', JSON.stringify(this.auditLog.slice(-1000)));\n    } catch (error) {\n      console.error('Failed to persist audit log:', error);\n    }\n  }\n\n  detectBruteForceAttacks() {\n    // Implementation for brute force detection\n  }\n\n  detectDataExfiltration() {\n    // Implementation for data exfiltration detection\n  }\n\n  detectPrivilegeEscalation() {\n    // Implementation for privilege escalation detection\n  }\n\n  checkAuditTrailCoverage() {\n    return 0.98; // Mock 98% coverage\n  }\n\n  checkDataRetention(period) {\n    return true; // Mock compliance\n  }\n\n  checkAccessControls() {\n    return true; // Mock compliance\n  }\n\n  generateComplianceReport(results) {\n    return {\n      summary: `Compliance check completed for ${results.size} regulations`,\n      details: Array.from(results.values()),\n      generatedAt: new Date().toISOString()\n    };\n  }\n\n  getOverallComplianceStatus(results) {\n    const statuses = Array.from(results.values()).map(r => r.status);\n    return statuses.every(s => s === 'compliant') ? 'compliant' : 'non-compliant';\n  }\n\n  parseTimeframe(timeframe) {\n    const units = { h: 3600000, d: 86400000, w: 604800000 };\n    const match = timeframe.match(/^(\\d+)([hdw])$/);\n    return match ? parseInt(match[1]) * units[match[2]] : 86400000;\n  }\n\n  getActiveSessions() {\n    return Array.from(this.sessions.values()).filter(s => s.isActive);\n  }\n\n  analyzeThreatLandscape(events) {\n    return {\n      topThreats: ['brute_force', 'anomalous_access'],\n      riskLevel: 'medium',\n      trends: 'stable'\n    };\n  }\n\n  generateSecurityRecommendations(events) {\n    return [\n      'Enable multi-factor authentication for all users',\n      'Regular security awareness training',\n      'Implement zero-trust architecture'\n    ];\n  }\n\n  validateSessions() {\n    // Validate all active sessions\n    this.sessions.forEach((session, sessionId) => {\n      if (!this.validateSession(sessionId)) {\n        this.terminateSession(sessionId, 'validation_failed');\n      }\n    });\n  }\n\n  cleanupExpiredData() {\n    const now = new Date();\n    const retentionPeriod = 90 * 24 * 60 * 60 * 1000; // 90 days\n    \n    // Clean up old security events\n    this.securityEvents = this.securityEvents.filter(\n      event => now - new Date(event.timestamp) < retentionPeriod\n    );\n    \n    // Clean up old audit log entries\n    this.auditLog = this.auditLog.filter(\n      entry => now - new Date(entry.timestamp) < retentionPeriod\n    );\n  }\n}\n\nexport default new SecurityService();\n","import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Shield, \n  AlertTriangle, \n  Lock, \n  Eye, \n  Users, \n  Activity,\n  CheckCircle,\n  XCircle,\n  Clock,\n  Download,\n  RefreshCw,\n  Settings,\n  TrendingUp,\n  TrendingDown,\n  Minus\n} from 'lucide-react';\nimport securityService from '../../services/securityService';\n\nconst SecurityDashboard = () => {\n  const [securityReport, setSecurityReport] = useState(null);\n  const [complianceStatus, setComplianceStatus] = useState({});\n  const [activeSessions, setActiveSessions] = useState([]);\n  const [securityEvents, setSecurityEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTimeframe, setSelectedTimeframe] = useState('24h');\n  const [activeTab, setActiveTab] = useState('overview');\n\n  useEffect(() => {\n    loadSecurityData();\n    \n    // Auto-refresh every 5 minutes\n    const interval = setInterval(loadSecurityData, 300000);\n    return () => clearInterval(interval);\n  }, [selectedTimeframe]);\n\n  const loadSecurityData = async () => {\n    setIsLoading(true);\n    try {\n      // Load security report\n      const report = await securityService.generateSecurityReport(selectedTimeframe);\n      setSecurityReport(report);\n      \n      // Load compliance status\n      const compliance = await securityService.runComplianceCheck();\n      setComplianceStatus(compliance);\n      \n      // Get active sessions (mock data for demo)\n      const sessions = [\n        {\n          id: 'session_1',\n          username: 'analyst_1',\n          ip: '192.168.1.100',\n          loginTime: new Date(Date.now() - 3600000).toISOString(),\n          lastActivity: new Date(Date.now() - 300000).toISOString(),\n          location: 'New York, NY'\n        },\n        {\n          id: 'session_2',\n          username: 'manager_1',\n          ip: '192.168.1.101',\n          loginTime: new Date(Date.now() - 7200000).toISOString(),\n          lastActivity: new Date(Date.now() - 120000).toISOString(),\n          location: 'San Francisco, CA'\n        }\n      ];\n      setActiveSessions(sessions);\n\n      // Get recent security events (mock data for demo)\n      const events = [\n        {\n          id: 'event_1',\n          type: 'login_success',\n          severity: 'low',\n          timestamp: new Date(Date.now() - 1800000).toISOString(),\n          description: 'Successful login from analyst_1',\n          ip: '192.168.1.100'\n        },\n        {\n          id: 'event_2',\n          type: 'data_access',\n          severity: 'medium',\n          timestamp: new Date(Date.now() - 3600000).toISOString(),\n          description: 'Financial data accessed by manager_1',\n          ip: '192.168.1.101'\n        },\n        {\n          id: 'event_3',\n          type: 'config_change',\n          severity: 'high',\n          timestamp: new Date(Date.now() - 5400000).toISOString(),\n          description: 'Security policy updated',\n          ip: '192.168.1.102'\n        }\n      ];\n      setSecurityEvents(events);\n\n    } catch (error) {\n      console.error('Error loading security data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getSeverityColor = (severity) => {\n    const colors = {\n      low: 'text-green-600 bg-green-100',\n      medium: 'text-yellow-600 bg-yellow-100',\n      high: 'text-orange-600 bg-orange-100',\n      critical: 'text-red-600 bg-red-100'\n    };\n    return colors[severity] || 'text-gray-600 bg-gray-100';\n  };\n\n  const getSeverityIcon = (severity) => {\n    const icons = {\n      low: CheckCircle,\n      medium: Clock,\n      high: AlertTriangle,\n      critical: XCircle\n    };\n    return icons[severity] || Clock;\n  };\n\n  const getComplianceIcon = (status) => {\n    return status === 'compliant' ? CheckCircle : XCircle;\n  };\n\n  const getComplianceColor = (status) => {\n    return status === 'compliant' \n      ? 'text-green-600 bg-green-100' \n      : 'text-red-600 bg-red-100';\n  };\n\n  const exportSecurityReport = () => {\n    const report = {\n      generatedAt: new Date().toISOString(),\n      timeframe: selectedTimeframe,\n      securityReport,\n      complianceStatus,\n      activeSessions,\n      securityEvents\n    };\n    \n    const blob = new Blob([JSON.stringify(report, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `security_report_${new Date().toISOString().split('T')[0]}.json`;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const renderOverviewTab = () => (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      {/* Security Metrics */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n          <Shield className=\"mr-2\" size={24} />\n          Security Metrics\n        </h3>\n        \n        {securityReport && (\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {securityReport.summary.totalEvents}\n              </div>\n              <div className=\"text-sm text-blue-700\">Total Events</div>\n            </div>\n            <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {securityReport.summary.activeSessions}\n              </div>\n              <div className=\"text-sm text-green-700\">Active Sessions</div>\n            </div>\n            <div className=\"text-center p-4 bg-yellow-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-yellow-600\">\n                {securityReport.summary.highSeverityEvents}\n              </div>\n              <div className=\"text-sm text-yellow-700\">High Severity</div>\n            </div>\n            <div className=\"text-center p-4 bg-red-50 rounded-lg\">\n              <div className=\"text-2xl font-bold text-red-600\">\n                {securityReport.summary.criticalEvents}\n              </div>\n              <div className=\"text-sm text-red-700\">Critical Events</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Compliance Status */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n          <CheckCircle className=\"mr-2\" size={24} />\n          Compliance Status\n        </h3>\n        \n        {complianceStatus.details && (\n          <div className=\"space-y-3\">\n            {complianceStatus.details.map((compliance) => {\n              const Icon = getComplianceIcon(compliance.status);\n              return (\n                <div key={compliance.regulation} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                  <div>\n                    <div className=\"font-medium\">{compliance.name}</div>\n                    <div className=\"text-sm text-gray-600\">{compliance.regulation.toUpperCase()}</div>\n                  </div>\n                  <div className={`flex items-center space-x-1 px-2 py-1 rounded-full text-xs ${getComplianceColor(compliance.status)}`}>\n                    <Icon size={14} />\n                    <span className=\"capitalize\">{compliance.status}</span>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n\n      {/* Recent Security Events */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 lg:col-span-2\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n          <Activity className=\"mr-2\" size={24} />\n          Recent Security Events\n        </h3>\n        \n        <div className=\"overflow-hidden\">\n          <div className=\"space-y-3\">\n            {securityEvents.slice(0, 5).map((event) => {\n              const SeverityIcon = getSeverityIcon(event.severity);\n              return (\n                <motion.div\n                  key={event.id}\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\"\n                >\n                  <div className=\"flex items-center space-x-3\">\n                    <div className={`p-2 rounded-lg ${getSeverityColor(event.severity)}`}>\n                      <SeverityIcon size={16} />\n                    </div>\n                    <div>\n                      <div className=\"font-medium\">{event.description}</div>\n                      <div className=\"text-sm text-gray-600\">\n                        {new Date(event.timestamp).toLocaleString()} • {event.ip}\n                      </div>\n                    </div>\n                  </div>\n                  <div className={`px-2 py-1 rounded-full text-xs ${getSeverityColor(event.severity)}`}>\n                    {event.severity.toUpperCase()}\n                  </div>\n                </motion.div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSessionsTab = () => (\n    <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n      <div className=\"p-6 border-b border-gray-200\">\n        <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n          <Users className=\"mr-2\" size={24} />\n          Active Sessions ({activeSessions.length})\n        </h3>\n      </div>\n      \n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                User\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                IP Address\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Location\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Login Time\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Last Activity\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Actions\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {activeSessions.map((session) => (\n              <tr key={session.id} className=\"hover:bg-gray-50\">\n                <td className=\"px-6 py-4 whitespace-nowrap\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-sm font-medium\">\n                      {session.username.charAt(0).toUpperCase()}\n                    </div>\n                    <div className=\"ml-3\">\n                      <div className=\"text-sm font-medium text-gray-900\">{session.username}</div>\n                    </div>\n                  </div>\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  {session.ip}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  {session.location}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  {new Date(session.loginTime).toLocaleString()}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  {new Date(session.lastActivity).toLocaleString()}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                  <button className=\"text-red-600 hover:text-red-900\">\n                    Terminate\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n\n  const renderEventsTab = () => (\n    <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n      <div className=\"p-6 border-b border-gray-200\">\n        <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n          <Eye className=\"mr-2\" size={24} />\n          Security Events ({securityEvents.length})\n        </h3>\n      </div>\n      \n      <div className=\"divide-y divide-gray-200\">\n        {securityEvents.map((event) => {\n          const SeverityIcon = getSeverityIcon(event.severity);\n          return (\n            <div key={event.id} className=\"p-6 hover:bg-gray-50\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex items-start space-x-3\">\n                  <div className={`p-2 rounded-lg ${getSeverityColor(event.severity)}`}>\n                    <SeverityIcon size={20} />\n                  </div>\n                  <div>\n                    <h4 className=\"font-medium text-gray-900\">{event.description}</h4>\n                    <div className=\"text-sm text-gray-600 mt-1\">\n                      Type: {event.type.replace('_', ' ')} • IP: {event.ip}\n                    </div>\n                    <div className=\"text-xs text-gray-500 mt-1\">\n                      {new Date(event.timestamp).toLocaleString()}\n                    </div>\n                  </div>\n                </div>\n                <div className={`px-3 py-1 rounded-full text-xs font-medium ${getSeverityColor(event.severity)}`}>\n                  {event.severity.toUpperCase()}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <RefreshCw className=\"animate-spin\" size={32} />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 flex items-center\">\n            <Shield className=\"mr-3 text-blue-600\" size={36} />\n            Security Dashboard\n          </h1>\n          <p className=\"text-gray-600 mt-1\">\n            Monitor security events, compliance status, and system access\n          </p>\n        </div>\n        \n        <div className=\"flex items-center space-x-3\">\n          <select\n            value={selectedTimeframe}\n            onChange={(e) => setSelectedTimeframe(e.target.value)}\n            className=\"px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500\"\n          >\n            <option value=\"1h\">Last Hour</option>\n            <option value=\"24h\">Last 24 Hours</option>\n            <option value=\"7d\">Last 7 Days</option>\n            <option value=\"30d\">Last 30 Days</option>\n          </select>\n          \n          <button\n            onClick={loadSecurityData}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors\"\n          >\n            <RefreshCw size={16} />\n            <span>Refresh</span>\n          </button>\n          \n          <button\n            onClick={exportSecurityReport}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            <Download size={16} />\n            <span>Export Report</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200\">\n        <nav className=\"-mb-px flex space-x-8\">\n          {[\n            { id: 'overview', name: 'Overview', icon: Activity },\n            { id: 'sessions', name: 'Active Sessions', icon: Users },\n            { id: 'events', name: 'Security Events', icon: Eye }\n          ].map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm transition-colors ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <Icon size={16} />\n                <span>{tab.name}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Tab Content */}\n      <AnimatePresence mode=\"wait\">\n        <motion.div\n          key={activeTab}\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0, y: -20 }}\n          transition={{ duration: 0.2 }}\n        >\n          {activeTab === 'overview' && renderOverviewTab()}\n          {activeTab === 'sessions' && renderSessionsTab()}\n          {activeTab === 'events' && renderEventsTab()}\n        </motion.div>\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default SecurityDashboard;\n","import React, { useState } from 'react';\nimport { Settings as SettingsIcon, User, Shield, Bell, Palette } from 'lucide-react';\nimport Header from '../components/ui/Header';\nimport SEOHead from '../components/SEO/SEOHead';\nimport UserPreferences from '../components/Settings/UserPreferences';\nimport SecurityDashboard from '../components/Security/SecurityDashboard';\nimport { Card } from '../components/ui/Card';\n\nconst Settings = () => {\n  const [activeTab, setActiveTab] = useState('preferences');\n\n  const tabs = [\n    { id: 'preferences', label: 'User Preferences', icon: User },\n    { id: 'security', label: 'Security & Access', icon: Shield },\n    { id: 'notifications', label: 'Notifications', icon: Bell },\n    { id: 'appearance', label: 'Appearance', icon: Palette }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-slate-50 dark:bg-slate-900\">\n      <SEOHead\n        title=\"Settings & Preferences | FinanceAnalyst Pro\"\n        description=\"Configure your user preferences, security settings, notifications, and platform customizations for optimal workflow and compliance.\"\n        canonical=\"/settings\"\n        keywords=\"user settings, security preferences, platform configuration, compliance settings, notifications, customization\"\n      />\n      \n      <Header />\n\n      <main className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n        {/* Page Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center mb-4\">\n            <SettingsIcon className=\"w-8 h-8 text-purple-600 mr-3\" />\n            <h1 className=\"text-3xl font-bold text-slate-900 dark:text-white\">\n              Settings & Preferences\n            </h1>\n          </div>\n          <p className=\"text-slate-600 dark:text-slate-400 max-w-3xl\">\n            Configure your workspace, security settings, and preferences to optimize your financial analysis workflow.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Sidebar Navigation */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"p-0 overflow-hidden\">\n              <nav className=\"space-y-1\">\n                {tabs.map((tab) => {\n                  const Icon = tab.icon;\n                  return (\n                    <button\n                      key={tab.id}\n                      onClick={() => setActiveTab(tab.id)}\n                      className={`w-full flex items-center px-4 py-3 text-sm font-medium transition-colors ${\n                        activeTab === tab.id\n                          ? 'bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300 border-r-2 border-blue-600'\n                          : 'text-slate-600 dark:text-slate-400 hover:bg-slate-50 dark:hover:bg-slate-700 hover:text-slate-900 dark:hover:text-slate-200'\n                      }`}\n                    >\n                      <Icon className=\"w-5 h-5 mr-3\" />\n                      {tab.label}\n                    </button>\n                  );\n                })}\n              </nav>\n            </Card>\n          </div>\n\n          {/* Content Area */}\n          <div className=\"lg:col-span-3\">\n            {activeTab === 'preferences' && (\n              <Card className=\"p-6\">\n                <h2 className=\"text-xl font-semibold text-slate-900 dark:text-white mb-6\">\n                  User Preferences\n                </h2>\n                <UserPreferences />\n              </Card>\n            )}\n\n            {activeTab === 'security' && (\n              <Card className=\"p-6\">\n                <h2 className=\"text-xl font-semibold text-slate-900 dark:text-white mb-6\">\n                  Security & Access Control\n                </h2>\n                <SecurityDashboard />\n              </Card>\n            )}\n\n            {activeTab === 'notifications' && (\n              <Card className=\"p-6\">\n                <h2 className=\"text-xl font-semibold text-slate-900 dark:text-white mb-6\">\n                  Notification Preferences\n                </h2>\n                <div className=\"space-y-4\">\n                  <div className=\"text-slate-600 dark:text-slate-400\">\n                    Configure alerts, email notifications, and system messages.\n                  </div>\n                  {/* Notification settings will be implemented */}\n                  <div className=\"bg-slate-100 dark:bg-slate-700 rounded-lg p-4 text-center text-slate-500 dark:text-slate-400\">\n                    Notification settings coming soon\n                  </div>\n                </div>\n              </Card>\n            )}\n\n            {activeTab === 'appearance' && (\n              <Card className=\"p-6\">\n                <h2 className=\"text-xl font-semibold text-slate-900 dark:text-white mb-6\">\n                  Appearance & Theme\n                </h2>\n                <div className=\"space-y-4\">\n                  <div className=\"text-slate-600 dark:text-slate-400\">\n                    Customize the platform appearance, themes, and layout preferences.\n                  </div>\n                  {/* Appearance settings will be implemented */}\n                  <div className=\"bg-slate-100 dark:bg-slate-700 rounded-lg p-4 text-center text-slate-500 dark:text-slate-400\">\n                    Appearance settings coming soon\n                  </div>\n                </div>\n              </Card>\n            )}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Settings;"],"names":["userPreferencesService","constructor","this","preferences","Map","workspaces","themes","layouts","shortcuts","isInitialized","defaultPreferences","theme","fontSize","density","colorScheme","animations","defaultView","sidebarCollapsed","gridSize","widgetAnimations","autoSaveInterval","currency","dateFormat","numberFormat","precision","autoRefreshData","refreshInterval","enableNotifications","emailNotifications","soundEffects","pushNotifications","defaultTimeHorizon","riskFreeRate","marketRiskPremium","defaultDiscountRate","confidenceLevel","shareByDefault","allowComments","trackChanges","notifyOnChanges","enableCaching","offlineMode","dataValidation","autoBackup","keyboardShortcuts","mouseNavigation","touchGestures","commandPalette","initializeService","loadUserPreferences","loadWorkspaceConfigurations","initializeThemes","initializeLayouts","setupAutoSave","error","storedPrefs","localStorage","getItem","parsed","JSON","parse","set","lastUpdated","Date","toISOString","createdAt","storedWorkspaces","Object","entries","forEach","id","workspace","has","createDefaultWorkspace","light","name","colors","primary","secondary","accent","background","surface","text","border","shadows","borderRadius","dark","professional","high_contrast","dashboard","grid","rows","cols","widgets","x","y","w","h","analysis","research","minimal","layout","interval","getPreferences","setInterval","saveToStorage","window","addEventListener","get","updatePreferences","updates","updated","applyPreferences","resetPreferences","reset","defaultWorkspace","pinnedItems","quickAccess","icon","customizations","showWelcome","compactMode","showTips","lastAccessed","createWorkspace","config","now","updateWorkspace","Error","deleteWorkspace","delete","getWorkspace","getWorkspaces","Array","from","values","switchWorkspace","currentWorkspace","getThemes","getTheme","getLayouts","getLayout","applyTheme","applyFontSize","applyAnimationSettings","enableKeyboardShortcuts","dispatchEvent","CustomEvent","detail","themeId","root","document","documentElement","key","value","style","setProperty","body","className","replace","classList","add","size","sizes","small","medium","large","extra_large","remove","enabled","toggle","removeProperty","prefs","setItem","stringify","workspacesObj","exportSettings","exportedAt","version","importSettings","settings","getPreferenceCategories","appearance","data","notifications","modeling","collaboration","performance","navigation","UserPreferences","isOpen","onClose","setPreferences","useState","activeCategory","setActiveCategory","hasChanges","setHasChanges","categories","setCategories","setThemes","isLoading","setIsLoading","isSaving","setIsSaving","useEffect","loadPreferences","async","cats","availableThemes","updatePreference","savePreferences","type","message","duration","getCategoryIcon","categoryKey","Palette","Layout","Database","Bell","Calculator","Users","Zap","Navigation","Settings","renderPreferenceInput","inputProps","onChange","e","target","jsx","children","map","jsxs","step","includes","min","max","parseFloat","checked","AnimatePresence","motion","div","initial","opacity","animate","exit","onClick","scale","stopPropagation","button","whileHover","whileTap","disabled","RefreshCw","Save","X","category","Icon","blob","Blob","url","URL","createObjectURL","link","createElement","href","download","split","click","revokeObjectURL","Download","Upload","accept","event","file","files","reader","FileReader","onload","result","readAsText","confirm","RotateCcw","React","toLowerCase","prefKey","str","toUpperCase","securityService","sessions","auditLog","securityPolicies","complianceRules","threats","accessControls","encryptionKeys","securityEvents","setupDefaultPolicies","setupComplianceRules","initializeEncryption","startSecurityMonitoring","minLength","requireUppercase","requireLowercase","requireNumbers","requireSpecialChars","maxAge","preventReuse","lockoutThreshold","lockoutDuration","maxDuration","idleTimeout","requireReauth","secureCookies","httpOnly","sameSite","requireMFA","logAllAccess","maskSensitiveData","requireApproval","retentionPeriod","rateLimiting","requestsPerMinute","requireAuthentication","validateInput","encryptPayload","logRequests","allowedTypes","maxFileSize","virusScanning","encryptStorage","requirements","auditTrail","dataIntegrity","changeManagement","periodicReview","auditFrequency","dataMinimization","consentManagement","rightToErasure","dataPortability","breachNotification","privacyByDesign","recordKeeping","reportingAccuracy","insiderTrading","marketManipulation","clientProtection","communicationMonitoring","tradingSurveillance","riskManagement","customerProtection","masterKey","CryptoJS","lib","WordArray","random","toString","generateSessionKey","sessionKey","checkSecurityThreats","validateSessions","cleanupExpiredData","setupSecurityEventListeners","logSecurityEvent","authenticateUser","credentials","attempt","timestamp","ip","getClientIP","userAgent","navigator","success","validatePassword","username","password","reason","isAccountLocked","requiresMFA","validateMFA","mfaCode","session","createSecureSession","sessionId","incrementFailedAttempts","lastActivity","permissions","getUserPermissions","isActive","setSecureSessionCookie","validateSession","policy","terminateSession","encryptData","keyType","AES","encrypt","decryptData","encryptedData","decrypted","decrypt","enc","Utf8","hashData","salt","saltToUse","hash","PBKDF2","keySize","iterations","details","severity","getEventSeverity","source","push","alertSecurityTeam","persistAuditLog","detectAnomalousAccess","detectBruteForceAttacks","detectDataExfiltration","detectPrivilegeEscalation","recentEvents","filter","failedLogins","length","pattern","count","timeWindow","uniqueIPs","Set","runComplianceCheck","regulation","results","regulations","keys","reg","rule","compliance","status","issues","recommendations","lastChecked","checkAuditTrailCoverage","checkDataRetention","checkAccessControls","report","generateComplianceReport","overallStatus","getOverallComplianceStatus","generateSecurityReport","timeframe","timeframeMs","parseTimeframe","startTime","relevantEvents","period","start","end","summary","totalEvents","criticalEvents","highSeverityEvents","activeSessions","getActiveSessions","threatAnalysis","analyzeThreatLandscape","generateSecurityRecommendations","complianceStatus","code","cookie","terminatedAt","terminationReason","login_failed","login_blocked","anomalous_access","data_breach","unauthorized_access","session_hijack","compliance_violation","maxEvents","slice","generatedAt","r","every","s","match","parseInt","d","events","topThreats","riskLevel","trends","entry","SecurityDashboard","securityReport","setSecurityReport","setComplianceStatus","setActiveSessions","setSecurityEvents","selectedTimeframe","setSelectedTimeframe","activeTab","setActiveTab","loadSecurityData","clearInterval","loginTime","location","description","getSeverityColor","low","high","critical","getSeverityIcon","CheckCircle","Clock","AlertTriangle","XCircle","getComplianceColor","Shield","Activity","Eye","tab","mode","transition","SeverityIcon","toLocaleString","charAt","tabs","label","User","SEOHead","title","canonical","keywords","Header","SettingsIcon","Card"],"mappings":"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"}