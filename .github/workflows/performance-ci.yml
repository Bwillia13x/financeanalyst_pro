name: Performance CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lighthouse:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x

    - name: Run Lighthouse CI
      run: lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-results
        path: lighthouse-reports/
        retention-days: 30

  bundle-analysis:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build and analyze bundle
      run: |
        npm run build
        npx vite-bundle-analyzer --mode json > bundle-analysis.json

    - name: Check bundle size
      run: |
        echo "Checking bundle sizes against budgets..."
        node scripts/check-bundle-budget.js

    - name: Upload bundle analysis
      uses: actions/upload-artifact@v4
      with:
        name: bundle-analysis
        path: bundle-analysis.json

  security-audit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level moderate

    - name: Check for high/critical vulnerabilities
      run: |
        if npm audit --audit-level high --json | jq -e '.metadata.vulnerabilities.high > 0 or .metadata.vulnerabilities.critical > 0'; then
          echo "High or critical vulnerabilities found!"
          exit 1
        fi

  accessibility-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Start server
      run: npm run preview &

    - name: Wait for server
      run: npx wait-on http://localhost:4173

    - name: Run accessibility tests
      run: |
        npx @axe-core/cli http://localhost:4173
        npx @axe-core/cli http://localhost:4173/valuation-tool
        npx @axe-core/cli http://localhost:4173/private-analysis

  performance-regression:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout base branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.base_ref }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies (base)
      run: npm ci

    - name: Build application (base)
      run: npm run build

    - name: Run Lighthouse (base)
      run: |
        npm install -g @lhci/cli@0.12.x
        lhci autorun --config lighthouse.config.js --upload.target=filesystem --upload.outputDir=./base-results

    - name: Checkout PR branch
      uses: actions/checkout@v4

    - name: Install dependencies (PR)
      run: npm ci

    - name: Build application (PR)
      run: npm run build

    - name: Run Lighthouse (PR)
      run: lhci autorun --config lighthouse.config.js --upload.target=filesystem --upload.outputDir=./pr-results

    - name: Compare performance
      run: |
        echo "Performance comparison between base and PR"
        node scripts/compare-lighthouse-results.js base-results pr-results

    - name: Comment PR with results
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('performance-diff.md')) {
            const diff = fs.readFileSync('performance-diff.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: diff
            });
          }