#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "ðŸš€ Running pre-push quality assurance..."
echo "=========================================="

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    printf "${BLUE}[INFO]${NC} %s\n" "$1"
}

print_success() {
    printf "${GREEN}[SUCCESS]${NC} %s\n" "$1"
}

print_error() {
    printf "${RED}[ERROR]${NC} %s\n" "$1"
}

print_warning() {
    printf "${YELLOW}[WARNING]${NC} %s\n" "$1"
}

# Run comprehensive tests
print_status "ðŸ§ª Running tests before push..."
npm run test:run
if [ $? -ne 0 ]; then
    print_error "Tests failed! Please fix all test failures before pushing."
    print_error "Run 'npm run test:run' to see detailed test results."
    exit 1
fi
print_success "All tests passed!"

# Run build to ensure everything compiles
print_status "ðŸ”¨ Running build to ensure everything compiles..."
npm run build
if [ $? -ne 0 ]; then
    print_error "Build failed! Please fix build errors before pushing."
    print_error "Run 'npm run build' to see detailed build errors."
    exit 1
fi
print_success "Build successful!"

# Additional security check with higher threshold
print_status "ðŸ”’ Running comprehensive security audit..."
npm audit --audit-level=high
if [ $? -ne 0 ]; then
    print_error "High/critical security vulnerabilities found! Please resolve before pushing."
    print_error "Run 'npm audit' to see detailed security report."
    exit 1
fi
print_success "Security audit passed!"

echo "=========================================="
print_success "âœ¨ Pre-push quality assurance passed!"
print_success "Your code is ready for push! ðŸš€"