{
  "name": "valor-ivx",
  "version": "0.1.0",
  "type": "module",
  "private": true,
  "dependencies": {
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@radix-ui/react-slot": "^1.2.3",
    "@reduxjs/toolkit": "^2.6.1",
    "@sentry/browser": "^9.39.0",
    "@sentry/react": "^10.5.0",
    "axios": "^1.8.4",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "core-js": "^3.35.0",
    "crypto-js": "^4.2.0",
    "exceljs": "^4.4.0",
    "framer-motion": "^10.16.4",
    "jspdf": "^3.0.1",
    "jspdf-autotable": "^5.0.2",
    "lucide-react": "^0.484.0",
    "openai": "^5.12.2",
    "pptxgenjs": "^4.0.1",
    "promise-polyfill": "^8.3.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-helmet": "^6.1.0",
    "react-helmet-async": "^2.0.5",
    "react-hook-form": "^7.55.0",
    "react-redux": "^9.2.0",
    "react-router-dom": "^6.26.0",
    "react-window": "^1.8.11",
    "react-window-infinite-loader": "^1.0.10",
    "recharts": "^2.15.4",
    "regenerator-runtime": "^0.14.1",
    "tailwind-merge": "^3.3.1",
    "web-vitals": "^5.1.0",
    "whatwg-fetch": "^3.6.20"
  },
  "scripts": {
    "start": "vite",
    "dev": "vite --mode development",
    "build": "vite build --sourcemap",
    "build:prod": "NODE_ENV=production vite build --mode production",
    "prebuild:prod": "npm run icons:generate || true",
    "build:staging": "NODE_ENV=staging vite build --mode staging",
    "build:qa": "NODE_ENV=qa vite build --mode qa",
    "build:analyze": "npm run build:prod && npx vite-bundle-analyzer dist/assets/*.js",
    "serve": "vite preview --host 127.0.0.1",
    "preview": "vite preview --host 127.0.0.1 --port 4173",
    "preview:with-backend:ci": "concurrently -k -s first -n backend,web \"npm:backend\" \"vite preview --host 127.0.0.1 --port 4173\"",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:run": "vitest run",
    "test:coverage": "vitest run --coverage",
    "test:unit": "vitest run src/test/unit/ --coverage",
    "test:integration": "vitest run src/test/integration/ --coverage",
    "test:e2e": "playwright test",
    "test:smoke": "playwright test --grep @smoke",
    "test:smoke:devnav": "PW_USE_DEV_SERVER=1 PW_BASE_URL=http://localhost:5173 playwright test tests/e2e/dev-nav-smoke.spec.ts",
    "test:smoke:admin": "PW_USE_DEV_SERVER=1 PW_BASE_URL=http://localhost:5173 playwright test tests/e2e/admin-login-ai-log.spec.ts",
    "test:critical": "playwright test --grep @critical",
    "test:comprehensive": "node test-production-validation.js",
    "test:cli": "node test-cli-commands.js",
    "test:security": "node test-cli-security.js",
    "test:performance": "node test-cli-commands.js && node test-production-validation.js",
    "test:full-suite": "npm run test:comprehensive && npm run test:cli && npm run test:security",
    "test:ci": "npm run test:unit && npm run test:integration && npm run test:smoke",
    "test:watch": "vitest --watch",
    "test:debug": "vitest --inspect-brk",
    "lint": "eslint src --ext .js,.jsx --report-unused-disable-directives",
    "lint:strict": "eslint src --ext .js,.jsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint src --ext .js,.jsx --fix",
    "format": "prettier --write \"src/**/*.{js,jsx,css,md}\"",
    "format:check": "prettier --check \"src/**/*.{js,jsx,css,md}\"",
    "type-check": "echo 'TypeScript not configured - using JSDoc types'",
    "quality:check": "npm run lint && npm run format:check && npm audit --audit-level=moderate",
    "quality:fix": "npm run lint:fix && npm run format",
    "quality:audit": "npm run quality:check && npm run test:security",
    "build:all": "npm run quality:check && npm run test:run && npm run build:prod",
    "build:docker": "docker build -t financeanalyst-pro:latest .",
    "build:docker:prod": "docker build -t financeanalyst-pro:$(git rev-parse --short HEAD) -f Dockerfile.prod .",
    "deploy:staging": "npm run build:staging && node scripts/deploy-staging.js",
    "deploy:production": "npm run build:prod && node scripts/deploy-production.js",
    "deploy:rollback": "node scripts/rollback.js",
    "deploy:status": "node scripts/deployment-status.js",
    "docker:build": "docker build -t financeanalyst-pro .",
    "docker:run": "docker run -p 3000:3000 financeanalyst-pro",
    "docker:push": "docker tag financeanalyst-pro financeanalyst-pro:$(git rev-parse --short HEAD) && docker push financeanalyst-pro:$(git rev-parse --short HEAD)",
    "ci:build": "npm ci && npm run quality:check && npm run test:ci && npm run build:prod",
    "ci:test": "npm run test:full-suite",
    "ci:perf": "npm run build:prod && (npm run preview:with-backend:ci &) && npx wait-on http://127.0.0.1:4173 && npm run perf:audit",
    "ci:full": "npm run ci:test && npm run ci:perf && npm run size:check",
    "ci:deploy:staging": "npm run ci:build && npm run deploy:staging",
    "ci:deploy:production": "npm run ci:test && npm run deploy:production",
    "perf:check": "npm run build:prod && lighthouse http://localhost:4173 --output json --output-path perf-results.json",
    "perf:audit": "npm run perf:check && npm run budget:check",
    "budget:check": "node scripts/budget-check.js perf-results.json",
    "perf:audit:local": "node scripts/perf-audit-local.js",
    "cache:warmup": "node scripts/cache-warmup.js",
    "icons:generate": "node scripts/generate-icons.js || echo 'Install sharp and run again'",
    "analyze:bundle": "npm run build:analyze",
    "a11y:local": "npm run build:prod && (npm run preview -- --port 4173 &) && npx wait-on http://localhost:4173 && npx @axe-core/cli http://localhost:4173 && npx @axe-core/cli http://localhost:4173/analytics && npx @axe-core/cli http://localhost:4173/performance || true",
    "a11y:offline": "node scripts/a11y-offline-smoke.js",
    "size:budget": "node scripts/check-js-budget.js",
    "size:chunks": "node scripts/check-chunk-budgets.js",
    "size:check": "npm run build:prod && npx bundlesize",
    "security:audit": "npm audit --audit-level=high && node scripts/security-audit.js",
    "clean": "rm -rf dist coverage lighthouse-report.html *.log",
    "clean:all": "npm run clean && rm -rf node_modules",
    "clean:install": "npm run clean:all && npm install",
    "predeploy": "npm run quality:audit && npm run test:full-suite && npm run perf:audit",
    "postdeploy": "npm run deploy:status",
    "release:create": "node scripts/create-release.js",
    "release:publish": "npm run build:prod && npm run release:create",
    "release:patch": "npm version patch && npm run release:publish",
    "release:minor": "npm version minor && npm run release:publish",
    "release:major": "npm version major && npm run release:publish",
    "monitor:health": "node scripts/health-check.js",
    "monitor:metrics": "node scripts/collect-metrics.js",
    "monitor:alerts": "node scripts/check-alerts.js",
    "backup:create": "node scripts/create-backup.js",
    "backup:restore": "node scripts/restore-backup.js",
    "backup:list": "node scripts/list-backups.js",
    "maintenance:enable": "node scripts/maintenance-mode.js enable",
    "maintenance:disable": "node scripts/maintenance-mode.js disable",
    "logs:tail": "tail -f logs/application.log",
    "logs:search": "node scripts/search-logs.js",
    "logs:archive": "node scripts/archive-logs.js",
    "db:migrate": "node scripts/database-migrate.js",
    "db:backup": "node scripts/database-backup.js",
    "db:restore": "node scripts/database-restore.js",
    "config:validate": "node scripts/validate-config.js",
    "config:diff": "node scripts/config-diff.js",
    "support:diagnostics": "node scripts/diagnostics.js",
    "support:info": "node scripts/system-info.js",
    "setup:dev": "npm run clean:install && npm run config:validate",
    "setup:staging": "npm run clean:install && NODE_ENV=staging npm run config:validate",
    "setup:production": "npm run clean:install && NODE_ENV=production npm run config:validate",
    "env:check": "node scripts/check-environment.js",
    "env:setup": "node scripts/setup-environment.js",
    "start:with-backend": "concurrently \"npm run dev\" \"node backend/app.js\""
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "engines": {
    "node": "^20.19.0 || >=22.12.0"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@axe-core/react": "^4.10.2",
    "@eslint/js": "^9.31.0",
    "@playwright/test": "^1.47.2",
    "@tailwindcss/aspect-ratio": "^0.4.2",
    "@tailwindcss/container-queries": "^0.1.1",
    "@tailwindcss/line-clamp": "^0.1.0",
    "@tailwindcss/typography": "^0.5.16",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/node": "^24.3.0",
    "@types/react": "^18.3.12",
    "@types/react-dom": "^18.3.1",
    "@vitejs/plugin-react": "^4.6.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "autocannon": "^8.0.0",
    "autoprefixer": "10.4.2",
    "axe-core": "^4.10.3",
    "concurrently": "^8.2.2",
    "cypress": "^14.5.4",
    "cypress-real-events": "^1.14.0",
    "eslint": "^9.33.0",
    "eslint-import-resolver-alias": "^1.1.2",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "jest": "^30.1.1",
    "jest-axe": "^10.0.0",
    "jest-canvas-mock": "^2.5.2",
    "jest-environment-jsdom": "^30.1.1",
    "jsdom": "^26.1.0",
    "lighthouse": "^12.8.2",
    "postcss": "^8.5.6",
    "prettier": "^3.6.2",
    "puppeteer": "^24.17.1",
    "sharp": "^0.33.5",
    "tailwindcss": "3.4.6",
    "terser": "^5.43.1",
    "typescript": "^5.9.2",
    "vite": "^6.0.4",
    "vite-tsconfig-paths": "3.6.0",
    "vitest": "^3.2.4"
  }
}
